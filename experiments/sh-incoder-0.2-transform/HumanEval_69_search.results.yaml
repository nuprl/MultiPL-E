language: sh
name: HumanEval_69_search
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ num\n    local numFreq\n    local numIndex\n    local numStr\n    local numStrFreq\n\
    \    local numStrIndex\n    local numStrStr\n    local numStrStrFreq\n    local\
    \ numStrStrIndex\n    local numStrStrStr\n    local numStrStrStrFreq\n    local\
    \ numStrStrStrIndex\n    local numStrStrStrFreq\n    local numStrStrStrIndex\n\
    \    local numStrStrStrFreq\n    local numStrStrStrIndex\n    local numStrStrStrFreq\n\
    \    local numStrStrStrIndex\n    local numStrStrStrFreq\n    local numStrStrStrIndex\n\
    \    local numStrStrStrFreq\n    local numStrStrStrIndex\n    local numStrStrStrFreq\n\
    \    local numStrStrStrIndex\n    local numStrStrStrFreq\n    local numStrStrStrIndex\n\
    \    local numStrStrStrFreq\n    local numStrStrStrIndex\n    local numStrStrStrFreq\n\
    \    local numStrStrStrIndex\n    local numStrStrStrFreq\n    local numStrStrStrIndex\n\
    \    local numStrStrStrFreq\n    local numStrStrStrIndex\n    local numStrStrStrFreq\n\
    \    local numStrStrStrIndex\n    local numStrStrStrFreq\n    local numStrStrStrIndex\n\
    \    local numStrStrStrFreq\n    local numStrStrStrIndex\n    local numStrStrStrFreq\n\
    \    local numStrStrStrIndex\n    local numStrStrStrFreq\n    local numStrStrStrIndex\n\
    \    local numStrStrStrFreq\n    local numStrStrStrIndex\n    local numStrStrStrFreq\n\
    \    local numStrStrStrIndex\n    local numStrStrStrFreq\n    local numStrStrStrIndex\n\
    \    local numStrStrStrFreq\n    local numStrStrStrIndex\n    local numStrStrStrFreq\n\
    \    local numStrStrStrIndex\n    local numStrStrStrFreq\n    local numStrStrStrIndex\n\
    \    local numStrStrStrFreq\n    local numStrStrStrIndex\n    local numStrStrStrFreq\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    for (( i=0; i<${#list}; i++ )); do\n  \
    \      local freq=$(echo \"${list}\" | cut -d\" \" -f$i | sort | uniq -c | sort\
    \ -nr | head -1)\n        if [[ ${freq} -gt ${maxfreq} ]]; then\n            max=$(echo\
    \ \"${list}\" | cut -d\" \" -f$i | sort | uniq -c | sort -nr | head -1)\n    \
    \        maxfreq=${freq}\n        fi\n    done\n    echo \"${max}\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmp80v0u79z.sh: line 22: [[: 1 5: syntax error in expression (error token
    is "5")

    /tmp/tmp80v0u79z.sh: line 22: [[: 1 5: syntax error in expression (error token
    is "5")

    /tmp/tmp80v0u79z.sh: line 22: [[: 1 5: syntax error in expression (error token
    is "5")

    /tmp/tmp80v0u79z.sh: line 22: [[: 1 5: syntax error in expression (error token
    is "5")

    /tmp/tmp80v0u79z.sh: line 22: [[: 1 1: syntax error in expression (error token
    is "1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local freq\n    local i\n    local j\n    local maxfreq\n    local maxidx\n\
    \    local maxval\n    local maxidx2\n    local maxval2\n    local maxidx3\n \
    \   local maxval3\n    local maxidx4\n    local maxval4\n    local maxidx5\n \
    \   local maxval5\n    local maxidx6\n    local maxval6\n    local maxidx7\n \
    \   local maxval7\n    local maxidx8\n    local maxval8\n    local maxidx9\n \
    \   local maxval9\n    local maxidx10\n    local maxval10\n    local maxidx11\n\
    \    local maxval11\n    local maxidx12\n    local maxval12\n    local maxidx13\n\
    \    local maxval13\n    local maxidx14\n    local maxval14\n    local maxidx15\n\
    \    local maxval15\n    local maxidx16\n    local maxval16\n    local maxidx17\n\
    \    local maxval17\n    local maxidx18\n    local maxval18\n    local maxidx19\n\
    \    local maxval19\n    local maxidx20\n    local maxval20\n    local maxidx21\n\
    \    local maxval21\n    local maxidx22\n    local maxval22\n    local maxidx23\n\
    \    local maxval23\n    local maxidx24\n    local maxval24\n    local maxidx25\n\
    \    local maxval25\n    local maxidx26\n    local maxval26\n    local maxidx27\n\
    \    local maxval27\n    local maxidx28\n    local maxval28\n    local maxidx29\n\
    \    local maxval29\n    local maxidx30\n    local maxval30\n    local maxidx31\n\
    \    local maxval31\n    local maxidx32\n    local maxval32\n    local maxidx33\n\
    \    local maxval33\n    local maxidx34\n    local maxval34\n    local maxidx35\n\
    \    local maxval35\n    local maxidx36\n    local maxval36\n    local maxidx37\n\
    \    local maxval37\n    local maxidx38\n    local maxval38\n    local maxidx39\n\
    \    local maxval39\n    local maxidx40\n    local maxval40\n    local maxidx41\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxFreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmpFreq\n    local tmpList\n    local tmpMax\n    local tmpMaxFreq\n\
    \    local tmpI\n    local tmpJ\n    local tmpFreq\n    local tmpTmp\n    local\
    \ tmpTmpFreq\n    local tmpTmpList\n    local tmpTmpMax\n    local tmpTmpMaxFreq\n\
    \    local tmpTmpI\n    local tmpTmpJ\n    local tmpTmpFreq\n    local tmpTmpTmp\n\
    \    local tmpTmpTmpFreq\n    local tmpTmpTmpList\n    local tmpTmpTmpMax\n  \
    \  local tmpTmpTmpMaxFreq\n    local tmpTmpTmpI\n    local tmpTmpTmpJ\n    local\
    \ tmpTmpTmpFreq\n    local tmpTmpTmpTmp\n    local tmpTmpTmpTmpFreq\n    local\
    \ tmpTmpTmpTmpList\n    local tmpTmpTmpTmpMax\n    local tmpTmpTmpTmpMaxFreq\n\
    \    local tmpTmpTmpTmpI\n    local tmpTmpTmpTmpJ\n    local tmpTmpTmpTmpFreq\n\
    \    local tmpTmpTmpTmpTmp\n    local tmpTmpTmpTmpTmpFreq\n    local tmpTmpTmpTmpTmpList\n\
    \    local tmpTmpTmpTmpTmpMax\n    local tmpTmpTmpTmpTmpMaxFreq\n    local tmpTmpTmpTmpTmpI\n\
    \    local tmpTmpTmpTmpTmpJ\n    local tmpTmpTmpTmpTmpFreq\n    local tmpTmpTmpTmpTmpTmp\n\
    \    local tmpTmpTmpTmpTmpTmpFreq\n    local tmpTmpTmpTmpTmpTmpList\n    local\
    \ tmpTmpTmpTmpTmpTmpMax\n    local tmpTmpTmpTmpTmpTmpMaxFreq\n    local tmpTmpTmpTmpTmpTmpI\n\
    \    local tmpTmpTmpTmpTmpTmpJ\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=$2\n\
    \    local freq\n    local i\n    local j\n    local k\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp\n}\n\
    \ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprq9wgb5g.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=$1\n    for i in $1 \n    do\n        ((freq++))\n        if ((freq >\
    \ max))\n        then\n            max=$i\n        fi\n    done\n    if ((freq\
    \ == 0))\n    then\n        echo \"-1\"\n    else\n        echo \"$max\"\n   \
    \ fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx0q7qk4z.sh: line 22: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpx0q7qk4z.sh: line 22: ((: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpx0q7qk4z.sh: line 22: ((: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpx0q7qk4z.sh: line 22: ((: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpx0q7qk4z.sh: line 22: ((: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max\n\
    \    local count\n    local i\n    local j\n    local freq\n    local tmp\n  \
    \  local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for (( i=0; i<${#list}; i++ )); do\n     \
    \   if [[ ${list[i]} -gt 0 ]]; then\n            freq=$(( ${freq} + 1 ))\n   \
    \         if [[ ${list[i]} -gt ${max} ]]; then\n                max=${list[i]}\n\
    \            fi\n        fi\n    done\n    if [[ ${freq} -gt ${max} ]]; then\n\
    \        echo \"${max}\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3ny95zfn.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxCount=0\n    local i\n    local j\n    local count\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local arr=(\
    \ $str )\n    local max=0\n    local maxIndex=0\n    local maxFreq=0\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxIndex\n\
    \    local maxFrequency\n    local maxValue\n    local value\n\n    IFS=' ' read\
    \ -r -a array <<< \"$list\"\n    greatest=${array[0]}\n    frequency=${array[0]}\n\
    \    max=${array[0]}\n    maxIndex=0\n    maxFrequency=0\n    maxValue=${array[0]}\n\
    \    for (( i=1; i<${#array[@]}; i++ )); do\n        if [[ ${array[$i]} -gt $max\
    \ ]]; then\n            greatest=${array[$i]}\n            frequency=${array[$i]}\n\
    \            max=${array[$i]}\n            maxIndex=$i\n            maxFrequency=${array[$i]}\n\
    \            maxValue=${array[$i]}\n        elif [[ ${array[$i]} -eq $max ]];\
    \ then\n            frequency=$(( frequency + 1 ))\n        fi\n    done\n   \
    \ if [[ $maxFrequency -gt $frequency ]]; then\n        echo \"$max\"\n    else\n\
    \        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local freq\n    local j\n    local tmp\n\
    \    \n    for i in $list; do\n        freq=$(echo \"$list\" | grep -c \"$i\"\
    )\n        if [ \"$freq\" -gt \"$maxfreq\" ]; then\n            maxfreq=$freq\n\
    \            max=$i\n        fi\n    done\n    \n    if [ \"$maxfreq\" -gt \"\
    $max\" ]; then\n        echo \"$max\"\n    else\n        echo \"-1\"\n    fi\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max\n\
    \    local count\n    local i\n    local j\n    local tmp\n    local tmp2\n  \
    \  local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i = 0; i <= max; i++ )); do\n        if [[ ${arr[$i]} -gt 0 ]]; then\n  \
    \          if [[ ${freq[$i]} -gt ${arr[$i]} ]]; then\n                max=$i\n\
    \            fi\n        fi\n    done\n    echo \"${arr[max]}\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    \n    for ((i=0;\
    \ i<${#list}; i++)); do\n        tmp=${list[i]}\n        if [[ ${list[i]} -gt\
    \ 0 ]]; then\n            freq=$((${freq}+1))\n            if [[ ${freq} -gt ${tmp}\
    \ ]]; then\n                max=${list[i]}\n            fi\n        fi\n    done\n\
    \    \n    if [[ ${max} -gt 0 ]]; then\n        echo \"${max}\"\n    else\n  \
    \      echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpafuvv3gi.sh: line 25: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxCount=0\n    local maxValue=0\n    local value\n\n    for value\
    \ in $list; do\n        if [ $value -gt $max ]; then\n            max=$value\n\
    \            maxCount=0\n        fi\n        if [ $value -eq $max ]; then\n  \
    \          ((maxCount++))\n        fi\n    done\n\n    if [ $maxCount -gt $maxValue\
    \ ]; then\n        maxValue=$max\n    fi\n\n    echo \"$maxValue\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local -n arr=$1\n  local -n max=$2\n\
    \  local -n freq=$3\n  local -n val=$4\n  local -n i\n  local -n j\n  local -n\
    \ found\n  local -n maxval\n  local -n maxfreq\n  local -n maxj\n  local -n maxi\n\
    \  local -n max\n  local -n maxj\n  local -n maxi\n  local -n max\n  local -n\
    \ max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n  local -n max\n  local -n max\n  local\
    \ -n max\n  local -n max\n  local -n max\n\n}\n\ncandidate() {\n    search \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi5ot5hb7.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmpi5ot5hb7.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpi5ot5hb7.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpi5ot5hb7.sh: line 19: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local greatest\n\
    \  local frequency\n  local i\n  \n  for i in $list; do\n    grep -q \"$i\" <<<\
    \ \"$list\" && frequency=\"$i\" && break\n  done\n  \n  if [ -z \"$frequency\"\
    \ ]; then\n    return -1\n  fi\n  \n  greatest=\"$frequency\"\n  \n  for i in\
    \ $list; do\n    grep -q \"$i\" <<< \"$list\" && frequency=\"$i\" && break\n \
    \ done\n  \n  greatest=\"$((greatest > frequency ? greatest : frequency))\"\n\
    \  \n  echo \"$greatest\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=\"\
    ${list#*}\"\n    local maxCount=0\n    local maxFreq=0\n    local i\n    local\
    \ j\n    local freq\n    local tmp\n    local tmp2\n    local tmp3\n    local\
    \ tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local\
    \ tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n \
    \   local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local\
    \ tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n\
    \    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local\
    \ tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n\
    \    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local\
    \ tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n\
    \    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local\
    \ tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n\
    \    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local\
    \ tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n\
    \    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local\
    \ tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n\
    \    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local\
    \ tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n\
    \    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local\
    \ tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n\
    \    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local\
    \ tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n\
    \    local tmp\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    IFS=' '\
    \ read -a array <<< \"$1\"\n    for i in \"${array[@]}\"; do\n        if (( freq[$i]\
    \ )); then\n            freq[$i]=$(( freq[$i] + 1 ))\n        else\n         \
    \   freq[$i]=1\n        fi\n    done\n    max=$(( ${#freq[@]} - 1 ))\n    for\
    \ i in \"${!freq[@]}\"; do\n        if (( freq[$i] >= $max )); then\n        \
    \    echo \"$i\"\n            return\n        fi\n    done\n    echo \"-1\"\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local freq=0\n  local i\n  \n  for ((i=0; i<${#list}; i++)); do\n    freq=$((${freq}+1))\n\
    \    if [[ ${list[i]} -gt 0 ]]; then\n      if [[ ${freq} -gt ${list[i]} ]]; then\n\
    \        max=${list[i]}\n      fi\n    fi\n  done\n  \n  if [[ ${max} -gt 0 ]];\
    \ then\n    echo \"${max}\"\n  else\n    echo \"-1\"\n  fi\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsa3d2ucj.sh: line 23: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local greatest\n\
    \  local frequency\n  local i\n  \n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$\
    \ ]]; then\n      frequency=$(echo \"$list\" | grep -c \"$i\")\n      if [[ $frequency\
    \ -gt 0 ]]; then\n        greatest=$i\n        break\n      fi\n    fi\n  done\n\
    \  \n  if [[ $greatest == \"\" ]]; then\n    return -1\n  fi\n  \n  echo \"$greatest\"\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local -n\
    \ max=$2\n    local -n val=$3\n    local -n count=$4\n    local -n maxCount=$5\n\
    \    local -n maxVal=$6\n    local -n maxCountVal=$7\n    local -n maxCountVal2=$8\n\
    \    local -n maxCountVal3=$9\n    local -n maxCountVal4=$10\n    local -n maxCountVal5=$11\n\
    \    local -n maxCountVal6=$12\n    local -n maxCountVal7=$13\n    local -n maxCountVal8=$14\n\
    \    local -n maxCountVal9=$15\n    local -n maxCountVal10=$16\n    local -n maxCountVal11=$17\n\
    \    local -n maxCountVal12=$18\n    local -n maxCountVal13=$19\n    local -n\
    \ maxCountVal14=$20\n    local -n maxCountVal15=$21\n    local -n maxCountVal16=$22\n\
    \    local -n maxCountVal17=$23\n    local -n maxCountVal18=$24\n    local -n\
    \ maxCountVal19=$25\n    local -n maxCountVal20=$26\n    local -n maxCountVal21=$27\n\
    \    local -n maxCountVal22=$28\n    local -n maxCountVal23=$29\n    local -n\
    \ maxCountVal24=$30\n    local -n maxCountVal25=$31\n    local -n maxCountVal26=$32\n\
    \    local -n maxCountVal27=$33\n    local -n maxCountVal28=$34\n    local -n\
    \ maxCountVal29=$35\n    local -n maxCountVal30=$36\n    local -n maxCountVal31=$37\n\
    \    local -n maxCountVal32=$38\n    local -n maxCountVal33=$39\n    local -n\
    \ maxCountVal34=$40\n    local -n maxCountVal35=$41\n    local -n maxCountVal36=$42\n\
    \    local -n maxCountVal37=$43\n    local -n maxCountVal38=$44\n    local -n\
    \ maxCountVal39=$45\n    local -n maxCountVal40=$46\n    local -n maxCountVal41=$47\n\
    \    local -n maxCountVal42=$48\n    \n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpiq5n4yxu.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmpiq5n4yxu.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpiq5n4yxu.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpiq5n4yxu.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpiq5n4yxu.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpiq5n4yxu.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpiq5n4yxu.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpiq5n4yxu.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpiq5n4yxu.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpiq5n4yxu.sh: line 25: local: `5 5 5 5 10'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 26: local: `5 5 5 5 11'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 27: local: `5 5 5 5 12'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 28: local: `5 5 5 5 13'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 29: local: `5 5 5 5 14'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 30: local: `5 5 5 5 15'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 31: local: `5 5 5 5 16'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 32: local: `5 5 5 5 17'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 33: local: `5 5 5 5 18'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 34: local: `5 5 5 5 19'': invalid variable name for
    name reference

    /tmp/tmpiq5n4yxu.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpiq5n4yxu.sh: line 36: local: `1'': invalid variable name for name reference

    /tmp/tmpiq5n4yxu.sh: line 37: local: `2'': invalid variable name for name reference

    /tmp/tmpiq5n4yxu.sh: line 38: local: `3'': invalid variable name for name reference

    /tmp/tmpiq5n4yxu.sh: line 39: local: `4'': invalid variable name for name reference

    /tmp/tmpiq5n4yxu.sh: line 40: local: `5'': invalid variable name for name reference

    /tmp/tmpiq5n4yxu.sh: line 4'
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local freq=0\n    local i\n    \n    for ((i=0; i<${#list};\
    \ i++)); do\n        freq=$(echo \"${list[i]}\" | wc -w)\n        if (( freq >\
    \ max )); then\n            max=freq\n            maxIndex=$i\n        fi\n  \
    \  done\n    \n    if (( maxIndex == 0 )); then\n        echo \"-1\"\n    else\n\
    \        echo \"${list[maxIndex]}\"\n    fi\n}\n\ncandidate() {\n    search \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i j\n    local max\n   \
    \ local freq\n    local list\n    list=$1\n    freq=0\n    max=0\n    for ((i=0;\
    \ i<${#list}; i++)); do\n        if [[ ${list[i]} -gt 0 ]]; then\n           \
    \ freq=$((freq+1))\n            if [[ ${freq} -gt ${list[i]} ]]; then\n      \
    \          max=${list[i]}\n            fi\n        fi\n    done\n    if [[ ${max}\
    \ -eq 0 ]]; then\n        echo \"-1\"\n    else\n        echo \"${max}\"\n   \
    \ fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaz20yyvy.sh: line 24: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    for ((i=0; i<${#1}; i++)); do\n        if [[ ${#1} == 0 ]]; then\n\
    \            echo \"-1\"\n            return\n        fi\n        if [[ ${#1}\
    \ == 1 ]]; then\n            if [[ ${#1} == ${i} ]]; then\n                freq=$1\n\
    \            fi\n        else\n            if [[ ${#1} == ${i} ]]; then\n    \
    \            if [[ ${#1} > ${freq} ]]; then\n                    freq=${#1}\n\
    \                fi\n            fi\n        fi\n    done\n    echo \"${max}\"\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i<${#list}; i++)); do\n       \
    \ if [[ ${list[i]} -gt 0 ]]; then\n            freq=$((freq+1))\n            if\
    \ [[ ${freq} -gt ${list[i]} ]]; then\n                max=$((max+1))\n       \
    \     fi\n        fi\n    done\n    if [[ ${max} -gt 0 ]]; then\n        echo\
    \ \"${max}\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp817qj004.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local list=\"\
    $1\"\n    freq=0\n    max=0\n    for ((i=0; i<${#list}; i++)); do\n        if\
    \ [[ ${list[i]} -gt 0 ]]; then\n            freq=$((freq+1))\n            if [[\
    \ ${freq} -gt ${list[i]} ]]; then\n                max=${list[i]}\n          \
    \  fi\n        fi\n    done\n    if [[ ${max} -eq 0 ]]; then\n        echo \"\
    -1\"\n    else\n        echo \"${max}\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo5552d09.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxCount\n    local maxValue\n    local maxValueCount\n    local maxValueIndex\n\
    \    local maxValueIndexCount\n    local maxValueIndexValue\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n\
    \    local maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local\
    \ maxValueIndexValueCount\n    local maxValueIndexValueCount\n    local maxValue\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i<${#list}; i++)); do\n       \
    \ if [[ ${list[i]} -gt 0 ]]; then\n            freq=$((${freq}+1))\n         \
    \   if [[ ${freq} -gt ${list[i]} ]]; then\n                max=${list[i]}\n  \
    \          fi\n        fi\n    done\n    if [[ ${max} -eq 0 ]]; then\n       \
    \ echo \"-1\"\n    else\n        echo \"${max}\"\n    fi\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpte6myem_.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local max=0\n\
    \    local maxval=0\n    local val\n    local i\n    local j\n    local k\n  \
    \  local freq\n    local count\n    local maxcount\n    local maxfreq\n    local\
    \ maxval2\n    local maxval3\n    local maxval4\n    local maxval5\n    local\
    \ maxval6\n    local maxval7\n    local maxval8\n    local maxval9\n    local\
    \ maxval10\n    local maxval11\n    local maxval12\n    local maxval13\n    local\
    \ maxval14\n    local maxval15\n    local maxval16\n    local maxval17\n    local\
    \ maxval18\n    local maxval19\n    local maxval20\n    local maxval21\n    local\
    \ maxval22\n    local maxval23\n    local maxval24\n    local maxval25\n    local\
    \ maxval26\n    local maxval27\n    local maxval28\n    local maxval29\n    local\
    \ maxval30\n    local maxval31\n    local maxval32\n    local maxval33\n    local\
    \ maxval34\n    local maxval35\n    local maxval36\n    local maxval37\n    local\
    \ maxval38\n    local maxval39\n    local maxval40\n    local maxval41\n    local\
    \ maxval42\n    local maxval43\n    local maxval44\n    local maxval45\n    local\
    \ maxval46\n    local maxval47\n    local maxval48\n    local maxval49\n    local\
    \ maxval50\n    local maxval51\n    local maxval52\n    local maxval53\n    local\
    \ maxval54\n    local maxval55\n    local maxval56\n    local maxval57\n    local\
    \ maxval58\n    local maxval59\n    local maxval60\n    local maxval61\n    local\
    \ maxval62\n    local maxval63\n    local maxval64\n    local maxval65\n    local\
    \ maxval66\n    local maxval67\n    local maxval68\n    local maxval69\n    local\
    \ maxval70\n    local maxval71\n    local maxval72\n    local maxval73\n    local\
    \ maxval74\n    local maxval75\n    local maxval76\n    local maxval77\n    local\
    \ maxval78\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n     \
    \   if [[ ${arr[$i]} -gt 0 ]]; then\n            freq=$((${freq}+1))\n       \
    \     if [[ ${freq} -gt ${arr[$i]} ]]; then\n                max=${arr[$i]}\n\
    \            fi\n        fi\n    done\n    if [[ ${max} -eq -1 ]]; then\n    \
    \    echo -1\n    else\n        echo ${max}\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpg_65fd65.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local i freq max\n  freq=-1\n  max=0\n\
    \  for ((i=0; i < ${#1}; i++)); do\n    freq=${!i}\n    if [[ $freq -gt $max ]];\
    \ then\n      max=$freq\n    fi\n  done\n  echo $max\n}\n\ncandidate() {\n   \
    \ search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\")\
    \ = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjw2x9xdd.sh: line 21: [[: /tmp/tmpjw2x9xdd.sh: syntax error: operand
    expected (error token is "/tmp/tmpjw2x9xdd.sh")

    /tmp/tmpjw2x9xdd.sh: line 21: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxIndex\n    local maxValue\n    local value\n    local valueCount\n\
    \n    # Initialize greatest and frequency variables\n    greatest=\"-1\"\n   \
    \ frequency=\"-1\"\n\n    # Iterate through each integer in the list\n    for\
    \ ((i = 0; i < ${#list}; i++)); do\n        # Initialize a variable that holds\
    \ the current integer\n        value=\"${list[i]}\"\n\n        # Initialize a\
    \ variable that holds the current frequency of the current integer\n        valueCount=\"\
    -1\"\n\n        # Iterate through each integer in the list\n        for ((j =\
    \ 0; j < ${#list}; j++)); do\n            # If the current integer is the same\
    \ as the current integer, increment the frequency variable\n            if [ \"\
    ${list[j]}\" == \"${value}\" ]; then\n                valueCount=$((valueCount\
    \ + 1))\n            fi\n        done\n\n        # If the current integer has\
    \ a frequency greater than or equal to the current frequency variable\n      \
    \  if [ \"${valueCount}\" -gt \"${frequency}\" ]; then\n            # Set the\
    \ greatest integer to the current integer\n            greatest=\"${value}\"\n\
    \            # Set the frequency to the current frequency variable\n         \
    \   frequency=\"${valueCount}\"\n        fi\n    done\n\n    # Return the greatest\
    \ integer\n    echo \"${greatest}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local str=$1\n  local arr=( $str\
    \ )\n  local max=0\n  local maxCount=0\n  local maxVal=0\n  local i\n  local j\n\
    \  local k\n  local count\n  local val\n  local count2\n  local val2\n  local\
    \ count3\n  local val3\n  local count4\n  local val4\n  local count5\n  local\
    \ val5\n  local count6\n  local val6\n  local count7\n  local val7\n  local count8\n\
    \  local val8\n  local count9\n  local val9\n  local count10\n  local val10\n\
    \  local count11\n  local val11\n  local count12\n  local val12\n  local count13\n\
    \  local val13\n  local count14\n  local val14\n  local count15\n  local val15\n\
    \  local count16\n  local val16\n  local count17\n  local val17\n  local count18\n\
    \  local val18\n  local count19\n  local val19\n  local count20\n  local val20\n\
    \  local count21\n  local val21\n  local count22\n  local val22\n  local count23\n\
    \  local val23\n  local count24\n  local val24\n  local count25\n  local val25\n\
    \  local count26\n  local val26\n  local count27\n  local val27\n  local count28\n\
    \  local val28\n  local count29\n  local val29\n  local count30\n  local val30\n\
    \  local count31\n  local val31\n  local count32\n  local val32\n  local count33\n\
    \  local val33\n  local count34\n  local val34\n  local count35\n  local val35\n\
    \  local count36\n  local val36\n  local count37\n  local val37\n  local count38\n\
    \  local val38\n  local count39\n  local val39\n  local count40\n  local val40\n\
    \  local count41\n  local val41\n  local count42\n  local val42\n  local count43\n\
    \  local val43\n  local count44\n  local val44\n  local count45\n  local val45\n\
    \  local count46\n  local val46\n  local count47\n  local val47\n\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxIndex\n\
    \    local maxFrequency\n    local maxValue\n    local maxIndexValue\n    local\
    \ maxIndexFrequency\n    local maxIndexValueFrequency\n    local maxIndexFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequency\n    local maxIndexFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequency\n    local maxIndexFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValue\n    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local count=0\n    local maxCount=0\n    local maxVal=0\n    local maxValCount=0\n\
    \    local val\n    local valCount\n    local valCount2\n    local valCount3\n\
    \    local valCount4\n    local valCount5\n    local valCount6\n    local valCount7\n\
    \    local valCount8\n    local valCount9\n    local valCount10\n    local valCount11\n\
    \    local valCount12\n    local valCount13\n    local valCount14\n    local valCount15\n\
    \    local valCount16\n    local valCount17\n    local valCount18\n    local valCount19\n\
    \    local valCount20\n    local valCount21\n    local valCount22\n    local valCount23\n\
    \    local valCount24\n    local valCount25\n    local valCount26\n    local valCount27\n\
    \    local valCount28\n    local valCount29\n    local valCount30\n    local valCount31\n\
    \    local valCount32\n    local valCount33\n    local valCount34\n    local valCount35\n\
    \    local valCount36\n    local valCount37\n    local valCount38\n    local valCount39\n\
    \    local valCount40\n    local valCount41\n    local valCount42\n    local valCount43\n\
    \    local valCount44\n    local valCount45\n    local valCount46\n    local valCount47\n\
    \    local valCount48\n    local valCount49\n    local valCount50\n    local valCount51\n\
    \    local valCount52\n    local valCount53\n    local valCount54\n    local valCount55\n\
    \    local valCount56\n    local valCount57\n    local valCount58\n    local valCount59\n\
    \    local valCount60\n    local valCount61\n    local valCount62\n    local valCount63\n\
    \    local valCount64\n    local valCount65\n    local valCount66\n    local valCount67\n\
    \    local valCount68\n    local valCount69\n    local valCount70\n    local valCount71\n\
    \    local valCount72\n    local valCount73\n    local valCount74\n    local valCount75\n\
    \    local valCount76\n    local valCount77\n    local valCount78\n    local valCount79\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=$1\n  local greatest\n\
    \  local frequency\n  local i\n  local j\n  local max\n  local maxCount\n  local\
    \ maxIndex\n  local maxValue\n  local value\n  local valueCount\n\n  for i in\
    \ $list; do\n    greatest=$i\n    frequency=0\n    for j in $list; do\n      if\
    \ [ $i -eq $j ]; then\n        frequency=$((frequency + 1))\n      fi\n    done\n\
    \    if [ $frequency -gt $greatest ]; then\n      greatest=$frequency\n    fi\n\
    \  done\n\n  max=$greatest\n  maxCount=0\n  maxIndex=0\n  maxValue=$greatest\n\
    \  valueCount=0\n  for i in $list; do\n    if [ $i -eq $max ]; then\n      valueCount=$((valueCount\
    \ + 1))\n      if [ $valueCount -gt $maxCount ]; then\n        maxCount=$valueCount\n\
    \        maxIndex=$i\n        maxValue=$greatest\n      fi\n    fi\n  done\n\n\
    \  if [ $maxCount -eq 0 ]; then\n    return -1\n  else\n    return $maxIndex\n\
    \  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxIndex\n    local maxFrequency\n    local maxNumber\n    local maxIndex2\n\
    \    local maxFrequency2\n    local maxNumber2\n    local maxIndex3\n    local\
    \ maxFrequency3\n    local maxNumber3\n    local maxIndex4\n    local maxFrequency4\n\
    \    local maxNumber4\n    local maxIndex5\n    local maxFrequency5\n    local\
    \ maxNumber5\n    local maxIndex6\n    local maxFrequency6\n    local maxNumber6\n\
    \    local maxIndex7\n    local maxFrequency7\n    local maxNumber7\n    local\
    \ maxIndex8\n    local maxFrequency8\n    local maxNumber8\n    local maxIndex9\n\
    \    local maxFrequency9\n    local maxNumber9\n    local maxIndex10\n    local\
    \ maxFrequency10\n    local maxNumber10\n    local maxIndex11\n    local maxFrequency11\n\
    \    local maxNumber11\n    local maxIndex12\n    local maxFrequency12\n    local\
    \ maxNumber12\n    local maxIndex13\n    local maxFrequency13\n    local maxNumber13\n\
    \    local maxIndex14\n    local maxFrequency14\n    local maxNumber14\n    local\
    \ maxIndex15\n    local maxFrequency15\n    local maxNumber15\n    local maxIndex16\n\
    \    local maxFrequency16\n    local maxNumber16\n    local maxIndex17\n    local\
    \ maxFrequency17\n    local maxNumber17\n    local maxIndex18\n    local maxFrequency18\n\
    \    local maxNumber18\n    local maxIndex19\n    local maxFrequency19\n    local\
    \ maxNumber19\n    local maxIndex20\n    local maxFrequency20\n    local maxNumber20\n\
    \    local maxIndex21\n    local maxFrequency21\n    local maxNumber21\n    local\
    \ maxIndex22\n    local maxFrequency22\n    local maxNumber22\n    local maxIndex23\n\
    \    local maxFrequency23\n    local maxNumber23\n    local maxIndex24\n    local\
    \ maxFrequency24\n    local maxNumber24\n    local maxIndex25\n    local maxFrequency25\n\
    \    local maxNumber25\n    local maxIndex26\n    local maxFrequency26\n    local\
    \ maxNumber26\n    local maxIndex27\n    local maxFrequency27\n    local max\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=$1\n  local greatest=-1\n\
    \  local frequency=0\n  local i\n  for i in $list; do\n    ((frequency++))\n \
    \   ((greatest=i))\n  done\n  if ((frequency > $frequency)); then\n    echo $greatest\n\
    \  else\n    echo $greatest\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=\"-1\"\n    frequency=\"\
    -1\"\n    \n    for i in $list; do\n        if [ \"$i\" -gt \"$greatest\" ]; then\n\
    \            greatest=\"$i\"\n        fi\n        if [ \"$i\" -ge \"$i\" ]; then\n\
    \            frequency=\"$((frequency+1))\"\n        fi\n    done\n    \n    if\
    \ [ \"$greatest\" -eq \"-1\" ]; then\n        echo \"$frequency\"\n    else\n\
    \        echo \"$greatest\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local greatest\n\
    \  local frequency\n  local i\n  \n  for i in $list; do\n    if [[ $i -gt 0 ]];\
    \ then\n      frequency=$(grep -c \"$i\" <<< \"$list\")\n      if [[ $frequency\
    \ -gt $i ]]; then\n        greatest=$i\n        break\n      fi\n    fi\n  done\n\
    \  \n  if [[ $greatest == \"\" ]]; then\n    return -1\n  fi\n  \n  echo \"$greatest\"\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxCount=0\n    local maxValue=0\n    local count=0\n    local value=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local\
    \ C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n\
    \    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n \
    \   local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n  \
    \  local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n   \
    \ local X=0\n    local Y=0\n    local Z=0\n    local AA=0\n    local AB=0\n  \
    \  local AC=0\n    local AD=0\n    local AE=0\n    local AF=0\n    local AG=0\n\
    \    local AH=0\n    local AI=0\n    local AJ=0\n    local AK=0\n    local AL=0\n\
    \    local AM=0\n    local AN=0\n    local AO=0\n    local AP=0\n    local AQ=0\n\
    \    local AR=0\n    local AS=0\n    local AT=0\n    local AU=0\n    local AV=0\n\
    \    local AW=0\n    local AX=0\n    local AY=0\n    local AZ=0\n    local BA=0\n\
    \    local BB=0\n    local BC=0\n    local BD=0\n    local BE=0\n    local BF=0\n\
    \    local BG=0\n    local BH=0\n    local BI=0\n    local BJ=0\n    local BK=0\n\
    \    local BL=0\n    local BM=0\n    local BN=0\n    local BO=0\n    local BP=0\n\
    \    local BQ=0\n    local BR=0\n    local BS=0\n    local BT=0\n    local BU=0\n\
    \    local BV=0\n    local BW=0\n    local BX=0\n    local \n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $(echo \"${arr[*]}\" | tr \" \" \"\\n\" | sort\
    \ | uniq | wc -l) )\n    max=( $(echo \"${arr[*]}\" | tr \" \" \"\\n\" | sort\
    \ | uniq | head -1 | wc -l) )\n    for (( i=0; i<${#arr[@]}; i++ )); do\n    \
    \    if [[ ${freq[$i]} -gt ${max} ]]; then\n            max=${freq[$i]}\n    \
    \    fi\n    done\n    if [[ ${max} -eq 0 ]]; then\n        echo \"-1\"\n    else\n\
    \        echo \"${max}\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxIndex=0\n    local freq=0\n    local i\n    \n    for i in $list;\
    \ do\n        if [ $freq -gt $i ]; then\n            freq=$i\n            maxIndex=$i\n\
    \        fi\n    done\n    \n    if [ $freq -gt $max ]; then\n        max=$maxIndex\n\
    \    fi\n    \n    return $max\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=0\n    for ((i=0; i<${#1}; i++)); do\n        if [[ ${#1} == $i ]]; then\n\
    \            freq=$((freq+1))\n        else\n            if [[ ${#1} == $((i-1))\
    \ ]]; then\n                if (( freq >= ${#1} )); then\n                   \
    \ max=$((max+1))\n                fi\n            fi\n        fi\n    done\n \
    \   if [[ ${#1} == $((i-1)) ]]; then\n        max=$((max+1))\n    fi\n    echo\
    \ \"${max}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local valueFrequency\n\
    \    local valueIndex\n    local valueValue\n    local valueFrequencyValue\n \
    \   local valueIndexValue\n    local valueFrequencyIndex\n    local valueIndexFrequency\n\
    \    local valueFrequencyIndexValue\n    local valueFrequencyIndexFrequency\n\
    \    local valueIndexFrequencyValue\n    local valueIndexFrequencyIndex\n    local\
    \ valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndexValue\n\
    \    local valueFrequencyIndexFrequencyValue\n    local valueIndexFrequencyIndex\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local result\n\n    greatest=-1\n\
    \    frequency=0\n    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]}\
    \ -gt 0 ]]; then\n            frequency=$((${frequency}+1))\n            if [[\
    \ ${frequency} -gt ${list[i]} ]]; then\n                greatest=${list[i]}\n\
    \            fi\n        fi\n    done\n\n    if [[ ${greatest} -gt 0 ]]; then\n\
    \        result=${greatest}\n    else\n        result=-1\n    fi\n\n    echo \"\
    ${result}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz_2agmwq.sh: line 26: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local value\n\
    \    local tmp\n\n    IFS=$'\\n' read -r -a array <<< \"$list\"\n    greatest=${array[0]}\n\
    \    frequency=${array[0]}\n    for (( i=1; i<${#array[@]}; i++ )); do\n     \
    \   if (( ${array[$i]} > ${greatest} )) ; then\n            greatest=${array[$i]}\n\
    \        fi\n        if (( ${array[$i]} > ${frequency} )) ; then\n           \
    \ frequency=${array[$i]}\n        fi\n    done\n\n    for (( i=1; i<${#array[@]};\
    \ i++ )); do\n        if (( ${array[$i]} == ${greatest} )) ; then\n          \
    \  value=${array[$i]}\n        fi\n    done\n\n    if (( ${value} > 0 )); then\n\
    \        echo \"$value\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4luechy1.sh: line 43: ((: > 0 : syntax error: operand expected
    (error token is "> 0 ")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxIndex\n\
    \    local maxFrequency\n    local maxNumber\n\n    numbers=$(echo $numbers |\
    \ tr \" \" \"\\n\")\n    greatest=$(echo $numbers | grep -o \"[0-9]*\")\n    if\
    \ [ -z \"$greatest\" ]; then\n        echo \"-1\"\n        return\n    fi\n  \
    \  frequency=$(echo $numbers | grep -o \"[0-9]*\" | sort | uniq -c)\n    if [\
    \ -z \"$frequency\" ]; then\n        echo \"-1\"\n        return\n    fi\n   \
    \ maxIndex=$(echo $frequency | sort -n | tail -1)\n    maxFrequency=$(echo $frequency\
    \ | sort -n | tail -1)\n    maxNumber=$(echo $numbers | grep -o \"[0-9]*\" | sort\
    \ -n | tail -1)\n    maxIndex=$(echo $maxIndex | tr -d '\\n')\n    maxFrequency=$(echo\
    \ $maxFrequency | tr -d '\\n')\n    maxNumber=$(echo $maxNumber | tr -d '\\n')\n\
    \    if [ \"$maxIndex\" -gt \"$maxFrequency\" ]; then\n        echo \"-1\"\n \
    \       return\n    fi\n    for (( i = 0; i < ${#frequency[@]}; i++ )); do\n \
    \       if [ \"$frequency[$i]\" -ge \"$maxFrequency\" ]; then\n            greatest=$maxNumber\n\
    \            break\n        fi\n    done\n    echo \"$greatest\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: "/tmp/tmp5a5r2qbu.sh: line 43: [: 1 1 4 5: integer expression expected\n\
    /tmp/tmp5a5r2qbu.sh: line 48: [:       1 1\n      4 5[0]: integer expression expected\n"
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxIndex\n    local maxFrequency\n    local maxNumber\n    local maxNumberIndex\n\
    \    local maxNumberFrequency\n    local maxNumbers\n    local maxNumbersIndex\n\
    \    local maxNumbersFrequency\n    local maxValue\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local maxValueFrequency\n    local maxValueIndex\n\
    \    local maxValueFrequency\n    local maxValueIndex\n    local maxValueFrequency\n\
    \    local maxValueIndex\n    local \n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local freq\n    local i\n    local j\n    local k\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=-1\n    frequency=0\n  \
    \  \n    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]} -gt 0 ]];\
    \ then\n            frequency=$((${frequency}+1))\n            if [[ ${frequency}\
    \ -gt ${list[i]} ]]; then\n                greatest=${list[i]}\n            fi\n\
    \        fi\n    done\n    \n    if [[ ${greatest} -eq -1 ]]; then\n        echo\
    \ \"-1\"\n    else\n        echo \"${greatest}\"\n    fi\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpod3mustq.sh: line 25: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local max=0\n\
    \    local maxNumber\n    local maxFrequency\n    local number\n    local frequency\n\
    \    local i\n    \n    for (( i=1; i<${#numbers}; i++ )); do\n        number=${numbers:$i:1}\n\
    \        frequency=${numbers:$i:1}\n        if (( frequency >= $number )); then\n\
    \            if (( frequency > max )); then\n                max=${number}\n \
    \               maxNumber=${number}\n                maxFrequency=${frequency}\n\
    \            fi\n        fi\n    done\n    \n    if (( ${#maxNumber} > 0 )); then\n\
    \        echo \"${maxNumber}\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjkldhoog.sh: line 27: ((: frequency >=   : syntax error: operand
    expected (error token is ">=   ")

    /tmp/tmpjkldhoog.sh: line 27: ((: frequency >=   : syntax error: operand expected
    (error token is ">=   ")

    /tmp/tmpjkldhoog.sh: line 27: ((: frequency >=   : syntax error: operand expected
    (error token is ">=   ")

    /tmp/tmpjkldhoog.sh: line 27: ((: frequency >=   : syntax error: operand expected
    (error token is ">=   ")

    '
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxval=0\n    local maxfreq=0\n    local i\n    local j\n    local\
    \ val\n    local freq\n    local count\n    local found\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local freq\n    \n    for (( i=0; i<${#list};\
    \ i++ )); do\n        freq=$(echo \"${list[i]}\" | wc -w)\n        if (( freq\
    \ > maxfreq )); then\n            max=${list[i]}\n            maxfreq=${freq}\n\
    \        fi\n    done\n    \n    if (( ${#list} > 0 )); then\n        echo \"\
    ${max}\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local freq=0\n\
    \    local max=0\n    local i\n    for (( i=0; i<${#n[@]}; i++ )); do\n      \
    \  if [[ ${n[i]} -gt 0 ]]; then\n            freq=$(( freq + 1 ))\n          \
    \  if [[ ${freq} -gt ${n[i]} ]]; then\n                max=${n[i]}\n         \
    \   fi\n        fi\n    done\n    if [[ ${max} -eq 0 ]]; then\n        echo \"\
    -1\"\n    else\n        echo \"${max}\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph14610x8.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local greatest\n\
    \  local frequency\n  local i\n  local j\n  local k\n  local max\n  local maxCount\n\
    \  local maxIndex\n  local maxValue\n  local value\n  local tmp\n  \n  for i in\
    \ $list; do\n    greatest=$i\n    frequency=0\n    for j in $list; do\n      if\
    \ [ \"$i\" -eq \"$j\" ]; then\n        continue\n      fi\n      if [ \"$i\" -gt\
    \ \"$j\" ]; then\n        frequency=$((frequency + 1))\n      fi\n    done\n \
    \   if [ \"$frequency\" -gt \"$greatest\" ]; then\n      greatest=$frequency\n\
    \    fi\n  done\n  \n  if [ \"$greatest\" -eq 0 ]; then\n    return -1\n  fi\n\
    \  \n  maxCount=0\n  maxIndex=0\n  maxValue=$greatest\n  \n  for i in $list; do\n\
    \    if [ \"$i\" -eq \"$greatest\" ]; then\n      continue\n    fi\n    \n   \
    \ if [ \"$i\" -gt \"$greatest\" ]; then\n      frequency=$((frequency + 1))\n\
    \    fi\n    \n    if [ \"$frequency\" -gt \"$maxCount\" ]; then\n      maxCount=$frequency\n\
    \      maxIndex=$i\n      maxValue=$greatest\n    fi\n  done\n  \n  echo \"$maxIndex\"\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local valueCount\n\
    \    local valueIndex\n    local valueFrequency\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueIndex\n    local valueFrequency\n    local valueIndex\n\
    \    local valueFrequency\n    local valueIndex\n    local valueFrequency\n  \
    \  local valueIndex\n    local valueFrequency\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueIndex\n    local valueFrequency\n    local valueIndex\n\
    \    local valueFrequency\n    local valueIndex\n    local valueFrequency\n  \
    \  local valueIndex\n    local valueFrequency\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueIndex\n    local valueFrequency\n    local valueIndex\n\
    \    local valueFrequency\n    local valueIndex\n    local valueFrequency\n  \
    \  local valueIndex\n    local valueFrequency\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueIndex\n    local valueFrequency\n    local valueIndex\n\
    \    local valueFrequency\n    local valueIndex\n    local valueFrequency\n  \
    \  local valueIndex\n    local valueFrequency\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueIndex\n    local valueFrequency\n    local valueIndex\n\
    \    local valueFrequency\n    local valueIndex\n    local valueFrequency\n  \
    \  local valueIndex\n    local valueFrequency\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueIndex\n    local valueFrequency\n    local valueIndex\n\
    \    local valueFrequency\n    local valueIndex\n    local valueFrequency\n  \
    \  local valueIndex\n    local valueFrequency\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueIndex\n    local valueFrequency\n    local valueIndex\n\
    \    local valueFrequency\n    local valueIndex\n    local valueFrequency\n  \
    \  local valueIndex\n    local valueFrequency\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueIndex\n    local valueFrequency\n    local valueIndex\n\
    \    local valueFrequency\n    local valueIndex\n    local valueFrequency\n  \
    \  local valueIndex\n    local valueFrequency\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueIndex\n    local valueFrequency\n    local valueIndex\n\
    \    local valueFrequency\n    local valueIndex\n    local valueFrequency\n  \
    \  local valueIndex\n    local valueFrequency\n\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    for ((i=0; i<${#list}; i++)); do\n    \
    \    if [[ ${list[i]} -gt 0 ]]; then\n            if (( ${list[i]} > max )); then\n\
    \                max=${list[i]}\n            fi\n            if (( ${list[i]}\
    \ > maxfreq )); then\n                maxfreq=${list[i]}\n            fi\n   \
    \     fi\n    done\n    if [[ ${max} -gt 0 ]]; then\n        echo \"${max}\"\n\
    \    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl69i0cvl.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local maxVal\n \
    \   local maxFreq\n    local maxIndex\n    local maxValIndex\n    local maxValFreq\n\
    \    local maxValIndexFreq\n    local maxValIndexFreqIndex\n    local maxValIndexFreqIndexFreq\n\
    \    local maxValIndexFreqIndexFreqIndex\n    local maxValIndexFreqIndexFreqIndexFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreq\n    local maxValIndexFreqIndexFreqIndexFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreq\n    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreq\n    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreq\n   \
    \ local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreqFreq\n  \
    \  local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local numbers=$1\n  local max=0\n\
    \  local maxIndex=0\n  local maxFreq=0\n  local num\n  local freq\n  local i\n\
    \  \n  for ((i=0; i<${#numbers[@]}; i++)); do\n    num=${numbers[i]}\n    freq=${#numbers[@]}\n\
    \    \n    if [[ $num -gt 0 ]]; then\n      if (( freq > maxFreq )) ; then\n \
    \       maxFreq=${freq}\n        maxIndex=${i}\n        max=${num}\n      fi\n\
    \    fi\n  done\n  \n  if (( maxFreq == 0 )); then\n    return -1\n  else\n  \
    \  return $max\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj5m56c6e.sh: line 28: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local arr=(\
    \ $str )\n    local max=0\n    local maxCount=0\n    local maxVal=0\n    local\
    \ i\n    local j\n    local k\n    local count\n    local val\n    local count2\n\
    \    local val2\n    local count3\n    local val3\n    local count4\n    local\
    \ val4\n    local count5\n    local val5\n    local count6\n    local val6\n \
    \   local count7\n    local val7\n    local count8\n    local val8\n    local\
    \ count9\n    local val9\n    local count10\n    local val10\n    local count11\n\
    \    local val11\n    local count12\n    local val12\n    local count13\n    local\
    \ val13\n    local count14\n    local val14\n    local count15\n    local val15\n\
    \    local count16\n    local val16\n    local count17\n    local val17\n    local\
    \ count18\n    local val18\n    local count19\n    local val19\n    local count20\n\
    \    local val20\n    local count21\n    local val21\n    local count22\n    local\
    \ val22\n    local count23\n    local val23\n    local count24\n    local val24\n\
    \    local count25\n    local val25\n    local count26\n    local val26\n    local\
    \ count27\n    local val27\n    local count28\n    local val28\n    local count29\n\
    \    local val29\n    local count30\n    local val30\n    local count31\n    local\
    \ val31\n    local count32\n    local val32\n    local count33\n    local val33\n\
    \    local count34\n    local val34\n    local count35\n    local val35\n    local\
    \ count36\n    local val36\n    local count37\n    local val37\n    local count38\n\
    \    local val38\n    local count39\n    local val39\n    local count40\n    local\
    \ val40\n    local count41\n    local val41\n    local count42\n    local val42\n\
    \    local count43\n    local val43\n    local count44\n    local val44\n    local\
    \ count45\n    local val45\n    local count46\n    local val46\n    local count47\n\
    \    local val47\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxfreq=0\n  local i\n  local j\n  local freq\n  local tmp\n  local tmp2\n\
    \  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local\
    \ tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n\
    \  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n \
    \ local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local\
    \ tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n\
    \  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n \
    \ local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local\
    \ tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n\
    \  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n \
    \ local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local\
    \ tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n\
    \  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n \
    \ local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local\
    \ tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n\
    \  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n \
    \ local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local\
    \ tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n\
    \  local tmp94\n  local tmp95\n  local tmp96\n  local tmp97\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    for i in $1 \n    do\n        if [ $freq -eq 0 ]\n        then\n\
    \            freq=$i\n        elif [ $freq -gt $i ]\n        then\n          \
    \  freq=$i\n        fi\n    done\n    if [ $freq -gt $max ]\n    then\n      \
    \  max=$freq\n    fi\n    echo \"$max\"\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=0\n    for i in \"${arr[@]}\"\
    ; do\n        if (( freq[$i] >= max )); then\n            max=freq[$i]\n     \
    \   fi\n    done\n    if (( max > 0 )); then\n        echo $max\n    else\n  \
    \      echo -1\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxval=0\n    local val\n    local count\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxCount\n    local maxIndex\n    local maxValue\n    local value\n\n\
    \    # Initialize variables\n    greatest=-1\n    frequency=0\n    maxCount=0\n\
    \    maxIndex=-1\n    maxValue=-1\n\n    # Iterate through each value in the list\n\
    \    for ((i=0; i<${#list[@]}; i++)); do\n        # Increment the frequency of\
    \ the value\n        frequency=$((${frequency}+1))\n\n        # Check if the current\
    \ value is greater than the greatest value\n        if (( ${list[i]} > ${maxValue}\
    \ )); then\n            greatest=${list[i]}\n            maxCount=${frequency}\n\
    \            maxIndex=${i}\n        fi\n\n        # Check if the current value\
    \ is equal to the greatest value\n        if (( ${list[i]} == ${maxValue} ));\
    \ then\n            maxCount=${frequency}\n            maxIndex=${i}\n       \
    \ fi\n    done\n\n    # Return the greatest value\n    echo ${greatest}\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj__exr55.sh: line 41: ((: 5 5 5 5 1 > -1 : syntax error in expression
    (error token is "5 5 5 1 > -1 ")

    /tmp/tmpj__exr55.sh: line 48: ((: 5 5 5 5 1 == -1 : syntax error in expression
    (error token is "5 5 5 1 == -1 ")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local f\n    local\
    \ max\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local \n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local \n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8g4gwy8n.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxIndex\n    local maxFrequency\n    local maxValue\n    local value\n\
    \    local temp\n\n    greatest=0\n    frequency=0\n    max=0\n    maxIndex=0\n\
    \    maxFrequency=0\n    maxValue=0\n    temp=0\n    \n    for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n        value=${numbers[i]}\n        ((frequency+=1))\n        if\
    \ (( frequency > maxFrequency )); then\n            greatest=${value}\n      \
    \      maxFrequency=${frequency}\n            maxIndex=${i}\n        fi\n    \
    \    if (( value > maxValue )); then\n            maxValue=${value}\n        \
    \    maxIndex=${i}\n        fi\n    done\n    \n    if (( maxFrequency >= ${#numbers[@]}\
    \ )); then\n        echo \"-1\"\n    else\n        echo \"${numbers[maxIndex+1]}\"\
    \n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2ilx7rqb.sh: line 45: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local tmp\n    local tmpFrequency\n    \n    IFS=$'\\n' read -r -a array\
    \ <<< \"$list\"\n    \n    for ((i=0; i<${#array[@]}; i++)); do\n        greatest=${array[i]}\n\
    \        frequency=0\n        for ((j=0; j<${#array[@]}; j++)); do\n         \
    \   if [[ ${array[j]} -eq \"$greatest\" ]]; then\n                frequency=$((frequency\
    \ + 1))\n            fi\n        done\n        if ((frequency > maxFrequency));\
    \ then\n            greatest=${array[i]}\n            maxFrequency=${frequency}\n\
    \        fi\n    done\n    \n    if (( ${#array[@]} > 0 )); then\n        tmp=${greatest}\n\
    \        tmpFrequency=${maxFrequency}\n        for ((j=0; j<${#array[@]}; j++));\
    \ do\n            if [[ ${array[j]} -eq \"$tmp\" ]]; then\n                tmpFrequency=$((tmpFrequency\
    \ + 1))\n            fi\n        done\n        if (( tmpFrequency >= maxFrequency\
    \ )); then\n            greatest=${greatest}\n        fi\n    fi\n    \n    echo\
    \ \"$greatest\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuq7g8rqj.sh: line 32: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpuq7g8rqj.sh: line 46: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local index=0\n    local freq=0\n\
    \    local i\n    local j\n    local tmp\n    \n    for ((i = 0; i < ${#list};\
    \ i++)); do\n        tmp=${list[i]}\n        if [[ ${tmp} -gt 0 ]]; then\n   \
    \         if (( ${freq} > ${maxFreq} )); then\n                maxFreq=${freq}\n\
    \                maxIndex=${index}\n                max=${tmp}\n            fi\n\
    \            freq=${freq}+1\n        fi\n    done\n    \n    if [[ ${maxFreq}\
    \ -gt ${max} ]]; then\n        echo \"${max}\"\n    else\n        echo \"-1\"\n\
    \    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7iv41hxm.sh: line 28: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i<${#list}; i++)); do\n       \
    \ if [[ ${list[i]} -gt 0 ]]; then\n            freq=$((${freq}+1))\n         \
    \   if [[ ${freq} -gt ${list[i]} ]]; then\n                max=${list[i]}\n  \
    \          fi\n        fi\n    done\n    if [[ ${max} == 0 ]]; then\n        echo\
    \ \"-1\"\n    else\n        echo \"${max}\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpap6vbyb_.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local -n\
    \ arr2=$2\n    local -n arr3=$3\n    local -n arr4=$4\n    local -n arr5=$5\n\
    \    local -n arr6=$6\n    local -n arr7=$7\n    local -n arr8=$8\n    local -n\
    \ arr9=$9\n    local -n arr10=${10}\n    local -n arr11=${11}\n    local -n arr12=${12}\n\
    \    local -n arr13=${13}\n    local -n arr14=${14}\n    local -n arr15=${15}\n\
    \    local -n arr16=${16}\n    local -n arr17=${17}\n    local -n arr18=${18}\n\
    \    local -n arr19=${19}\n    local -n arr20=${20}\n    local -n arr21=${21}\n\
    \    local -n arr22=${22}\n    local -n arr23=${23}\n    local -n arr24=${24}\n\
    \    local -n arr25=${25}\n    local -n arr26=${26}\n    local -n arr27=${27}\n\
    \    local -n arr28=${28}\n    local -n arr29=${29}\n    local -n arr30=${30}\n\
    \    local -n arr31=${31}\n    local -n arr32=${32}\n    local -n arr33=${33}\n\
    \    local -n arr34=${34}\n    local -n arr35=${35}\n    local -n arr36=${36}\n\
    \    local -n arr37=${37}\n    local -n arr38=${38}\n    local -n arr39=${39}\n\
    \    local -n arr40=${40}\n    local -n arr41=${41}\n    local -n arr42=${42}\n\
    \    local -n arr43=${43}\n    local -n arr44=${44}\n    local -n arr45=${45}\n\
    \    local -n arr46=${46}\n    local -n arr47=${47}\n    local -n arr48=${48}\n\
    \    local -n arr49=${49}\n    local -n arr50=${50}\n    local -n arr51=${51}\n\
    \    local -n arr52=${52}\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcuw37jd2.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmpcuw37jd2.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 28: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 29: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 30: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 31: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 32: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 33: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 34: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 35: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 36: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 37: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 38: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 39: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 40: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 41: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 42: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 43: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 44: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 45: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 46: local: `'': not a valid identifier

    /tmp/tmpcuw37jd2.sh: line 47: local: '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local -n arr=$1\n  local -n max=$2\n\
    \  local -n val=$3\n  local -n count=$4\n  local -n maxCount=0\n  local -n maxVal=0\n\
    \  local -n maxCountVal=0\n  local -n i\n  local -n j\n  local -n valCount\n \
    \ local -n valCountVal\n  local -n valCountVal2\n  local -n valCountVal3\n  local\
    \ -n valCountVal4\n  local -n valCountVal5\n  local -n valCountVal6\n  local -n\
    \ valCountVal7\n  local -n valCountVal8\n  local -n valCountVal9\n  local -n valCountVal10\n\
    \  local -n valCountVal11\n  local -n valCountVal12\n  local -n valCountVal13\n\
    \  local -n valCountVal14\n  local -n valCountVal15\n  local -n valCountVal16\n\
    \  local -n valCountVal17\n  local -n valCountVal18\n  local -n valCountVal19\n\
    \  local -n valCountVal20\n  local -n valCountVal21\n  local -n valCountVal22\n\
    \  local -n valCountVal23\n  local -n valCountVal24\n  local -n valCountVal25\n\
    \  local -n valCountVal26\n  local -n valCountVal27\n  local -n valCountVal28\n\
    \  local -n valCountVal29\n  local -n valCountVal30\n  local -n valCountVal31\n\
    \  local -n valCountVal32\n  local -n valCountVal33\n  local -n valCountVal34\n\
    \  local -n valCountVal35\n  local -n valCountVal36\n  local -n valCountVal37\n\
    \  local -n valCountVal38\n  local -n valCountVal39\n  local -n valCountVal40\n\
    \  local -n valCountVal41\n  local -n valCountVal42\n  local -n valCountVal43\n\
    \  local -n valCountVal44\n  local -n valCountVal45\n  local -n valCountVal46\n\
    \  local -n valCountVal47\n  local -n valCountVal48\n  local -n val\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2n6bufg1.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmp2n6bufg1.sh: line 17: local: `'': not a valid identifier

    /tmp/tmp2n6bufg1.sh: line 18: local: `'': not a valid identifier

    /tmp/tmp2n6bufg1.sh: line 19: local: `'': not a valid identifier

    /tmp/tmp2n6bufg1.sh: line 20: local: `0'': invalid variable name for name reference

    /tmp/tmp2n6bufg1.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmp2n6bufg1.sh: line 22: local: `0'': invalid variable name for name reference

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $(sort -u <<<\"${arr[@]}\" | wc -l) )\n    max=${arr[0]}\n\
    \    for i in \"${arr[@]:1}\"; do\n        if (( freq[$i] >= max )); then\n  \
    \          max=$i\n        fi\n    done\n    echo \"${max}\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=\"-1\"\n    frequency=\"\
    -1\"\n    \n    for (( i=0; i<${#list}; i++ )); do\n        if [[ ${list[i]} ==\
    \ ${list[i+1]} ]]; then\n            frequency=$(( ${frequency} + 1 ))\n     \
    \   else\n            if [[ ${frequency} -gt ${list[i]} ]]; then\n           \
    \     greatest=${list[i]}\n                frequency=${list[i]}\n            else\n\
    \                frequency=${list[i]}\n            fi\n        fi\n    done\n\
    \    \n    if [[ ${frequency} -gt ${greatest} ]]; then\n        greatest=${frequency}\n\
    \    fi\n    \n    echo \"${greatest}\"\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmgjdhyh7.sh: line 28: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpmgjdhyh7.sh: line 26: 5 5 5 5 1 + 1 : syntax error in expression (error
    token is "5 5 5 1 + 1 ")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local strArray=($str)\n\
    \    local max=0\n    local maxIndex=0\n    local maxFreq=0\n    local i\n   \
    \ \n    for i in \"${strArray[@]}\"; do\n        if [ $i -gt $max ]; then\n  \
    \          max=$i\n            maxIndex=$i\n            maxFreq=$((maxFreq+1))\n\
    \        elif [ $i -eq $max ]; then\n            maxFreq=$((maxFreq+1))\n    \
    \    fi\n    done\n    \n    if [ $maxFreq -gt $max ]; then\n        echo \"$max\"\
    \n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local max=0\n\
    \    local maxCount=0\n    local i\n    local j\n    local k\n    local count\n\
    \    local maxFreq\n    local freq\n    local temp\n    local temp2\n    local\
    \ temp3\n    local temp4\n    local temp5\n    local temp6\n    local temp7\n\
    \    local temp8\n    local temp9\n    local temp10\n    local temp11\n    local\
    \ temp12\n    local temp13\n    local temp14\n    local temp15\n    local temp16\n\
    \    local temp17\n    local temp18\n    local temp19\n    local temp20\n    local\
    \ temp21\n    local temp22\n    local temp23\n    local temp24\n    local temp25\n\
    \    local temp26\n    local temp27\n    local temp28\n    local temp29\n    local\
    \ temp30\n    local temp31\n    local temp32\n    local temp33\n    local temp34\n\
    \    local temp35\n    local temp36\n    local temp37\n    local temp38\n    local\
    \ temp39\n    local temp40\n    local temp41\n    local temp42\n    local temp43\n\
    \    local temp44\n    local temp45\n    local temp46\n    local temp47\n    local\
    \ temp48\n    local temp49\n    local temp50\n    local temp51\n    local temp52\n\
    \    local temp53\n    local temp54\n    local temp55\n    local temp56\n    local\
    \ temp57\n    local temp58\n    local temp59\n    local temp60\n    local temp61\n\
    \    local temp62\n    local temp63\n    local temp64\n    local temp65\n    local\
    \ temp66\n    local temp67\n    local temp68\n    local temp69\n    local temp70\n\
    \    local temp71\n    local temp72\n    local temp73\n    local temp74\n    local\
    \ temp75\n    local temp76\n    local temp77\n    local temp78\n    local temp79\n\
    \    local temp80\n    local temp81\n    local temp82\n    local temp83\n    local\
    \ temp84\n    local temp85\n    local temp86\n    local temp87\n    local temp88\n\
    \    local temp89\n    local temp90\n    local temp91\n    local temp92\n    local\
    \ temp93\n    local temp94\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local arr=(\
    \ $str )\n    local max=0\n    local maxCount=0\n    local maxVal=0\n    local\
    \ i\n    local j\n    local k\n    local val\n    local count\n    local freq\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    \n    for i in\
    \ $list; do\n        if (( freq > 0 )); then\n            if (( freq > max ));\
    \ then\n                max=$i\n            fi\n        fi\n        freq=$(grep\
    \ -c \"$i\" <<< \"$list\")\n    done\n    \n    if (( freq > 0 )); then\n    \
    \    echo \"$max\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local maxCount=0\n    local i\n    local j\n    local k\n    local count\n\
    \    local freq\n    local tmp\n    local num\n    local num2\n    local num3\n\
    \    local num4\n    local num5\n    local num6\n    local num7\n    local num8\n\
    \    local num9\n    local num10\n    local num11\n    local num12\n    local\
    \ num13\n    local num14\n    local num15\n    local num16\n    local num17\n\
    \    local num18\n    local num19\n    local num20\n    local num21\n    local\
    \ num22\n    local num23\n    local num24\n    local num25\n    local num26\n\
    \    local num27\n    local num28\n    local num29\n    local num30\n    local\
    \ num31\n    local num32\n    local num33\n    local num34\n    local num35\n\
    \    local num36\n    local num37\n    local num38\n    local num39\n    local\
    \ num40\n    local num41\n    local num42\n    local num43\n    local num44\n\
    \    local num45\n    local num46\n    local num47\n    local num48\n    local\
    \ num49\n    local num50\n    local num51\n    local num52\n    local num53\n\
    \    local num54\n    local num55\n    local num56\n    local num57\n    local\
    \ num58\n    local num59\n    local num60\n    local num61\n    local num62\n\
    \    local num63\n    local num64\n    local num65\n    local num66\n    local\
    \ num67\n    local num68\n    local num69\n    local num70\n    local num71\n\
    \    local num72\n    local num73\n    local num74\n    local num75\n    local\
    \ num76\n    local num77\n    local num78\n    local num79\n    local num80\n\
    \    local num81\n    local num82\n    local num83\n    local num84\n    local\
    \ num85\n    local num86\n    local num87\n    local num88\n    local num89\n\
    \    local num90\n    local num91\n    local num92\n    local num93\n    local\
    \ num94\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp72mv5bk0.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local freq\n    local j\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local count=0\n    local maxCount=0\n    local maxVal=0\n    local maxValCount=0\n\
    \    local val\n    local valCount\n    local valCount2\n    local valCount3\n\
    \    local valCount4\n    local valCount5\n    local valCount6\n    local valCount7\n\
    \    local valCount8\n    local valCount9\n    local valCount10\n    local valCount11\n\
    \    local valCount12\n    local valCount13\n    local valCount14\n    local valCount15\n\
    \    local valCount16\n    local valCount17\n    local valCount18\n    local valCount19\n\
    \    local valCount20\n    local valCount21\n    local valCount22\n    local valCount23\n\
    \    local valCount24\n    local valCount25\n    local valCount26\n    local valCount27\n\
    \    local valCount28\n    local valCount29\n    local valCount30\n    local valCount31\n\
    \    local valCount32\n    local valCount33\n    local valCount34\n    local valCount35\n\
    \    local valCount36\n    local valCount37\n    local valCount38\n    local valCount39\n\
    \    local valCount40\n    local valCount41\n    local valCount42\n    local valCount43\n\
    \    local valCount44\n    local valCount45\n    local valCount46\n    local valCount47\n\
    \    local valCount48\n    local valCount49\n    local valCount50\n    local valCount51\n\
    \    local valCount52\n    local valCount53\n    local valCount54\n    local valCount55\n\
    \    local valCount56\n    local valCount57\n    local valCount58\n    local valCount59\n\
    \    local valCount60\n    local valCount61\n    local valCount62\n    local valCount63\n\
    \    local valCount64\n    local valCount65\n    local valCount66\n    local valCount67\n\
    \    local valCount68\n    local valCount69\n    local valCount70\n    local valCount71\n\
    \    local valCount72\n    local valCount73\n    local valCount74\n    local valCount75\n\
    \    local valCount76\n    local valCount77\n    local valCount78\n    local valCount79\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local valueFrequency\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueMax\n\
    \    local valueMaxFrequency\n    local valueMaxIndex\n    local valueMaxValue\n\
    \    local valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n \
    \   local valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n  \
    \  local valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n   \
    \ local valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n    local\
    \ valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n    local valueMaxCount\n\
    \    local valueMaxIndex\n    local valueMaxValue\n    local valueMaxCount\n \
    \   local valueMaxIndex\n    local valueMaxValue\n    local valueMaxCount\n  \
    \  local valueMaxIndex\n    local valueMaxValue\n    local valueMaxCount\n   \
    \ local valueMaxIndex\n    local valueMaxValue\n    local valueMaxCount\n    local\
    \ valueMaxIndex\n    local valueMaxValue\n    local valueMaxCount\n    local valueMaxIndex\n\
    \    local valueMaxValue\n    local valueMaxCount\n    local valueMaxIndex\n \
    \   local valueMaxValue\n    local valueMaxCount\n    local valueMaxIndex\n  \
    \  local valueMaxValue\n    local valueMaxCount\n    local valueMaxIndex\n   \
    \ local valueMaxValue\n    local valueMaxCount\n    local valueMaxIndex\n    local\
    \ valueMaxValue\n    local valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n\
    \    local valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n \
    \   local valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n  \
    \  local valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n   \
    \ local valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n    local\
    \ valueMaxCount\n    local valueMaxIndex\n    local valueMaxValue\n    local valueMaxCount\n\
    \    local valueMaxIndex\n    local valueMaxValue\n    local valueMaxCount\n \
    \   local valueMaxIndex\n    local valueMaxValue\n    local valueMaxCount\n  \
    \  local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxfreq=0\n  local i\n  local freq\n  local j\n  local tmp\n  local tmp2\n\
    \  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local\
    \ tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n\
    \  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n \
    \ local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local\
    \ tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n\
    \  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n \
    \ local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local\
    \ tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n\
    \  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n \
    \ local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local\
    \ tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n\
    \  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n \
    \ local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local\
    \ tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n\
    \  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n \
    \ local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local\
    \ tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n\
    \  local tmp94\n  local tmp95\n  local tmp96\n  local tmp97\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    \n    for ((i=0;\
    \ i<${#list}; i++)); do\n        tmp=\"${list[i]}\"\n        if [[ ${list[i]}\
    \ -gt 0 ]]; then\n            if (( ${freq} <= ${tmp} )) ; then\n            \
    \    freq=${tmp}\n                max=${i}\n            fi\n        fi\n    done\n\
    \    \n    if [[ ${max} -eq 0 ]]; then\n        echo \"-1\"\n    else\n      \
    \  echo \"${list[max]}\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpybg99nya.sh: line 25: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxIndex\n\
    \    local min\n    local minIndex\n    local number\n    local tmp\n    local\
    \ tmpIndex\n    local tmpFrequency\n    local tmpNumber\n    local tmpString\n\
    \    local tmpStringLength\n    local tmpStringLength2\n    local tmpStringLength3\n\
    \    local tmpStringLength4\n    local tmpStringLength5\n    local tmpStringLength6\n\
    \    local tmpStringLength7\n    local tmpStringLength8\n    local tmpStringLength9\n\
    \    local tmpStringLength10\n    local tmpStringLength11\n    local tmpStringLength12\n\
    \    local tmpStringLength13\n    local tmpStringLength14\n    local tmpStringLength15\n\
    \    local tmpStringLength16\n    local tmpStringLength17\n    local tmpStringLength18\n\
    \    local tmpStringLength19\n    local tmpStringLength20\n    local tmpStringLength21\n\
    \    local tmpStringLength22\n    local tmpStringLength23\n    local tmpStringLength24\n\
    \    local tmpStringLength25\n    local tmpStringLength26\n    local tmpStringLength27\n\
    \    local tmpStringLength28\n    local tmpStringLength29\n    local tmpStringLength30\n\
    \    local tmpStringLength31\n    local tmpStringLength32\n    local tmpStringLength33\n\
    \    local tmpStringLength34\n    local tmpStringLength35\n    local tmpStringLength36\n\
    \    local tmpStringLength37\n    local tmpStringLength38\n    local tmpStringLength39\n\
    \    local tmpStringLength40\n    local tmpStringLength41\n    local tmpStringLength42\n\
    \    local tmpStringLength43\n    local tmpStringLength44\n    local tmpStringLength45\n\
    \    local tmpStringLength46\n    local tmpStringLength47\n    local tmpStringLength48\n\
    \    local tmpStringLength49\n    local tmpStringLength50\n    local tmpStringLength51\n\
    \    local tmpStringLength52\n    local tmpStringLength53\n    local tmpStringLength54\n\
    \    local tmpStringLength55\n    local tmpStringLength56\n    local tmpStringLength57\n\
    \    local tmpStringLength58\n    local tmpStringLength59\n    local tmpStringLength60\n\
    \    local tmpStringLength61\n    local tmpStringLength62\n    local tmpStringLength63\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxCount\n\
    \    local maxCountIndex\n    local maxCountValue\n    local maxValue\n    local\
    \ min\n    local minCount\n    local minCountIndex\n    local minCountValue\n\
    \    local minValue\n    local value\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCountIndex\n    local valueCountValue\n\
    \    local valueIndexValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n    local valueIndexValueValue\n    local valueIndexValueValue\n\
    \    local valueIndexValueValue\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local -n\
    \ arr2=$2\n    local -n max=$3\n    local -n max2=$4\n    local -n i\n    local\
    \ -n j\n    local -n k\n    local -n count\n    local -n count2\n    local -n\
    \ maxCount\n    local -n maxCount2\n    local -n maxCount3\n    local -n maxCount4\n\
    \    local -n maxCount5\n    local -n maxCount6\n    local -n maxCount7\n    local\
    \ -n maxCount8\n    local -n maxCount9\n    local -n maxCount10\n    local -n\
    \ maxCount11\n    local -n maxCount12\n    local -n maxCount13\n    local -n maxCount14\n\
    \    local -n maxCount15\n    local -n maxCount16\n    local -n maxCount17\n \
    \   local -n maxCount18\n    local -n maxCount19\n    local -n maxCount20\n  \
    \  local -n maxCount21\n    local -n maxCount22\n    local -n maxCount23\n   \
    \ local -n maxCount24\n    local -n maxCount25\n    local -n maxCount26\n    local\
    \ -n maxCount27\n    local -n maxCount28\n    local -n maxCount29\n    local -n\
    \ maxCount30\n    local -n maxCount31\n    local -n maxCount32\n    local -n maxCount33\n\
    \    local -n maxCount34\n    local -n maxCount35\n    local -n maxCount36\n \
    \   local -n maxCount37\n    local -n maxCount38\n    local -n maxCount39\n  \
    \  local -n maxCount40\n    local -n maxCount41\n    local -n maxCount42\n   \
    \ local -n maxCount43\n    local -n maxCount44\n    local -n maxCount45\n    local\
    \ -n maxCount46\n    local -n maxCount47\n    local -n maxCount48\n    local -n\
    \ maxCount49\n    local -n maxCount50\n    local -n maxCount51\n    local -n maxCount52\n\
    \    local -n maxCount53\n    local -n maxCount54\n    local -n maxCount55\n \
    \   local -n maxCount56\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph8jts8tk.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmph8jts8tk.sh: line 17: local: `'': not a valid identifier

    /tmp/tmph8jts8tk.sh: line 18: local: `'': not a valid identifier

    /tmp/tmph8jts8tk.sh: line 19: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=0\n    for i in \"${arr[@]}\"\
    ; do\n        if (( freq[$i] >= max )); then\n            max=freq[$i]\n     \
    \   fi\n    done\n    if (( max > 0 )); then\n        echo $max\n    else\n  \
    \      echo -1\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxval=0\n    local maxfreq=0\n    local i\n    local val\n    local\
    \ freq\n    local j\n    local count\n    local count2\n    local count3\n   \
    \ local count4\n    local count5\n    local count6\n    local count7\n    local\
    \ count8\n    local count9\n    local count10\n    local count11\n    local count12\n\
    \    local count13\n    local count14\n    local count15\n    local count16\n\
    \    local count17\n    local count18\n    local count19\n    local count20\n\
    \    local count21\n    local count22\n    local count23\n    local count24\n\
    \    local count25\n    local count26\n    local count27\n    local count28\n\
    \    local count29\n    local count30\n    local count31\n    local count32\n\
    \    local count33\n    local count34\n    local count35\n    local count36\n\
    \    local count37\n    local count38\n    local count39\n    local count40\n\
    \    local count41\n    local count42\n    local count43\n    local count44\n\
    \    local count45\n    local count46\n    local count47\n    local count48\n\
    \    local count49\n    local count50\n    local count51\n    local count52\n\
    \    local count53\n    local count54\n    local count55\n    local count56\n\
    \    local count57\n    local count58\n    local count59\n    local count60\n\
    \    local count61\n    local count62\n    local count63\n    local count64\n\
    \    local count65\n    local count66\n    local count67\n    local count68\n\
    \    local count69\n    local count70\n    local count71\n    local count72\n\
    \    local count73\n    local count74\n    local count75\n    local count76\n\
    \    local count77\n    local count78\n    local count79\n    local count80\n\
    \    local count81\n    local count82\n    local count83\n    local count84\n\
    \    local count85\n    local count86\n    local count87\n    local count88\n\
    \    local count89\n    local count90\n    local count91\n    local count92\n\
    \    local count93\n    local count94\n    local count95\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxIndex\n    local maxFrequency\n    local maxValue\n    local value\n\
    \    local valueCount\n    local valueIndex\n    local valueFrequency\n    local\
    \ valueValue\n    local valueValueCount\n    local valueValueIndex\n    local\
    \ valueValueFrequency\n    local valueValueValue\n    local valueValueValueCount\n\
    \    local valueValueValueIndex\n    local valueValueValueFrequency\n    local\
    \ valueValueValueValue\n    local valueValueValueValueCount\n    local valueValueValueValueIndex\n\
    \    local valueValueValueValueFrequency\n    local valueValueValueValueValue\n\
    \    local valueValueValueValueValueCount\n    local valueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueFrequency\n    local valueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueCount\n    local valueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValue\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local result\n    local tmp\n\
    \    \n    greatest=-1\n    frequency=0\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        tmp=${list[i]}\n        if [[ ${tmp} -gt 0 ]]; then\n          \
    \  if [[ ${frequency} -eq 0 ]]; then\n                frequency=1\n          \
    \      greatest=${tmp}\n            else\n                frequency=$((${frequency}+1))\n\
    \                if [[ ${frequency} -ge ${tmp} ]]; then\n                    greatest=${tmp}\n\
    \                fi\n            fi\n        fi\n    done\n    \n    if [[ ${greatest}\
    \ -eq 0 ]]; then\n        result=-1\n    else\n        result=${greatest}\n  \
    \  fi\n    \n    echo \"${result}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsiuwfima.sh: line 29: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local max=0\n\
    \    local maxCount=0\n    local i\n    local j\n    local k\n    local count\n\
    \    local maxVal\n    local val\n    local valCount\n    local valMax\n    local\
    \ valMaxCount\n    local valMaxVal\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n    local valMaxValCount\n\
    \    local valMaxValCount\n    local valMaxValCount\n\n}\n\ncandidate() {\n  \
    \  search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxIndex\n\
    \    local maxFrequency\n    local maxValue\n    local value\n    local temp\n\
    \    \n    greatest=-1\n    frequency=0\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        value=${list[i]}\n        \n        if (( ${frequency} < ${value}\
    \ )) ; then\n            frequency=${value}\n            greatest=${list[i]}\n\
    \        fi\n    done\n    \n    if (( ${greatest} < 0 )); then\n        echo\
    \ \"-1\"\n    else\n        echo \"${greatest}\"\n    fi\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuklrh8zv.sh: line 34: ((: 0 < 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmpuklrh8zv.sh: line 34: ((: 0 <  : syntax error: operand expected (error
    token is "<  ")

    /tmp/tmpuklrh8zv.sh: line 34: ((: 0 <  : syntax error: operand expected (error
    token is "<  ")

    /tmp/tmpuklrh8zv.sh: line 34: ((: 0 <  : syntax error: operand expected (error
    token is "<  ")

    /tmp/tmpuklrh8zv.sh: line 34: ((: 0 <  : syntax error: operand expected (error
    token is "<  ")

    /tmp/tmpuklrh8zv.sh: line 34: ((: 0 <  : syntax error: operand expected (error
    token is "<  ")

    /tmp/tmpuklrh8zv.sh: line 34: ((: 0 <  : syntax error: operand expected (error
    token is "<  ")

    /tmp/tmpuklrh8zv.sh: line 34: ((: 0 <  : syntax error: operand expected (error
    token is "<  ")

    /tmp/tmpuklrh8zv.sh: line 34: ((: 0 <  : syntax error: operand expected (error
    token is "<  ")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local i freq max\n  freq=-1\n  max=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    freq=$(( ${freq}+1 ))\n    if [[ ${#1}\
    \ == $i ]]; then\n      if (( freq > ${#1} )); then\n        echo \"$max\"\n \
    \     fi\n      break\n    fi\n  done\n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxCount\n    local maxIndex\n    local maxValue\n    local value\n\n\
    \    # Initialize variables\n    greatest=-1\n    frequency=0\n    maxCount=0\n\
    \    maxIndex=-1\n    maxValue=-1\n    \n    # Iterate through each value in the\
    \ list\n    for ((i=0; i<${#list}; i++)); do\n        # Increment frequency of\
    \ current value\n        frequency=$((${frequency}+1))\n        \n        # Check\
    \ if current value is greater than greatest value\n        if ((${list[i]} > ${maxValue}));\
    \ then\n            greatest=${list[i]}\n            maxCount=${frequency}\n \
    \           maxIndex=${i}\n        fi\n    done\n    \n    # Check if greatest\
    \ value exists\n    if ((${greatest} > 0)); then\n        # Check if greatest\
    \ value has frequency greater than or equal to value of greatest value\n     \
    \   if ((${frequency} >= ${maxCount})); then\n            # Return greatest value\n\
    \            echo \"${greatest}\"\n        else\n            # Return -1\n   \
    \         echo \"-1\"\n        fi\n    else\n        # Return -1\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5bbn1cx6.sh: line 41: ((: 5 5 5 5 1 > -1: syntax error in expression
    (error token is "5 5 5 1 > -1")

    /tmp/tmp5bbn1cx6.sh: line 41: ((: > -1: syntax error: operand expected (error
    token is "> -1")

    /tmp/tmp5bbn1cx6.sh: line 41: ((: > -1: syntax error: operand expected (error
    token is "> -1")

    /tmp/tmp5bbn1cx6.sh: line 41: ((: > -1: syntax error: operand expected (error
    token is "> -1")

    /tmp/tmp5bbn1cx6.sh: line 41: ((: > -1: syntax error: operand expected (error
    token is "> -1")

    /tmp/tmp5bbn1cx6.sh: line 41: ((: > -1: syntax error: operand expected (error
    token is "> -1")

    /tmp/tmp5bbn1cx6.sh: line 41: ((: > -1: syntax error: operand expected (error
    token is "> -1")

    /tmp/tmp5bbn1cx6.sh: line 41: ((: > -1: syntax error: operand expected (error
    token is "> -1")

    /tmp/tmp5bbn1cx6.sh: line 41: ((: > -1: syntax error: operand expected (error
    token is "> -1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=0\n    frequency=0\n   \
    \ \n    for i in $numbers\n    do\n        if [ $i -gt $greatest ]\n        then\n\
    \            greatest=$i\n        fi\n        if [ $i -eq $greatest ]\n      \
    \  then\n            frequency=$((frequency+1))\n        fi\n    done\n    \n\
    \    if [ $frequency -gt $greatest ]\n    then\n        echo \"$greatest\"\n \
    \   else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 2
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i j k l m n o p q r s t\
    \ u v w x y z\n    local -a arr\n    local max\n    local freq\n    arr=( $1 )\n\
    \    max=-1\n    freq=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if\
    \ (( ${arr[i]} > 0 )); then\n            freq=$(( freq + ${arr[i]} ))\n      \
    \      if (( freq > max )); then\n                max=freq\n            fi\n \
    \       fi\n    done\n    for (( j=0; j<${#arr[@]}; j++ )); do\n        if ((\
    \ ${arr[j]} > 0 )); then\n            if (( ${arr[j]} > max )); then\n       \
    \         max=${arr[j]}\n            fi\n        fi\n    done\n    for (( k=0;\
    \ k<${#arr[@]}; k++ )); do\n        if (( ${arr[k]} > 0 )); then\n           \
    \ if (( ${arr[k]} > max )); then\n                max=${arr[k]}\n            fi\n\
    \        fi\n    done\n    for (( l=0; l<${#arr[@]}; l++ )); do\n        if ((\
    \ ${arr[l]} > 0 )); then\n            if (( ${arr[l]} > max )); then\n       \
    \         max=${arr[l]}\n            fi\n        fi\n    done\n    for (( m=0;\
    \ m<${#arr[@]}; m++ )); do\n        if (( ${arr[m]} > 0 )); then\n           \
    \ if (( ${arr[m]} > max )); then\n                max=${arr[m]}\n            fi\n\
    \        fi\n    done\n    for (( n=0; n<${#arr[@]}; n++ )); do\n        if ((\
    \ ${arr[n]} > 0 )); then\n            if (( ${arr[n]} > max )); then\n       \
    \         max=${arr[n]}\n            fi\n        fi\n    done\n    for (( o=0;\
    \ o<${#arr[@]}; o++ )); do\n        if (( ${arr[o]} > 0 )); then\n           \
    \ if (( ${arr[o]} > max )); then\n                max=${arr[o]}\n            fi\n\
    \        fi\n    done\n    for (( p=0; p<${#arr[@]}; p++ )); do\n        if ((\
    \ ${arr[p]\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiefmnamr.sh: line 74: unexpected EOF while looking for matching
    `)''

    /tmp/tmpiefmnamr.sh: line 111: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local index=0\n    local freq=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local \n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxval=0\n    local freq=0\n    local i\n    local j\n    local k\n\
    \    local val\n    local count\n    local maxcount\n    local maxfreq\n    local\
    \ maxval\n    local maxcount\n    local maxfreq\n    local maxval\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local maxcount\n    local maxfreq\n\
    \    local maxval\n    local maxcount\n    local maxfreq\n    local maxval\n \
    \   local maxcount\n    local maxfreq\n    local maxval\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local maxcount\n    local maxfreq\n\
    \    local maxval\n    local maxcount\n    local maxfreq\n    local maxval\n \
    \   local maxcount\n    local maxfreq\n    local maxval\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local maxcount\n    local maxfreq\n\
    \    local maxval\n    local maxcount\n    local maxfreq\n    local maxval\n \
    \   local maxcount\n    local maxfreq\n    local maxval\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local maxcount\n    local maxfreq\n\
    \    local maxval\n    local maxcount\n    local maxfreq\n    local maxval\n \
    \   local maxcount\n    local maxfreq\n    local maxval\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local maxcount\n    local maxfreq\n\
    \    local maxval\n    local maxcount\n    local maxfreq\n    local maxval\n \
    \   local maxcount\n    local maxfreq\n    local maxval\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local maxcount\n    local maxfreq\n\
    \    local maxval\n    local maxcount\n    local maxfreq\n    local maxval\n \
    \   local maxcount\n    local maxfreq\n    local maxval\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local maxcount\n    local maxfreq\n\
    \    local maxval\n    local maxcount\n    local maxfreq\n    local maxval\n \
    \   local maxcount\n    local maxfreq\n    local maxval\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local maxcount\n\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local freq\n    local i\n    local j\n    local maxIndex\n    local maxFreq\n\
    \    local maxVal\n    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n\
    \    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local\
    \ maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n\
    \    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local\
    \ maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n\
    \    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local\
    \ maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n\
    \    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local\
    \ maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n\
    \    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local\
    \ maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n\
    \    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local\
    \ maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n\
    \    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local\
    \ maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n\
    \    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local\
    \ maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n\
    \    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local\
    \ maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local maxValFreq\n\
    \    local maxValIndex\n    local maxValFreq\n    local maxValIndex\n    local\
    \ maxValFreq\n    local maxValIndex\n    local maxValFreq\n    local maxVal\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxCount\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxCount=0\n  local maxVal=0\n  local maxFreq=0\n  local i\n  local val\n\
    \  local freq\n  \n  for ((i=0; i<${#list}; i++)); do\n    val=${list[i]}\n  \
    \  freq=${#list[i]}\n    if [[ $freq -gt $maxFreq ]]; then\n      maxFreq=$freq\n\
    \      maxVal=$val\n      maxCount=$freq\n    fi\n  done\n  \n  if [[ $maxCount\
    \ -gt $maxFreq ]]; then\n    echo \"$maxVal\"\n  else\n    echo \"-1\"\n  fi\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i=1; i<=$max; i++ )); do\n        if [[ ${freq[$i]} -gt $freq[$max] ]]; then\n\
    \            max=i\n        fi\n    done\n    echo \"${arr[$max]}\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg4ao7si3.sh: line 22: [[: [4]: syntax error: operand expected (error
    token is "[4]")

    /tmp/tmpg4ao7si3.sh: line 22: [[: [4]: syntax error: operand expected (error token
    is "[4]")

    /tmp/tmpg4ao7si3.sh: line 22: [[: [4]: syntax error: operand expected (error token
    is "[4]")

    /tmp/tmpg4ao7si3.sh: line 22: [[: [4]: syntax error: operand expected (error token
    is "[4]")

    /tmp/tmpg4ao7si3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg4ao7si3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg4ao7si3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg4ao7si3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg4ao7si3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg4ao7si3.sh: line 22: [[: [1]: syntax error: operand expected (error token
    is "[1]")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local index=0\n    local freq=0\n\
    \    local i\n    local j\n    local k\n    local maxVal\n    local maxFreqVal\n\
    \    local maxFreqValIndex\n    local maxFreqValFreq\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n    local maxFreqValFreqIndex\n\
    \    local maxFreqValF\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local numbers=$1\n  local greatest\n\
    \  local frequency\n  local i\n  \n  for i in $numbers\n  do\n    if [[ $i =~\
    \ ^[0-9]+$ ]]; then\n      frequency=$(grep -c \"$i\" <<< $numbers)\n      if\
    \ [[ $frequency -gt $i ]]; then\n        greatest=$i\n      fi\n    fi\n  done\n\
    \  \n  if [[ $greatest == \"\" ]]; then\n    return -1\n  else\n    return $greatest\n\
    \  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local count=0\n    local maxCount=0\n    local maxVal=0\n    local val\n\
    \    local i\n    local j\n    local k\n    local val\n    local val2\n    local\
    \ val3\n    local val4\n    local val5\n    local val6\n    local val7\n    local\
    \ val8\n    local val9\n    local val10\n    local val11\n    local val12\n  \
    \  local val13\n    local val14\n    local val15\n    local val16\n    local val17\n\
    \    local val18\n    local val19\n    local val20\n    local val21\n    local\
    \ val22\n    local val23\n    local val24\n    local val25\n    local val26\n\
    \    local val27\n    local val28\n    local val29\n    local val30\n    local\
    \ val31\n    local val32\n    local val33\n    local val34\n    local val35\n\
    \    local val36\n    local val37\n    local val38\n    local val39\n    local\
    \ val40\n    local val41\n    local val42\n    local val43\n    local val44\n\
    \    local val45\n    local val46\n    local val47\n    local val48\n    local\
    \ val49\n    local val50\n    local val51\n    local val52\n    local val53\n\
    \    local val54\n    local val55\n    local val56\n    local val57\n    local\
    \ val58\n    local val59\n    local val60\n    local val61\n    local val62\n\
    \    local val63\n    local val64\n    local val65\n    local val66\n    local\
    \ val67\n    local val68\n    local val69\n    local val70\n    local val71\n\
    \    local val72\n    local val73\n    local val74\n    local val75\n    local\
    \ val76\n    local val77\n    local val78\n    local val79\n    local val80\n\
    \    local val81\n    local val82\n    local val83\n    local val84\n    local\
    \ val85\n    local val86\n    local val87\n    local val88\n    local val89\n\
    \    local val90\n    local val91\n    local val92\n    local val93\n    local\
    \ val\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=0\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${#1} == $i ]];\
    \ then\n            freq=$(( ${freq}+1 ))\n            if [[ ${freq} -gt $max\
    \ ]]; then\n                max=$freq\n            fi\n        elif [[ ${#1} ==\
    \ $(( ${i}+1 )) ]]; then\n            freq=$(( ${freq}+1 ))\n            if [[\
    \ ${freq} -gt $max ]]; then\n                max=$freq\n            fi\n     \
    \   else\n            freq=0\n        fi\n    done\n    if [[ ${max} -eq 0 ]];\
    \ then\n        echo \"-1\"\n    else\n        echo \"${max}\"\n    fi\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxCount=0\n    local maxVal=0\n    local count=0\n    local val=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local freq\n    local i\n    local j\n    local maxIndex\n    local maxFreq\n\
    \    local maxVal\n    local val\n    local valFreq\n    local valIndex\n    local\
    \ valMax\n    local valMaxIndex\n    local valMaxFreq\n    local valMaxVal\n \
    \   local valVal\n    local valValFreq\n    local valValIndex\n    local valValMax\n\
    \    local valValMaxIndex\n    local valValMaxFreq\n    local valValMaxVal\n \
    \   local valValVal\n    local valValValFreq\n    local valValValIndex\n    local\
    \ valValValMax\n    local valValValMaxIndex\n    local valValValMaxFreq\n    local\
    \ valValValMaxVal\n    local valValValVal\n    local valValValValFreq\n    local\
    \ valValValValIndex\n    local valValValValMax\n    local valValValValMaxIndex\n\
    \    local valValValValMaxFreq\n    local valValValValMaxVal\n    local valValValValVal\n\
    \    local valValValValValFreq\n    local valValValValValIndex\n    local valValValValValMax\n\
    \    local valValValValValMaxIndex\n    local valValValValValMaxFreq\n    local\
    \ valValValValValMaxVal\n    local valValValValValVal\n    local valValValValValValFreq\n\
    \    local valValValValValValIndex\n    local valValValValValValMax\n    local\
    \ valValValValValValMaxIndex\n    local valValValValValValMaxFreq\n    local valValValValValValMaxVal\n\
    \    local valValValValValValVal\n    local valValValValValValFreq\n    local\
    \ valValValValValValIndex\n    local valValValValValValMax\n    local valValValValValValMaxIndex\n\
    \    local valValValValValValMaxFreq\n    local valValValValValValMaxVal\n   \
    \ local valValValValValValVal\n    local valValValValValValValFreq\n    local\
    \ valValValValValValValIndex\n    local valValValValValValValMax\n    local valValValValValValValMaxIndex\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i = 0; i <= max; i++ )); do\n        if (( ${freq[$i]} >= ${freq[$max]} ));\
    \ then\n            max=i\n        fi\n    done\n    echo \"${arr[$max]}\"\n}\n\
    \ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected
    (error token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmpbh2j8p7h.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local arr=(\
    \ $str )\n    local max=0\n    local maxIndex=0\n    local maxFreq=0\n    local\
    \ i\n    local j\n    local k\n    local freq\n    local count\n    local maxCount\n\
    \    local maxIndex\n    local maxFreq\n    local max\n    local maxCount\n  \
    \  local maxIndex\n    local maxFreq\n    local max\n    local maxCount\n    local\
    \ maxIndex\n    local maxFreq\n    local max\n    local maxCount\n    local maxIndex\n\
    \    local maxFreq\n    local max\n    local maxCount\n    local maxIndex\n  \
    \  local maxFreq\n    local max\n    local maxCount\n    local maxIndex\n    local\
    \ maxFreq\n    local max\n    local maxCount\n    local maxIndex\n    local maxFreq\n\
    \    local max\n    local maxCount\n    local maxIndex\n    local maxFreq\n  \
    \  local max\n    local maxCount\n    local maxIndex\n    local maxFreq\n    local\
    \ max\n    local maxCount\n    local maxIndex\n    local maxFreq\n    local max\n\
    \    local maxCount\n    local maxIndex\n    local maxFreq\n    local max\n  \
    \  local maxCount\n    local maxIndex\n    local maxFreq\n    local max\n    local\
    \ maxCount\n    local maxIndex\n    local maxFreq\n    local max\n    local maxCount\n\
    \    local maxIndex\n    local maxFreq\n    local max\n    local maxCount\n  \
    \  local maxIndex\n    local maxFreq\n    local max\n    local maxCount\n    local\
    \ maxIndex\n    local maxFreq\n    local max\n    local maxCount\n    local maxIndex\n\
    \    local maxFreq\n    local max\n    local maxCount\n    local maxIndex\n  \
    \  local maxFreq\n    local max\n    local maxCount\n    local maxIndex\n    local\
    \ maxFreq\n    local max\n    local maxCount\n    local maxIndex\n    local maxFreq\n\
    \    local max\n    local maxCount\n    local maxIndex\n    local maxFreq\n  \
    \  local max\n    local maxCount\n    local maxIndex\n    local maxFreq\n    local\
    \ max\n    local maxCount\n    local maxIndex\n    local maxFreq\n    local max\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    \n    for i in\
    \ $list; do\n        if (( freq > 0 )); then\n            if (( freq > max ));\
    \ then\n                max=$i\n            fi\n        fi\n        freq=$(( freq\
    \ + 1 ))\n    done\n    \n    if (( freq > 0 )); then\n        echo \"$max\"\n\
    \    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    \n    for ((i=0;\
    \ i<${#list}; i++)); do\n        tmp=${list[i]}\n        if [[ $tmp -gt 0 ]];\
    \ then\n            if ((freq > tmp)); then\n                freq=${tmp}\n   \
    \             max=${i}\n            fi\n        fi\n    done\n    \n    if ((freq\
    \ > 0)); then\n        echo \"$max\"\n    else\n        echo \"-1\"\n    fi\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphx2b26rx.sh: line 25: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=-1\n    frequency=0\n  \
    \  \n    for i in $numbers\n    do\n        if [ $i -gt $greatest ]; then\n  \
    \          greatest=$i\n        fi\n        frequency=$(( $frequency + 1 ))\n\
    \    done\n    \n    if [ $frequency -gt $greatest ]; then\n        echo \"$greatest\"\
    \n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxval=0\n    local maxfreq=0\n    local i\n    local val\n    local\
    \ freq\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\
    \ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    \n    for i in $list; do\n        if [ $i\
    \ -gt $max ]; then\n            freq=$i\n            max=$i\n        fi\n    done\n\
    \    \n    if [ $freq -gt $max ]; then\n        echo \"$max\"\n    else\n    \
    \    echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i j k l m n o p q r s t\
    \ u v w x y z\n    local -a arr\n    local max\n    local freq\n    local -a arr\n\
    \    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local\
    \ -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n\
    \    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local\
    \ -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n\
    \    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local\
    \ -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n\
    \    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local\
    \ -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n\
    \    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local\
    \ -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n\
    \    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local\
    \ -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n\
    \    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local\
    \ -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n\
    \    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local\
    \ -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n\
    \    local -a arr\n    local -a arr\n    local -a arr\n    local -a arr\n    local\
    \ -a arr\n    local -a arr\n    local -\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=0\n    shift\n    for ((i=0; i<${#1}; i++)); do\n        if [[ ${#1}\
    \ == $i ]]; then\n            freq=$((freq+1))\n        else\n            if ((freq\
    \ >= ${#1}-i)); then\n                max=$((max+1))\n            fi\n       \
    \ fi\n    done\n    if [[ ${#1} == $i ]]; then\n        max=$((max+1))\n    fi\n\
    \    echo \"${max}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local -n arr=$1\n  local max=0\n\
    \  local maxval\n  local i\n  local count\n  for i in \"${arr[@]}\"; do\n    count=$((${#arr[@]}\
    \ - 1))\n    if [[ ${arr[$i]} -gt ${max} ]]; then\n      max=$i\n      maxval=${arr[$i]}\n\
    \    fi\n  done\n  if [[ ${maxval} -gt ${max} ]]; then\n    echo \"${maxval}\"\
    \n  else\n    echo \"-1\"\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpoa7tvl8p.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ freq\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local -n arr=$1\n  local -n max=$2\n\
    \  local -n freq=$3\n  local -n val=$4\n  local -n maxval=$5\n  local -n i\n \
    \ local -n j\n  local -n maxfreq=$6\n  local -n maxvalfreq=$7\n  local -n maxvalfreq2=$8\n\
    \  local -n maxvalfreq3=$9\n  local -n maxvalfreq4=$10\n  local -n maxvalfreq5=$11\n\
    \  local -n maxvalfreq6=$12\n  local -n maxvalfreq7=$13\n  local -n maxvalfreq8=$14\n\
    \  local -n maxvalfreq9=$15\n  local -n maxvalfreq10=$16\n  local -n maxvalfreq11=$17\n\
    \  local -n maxvalfreq12=$18\n  local -n maxvalfreq13=$19\n  local -n maxvalfreq14=$20\n\
    \  local -n maxvalfreq15=$21\n  local -n maxvalfreq16=$22\n  local -n maxvalfreq17=$23\n\
    \  local -n maxvalfreq18=$24\n  local -n maxvalfreq19=$25\n  local -n maxvalfreq20=$26\n\
    \  local -n maxvalfreq21=$27\n  local -n maxvalfreq22=$28\n  local -n maxvalfreq23=$29\n\
    \  local -n maxvalfreq24=$30\n  local -n maxvalfreq25=$31\n  local -n maxvalfreq26=$32\n\
    \  local -n maxvalfreq27=$33\n  local -n maxvalfreq28=$34\n  local -n maxvalfreq29=$35\n\
    \  local -n maxvalfreq30=$36\n  local -n maxvalfreq31=$37\n  local -n maxvalfreq32=$38\n\
    \  local -n maxvalfreq33=$39\n  local -n maxvalfreq34=$40\n  local -n maxvalfreq35=$41\n\
    \  local -n maxvalfreq36=$42\n  local -n maxvalfreq37=$43\n  local -n maxvalfreq38=$44\n\
    \  local -n maxvalfreq39=$45\n  local -n maxvalfreq40=$46\n  local -n maxvalfreq41=$47\n\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6nyoun99.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmp6nyoun99.sh: line 17: local: `'': not a valid identifier

    /tmp/tmp6nyoun99.sh: line 18: local: `'': not a valid identifier

    /tmp/tmp6nyoun99.sh: line 19: local: `'': not a valid identifier

    /tmp/tmp6nyoun99.sh: line 20: local: `'': not a valid identifier

    /tmp/tmp6nyoun99.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp6nyoun99.sh: line 24: local: `'': not a valid identifier

    /tmp/tmp6nyoun99.sh: line 25: local: `'': not a valid identifier

    /tmp/tmp6nyoun99.sh: line 26: local: `'': not a valid identifier

    /tmp/tmp6nyoun99.sh: line 27: local: `5 5 5 5 10'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 28: local: `5 5 5 5 11'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 29: local: `5 5 5 5 12'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 30: local: `5 5 5 5 13'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 31: local: `5 5 5 5 14'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 32: local: `5 5 5 5 15'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 33: local: `5 5 5 5 16'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 34: local: `5 5 5 5 17'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 35: local: `5 5 5 5 18'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 36: local: `5 5 5 5 19'': invalid variable name for
    name reference

    /tmp/tmp6nyoun99.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmp6nyoun99.sh: line 38: local: `1'': invalid variable name for name reference

    /tmp/tmp6nyoun99.sh: line 39: local: `2'': invalid variable name for name reference

    /tmp/tmp6nyoun99.sh: line 40: local: `3'': invalid variable name for name reference

    /tmp/tmp6nyoun99.sh: line 41: local: `4'': invalid variable name for name reference

    /tmp/tmp6nyoun99.sh: line 42: local: `5'': invalid variable name for name reference

    /tmp/tmp6nyoun99.sh: line 4'
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxFreq=0\n    local maxIndex=0\n    local maxVal=0\n    local i\n\
    \    local j\n    local val\n    local freq\n    local count\n    local index\n\
    \    local val\n    local freq\n    local count\n    local index\n    local val\n\
    \    local freq\n    local count\n    local index\n    local val\n    local freq\n\
    \    local count\n    local index\n    local val\n    local freq\n    local count\n\
    \    local index\n    local val\n    local freq\n    local count\n    local index\n\
    \    local val\n    local freq\n    local count\n    local index\n    local val\n\
    \    local freq\n    local count\n    local index\n    local val\n    local freq\n\
    \    local count\n    local index\n    local val\n    local freq\n    local count\n\
    \    local index\n    local val\n    local freq\n    local count\n    local index\n\
    \    local val\n    local freq\n    local count\n    local index\n    local val\n\
    \    local freq\n    local count\n    local index\n    local val\n    local freq\n\
    \    local count\n    local index\n    local val\n    local freq\n    local count\n\
    \    local index\n    local val\n    local freq\n    local count\n    local index\n\
    \    local val\n    local freq\n    local count\n    local index\n    local val\n\
    \    local freq\n    local count\n    local index\n    local val\n    local freq\n\
    \    local count\n    local index\n    local val\n    local freq\n    local count\n\
    \    local index\n    local val\n    local freq\n    local count\n    local index\n\
    \    local val\n    local freq\n    local count\n    local index\n    local val\n\
    \    local freq\n    local count\n    local index\n    local val\n    local freq\n\
    \    local count\n    local index\n    local val\n    local freq\n    local count\n\
    \    local index\n    local val\n    local freq\n    local count\n    local index\n\
    \    local val\n    local freq\n    local count\n    local index\n    local val\n\
    \    local freq\n    local count\n    local index\n    local val\n    local freq\n\
    \    local count\n    local index\n    local val\n    local freq\n    local \n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxCount\n\
    \    local maxValue\n    local value\n    local valueCount\n    local valueMax\n\
    \    local valueMin\n    local valueString\n    local valueStringCount\n    local\
    \ valueStringMax\n    local valueStringMin\n    local valueStringString\n    local\
    \ valueStringStringCount\n    local valueStringStringMax\n    local valueStringStringMin\n\
    \    local valueStringStringString\n    local valueStringStringStringCount\n \
    \   local valueStringStringStringMax\n    local valueStringStringStringMin\n \
    \   local valueStringStringStringString\n    local valueStringStringStringStringCount\n\
    \    local valueStringStringStringStringMax\n    local valueStringStringStringStringMin\n\
    \    local valueStringStringStringStringString\n    local valueStringStringStringStringStringCount\n\
    \    local valueStringStringStringStringStringMax\n    local valueStringStringStringStringStringMin\n\
    \    local valueStringStringStringStringStringString\n    local valueStringStringStringStringStringStringCount\n\
    \    local valueStringStringStringStringStringStringMax\n    local valueStringStringStringStringStringStringMin\n\
    \    local valueStringStringStringStringStringStringString\n    local valueStringStringStringStringStringStringStringCount\n\
    \    local valueStringStringStringStringStringStringStringMax\n    local valueStringStringStringStringStringStringStringMin\n\
    \    local valueStringStringStringStringStringStringStringString\n    local valueStringStringStringStringStringStringStringStringCount\n\
    \    local valueStringStringStringStringStringStringStringStringStringMax\n  \
    \  local valueStringStringStringStringStringStringStringStringStringMin\n    local\
    \ valueStringStringStringStringStringStringStringStringStringString\n    local\
    \ valueStringStringStringStringStringStringStringStringStringCount\n    local\
    \ valueStringStringStringStringStringStringStringStringStringMax\n    local valueStringStringStringStringStringStringStringStringStringMin\n\
    \    local valueStringStringStringStringStringStringStringStringStringString\n\
    \    local valueStringStringStringStringStringStringStringStringStringStringCount\n\
    \    local valueStringStringStringStringStringStringStringStringStringStringMax\n\
    \    local valueStringStringStringStringStringStringStringStringStringStringMin\n\
    \    local valueStringStringStringStringStringStringStringStringStringStringString\n\
    \    local valueStringStringStringStringStringStringStringStringStringStringStringCount\n\
    \    local valueStringStringStringStringStringStringStringString\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=$1\n  local max=0\n \
    \ local maxFreq=0\n  local maxIndex=0\n  local index=0\n  local freq=0\n  local\
    \ i\n  \n  for ((i=0; i<${#list}; i++)); do\n    freq=${#list[$i]}\n    if [ $freq\
    \ -gt $maxFreq ]; then\n      maxFreq=$freq\n      maxIndex=$index\n      max=$i\n\
    \    fi\n    ((index++))\n  done\n  \n  if [ $maxFreq -gt $max ]; then\n    return\
    \ $max\n  else\n    return -1\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 2
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local freq=0\n  local i\n  for i in $list; do\n    ((freq++))\n    ((max=$((max>freq\
    \ ? max : freq)))) \n  done\n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))) \n  ((max=$((max>freq\
    \ ? max : freq)))) \n  ((max=$((max>freq ? max : freq)))\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn92w8edx.sh: line 91: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local max=0\n\
    \    local maxStr=\"\"\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ freq\n    local tmp\n    local tmpStr\n    local tmpFreq\n    local tmpInt\n\
    \    local tmpIntStr\n    local tmpIntFreq\n    local tmpIntInt\n    local tmpIntIntStr\n\
    \    local tmpIntIntFreq\n    local tmpIntIntInt\n    local tmpIntIntIntStr\n\
    \    local tmpIntIntIntFreq\n    local tmpIntIntIntInt\n    local tmpIntIntIntIntStr\n\
    \    local tmpIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntStr\n\
    \    local tmpIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpIntIntIntIntIntStr\n\
    \    local tmpIntIntIntIntIntFreq\n    local tmpIntIntIntIntInt\n    local tmpInt\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i=1; i<=$max; i++ )); do\n        if [[ ${arr[$i]} -gt 0 ]]; then\n     \
    \       if [[ ${freq[$i]} -gt ${freq[$i]} ]]; then\n                max=$i\n \
    \           fi\n        fi\n    done\n    if [[ $max -eq 0 ]]; then\n        echo\
    \ \"-1\"\n    else\n        echo \"$max\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i = 0; i <= max; i++ )); do\n        if [[ ${arr[i]} -gt 0 ]]; then\n   \
    \         if [[ ${freq[i]} -gt ${arr[i]} ]]; then\n                max=$i\n  \
    \          fi\n        fi\n    done\n    if [[ ${max} -eq 0 ]]; then\n       \
    \ echo \"-1\"\n    else\n        echo \"${arr[max]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxCount=0\n    local i\n    local count\n    local val\n    \n   \
    \ for i in $list; do\n        val=$i\n        count=0\n        while [ $val -gt\
    \ 0 ]; do\n            ((count++))\n            val=$((val-1))\n        done\n\
    \        if [ $count -gt $maxCount ]; then\n            max=$i\n            maxCount=$count\n\
    \        fi\n    done\n    \n    if [ $maxCount -gt $max ]; then\n        echo\
    \ \"$max\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxCount=0\n    local maxValue=0\n    local i\n    local j\n    local\
    \ count\n    local value\n    local maxIndex\n    local maxValueIndex\n    local\
    \ maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n\
    \    local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n \
    \   local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n  \
    \  local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n   \
    \ local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n    local\
    \ maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n\
    \    local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n \
    \   local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n  \
    \  local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n   \
    \ local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n    local\
    \ maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n\
    \    local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n \
    \   local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n  \
    \  local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n   \
    \ local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n    local\
    \ maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n\
    \    local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n \
    \   local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n  \
    \  local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n   \
    \ local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n    local\
    \ maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n\
    \    local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n \
    \   local maxValueIndex\n    local maxCountIndex\n    local maxValueIndex\n  \
    \  local maxCountIndex\n    local maxValueIndex\n    local maxCountIndex\n\n}\n\
    \ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local i freq max\n  freq=0\n  max=0\n\
    \  for ((i=0; i < ${#1}; i++)); do\n    ((freq[$1]++))\n    ((max=$((max>freq[$1]?max:freq[$1]))));\n\
    \  done\n  ((max>freq[$1]?max:freq[$1]))\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp82hppwlc.sh: line 20: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    \n    for ((i=0; i<${#list}; i++)); do\n \
    \       if [[ ${list[i]} -gt 0 ]]; then\n            freq=$((${freq}+1))\n   \
    \         if [[ ${freq} -gt ${list[i]} ]]; then\n                max=$((${list[i]}))\n\
    \            fi\n        fi\n    done\n    \n    if [[ ${max} -eq -1 ]]; then\n\
    \        echo -1\n    else\n        echo ${max}\n    fi\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8ttku1dd.sh: line 22: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ freq\n    local tmp\n    \n    for ((i=0; i<${#list}; i++)); do\n        freq=$(echo\
    \ \"${list[i]}\" | wc -w)\n        if (( freq > maxFreq )) ; then\n          \
    \  max=$(echo \"${list[i]}\" | cut -d \" \" -f 1)\n            maxIndex=$i\n \
    \           maxFreq=$freq\n        fi\n    done\n    \n    if [[ ${maxIndex} -eq\
    \ 0 ]] ; then\n        echo \"-1\"\n    else\n        tmp=$(echo \"${list}\" |\
    \ sed -n \"${maxIndex}p\")\n        echo \"${tmp}\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local -n arr=$1\n  local -n max=$2\n\
    \  local -n val=$3\n  local -n count=$4\n  local -n maxCount=$5\n  local -n maxVal=$6\n\
    \  local -n maxCountVal=$7\n  local -n maxCountVal2=$8\n  local -n maxCountVal3=$9\n\
    \  local -n maxCountVal4=$10\n  local -n maxCountVal5=$11\n  local -n maxCountVal6=$12\n\
    \  local -n maxCountVal7=$13\n  local -n maxCountVal8=$14\n  local -n maxCountVal9=$15\n\
    \  local -n maxCountVal10=$16\n  local -n maxCountVal11=$17\n  local -n maxCountVal12=$18\n\
    \  local -n maxCountVal13=$19\n  local -n maxCountVal14=$20\n  local -n maxCountVal15=$21\n\
    \  local -n maxCountVal16=$22\n  local -n maxCountVal17=$23\n  local -n maxCountVal18=$24\n\
    \  local -n maxCountVal19=$25\n  local -n maxCountVal20=$26\n  local -n maxCountVal21=$27\n\
    \  local -n maxCountVal22=$28\n  local -n maxCountVal23=$29\n  local -n maxCountVal24=$30\n\
    \  local -n maxCountVal25=$31\n  local -n maxCountVal26=$32\n  local -n maxCountVal27=$33\n\
    \  local -n maxCountVal28=$34\n  local -n maxCountVal29=$35\n  local -n maxCountVal30=$36\n\
    \  local -n maxCountVal31=$37\n  local -n maxCountVal32=$38\n  local -n maxCountVal33=$39\n\
    \  local -n maxCountVal34=$40\n  local -n maxCountVal35=$41\n  local -n maxCountVal36=$42\n\
    \  local -n maxCountVal37=$43\n  local -n maxCountVal38=$44\n  local -n maxCountVal39=$45\n\
    \  local -n maxCountVal40=$46\n  local -n maxCountVal41=$47\n  local -n maxCountVal42=$48\n\
    \  \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptysagapo.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmptysagapo.sh: line 17: local: `'': not a valid identifier

    /tmp/tmptysagapo.sh: line 18: local: `'': not a valid identifier

    /tmp/tmptysagapo.sh: line 19: local: `'': not a valid identifier

    /tmp/tmptysagapo.sh: line 20: local: `'': not a valid identifier

    /tmp/tmptysagapo.sh: line 21: local: `'': not a valid identifier

    /tmp/tmptysagapo.sh: line 22: local: `'': not a valid identifier

    /tmp/tmptysagapo.sh: line 23: local: `'': not a valid identifier

    /tmp/tmptysagapo.sh: line 24: local: `'': not a valid identifier

    /tmp/tmptysagapo.sh: line 25: local: `5 5 5 5 10'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 26: local: `5 5 5 5 11'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 27: local: `5 5 5 5 12'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 28: local: `5 5 5 5 13'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 29: local: `5 5 5 5 14'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 30: local: `5 5 5 5 15'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 31: local: `5 5 5 5 16'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 32: local: `5 5 5 5 17'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 33: local: `5 5 5 5 18'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 34: local: `5 5 5 5 19'': invalid variable name for
    name reference

    /tmp/tmptysagapo.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmptysagapo.sh: line 36: local: `1'': invalid variable name for name reference

    /tmp/tmptysagapo.sh: line 37: local: `2'': invalid variable name for name reference

    /tmp/tmptysagapo.sh: line 38: local: `3'': invalid variable name for name reference

    /tmp/tmptysagapo.sh: line 39: local: `4'': invalid variable name for name reference

    /tmp/tmptysagapo.sh: line 40: local: `5'': invalid variable name for name reference

    /tmp/tmptysagapo.sh: line 4'
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local maxval=0\n    local i\n    local j\n    local\
    \ freq\n    local val\n    local tmp\n    local count\n    local tmp2\n    local\
    \ tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local\
    \ tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n  \
    \  local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local count=0\n    local maxCount=0\n    local maxVal=0\n    local maxValCount=0\n\
    \    local maxValVal=0\n    local maxValValCount=0\n    local maxValValVal=0\n\
    \    local maxValValValCount=0\n    local maxValValValVal=0\n    local maxValValValValCount=0\n\
    \    local maxValValValValVal=0\n    local maxValValValValCount=0\n    local maxValValValValVal=0\n\
    \    local maxValValValValCount=0\n    local maxValValValValVal=0\n    local maxValValValValCount=0\n\
    \    local maxValValValValVal=0\n    local maxValValValValCount=0\n    local maxValValValValVal=0\n\
    \    local maxValValValValCount=0\n    local maxValValValValVal=0\n    local maxValValValValCount=0\n\
    \    local maxValValValValVal=0\n    local maxValValValValCount=0\n    local maxValValValValVal=0\n\
    \    local maxValValValValCount=0\n    local maxValValValValVal=0\n    local maxValValValValCount=0\n\
    \    local maxValValValValVal=0\n    local maxValValValValCount=0\n    local maxValValValValVal=0\n\
    \    local maxValValValValCount=0\n    local maxValValValValVal=0\n    local maxValValValValCount=0\n\
    \    local maxValValValValVal=0\n    local maxValValValValCount=0\n    local maxValValValValVal=0\n\
    \    local maxValValValValCount=0\n    local maxValValValValVal=0\n    local maxValValValValCount=0\n\
    \    local maxValValValValVal=0\n    local maxValValValValCount=0\n    local maxValValValValVal=0\n\
    \    local maxValValValValCount=0\n    local maxValValValValVal=0\n    local maxValValValValCount=0\n\
    \    local maxValValValValVal=0\n    local maxValValValValCount=0\n    local maxValValValValVal=0\n\
    \    local maxValValValValCount=0\n    local maxValValValValVal=0\n    local maxValValValValCount=0\n\
    \    local maxValVal\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local val\n    local\
    \ tmp\n    \n    for ((i=0; i<${#list}; i++)); do\n        val=\"${list[i]}\"\n\
    \        if [[ ${val} -eq 0 ]]; then\n            echo \"$val\"\n            return\
    \ -1\n        fi\n        if (( ${freq} > ${val} )); then\n            freq=${val}\n\
    \        fi\n        if (( ${freq} > max )); then\n            max=${freq}\n \
    \       fi\n    done\n    \n    for ((j=0; j<${#list}; j++)); do\n        val=\"\
    ${list[j]}\"\n        if (( ${freq} > ${val} )); then\n            freq=${val}\n\
    \        fi\n        if (( ${freq} > max )); then\n            max=${freq}\n \
    \       fi\n    done\n    \n    for ((k=0; k<${#list}; k++)); do\n        val=\"\
    ${list[k]}\"\n        if (( ${freq} > ${val} )); then\n            freq=${val}\n\
    \        fi\n        if (( ${freq} > max )); then\n            max=${freq}\n \
    \       fi\n    done\n    \n    for ((l=0; l<${#list}; l++)); do\n        val=\"\
    ${list[l]}\"\n        if (( ${freq} > ${val} )); then\n            freq=${val}\n\
    \        fi\n        if (( ${freq} > max )); then\n            max=${freq}\n \
    \       fi\n    done\n    \n    echo \"$max\"\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcuw30dgg.sh: line 27: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpcuw30dgg.sh: line 31: ((: 0 > 5 5 5 5 1 : syntax error in expression (error
    token is "5 5 5 1 ")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxfreq=0\n  local i\n  local j\n  local freq\n  local tmp\n  local tmp2\n\
    \  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local\
    \ tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n\
    \  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n \
    \ local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local\
    \ tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n\
    \  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n \
    \ local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local\
    \ tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n\
    \  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n \
    \ local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local\
    \ tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n\
    \  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n \
    \ local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local\
    \ tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n\
    \  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n \
    \ local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local\
    \ tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n\
    \  local tmp94\n  local tmp95\n  local tmp96\n  local tmp97\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxFrequency\n    local maxIndex\n    local maxValue\n    local maxFrequencyIndex\n\
    \    local maxFrequencyValue\n    local maxFrequencyIndexValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValueValue\n    local maxFrequencyIndexValueValue\n\
    \    local maxFrequencyIndexValue\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxCount=0\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ freq\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local count=0\n    local maxCount=0\n    local maxVal=0\n    local maxFreq=0\n\
    \    local maxIndex=0\n    local maxValIndex=0\n    local maxFreqIndex=0\n   \
    \ local maxValFreqIndex=0\n    local maxValIndexFreqIndex=0\n    local maxValFreqIndexFreqIndex=0\n\
    \    local maxValIndexFreqIndexFreqIndex=0\n    local maxValFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValIndexFreqIndexFreqIndexFreqIndex=0\n    local maxValFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n    local maxValFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n    local\
    \ maxValFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n    local maxValIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex=0\n\
    \    local maxValIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndexFreqIndex\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxfreq=0\n  local i\n  for i in $list; do\n    local freq=$(echo \"\
    $list\" | grep -c \"$i\")\n    if [ \"$freq\" -gt \"$maxfreq\" ]; then\n     \
    \ maxfreq=$freq\n      max=$i\n    fi\n  done\n  echo \"$max\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=-1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        if (( ${freq[$i]} >= ${freq[$max]} )); then\n          \
    \  max=i\n        fi\n    done\n    echo ${arr[$max]}\n}\n\ncandidate() {\n  \
    \  search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp20aq7b6c.sh: line 22: freq: bad array subscript

    /tmp/tmp20aq7b6c.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ freq\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local freq=0\n  local i\n  local j\n  local tmp\n  local maxfreq\n  local maxfreqindex\n\
    \  local maxfreqvalue\n  local maxfreqindexvalue\n  local maxfreqindexvalue2\n\
    \  local maxfreqindexvalue3\n  local maxfreqindexvalue4\n  local maxfreqindexvalue5\n\
    \  local maxfreqindexvalue6\n  local maxfreqindexvalue7\n  local maxfreqindexvalue8\n\
    \  local maxfreqindexvalue9\n  local maxfreqindexvalue10\n  local maxfreqindexvalue11\n\
    \  local maxfreqindexvalue12\n  local maxfreqindexvalue13\n  local maxfreqindexvalue14\n\
    \  local maxfreqindexvalue15\n  local maxfreqindexvalue16\n  local maxfreqindexvalue17\n\
    \  local maxfreqindexvalue18\n  local maxfreqindexvalue19\n  local maxfreqindexvalue20\n\
    \  local maxfreqindexvalue21\n  local maxfreqindexvalue22\n  local maxfreqindexvalue23\n\
    \  local maxfreqindexvalue24\n  local maxfreqindexvalue25\n  local maxfreqindexvalue26\n\
    \  local maxfreqindexvalue27\n  local maxfreqindexvalue28\n  local maxfreqindexvalue29\n\
    \  local maxfreqindexvalue30\n  local maxfreqindexvalue31\n  local maxfreqindexvalue32\n\
    \  local maxfreqindexvalue33\n  local maxfreqindexvalue34\n  local maxfreqindexvalue35\n\
    \  local maxfreqindexvalue36\n  local maxfreqindexvalue37\n  local maxfreqindexvalue38\n\
    \  local maxfreqindexvalue39\n  local maxfreqindexvalue40\n  local maxfreqindexvalue41\n\
    \  local maxfreqindexvalue42\n  local maxfreqindexvalue43\n  local maxfreqindexvalue44\n\
    \  local maxfreqindexvalue45\n  local maxfreqindexvalue46\n  local maxfreqindexvalue47\n\
    \  local maxfreqindexvalue48\n  local maxfreqindexvalue49\n  local maxfreqindexvalue50\n\
    \  local maxfreqindexvalue51\n  local maxfreqindexvalue52\n  local maxfreqindexvalue53\n\
    \  local maxfreqindexvalue54\n  local maxfreqindexvalue55\n  local maxfreqindexvalue56\n\
    \  local maxfreqindexvalue57\n  local maxfreqindexvalue58\n  local maxfreq\n}\n\
    \ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxval=0\n    local maxfreq=0\n    local i\n    local j\n    local\
    \ val\n    local freq\n    local count\n    local maxcount\n    local count2\n\
    \    local count3\n    local count4\n    local count5\n    local count6\n    local\
    \ count7\n    local count8\n    local count9\n    local count10\n    local count11\n\
    \    local count12\n    local count13\n    local count14\n    local count15\n\
    \    local count16\n    local count17\n    local count18\n    local count19\n\
    \    local count20\n    local count21\n    local count22\n    local count23\n\
    \    local count24\n    local count25\n    local count26\n    local count27\n\
    \    local count28\n    local count29\n    local count30\n    local count31\n\
    \    local count32\n    local count33\n    local count34\n    local count35\n\
    \    local count36\n    local count37\n    local count38\n    local count39\n\
    \    local count40\n    local count41\n    local count42\n    local count43\n\
    \    local count44\n    local count45\n    local count46\n    local count47\n\
    \    local count48\n    local count49\n    local count50\n    local count51\n\
    \    local count52\n    local count53\n    local count54\n    local count55\n\
    \    local count56\n    local count57\n    local count58\n    local count59\n\
    \    local count60\n    local count61\n    local count62\n    local count63\n\
    \    local count64\n    local count65\n    local count66\n    local count67\n\
    \    local count68\n    local count69\n    local count70\n    local count71\n\
    \    local count72\n    local count73\n    local count74\n    local count75\n\
    \    local count76\n    local count77\n    local count78\n    local count79\n\
    \    local count80\n    local count81\n    local count82\n    local count83\n\
    \    local count84\n    local count85\n    local count86\n    local count87\n\
    \    local count88\n    local count89\n    local count90\n    local count91\n\
    \    local count92\n    local count93\n    local count94\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxCount=0\n    local maxValue=0\n    local count=0\n    local value=0\n\
    \    local i\n    local j\n    \n    for ((i=0; i<${#list}; i++)); do\n      \
    \  value=${list[i]}\n        if (( ${value} > 0 )); then\n            (( count++\
    \ ))\n            if (( count > maxCount )); then\n                maxCount=${count}\n\
    \                maxValue=${value}\n            fi\n        fi\n    done\n   \
    \ \n    for ((j=0; j<${#list}; j++)); do\n        value=${list[j]}\n        if\
    \ (( ${value} > 0 )); then\n            if (( ${value} > maxValue )); then\n \
    \               maxValue=${value}\n            fi\n        fi\n    done\n    \n\
    \    if (( ${maxCount} > 0 )); then\n        echo \"${maxValue}\"\n    else\n\
    \        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp320dqqpr.sh: line 27: ((: 5 5 5 5 1 > 0 : syntax error in expression
    (error token is "5 5 5 1 > 0 ")

    /tmp/tmp320dqqpr.sh: line 27: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 27: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 27: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 27: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 27: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 27: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 27: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 27: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 38: ((: 5 5 5 5 1 > 0 : syntax error in expression (error
    token is "5 5 5 1 > 0 ")

    /tmp/tmp320dqqpr.sh: line 38: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 38: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 38: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 38: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 38: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 38: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 38: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp320dqqpr.sh: line 38: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $(sort -u <<< \"${arr[@]}\" | wc -l) )\n   \
    \ max=${arr[0]}\n    for i in \"${arr[@]:1}\"; do\n        if (( freq[$i] >= $freq[$max]\
    \ )); then\n            max=$i\n        fi\n    done\n    echo \"$max\"\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsrb8veoq.sh: line 22: ((: freq[5] >= 1[5] : syntax error: invalid
    arithmetic operator (error token is "[5] ")

    /tmp/tmpsrb8veoq.sh: line 22: ((: freq[5] >= 1[5] : syntax error: invalid arithmetic
    operator (error token is "[5] ")

    /tmp/tmpsrb8veoq.sh: line 22: ((: freq[5] >= 1[5] : syntax error: invalid arithmetic
    operator (error token is "[5] ")

    /tmp/tmpsrb8veoq.sh: line 22: ((: freq[1] >= 1[5] : syntax error: invalid arithmetic
    operator (error token is "[5] ")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    for ((i=0; i<${#numbers}; i++));\
    \ do\n        if (( ${numbers[i]} > 0 )); then\n            frequency=`grep -c\
    \ ${numbers[i]} <<< ${numbers}`\n            if (( frequency >= ${numbers[i]}\
    \ )); then\n                greatest=${numbers[i]}\n            fi\n        fi\n\
    \    done\n    \n    if (( ${#greatest} > 0 )); then\n        echo \"${greatest}\"\
    \n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk0xdk71y.sh: line 22: ((: 5 5 5 5 1 > 0 : syntax error in expression
    (error token is "5 5 5 1 > 0 ")

    /tmp/tmpk0xdk71y.sh: line 22: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmpk0xdk71y.sh: line 22: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmpk0xdk71y.sh: line 22: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmpk0xdk71y.sh: line 22: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmpk0xdk71y.sh: line 22: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmpk0xdk71y.sh: line 22: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmpk0xdk71y.sh: line 22: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmpk0xdk71y.sh: line 22: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxfreq=0\n  local i\n  local j\n  local freq\n  local tmp\n  \n  for\
    \ (( i=0; i<${#list}; i++ )); do\n    freq=$(echo \"${list}\" | tr \" \" \"\\\
    n\" | sort | uniq -c | awk '$1 > maxfreq {maxfreq=$1; max=$2} $1 == max {print\
    \ $1}')\n    if [[ ${freq} -gt 0 ]]; then\n      tmp=$(echo \"${list}\" | tr \"\
    \ \" \"\\n\" | sort | uniq -c | awk '$1 > maxfreq {maxfreq=$1; max=$2} $1 == max\
    \ {print $1}')\n      list=\"${list} ${tmp}\"\n    fi\n  done\n  \n  if [[ ${#list}\
    \ -eq 0 ]]; then\n    return -1\n  fi\n  \n  echo \"${list}\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local arr=($str)\n\
    \    local max=0\n    local freq=0\n    local i\n    \n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if (( ${arr[$i]} > max )); then\n            max=${arr[$i]}\n\
    \        fi\n        if (( ${arr[$i]} >= max )); then\n            freq=$(( ${freq}\
    \ + 1 ))\n        fi\n    done\n    \n    if (( freq > 0 )); then\n        echo\
    \ \"$max\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local i freq max\n  freq=0\n  max=0\n\
    \  for i in $@; do\n    ((freq++))\n    if (( freq > max )); then\n      max=$i\n\
    \    fi\n  done\n  if (( freq == 0 )); then\n    return -1\n  else\n    return\
    \ $max\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxCount\n    local maxIndex\n    local maxValue\n    local value\n\
    \    local tmp\n    local tmpCount\n    local tmpIndex\n    local tmpValue\n \
    \   local tmpValueCount\n    local tmpValueIndex\n    local tmpValueCountIndex\n\
    \    local tmpValueCountIndexIndex\n    local tmpValueCountIndexIndexIndex\n \
    \   local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndexIndexIndexIndex\n    local tmpValueCountIndexIndexIndexIndex\n\
    \    local tmpValueCountIndex\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxIndex\n    local maxFrequency\n    local maxValue\n    local value\n\
    \    local valueCount\n    local valueIndex\n    local valueFrequency\n    local\
    \ valueValue\n    local valueValueCount\n    local valueValueIndex\n    local\
    \ valueValueFrequency\n    local valueValueValue\n    local valueValueValueCount\n\
    \    local valueValueValueIndex\n    local valueValueValueFrequency\n    local\
    \ valueValueValueValue\n    local valueValueValueValueCount\n    local valueValueValueValueIndex\n\
    \    local valueValueValueValueFrequency\n    local valueValueValueValueValue\n\
    \    local valueValueValueValueValueCount\n    local valueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueFrequency\n    local valueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueCount\n    local valueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValueValueValue\n\
    \    local valueValueValueValueValueValueValueValueCount\n    local valueValueValueValueValueValueValueValueIndex\n\
    \    local valueValueValueValueValueValueValueValueFrequency\n    local valueValueValueValueValueValueValue\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxCount\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \    local valueCount\n    local valueIndex\n    local valueValue\n    local valueCount\n\
    \    local valueIndex\n    local valueValue\n    local valueCount\n    local valueIndex\n\
    \    local valueValue\n    local valueCount\n    local valueIndex\n    local valueValue\n\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    \n    for i in $list; do\n        freq=$(echo \"$list\" | grep -c \"$i\"\
    )\n        if [ \"$freq\" -gt \"$maxfreq\" ]; then\n            maxfreq=$freq\n\
    \            max=$i\n        fi\n    done\n    \n    if [ \"$maxfreq\" -eq \"\
    $max\" ]; then\n        echo \"$max\"\n    else\n        echo \"-1\"\n    fi\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local greatest\n\
    \  local frequency\n  local i\n  local j\n  local max\n  local maxIndex\n  local\
    \ maxFrequency\n  local maxValue\n  local value\n  local valueCount\n\n  for i\
    \ in \"${list[@]}\"; do\n    value=$i\n    frequency=0\n    for j in \"${list[@]}\"\
    ; do\n      if [ \"$i\" == \"$j\" ]; then\n        frequency=$((frequency+1))\n\
    \      fi\n    done\n    if [ \"$frequency\" -gt \"$value\" ]; then\n      greatest=$i\n\
    \      max=$i\n      maxIndex=$i\n      maxFrequency=$frequency\n      maxValue=$value\n\
    \    fi\n  done\n  if [ \"$greatest\" == \"\" ]; then\n    return -1\n  fi\n \
    \ valueCount=0\n  for i in \"${list[@]}\"; do\n    if [ \"$i\" == \"$greatest\"\
    \ ]; then\n      valueCount=$((valueCount+1))\n    fi\n  done\n  if [ \"$valueCount\"\
    \ -gt \"$maxFrequency\" ]; then\n    return -1\n  fi\n  for i in \"${list[@]}\"\
    ; do\n    if [ \"$i\" == \"$greatest\" ]; then\n      return $i\n    fi\n  done\n\
    \  return $max\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6789hibg.sh: line 36: [: 5 5 5 5 1: integer expression expected

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 2
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local index=0\n    local freq=0\n\
    \    local i\n    \n    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]}\
    \ -gt 0 ]]; then\n            if [[ ${freq} -gt ${list[i]} ]]; then\n        \
    \        freq=${list[i]}\n            fi\n        fi\n    done\n    \n    for\
    \ ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]} -gt 0 ]]; then\n    \
    \        if [[ ${freq} -gt ${list[i]} ]]; then\n                freq=${list[i]}\n\
    \            fi\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${freq} -gt ${list[i]}\
    \ ]]; then\n                freq=${list[i]}\n            fi\n        fi\n    done\n\
    \    \n    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]} -gt 0 ]];\
    \ then\n            if [[ ${freq} -gt ${list[i]} ]]; then\n                freq=${list[i]}\n\
    \            fi\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${freq} -gt ${list[i]}\
    \ ]]; then\n                freq=${list[i]}\n            fi\n        fi\n    done\n\
    \    \n    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]} -gt 0 ]];\
    \ then\n            if [[ ${freq} -gt ${list[i]} ]]; then\n                freq=${list[i]}\n\
    \            fi\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${freq} -gt ${list[i]}\
    \ ]]; then\n                freq=${list[i]}\n            fi\n        fi\n    done\n\
    \    \n    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]} -gt 0 ]];\
    \ then\n            if [[ ${freq} -gt ${list[i]} ]]; then\n                freq=${list[i]}\n\
    \            fi\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${freq} -gt ${\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppcse_jlf.sh: line 90: syntax error in conditional expression

    /tmp/tmppcse_jlf.sh: line 93: syntax error near `candidate(''

    /tmp/tmppcse_jlf.sh: line 93: `candidate() {''

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxFreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=0\n    for ((i=0; i<${#1}; i++)); do\n        if [[ ${#1} == $i ]]; then\n\
    \            freq=$((freq+1))\n        else\n            if ((freq >= $1)); then\n\
    \                max=$((max+1))\n            fi\n        fi\n    done\n    if\
    \ ((max < 0)); then\n        echo \"-1\"\n    else\n        echo \"$max\"\n  \
    \  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm2r7w10m.sh: line 23: ((: freq >= 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpm2r7w10m.sh: line 23: ((: freq >= 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpm2r7w10m.sh: line 23: ((: freq >= 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpm2r7w10m.sh: line 23: ((: freq >= 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpm2r7w10m.sh: line 23: ((: freq >= 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpm2r7w10m.sh: line 23: ((: freq >= 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpm2r7w10m.sh: line 23: ((: freq >= 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpm2r7w10m.sh: line 23: ((: freq >= 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpm2r7w10m.sh: line 23: ((: freq >= 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local maxval=0\n    local val\n    local i\n    local\
    \ j\n    local count\n    local freq\n    local tmp\n    local tmp2\n    local\
    \ tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local\
    \ tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n  \
    \  local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxval=0\n    local maxfreq=0\n    local i\n    local j\n    local\
    \ freq\n    local tmp\n    \n    for ((i=0; i<${#list}; i++)); do\n        freq=$(echo\
    \ \"${list}\" | tr \" \" \"\\n\" | sort | uniq -c | sort -n | tail -1)\n     \
    \   if [[ ${freq} -gt ${maxfreq} ]]; then\n            maxfreq=${freq}\n     \
    \       maxval=${list[i]}\n        fi\n    done\n    \n    if [[ ${maxfreq} -gt\
    \ ${max} ]]; then\n        max=${maxfreq}\n        maxval=${maxval}\n    fi\n\
    \    \n    echo \"${maxval}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfe7umavw.sh: line 27: [[: 4 5: syntax error in expression (error
    token is "5")

    /tmp/tmpfe7umavw.sh: line 27: [[: 4 5: syntax error in expression (error token
    is "5")

    /tmp/tmpfe7umavw.sh: line 27: [[: 4 5: syntax error in expression (error token
    is "5")

    /tmp/tmpfe7umavw.sh: line 27: [[: 4 5: syntax error in expression (error token
    is "5")

    /tmp/tmpfe7umavw.sh: line 27: [[: 4 5: syntax error in expression (error token
    is "5")

    /tmp/tmpfe7umavw.sh: line 27: [[: 4 5: syntax error in expression (error token
    is "5")

    /tmp/tmpfe7umavw.sh: line 27: [[: 4 5: syntax error in expression (error token
    is "5")

    /tmp/tmpfe7umavw.sh: line 27: [[: 4 5: syntax error in expression (error token
    is "5")

    /tmp/tmpfe7umavw.sh: line 27: [[: 4 5: syntax error in expression (error token
    is "5")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=-1\n    frequency=0\n  \
    \  \n    for i in $numbers\n    do\n        if [ $i -gt $greatest ]; then\n  \
    \          greatest=$i\n        fi\n        frequency=$(( $frequency + 1 ))\n\
    \    done\n    \n    if [ $frequency -gt $greatest ]; then\n        echo \"$greatest\"\
    \n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local maxval=0\n    local val\n    local i\n    local\
    \ j\n    local count\n    local freq\n    local maxcount\n    local maxfreq\n\
    \    local maxval\n    local val\n    local count\n    local freq\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local val\n    local count\n    local\
    \ freq\n    local maxcount\n    local maxfreq\n    local maxval\n    local val\n\
    \    local count\n    local freq\n    local maxcount\n    local maxfreq\n    local\
    \ maxval\n    local val\n    local count\n    local freq\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local val\n    local count\n    local\
    \ freq\n    local maxcount\n    local maxfreq\n    local maxval\n    local val\n\
    \    local count\n    local freq\n    local maxcount\n    local maxfreq\n    local\
    \ maxval\n    local val\n    local count\n    local freq\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local val\n    local count\n    local\
    \ freq\n    local maxcount\n    local maxfreq\n    local maxval\n    local val\n\
    \    local count\n    local freq\n    local maxcount\n    local maxfreq\n    local\
    \ maxval\n    local val\n    local count\n    local freq\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local val\n    local count\n    local\
    \ freq\n    local maxcount\n    local maxfreq\n    local maxval\n    local val\n\
    \    local count\n    local freq\n    local maxcount\n    local maxfreq\n    local\
    \ maxval\n    local val\n    local count\n    local freq\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local val\n    local count\n    local\
    \ freq\n    local maxcount\n    local maxfreq\n    local maxval\n    local val\n\
    \    local count\n    local freq\n    local maxcount\n    local maxfreq\n    local\
    \ maxval\n    local val\n    local count\n    local freq\n    local maxcount\n\
    \    local maxfreq\n    local maxval\n    local val\n    local count\n    local\
    \ freq\n    local maxcount\n    local maxfreq\n\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local max=0\n\
    \    local maxCount=0\n    local maxVal=0\n    local i\n    local j\n    local\
    \ k\n    local val\n    local count\n    local freq\n    local maxFreq\n    local\
    \ maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    local maxFreq\n    local maxVal\n    local maxCount\n\
    \    local maxFreq\n    local maxVal\n    local maxCount\n    local maxFreq\n\
    \    local maxVal\n    local maxCount\n    local maxFreq\n    local maxVal\n \
    \   local maxCount\n    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i<${#list}; i++)); do\n       \
    \ local val=${list[i]}\n        if [[ ${freq} -gt ${val} ]]; then\n          \
    \  freq=${val}\n        fi\n        if [[ ${val} -gt ${max} ]]; then\n       \
    \     max=${val}\n        fi\n    done\n    if [[ ${freq} -gt ${max} ]]; then\n\
    \        echo \"${max}\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo4ypmvvq.sh: line 22: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpo4ypmvvq.sh: line 25: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local result\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp96\n    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local freq\n    \n    for i in $list; do\n\
    \        freq=$(echo \"$list\" | grep -c \"$i\")\n        if [ \"$freq\" -gt \"\
    $maxfreq\" ]; then\n            max=$i\n            maxfreq=$freq\n        fi\n\
    \    done\n    \n    if [ \"$maxfreq\" -eq \"$max\" ]; then\n        echo \"$max\"\
    \n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local -n\
    \ arr2=$2\n    local -n max=$3\n    local -n max2=$4\n    local -n val=$5\n  \
    \  local -n val2=$6\n    local -n val3=$7\n    local -n val4=$8\n    local -n\
    \ val5=$9\n    local -n val6=$10\n    local -n val7=$11\n    local -n val8=$12\n\
    \    local -n val9=$13\n    local -n val10=$14\n    local -n val11=$15\n    local\
    \ -n val12=$16\n    local -n val13=$17\n    local -n val14=$18\n    local -n val15=$19\n\
    \    local -n val16=$20\n    local -n val17=$21\n    local -n val18=$22\n    local\
    \ -n val19=$23\n    local -n val20=$24\n    local -n val21=$25\n    local -n val22=$26\n\
    \    local -n val23=$27\n    local -n val24=$28\n    local -n val25=$29\n    local\
    \ -n val26=$30\n    local -n val27=$31\n    local -n val28=$32\n    local -n val29=$33\n\
    \    local -n val30=$34\n    local -n val31=$35\n    local -n val32=$36\n    local\
    \ -n val33=$37\n    local -n val34=$38\n    local -n val35=$39\n    local -n val36=$40\n\
    \    local -n val37=$41\n    local -n val38=$42\n    local -n val39=$43\n    local\
    \ -n val40=$44\n    local -n val41=$45\n    local -n val42=$46\n    local -n val43=$47\n\
    \    local -n val44=$48\n    local -n val45=$49\n    local -n val46=$50\n    local\
    \ -n val47=$51\n    local -n val48=$52\n    local -n val49=$53\n    local -n val50=$54\n\
    \    local -n val51=$55\n    local -n val52=$56\n    local -n val53=$57\n    local\
    \ \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnorptboy.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmpnorptboy.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpnorptboy.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpnorptboy.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpnorptboy.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpnorptboy.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpnorptboy.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpnorptboy.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpnorptboy.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpnorptboy.sh: line 25: local: `5 5 5 5 10'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 26: local: `5 5 5 5 11'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 27: local: `5 5 5 5 12'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 28: local: `5 5 5 5 13'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 29: local: `5 5 5 5 14'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 30: local: `5 5 5 5 15'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 31: local: `5 5 5 5 16'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 32: local: `5 5 5 5 17'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 33: local: `5 5 5 5 18'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 34: local: `5 5 5 5 19'': invalid variable name for
    name reference

    /tmp/tmpnorptboy.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpnorptboy.sh: line 36: local: `1'': invalid variable name for name reference

    /tmp/tmpnorptboy.sh: line 37: local: `2'': invalid variable name for name reference

    /tmp/tmpnorptboy.sh: line 38: local: `3'': invalid variable name for name reference

    /tmp/tmpnorptboy.sh: line 39: local: `4'': invalid variable name for name reference

    /tmp/tmpnorptboy.sh: line 40: local: `5'': invalid variable name for name reference

    /tmp/tmpnorptboy.sh: line 4'
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxCount=0\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ freq\n    local count\n    local maxVal\n    local maxFreqVal\n    local maxValVal\n\
    \    local maxValVal2\n    local maxValVal3\n    local maxValVal4\n    local maxValVal5\n\
    \    local maxValVal6\n    local maxValVal7\n    local maxValVal8\n    local maxValVal9\n\
    \    local maxValVal10\n    local maxValVal11\n    local maxValVal12\n    local\
    \ maxValVal13\n    local maxValVal14\n    local maxValVal15\n    local maxValVal16\n\
    \    local maxValVal17\n    local maxValVal18\n    local maxValVal19\n    local\
    \ maxValVal20\n    local maxValVal21\n    local maxValVal22\n    local maxValVal23\n\
    \    local maxValVal24\n    local maxValVal25\n    local maxValVal26\n    local\
    \ maxValVal27\n    local maxValVal28\n    local maxValVal29\n    local maxValVal30\n\
    \    local maxValVal31\n    local maxValVal32\n    local maxValVal33\n    local\
    \ maxValVal34\n    local maxValVal35\n    local maxValVal36\n    local maxValVal37\n\
    \    local maxValVal38\n    local maxValVal39\n    local maxValVal40\n    local\
    \ maxValVal41\n    local maxValVal42\n    local maxValVal43\n    local maxValVal44\n\
    \    local maxValVal45\n    local maxValVal46\n    local maxValVal47\n    local\
    \ maxValVal48\n    local maxValVal49\n    local maxValVal50\n    local maxValVal51\n\
    \    local maxValVal52\n    local maxValVal53\n    local maxValVal54\n    local\
    \ maxValVal55\n    local maxValVal56\n    local maxValVal57\n    local maxValVal58\n\
    \    local maxValVal59\n    local maxValVal60\n    local maxValVal61\n    local\
    \ maxValVal62\n    local maxValVal63\n    local maxValVal64\n    local maxValVal65\n\
    \    local maxValVal66\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    \n    for ((i=0; i<${#list}; i++)); do\n        tmp=${list[i]}\n        freq=$(echo\
    \ \"${list[i]}\" | wc -w)\n        if (( freq > maxfreq )) ; then\n          \
    \  max=i\n            maxfreq=freq\n        fi\n    done\n    \n    if [[ ${max}\
    \ == 0 ]]; then\n        echo \"-1\"\n    else\n        echo \"${list[max]}\"\n\
    \    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    \n    for ((i=0;\
    \ i<${#list}; i++)); do\n        tmp=${list[i]}\n        if [[ ${list[i]} -gt\
    \ 0 ]]; then\n            freq=$((${freq}+1))\n            if [[ ${freq} -gt ${tmp}\
    \ ]]; then\n                max=${list[i]}\n            fi\n        fi\n    done\n\
    \    \n    if [[ ${max} -eq 0 ]]; then\n        echo \"-1\"\n    else\n      \
    \  echo \"${max}\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx9_t1uig.sh: line 25: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxIndex\n\
    \    local maxFrequency\n    local maxValue\n    local value\n    local valueCount\n\
    \    local valueIndex\n    local valueFrequency\n    local valueValue\n    local\
    \ valueIndex\n    local valueFrequency\n    local valueValue\n    local valueIndex\n\
    \    local valueFrequency\n    local valueValue\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueValue\n    local valueIndex\n    local valueFrequency\n\
    \    local valueValue\n    local valueIndex\n    local valueFrequency\n    local\
    \ valueValue\n    local valueIndex\n    local valueFrequency\n    local valueValue\n\
    \    local valueIndex\n    local valueFrequency\n    local valueValue\n    local\
    \ valueIndex\n    local valueFrequency\n    local valueValue\n    local valueIndex\n\
    \    local valueFrequency\n    local valueValue\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueValue\n    local valueIndex\n    local valueFrequency\n\
    \    local valueValue\n    local valueIndex\n    local valueFrequency\n    local\
    \ valueValue\n    local valueIndex\n    local valueFrequency\n    local valueValue\n\
    \    local valueIndex\n    local valueFrequency\n    local valueValue\n    local\
    \ valueIndex\n    local valueFrequency\n    local valueValue\n    local valueIndex\n\
    \    local valueFrequency\n    local valueValue\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueValue\n    local valueIndex\n    local valueFrequency\n\
    \    local valueValue\n    local valueIndex\n    local valueFrequency\n    local\
    \ valueValue\n    local valueIndex\n    local valueFrequency\n    local valueValue\n\
    \    local valueIndex\n    local valueFrequency\n    local valueValue\n    local\
    \ valueIndex\n    local valueFrequency\n    local valueValue\n    local valueIndex\n\
    \    local valueFrequency\n    local valueValue\n    local valueIndex\n    local\
    \ valueFrequency\n    local valueValue\n    local valueIndex\n    local valueFrequency\n\
    \    local valueValue\n    local valueIndex\n    local valueFrequency\n    local\
    \ valueValue\n    local valueIndex\n    local valueFrequency\n    local valueValue\n\
    \    local valueIndex\n    local valueFrequency\n    local valueValue\n    local\
    \ valueIndex\n    local valueFrequency\n    local valueValue\n    local valueIndex\n\
    \    local valueFrequency\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ freq\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    \n    for i in $arr; do\n        if (( freq\
    \ > 0 )); then\n            if (( freq > max )); then\n                max=$i\n\
    \            fi\n        fi\n        (( freq++ ))\n    done\n    \n    if (( max\
    \ )); then\n        echo $max\n    else\n        echo -1\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6d1rywcs.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660052601
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052600

name: HumanEval_140_fix_spaces
language: sh
prompt: "#!/bin/bash\n# Given a string text, replace all spaces in it with underscores,\
  \ \n# and if a string has more than 2 consecutive spaces, \n# then replace all consecutive\
  \ spaces with - \n# >>> $(fix_spaces \" Example\")\n# \"Example\"\n# >>> $(fix_spaces\
  \ \" Example 1\")\n# \"Example_1\"\n# >>> $(fix_spaces \" Example 2\")\n# \"_Example_2\"\
  \n# >>> $(fix_spaces \" Example 3\")\n# \"_Example-3\"\n#\n# $1 is a string\nfix_spaces()\
  \ {\n"
tests: "}\n\ncandidate() {\n    fix_spaces \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"Example\") = \"Example\" ]]\n    [[ $(candidate \"Mudasir Hanif\
  \ \") = \"Mudasir_Hanif_\" ]]\n    [[ $(candidate \"Yellow Yellow  Dirty  Fellow\"\
  ) = \"Yellow_Yellow__Dirty__Fellow\" ]]\n    [[ $(candidate \"Exa   mple\") = \"\
  Exa-mple\" ]]\n    [[ $(candidate \"   Exa 1 2 2 mple\") = \"-Exa_1_2_2_mple\" ]]\n\
  }\n\nrun_test"
completions: ["    local text=$1\n    local spaces=$(echo $text | sed 's/ /_/g')\n\
    \    local spaces2=$(echo $spaces | sed 's/ /-/g')\n    echo $spaces2", "    local\
    \ string=$1\n    local spaces=$(echo $string | sed -e 's/  */_/g')\n    local\
    \ dashes=$(echo $string | sed -e 's/  */-/g')\n    echo $spaces\n    echo $dashes",
  "    local string=$1\n    local spaces=`echo $string | sed -e 's/ /_/g'`\n    local\
    \ spaces2=`echo $string | sed -e 's/ /-/g'`\n    echo $spaces\n    echo $spaces2",
  "    local text=$1\n    local spaces=$(echo $text | sed -e 's/  */_/g')\n    local\
    \ dashes=$(echo $text | sed -e 's/  */-/g')\n    local spaces2dashes=$(echo $spaces\
    \ | sed -e 's/  */-/g')\n    echo $spaces2dashes", "  local string=\"$1\"\n  local\
    \ spaces=\" \"\n  local dashes=\"-\"\n  local result=\"\"\n  \n  while [[ $string\
    \ =~ $spaces ]]; do\n    result+=\"$dashes\"\n    string=\"${BASH_REMATCH[0]}\"\
    \n  done\n  \n  result+=\"$string\"\n  \n  echo \"$result\"", "    local string=$1\n\
    \    local spaces=\n    local dashes=\n    local result=\n    \n    while [[ $string\
    \ =~ ([^ ]+) ]]; do\n        spaces+=\"_${BASH_REMATCH[1]}\"\n        dashes+=\"\
    -\"\n    done\n    \n    if [[ ${#spaces} -gt 2 ]]; then\n        result=\"${spaces//+/\
    \ }\"\n    else\n        result=\"${dashes//+/ }\"\n    fi\n    \n    echo \"\
    $result\"", "    local text\n    text=$1\n    text=${text// /_}\n    text=${text//\
    \ /-}\n    text=${text// /-}\n    text=${text// /_}\n    text=${text// /_}\n \
    \   text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text//\
    \ /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n \
    \   text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text//\
    \ /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n \
    \   text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text//\
    \ /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n \
    \   text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text//\
    \ /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n \
    \   text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text//\
    \ /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n \
    \   text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text//\
    \ /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n \
    \   text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text//\
    \ /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n \
    \   text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text//\
    \ /_}\n    text=${text// /_}\n    text=${text// /_}\n    text=${text// /_}\n \
    \   text=${text// /_}\n    text=${text// /_", "  local string=$1\n  local spaces=`echo\
    \ $string | sed 's/ /_/g'`\n  local dashes=`echo $string | sed 's/ /-/g'`\n  echo\
    \ $spaces$dashes", "    local text=$1\n    local spaces=$(echo $text | sed -e\
    \ 's/ /_/g' -e 's/  */ /g')\n    local spaces2=$(echo $spaces | sed -e 's/ /_/g')\n\
    \    echo $spaces2", "    local string=$1\n    local spaces=$(echo $string | sed\
    \ -e 's/ /_/g')\n    local spaces2=$(echo $string | sed -e 's/ /-/g')\n    echo\
    \ $spaces\n    echo $spaces2", "    local string=$1\n    local spaces=\n    local\
    \ spaces2=\n    local spaces3=\n    local spaces4=\n    local spaces5=\n    local\
    \ spaces6=\n    local spaces7=\n    local spaces8=\n    local spaces9=\n    local\
    \ spaces10=\n    local spaces11=\n    local spaces12=\n    local spaces13=\n \
    \   local spaces14=\n    local spaces15=\n    local spaces16=\n    local spaces17=\n\
    \    local spaces18=\n    local spaces19=\n    local spaces20=\n    local spaces21=\n\
    \    local spaces22=\n    local spaces23=\n    local spaces24=\n    local spaces25=\n\
    \    local spaces26=\n    local spaces27=\n    local spaces28=\n    local spaces29=\n\
    \    local spaces30=\n    local spaces31=\n    local spaces32=\n    local spaces33=\n\
    \    local spaces34=\n    local spaces35=\n    local spaces36=\n    local spaces37=\n\
    \    local spaces38=\n    local spaces39=\n    local spaces40=\n    local spaces41=\n\
    \    local spaces42=\n    local spaces43=\n    local spaces44=\n    local spaces45=\n\
    \    local spaces46=\n    local spaces47=\n    local spaces48=\n    local spaces49=\n\
    \    local spaces50=\n    local spaces51=\n    local spaces52=\n    local spaces53=\n\
    \    local spaces54=\n    local spaces55=\n    local spaces56=\n    local spaces57=\n\
    \    local spaces58=\n    local spaces59=\n    local spaces60=\n    local spaces61=\n\
    \    local spaces62=\n    local spaces63=\n    local spaces64=\n    local spaces65=\n\
    \    local spaces66=\n    local spaces67=\n    local spaces68=\n    local spaces69=\n\
    \    local spaces70=\n    local spaces71=\n    local spaces72=\n    local spaces73=\n\
    \    local spaces74=\n    local spaces75=\n    local spaces76=\n    local spaces77=\n\
    \    local spaces78=\n    local spaces79=\n    local spaces80=\n    local spaces81=\n\
    \    local spaces82=\n    local spaces83=\n    local spaces84=\n    local spaces85=",
  "  local string=$1\n  local spaces=\n  local dashes=\n  local result=\n  \n  spaces=$(echo\
    \ $string | sed 's/  */_/g')\n  dashes=$(echo $string | sed 's/  */-/g')\n  \n\
    \  if [[ $spaces == \"$string\" ]]; then\n    result=$spaces\n  else\n    result=$(echo\
    \ $string | sed 's/'$spaces'/'$dashes'/g')\n  fi\n  \n  echo $result", "    local\
    \ text=$1\n    local spaces_count=$(echo $text | sed 's/ /\\n/g' | wc -c)\n  \
    \  local spaces_replaced=0\n    local spaces_replaced_with_dash=0\n    local spaces_replaced_with_underscore=0\n\
    \    local spaces_replaced_with_dash_and_underscore=0\n    local spaces_replaced_with_dash_and_underscore_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space=0\n  \
    \  local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash_and_underscore_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space_and_space=0\n\
    \    local spaces_replaced_with_dash", "  local string=$1\n  local spaces=$(echo\
    \ $string | sed -e 's/ /_/g')\n  local dashes=$(echo $string | sed -e 's/ /-/g')\n\
    \  echo $spaces$dashes", "  local text=$1\n  local space=\" \"\n  local dash=\"\
    -\"\n  local spaces=\" \"\n  local count=0\n  local result=\"\"\n\n  while [[\
    \ $text != \"\" ]]; do\n    count=$((count+1))\n    if [[ $count -gt 2 ]]; then\n\
    \      spaces=\"_\"\n    fi\n    result=\"${result}${text//$space/$spaces}\"\n\
    \    text=\"${text//$space/$spaces}\"\n  done\n  echo \"$result\"", "    local\
    \ text=$1\n    local spaces=$(echo $text | sed 's/ /_/g')\n    local spaces2=$(echo\
    \ $spaces | sed 's/ /-/g')\n    echo $spaces2", "    local string=\"$1\"\n   \
    \ local spaces=\n    spaces=$(echo \"$string\" | sed -e 's/  */_/g')\n    spaces=$(echo\
    \ \"$spaces\" | sed -e 's/  */-/g')\n    echo \"$spaces\"", "  local text=$1\n\
    \  local spaces=$(echo $text | sed -e 's/  */_/g')\n  local dashes=$(echo $spaces\
    \ | sed -e 's/  */-/g')\n  echo $dashes", "    local text=$1\n    local spaces=$(echo\
    \ $text | sed 's/  */_/g')\n    local spaces2=$(echo $spaces | sed 's/  */-/g')\n\
    \    echo $spaces2", "    local text=$1\n    local spaces=$(echo $text | sed -e\
    \ 's/  */_/g')\n    local spaces2=$(echo $spaces | sed -e 's/  */-/g')\n    echo\
    \ $spaces2"]
stop_tokens:
- "\n}"

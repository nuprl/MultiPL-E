language: sh
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_index=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_position_index=\"\";\n  local\
    \ vowel_position_index2=\"\";\n  local vowel_position_index3=\"\";\n  local vowel_position_index4=\"\
    \";\n  local vowel_position_index5=\"\";\n  local vowel_position_index6=\"\";\n\
    \  local vowel_position_index7=\"\";\n  local vowel_position_index8=\"\";\n  local\
    \ vowel_position_index9=\"\";\n  local vowel_position_index10=\"\";\n  local vowel_position_index11=\"\
    \";\n  local vowel_position_index12=\"\";\n  local vowel_position_index13=\"\"\
    ;\n  local vowel_position_index14=\"\";\n  local vowel_position_index15=\"\";\n\
    \  local vowel_position_index16=\"\";\n  local vowel_position_index17=\"\";\n\
    \  local vowel_position_index18=\"\";\n  local vowel_position_index19=\"\";\n\
    \  local vowel_position_index20=\"\";\n  local vowel_position_index21=\"\";\n\
    \  local vowel_position_index22=\"\";\n  local vowel_position_index23=\"\";\n\
    \  local vowel_position_index24=\"\";\n  local vowel_position_index25=\"\";\n\
    \  local vowel_position_index26=\"\";\n  local vowel_position_index27=\"\";\n\
    \  local vowel_position_index28=\"\";\n  local vowel_position_index29=\"\";\n\
    \  local vowel_position_index30=\"\";\n  local vowel_position_index31=\"\";\n\
    \  local vowel_position_index32=\"\";\n  local vowel_position_index33=\"\";\n\
    \  local vowel_position_index34=\"\";\n  local vowel_position_index35=\"\";\n\
    \  local vowel_position_index36=\"\";\n  local vowel_position_index37=\"\";\n\
    \  local vowel_position_index38=\"\";\n  local vowel_position_index39=\"\";\n\
    \  local vowel_position_index40=\"\";\n  local vowel_position_index41=\"\";\n\
    \  local vowel_position_index42=\"\";\n  local vowel_position_index43=\"\";\n\
    \  local vowel_position_index44=\"\";\n  local vowel_position_index45=\"\";\n\
    \  local vowel_position_index46=\"\";\n  local vowel_position_index47=\"\";\n\
    \  local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OE UE ae ie oe ue\"\n    local vowel_count=$(echo $vowels | wc\
    \ -w)\n    local vowel_found=\"\"\n    local vowel_position=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count2=0\n    local vowel_position_count3=0\n    local\
    \ vowel_position_count4=0\n    local vowel_position_count5=0\n    local vowel_position_count6=0\n\
    \    local vowel_position_count7=0\n    local vowel_position_count8=0\n    local\
    \ vowel_position_count9=0\n    local vowel_position_count10=0\n    local vowel_position_count11=0\n\
    \    local vowel_position_count12=0\n    local vowel_position_count13=0\n    local\
    \ vowel_position_count14=0\n    local vowel_position_count15=0\n    local vowel_position_count16=0\n\
    \    local vowel_position_count17=0\n    local vowel_position_count18=0\n    local\
    \ vowel_position_count19=0\n    local vowel_position_count20=0\n    local vowel_position_count21=0\n\
    \    local vowel_position_count22=0\n    local vowel_position_count23=0\n    local\
    \ vowel_position_count24=0\n    local vowel_position_count25=0\n    local vowel_position_count26=0\n\
    \    local vowel_position_count27=0\n    local vowel_position_count28=0\n    local\
    \ vowel_position_count29=0\n    local vowel_position_count30=0\n    local vowel_position_count31=0\n\
    \    local vowel_position_count32=0\n    local vowel_position_count33=0\n    local\
    \ vowel_position_count34=0\n    local vowel_position_count35=0\n    local vowel_position_count36=0\n\
    \    local vowel_position_count37=0\n    local vowel_position_count38=0\n    local\
    \ vowel_position_count39=0\n    local vowel_position_count40=0\n    local vowel_position_count41=0\n\
    \    local vowel_position_count42=0\n    local vowel_position_count43=0\n    local\
    \ vowel_position_count44=0\n    local vowel_position_count45=0\n    local vowel_position_count46=0\n\
    \    local vowel_position_count47=0\n    local vowel_position_count48=0\n    local\
    \ vowel_position_count49=0\n    local vowel_position_count50=0\n    local vowel_position_count51=0\n\
    \    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_index=\"\
    \";\n    local vowel_found_index=\"\";\n    local vowel_found_index2=\"\";\n \
    \   local vowel_found_index3=\"\";\n    local vowel_found_index4=\"\";\n    local\
    \ vowel_found_index5=\"\";\n    local vowel_found_index6=\"\";\n    local vowel_found_index7=\"\
    \";\n    local vowel_found_index8=\"\";\n    local vowel_found_index9=\"\";\n\
    \    local vowel_found_index10=\"\";\n    local vowel_found_index11=\"\";\n  \
    \  local vowel_found_index12=\"\";\n    local vowel_found_index13=\"\";\n    local\
    \ vowel_found_index14=\"\";\n    local vowel_found_index15=\"\";\n    local vowel_found_index16=\"\
    \";\n    local vowel_found_index17=\"\";\n    local vowel_found_index18=\"\";\n\
    \    local vowel_found_index19=\"\";\n    local vowel_found_index20=\"\";\n  \
    \  local vowel_found_index21=\"\";\n    local vowel_found_index22=\"\";\n    local\
    \ vowel_found_index23=\"\";\n    local vowel_found_index24=\"\";\n    local vowel_found_index25=\"\
    \";\n    local vowel_found_index26=\"\";\n    local vowel_found_index27=\"\";\n\
    \    local vowel_found_index28=\"\";\n    local vowel_found_index29=\"\";\n  \
    \  local vowel_found_index30=\"\";\n    local vowel_found_index31=\"\";\n    local\
    \ vowel_found_index32=\"\";\n    local vowel_found_index33=\"\";\n    local vowel_found_index34=\"\
    \";\n    local vowel_found_index35=\"\";\n    local vowel_found_index36=\"\";\n\
    \    local vowel_found_index37=\"\";\n    local vowel_found_index38=\"\";\n  \
    \  local vowel_found_index39=\"\";\n    local vowel_found_index40=\"\";\n    local\
    \ vowel_found_index41=\"\";\n    local vowel_found_index42=\"\";\n    local vowel_found_index43=\"\
    \";\n    local vowel_found_index44=\"\";\n    local vowel_found_index45=\"\";\n\
    \    local vowel_found_index46=\"\";\n    local vowel_found_index47=\"\";\n  \
    \  local vowel_found_index48=\"\";\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_2=$(echo $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_7=$(echo $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_12=$(echo $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_17=$(echo $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_22=$(echo $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_27=$(echo $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_32=$(echo $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels\
    \ | wc -w)\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local string=\"$1\"\n    local vowel\n    local vowel_pos\n \
    \   local vowel_pos2\n    local vowel_pos3\n    local vowel_pos4\n    local vowel_pos5\n\
    \    local vowel_pos6\n    local vowel_pos7\n    local vowel_pos8\n    local vowel_pos9\n\
    \    local vowel_pos10\n    local vowel_pos11\n    local vowel_pos12\n    local\
    \ vowel_pos13\n    local vowel_pos14\n    local vowel_pos15\n    local vowel_pos16\n\
    \    local vowel_pos17\n    local vowel_pos18\n    local vowel_pos19\n    local\
    \ vowel_pos20\n    local vowel_pos21\n    local vowel_pos22\n    local vowel_pos23\n\
    \    local vowel_pos24\n    local vowel_pos25\n    local vowel_pos26\n    local\
    \ vowel_pos27\n    local vowel_pos28\n    local vowel_pos29\n    local vowel_pos30\n\
    \    local vowel_pos31\n    local vowel_pos32\n    local vowel_pos33\n    local\
    \ vowel_pos34\n    local vowel_pos35\n    local vowel_pos36\n    local vowel_pos37\n\
    \    local vowel_pos38\n    local vowel_pos39\n    local vowel_pos40\n    local\
    \ vowel_pos41\n    local vowel_pos42\n    local vowel_pos43\n    local vowel_pos44\n\
    \    local vowel_pos45\n    local vowel_pos46\n    local vowel_pos47\n    local\
    \ vowel_pos48\n    local vowel_pos49\n    local vowel_pos50\n    local vowel_pos51\n\
    \    local vowel_pos52\n    local vowel_pos53\n    local vowel_pos54\n    local\
    \ vowel_pos55\n    local vowel_pos56\n    local vowel_pos57\n    local vowel_pos58\n\
    \    local vowel_pos59\n    local vowel_pos60\n    local vowel_pos61\n    local\
    \ vowel_pos62\n    local vowel_pos63\n    local vowel_pos64\n    local vowel_pos65\n\
    \    local vowel_pos66\n    local vowel_pos67\n    local vowel_pos68\n    local\
    \ vowel_pos69\n    local vowel_pos70\n    local vowel\n}\n\ncandidate() {\n  \
    \  get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local word=$1\n    local vowel\n    local vowel_count\n   \
    \ local vowel_index\n    local vowel_found\n    local vowel_found_index\n    local\
    \ vowel_found_index2\n    local vowel_found_index3\n    local vowel_found_index4\n\
    \    local vowel_found_index5\n    local vowel_found_index6\n    local vowel_found_index7\n\
    \    local vowel_found_index8\n    local vowel_found_index9\n    local vowel_found_index10\n\
    \    local vowel_found_index11\n    local vowel_found_index12\n    local vowel_found_index13\n\
    \    local vowel_found_index14\n    local vowel_found_index15\n    local vowel_found_index16\n\
    \    local vowel_found_index17\n    local vowel_found_index18\n    local vowel_found_index19\n\
    \    local vowel_found_index20\n    local vowel_found_index21\n    local vowel_found_index22\n\
    \    local vowel_found_index23\n    local vowel_found_index24\n    local vowel_found_index25\n\
    \    local vowel_found_index26\n    local vowel_found_index27\n    local vowel_found_index28\n\
    \    local vowel_found_index29\n    local vowel_found_index30\n    local vowel_found_index31\n\
    \    local vowel_found_index32\n    local vowel_found_index33\n    local vowel_found_index34\n\
    \    local vowel_found_index35\n    local vowel_found_index36\n    local vowel_found_index37\n\
    \    local vowel_found_index38\n    local vowel_found_index39\n    local vowel_found_index40\n\
    \    local vowel_found_index41\n    local vowel_found_index42\n    local vowel_found_index43\n\
    \    local vowel_found_index44\n    local vowel_found_index45\n    local vowel_found_index46\n\
    \    local vowel_found_index47\n    local vowel_found_index48\n    local vowel_found_index49\n\
    \    local vowel_found_index50\n    local vowel_found_index51\n    local vowel_found_index52\n\
    \    local vowel_found_index53\n    local vowel_found_index54\n    local vowel_found_index55\n\
    \    local vowel_found_index56\n    local vowel_found_index57\n    local vowel_found_index58\n\
    \    local vowel_found_index59\n    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel=\"\";\n    local vowel_found=0;\n\
    \    local i=${#word};\n    local j=$((${#vowels}-1));\n    local k=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    local vowel_found=0;\n    local\
    \ vowel_found=0;\n    local vowel_found=0;\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowel_found=\"\
    \"\n    local vowel_position=0\n    local vowel_position_count=0\n    local vowel_position_count2=0\n\
    \    local vowel_position_count3=0\n    local vowel_position_count4=0\n    local\
    \ vowel_position_count5=0\n    local vowel_position_count6=0\n    local vowel_position_count7=0\n\
    \    local vowel_position_count8=0\n    local vowel_position_count9=0\n    local\
    \ vowel_position_count10=0\n    local vowel_position_count11=0\n    local vowel_position_count12=0\n\
    \    local vowel_position_count13=0\n    local vowel_position_count14=0\n    local\
    \ vowel_position_count15=0\n    local vowel_position_count16=0\n    local vowel_position_count17=0\n\
    \    local vowel_position_count18=0\n    local vowel_position_count19=0\n    local\
    \ vowel_position_count20=0\n    local vowel_position_count21=0\n    local vowel_position_count22=0\n\
    \    local vowel_position_count23=0\n    local vowel_position_count24=0\n    local\
    \ vowel_position_count25=0\n    local vowel_position_count26=0\n    local vowel_position_count27=0\n\
    \    local vowel_position_count28=0\n    local vowel_position_count29=0\n    local\
    \ vowel_position_count30=0\n    local vowel_position_count31=0\n    local vowel_position_count32=0\n\
    \    local vowel_position_count33=0\n    local vowel_position_count34=0\n    local\
    \ vowel_position_count35=0\n    local vowel_position_count36=0\n    local vowel_position_count37=0\n\
    \    local vowel_position_count38=0\n    local vowel_position_count39=0\n    local\
    \ vowel_position_count40=0\n    local vowel_position_count41=0\n    local vowel_position_count42=0\n\
    \    local vowel_position_count43=0\n    local vowel_position_count44=0\n    local\
    \ vowel_position_count45=0\n    local vowel_position_count46=0\n    local vowel_position_count47=0\n\
    \    local vowel_position_count48=0\n    local vowel_position_count49=0\n    local\
    \ vowel_position_count50=0\n    local vowel_position_count51=0\n    local vowel_position_count52=0\n\
    \    local vowel_position\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local vowels_count=$(echo $vowels | wc -w)\n  local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_3=$(echo $vowels | wc -w)\n  local vowels_count_4=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_5=$(echo $vowels | wc -w)\n  local vowels_count_6=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_7=$(echo $vowels | wc -w)\n  local vowels_count_8=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_9=$(echo $vowels | wc -w)\n  local vowels_count_10=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_11=$(echo $vowels | wc -w)\n  local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_13=$(echo $vowels | wc -w)\n  local vowels_count_14=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_15=$(echo $vowels | wc -w)\n  local vowels_count_16=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_17=$(echo $vowels | wc -w)\n  local vowels_count_18=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_19=$(echo $vowels | wc -w)\n  local vowels_count_20=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_21=$(echo $vowels | wc -w)\n  local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_23=$(echo $vowels | wc -w)\n  local vowels_count_24=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_25=$(echo $vowels | wc -w)\n  local vowels_count_26=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_27=$(echo $vowels | wc -w)\n  local vowels_count_28=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_29=$(echo $vowels | wc -w)\n  local vowels_count_30=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_31=$(echo $vowels | wc -w)\n  local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_33=$(echo $vowels | wc -w)\n  local vowels_count_34\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count_2=$((${#1} + 1))\n    local vowels_count_3=$((${#1} -\
    \ 1))\n    local vowels_count_4=$((${#1} + ${#1}))\n    local vowels_count_5=$((${#1}\
    \ - ${#1}))\n    local vowels_count_6=$((${#1} + ${#1}))\n    local vowels_count_7=$((${#1}\
    \ - ${#1}))\n    local vowels_count_8=$((${#1} + ${#1}))\n    local vowels_count_9=$((${#1}\
    \ - ${#1}))\n    local vowels_count_10=$((${#1} + ${#1}))\n    local vowels_count_11=$((${#1}\
    \ - ${#1}))\n    local vowels_count_12=$((${#1} + ${#1}))\n    local vowels_count_13=$((${#1}\
    \ - ${#1}))\n    local vowels_count_14=$((${#1} + ${#1}))\n    local vowels_count_15=$((${#1}\
    \ - ${#1}))\n    local vowels_count_16=$((${#1} + ${#1}))\n    local vowels_count_17=$((${#1}\
    \ - ${#1}))\n    local vowels_count_18=$((${#1} + ${#1}))\n    local vowels_count_19=$((${#1}\
    \ - ${#1}))\n    local vowels_count_20=$((${#1} + ${#1}))\n    local vowels_count_21=$((${#1}\
    \ - ${#1}))\n    local vowels_count_22=$((${#1} + ${#1}))\n    local vowels_count_23=$((${#1}\
    \ - ${#1}))\n    local vowels_count_24=$((${#1} + ${#1}))\n    local vowels_count_25=$((${#1}\
    \ - ${#1}))\n    local vowels_count_26=$((${#1} + ${#1}))\n    local vowels_count_27=$((${#1}\
    \ - ${#1}))\n    local vowels_count_28=$((${#1} + ${#1}))\n    local vowels_count_29=$((${#1}\
    \ - ${#1}))\n    local vowels_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel=\"\";\n    local vowel_count=0;\n\
    \    local vowel_position=0;\n    local consonant_position=0;\n    local consonant_count=0;\n\
    \    local consonant_string=\"\";\n    local consonant_string_count=0;\n    local\
    \ consonant_string_position=0;\n    local consonant_string_position_count=0;\n\
    \    local consonant_string_position_string=\"\";\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local consonant_string_position_string_count=0;\n    local consonant_string_position_string_count=0;\n\
    \    local conson\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=0;\n\
    \    local vowel_found_index2=0;\n    local vowel_found_index3=1;\n    local vowel_found_index4=2;\n\
    \    local vowel_found_index5=3;\n    local vowel_found_index6=4;\n    local vowel_found_index7=5;\n\
    \    local vowel_found_index8=6;\n    local vowel_found_index9=7;\n    local vowel_found_index10=8;\n\
    \    local vowel_found_index11=9;\n    local vowel_found_index12=10;\n    local\
    \ vowel_found_index13=11;\n    local vowel_found_index14=12;\n    local vowel_found_index15=13;\n\
    \    local vowel_found_index16=14;\n    local vowel_found_index17=15;\n    local\
    \ vowel_found_index18=16;\n    local vowel_found_index19=17;\n    local vowel_found_index20=18;\n\
    \    local vowel_found_index21=19;\n    local vowel_found_index22=20;\n    local\
    \ vowel_found_index23=21;\n    local vowel_found_index24=22;\n    local vowel_found_index25=23;\n\
    \    local vowel_found_index26=24;\n    local vowel_found_index27=25;\n    local\
    \ vowel_found_index28=26;\n    local vowel_found_index29=27;\n    local vowel_found_index30=28;\n\
    \    local vowel_found_index31=29;\n    local vowel_found_index32=30;\n    local\
    \ vowel_found_index33=31;\n    local vowel_found_index34=32;\n    local vowel_found_index35=33;\n\
    \    local vowel_found_index36=34;\n    local vowel_found_index37=35;\n    local\
    \ vowel_found_index38=36;\n    local vowel_found_index39=37;\n    local vowel_found_index40=38;\n\
    \    local vowel_found_index41=39;\n    local vowel_found_index42=40;\n    local\
    \ vowel_found_index43=41;\n    local vowel_found_index44=42;\n    local vowel_found_index45=43;\n\
    \    local vowel_found_index46=44;\n    local vowel_found_index47\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels[@]}\n    local vowels_string=${vowels[$((\
    \ ${#1} % ${vowels_count} ))]}\n    local vowels_string_count=${#vowels_string}\n\
    \    local vowels_string_index=$(( ${#1} / ${vowels_count} ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ % ${vowels_string_count} ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index} % ${vowels_string_count}\
    \ ))\n    local vowels_string_index=$(( ${vowels_string_index} + 1 ))\n    local\
    \ vowels_string_index=$(( ${vowels_string_index} % ${vowels_string_count} ))\n\
    \    local vowels_string_index=$(( ${vowels_string_index} + 1 ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} % ${vowels_string_count} ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ % ${vowels_string_count} ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index} % ${vowels_string_count}\
    \ ))\n    local vowels_string_index=$(( ${vowels_string_index} + 1 ))\n    local\
    \ vowels_string_index=$(( ${vowels_string_index} % ${vowels_string_count} ))\n\
    \    local vowels_string_index=$(( ${vowels_string_index} + 1 ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} % ${vowels_string_count} ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ % ${vowels_string_count} ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index} % ${vowels_string_count}\
    \ ))\n    local vowels_string_index=$\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n\
    \    local vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_position=0\n    local vowel_positions=()\n\
    \    local vowel_founds=()\n    local vowel_founds_count=${#vowel_founds[@]}\n\
    \    local vowel_founds_position=${vowel_founds_count}\n    local vowel_founds_positions=()\n\
    \    local vowel_founds_positions_count=${#vowel_founds_positions[@]}\n    local\
    \ vowel_founds_positions_position=${vowel_founds_positions_count}\n    local vowel_founds_positions_positions=()\n\
    \    local vowel_founds_positions_positions_count=${#vowel_founds_positions_positions[@]}\n\
    \    local vowel_founds_positions_positions_position=${vowel_founds_positions_positions_count}\n\
    \    local vowel_founds_positions_positions_positions=()\n    local vowel_founds_positions_positions_positions_count=${#vowel_founds_positions_positions_positions[@]}\n\
    \    local vowel_founds_positions_positions_positions_position=${vowel_founds_positions_positions_positions_count}\n\
    \    local vowel_founds_positions_positions_positions_positions=()\n    local\
    \ vowel_founds_positions_positions_positions_positions_count=${#vowel_founds_positions_positions_positions_positions[@]}\n\
    \    local vowel_founds_positions_positions_positions_positions_position=${vowel_founds_positions_positions_positions_positions_count}\n\
    \    local vowel_founds_positions_positions_positions_positions_positions=()\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_count=${#vowel_founds_positions_positions_positions_positions_positions[@]}\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_position=${vowel_founds_positions_positions_positions_positions_positions_count}\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions=()\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_count=${#vowel_founds_positions_positions_positions_positions_positions_positions[@]}\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_position=${vowel_founds_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprnp18_1v.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_positions=\"\";\n  local vowel_positions_count=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  \n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel=\"\";\n    local vowel_index=0;\n\
    \    local consonant=\"\";\n    local consonant_index=0;\n    local consonant_count=0;\n\
    \    local consonant_count2=0;\n    local consonant_count3=0;\n    local consonant_count4=0;\n\
    \    local consonant_count5=0;\n    local consonant_count6=0;\n    local consonant_count7=0;\n\
    \    local consonant_count8=0;\n    local consonant_count9=0;\n    local consonant_count10=0;\n\
    \    local consonant_count11=0;\n    local consonant_count12=0;\n    local consonant_count13=0;\n\
    \    local consonant_count14=0;\n    local consonant_count15=0;\n    local consonant_count16=0;\n\
    \    local consonant_count17=0;\n    local consonant_count18=0;\n    local consonant_count19=0;\n\
    \    local consonant_count20=0;\n    local consonant_count21=0;\n    local consonant_count22=0;\n\
    \    local consonant_count23=0;\n    local consonant_count24=0;\n    local consonant_count25=0;\n\
    \    local consonant_count26=0;\n    local consonant_count27=0;\n    local consonant_count28=0;\n\
    \    local consonant_count29=0;\n    local consonant_count30=0;\n    local consonant_count31=0;\n\
    \    local consonant_count32=0;\n    local consonant_count33=0;\n    local consonant_count34=0;\n\
    \    local consonant_count35=0;\n    local consonant_count36=0;\n    local consonant_count37=0;\n\
    \    local consonant_count38=0;\n    local consonant_count39=0;\n    local consonant_count40=0;\n\
    \    local consonant_count41=0;\n    local consonant_count42=0;\n    local consonant_count43=0;\n\
    \    local consonant_count44=0;\n    local consonant_count45=0;\n    local consonant_count46=0;\n\
    \    local consonant_count47=0;\n    local consonant_count48=0;\n    local consonant_count49=0;\n\
    \    local consonant_count50=0;\n    local consonant_count51=0;\n    local consonant_count\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local word=$1\n    local vowel\n    local vowel_found\n   \
    \ local vowel_found_index\n    local vowel_found_index2\n    local vowel_found_index3\n\
    \    local vowel_found_index4\n    local vowel_found_index5\n    local vowel_found_index6\n\
    \    local vowel_found_index7\n    local vowel_found_index8\n    local vowel_found_index9\n\
    \    local vowel_found_index10\n    local vowel_found_index11\n    local vowel_found_index12\n\
    \    local vowel_found_index13\n    local vowel_found_index14\n    local vowel_found_index15\n\
    \    local vowel_found_index16\n    local vowel_found_index17\n    local vowel_found_index18\n\
    \    local vowel_found_index19\n    local vowel_found_index20\n    local vowel_found_index21\n\
    \    local vowel_found_index22\n    local vowel_found_index23\n    local vowel_found_index24\n\
    \    local vowel_found_index25\n    local vowel_found_index26\n    local vowel_found_index27\n\
    \    local vowel_found_index28\n    local vowel_found_index29\n    local vowel_found_index30\n\
    \    local vowel_found_index31\n    local vowel_found_index32\n    local vowel_found_index33\n\
    \    local vowel_found_index34\n    local vowel_found_index35\n    local vowel_found_index36\n\
    \    local vowel_found_index37\n    local vowel_found_index38\n    local vowel_found_index39\n\
    \    local vowel_found_index40\n    local vowel_found_index41\n    local vowel_found_index42\n\
    \    local vowel_found_index43\n    local vowel_found_index44\n    local vowel_found_index45\n\
    \    local vowel_found_index46\n    local vowel_found_index47\n    local vowel_found_index48\n\
    \    local vowel_found_index49\n    local vowel_found_index50\n    local vowel_found_index51\n\
    \    local vowel_found_index52\n    local vowel_found_index53\n    local vowel_found_index54\n\
    \    local vowel_found_index55\n    local vowel_found_index56\n    local vowel_found_index57\n\
    \    local vowel_found_index58\n    local vowel_found_index59\n    local vowel_found_index60\n\
    \    local vowel_found_index\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local word=$1\n    local vowel_found=\"\"\n    local\
    \ vowel_position=\"\"\n    local vowel_position_count=0\n    local vowel_position_index=0\n\
    \    local vowel_position_index2=0\n    local vowel_position_index3=0\n    local\
    \ vowel_position_index4=0\n    local vowel_position_index5=0\n    local vowel_position_index6=0\n\
    \    local vowel_position_index7=0\n    local vowel_position_index8=0\n    local\
    \ vowel_position_index9=0\n    local vowel_position_index10=0\n    local vowel_position_index11=0\n\
    \    local vowel_position_index12=0\n    local vowel_position_index13=0\n    local\
    \ vowel_position_index14=0\n    local vowel_position_index15=0\n    local vowel_position_index16=0\n\
    \    local vowel_position_index17=0\n    local vowel_position_index18=0\n    local\
    \ vowel_position_index19=0\n    local vowel_position_index20=0\n    local vowel_position_index21=0\n\
    \    local vowel_position_index22=0\n    local vowel_position_index23=0\n    local\
    \ vowel_position_index24=0\n    local vowel_position_index25=0\n    local vowel_position_index26=0\n\
    \    local vowel_position_index27=0\n    local vowel_position_index28=0\n    local\
    \ vowel_position_index29=0\n    local vowel_position_index30=0\n    local vowel_position_index31=0\n\
    \    local vowel_position_index32=0\n    local vowel_position_index33=0\n    local\
    \ vowel_position_index34=0\n    local vowel_position_index35=0\n    local vowel_position_index36=0\n\
    \    local vowel_position_index37=0\n    local vowel_position_index38=0\n    local\
    \ vowel_position_index39=0\n    local vowel_position_index40=0\n    local vowel_position_index41=0\n\
    \    local vowel_position_index42=0\n    local vowel_position_index43=0\n    local\
    \ vowel_position_index44=0\n    local vowel_position_index45=0\n    local vowel_position_index46=0\n\
    \    local vowel_position_index47=0\n    local vowel_position_index48=0\n    local\
    \ vowel_position_index49=0\n    local vowel_position_index50=0\n    local vowel_position_index51=0\n\
    \    local vowel_position_index52=0\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels[@]}\n    local vowels_index=0\n\
    \    local vowels_string=\"\"\n    local vowels_string_index=0\n    local vowels_string_index2=0\n\
    \    local vowels_string_index3=0\n    local vowels_string_index4=0\n    local\
    \ vowels_string_index5=0\n    local vowels_string_index6=0\n    local vowels_string_index7=0\n\
    \    local vowels_string_index8=0\n    local vowels_string_index9=0\n    local\
    \ vowels_string_index10=0\n    local vowels_string_index11=0\n    local vowels_string_index12=0\n\
    \    local vowels_string_index13=0\n    local vowels_string_index14=0\n    local\
    \ vowels_string_index15=0\n    local vowels_string_index16=0\n    local vowels_string_index17=0\n\
    \    local vowels_string_index18=0\n    local vowels_string_index19=0\n    local\
    \ vowels_string_index20=0\n    local vowels_string_index21=0\n    local vowels_string_index22=0\n\
    \    local vowels_string_index23=0\n    local vowels_string_index24=0\n    local\
    \ vowels_string_index25=0\n    local vowels_string_index26=0\n    local vowels_string_index27=0\n\
    \    local vowels_string_index28=0\n    local vowels_string_index29=0\n    local\
    \ vowels_string_index30=0\n    local vowels_string_index31=0\n    local vowels_string_index32=0\n\
    \    local vowels_string_index33=0\n    local vowels_string_index34=0\n    local\
    \ vowels_string_index35=0\n    local vowels_string_index36=0\n    local vowels_string_index37=0\n\
    \    local vowels_string_index38=0\n    local vowels_string_index39=0\n    local\
    \ vowels_string_index40=0\n    local vowels_string_index41=0\n    local vowels_string_index42=0\n\
    \    local vowels_string_index43=0\n    local vowels_string_index44=0\n    local\
    \ vowels_string_index45=0\n    local vowels_string_index46=0\n    local vowels_string_index47=0\n\
    \    local vowels_string_index48=0\n    local vowels_string_index49=0\n    local\
    \ vowels_string_index50=0\n    local vowels_string_index51=0\n    local vowels_string_index52=0\n\
    \    local vowels_string_index53=0\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local word=$1\n    local vowel\n    local vowel_index\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n\
    \    local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_str=${vowels//,/\
    \ };\n    local vowels_arr=($vowels_str);\n    local vowels_arr_count=${#vowels_arr[@]};\n\
    \    local vowels_arr_str=${vowels_arr[@]//,/ };\n    local vowels_arr_arr_count=${#vowels_arr_str[@]};\n\
    \    local vowels_arr_arr_str=${vowels_arr_str[@]//,/ };\n    local vowels_arr_arr_arr_count=${#vowels_arr_arr_str[@]};\n\
    \    local vowels_arr_arr_arr_str=${vowels_arr_arr_str[@]//,/ };\n    local vowels_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_str[@]};\n\
    \    local vowels_arr_arr_arr_arr_str=${vowels_arr_arr_arr_str[@]//,/ };\n   \
    \ local vowels_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_str[@]};\n\
    \    local vowels_arr_arr_arr_arr_arr_str=${vowels_arr_arr_arr_arr_str[@]//,/\
    \ };\n    local vowels_arr_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_arr_str[@]};\n\
    \    local vowels_arr_arr_arr_arr_arr_arr_str=${vowels_arr_arr_arr_arr_arr_str[@]//,/\
    \ };\n    local vowels_arr_arr_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_arr_arr_str[@]};\n\
    \    local vowels_arr_arr_arr_arr_arr_arr_arr_str=${vowels_arr_arr_arr_arr_arr_arr_str[@]//,/\
    \ };\n    local vowels_arr_arr_arr_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_arr_arr_arr_str[@]};\n\
    \    local vowels_arr_arr_arr_arr_arr_arr_arr_arr_str=${vowels_arr_arr_arr_arr_arr_arr_arr_str[@]//,/\
    \ };\n    local vowels_arr_arr_arr_arr_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_arr_arr_arr_arr_str[@]};\n\
    \    local vowels_arr_arr_arr_arr_arr_arr_arr_arr_arr_arr_str=${vowels_arr_arr_arr_arr_arr_arr_arr_arr_arr_arr_str[@]//,/\
    \ };\n    local vowels_arr_arr_arr_arr_arr_arr_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_arr_arr_arr_arr_arr_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj4lu4h7j.sh: line 66: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=\"\
    $1\"\n    local vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_found=\"\
    \"\n    local vowel_position=0\n    local vowel_position_count=0\n    local vowel_position_string=\"\
    \"\n    local vowel_position_count_string=\"\"\n    local vowel_position_position_1=0\n\
    \    local vowel_position_position_2=0\n    local vowel_position_position_3=0\n\
    \    local vowel_position_position_4=0\n    local vowel_position_position_5=0\n\
    \    local vowel_position_position_6=0\n    local vowel_position_position_7=0\n\
    \    local vowel_position_position_8=0\n    local vowel_position_position_9=0\n\
    \    local vowel_position_position_10=0\n    local vowel_position_position_11=0\n\
    \    local vowel_position_position_12=0\n    local vowel_position_position_13=0\n\
    \    local vowel_position_position_14=0\n    local vowel_position_position_15=0\n\
    \    local vowel_position_position_16=0\n    local vowel_position_position_17=0\n\
    \    local vowel_position_position_18=0\n    local vowel_position_position_19=0\n\
    \    local vowel_position_position_20=0\n    local vowel_position_position_21=0\n\
    \    local vowel_position_position_22=0\n    local vowel_position_position_23=0\n\
    \    local vowel_position_position_24=0\n    local vowel_position_position_25=0\n\
    \    local vowel_position_position_26=0\n    local vowel_position_position_27=0\n\
    \    local vowel_position_position_28=0\n    local vowel_position_position_29=0\n\
    \    local vowel_position_position_30=0\n    local vowel_position_position_31=0\n\
    \    local vowel_position_position_32=0\n    local vowel_position_position_33=0\n\
    \    local vowel_position_position_34=0\n    local vowel_position_position_35=0\n\
    \    local vowel_position_position_36=0\n    local vowel_position_position_37=0\n\
    \    local vowel_position_position_38=0\n    local vowel_position_position_39=0\n\
    \    local vowel_position_position_40=0\n    local vowel_position_position_41=0\n\
    \    local vowel_position_position_42=0\n    local vowel_position_position_43=0\n\
    \    local vowel_position_position_44=0\n    local vowel_position_position_45=0\n\
    \    local vowel_position_position_46=0\n    local vowel_position_position_47=0\n\
    \    local vowel_position_position_48=0\n    local vowel_position_position_49=0\n\
    \    local vowel_position_position_50=0\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel;\n    local vowel_found;\n\
    \    local vowel_position;\n    local vowel_position2;\n    local consonant;\n\
    \    local consonant_position;\n    local consonant_position2;\n    local consonant_found;\n\
    \    local consonant_found2;\n    local consonant_position3;\n    local consonant_position4;\n\
    \    local consonant_found3;\n    local consonant_found4;\n    local consonant_position5;\n\
    \    local consonant_found5;\n    local consonant_position6;\n    local consonant_found6;\n\
    \    local consonant_position7;\n    local consonant_found7;\n    local consonant_position8;\n\
    \    local consonant_found8;\n    local consonant_position9;\n    local consonant_found9;\n\
    \    local consonant_position10;\n    local consonant_found10;\n    local consonant_position11;\n\
    \    local consonant_found11;\n    local consonant_position12;\n    local consonant_found12;\n\
    \    local consonant_position13;\n    local consonant_found13;\n    local consonant_position14;\n\
    \    local consonant_found14;\n    local consonant_position15;\n    local consonant_found15;\n\
    \    local consonant_position16;\n    local consonant_found16;\n    local consonant_position17;\n\
    \    local consonant_found17;\n    local consonant_position18;\n    local consonant_found18;\n\
    \    local consonant_position19;\n    local consonant_found19;\n    local consonant_position20;\n\
    \    local consonant_found20;\n    local consonant_position21;\n    local consonant_found21;\n\
    \    local consonant_position22;\n    local consonant_found22;\n    local consonant_position23;\n\
    \    local consonant_found23;\n    local consonant_position24;\n    local consonant_found24;\n\
    \    local consonant_position25;\n    local consonant_found25;\n    local consonant_position26;\n\
    \    local consonant_found26;\n    local consonant_position27;\n    local consonant_found27;\n\
    \    local consonant_position28;\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\"\n  local word=$1\n  local vowel\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found_index2\n  local vowel_found_index3\n  local vowel_found_index4\n\
    \  local vowel_found_index5\n  local vowel_found_index6\n  local vowel_found_index7\n\
    \  local vowel_found_index8\n  local vowel_found_index9\n  local vowel_found_index10\n\
    \  local vowel_found_index11\n  local vowel_found_index12\n  local vowel_found_index13\n\
    \  local vowel_found_index14\n  local vowel_found_index15\n  local vowel_found_index16\n\
    \  local vowel_found_index17\n  local vowel_found_index18\n  local vowel_found_index19\n\
    \  local vowel_found_index20\n  local vowel_found_index21\n  local vowel_found_index22\n\
    \  local vowel_found_index23\n  local vowel_found_index24\n  local vowel_found_index25\n\
    \  local vowel_found_index26\n  local vowel_found_index27\n  local vowel_found_index28\n\
    \  local vowel_found_index29\n  local vowel_found_index30\n  local vowel_found_index31\n\
    \  local vowel_found_index32\n  local vowel_found_index33\n  local vowel_found_index34\n\
    \  local vowel_found_index35\n  local vowel_found_index36\n  local vowel_found_index37\n\
    \  local vowel_found_index38\n  local vowel_found_index39\n  local vowel_found_index40\n\
    \  local vowel_found_index41\n  local vowel_found_index42\n  local vowel_found_index43\n\
    \  local vowel_found_index44\n  local vowel_found_index45\n  local vowel_found_index46\n\
    \  local vowel_found_index47\n  local vowel_found_index48\n  local vowel_found_index49\n\
    \  local vowel_found_index50\n  local vowel_found_index51\n  local vowel_found_index52\n\
    \  local vowel_found_index53\n  local vowel_found_index54\n  local vowel_found_index55\n\
    \  local vowel_found_index56\n  local vowel_found_index57\n  local vowel_found_index58\n\
    \  local vowel_found_index59\n  local vowel_found_index60\n  local vowel_found_index\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_found_index=0;\n\
    \  local vowel_index=0;\n  local vowel_length=$((${#word} - 1));\n  local vowel_found_indexes=\"\
    \";\n  local vowel_found_indexes_length=0;\n  local vowel_found_indexes_count=0;\n\
    \  local vowel_found_indexes_index=0;\n  local vowel_found_indexes_word=\"\";\n\
    \  local vowel_found_indexes_vowel=\"\";\n  local vowel_found_indexes_vowel_length=$((${#vowels}\
    \ - 1));\n  local vowel_found_indexes_vowel_index=0;\n  local vowel_found_indexes_vowel_word=\"\
    \";\n  local vowel_found_indexes_vowel_vowel=\"\";\n  local vowel_found_indexes_vowel_vowel_length=$((${#vowels}\
    \ - 1));\n  local vowel_found_indexes_vowel_vowel_index=0;\n  local vowel_found_indexes_vowel_vowel_word=\"\
    \";\n  local vowel_found_indexes_vowel_vowel_vowel=\"\";\n  local vowel_found_indexes_vowel_vowel_vowel_length=$((${#vowels}\
    \ - 1));\n  local vowel_found_indexes_vowel_vowel_vowel_index=0;\n  local vowel_found_indexes_vowel_vowel_vowel_word=\"\
    \";\n  local vowel_found_indexes_vowel_vowel_vowel_vowel=\"\";\n  local vowel_found_indexes_vowel_vowel_vowel_vowel_length=$((${#vowels}\
    \ - 1));\n  local vowel_found_indexes_vowel_vowel_vowel_vowel_index=0;\n  local\
    \ vowel_found_indexes_vowel_vowel_vowel_vowel_word=\"\";\n  local vowel_found_indexes_vowel_vowel_vowel_vowel_vowel=\"\
    \";\n  local vowel_found_indexes_vowel_vowel_vowel_vowel_vowel_length=$((${#vowels}\
    \ - 1));\n  local vowel_found_indexes_vowel_vowel_vowel_vowel_vowel_index=0;\n\
    \  local vowel_found_indexes_vowel_vowel_vowel_vowel_vowel_word=\"\";\n  local\
    \ vowel_found_indexes_vowel_vowel_vowel_vowel_vowel_vowel=\"\";\n  local vowel_found_indexes_vowel_vowel_vowel_vowel_vowel_vowel_length=$((${#vowels}\
    \ - 1));\n  local vowel_found_indexes_vowel\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=0;\n\
    \    local vowel_index=0;\n    local consonant_index=0;\n    local consonant_found=\"\
    \";\n    local consonant_found_index=0;\n    local consonant_found=\"\";\n   \
    \ local consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_found=\"\";\n    local\
    \ consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_found=\"\";\n    local\
    \ consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_found=\"\";\n    local\
    \ consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_found=\"\";\n    local\
    \ consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_found=\"\";\n    local\
    \ consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_found=\"\";\n    local\
    \ consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_found=\"\";\n    local\
    \ consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_found=\"\";\n    local\
    \ consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_found=\"\";\n    local\
    \ consonant_found=\"\";\n    local consonant_found=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1\n  local vowel_found=\"\"\n  local vowel_found_index=0\n\
    \  local vowel_found_index2=0\n  local vowel_found_index3=0\n  local vowel_found_index4=0\n\
    \  local vowel_found_index5=0\n  local vowel_found_index6=0\n  local vowel_found_index7=0\n\
    \  local vowel_found_index8=0\n  local vowel_found_index9=0\n  local vowel_found_index10=0\n\
    \  local vowel_found_index11=0\n  local vowel_found_index12=0\n  local vowel_found_index13=0\n\
    \  local vowel_found_index14=0\n  local vowel_found_index15=0\n  local vowel_found_index16=0\n\
    \  local vowel_found_index17=0\n  local vowel_found_index18=0\n  local vowel_found_index19=0\n\
    \  local vowel_found_index20=0\n  local vowel_found_index21=0\n  local vowel_found_index22=0\n\
    \  local vowel_found_index23=0\n  local vowel_found_index24=0\n  local vowel_found_index25=0\n\
    \  local vowel_found_index26=0\n  local vowel_found_index27=0\n  local vowel_found_index28=0\n\
    \  local vowel_found_index29=0\n  local vowel_found_index30=0\n  local vowel_found_index31=0\n\
    \  local vowel_found_index32=0\n  local vowel_found_index33=0\n  local vowel_found_index34=0\n\
    \  local vowel_found_index35=0\n  local vowel_found_index36=0\n  local vowel_found_index37=0\n\
    \  local vowel_found_index38=0\n  local vowel_found_index39=0\n  local vowel_found_index40=0\n\
    \  local vowel_found_index41=0\n  local vowel_found_index42=0\n  local vowel_found_index43=0\n\
    \  local vowel_found_index44=0\n  local vowel_found_index45=0\n  local vowel_found_index46=0\n\
    \  local vowel_found_index47=0\n  local vowel_found_index48=0\n  local vowel_found_index49=0\n\
    \  local vowel_found_index50=0\n  local vowel_found_index51=0\n  local vowel_found_index52=0\n\
    \  local vowel_found_index53=0\n  local vowel_found_index54=0\n  local \n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=0;\n\
    \    local vowel_index=0;\n    local vowel_found_indexes=\"\";\n    local vowel_found_indexes_count=0;\n\
    \    local vowel_found_indexes_string=\"\";\n    local vowel_found_indexes_string_count=0;\n\
    \    local vowel_found_indexes_string_index=0;\n    local vowel_found_indexes_string_index_count=0;\n\
    \    local vowel_found_indexes_string_index_string=\"\";\n    local vowel_found_indexes_string_index_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string=\"\";\n    local vowel_found_indexes_string_index_string_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string_index=0;\n    local\
    \ vowel_found_indexes_string_index_string_string_index_count=0;\n    local vowel_found_indexes_string_index_string_string_index_string=\"\
    \";\n    local vowel_found_indexes_string_index_string_string_index_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string_index_string_index_string=\"\
    \";\n    local vowel_found_indexes_string_index_string_string_index_string_index_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string=\"\
    \";\n    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string_index_string=\"\
    \";\n    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string_index_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string_index_string_index_string=\"\
    \";\n    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string_index_string_index_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string_index_string_index_string_index_string=\"\
    \";\n    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string_index_string_index_string_index_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string_index_string_index_string_index_string_index_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string_index_string_index_string_index_string_index_string_index_string_index_string_index_string_index_string_count=0;\n\
    \    local vowel_found_indexes_string_index_string_string_index_string_index_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n\
    \    local vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_position=0\n    local vowel_position2=0\n\
    \    local vowel_position3=0\n    local vowel_position4=0\n    local vowel_position5=0\n\
    \    local vowel_position6=0\n    local vowel_position7=0\n    local vowel_position8=0\n\
    \    local vowel_position9=0\n    local vowel_position10=0\n    local vowel_position11=0\n\
    \    local vowel_position12=0\n    local vowel_position13=0\n    local vowel_position14=0\n\
    \    local vowel_position15=0\n    local vowel_position16=0\n    local vowel_position17=0\n\
    \    local vowel_position18=0\n    local vowel_position19=0\n    local vowel_position20=0\n\
    \    local vowel_position21=0\n    local vowel_position22=0\n    local vowel_position23=0\n\
    \    local vowel_position24=0\n    local vowel_position25=0\n    local vowel_position26=0\n\
    \    local vowel_position27=0\n    local vowel_position28=0\n    local vowel_position29=0\n\
    \    local vowel_position30=0\n    local vowel_position31=0\n    local vowel_position32=0\n\
    \    local vowel_position33=0\n    local vowel_position34=0\n    local vowel_position35=0\n\
    \    local vowel_position36=0\n    local vowel_position37=0\n    local vowel_position38=0\n\
    \    local vowel_position39=0\n    local vowel_position40=0\n    local vowel_position41=0\n\
    \    local vowel_position42=0\n    local vowel_position43=0\n    local vowel_position44=0\n\
    \    local vowel_position45=0\n    local vowel_position46=0\n    local vowel_position47=0\n\
    \    local vowel_position48=0\n    local vowel_position49=0\n    local vowel_position50=0\n\
    \    local vowel_position51=0\n    local vowel_position52=0\n    local vowel_position53=0\n\
    \    local vowel_position54=0\n    local vowel_position55=0\n    local vowel_position56=0\n\
    \    local vowel_position57=0\n    local vowel_position58=0\n    local vowel_position59=0\n\
    \    local vowel_position60\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_string=${vowels//,/\
    \ };\n    local vowels_string_count=${#vowels_string};\n    local vowels_string_index=$((${#1}\
    \ - 1));\n    local vowels_string_index=$((${vowels_string_index} - 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjora1fr2.sh: line 50: unexpected EOF while looking for matching
    `)''

    /tmp/tmpjora1fr2.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local string=\"$1\"\n    local vowel_index=0\n    local vowel_found=\"\
    \"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n    local vowel_found_index3=0\n\
    \    local vowel_found_index4=0\n    local vowel_found_index5=0\n    local vowel_found_index6=0\n\
    \    local vowel_found_index7=0\n    local vowel_found_index8=0\n    local vowel_found_index9=0\n\
    \    local vowel_found_index10=0\n    local vowel_found_index11=0\n    local vowel_found_index12=0\n\
    \    local vowel_found_index13=0\n    local vowel_found_index14=0\n    local vowel_found_index15=0\n\
    \    local vowel_found_index16=0\n    local vowel_found_index17=0\n    local vowel_found_index18=0\n\
    \    local vowel_found_index19=0\n    local vowel_found_index20=0\n    local vowel_found_index21=0\n\
    \    local vowel_found_index22=0\n    local vowel_found_index23=0\n    local vowel_found_index24=0\n\
    \    local vowel_found_index25=0\n    local vowel_found_index26=0\n    local vowel_found_index27=0\n\
    \    local vowel_found_index28=0\n    local vowel_found_index29=0\n    local vowel_found_index30=0\n\
    \    local vowel_found_index31=0\n    local vowel_found_index32=0\n    local vowel_found_index33=0\n\
    \    local vowel_found_index34=0\n    local vowel_found_index35=0\n    local vowel_found_index36=0\n\
    \    local vowel_found_index37=0\n    local vowel_found_index38=0\n    local vowel_found_index39=0\n\
    \    local vowel_found_index40=0\n    local vowel_found_index41=0\n    local vowel_found_index42=0\n\
    \    local vowel_found_index43=0\n    local vowel_found_index44=0\n    local vowel_found_index45=0\n\
    \    local vowel_found_index46=0\n    local vowel_found_index47=0\n    local vowel_found_index48=0\n\
    \    local vowel_found_index49=0\n    local vowel_found_index50=0\n    local vowel_found_index51=0\n\
    \    local vowel_found_index52=0\n    local vowel_found_index53=0\n    local vowel_found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowels_count=${#vowels}\n    local vowels_str=\"\
    \"\n    local vowels_str_len=0\n    local vowels_str_len2=0\n    local vowels_str_len3=0\n\
    \    local vowels_str_len4=0\n    local vowels_str_len5=0\n    local vowels_str_len6=0\n\
    \    local vowels_str_len7=0\n    local vowels_str_len8=0\n    local vowels_str_len9=0\n\
    \    local vowels_str_len10=0\n    local vowels_str_len11=0\n    local vowels_str_len12=0\n\
    \    local vowels_str_len13=0\n    local vowels_str_len14=0\n    local vowels_str_len15=0\n\
    \    local vowels_str_len16=0\n    local vowels_str_len17=0\n    local vowels_str_len18=0\n\
    \    local vowels_str_len19=0\n    local vowels_str_len20=0\n    local vowels_str_len21=0\n\
    \    local vowels_str_len22=0\n    local vowels_str_len23=0\n    local vowels_str_len24=0\n\
    \    local vowels_str_len25=0\n    local vowels_str_len26=0\n    local vowels_str_len27=0\n\
    \    local vowels_str_len28=0\n    local vowels_str_len29=0\n    local vowels_str_len30=0\n\
    \    local vowels_str_len31=0\n    local vowels_str_len32=0\n    local vowels_str_len33=0\n\
    \    local vowels_str_len34=0\n    local vowels_str_len35=0\n    local vowels_str_len36=0\n\
    \    local vowels_str_len37=0\n    local vowels_str_len38=0\n    local vowels_str_len39=0\n\
    \    local vowels_str_len40=0\n    local vowels_str_len41=0\n    local vowels_str_len42=0\n\
    \    local vowels_str_len43=0\n    local vowels_str_len44=0\n    local vowels_str_len45=0\n\
    \    local vowels_str_len46=0\n    local vowels_str_len47=0\n    local vowels_str_len48=0\n\
    \    local vowels_str_len49=0\n    local vowels_str_len50=0\n    local vowels_str_len51=0\n\
    \    local vowels_str_len52=0\n    local vowels_str_len53=0\n    \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_found_index=0;\n\
    \  local vowel_found_index2=0;\n  local vowel_found_index3=1;\n  local vowel_found_index4=2;\n\
    \  local vowel_found_index5=3;\n  local vowel_found_index6=4;\n  local vowel_found_index7=5;\n\
    \  local vowel_found_index8=6;\n  local vowel_found_index9=7;\n  local vowel_found_index10=8;\n\
    \  local vowel_found_index11=9;\n  local vowel_found_index12=10;\n  local vowel_found_index13=11;\n\
    \  local vowel_found_index14=12;\n  local vowel_found_index15=13;\n  local vowel_found_index16=14;\n\
    \  local vowel_found_index17=15;\n  local vowel_found_index18=16;\n  local vowel_found_index19=17;\n\
    \  local vowel_found_index20=18;\n  local vowel_found_index21=19;\n  local vowel_found_index22=20;\n\
    \  local vowel_found_index23=21;\n  local vowel_found_index24=22;\n  local vowel_found_index25=23;\n\
    \  local vowel_found_index26=24;\n  local vowel_found_index27=25;\n  local vowel_found_index28=26;\n\
    \  local vowel_found_index29=27;\n  local vowel_found_index30=28;\n  local vowel_found_index31=29;\n\
    \  local vowel_found_index32=30;\n  local vowel_found_index33=31;\n  local vowel_found_index34=32;\n\
    \  local vowel_found_index35=33;\n  local vowel_found_index36=34;\n  local vowel_found_index37=35;\n\
    \  local vowel_found_index38=36;\n  local vowel_found_index39=37;\n  local vowel_found_index40=38;\n\
    \  local vowel_found_index41=39;\n  local vowel_found_index42=40;\n  local vowel_found_index43=41;\n\
    \  local vowel_found_index44=42;\n  local vowel_found_index45=43;\n  local vowel_found_index46=44;\n\
    \  local vowel_found_index47\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local string=\"$1\"\n    local vowel\n    local vowel_count\n\
    \    local vowel_index\n    local vowel_found\n    local vowel_found_index\n \
    \   local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n    local vowel_found_index\n    local vowel_found_index\n\
    \    local vowel_found_index\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local word=$1\n    local vowel\n    local vowel_found\n   \
    \ local vowel_found_index\n    local vowel_index\n    local vowel_length\n   \
    \ local vowel_length_index\n    local vowel_length_count\n    local vowel_length_count2\n\
    \    local vowel_length_count3\n    local vowel_length_count4\n    local vowel_length_count5\n\
    \    local vowel_length_count6\n    local vowel_length_count7\n    local vowel_length_count8\n\
    \    local vowel_length_count9\n    local vowel_length_count10\n    local vowel_length_count11\n\
    \    local vowel_length_count12\n    local vowel_length_count13\n    local vowel_length_count14\n\
    \    local vowel_length_count15\n    local vowel_length_count16\n    local vowel_length_count17\n\
    \    local vowel_length_count18\n    local vowel_length_count19\n    local vowel_length_count20\n\
    \    local vowel_length_count21\n    local vowel_length_count22\n    local vowel_length_count23\n\
    \    local vowel_length_count24\n    local vowel_length_count25\n    local vowel_length_count26\n\
    \    local vowel_length_count27\n    local vowel_length_count28\n    local vowel_length_count29\n\
    \    local vowel_length_count30\n    local vowel_length_count31\n    local vowel_length_count32\n\
    \    local vowel_length_count33\n    local vowel_length_count34\n    local vowel_length_count35\n\
    \    local vowel_length_count36\n    local vowel_length_count37\n    local vowel_length_count38\n\
    \    local vowel_length_count39\n    local vowel_length_count40\n    local vowel_length_count41\n\
    \    local vowel_length_count42\n    local vowel_length_count43\n    local vowel_length_count44\n\
    \    local vowel_length_count45\n    local vowel_length_count46\n    local vowel_length_count47\n\
    \    local vowel_length_count48\n    local vowel_length_count49\n    local vowel_length_count50\n\
    \    local vowel_length_count51\n    local vowel_length_count52\n    local vowel_length_count53\n\
    \    local vowel_length_count54\n    local vowel_length_count55\n    local vowel_length_count56\n\
    \    local vowel_length_count57\n    local vowel_length\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local string=$1\n    local vowel\n    local vowel_count=0\n \
    \   local vowel_found\n    local vowel_position\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_found\n    local vowel_position_count\n    local vowel_position_found\n\
    \    local vowel_position_count\n    local vowel_position_found\n    local vowel_position_count\n\
    \    local vowel_position_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_positions=\"\";\n  local vowel_positions_count=0;\n  local\
    \ vowel_positions_count_temp=0;\n  local vowel_positions_count_temp2=0\n  local\
    \ vowel_positions_count_temp3=0\n  local vowel_positions_count_temp4=0\n  local\
    \ vowel_positions_count_temp5=0\n  local vowel_positions_count_temp6=0\n  local\
    \ vowel_positions_count_temp7=0\n  local vowel_positions_count_temp8=0\n  local\
    \ vowel_positions_count_temp9=0\n  local vowel_positions_count_temp10=0\n  local\
    \ vowel_positions_count_temp11=0\n  local vowel_positions_count_temp12=0\n  local\
    \ vowel_positions_count_temp13=0\n  local vowel_positions_count_temp14=0\n  local\
    \ vowel_positions_count_temp15=0\n  local vowel_positions_count_temp16=0\n  local\
    \ vowel_positions_count_temp17=0\n  local vowel_positions_count_temp18=0\n  local\
    \ vowel_positions_count_temp19=0\n  local vowel_positions_count_temp20=0\n  local\
    \ vowel_positions_count_temp21=0\n  local vowel_positions_count_temp22=0\n  local\
    \ vowel_positions_count_temp23=0\n  local vowel_positions_count_temp24=0\n  local\
    \ vowel_positions_count_temp25=0\n  local vowel_positions_count_temp26=0\n  local\
    \ vowel_positions_count_temp27=0\n  local vowel_positions_count_temp28=0\n  local\
    \ vowel_positions_count_temp29=0\n  local vowel_positions_count_temp30=0\n  local\
    \ vowel_positions_count_temp31=0\n  local vowel_positions_count_temp32=0\n  local\
    \ vowel_positions_count_temp33=0\n  local vowel_positions_count_temp34=0\n  local\
    \ vowel_positions_count_temp35=0\n  local vowel_positions_count_temp36=0\n  local\
    \ vowel_positions_count_temp37=0\n  local vowel_positions_count_temp38=0\n  local\
    \ vowel_positions_count_temp39=0\n  local vowel_positions_count_temp40=0\n  local\
    \ vowel_positions_count_temp41=0\n  local vowel_positions_count_temp42=0\n\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_index=$((${#word} - 1));\n  local\
    \ vowel_found=\"\";\n  local vowel_found_index=0;\n  local vowel_found_index2=0;\n\
    \  local vowel_found_index3=0;\n  local vowel_found_index4=0;\n  local vowel_found_index5=0;\n\
    \  local vowel_found_index6=0;\n  local vowel_found_index7=0;\n  local vowel_found_index8=0;\n\
    \  local vowel_found_index9=0;\n  local vowel_found_index10=0;\n  local vowel_found_index11=0;\n\
    \  local vowel_found_index12=0;\n  local vowel_found_index13=0;\n  local vowel_found_index14=0;\n\
    \  local vowel_found_index15=0;\n  local vowel_found_index16=0;\n  local vowel_found_index17=0;\n\
    \  local vowel_found_index18=0;\n  local vowel_found_index19=0;\n  local vowel_found_index20=0;\n\
    \  local vowel_found_index21=0;\n  local vowel_found_index22=0;\n  local vowel_found_index23=0;\n\
    \  local vowel_found_index24=0;\n  local vowel_found_index25=0;\n  local vowel_found_index26=0;\n\
    \  local vowel_found_index27=0;\n  local vowel_found_index28=0;\n  local vowel_found_index29=0;\n\
    \  local vowel_found_index30=0;\n  local vowel_found_index31=0;\n  local vowel_found_index32=0;\n\
    \  local vowel_found_index33=0;\n  local vowel_found_index34=0;\n  local vowel_found_index35=0;\n\
    \  local vowel_found_index36=0;\n  local vowel_found_index37=0;\n  local vowel_found_index38=0;\n\
    \  local vowel_found_index39=0;\n  local vowel_found_index40=0;\n  local vowel_found_index41=0;\n\
    \  local vowel_found_index42=0;\n  local vowel_found_index43=0;\n  local vowel_found_index44=0;\n\
    \  local vowel_found_index45=0;\n  local vowel_found_index46=0;\n  local vowel_found_index47=0;\n\
    \  local vowel_found_index48=0;\n  local vowel_found_index49=0;\n  local vowel_found_index50=0;\n\
    \  local vowel_found_index51=0;\n  local vowel_found_index52=0;\n  local vowel_found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -l);\n    local vowels_array=($vowels);\n\
    \    local vowels_array_count=${#vowels_array[@]};\n    local vowels_array_index=0;\n\
    \    local vowels_array_element=${vowels_array[$vowels_array_index]};\n    local\
    \ vowels_array_elements_count=${#vowels_array_element[@]};\n    local vowels_array_elements_index=0;\n\
    \    local vowels_array_elements_element=${vowels_array_element[$vowels_array_elements_index]};\n\
    \    local vowels_array_elements_elements_count=${#vowels_array_elements_element[@]};\n\
    \    local vowels_array_elements_elements_index=0;\n    local vowels_array_elements_elements_element=${vowels_array_elements_element[$vowels_array_elements_elements_index]};\n\
    \    local vowels_array_elements_elements_elements_count=${#vowels_array_elements_elements_element[@]};\n\
    \    local vowels_array_elements_elements_elements_index=0;\n    local vowels_array_elements_elements_elements_element=${vowels_array_elements_elements_element[$vowels_array_elements_elements_elements_index]};\n\
    \    local vowels_array_elements_elements_elements_elements_count=${#vowels_array_elements_elements_elements_element[@]};\n\
    \    local vowels_array_elements_elements_elements_elements_index=0;\n    local\
    \ vowels_array_elements_elements_elements_elements_element=${vowels_array_elements_elements_elements_element[$vowels_array_elements_elements_elements_elements_index]};\n\
    \    local vowels_array_elements_elements_elements_elements_elements_count=${#vowels_array_elements_elements_elements_elements_element[@]};\n\
    \    local vowels_array_elements_elements_elements_elements_elements_index=0;\n\
    \    local vowels_array_elements_elements_elements_elements_elements_element=${vowels_array_elements_elements_elements_elements_element[$vowels_array_elements_elements_elements_elements_elements_index]};\n\
    \    local vowels_array_elements_elements_elements_elements_elements_elements_count=${#vowels_array_elements_elements_elements_elements_elements_element[@]};\n\
    \    local vowels_array_elements_elements_elements_elements_elements_elements_index=0;\n\
    \    local vowels_array_elements_elements_elements_elements_element\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local vowels_count=${#vowels};\n  local vowels_str=$(echo $vowels\
    \ | tr ' ' '\\n');\n  local vowels_arr=($vowels_str);\n  local vowels_arr_count=${#vowels_arr[@]};\n\
    \  local vowels_arr_str=$(echo ${vowels_arr[@]} | tr ' ' '\\n');\n  local vowels_arr_arr_count=${#vowels_arr_str[@]};\n\
    \  local vowels_arr_arr_str=$(echo ${vowels_arr_str[@]} | tr ' ' '\\n');\n  local\
    \ vowels_arr_arr_arr_count=${#vowels_arr_arr_str[@]};\n  local vowels_arr_arr_arr_str=$(echo\
    \ ${vowels_arr_arr_str[@]} | tr ' ' '\\n');\n  local vowels_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_str[@]};\n\
    \  local vowels_arr_arr_arr_arr_str=$(echo ${vowels_arr_arr_arr_str[@]} | tr '\
    \ ' '\\n');\n  local vowels_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_str[@]};\n\
    \  local vowels_arr_arr_arr_arr_arr_str=$(echo ${vowels_arr_arr_arr_arr_str[@]}\
    \ | tr ' ' '\\n');\n  local vowels_arr_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_arr_str[@]};\n\
    \  local vowels_arr_arr_arr_arr_arr_arr_str=$(echo ${vowels_arr_arr_arr_arr_arr_str[@]}\
    \ | tr ' ' '\\n');\n  local vowels_arr_arr_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_arr_arr_str[@]};\n\
    \  local vowels_arr_arr_arr_arr_arr_arr_arr_str=$(echo ${vowels_arr_arr_arr_arr_arr_arr_arr_str[@]}\
    \ | tr ' ' '\\n');\n  local vowels_arr_arr_arr_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_arr_arr_arr_str[@]};\n\
    \  local vowels_arr_arr_arr_arr_arr_arr_arr_arr_str=$(echo ${vowels_arr_arr_arr_arr_arr_arr_arr_str[@]}\
    \ | tr ' ' '\\n');\n  local vowels_arr_arr_arr_arr_arr_arr_arr_arr_arr_count=${#vowels_arr_arr_arr_arr_arr_arr_arr_arr_str[@]};\n\
    \  local vowels_arr_arr_arr_arr_arr_arr_arr_arr_arr_str=$(echo ${vowels_arr_arr_arr_arr_arr_arr_arr_arr_arr_str[@\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfr2qwbd8.sh: line 40: unexpected EOF while looking for matching
    `)''

    /tmp/tmpfr2qwbd8.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_found_index=0;\n\
    \  local vowel_found_index2=0;\n  local vowel_found_index3=1;\n  local vowel_found_index4=2;\n\
    \  local vowel_found_index5=3;\n  local vowel_found_index6=4;\n  local vowel_found_index7=5;\n\
    \  local vowel_found_index8=6;\n  local vowel_found_index9=7;\n  local vowel_found_index10=8;\n\
    \  local vowel_found_index11=9;\n  local vowel_found_index12=10;\n  local vowel_found_index13=11;\n\
    \  local vowel_found_index14=12;\n  local vowel_found_index15=13;\n  local vowel_found_index16=14;\n\
    \  local vowel_found_index17=15;\n  local vowel_found_index18=16;\n  local vowel_found_index19=17;\n\
    \  local vowel_found_index20=18;\n  local vowel_found_index21=19;\n  local vowel_found_index22=20;\n\
    \  local vowel_found_index23=21;\n  local vowel_found_index24=22;\n  local vowel_found_index25=23;\n\
    \  local vowel_found_index26=24;\n  local vowel_found_index27=25;\n  local vowel_found_index28=26;\n\
    \  local vowel_found_index29=27;\n  local vowel_found_index30=28;\n  local vowel_found_index31=29;\n\
    \  local vowel_found_index32=30;\n  local vowel_found_index33=31;\n  local vowel_found_index34=32;\n\
    \  local vowel_found_index35=33;\n  local vowel_found_index36=34;\n  local vowel_found_index37=35;\n\
    \  local vowel_found_index38=36;\n  local vowel_found_index39=37;\n  local vowel_found_index40=38;\n\
    \  local vowel_found_index41=39;\n  local vowel_found_index42=40;\n  local vowel_found_index43=41;\n\
    \  local vowel_found_index44=42;\n  local vowel_found_index45=43;\n  local vowel_found_index46=44;\n\
    \  local vowel_found_index47\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel\n    local vowel_index\n    local\
    \ vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n   \
    \ local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local vowel_found_index60\n    local \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_position_count=0;\n  local vowel_position_index=0;\n  local\
    \ vowel_position_index2=0;\n  local vowel_position_index3=1;\n  local vowel_position_index4=2;\n\
    \  local vowel_position_index5=3;\n  local vowel_position_index6=4;\n  local vowel_position_index7=5;\n\
    \  local vowel_position_index8=6;\n  local vowel_position_index9=7;\n  local vowel_position_index10=8;\n\
    \  local vowel_position_index11=9;\n  local vowel_position_index12=10;\n  local\
    \ vowel_position_index13=11;\n  local vowel_position_index14=12;\n  local vowel_position_index15=13;\n\
    \  local vowel_position_index16=14;\n  local vowel_position_index17=15;\n  local\
    \ vowel_position_index18=16;\n  local vowel_position_index19=17;\n  local vowel_position_index20=18;\n\
    \  local vowel_position_index21=19;\n  local vowel_position_index22=20;\n  local\
    \ vowel_position_index23=21;\n  local vowel_position_index24=22;\n  local vowel_position_index25=23;\n\
    \  local vowel_position_index26=24;\n  local vowel_position_index27=25;\n  local\
    \ vowel_position_index28=26;\n  local vowel_position_index29=27;\n  local vowel_position_index30=28;\n\
    \  local vowel_position_index31=29;\n  local vowel_position_index32=30;\n  local\
    \ vowel_position_index33=31;\n  local vowel_position_index34=32;\n  local vowel_position_index35=33;\n\
    \  local vowel_position_index36=34;\n  local vowel_position_index37=35;\n  local\
    \ vowel_position_index38=36;\n  local vowel_position_index39=37;\n  local vowel_position_index40=38;\n\
    \  local vowel_position_index41=39;\n  local vowel_position_index42=40;\n  local\
    \ vowel_position_index43=41;\n  local vowel_position_index44=42;\n  local vowel_position_index45=43;\n\
    \  local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -l);\n    local vowels_count=$(echo\
    \ $vowels | cut -d \" \" -f1);\n    local vowels_count=$(echo $vowels | cut -d\
    \ \" \" -f2);\n    local vowels_count=$(echo $vowels | cut -d \" \" -f3);\n  \
    \  local vowels_count=$(echo $vowels | cut -d \" \" -f4);\n    local vowels_count=$(echo\
    \ $vowels | cut -d \" \" -f5);\n    local vowels_count=$(echo $vowels | cut -d\
    \ \" \" -f6);\n    local vowels_count=$(echo $vowels | cut -d \" \" -f7);\n  \
    \  local vowels_count=$(echo $vowels | cut -d \" \" -f8);\n    local vowels_count=$(echo\
    \ $vowels | cut -d \" \" -f9);\n    local vowels_count=$(echo $vowels | cut -d\
    \ \" \" -f10);\n    local vowels_count=$(echo $vowels | cut -d \" \" -f11);\n\
    \    local vowels_count=$(echo $vowels | cut -d \" \" -f12);\n    local vowels_count=$(echo\
    \ $vowels | cut -d \" \" -f13);\n    local vowels_count=$(echo $vowels | cut -d\
    \ \" \" -f14);\n    local vowels_count=$(echo $vowels | cut -d \" \" -f15);\n\
    \    local vowels_count=$(echo $vowels | cut -d \" \" -f16);\n    local vowels_count=$(echo\
    \ $vowels | cut -d \" \" -f17);\n    local vowels_count=$(echo $vowels | cut -d\
    \ \" \" -f18);\n    local vowels_count=$(echo $vowels | cut -d \" \" -f19);\n\
    \    local vowels_count=$(echo $vowels | cut -d \" \" -f20);\n    local vowels_count=$(echo\
    \ $vowels | cut -d \" \" -f21);\n    local vowels_count=$(echo $vowels | cut -d\
    \ \" \" -f22);\n    local vowels_count=$(echo $vowels | cut -d \" \" -f23);\n\
    \    local vowels_count=$(echo $vowels | cut -d \" \" -f24);\n    local vowels_count=$(echo\
    \ $vowels | cut -d \" \" -f25);\n    local vowels_count=$(echo $vowels | cut -d\
    \ \" \" -f26);\n    local vowels_count=$(echo $vowels | cut -d \" \" -f27);\n\
    \    local vowels_count=$(echo $vowels | cut -d \" \" -f28);\n    local vowels_count=$(echo\
    \ $vowels | cut -d \" \" -f29);\n    local vowels_count=$(echo $vowels | cut -d\
    \ \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpggeir68p.sh: line 50: unexpected EOF while looking for matching
    `)''

    /tmp/tmpggeir68p.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local word=$1\n    local vowel\n    local vowel_count\n   \
    \ local vowel_found\n    local vowel_found_index\n    local vowel_index\n    local\
    \ vowel_length\n    local vowel_length_index\n    local vowel_length_count\n \
    \   local vowel_length_index\n    local vowel_length_count\n    local vowel_length\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_index\n    local vowel_length_count\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_index\n    local vowel_length_count\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_index\n    local vowel_length_count\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_index\n    local vowel_length_count\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_index\n    local vowel_length_count\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_index\n    local vowel_length_count\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_index\n    local vowel_length_count\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_index\n    local vowel_length_count\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_index\n    local vowel_length_count\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-1}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj2bhsm1a.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\"\n  local word=$1\n  local vowel_count=0\n  local vowel_index=0\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \  local vowel_found=\"\"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_string=${vowels//,/\
    \ };\n    local vowels_string_count=${#vowels_string};\n    local vowels_string_index=$((${#1}\
    \ - 1));\n    local vowels_string_index=$((${vowels_string_index} - 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1));\n    local vowels_string_index=$((${vowels_string_index} + 1));\n   \
    \ local vowels_string_index=$((${vowels_string_index} + 1));\n    local vowels_string_index=$((\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjora1fr2.sh: line 50: unexpected EOF while looking for matching
    `)''

    /tmp/tmpjora1fr2.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel_count=0\n    local vowel_found=\"\
    \"\n    local vowel_position=0\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local conson\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=0;\n\
    \    local vowel_positions=0;\n    local vowel_founds=0;\n    local vowel_founds_count=0;\n\
    \    local vowel_founds_position=0;\n    local vowel_founds_positions=0;\n   \
    \ local vowel_founds_positions_count=0;\n    local vowel_founds_positions_position=0;\n\
    \    local vowel_founds_positions_positions=0;\n    local vowel_founds_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_position=0;\n    local vowel_founds_positions_positions_positions=0;\n\
    \    local vowel_founds_positions_positions_positions_count=0;\n    local vowel_founds_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions=0;\n    local\
    \ vowel_founds_positions_positions_positions_positions_count=0;\n    local vowel_founds_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_positions=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_positions=0;\n\
    \    local vowel_founds_positions_positions_positions_position\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found_index3=0\n    local vowel_found_index4=0\n    local vowel_found_index5=0\n\
    \    local vowel_found_index6=0\n    local vowel_found_index7=0\n    local vowel_found_index8=0\n\
    \    local vowel_found_index9=0\n    local vowel_found_index10=0\n    local vowel_found_index11=0\n\
    \    local vowel_found_index12=0\n    local vowel_found_index13=0\n    local vowel_found_index14=0\n\
    \    local vowel_found_index15=0\n    local vowel_found_index16=0\n    local vowel_found_index17=0\n\
    \    local vowel_found_index18=0\n    local vowel_found_index19=0\n    local vowel_found_index20=0\n\
    \    local vowel_found_index21=0\n    local vowel_found_index22=0\n    local vowel_found_index23=0\n\
    \    local vowel_found_index24=0\n    local vowel_found_index25=0\n    local vowel_found_index26=0\n\
    \    local vowel_found_index27=0\n    local vowel_found_index28=0\n    local vowel_found_index29=0\n\
    \    local vowel_found_index30=0\n    local vowel_found_index31=0\n    local vowel_found_index32=0\n\
    \    local vowel_found_index33=0\n    local vowel_found_index34=0\n    local vowel_found_index35=0\n\
    \    local vowel_found_index36=0\n    local vowel_found_index37=0\n    local vowel_found_index38=0\n\
    \    local vowel_found_index39=0\n    local vowel_found_index40=0\n    local vowel_found_index41=0\n\
    \    local vowel_found_index42=0\n    local vowel_found_index43=0\n    local vowel_found_index44=0\n\
    \    local vowel_found_index45=0\n    local vowel_found_index46=0\n    local vowel_found_index47=0\n\
    \    local vowel_found_index48=0\n    local vowel_found_index49=0\n    local vowel_found_index50=0\n\
    \    local vowel_found_index51=0\n    local vowel_found_index52=0\n    local vowel_found_index53=0\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local\
    \ vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found_index3=0\n    local vowel_found_index4=0\n    local vowel_found_index5=0\n\
    \    local vowel_found_index6=0\n    local vowel_found_index7=0\n    local vowel_found_index8=0\n\
    \    local vowel_found_index9=0\n    local vowel_found_index10=0\n    local vowel_found_index11=0\n\
    \    local vowel_found_index12=0\n    local vowel_found_index13=0\n    local vowel_found_index14=0\n\
    \    local vowel_found_index15=0\n    local vowel_found_index16=0\n    local vowel_found_index17=0\n\
    \    local vowel_found_index18=0\n    local vowel_found_index19=0\n    local vowel_found_index20=0\n\
    \    local vowel_found_index21=0\n    local vowel_found_index22=0\n    local vowel_found_index23=0\n\
    \    local vowel_found_index24=0\n    local vowel_found_index25=0\n    local vowel_found_index26=0\n\
    \    local vowel_found_index27=0\n    local vowel_found_index28=0\n    local vowel_found_index29=0\n\
    \    local vowel_found_index30=0\n    local vowel_found_index31=0\n    local vowel_found_index32=0\n\
    \    local vowel_found_index33=0\n    local vowel_found_index34=0\n    local vowel_found_index35=0\n\
    \    local vowel_found_index36=0\n    local vowel_found_index37=0\n    local vowel_found_index38=0\n\
    \    local vowel_found_index39=0\n    local vowel_found_index40=0\n    local vowel_found_index41=0\n\
    \    local vowel_found_index42=0\n    local vowel_found_index43=0\n    local vowel_found_index44=0\n\
    \    local vowel_found_index45=0\n    local vowel_found_index46=0\n    local vowel_found_index47=0\n\
    \    local vowel_found_index48=0\n    local vowel_found_index49=0\n    local vowel_found_index50=0\n\
    \    local vowel_found_index51=0\n    local vowel_found_index52=0\n    local vowel_found_index\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -l);\n    local vowels_count_2=$(echo\
    \ $vowels | wc -l | awk '{print $1}');\n    local vowels_count_3=$(echo $vowels\
    \ | wc -l | awk '{print $2}');\n    local vowels_count_4=$(echo $vowels | wc -l\
    \ | awk '{print $3}');\n    local vowels_count_5=$(echo $vowels | wc -l | awk\
    \ '{print $4}');\n    local vowels_count_6=$(echo $vowels | wc -l | awk '{print\
    \ $5}');\n    local vowels_count_7=$(echo $vowels | wc -l | awk '{print $6}');\n\
    \    local vowels_count_8=$(echo $vowels | wc -l | awk '{print $7}');\n    local\
    \ vowels_count_9=$(echo $vowels | wc -l | awk '{print $8}');\n    local vowels_count_10=$(echo\
    \ $vowels | wc -l | awk '{print $9}');\n    local vowels_count_11=$(echo $vowels\
    \ | wc -l | awk '{print $10}');\n    local vowels_count_12=$(echo $vowels | wc\
    \ -l | awk '{print $11}');\n    local vowels_count_13=$(echo $vowels | wc -l |\
    \ awk '{print $12}');\n    local vowels_count_14=$(echo $vowels | wc -l | awk\
    \ '{print $13}');\n    local vowels_count_15=$(echo $vowels | wc -l | awk '{print\
    \ $14}');\n    local vowels_count_16=$(echo $vowels | wc -l | awk '{print $15}');\n\
    \    local vowels_count_17=$(echo $vowels | wc -l | awk '{print $16}');\n    local\
    \ vowels_count_18=$(echo $vowels | wc -l | awk '{print $17}');\n    local vowels_count_19=$(echo\
    \ $vowels | wc -l | awk '{print $18}');\n    local vowels_count_20=$(echo $vowels\
    \ | wc -l | awk '{print $19}');\n    local vowels_count_21=$(echo $vowels | wc\
    \ -l | awk '{print $20}');\n    local vowels_count_22=$(echo $vowels | wc -l |\
    \ awk '{print $21}');\n    local vowels_count_23=$(\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx00ikwrd.sh: line 42: unexpected EOF while looking for matching
    `)''

    /tmp/tmpx00ikwrd.sh: line 67: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -l);\n    local vowels_count=$(echo\
    \ $vowels | wc -l | awk '{print $1}');\n    local vowels_count=$(echo $vowels\
    \ | wc -l | awk '{print $1}');\n    local vowels_count=$(echo $vowels | wc -l\
    \ | awk '{print $1}');\n    local vowels_count=$(echo $vowels | wc -l | awk '{print\
    \ $1}');\n    local vowels_count=$(echo $vowels | wc -l | awk '{print $1}');\n\
    \    local vowels_count=$(echo $vowels | wc -l | awk '{print $1}');\n    local\
    \ vowels_count=$(echo $vowels | wc -l | awk '{print $1}');\n    local vowels_count=$(echo\
    \ $vowels | wc -l | awk '{print $1}');\n    local vowels_count=$(echo $vowels\
    \ | wc -l | awk '{print $1}');\n    local vowels_count=$(echo $vowels | wc -l\
    \ | awk '{print $1}');\n    local vowels_count=$(echo $vowels | wc -l | awk '{print\
    \ $1}');\n    local vowels_count=$(echo $vowels | wc -l | awk '{print $1}');\n\
    \    local vowels_count=$(echo $vowels | wc -l | awk '{print $1}');\n    local\
    \ vowels_count=$(echo $vowels | wc -l | awk '{print $1}');\n    local vowels_count=$(echo\
    \ $vowels | wc -l | awk '{print $1}');\n    local vowels_count=$(echo $vowels\
    \ | wc -l | awk '{print $1}');\n    local vowels_count=$(echo $vowels | wc -l\
    \ | awk '{print $1}');\n    local vowels_count=$(echo $vowels | wc -l | awk '{print\
    \ $1}');\n    local vowels_count=$(echo $vowels | wc -l | awk '{print $1}');\n\
    \    local vowels_count=$(echo $vowels | wc -l | awk '{print $1}');\n    local\
    \ vowels_count=$(echo $vowels | wc -l | awk '{print $1}');\n    local vowels_count=$(echo\
    \ $vowels | wc -l | awk '{print $1}');\n    local vowels_count=$(echo $vowels\
    \ | wc -l | awk '{print $1}');\n    local vowel\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local vowels_count=${#vowels}\n    local vowels_str=\"\"\n\
    \    local vowels_str_count=0\n    local vowels_str_len=0\n    local vowels_str_len_count=0\n\
    \    local vowels_str_len_lt=0\n    local vowels_str_len_gt=0\n    local vowels_str_len_lt_count=0\n\
    \    local vowels_str_len_gt_count=0\n    local vowels_str_len_lt_lt=0\n    local\
    \ vowels_str_len_gt_lt=0\n    local vowels_str_len_lt_gt=0\n    local vowels_str_len_gt_gt=0\n\
    \    local vowels_str_len_lt_lt_count=0\n    local vowels_str_len_gt_lt_count=0\n\
    \    local vowels_str_len_lt_gt_count=0\n    local vowels_str_len_gt_gt_count=0\n\
    \    local vowels_str_len_lt_lt_lt=0\n    local vowels_str_len_gt_lt_lt=0\n  \
    \  local vowels_str_len_lt_gt_lt=0\n    local vowels_str_len_gt_gt_lt=0\n    local\
    \ vowels_str_len_lt_lt_gt=0\n    local vowels_str_len_gt_lt_gt=0\n    local vowels_str_len_lt_gt_gt=0\n\
    \    local vowels_str_len_gt_gt_gt=0\n    local vowels_str_len_lt_lt_lt_count=0\n\
    \    local vowels_str_len_gt_lt_lt_count=0\n    local vowels_str_len_lt_gt_lt_count=0\n\
    \    local vowels_str_len_gt_gt_lt_count=0\n    local vowels_str_len_lt_lt_gt_count=0\n\
    \    local vowels_str_len_gt_gt_lt_count=0\n    local vowels_str_len_lt_lt_lt_lt=0\n\
    \    local vowels_str_len_gt_lt_lt_lt=0\n    local vowels_str_len_lt_gt_lt_lt=0\n\
    \    local vowels_str_len_gt_gt_lt_lt=0\n    local vowels_str_len_lt_lt_gt_lt=0\n\
    \    local vowels_str_len_gt_gt_lt_lt=0\n    local vowels_str_len_lt_lt_lt_gt=0\n\
    \    local vowels_str_len_gt_lt_lt_gt=0\n    local vowels_str_len_lt_gt_gt_lt=0\n\
    \    local vowels_str_len_gt_gt_lt_gt=0\n    local vowels_str_len_lt_lt_lt_lt_count=0\n\
    \    local vowels_str_len_gt_lt_lt_lt_count=0\n    local vowels_str_len_lt_gt_lt_lt_count\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local string=\"$1\"\n    local vowel_found=\"\"\n    local\
    \ vowel_position=\"\"\n    local vowel_position_count=0\n    local vowel_position_index=0\n\
    \    local vowel_position_index2=0\n    local vowel_position_index3=0\n    local\
    \ vowel_position_index4=0\n    local vowel_position_index5=0\n    local vowel_position_index6=0\n\
    \    local vowel_position_index7=0\n    local vowel_position_index8=0\n    local\
    \ vowel_position_index9=0\n    local vowel_position_index10=0\n    local vowel_position_index11=0\n\
    \    local vowel_position_index12=0\n    local vowel_position_index13=0\n    local\
    \ vowel_position_index14=0\n    local vowel_position_index15=0\n    local vowel_position_index16=0\n\
    \    local vowel_position_index17=0\n    local vowel_position_index18=0\n    local\
    \ vowel_position_index19=0\n    local vowel_position_index20=0\n    local vowel_position_index21=0\n\
    \    local vowel_position_index22=0\n    local vowel_position_index23=0\n    local\
    \ vowel_position_index24=0\n    local vowel_position_index25=0\n    local vowel_position_index26=0\n\
    \    local vowel_position_index27=0\n    local vowel_position_index28=0\n    local\
    \ vowel_position_index29=0\n    local vowel_position_index30=0\n    local vowel_position_index31=0\n\
    \    local vowel_position_index32=0\n    local vowel_position_index33=0\n    local\
    \ vowel_position_index34=0\n    local vowel_position_index35=0\n    local vowel_position_index36=0\n\
    \    local vowel_position_index37=0\n    local vowel_position_index38=0\n    local\
    \ vowel_position_index39=0\n    local vowel_position_index40=0\n    local vowel_position_index41=0\n\
    \    local vowel_position_index42=0\n    local vowel_position_index43=0\n    local\
    \ vowel_position_index44=0\n    local vowel_position_index45=0\n    local vowel_position_index46=0\n\
    \    local vowel_position_index47=0\n    local vowel_position_index48=0\n    local\
    \ vowel_position_index49=0\n    local vowel_position_index50=0\n    local vowel_position_index51=0\n\
    \    local vowel_position_index52=0\n    local vowel_position\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_index=$((${#word} - 1));\n\
    \    local vowel_found=\"\";\n    local vowel_found_index=0;\n    local vowel_found_index2=0;\n\
    \    local vowel_found_index3=0;\n    local vowel_found_index4=0;\n    local vowel_found_index5=0;\n\
    \    local vowel_found_index6=0;\n    local vowel_found_index7=0;\n    local vowel_found_index8=0;\n\
    \    local vowel_found_index9=0;\n    local vowel_found_index10=0;\n    local\
    \ vowel_found_index11=0;\n    local vowel_found_index12=0;\n    local vowel_found_index13=0;\n\
    \    local vowel_found_index14=0;\n    local vowel_found_index15=0;\n    local\
    \ vowel_found_index16=0;\n    local vowel_found_index17=0;\n    local vowel_found_index18=0;\n\
    \    local vowel_found_index19=0;\n    local vowel_found_index20=0;\n    local\
    \ vowel_found_index21=0;\n    local vowel_found_index22=0;\n    local vowel_found_index23=0;\n\
    \    local vowel_found_index24=0;\n    local vowel_found_index25=0;\n    local\
    \ vowel_found_index26=0;\n    local vowel_found_index27=0;\n    local vowel_found_index28=0;\n\
    \    local vowel_found_index29=0;\n    local vowel_found_index30=0;\n    local\
    \ vowel_found_index31=0;\n    local vowel_found_index32=0;\n    local vowel_found_index33=0;\n\
    \    local vowel_found_index34=0;\n    local vowel_found_index35=0;\n    local\
    \ vowel_found_index36=0;\n    local vowel_found_index37=0;\n    local vowel_found_index38=0;\n\
    \    local vowel_found_index39=0;\n    local vowel_found_index40=0;\n    local\
    \ vowel_found_index41=0;\n    local vowel_found_index42=0;\n    local vowel_found_index43=0;\n\
    \    local vowel_found_index44=0;\n    local vowel_found_index45=0;\n    local\
    \ vowel_found_index46=0;\n    local vowel_found_index47=0;\n    local vowel_found_index48=0;\n\
    \    local vowel_found_index49=0;\n    local vowel_found_index50=0;\n    local\
    \ vowel_found_index51=0;\n    local vowel_found_index52=0;\n    local vowel_found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local vowels_count=${#vowels}\n    local vowels_string=${vowels:0:1}\n\
    \    local vowels_string_count=${#vowels_string}\n    local vowels_string_index=0\n\
    \    local vowels_string_index2=0\n    local vowels_string_index3=0\n    local\
    \ vowels_string_index4=0\n    local vowels_string_index5=0\n    local vowels_string_index6=0\n\
    \    local vowels_string_index7=0\n    local vowels_string_index8=0\n    local\
    \ vowels_string_index9=0\n    local vowels_string_index10=0\n    local vowels_string_index11=0\n\
    \    local vowels_string_index12=0\n    local vowels_string_index13=0\n    local\
    \ vowels_string_index14=0\n    local vowels_string_index15=0\n    local vowels_string_index16=0\n\
    \    local vowels_string_index17=0\n    local vowels_string_index18=0\n    local\
    \ vowels_string_index19=0\n    local vowels_string_index20=0\n    local vowels_string_index21=0\n\
    \    local vowels_string_index22=0\n    local vowels_string_index23=0\n    local\
    \ vowels_string_index24=0\n    local vowels_string_index25=0\n    local vowels_string_index26=0\n\
    \    local vowels_string_index27=0\n    local vowels_string_index28=0\n    local\
    \ vowels_string_index29=0\n    local vowels_string_index30=0\n    local vowels_string_index31=0\n\
    \    local vowels_string_index32=0\n    local vowels_string_index33=0\n    local\
    \ vowels_string_index34=0\n    local vowels_string_index35=0\n    local vowels_string_index36=0\n\
    \    local vowels_string_index37=0\n    local vowels_string_index38=0\n    local\
    \ vowels_string_index39=0\n    local vowels_string_index40=0\n    local vowels_string_index41=0\n\
    \    local vowels_string_index42=0\n    local vowels_string_index43=0\n    local\
    \ vowels_string_index44=0\n    local vowels_string_index45=0\n    local vowels_string_index46=0\n\
    \    local vowels_string_index47=0\n    local vowels_string_index48=0\n    local\
    \ vowels_string_index49=0\n    local vowels_string_index50=0\n    local vowels_string_index51=0\n\
    \    local vowels_string_index52=0\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local word=$1\n    local vowel_found=\"\"\n    local\
    \ vowel_index=0\n    local vowel_left=0\n    local vowel_right=0\n    local vowel_left_count=0\n\
    \    local vowel_right_count=0\n    local vowel_left_index=0\n    local vowel_right_index=0\n\
    \    local vowel_left_count2=0\n    local vowel_right_count2=0\n    local vowel_left_index2=0\n\
    \    local vowel_right_index2=0\n    local vowel_left_count3=0\n    local vowel_right_count3=0\n\
    \    local vowel_left_index3=0\n    local vowel_right_index3=0\n    local vowel_left_count4=0\n\
    \    local vowel_right_count4=0\n    local vowel_left_index4=0\n    local vowel_right_index4=0\n\
    \    local vowel_left_count5=0\n    local vowel_right_count5=0\n    local vowel_left_index5=0\n\
    \    local vowel_right_index5=0\n    local vowel_left_count6=0\n    local vowel_right_count6=0\n\
    \    local vowel_left_index6=0\n    local vowel_right_index6=0\n    local vowel_left_count7=0\n\
    \    local vowel_right_count7=0\n    local vowel_left_index7=0\n    local vowel_right_index7=0\n\
    \    local vowel_left_count8=0\n    local vowel_right_count8=0\n    local vowel_left_index8=0\n\
    \    local vowel_right_index8=0\n    local vowel_left_count9=0\n    local vowel_right_count9=0\n\
    \    local vowel_left_index9=0\n    local vowel_right_index9=0\n    local vowel_left_count10=0\n\
    \    local vowel_right_count10=0\n    local vowel_left_index10=0\n    local vowel_right_index10=0\n\
    \    local vowel_left_count11=0\n    local vowel_right_count11=0\n    local vowel_left_index11=0\n\
    \    local vowel_right_index11=0\n    local vowel_left_count12=0\n    local vowel_right_count12=0\n\
    \    local vowel_left_index12=0\n    local vowel_right_index12=0\n    local vowel_left_count13=0\n\
    \    local vowel_right_count13=0\n    local vowel_left_index13=0\n    local vowel_right_index\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n\
    \    local vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=0\n    local vowel_left=0\n    local vowel_right=0\n  \
    \  local vowel_found2=0\n    local vowel_left2=0\n    local vowel_right2=0\n \
    \   local vowel_found3=0\n    local vowel_left3=0\n    local vowel_right3=0\n\
    \    local vowel_found4=0\n    local vowel_left4=0\n    local vowel_right4=0\n\
    \    local vowel_found5=0\n    local vowel_left5=0\n    local vowel_right5=0\n\
    \    local vowel_found6=0\n    local vowel_left6=0\n    local vowel_right6=0\n\
    \    local vowel_found7=0\n    local vowel_left7=0\n    local vowel_right7=0\n\
    \    local vowel_found8=0\n    local vowel_left8=0\n    local vowel_right8=0\n\
    \    local vowel_found9=0\n    local vowel_left9=0\n    local vowel_right9=0\n\
    \    local vowel_found10=0\n    local vowel_left10=0\n    local vowel_right10=0\n\
    \    local vowel_found11=0\n    local vowel_left11=0\n    local vowel_right11=0\n\
    \    local vowel_found12=0\n    local vowel_left12=0\n    local vowel_right12=0\n\
    \    local vowel_found13=0\n    local vowel_left13=0\n    local vowel_right13=0\n\
    \    local vowel_found14=0\n    local vowel_left14=0\n    local vowel_right14=0\n\
    \    local vowel_found15=0\n    local vowel_left15=0\n    local vowel_right15=0\n\
    \    local vowel_found16=0\n    local vowel_left16=0\n    local vowel_right16=0\n\
    \    local vowel_found17=0\n    local vowel_left17=0\n    local vowel_right17=0\n\
    \    local vowel_found18=0\n    local vowel_left18=0\n    local vowel_right18=0\n\
    \    local vowel_found19=0\n    local vowel_left19=0\n    local vowel_right19=0\n\
    \    local vowel_found20=0\n    local vowel_left20=0\n    local vowel_right20=0\n\
    \    local vowel_found21=0\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo \"$vowels\" | wc -w)\n    local\
    \ vowels_count_2=$(echo \"$vowels\" | wc -w)\n    local vowels_count_3=$(echo\
    \ \"$vowels\" | wc -w)\n    local vowels_count_4=$(echo \"$vowels\" | wc -w)\n\
    \    local vowels_count_5=$(echo \"$vowels\" | wc -w)\n    local vowels_count_6=$(echo\
    \ \"$vowels\" | wc -w)\n    local vowels_count_7=$(echo \"$vowels\" | wc -w)\n\
    \    local vowels_count_8=$(echo \"$vowels\" | wc -w)\n    local vowels_count_9=$(echo\
    \ \"$vowels\" | wc -w)\n    local vowels_count_10=$(echo \"$vowels\" | wc -w)\n\
    \    local vowels_count_11=$(echo \"$vowels\" | wc -w)\n    local vowels_count_12=$(echo\
    \ \"$vowels\" | wc -w)\n    local vowels_count_13=$(echo \"$vowels\" | wc -w)\n\
    \    local vowels_count_14=$(echo \"$vowels\" | wc -w)\n    local vowels_count_15=$(echo\
    \ \"$vowels\" | wc -w)\n    local vowels_count_16=$(echo \"$vowels\" | wc -w)\n\
    \    local vowels_count_17=$(echo \"$vowels\" | wc -w)\n    local vowels_count_18=$(echo\
    \ \"$vowels\" | wc -w)\n    local vowels_count_19=$(echo \"$vowels\" | wc -w)\n\
    \    local vowels_count_20=$(echo \"$vowels\" | wc -w)\n    local vowels_count_21=$(echo\
    \ \"$vowels\" | wc -w)\n    local vowels_count_22=$(echo \"$vowels\" | wc -w)\n\
    \    local vowels_count_23=$(echo \"$vowels\" | wc -w)\n    local vowels_count_24=$(echo\
    \ \"$vowels\" | wc -w)\n    local vowels_count_25=$(echo \"$vowels\" | wc -w)\n\
    \    local vowels_count_26=$(echo \"$vowels\" | wc -w)\n    local vowels_count_27=$(echo\
    \ \"$vowels\" | wc -w)\n    local vowels_count_28=$(echo \"$vowels\" | wc -w)\n\
    \    local vowels_count_29=$(echo \"$vowels\" | wc -w)\n    local vowels_count_30=$(echo\
    \ \"\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_3fk4lxf.sh: line 70: unexpected EOF while looking for matching
    `"''

    /tmp/tmp_3fk4lxf.sh: line 74: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local vowel_count=0\n    local vowel_found=\"\"\n    local\
    \ word=$1\n    local vowel_position=0\n    local consonant_position=0\n    local\
    \ consonant_count=0\n    local consonant_found=\"\"\n    local consonant_found2=\"\
    \"\n    local consonant_found3=\"\"\n    local consonant_found4=\"\"\n    local\
    \ consonant_found5=\"\"\n    local consonant_found6=\"\"\n    local consonant_found7=\"\
    \"\n    local consonant_found8=\"\"\n    local consonant_found9=\"\"\n    local\
    \ consonant_found10=\"\"\n    local consonant_found11=\"\"\n    local consonant_found12=\"\
    \"\n    local consonant_found13=\"\"\n    local consonant_found14=\"\"\n    local\
    \ consonant_found15=\"\"\n    local consonant_found16=\"\"\n    local consonant_found17=\"\
    \"\n    local consonant_found18=\"\"\n    local consonant_found19=\"\"\n    local\
    \ consonant_found20=\"\"\n    local consonant_found21=\"\"\n    local consonant_found22=\"\
    \"\n    local consonant_found23=\"\"\n    local consonant_found24=\"\"\n    local\
    \ consonant_found25=\"\"\n    local consonant_found26=\"\"\n    local consonant_found27=\"\
    \"\n    local consonant_found28=\"\"\n    local consonant_found29=\"\"\n    local\
    \ consonant_found30=\"\"\n    local consonant_found31=\"\"\n    local consonant_found32=\"\
    \"\n    local consonant_found33=\"\"\n    local consonant_found34=\"\"\n    local\
    \ consonant_found35=\"\"\n    local consonant_found36=\"\"\n    local consonant_found37=\"\
    \"\n    local consonant_found38=\"\"\n    local consonant_found39=\"\"\n    local\
    \ consonant_found40=\"\"\n    local consonant_found41=\"\"\n    local consonant_found42=\"\
    \"\n    local consonant_found43=\"\"\n    local consonant_found44=\"\"\n    local\
    \ consonant_found45=\"\"\n    local consonant_found46=\"\"\n    local consonant_found47=\"\
    \"\n    local consonant_found48=\"\"\n    local consonant_found49=\"\"\n    local\
    \ consonant_found50=\"\"\n    local consonant_found51=\"\"\n    \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_string=${vowels//,/\
    \ };\n    local vowels_string_count=${#vowels_string};\n    local vowels_string_index=$((${#1}\
    \ - 1));\n    local vowels_string_index=$((${vowels_string_index} - 1));\n   \
    \ local vowels_string_length=$((${vowels_string_count} - 1));\n    local vowels_string_length=$((${vowels_string_length}\
    \ - 1));\n    local vowels_string_length=$((${vowels_string_length} - 1));\n \
    \   local vowels_string_length=$((${vowels_string_length} - 1));\n    local vowels_string_length=$((${vowels_string_length}\
    \ - 1));\n    local vowels_string_length=$((${vowels_string_length} - 1));\n \
    \   local vowels_string_length=$((${vowels_string_length} - 1));\n    local vowels_string_length=$((${vowels_string_length}\
    \ - 1));\n    local vowels_string_length=$((${vowels_string_length} - 1));\n \
    \   local vowels_string_length=$((${vowels_string_length} - 1));\n    local vowels_string_length=$((${vowels_string_length}\
    \ - 1));\n    local vowels_string_length=$((${vowels_string_length} - 1));\n \
    \   local vowels_string_length=$((${vowels_string_length} - 1));\n    local vowels_string_length=$((${vowels_string_length}\
    \ - 1));\n    local vowels_string_length=$((${vowels_string_length} - 1));\n \
    \   local vowels_string_length=$((${vowels_string_length} - 1));\n    local vowels_string_length=$((${vowels_string_length}\
    \ - 1));\n    local vowels_string_length=$((${vowels_string_length} - 1));\n \
    \   local vowels_string_length=$((${vowels_string_length} - 1));\n    local vowels_string_length=$((${vowels_string_length}\
    \ - 1));\n    local vowels_string_length=$((${vowels_string_length} - 1));\n \
    \   local vowels_string_length=$((${vowels_string_length} - 1));\n    local vowels_string_length=$((${vowels_string_length}\
    \ - 1));\n    local vowels_string_length=$((${vowels_string_length} - 1));\n \
    \   local vowels_string_length=$((${vowels_string_length} - 1));\n    local vowels_string_length=$((${vowels_string_length}\
    \ - 1));\n    local vowels_string_length=$((${vowels_string_length} - 1));\n \
    \   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels[@]}\n    local vowels_string=${vowels[$((\
    \ ${#1} % ${vowels_count} ))]}\n    local vowels_string_count=${#vowels_string}\n\
    \    local vowels_string_index=$(( ${#1} / ${vowels_string_count} ))\n    local\
    \ vowels_string_index=$(( ${vowels_string_index} + 1 ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} % ${vowels_count} ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ % ${vowels_count} ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index} % ${vowels_count}\
    \ ))\n    local vowels_string_index=$(( ${vowels_string_index} + 1 ))\n    local\
    \ vowels_string_index=$(( ${vowels_string_index} % ${vowels_count} ))\n    local\
    \ vowels_string_index=$(( ${vowels_string_index} + 1 ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} % ${vowels_count} ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ % ${vowels_count} ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index} % ${vowels_count}\
    \ ))\n    local vowels_string_index=$(( ${vowels_string_index} + 1 ))\n    local\
    \ vowels_string_index=$(( ${vowels_string_index} % ${vowels_count} ))\n    local\
    \ vowels_string_index=$(( ${vowels_string_index} + 1 ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} % ${vowels_count} ))\n    local vowels_string_index=$((\
    \ ${vowels_string_index} + 1 ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ % ${vowels_count} ))\n    local vowels_string_index=$(( ${vowels_string_index}\
    \ + 1 ))\n    local vowels_string_index\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_index=\"\
    \";\n    local vowel_position=\"\";\n    local vowel_position_index=\"\";\n  \
    \  local vowel_position_index2=\"\";\n    local vowel_position_index3=\"\";\n\
    \    local vowel_position_index4=\"\";\n    local vowel_position_index5=\"\";\n\
    \    local vowel_position_index6=\"\";\n    local vowel_position_index7=\"\";\n\
    \    local vowel_position_index8=\"\";\n    local vowel_position_index9=\"\";\n\
    \    local vowel_position_index10=\"\";\n    local vowel_position_index11=\"\"\
    ;\n    local vowel_position_index12=\"\";\n    local vowel_position_index13=\"\
    \";\n    local vowel_position_index14=\"\";\n    local vowel_position_index15=\"\
    \";\n    local vowel_position_index16=\"\";\n    local vowel_position_index17=\"\
    \";\n    local vowel_position_index18=\"\";\n    local vowel_position_index19=\"\
    \";\n    local vowel_position_index20=\"\";\n    local vowel_position_index21=\"\
    \";\n    local vowel_position_index22=\"\";\n    local vowel_position_index23=\"\
    \";\n    local vowel_position_index24=\"\";\n    local vowel_position_index25=\"\
    \";\n    local vowel_position_index26=\"\";\n    local vowel_position_index27=\"\
    \";\n    local vowel_position_index28=\"\";\n    local vowel_position_index29=\"\
    \";\n    local vowel_position_index30=\"\";\n    local vowel_position_index31=\"\
    \";\n    local vowel_position_index32=\"\";\n    local vowel_position_index33=\"\
    \";\n    local vowel_position_index34=\"\";\n    local vowel_position_index35=\"\
    \";\n    local vowel_position_index36=\"\";\n    local vowel_position_index37=\"\
    \";\n    local vowel_position_index38=\"\";\n    local vowel_position_index39=\"\
    \";\n    local vowel_position_index40=\"\";\n    local vowel_position_index41=\"\
    \";\n    local vowel_position_index42=\"\";\n    local vowel_position_index43=\"\
    \";\n    local vowel_position_index44=\"\";\n    local vowel_position_index45=\"\
    \";\n    local vowel_position_index46=\"\";\n    local vowel_position_index47=\"\
    \";\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowel_found=\"\"\n    local vowel_position=\"\
    \"\n    local vowel_position_count=0\n    local vowel_position_index=0\n    local\
    \ vowel_position_index2=0\n    local vowel_position_index3=0\n    local vowel_position_index4=0\n\
    \    local vowel_position_index5=0\n    local vowel_position_index6=0\n    local\
    \ vowel_position_index7=0\n    local vowel_position_index8=0\n    local vowel_position_index9=0\n\
    \    local vowel_position_index10=0\n    local vowel_position_index11=0\n    local\
    \ vowel_position_index12=0\n    local vowel_position_index13=0\n    local vowel_position_index14=0\n\
    \    local vowel_position_index15=0\n    local vowel_position_index16=0\n    local\
    \ vowel_position_index17=0\n    local vowel_position_index18=0\n    local vowel_position_index19=0\n\
    \    local vowel_position_index20=0\n    local vowel_position_index21=0\n    local\
    \ vowel_position_index22=0\n    local vowel_position_index23=0\n    local vowel_position_index24=0\n\
    \    local vowel_position_index25=0\n    local vowel_position_index26=0\n    local\
    \ vowel_position_index27=0\n    local vowel_position_index28=0\n    local vowel_position_index29=0\n\
    \    local vowel_position_index30=0\n    local vowel_position_index31=0\n    local\
    \ vowel_position_index32=0\n    local vowel_position_index33=0\n    local vowel_position_index34=0\n\
    \    local vowel_position_index35=0\n    local vowel_position_index36=0\n    local\
    \ vowel_position_index37=0\n    local vowel_position_index38=0\n    local vowel_position_index39=0\n\
    \    local vowel_position_index40=0\n    local vowel_position_index41=0\n    local\
    \ vowel_position_index42=0\n    local vowel_position_index43=0\n    local vowel_position_index44=0\n\
    \    local vowel_position_index45=0\n    local vowel_position_index46=0\n    local\
    \ vowel_position_index47=0\n    local vowel_position_index48=0\n    local vowel_position_index49=0\n\
    \    local vowel_position_index50=0\n    local vowel_position_index51=0\n    local\
    \ vowel_position_index52=0\n    local vowel_position\n}\n\ncandidate() {\n   \
    \ get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\"\
    ) = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\"\
    ) = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\"\
    ) = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\"\
    ) = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\"\
    ) = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_index=\"\
    \";\n    local vowel_position=\"\";\n    local vowel_position_index=\"\";\n  \
    \  local vowel_position_index2=\"\";\n    local vowel_position_index3=\"\";\n\
    \    local vowel_position_index4=\"\";\n    local vowel_position_index5=\"\";\n\
    \    local vowel_position_index6=\"\";\n    local vowel_position_index7=\"\";\n\
    \    local vowel_position_index8=\"\";\n    local vowel_position_index9=\"\";\n\
    \    local vowel_position_index10=\"\";\n    local vowel_position_index11=\"\"\
    ;\n    local vowel_position_index12=\"\";\n    local vowel_position_index13=\"\
    \";\n    local vowel_position_index14=\"\";\n    local vowel_position_index15=\"\
    \";\n    local vowel_position_index16=\"\";\n    local vowel_position_index17=\"\
    \";\n    local vowel_position_index18=\"\";\n    local vowel_position_index19=\"\
    \";\n    local vowel_position_index20=\"\";\n    local vowel_position_index21=\"\
    \";\n    local vowel_position_index22=\"\";\n    local vowel_position_index23=\"\
    \";\n    local vowel_position_index24=\"\";\n    local vowel_position_index25=\"\
    \";\n    local vowel_position_index26=\"\";\n    local vowel_position_index27=\"\
    \";\n    local vowel_position_index28=\"\";\n    local vowel_position_index29=\"\
    \";\n    local vowel_position_index30=\"\";\n    local vowel_position_index31=\"\
    \";\n    local vowel_position_index32=\"\";\n    local vowel_position_index33=\"\
    \";\n    local vowel_position_index34=\"\";\n    local vowel_position_index35=\"\
    \";\n    local vowel_position_index36=\"\";\n    local vowel_position_index37=\"\
    \";\n    local vowel_position_index38=\"\";\n    local vowel_position_index39=\"\
    \";\n    local vowel_position_index40=\"\";\n    local vowel_position_index41=\"\
    \";\n    local vowel_position_index42=\"\";\n    local vowel_position_index43=\"\
    \";\n    local vowel_position_index44=\"\";\n    local vowel_position_index45=\"\
    \";\n    local vowel_position_index46=\"\";\n    local vowel_position_index47=\"\
    \";\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local string=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=\"\
    \";\n    local vowel_found_index2=\"\";\n    local vowel_found_index3=\"\";\n\
    \    local vowel_found_index4=\"\";\n    local vowel_found_index5=\"\";\n    local\
    \ vowel_found_index6=\"\";\n    local vowel_found_index7=\"\";\n    local vowel_found_index8=\"\
    \";\n    local vowel_found_index9=\"\";\n    local vowel_found_index10=\"\";\n\
    \    local vowel_found_index11=\"\";\n    local vowel_found_index12=\"\";\n  \
    \  local vowel_found_index13=\"\";\n    local vowel_found_index14=\"\";\n    local\
    \ vowel_found_index15=\"\";\n    local vowel_found_index16=\"\";\n    local vowel_found_index17=\"\
    \";\n    local vowel_found_index18=\"\";\n    local vowel_found_index19=\"\";\n\
    \    local vowel_found_index20=\"\";\n    local vowel_found_index21=\"\";\n  \
    \  local vowel_found_index22=\"\";\n    local vowel_found_index23=\"\";\n    local\
    \ vowel_found_index24=\"\";\n    local vowel_found_index25=\"\";\n    local vowel_found_index26=\"\
    \";\n    local vowel_found_index27=\"\";\n    local vowel_found_index28=\"\";\n\
    \    local vowel_found_index29=\"\";\n    local vowel_found_index30=\"\";\n  \
    \  local vowel_found_index31=\"\";\n    local vowel_found_index32=\"\";\n    local\
    \ vowel_found_index33=\"\";\n    local vowel_found_index34=\"\";\n    local vowel_found_index35=\"\
    \";\n    local vowel_found_index36=\"\";\n    local vowel_found_index37=\"\";\n\
    \    local vowel_found_index38=\"\";\n    local vowel_found_index39=\"\";\n  \
    \  local vowel_found_index40=\"\";\n    local vowel_found_index41=\"\";\n    local\
    \ vowel_found_index42=\"\";\n    local vowel_found_index43=\"\";\n    local vowel_found_index44=\"\
    \";\n    local vowel_found_index45=\"\";\n    local vowel_found_index46=\"\";\n\
    \    local vowel_found_index47=\"\";\n    local vowel_found_index48=\"\";\n  \
    \  local vowel_found_index49\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local string=\"$1\"\n    local vowel_found=\"\"\n    local\
    \ vowel_found_index=0\n    local vowel_found_index2=0\n    local vowel_found_index3=0\n\
    \    local vowel_found_index4=0\n    local vowel_found_index5=0\n    local vowel_found_index6=0\n\
    \    local vowel_found_index7=0\n    local vowel_found_index8=0\n    local vowel_found_index9=0\n\
    \    local vowel_found_index10=0\n    local vowel_found_index11=0\n    local vowel_found_index12=0\n\
    \    local vowel_found_index13=0\n    local vowel_found_index14=0\n    local vowel_found_index15=0\n\
    \    local vowel_found_index16=0\n    local vowel_found_index17=0\n    local vowel_found_index18=0\n\
    \    local vowel_found_index19=0\n    local vowel_found_index20=0\n    local vowel_found_index21=0\n\
    \    local vowel_found_index22=0\n    local vowel_found_index23=0\n    local vowel_found_index24=0\n\
    \    local vowel_found_index25=0\n    local vowel_found_index26=0\n    local vowel_found_index27=0\n\
    \    local vowel_found_index28=0\n    local vowel_found_index29=0\n    local vowel_found_index30=0\n\
    \    local vowel_found_index31=0\n    local vowel_found_index32=0\n    local vowel_found_index33=0\n\
    \    local vowel_found_index34=0\n    local vowel_found_index35=0\n    local vowel_found_index36=0\n\
    \    local vowel_found_index37=0\n    local vowel_found_index38=0\n    local vowel_found_index39=0\n\
    \    local vowel_found_index40=0\n    local vowel_found_index41=0\n    local vowel_found_index42=0\n\
    \    local vowel_found_index43=0\n    local vowel_found_index44=0\n    local vowel_found_index45=0\n\
    \    local vowel_found_index46=0\n    local vowel_found_index47=0\n    local vowel_found_index48=0\n\
    \    local vowel_found_index49=0\n    local vowel_found_index50=0\n    local vowel_found_index51=0\n\
    \    local vowel_found_index52=0\n    local vowel_found_index53=0\n    local vowel_found_index54=0\n\
    \    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local vowels_count=${#vowels}\n    local vowels_str=\"\"\n\
    \    local vowels_str_len=${#vowels_str}\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$((${vowels_str_len}-1))\n    local vowels_str_len=$((${vowels_str_len}-1))\n\
    \    local vowels_str_len=$\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=0;\n\
    \    local vowel_index=0;\n    local vowel_found_indexes=0;\n    local vowel_found_indexes_length=0;\n\
    \    local vowel_found_indexes_length2=0;\n    local vowel_found_indexes_length3=0;\n\
    \    local vowel_found_indexes_length4=0;\n    local vowel_found_indexes_length5=0;\n\
    \    local vowel_found_indexes_length6=0;\n    local vowel_found_indexes_length7=0;\n\
    \    local vowel_found_indexes_length8=0;\n    local vowel_found_indexes_length9=0;\n\
    \    local vowel_found_indexes_length10=0;\n    local vowel_found_indexes_length11=0;\n\
    \    local vowel_found_indexes_length12=0;\n    local vowel_found_indexes_length13=0;\n\
    \    local vowel_found_indexes_length14=0;\n    local vowel_found_indexes_length15=0;\n\
    \    local vowel_found_indexes_length16=0;\n    local vowel_found_indexes_length17=0;\n\
    \    local vowel_found_indexes_length18=0;\n    local vowel_found_indexes_length19=0;\n\
    \    local vowel_found_indexes_length20=0;\n    local vowel_found_indexes_length21=0;\n\
    \    local vowel_found_indexes_length22=0;\n    local vowel_found_indexes_length23=0;\n\
    \    local vowel_found_indexes_length24=0;\n    local vowel_found_indexes_length25=0;\n\
    \    local vowel_found_indexes_length26=0;\n    local vowel_found_indexes_length27=0;\n\
    \    local vowel_found_indexes_length28=0;\n    local vowel_found_indexes_length29=0;\n\
    \    local vowel_found_indexes_length30=0;\n    local vowel_found_indexes_length31=0;\n\
    \    local vowel_found_indexes_length32=0;\n    local vowel_found_indexes_length33=0;\n\
    \    local vowel_found_indexes_length34=0;\n    local vowel_found_indexes_length35=0;\n\
    \    local vowel_found_indexes_length36=0;\n    local vowel_found_indexes_length37=0;\n\
    \    local vowel_found_indexes_length38=0;\n    local vowel_found_indexes_length39=0;\n\
    \    local vowel_found_indexes_length40=0;\n    local vowel_found_indexes_length41=0;\n\
    \    local vowel_found_indexes_length42=0;\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_positions=\"\";\n    local vowel_positions_count=0;\n   \
    \ local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_max=0;\n    local vowel_positions_count_min=0;\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n\
    \    local vowels=\"a e i o u\"\n    local vowels_count=${#vowels[@]}\n    local\
    \ vowels_count_from_right=${#string[@]} - ${#string[@]} - 1\n    local vowels_count_from_left=${#string[@]}\
    \ - ${#string[@]} + 1\n    local vowels_count_from_middle=${#string[@]} - ${#string[@]}\
    \ + 2\n    local vowels_count_from_middle2=${#string[@]} - ${#string[@]} + 3\n\
    \    local vowels_count_from_middle3=${#string[@]} - ${#string[@]} + 4\n    local\
    \ vowels_count_from_middle4=${#string[@]} - ${#string[@]} + 5\n    local vowels_count_from_middle5=${#string[@]}\
    \ - ${#string[@]} + 6\n    local vowels_count_from_middle6=${#string[@]} - ${#string[@]}\
    \ + 7\n    local vowels_count_from_middle7=${#string[@]} - ${#string[@]} + 8\n\
    \    local vowels_count_from_middle8=${#string[@]} - ${#string[@]} + 9\n    local\
    \ vowels_count_from_middle9=${#string[@]} - ${#string[@]} + 10\n    local vowels_count_from_middle10=${#string[@]}\
    \ - ${#string[@]} + 11\n    local vowels_count_from_middle11=${#string[@]} - ${#string[@]}\
    \ + 12\n    local vowels_count_from_middle12=${#string[@]} - ${#string[@]} + 13\n\
    \    local vowels_count_from_middle13=${#string[@]} - ${#string[@]} + 14\n   \
    \ local vowels_count_from_middle14=${#string[@]} - ${#string[@]} + 15\n    local\
    \ vowels_count_from_middle15=${#string[@]} - ${#string[@]} + 16\n    local vowels_count_from_middle16=${#string[@]}\
    \ - ${#string[@]} + 17\n    local vowels_count_from_middle17=${#string[@]} - ${#string[@]}\
    \ + 18\n    local vowels_count_from_middle18=${#string[@]} - ${#string[@]} + 19\n\
    \    local vowels_count_from_middle19=${#string[@]} - ${#string[@]} + 20\n   \
    \ local vowels_count_from_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpim5ypoud.sh: line 22: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 22: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 23: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 23: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 23: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 24: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 24: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 24: local: `2'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 25: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 25: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 25: local: `3'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 26: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 26: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 26: local: `4'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 27: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 27: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 27: local: `5'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 28: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 28: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 28: local: `6'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 29: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 29: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 29: local: `7'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 30: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 30: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 30: local: `8'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 31: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 31: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 31: local: `9'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 32: local: `1'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 32: local: `+'': not a valid identifier

    /tmp/tmpim5ypoud.sh: line 32: loc'
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u AE II OO UU\"\n  local vowels_count=$(echo $vowels | wc -w)\n  local\
    \ vowels_count_2=$(echo $vowels | wc -w)\n  local vowels_count_3=$(echo $vowels\
    \ | wc -w)\n  local vowels_count_4=$(echo $vowels | wc -w)\n  local vowels_count_5=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_6=$(echo $vowels | wc -w)\n  local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_8=$(echo $vowels | wc -w)\n  local vowels_count_9=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_10=$(echo $vowels | wc -w)\n  local vowels_count_11=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_12=$(echo $vowels | wc -w)\n  local vowels_count_13=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_14=$(echo $vowels | wc -w)\n  local vowels_count_15=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_16=$(echo $vowels | wc -w)\n  local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_18=$(echo $vowels | wc -w)\n  local vowels_count_19=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_20=$(echo $vowels | wc -w)\n  local vowels_count_21=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_22=$(echo $vowels | wc -w)\n  local vowels_count_23=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_24=$(echo $vowels | wc -w)\n  local vowels_count_25=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_26=$(echo $vowels | wc -w)\n  local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_28=$(echo $vowels | wc -w)\n  local vowels_count_29=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_30=$(echo $vowels | wc -w)\n  local vowels_count_31=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_32=$(echo $vowels | wc -w)\n  local vowels_count_33=$(echo\
    \ $vowels | wc -w)\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_found_index=\"\
    \";\n  local vowel_index=\"\";\n  local vowel_position=\"\";\n  local vowel_position_index=\"\
    \";\n  local vowel_position_index_last=\"\";\n  local vowel_position_index_first=\"\
    \";\n  local vowel_position_index_last_first=\"\";\n  local vowel_position_index_first_last=\"\
    \";\n  local vowel_position_index_first_last_first=\"\";\n  local vowel_position_index_first_last_first_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last=\"\";\n  local vowel_position_index_first_last_first_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last=\"\";\n\
    \  local vowel_position_index_first_last_first_last_last_last_last=\"\";\n  local\
    \ vowel_position_index_first_last_first_last_last_last_last_last=\"\";\n  local\
    \ vowel_position_index_first_last_first_last_last_last_last_last=\"\";\n  local\
    \ vowel_position_index_first_last_first_last_last_last_last_last_last=\"\";\n\
    \  local vowel_position_index_first_last_first_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_position_index_first_last_first_last_last_last_last_last_last_last_last_last_last_last=\"\
    \";\n  local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowel_count=0\n    local vowel_found=\"\"\n\
    \    local vowel_position=0\n    local vowel_position2=0\n    local vowel_position3=0\n\
    \    local vowel_position4=0\n    local vowel_position5=0\n    local vowel_position6=0\n\
    \    local vowel_position7=0\n    local vowel_position8=0\n    local vowel_position9=0\n\
    \    local vowel_position10=0\n    local vowel_position11=0\n    local vowel_position12=0\n\
    \    local vowel_position13=0\n    local vowel_position14=0\n    local vowel_position15=0\n\
    \    local vowel_position16=0\n    local vowel_position17=0\n    local vowel_position18=0\n\
    \    local vowel_position19=0\n    local vowel_position20=0\n    local vowel_position21=0\n\
    \    local vowel_position22=0\n    local vowel_position23=0\n    local vowel_position24=0\n\
    \    local vowel_position25=0\n    local vowel_position26=0\n    local vowel_position27=0\n\
    \    local vowel_position28=0\n    local vowel_position29=0\n    local vowel_position30=0\n\
    \    local vowel_position31=0\n    local vowel_position32=0\n    local vowel_position33=0\n\
    \    local vowel_position34=0\n    local vowel_position35=0\n    local vowel_position36=0\n\
    \    local vowel_position37=0\n    local vowel_position38=0\n    local vowel_position39=0\n\
    \    local vowel_position40=0\n    local vowel_position41=0\n    local vowel_position42=0\n\
    \    local vowel_position43=0\n    local vowel_position44=0\n    local vowel_position45=0\n\
    \    local vowel_position46=0\n    local vowel_position47=0\n    local vowel_position48=0\n\
    \    local vowel_position49=0\n    local vowel_position50=0\n    local vowel_position51=0\n\
    \    local vowel_position52=0\n    local vowel_position53=0\n    local vowel_position54=0\n\
    \    local vowel_position55=0\n    local vowel_position56=0\n    local vowel_position57=0\n\
    \    local vowel_position58=0\n    local vowel_position59=0\n    local vowel_position60=0\n\
    \    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n\
    \    local vowels=\"a e i o u\"\n    local vowels_count=${#vowels[@]}\n    local\
    \ vowel_found=false\n    local vowel_found_index=-1\n    local vowel_found_index2=-1\n\
    \    local vowel_found_index3=-1\n    local vowel_found_index4=-1\n    local vowel_found_index5=-1\n\
    \    local vowel_found_index6=-1\n    local vowel_found_index7=-1\n    local vowel_found_index8=-1\n\
    \    local vowel_found_index9=-1\n    local vowel_found_index10=-1\n    local\
    \ vowel_found_index11=-1\n    local vowel_found_index12=-1\n    local vowel_found_index13=-1\n\
    \    local vowel_found_index14=-1\n    local vowel_found_index15=-1\n    local\
    \ vowel_found_index16=-1\n    local vowel_found_index17=-1\n    local vowel_found_index18=-1\n\
    \    local vowel_found_index19=-1\n    local vowel_found_index20=-1\n    local\
    \ vowel_found_index21=-1\n    local vowel_found_index22=-1\n    local vowel_found_index23=-1\n\
    \    local vowel_found_index24=-1\n    local vowel_found_index25=-1\n    local\
    \ vowel_found_index26=-1\n    local vowel_found_index27=-1\n    local vowel_found_index28=-1\n\
    \    local vowel_found_index29=-1\n    local vowel_found_index30=-1\n    local\
    \ vowel_found_index31=-1\n    local vowel_found_index32=-1\n    local vowel_found_index33=-1\n\
    \    local vowel_found_index34=-1\n    local vowel_found_index35=-1\n    local\
    \ vowel_found_index36=-1\n    local vowel_found_index37=-1\n    local vowel_found_index38=-1\n\
    \    local vowel_found_index39=-1\n    local vowel_found_index40=-1\n    local\
    \ vowel_found_index41=-1\n    local vowel_found_index42=-1\n    local vowel_found_index43=-1\n\
    \    local vowel_found_index44=-1\n    local vowel_found_index45=-1\n    local\
    \ vowel_found_index46=-1\n    local vowel_found_index47=-1\n    local vowel_found_index48=-1\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_index;\n    local vowel_found;\n\
    \    local vowel_found_index;\n    local vowel_found_index2;\n    local vowel_found_index3;\n\
    \    local vowel_found_index4;\n    local vowel_found_index5;\n    local vowel_found_index6;\n\
    \    local vowel_found_index7;\n    local vowel_found_index8;\n    local vowel_found_index9;\n\
    \    local vowel_found_index10;\n    local vowel_found_index11;\n    local vowel_found_index12;\n\
    \    local vowel_found_index13;\n    local vowel_found_index14;\n    local vowel_found_index15;\n\
    \    local vowel_found_index16;\n    local vowel_found_index17;\n    local vowel_found_index18;\n\
    \    local vowel_found_index19;\n    local vowel_found_index20;\n    local vowel_found_index21;\n\
    \    local vowel_found_index22;\n    local vowel_found_index23;\n    local vowel_found_index24;\n\
    \    local vowel_found_index25;\n    local vowel_found_index26;\n    local vowel_found_index27;\n\
    \    local vowel_found_index28;\n    local vowel_found_index29;\n    local vowel_found_index30;\n\
    \    local vowel_found_index31;\n    local vowel_found_index32;\n    local vowel_found_index33;\n\
    \    local vowel_found_index34;\n    local vowel_found_index35;\n    local vowel_found_index36;\n\
    \    local vowel_found_index37;\n    local vowel_found_index38;\n    local vowel_found_index39;\n\
    \    local vowel_found_index40;\n    local vowel_found_index41;\n    local vowel_found_index42;\n\
    \    local vowel_found_index43;\n    local vowel_found_index44;\n    local vowel_found_index45;\n\
    \    local vowel_found_index46;\n    local vowel_found_index47;\n    local vowel_found_index48;\n\
    \    local vowel_found_index49;\n    local vowel_found_index50;\n    local vowel_found_index51;\n\
    \    local vowel_found_index52;\n    local vowel_found_index53;\n    local vowel_found_index54;\n\
    \    local vowel_found_index55;\n    local vowel_found\n}\n\ncandidate() {\n \
    \   get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_count_2=${#vowels};\n\
    \    local vowels_count_3=${#vowels};\n    local vowels_count_4=${#vowels};\n\
    \    local vowels_count_5=${#vowels};\n    local vowels_count_6=${#vowels};\n\
    \    local vowels_count_7=${#vowels};\n    local vowels_count_8=${#vowels};\n\
    \    local vowels_count_9=${#vowels};\n    local vowels_count_10=${#vowels};\n\
    \    local vowels_count_11=${#vowels};\n    local vowels_count_12=${#vowels};\n\
    \    local vowels_count_13=${#vowels};\n    local vowels_count_14=${#vowels};\n\
    \    local vowels_count_15=${#vowels};\n    local vowels_count_16=${#vowels};\n\
    \    local vowels_count_17=${#vowels};\n    local vowels_count_18=${#vowels};\n\
    \    local vowels_count_19=${#vowels};\n    local vowels_count_20=${#vowels};\n\
    \    local vowels_count_21=${#vowels};\n    local vowels_count_22=${#vowels};\n\
    \    local vowels_count_23=${#vowels};\n    local vowels_count_24=${#vowels};\n\
    \    local vowels_count_25=${#vowels};\n    local vowels_count_26=${#vowels};\n\
    \    local vowels_count_27=${#vowels};\n    local vowels_count_28=${#vowels};\n\
    \    local vowels_count_29=${#vowels};\n    local vowels_count_30=${#vowels};\n\
    \    local vowels_count_31=${#vowels};\n    local vowels_count_32=${#vowels};\n\
    \    local vowels_count_33=${#vowels};\n    local vowels_count_34=${#vowels};\n\
    \    local vowels_count_35=${#vowels};\n    local vowels_count_36=${#vowels};\n\
    \    local vowels_count_37=${#vowels};\n    local vowels_count_38=${#vowels};\n\
    \    local vowels_count_39=${#vowels};\n    local vowels_count_40=${#vowels};\n\
    \    local vowels_count_41=${#vowels};\n    local vowels_count_42=${#\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwctmyn6k.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowel_found=\"\"\
    ;\n    local vowel_found_index=0;\n    local vowel_found_indexes=\"\";\n    local\
    \ vowel_found_indexes_count=0;\n    local vowel_found_indexes_string=\"\";\n \
    \   local vowel_found_indexes_string_count=0;\n    local vowel_found_indexes_string_array=();\n\
    \    local vowel_found_indexes_string_array_count=0;\n    local vowel_found_indexes_string_array_string=\"\
    \";\n    local vowel_found_indexes_string_array_string_count=0;\n    local vowel_found_indexes_string_array_string_array=();\n\
    \    local vowel_found_indexes_string_array_string_array_count=0;\n    local vowel_found_indexes_string_array_string_array_string=\"\
    \";\n    local vowel_found_indexes_string_array_string_array_string_count=0;\n\
    \    local vowel_found_indexes_string_array_string_array_string_array=();\n  \
    \  local vowel_found_indexes_string_array_string_array_string_array_count=0;\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string=\"\
    \";\n    local vowel_found_indexes_string_array_string_array_string_array_string_count=0;\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string_array=();\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string_array_count=0;\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string_array_string=\"\
    \";\n    local vowel_found_indexes_string_array_string_array_string_array_string_array_string_count=0;\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string_array_string_array=();\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string_array_string_array_count=0;\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string_array_string_array_string=\"\
    \";\n    local vowel_found_indexes_string_array_string_array_string_array_string_array_string_array_string_count=0;\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string_array_string_array_string_array=();\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string_array_string_array_string_array_count=0;\n\
    \    local vowel_found_indexes_string_array_string_array_string_array_string_array_string_array_string_array_string=\"\
    \";\n    local vowel_found_indexes_string_array_string_array_string_array_string_array_string_array_string_array_string_count=0;\n\
    \    local vowel_found_indexes_string_array_string_array_\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local word=$1\n    local vowel_count=0\n    local\
    \ vowel_found=\"\"\n    local vowel_position=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count2=0\n    local vowel_position_count3=0\n    local\
    \ vowel_position_count4=0\n    local vowel_position_count5=0\n    local vowel_position_count6=0\n\
    \    local vowel_position_count7=0\n    local vowel_position_count8=0\n    local\
    \ vowel_position_count9=0\n    local vowel_position_count10=0\n    local vowel_position_count11=0\n\
    \    local vowel_position_count12=0\n    local vowel_position_count13=0\n    local\
    \ vowel_position_count14=0\n    local vowel_position_count15=0\n    local vowel_position_count16=0\n\
    \    local vowel_position_count17=0\n    local vowel_position_count18=0\n    local\
    \ vowel_position_count19=0\n    local vowel_position_count20=0\n    local vowel_position_count21=0\n\
    \    local vowel_position_count22=0\n    local vowel_position_count23=0\n    local\
    \ vowel_position_count24=0\n    local vowel_position_count25=0\n    local vowel_position_count26=0\n\
    \    local vowel_position_count27=0\n    local vowel_position_count28=0\n    local\
    \ vowel_position_count29=0\n    local vowel_position_count30=0\n    local vowel_position_count31=0\n\
    \    local vowel_position_count32=0\n    local vowel_position_count33=0\n    local\
    \ vowel_position_count34=0\n    local vowel_position_count35=0\n    local vowel_position_count36=0\n\
    \    local vowel_position_count37=0\n    local vowel_position_count38=0\n    local\
    \ vowel_position_count39=0\n    local vowel_position_count40=0\n    local vowel_position_count41=0\n\
    \    local vowel_position_count42=0\n    local vowel_position_count43=0\n    local\
    \ vowel_position_count44=0\n    local vowel_position_count45=0\n    local vowel_position_count46=0\n\
    \    local vowel_position_count47=0\n    local vowel_position_count48=0\n    local\
    \ vowel_position_count49=0\n    local vowel_position_count50=0\n    local vowel_position_count51=0\n\
    \    local vowel_position_count52=0\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowel_count=0\n    local vowel_found=\"\"\n\
    \    local vowel_position=0\n    local vowel_position2=0\n    local consonant_position=0\n\
    \    local consonant_position2=0\n    local consonant_position3=0\n    local consonant_position4=0\n\
    \    local consonant_position5=0\n    local consonant_position6=0\n    local consonant_position7=0\n\
    \    local consonant_position8=0\n    local consonant_position9=0\n    local consonant_position10=0\n\
    \    local consonant_position11=0\n    local consonant_position12=0\n    local\
    \ consonant_position13=0\n    local consonant_position14=0\n    local consonant_position15=0\n\
    \    local consonant_position16=0\n    local consonant_position17=0\n    local\
    \ consonant_position18=0\n    local consonant_position19=0\n    local consonant_position20=0\n\
    \    local consonant_position21=0\n    local consonant_position22=0\n    local\
    \ consonant_position23=0\n    local consonant_position24=0\n    local consonant_position25=0\n\
    \    local consonant_position26=0\n    local consonant_position27=0\n    local\
    \ consonant_position28=0\n    local consonant_position29=0\n    local consonant_position30=0\n\
    \    local consonant_position31=0\n    local consonant_position32=0\n    local\
    \ consonant_position33=0\n    local consonant_position34=0\n    local consonant_position35=0\n\
    \    local consonant_position36=0\n    local consonant_position37=0\n    local\
    \ consonant_position38=0\n    local consonant_position39=0\n    local consonant_position40=0\n\
    \    local consonant_position41=0\n    local consonant_position42=0\n    local\
    \ consonant_position43=0\n    local consonant_position44=0\n    local consonant_position45=0\n\
    \    local consonant_position46=0\n    local consonant_position47=0\n    local\
    \ consonant_position48=0\n    local consonant_position49=0\n    local consonant_position50=0\n\
    \    local consonant_position51=0\n    local consonant_position52=0\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_index=$((${#word}-1));\n \
    \   local vowel_found=\"\";\n    local vowel_position=0;\n    local vowel_positions=\"\
    \";\n    local vowel_founds=\"\";\n    local vowel_founds_count=0;\n    local\
    \ vowel_founds_positions=\"\";\n    local vowel_founds_positions_count=0;\n  \
    \  local vowel_founds_positions_position=0;\n    local vowel_founds_positions_positions=\"\
    \";\n    local vowel_founds_positions_positions_count=0;\n    local vowel_founds_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions=\"\";\n    local vowel_founds_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_position=0;\n    local vowel_founds_positions_positions_positions_positions=\"\
    \";\n    local vowel_founds_positions_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions=\"\"\
    ;\n    local vowel_founds_positions_positions_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions=\"\
    \";\n    local vowel_founds_positions_positions_positions_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions=\"\
    \";\n    local vowel_founds_positions_positions_positions_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions=\"\
    \";\n    local vowel_founds_positions_positions_positions_positions_positions_positions_count=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions_position=0;\n\
    \    local vowel_founds_positions_positions_positions_positions_positions_positions=\"\
    \";\n    local vowel_founds_positions_positions_positions_positions_positions_positions_count=0;\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local word=$1\n    local vowel\n    local vowel_count\n   \
    \ local vowel_index\n    local vowel_found\n    local vowel_found_index\n    local\
    \ vowel_found_index2\n    local vowel_found_index3\n    local vowel_found_index4\n\
    \    local vowel_found_index5\n    local vowel_found_index6\n    local vowel_found_index7\n\
    \    local vowel_found_index8\n    local vowel_found_index9\n    local vowel_found_index10\n\
    \    local vowel_found_index11\n    local vowel_found_index12\n    local vowel_found_index13\n\
    \    local vowel_found_index14\n    local vowel_found_index15\n    local vowel_found_index16\n\
    \    local vowel_found_index17\n    local vowel_found_index18\n    local vowel_found_index19\n\
    \    local vowel_found_index20\n    local vowel_found_index21\n    local vowel_found_index22\n\
    \    local vowel_found_index23\n    local vowel_found_index24\n    local vowel_found_index25\n\
    \    local vowel_found_index26\n    local vowel_found_index27\n    local vowel_found_index28\n\
    \    local vowel_found_index29\n    local vowel_found_index30\n    local vowel_found_index31\n\
    \    local vowel_found_index32\n    local vowel_found_index33\n    local vowel_found_index34\n\
    \    local vowel_found_index35\n    local vowel_found_index36\n    local vowel_found_index37\n\
    \    local vowel_found_index38\n    local vowel_found_index39\n    local vowel_found_index40\n\
    \    local vowel_found_index41\n    local vowel_found_index42\n    local vowel_found_index43\n\
    \    local vowel_found_index44\n    local vowel_found_index45\n    local vowel_found_index46\n\
    \    local vowel_found_index47\n    local vowel_found_index48\n    local vowel_found_index49\n\
    \    local vowel_found_index50\n    local vowel_found_index51\n    local vowel_found_index52\n\
    \    local vowel_found_index53\n    local vowel_found_index54\n    local vowel_found_index55\n\
    \    local vowel_found_index56\n    local vowel_found_index57\n    local vowel_found_index58\n\
    \    local vowel_found_index59\n    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n\
    \    local vowels=\"a e i o u y\";\n    local vowel_count=$(echo $vowels | wc\
    \ -w)\n    local vowel_count_2=$(echo $vowels | wc -w)\n    local vowel_count_3=$(echo\
    \ $vowels | wc -w)\n    local vowel_count_4=$(echo $vowels | wc -w)\n    local\
    \ vowel_count_5=$(echo $vowels | wc -w)\n    local vowel_count_6=$(echo $vowels\
    \ | wc -w)\n    local vowel_count_7=$(echo $vowels | wc -w)\n    local vowel_count_8=$(echo\
    \ $vowels | wc -w)\n    local vowel_count_9=$(echo $vowels | wc -w)\n    local\
    \ vowel_count_10=$(echo $vowels | wc -w)\n    local vowel_count_11=$(echo $vowels\
    \ | wc -w)\n    local vowel_count_12=$(echo $vowels | wc -w)\n    local vowel_count_13=$(echo\
    \ $vowels | wc -w)\n    local vowel_count_14=$(echo $vowels | wc -w)\n    local\
    \ vowel_count_15=$(echo $vowels | wc -w)\n    local vowel_count_16=$(echo $vowels\
    \ | wc -w)\n    local vowel_count_17=$(echo $vowels | wc -w)\n    local vowel_count_18=$(echo\
    \ $vowels | wc -w)\n    local vowel_count_19=$(echo $vowels | wc -w)\n    local\
    \ vowel_count_20=$(echo $vowels | wc -w)\n    local vowel_count_21=$(echo $vowels\
    \ | wc -w)\n    local vowel_count_22=$(echo $vowels | wc -w)\n    local vowel_count_23=$(echo\
    \ $vowels | wc -w)\n    local vowel_count_24=$(echo $vowels | wc -w)\n    local\
    \ vowel_count_25=$(echo $vowels | wc -w)\n    local vowel_count_26=$(echo $vowels\
    \ | wc -w)\n    local vowel_count_27=$(echo $vowels | wc -w)\n    local vowel_count_28=$(echo\
    \ $vowels | wc -w)\n    local vowel_count_29=$(echo $vowels | wc -w)\n    local\
    \ vowel_count_30=$(echo $vowels | wc -w)\n    local vowel_count_31=$(echo $vowels\
    \ | wc -w)\n    local vowel_count_32=$(echo $vowels | wc -w)\n    local vowel_count_33=$(echo\
    \ $vowels | wc -w)\n    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_string=${vowels//,/\
    \ };\n    local vowels_string_count=${#vowels_string};\n    local vowels_string_array=($vowels_string);\n\
    \    local vowels_string_array_count=${#vowels_string_array[@]};\n    local vowels_string_array_index=0;\n\
    \    local vowels_string_array_index_count=0;\n    local vowels_string_array_index_value=0;\n\
    \    local vowels_string_array_index_value_count=0;\n    local vowels_string_array_index_value_value=0;\n\
    \    local vowels_string_array_index_value_value_count=0;\n    local vowels_string_array_index_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_value_value_value_value=0;\n\
    \    local vowels_string_array_index_value_value_value_count=0;\n    local vowels_string_array_index_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=0;\n\
    \    local vowel_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \    local vowel_end_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \    local vowel_end_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \    local vowel_end_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \    local vowel_end_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \    local vowel_end_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \    local vowel_end_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \    local vowel_end_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \    local vowel_end_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \    local vowel_end_index=0;\n    local vowel_start_index=0;\n    local vowel_end_index=0;\n\
    \    local vowel_start_index=0;\n    local vowel_end_index=0;\n    local vowel_start_index=0;\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel=\"\";\n    local vowel_found=0;\n\
    \    local consonant=\"\";\n    local consonant_found=0;\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n    local consonant_count=$((${#word} -1));\n    local consonant_count=$((${#word}\
    \ -1));\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=\"\
    $1\"\n    local vowels=\"a e i o u\"\n    local vowels_count=0\n    local vowels_count_max=${#vowels}\n\
    \    local vowels_count_min=${#vowels}\n    local vowels_count_current=0\n   \
    \ local vowels_count_current_max=${#vowels}\n    local vowels_count_current_min=${#vowels}\n\
    \    local vowels_count_current_index=0\n    local vowels_count_current_index_max=${#vowels}\n\
    \    local vowels_count_current_index_min=${#vowels}\n    local vowels_count_current_index_current=0\n\
    \    local vowels_count_current_index_current_max=${#vowels}\n    local vowels_count_current_index_current_min=${#vowels}\n\
    \    local vowels_count_current_index_current_index=0\n    local vowels_count_current_index_current_index_max=${#vowels}\n\
    \    local vowels_count_current_index_current_index_min=${#vowels}\n    local\
    \ vowels_count_current_index_current_index_current=0\n    local vowels_count_current_index_current_index_current_max=${#vowels}\n\
    \    local vowels_count_current_index_current_index_current_min=${#vowels}\n \
    \   local vowels_count_current_index_current_index_current_index=0\n    local\
    \ vowels_count_current_index_current_index_current_index_max=${#vowels}\n    local\
    \ vowels_count_current_index_current_index_current_index_min=${#vowels}\n    local\
    \ vowels_count_current_index_current_index_current_index_current=0\n    local\
    \ vowels_count_current_index_current_index_current_index_current_max=${#vowels}\n\
    \    local vowels_count_current_index_current_index_current_index_current_min=${#vowels}\n\
    \    local vowels_count_current_index_current_index_current_index_current_index=0\n\
    \    local vowels_count_current_index_current_index_current_index_current_index_max=${#vowels}\n\
    \    local vowels_count_current_index_current_index_current_index_current_index_min=${#vowels}\n\
    \    local vowels_count_current_index_current_index_current_index_current_index_current=0\n\
    \    local vowels_count_current_index_current_index_current_index_current_index_max=${#vowels}\n\
    \    local vowels_count_current_index_current_index_current_index_current_index_min=${#vowels}\n\
    \    local vowels_count_current_index_current_index_current_index_current_index_current=0\n\
    \    local vowels_count_current_index_current_index_current_index_current_index_current_max=${#vowels}\n\
    \    local vowels_count_current_index_current_index_current_index_current_index_current_min=${#vowels}\n\
    \    local vowels_count_current_index_current_index_current_index_current_index_current_index=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_count_2=${#vowels};\n\
    \    local vowels_count_3=${#vowels};\n    local vowels_count_4=${#vowels};\n\
    \    local vowels_count_5=${#vowels};\n    local vowels_count_6=${#vowels};\n\
    \    local vowels_count_7=${#vowels};\n    local vowels_count_8=${#vowels};\n\
    \    local vowels_count_9=${#vowels};\n    local vowels_count_10=${#vowels};\n\
    \    local vowels_count_11=${#vowels};\n    local vowels_count_12=${#vowels};\n\
    \    local vowels_count_13=${#vowels};\n    local vowels_count_14=${#vowels};\n\
    \    local vowels_count_15=${#vowels};\n    local vowels_count_16=${#vowels};\n\
    \    local vowels_count_17=${#vowels};\n    local vowels_count_18=${#vowels};\n\
    \    local vowels_count_19=${#vowels};\n    local vowels_count_20=${#vowels};\n\
    \    local vowels_count_21=${#vowels};\n    local vowels_count_22=${#vowels};\n\
    \    local vowels_count_23=${#vowels};\n    local vowels_count_24=${#vowels};\n\
    \    local vowels_count_25=${#vowels};\n    local vowels_count_26=${#vowels};\n\
    \    local vowels_count_27=${#vowels};\n    local vowels_count_28=${#vowels};\n\
    \    local vowels_count_29=${#vowels};\n    local vowels_count_30=${#vowels};\n\
    \    local vowels_count_31=${#vowels};\n    local vowels_count_32=${#vowels};\n\
    \    local vowels_count_33=${#vowels};\n    local vowels_count_34=${#vowels};\n\
    \    local vowels_count_35=${#vowels};\n    local vowels_count_36=${#vowels};\n\
    \    local vowels_count_37=${#vowels};\n    local vowels_count_38=${#vowels};\n\
    \    local vowels_count_39=${#vowels};\n    local vowels_count_40=${#vowels};\n\
    \    local vowels_count_41=${#vowels};\n    local vowels_count_42=${#\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwctmyn6k.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels}\n    local vowel_found=\"\"\n \
    \   local vowel_position=0\n    local vowel_found_index=0\n    local vowel_position_index=0\n\
    \    local vowel_position_index2=0\n    local vowel_position_index3=0\n    local\
    \ vowel_position_index4=0\n    local vowel_position_index5=0\n    local vowel_position_index6=0\n\
    \    local vowel_position_index7=0\n    local vowel_position_index8=0\n    local\
    \ vowel_position_index9=0\n    local vowel_position_index10=0\n    local vowel_position_index11=0\n\
    \    local vowel_position_index12=0\n    local vowel_position_index13=0\n    local\
    \ vowel_position_index14=0\n    local vowel_position_index15=0\n    local vowel_position_index16=0\n\
    \    local vowel_position_index17=0\n    local vowel_position_index18=0\n    local\
    \ vowel_position_index19=0\n    local vowel_position_index20=0\n    local vowel_position_index21=0\n\
    \    local vowel_position_index22=0\n    local vowel_position_index23=0\n    local\
    \ vowel_position_index24=0\n    local vowel_position_index25=0\n    local vowel_position_index26=0\n\
    \    local vowel_position_index27=0\n    local vowel_position_index28=0\n    local\
    \ vowel_position_index29=0\n    local vowel_position_index30=0\n    local vowel_position_index31=0\n\
    \    local vowel_position_index32=0\n    local vowel_position_index33=0\n    local\
    \ vowel_position_index34=0\n    local vowel_position_index35=0\n    local vowel_position_index36=0\n\
    \    local vowel_position_index37=0\n    local vowel_position_index38=0\n    local\
    \ vowel_position_index39=0\n    local vowel_position_index40=0\n    local vowel_position_index41=0\n\
    \    local vowel_position_index42=0\n    local vowel_position_index43=0\n    local\
    \ vowel_position_index44=0\n    local vowel_position_index45=0\n    local vowel_position_index46=0\n\
    \    local vowel_position_index47=0\n    local vowel_position_index48=0\n    local\
    \ vowel_position_index49=0\n    local vowel_position_index50=0\n    local vowel_position_index51=0\n\
    \    local vowel_position_index52=0\n    local vowel\n}\n\ncandidate() {\n   \
    \ get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\"\
    ) = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\"\
    ) = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\"\
    ) = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\"\
    ) = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\"\
    ) = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_positions=\"\";\n    local vowel_positions_count=0;\n   \
    \ local vowel_positions_count_max=5;\n    local vowel_positions_count_min=0;\n\
    \    local vowel_positions_count_sum=0;\n    local vowel_positions_count_count_max=5;\n\
    \    local vowel_positions_count_count_min=0;\n    local vowel_positions_count_count_sum=0;\n\
    \    local vowel_positions_count_count_count_max=5;\n    local vowel_positions_count_count_count_min=0;\n\
    \    local vowel_positions_count_count_count_sum=0;\n    local vowel_positions_count_count_count_count_max=5;\n\
    \    local vowel_positions_count_count_count_count_min=0;\n    local vowel_positions_count_count_count_count_sum=0;\n\
    \    local vowel_positions_count_count_count_count_count_max=5;\n    local vowel_positions_count_count_count_count_count_min=0;\n\
    \    local vowel_positions_count_count_count_count_count_sum=0;\n    local vowel_positions_count_count_count_count_count_count_max=5;\n\
    \    local vowel_positions_count_count_count_count_count_count_min=0;\n    local\
    \ vowel_positions_count_count_count_count_count_count_sum=0;\n    local vowel_positions_count_count_count_count_count_count_count_max=5;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_min=0;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_sum=0;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_max=5;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_min=0;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_sum=0;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_max=5;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_min=0;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_sum=0;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_count_max=5;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_count_min=0;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_count_sum=0;\n\
    \    local vowel_positions_count_count_count_count_count_count_count_count_count_count_count_max=5;\n\
    \    local vowel\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=\"\
    \";\n    local vowel_index=\"\";\n    local vowel_found_index2=\"\";\n    local\
    \ vowel_index2=\"\";\n    local vowel_found_index3=\"\";\n    local vowel_index3=\"\
    \";\n    local vowel_found_index4=\"\";\n    local vowel_index4=\"\";\n    local\
    \ vowel_found_index5=\"\";\n    local vowel_index5=\"\";\n    local vowel_found_index6=\"\
    \";\n    local vowel_index6=\"\";\n    local vowel_found_index7=\"\";\n    local\
    \ vowel_index7=\"\";\n    local vowel_found_index8=\"\";\n    local vowel_index8=\"\
    \";\n    local vowel_found_index9=\"\";\n    local vowel_index9=\"\";\n    local\
    \ vowel_found_index10=\"\";\n    local vowel_index10=\"\";\n    local vowel_found_index11=\"\
    \";\n    local vowel_index11=\"\";\n    local vowel_found_index12=\"\";\n    local\
    \ vowel_index12=\"\";\n    local vowel_found_index13=\"\";\n    local vowel_index13=\"\
    \";\n    local vowel_found_index14=\"\";\n    local vowel_index14=\"\";\n    local\
    \ vowel_found_index15=\"\";\n    local vowel_index15=\"\";\n    local vowel_found_index16=\"\
    \";\n    local vowel_index16=\"\";\n    local vowel_found_index17=\"\";\n    local\
    \ vowel_index17=\"\";\n    local vowel_found_index18=\"\";\n    local vowel_index18=\"\
    \";\n    local vowel_found_index19=\"\";\n    local vowel_index19=\"\";\n    local\
    \ vowel_found_index20=\"\";\n    local vowel_index20=\"\";\n    local vowel_found_index21=\"\
    \";\n    local vowel_index21=\"\";\n    local vowel_found_index22=\"\";\n    local\
    \ vowel_index22=\"\";\n    local vowel_found_index23=\"\";\n    local vowel_index23=\"\
    \";\n    local vowel_found_index24=\"\";\n    local vowel_index24=\"\";\n    local\
    \ vowel_found_index25=\"\";\n    local vowel_index25=\"\";\n    local vowel_found_index26=\"\
    \";\n    local vowel_index26=\"\";\n    local vowel_found_index27=\"\";\n    local\
    \ vowel_index27=\"\";\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_arr=($vowels);\n\
    \    local vowels_arr_count=${#vowels_arr[@]};\n    local vowels_arr_len=${#vowels_arr[@]}\n\
    \    local vowels_arr_len=$((${vowels_arr_len} - 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${vowels_arr_len} + 1));\n    local vowels_arr_len=$((${vowels_arr_len}\
    \ + 1));\n    local vowels_arr_len=$((${\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwypzfqf0.sh: line 50: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwypzfqf0.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local word=$1\n    local vowel_found=\"\"\n    local\
    \ vowel_found_index=0\n    local vowel_index=0\n    local consonant_index=0\n\
    \    local consonant_found=\"\"\n    local consonant_found_index=0\n    local\
    \ consonant_index=0\n    local consonant_count=0\n    local consonant_count2=0\n\
    \    local consonant_count3=0\n    local consonant_count4=0\n    local consonant_count5=0\n\
    \    local consonant_count6=0\n    local consonant_count7=0\n    local consonant_count8=0\n\
    \    local consonant_count9=0\n    local consonant_count10=0\n    local consonant_count11=0\n\
    \    local consonant_count12=0\n    local consonant_count13=0\n    local consonant_count14=0\n\
    \    local consonant_count15=0\n    local consonant_count16=0\n    local consonant_count17=0\n\
    \    local consonant_count18=0\n    local consonant_count19=0\n    local consonant_count20=0\n\
    \    local consonant_count21=0\n    local consonant_count22=0\n    local consonant_count23=0\n\
    \    local consonant_count24=0\n    local consonant_count25=0\n    local consonant_count26=0\n\
    \    local consonant_count27=0\n    local consonant_count28=0\n    local consonant_count29=0\n\
    \    local consonant_count30=0\n    local consonant_count31=0\n    local consonant_count32=0\n\
    \    local consonant_count33=0\n    local consonant_count34=0\n    local consonant_count35=0\n\
    \    local consonant_count36=0\n    local consonant_count37=0\n    local consonant_count38=0\n\
    \    local consonant_count39=0\n    local consonant_count40=0\n    local consonant_count41=0\n\
    \    local consonant_count42=0\n    local consonant_count43=0\n    local consonant_count44=0\n\
    \    local consonant_count45=0\n    local consonant_count46=0\n    local consonant_count47=0\n\
    \    local consonant_count48=0\n    local con\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_str=\"\"\
    ;\n    local vowels_found=0;\n    local vowels_found_index=0;\n    local vowels_found_index=0;\n\
    \    local vowels_found_count=0;\n    local vowels_found_str=\"\";\n    local\
    \ vowels_found_count2=0;\n    local vowels_found_str2=\"\";\n    local vowels_found_count3=0;\n\
    \    local vowels_found_str3=\"\";\n    local vowels_found_count4=0;\n    local\
    \ vowels_found_str4=\"\";\n    local vowels_found_count5=0;\n    local vowels_found_str5=\"\
    \";\n    local vowels_found_count6=0;\n    local vowels_found_str6=\"\";\n   \
    \ local vowels_found_count7=0;\n    local vowels_found_str7=\"\";\n    local vowels_found_count8=0;\n\
    \    local vowels_found_str8=\"\";\n    local vowels_found_count9=0;\n    local\
    \ vowels_found_str9=\"\";\n    local vowels_found_count10=0;\n    local vowels_found_str10=\"\
    \";\n    local vowels_found_count11=0;\n    local vowels_found_str11=\"\";\n \
    \   local vowels_found_count12=0;\n    local vowels_found_str12=\"\";\n    local\
    \ vowels_found_count13=0;\n    local vowels_found_str13=\"\";\n    local vowels_found_count14=0;\n\
    \    local vowels_found_str14=\"\";\n    local vowels_found_count15=0;\n    local\
    \ vowels_found_str15=\"\";\n    local vowels_found_count16=0;\n    local vowels_found_str16=\"\
    \";\n    local vowels_found_count17=0;\n    local vowels_found_str17=\"\";\n \
    \   local vowels_found_count18=0;\n    local vowels_found_str18=\"\";\n    local\
    \ vowels_found_count19=0;\n    local vowels_found_str19=\"\";\n    local vowels_found_count20=0;\n\
    \    local vowels_found_str20=\"\";\n    local vowels_found_count21=0;\n    local\
    \ vowels_found_str21=\"\";\n    local vowels_found_count22=0;\n    local vowels_found_str22=\"\
    \";\n    local vowels_found_count23=0;\n    local vowels_found_str23=\"\";\n \
    \   local vowels_found_count24=0;\n    local vowels_found_str24=\"\";\n    local\
    \ vowels_found_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_position_count=0;\n    local vowel_position_index=0;\n  \
    \  local vowel_position_index2=0;\n    local vowel_position_index3=1;\n    local\
    \ vowel_position_index4=2;\n    local vowel_position_index5=3;\n    local vowel_position_index6=4;\n\
    \    local vowel_position_index7=5;\n    local vowel_position_index8=6;\n    local\
    \ vowel_position_index9=7;\n    local vowel_position_index10=8;\n    local vowel_position_index11=9;\n\
    \    local vowel_position_index12=10;\n    local vowel_position_index13=11;\n\
    \    local vowel_position_index14=12;\n    local vowel_position_index15=13;\n\
    \    local vowel_position_index16=14;\n    local vowel_position_index17=15;\n\
    \    local vowel_position_index18=16;\n    local vowel_position_index19=17;\n\
    \    local vowel_position_index20=18;\n    local vowel_position_index21=19;\n\
    \    local vowel_position_index22=20;\n    local vowel_position_index23=21;\n\
    \    local vowel_position_index24=22;\n    local vowel_position_index25=23;\n\
    \    local vowel_position_index26=24;\n    local vowel_position_index27=25;\n\
    \    local vowel_position_index28=26;\n    local vowel_position_index29=27;\n\
    \    local vowel_position_index30=28;\n    local vowel_position_index31=29;\n\
    \    local vowel_position_index32=30;\n    local vowel_position_index33=31;\n\
    \    local vowel_position_index34=32;\n    local vowel_position_index35=33;\n\
    \    local vowel_position_index36=34;\n    local vowel_position_index37=35;\n\
    \    local vowel_position_index38=36;\n    local vowel_position_index39=37;\n\
    \    local vowel_position_index40=38;\n    local vowel_position_index41=39;\n\
    \    local vowel_position_index42=40;\n    local vowel_position_index43=41;\n\
    \    local vowel_position_index44=42;\n    local vowel_position_index45=43;\n\
    \    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_1=$(echo\
    \ $vowels | sed 's/ //g' | wc -w)\n    local vowels_count_2=$(echo $vowels | sed\
    \ 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_3=$(echo $vowels |\
    \ sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_4=$(echo\
    \ $vowels | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n\
    \    local vowels_count_5=$(echo $vowels | sed 's/ //g' | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_6=$(echo\
    \ $vowels | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g'\
    \ | wc -w)\n    local vowels_count_8=$(echo $vowels | sed 's/ //g' | sed 's/ //g'\
    \ | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' |\
    \ sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed\
    \ 's/ //g' | wc -w)\n    local vowels_count_9=$(echo $vowels | sed 's/ //g' |\
    \ sed 's/ //g' | sed 's/ //g' | sed 's/ //g\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp1lbwuye.sh: line 29: unexpected EOF while looking for matching
    `''''

    /tmp/tmpp1lbwuye.sh: line 54: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local string=\"$1\"\n    local vowel_count=$(echo \"$string\"\
    \ | grep -o \"$vowels\" | wc -l)\n    local vowel_index=$((vowel_count - 1))\n\
    \    local vowel_found=$(echo \"$string\" | grep -o \"$vowels\" | sed -n \"$vowel_index,$((vowel_index\
    \ + 1))p\")\n    local vowel_found=${vowel_found,,}\n    echo \"$vowel_found\"\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "sed: invalid option -- '1'\nUsage: sed [OPTION]... {script-only-if-no-other-script}\
    \ [input-file]...\n\n  -n, --quiet, --silent\n                 suppress automatic\
    \ printing of pattern space\n      --debug\n                 annotate program\
    \ execution\n  -e script, --expression=script\n                 add the script\
    \ to the commands to be executed\n  -f script-file, --file=script-file\n     \
    \            add the contents of script-file to the commands to be executed\n\
    \  --follow-symlinks\n                 follow symlinks when processing in place\n\
    \  -i[SUFFIX], --in-place[=SUFFIX]\n                 edit files in place (makes\
    \ backup if SUFFIX supplied)\n  -l N, --line-length=N\n                 specify\
    \ the desired line-wrap length for the `l' command\n  --posix\n              \
    \   disable all GNU extensions.\n  -E, -r, --regexp-extended\n               \
    \  use extended regular expressions in the script\n                 (for portability\
    \ use POSIX -E).\n  -s, --separate\n                 consider files as separate\
    \ rather than as a single,\n                 continuous long stream.\n      --sandbox\n\
    \                 operate in sandbox mode (disable e/r/w commands).\n  -u, --unbuffered\n\
    \                 load minimal amounts of data from the input files and flush\n\
    \                 the output buffers more often\n  -z, --null-data\n         \
    \        separate lines by NUL characters\n      --help     display this help\
    \ and exit\n      --version  output version information and exit\n\nIf no -e,\
    \ --expression, -f, or --file option is given, then the first\nnon-option argument\
    \ is taken as the sed script to interpret.  All\nremaining arguments are names\
    \ of input files; if no input files are\nspecified, then the standard input is\
    \ read.\n\nGNU sed home page: <https://www.gnu.org/software/sed/>.\nGeneral help\
    \ using GNU software: <https://www.gnu.org/gethelp/>.\n"
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel\n    local vowel_count=0\n   \
    \ local vowel_count_max=${#vowels}\n    local vowel_index\n    local vowel_index2\n\
    \    local vowel_index3\n    local vowel_index4\n    local vowel_index5\n    local\
    \ vowel_index6\n    local vowel_index7\n    local vowel_index8\n    local vowel_index9\n\
    \    local vowel_index10\n    local vowel_index11\n    local vowel_index12\n \
    \   local vowel_index13\n    local vowel_index14\n    local vowel_index15\n  \
    \  local vowel_index16\n    local vowel_index17\n    local vowel_index18\n   \
    \ local vowel_index19\n    local vowel_index20\n    local vowel_index21\n    local\
    \ vowel_index22\n    local vowel_index23\n    local vowel_index24\n    local vowel_index25\n\
    \    local vowel_index26\n    local vowel_index27\n    local vowel_index28\n \
    \   local vowel_index29\n    local vowel_index30\n    local vowel_index31\n  \
    \  local vowel_index32\n    local vowel_index33\n    local vowel_index34\n   \
    \ local vowel_index35\n    local vowel_index36\n    local vowel_index37\n    local\
    \ vowel_index38\n    local vowel_index39\n    local vowel_index40\n    local vowel_index41\n\
    \    local vowel_index42\n    local vowel_index43\n    local vowel_index44\n \
    \   local vowel_index45\n    local vowel_index46\n    local vowel_index47\n  \
    \  local vowel_index48\n    local vowel_index49\n    local vowel_index50\n   \
    \ local vowel_index51\n    local vowel_index52\n    local vowel_index53\n    local\
    \ vowel_index54\n    local vowel_index55\n    local vowel_index56\n    local vowel_index57\n\
    \    local vowel_index58\n    local vowel_index59\n    local vowel_index60\n \
    \   local vowel_index61\n    local vowel_index62\n    local vowel_index63\n  \
    \  local vowel_index64\n    local vowel_index65\n    local vowel_index66\n   \
    \ local vowel_index67\n    local vowel_index68\n    local vowel_index69\n    local\
    \ vowel_index70\n    local vowel_index71\n    local vowel_index72\n    local vowel_index73\n\
    \    local vowel_index74\n    local vowel_index75\n    local vowel_index76\n \
    \   local vowel_index77\n    local vowel_index78\n    local vowel_index79\n  \
    \  local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n\
    \    local vowels=\"a e i o u\"\n    local vowels_count=${#vowels[@]}\n    local\
    \ vowel_found=\"\"\n    local vowel_index=0\n    local vowel_found_index=0\n \
    \   local vowel_found_index2=0\n    local vowel_found_index3=0\n    local vowel_found_index4=0\n\
    \    local vowel_found_index5=0\n    local vowel_found_index6=0\n    local vowel_found_index7=0\n\
    \    local vowel_found_index8=0\n    local vowel_found_index9=0\n    local vowel_found_index10=0\n\
    \    local vowel_found_index11=0\n    local vowel_found_index12=0\n    local vowel_found_index13=0\n\
    \    local vowel_found_index14=0\n    local vowel_found_index15=0\n    local vowel_found_index16=0\n\
    \    local vowel_found_index17=0\n    local vowel_found_index18=0\n    local vowel_found_index19=0\n\
    \    local vowel_found_index20=0\n    local vowel_found_index21=0\n    local vowel_found_index22=0\n\
    \    local vowel_found_index23=0\n    local vowel_found_index24=0\n    local vowel_found_index25=0\n\
    \    local vowel_found_index26=0\n    local vowel_found_index27=0\n    local vowel_found_index28=0\n\
    \    local vowel_found_index29=0\n    local vowel_found_index30=0\n    local vowel_found_index31=0\n\
    \    local vowel_found_index32=0\n    local vowel_found_index33=0\n    local vowel_found_index34=0\n\
    \    local vowel_found_index35=0\n    local vowel_found_index36=0\n    local vowel_found_index37=0\n\
    \    local vowel_found_index38=0\n    local vowel_found_index39=0\n    local vowel_found_index40=0\n\
    \    local vowel_found_index41=0\n    local vowel_found_index42=0\n    local vowel_found_index43=0\n\
    \    local vowel_found_index44=0\n    local vowel_found_index45=0\n    local vowel_found_index46=0\n\
    \    local vowel_found_index47=0\n    local vowel_found_index48=0\n    local vowel_found_index49=0\n\
    \    local vowel_found_index50=0\n    local vowel_found_index51=0\n    local vowel_found_index52=0\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel\n    local vowel_count\n    local\
    \ vowel_position\n    local vowel_position_count\n    local vowel_position\n \
    \   local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n    local vowel_position_count\n    local vowel_position_count\n\
    \    local vowel_position_count\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=\"$1\"\n    local vowel_found=\"\"\n    local vowel_index=0\n\
    \    local vowel_length=0\n    local consonant_index=0\n    local consonant_length=0\n\
    \    local consonant_found=\"\"\n    local consonant_found_index=0\n    local\
    \ consonant_found_length=0\n    local consonant_found2=\"\"\n    local consonant_found2_index=0\n\
    \    local consonant_found2_length=0\n    local consonant_found3=\"\"\n    local\
    \ consonant_found3_index=0\n    local consonant_found3_length=0\n    local consonant_found4=\"\
    \"\n    local consonant_found4_index=0\n    local consonant_found4_length=0\n\
    \    local consonant_found5=\"\"\n    local consonant_found5_index=0\n    local\
    \ consonant_found5_length=0\n    local consonant_found6=\"\"\n    local consonant_found6_index=0\n\
    \    local consonant_found6_length=0\n    local consonant_found7=\"\"\n    local\
    \ consonant_found7_index=0\n    local consonant_found7_length=0\n    local consonant_found8=\"\
    \"\n    local consonant_found8_index=0\n    local consonant_found8_length=0\n\
    \    local consonant_found9=\"\"\n    local consonant_found9_index=0\n    local\
    \ consonant_found9_length=0\n    local consonant_found10=\"\"\n    local consonant_found10_index=0\n\
    \    local consonant_found10_length=0\n    local consonant_found11=\"\"\n    local\
    \ consonant_found11_index=0\n    local consonant_found11_length=0\n    local consonant_found12=\"\
    \"\n    local consonant_found12_index=0\n    local consonant_found12_length=0\n\
    \    local consonant_found13=\"\"\n    local consonant_found13_index=0\n    local\
    \ consonant_found13_length=0\n    local consonant_found14=\"\"\n    local consonant_found14_index=0\n\
    \    local consonant_found14_length=0\n    local consonant_found15=\"\"\n    local\
    \ consonant_found15_index=0\n    local consonant_found15_length=0\n    local consonant_found16=\"\
    \"\n    local consonant_found16_index=0\n    local consonant_found16_length=0\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found2=\"\"\n    local vowel_found3=\"\"\n    local vowel_found4=\"\
    \"\n    local vowel_found5=\"\"\n    local vowel_found6=\"\"\n    local vowel_found7=\"\
    \"\n    local vowel_found8=\"\"\n    local vowel_found9=\"\"\n    local vowel_found10=\"\
    \"\n    local vowel_found11=\"\"\n    local vowel_found12=\"\"\n    local vowel_found13=\"\
    \"\n    local vowel_found14=\"\"\n    local vowel_found15=\"\"\n    local vowel_found16=\"\
    \"\n    local vowel_found17=\"\"\n    local vowel_found18=\"\"\n    local vowel_found19=\"\
    \"\n    local vowel_found20=\"\"\n    local vowel_found21=\"\"\n    local vowel_found22=\"\
    \"\n    local vowel_found23=\"\"\n    local vowel_found24=\"\"\n    local vowel_found25=\"\
    \"\n    local vowel_found26=\"\"\n    local vowel_found27=\"\"\n    local vowel_found28=\"\
    \"\n    local vowel_found29=\"\"\n    local vowel_found30=\"\"\n    local vowel_found31=\"\
    \"\n    local vowel_found32=\"\"\n    local vowel_found33=\"\"\n    local vowel_found34=\"\
    \"\n    local vowel_found35=\"\"\n    local vowel_found36=\"\"\n    local vowel_found37=\"\
    \"\n    local vowel_found38=\"\"\n    local vowel_found39=\"\"\n    local vowel_found40=\"\
    \"\n    local vowel_found41=\"\"\n    local vowel_found42=\"\"\n    local vowel_found43=\"\
    \"\n    local vowel_found44=\"\"\n    local vowel_found45=\"\"\n    local vowel_found46=\"\
    \"\n    local vowel_found47=\"\"\n    local vowel_found48=\"\"\n    local vowel_found49=\"\
    \"\n    local vowel_found50=\"\"\n    local vowel_found51=\"\"\n    local vowel_found52=\"\
    \"\n    local vowel_found53=\"\"\n    local vowel_found54=\"\"\n    local vowel_found55=\"\
    \"\n    local vowel_found56=\"\"\n    local vowel_found57=\"\"\n    local vowel_found58=\"\
    \"\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_found_index=0;\n\
    \  local vowel_found_index2=0;\n  local vowel_found_index3=1;\n  local vowel_found_index4=2;\n\
    \  local vowel_found_index5=3;\n  local vowel_found_index6=4;\n  local vowel_found_index7=5;\n\
    \  local vowel_found_index8=6;\n  local vowel_found_index9=7;\n  local vowel_found_index10=8;\n\
    \  local vowel_found_index11=9;\n  local vowel_found_index12=10;\n  local vowel_found_index13=11;\n\
    \  local vowel_found_index14=12;\n  local vowel_found_index15=13;\n  local vowel_found_index16=14;\n\
    \  local vowel_found_index17=15;\n  local vowel_found_index18=16;\n  local vowel_found_index19=17;\n\
    \  local vowel_found_index20=18;\n  local vowel_found_index21=19;\n  local vowel_found_index22=20;\n\
    \  local vowel_found_index23=21;\n  local vowel_found_index24=22;\n  local vowel_found_index25=23;\n\
    \  local vowel_found_index26=24;\n  local vowel_found_index27=25;\n  local vowel_found_index28=26;\n\
    \  local vowel_found_index29=27;\n  local vowel_found_index30=28;\n  local vowel_found_index31=29;\n\
    \  local vowel_found_index32=30;\n  local vowel_found_index33=31;\n  local vowel_found_index34=32;\n\
    \  local vowel_found_index35=33;\n  local vowel_found_index36=34;\n  local vowel_found_index37=35;\n\
    \  local vowel_found_index38=36;\n  local vowel_found_index39=37;\n  local vowel_found_index40=38;\n\
    \  local vowel_found_index41=39;\n  local vowel_found_index42=40;\n  local vowel_found_index43=41;\n\
    \  local vowel_found_index44=42;\n  local vowel_found_index45=43;\n  local vowel_found_index46=44;\n\
    \  local vowel_found_index47\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u AE II OO UU\"\n  local string=\"$1\"\n  local vowel\n  local vowel_count\n\
    \  local vowel_index\n  local vowel_found\n  local vowel_found_index\n  local\
    \ vowel_found_index2\n  local vowel_found_index3\n  local vowel_found_index4\n\
    \  local vowel_found_index5\n  local vowel_found_index6\n  local vowel_found_index7\n\
    \  local vowel_found_index8\n  local vowel_found_index9\n  local vowel_found_index10\n\
    \  local vowel_found_index11\n  local vowel_found_index12\n  local vowel_found_index13\n\
    \  local vowel_found_index14\n  local vowel_found_index15\n  local vowel_found_index16\n\
    \  local vowel_found_index17\n  local vowel_found_index18\n  local vowel_found_index19\n\
    \  local vowel_found_index20\n  local vowel_found_index21\n  local vowel_found_index22\n\
    \  local vowel_found_index23\n  local vowel_found_index24\n  local vowel_found_index25\n\
    \  local vowel_found_index26\n  local vowel_found_index27\n  local vowel_found_index28\n\
    \  local vowel_found_index29\n  local vowel_found_index30\n  local vowel_found_index31\n\
    \  local vowel_found_index32\n  local vowel_found_index33\n  local vowel_found_index34\n\
    \  local vowel_found_index35\n  local vowel_found_index36\n  local vowel_found_index37\n\
    \  local vowel_found_index38\n  local vowel_found_index39\n  local vowel_found_index40\n\
    \  local vowel_found_index41\n  local vowel_found_index42\n  local vowel_found_index43\n\
    \  local vowel_found_index44\n  local vowel_found_index45\n  local vowel_found_index46\n\
    \  local vowel_found_index47\n  local vowel_found_index48\n  local vowel_found_index49\n\
    \  local vowel_found_index50\n  local vowel_found_index51\n  local vowel_found_index52\n\
    \  local vowel_found_index53\n  local vowel_found_index54\n  local vowel_found_index55\n\
    \  local vowel_found_index56\n  local vowel_found_index57\n  local vowel_found_index58\n\
    \  local vowel_found\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_string=${vowels//,/\
    \ };\n    local vowels_string_count=${#vowels_string};\n    local vowels_string_index=$((${#1}\
    \ - ${#vowels_string} - 1));\n    local vowels_string_index=$((${vowels_string_index}\
    \ % ${vowels_count}));\n    local vowels_string=${vowels_string::${vowels_string_index}};\n\
    \    local vowels_string=${vowels_string//[!a-z]/};\n    local vowels_string=${vowels_string//[a-z]/};\n\
    \    local vowels_string=${vowels_string//[!A-Z]/};\n    local vowels_string=${vowels_string//[A-Z]/};\n\
    \    local vowels_string=${vowels_string//[!0-9]/};\n    local vowels_string=${vowels_string//[0-9]/};\n\
    \    local vowels_string=${vowels_string//[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\\
    /?]/};\n    local vowels_string=${vowels_string//[@]/};\n    local vowels_string=${vowels_string//[!]/};\n\
    \    local vowels_string=${vowels_string//[?]/};\n    local vowels_string=${vowels_string//[/]/};\n\
    \    local vowels_string=${vowels_string//[,]/};\n    local vowels_string=${vowels_string//[;]/};\n\
    \    local vowels_string=${vowels_string//[/]/};\n    local vowels_string=${vowels_string//[,]/};\n\
    \    local vowels_string=${vowels_string//[;]/};\n    local vowels_string=${vowels_string//[/]/};\n\
    \    local vowels_string=${vowels_string//[,]/};\n    local vowels_string=${vowels_string//[;]/};\n\
    \    local vowels_string=${vowels_string//[/]/};\n    local vowels_string=${vowels_string//[,]/};\n\
    \    local vowels_string=${vowels_string//[;]/};\n    local vowels_string=${vowels_string//[/]/};\n\
    \    local vowels_string=${vowels_string//[,]/};\n    local vowels_string=${vowels_string//[;]/};\n\
    \    local vowels_string=${vowel\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvebuiqkj.sh: line 32: unexpected EOF while looking for matching
    `''''

    /tmp/tmpvebuiqkj.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels[@]}\n    local vowel_found=\"\"\n\
    \    local vowel_found_index=0\n    local vowel_found_index2=0\n    local vowel_found_index3=0\n\
    \    local vowel_found_index4=0\n    local vowel_found_index5=0\n    local vowel_found_index6=0\n\
    \    local vowel_found_index7=0\n    local vowel_found_index8=0\n    local vowel_found_index9=0\n\
    \    local vowel_found_index10=0\n    local vowel_found_index11=0\n    local vowel_found_index12=0\n\
    \    local vowel_found_index13=0\n    local vowel_found_index14=0\n    local vowel_found_index15=0\n\
    \    local vowel_found_index16=0\n    local vowel_found_index17=0\n    local vowel_found_index18=0\n\
    \    local vowel_found_index19=0\n    local vowel_found_index20=0\n    local vowel_found_index21=0\n\
    \    local vowel_found_index22=0\n    local vowel_found_index23=0\n    local vowel_found_index24=0\n\
    \    local vowel_found_index25=0\n    local vowel_found_index26=0\n    local vowel_found_index27=0\n\
    \    local vowel_found_index28=0\n    local vowel_found_index29=0\n    local vowel_found_index30=0\n\
    \    local vowel_found_index31=0\n    local vowel_found_index32=0\n    local vowel_found_index33=0\n\
    \    local vowel_found_index34=0\n    local vowel_found_index35=0\n    local vowel_found_index36=0\n\
    \    local vowel_found_index37=0\n    local vowel_found_index38=0\n    local vowel_found_index39=0\n\
    \    local vowel_found_index40=0\n    local vowel_found_index41=0\n    local vowel_found_index42=0\n\
    \    local vowel_found_index43=0\n    local vowel_found_index44=0\n    local vowel_found_index45=0\n\
    \    local vowel_found_index46=0\n    local vowel_found_index47=0\n    local vowel_found_index48=0\n\
    \    local vowel_found_index49=0\n    local vowel_found_index50=0\n    local vowel_found_index51=0\n\
    \    local vowel_found_index52=0\n    local vowel_found_index53=0\n    local vowel_found_index54\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=\"\
    \";\n    local vowel_index=\"\";\n    local vowel_found_index2=\"\";\n    local\
    \ vowel_index2=\"\";\n    local vowel_found_index3=\"\";\n    local vowel_index3=\"\
    \";\n    local vowel_found_index4=\"\";\n    local vowel_index4=\"\";\n    local\
    \ vowel_found_index5=\"\";\n    local vowel_index5=\"\";\n    local vowel_found_index6=\"\
    \";\n    local vowel_index6=\"\";\n    local vowel_found_index7=\"\";\n    local\
    \ vowel_index7=\"\";\n    local vowel_found_index8=\"\";\n    local vowel_index8=\"\
    \";\n    local vowel_found_index9=\"\";\n    local vowel_index9=\"\";\n    local\
    \ vowel_found_index10=\"\";\n    local vowel_index10=\"\";\n    local vowel_found_index11=\"\
    \";\n    local vowel_index11=\"\";\n    local vowel_found_index12=\"\";\n    local\
    \ vowel_index12=\"\";\n    local vowel_found_index13=\"\";\n    local vowel_index13=\"\
    \";\n    local vowel_found_index14=\"\";\n    local vowel_index14=\"\";\n    local\
    \ vowel_found_index15=\"\";\n    local vowel_index15=\"\";\n    local vowel_found_index16=\"\
    \";\n    local vowel_index16=\"\";\n    local vowel_found_index17=\"\";\n    local\
    \ vowel_index17=\"\";\n    local vowel_found_index18=\"\";\n    local vowel_index18=\"\
    \";\n    local vowel_found_index19=\"\";\n    local vowel_index19=\"\";\n    local\
    \ vowel_found_index20=\"\";\n    local vowel_index20=\"\";\n    local vowel_found_index21=\"\
    \";\n    local vowel_index21=\"\";\n    local vowel_found_index22=\"\";\n    local\
    \ vowel_index22=\"\";\n    local vowel_found_index23=\"\";\n    local vowel_index23=\"\
    \";\n    local vowel_found_index24=\"\";\n    local vowel_index24=\"\";\n    local\
    \ vowel_found_index25=\"\";\n    local vowel_index25=\"\";\n    local vowel_found_index26=\"\
    \";\n    local vowel_index26=\"\";\n    local vowel_found_index27=\"\";\n    local\
    \ vowel_index27=\"\";\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_count_2=${#vowels};\n\
    \    local vowels_count_3=${#vowels};\n    local vowels_count_4=${#vowels};\n\
    \    local vowels_count_5=${#vowels};\n    local vowels_count_6=${#vowels};\n\
    \    local vowels_count_7=${#vowels};\n    local vowels_count_8=${#vowels};\n\
    \    local vowels_count_9=${#vowels};\n    local vowels_count_10=${#vowels};\n\
    \    local vowels_count_11=${#vowels};\n    local vowels_count_12=${#vowels};\n\
    \    local vowels_count_13=${#vowels};\n    local vowels_count_14=${#vowels};\n\
    \    local vowels_count_15=${#vowels};\n    local vowels_count_16=${#vowels};\n\
    \    local vowels_count_17=${#vowels};\n    local vowels_count_18=${#vowels};\n\
    \    local vowels_count_19=${#vowels};\n    local vowels_count_20=${#vowels};\n\
    \    local vowels_count_21=${#vowels};\n    local vowels_count_22=${#vowels};\n\
    \    local vowels_count_23=${#vowels};\n    local vowels_count_24=${#vowels};\n\
    \    local vowels_count_25=${#vowels};\n    local vowels_count_26=${#vowels};\n\
    \    local vowels_count_27=${#vowels};\n    local vowels_count_28=${#vowels};\n\
    \    local vowels_count_29=${#vowels};\n    local vowels_count_30=${#vowels};\n\
    \    local vowels_count_31=${#vowels};\n    local vowels_count_32=${#vowels};\n\
    \    local vowels_count_33=${#vowels};\n    local vowels_count_34=${#vowels};\n\
    \    local vowels_count_35=${#vowels};\n    local vowels_count_36=${#vowels};\n\
    \    local vowels_count_37=${#vowels};\n    local vowels_count_38=${#vowels};\n\
    \    local vowels_count_39=${#vowels};\n    local vowels_count_40=${#vowels};\n\
    \    local vowels_count_41=${#vowels};\n    local vowels_count_42=${#\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwctmyn6k.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local string=\"$1\"\n    local vowel_index=0\n    local vowel_found=0\n\
    \    local vowel_found_index=0\n    local vowel_found_index2=0\n    local vowel_found_index3=0\n\
    \    local vowel_found_index4=0\n    local vowel_found_index5=0\n    local vowel_found_index6=0\n\
    \    local vowel_found_index7=0\n    local vowel_found_index8=0\n    local vowel_found_index9=0\n\
    \    local vowel_found_index10=0\n    local vowel_found_index11=0\n    local vowel_found_index12=0\n\
    \    local vowel_found_index13=0\n    local vowel_found_index14=0\n    local vowel_found_index15=0\n\
    \    local vowel_found_index16=0\n    local vowel_found_index17=0\n    local vowel_found_index18=0\n\
    \    local vowel_found_index19=0\n    local vowel_found_index20=0\n    local vowel_found_index21=0\n\
    \    local vowel_found_index22=0\n    local vowel_found_index23=0\n    local vowel_found_index24=0\n\
    \    local vowel_found_index25=0\n    local vowel_found_index26=0\n    local vowel_found_index27=0\n\
    \    local vowel_found_index28=0\n    local vowel_found_index29=0\n    local vowel_found_index30=0\n\
    \    local vowel_found_index31=0\n    local vowel_found_index32=0\n    local vowel_found_index33=0\n\
    \    local vowel_found_index34=0\n    local vowel_found_index35=0\n    local vowel_found_index36=0\n\
    \    local vowel_found_index37=0\n    local vowel_found_index38=0\n    local vowel_found_index39=0\n\
    \    local vowel_found_index40=0\n    local vowel_found_index41=0\n    local vowel_found_index42=0\n\
    \    local vowel_found_index43=0\n    local vowel_found_index44=0\n    local vowel_found_index45=0\n\
    \    local vowel_found_index46=0\n    local vowel_found_index47=0\n    local vowel_found_index48=0\n\
    \    local vowel_found_index49=0\n    local vowel_found_index50=0\n    local vowel_found_index51=0\n\
    \    local vowel_found_index52=0\n    local vowel_found_index53=0\n    local vowel_found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_position_count=0;\n    local vowel_position_count2=0;\n \
    \   local vowel_position_count3=0;\n    local vowel_position_count4=0;\n    local\
    \ vowel_position_count5=0;\n    local vowel_position_count6=0;\n    local vowel_position_count7=0;\n\
    \    local vowel_position_count8=0;\n    local vowel_position_count9=0;\n    local\
    \ vowel_position_count10=0;\n    local vowel_position_count11=0;\n    local vowel_position_count12=0;\n\
    \    local vowel_position_count13=0;\n    local vowel_position_count14=0;\n  \
    \  local vowel_position_count15=0;\n    local vowel_position_count16=0;\n    local\
    \ vowel_position_count17=0;\n    local vowel_position_count18=0;\n    local vowel_position_count19=0;\n\
    \    local vowel_position_count20=0;\n    local vowel_position_count21=0;\n  \
    \  local vowel_position_count22=0;\n    local vowel_position_count23=0;\n    local\
    \ vowel_position_count24=0;\n    local vowel_position_count25=0;\n    local vowel_position_count26=0;\n\
    \    local vowel_position_count27=0;\n    local vowel_position_count28=0;\n  \
    \  local vowel_position_count29=0;\n    local vowel_position_count30=0;\n    local\
    \ vowel_position_count31=0;\n    local vowel_position_count32=0;\n    local vowel_position_count33=0;\n\
    \    local vowel_position_count34=0;\n    local vowel_position_count35=0;\n  \
    \  local vowel_position_count36=0;\n    local vowel_position_count37=0;\n    local\
    \ vowel_position_count38=0;\n    local vowel_position_count39=0;\n    local vowel_position_count40=0;\n\
    \    local vowel_position_count41=0;\n    local vowel_position_count42=0;\n  \
    \  local vowel_position_count43=0;\n    local vowel_position_count44=0;\n    local\
    \ vowel_position_count45=0;\n    local vowel_position_count46=0;\n    local vowel_position_count47=0;\n\
    \    local vowel_position_count48=0;\n    local vowel_position_count49=0;\n  \
    \  local vowel_position_count50=0;\n    local vowel_position_count51=0;\n    local\
    \ vowel_position_count52=0;\n    local vowel_position_count53=0;\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowels_count=$(echo \"$vowels\" | wc -l)\n\
    \    local vowel_found=\"\"\n    local vowel_position=\"\"\n    local vowel_position_count=0\n\
    \    local vowel_position_index=0\n    local vowel_position_index2=0\n    local\
    \ vowel_position_index3=0\n    local vowel_position_index4=0\n    local vowel_position_index5=0\n\
    \    local vowel_position_index6=0\n    local vowel_position_index7=0\n    local\
    \ vowel_position_index8=0\n    local vowel_position_index9=0\n    local vowel_position_index10=0\n\
    \    local vowel_position_index11=0\n    local vowel_position_index12=0\n    local\
    \ vowel_position_index13=0\n    local vowel_position_index14=0\n    local vowel_position_index15=0\n\
    \    local vowel_position_index16=0\n    local vowel_position_index17=0\n    local\
    \ vowel_position_index18=0\n    local vowel_position_index19=0\n    local vowel_position_index20=0\n\
    \    local vowel_position_index21=0\n    local vowel_position_index22=0\n    local\
    \ vowel_position_index23=0\n    local vowel_position_index24=0\n    local vowel_position_index25=0\n\
    \    local vowel_position_index26=0\n    local vowel_position_index27=0\n    local\
    \ vowel_position_index28=0\n    local vowel_position_index29=0\n    local vowel_position_index30=0\n\
    \    local vowel_position_index31=0\n    local vowel_position_index32=0\n    local\
    \ vowel_position_index33=0\n    local vowel_position_index34=0\n    local vowel_position_index35=0\n\
    \    local vowel_position_index36=0\n    local vowel_position_index37=0\n    local\
    \ vowel_position_index38=0\n    local vowel_position_index39=0\n    local vowel_position_index40=0\n\
    \    local vowel_position_index41=0\n    local vowel_position_index42=0\n    local\
    \ vowel_position_index43=0\n    local vowel_position_index44=0\n    local vowel_position_index45=0\n\
    \    local vowel_position_index46=0\n    local vowel_position_index47=0\n    local\
    \ vowel_position_index48=0\n    local vowel_position_index49=0\n    local vowel_position_index50=0\n\
    \    local vowel_position_index51\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp42r04coi.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=0;\n\
    \    local vowel_positions=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local\
    \ vowel_positions_found=0;\n    local vowel_positions_found=0;\n    local vowel_positions_found=0;\n\
    \    local vowel\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${vowels_count:-0}\n\
    \    local vowels_count=${vowels_count:-0}\n    local vowels_count=${\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp42r04coi.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local consonant_count=0\n    local consonant_index=0\n\
    \    local consonant_found=\"\"\n    local consonant_last=\"\"\n    local consonant_first=\"\
    \"\n    local consonant_next=\"\"\n    local consonant_prev=\"\"\n    local consonant_next2=\"\
    \"\n    local consonant_prev2=\"\"\n    local consonant_next3=\"\"\n    local\
    \ consonant_prev3=\"\"\n    local consonant_next4=\"\"\n    local consonant_prev4=\"\
    \"\n    local consonant_next5=\"\"\n    local consonant_prev5=\"\"\n    local\
    \ consonant_next6=\"\"\n    local consonant_prev6=\"\"\n    local consonant_next7=\"\
    \"\n    local consonant_prev7=\"\"\n    local consonant_next8=\"\"\n    local\
    \ consonant_prev8=\"\"\n    local consonant_next9=\"\"\n    local consonant_prev9=\"\
    \"\n    local consonant_next10=\"\"\n    local consonant_prev10=\"\"\n    local\
    \ consonant_next11=\"\"\n    local consonant_prev11=\"\"\n    local consonant_next12=\"\
    \"\n    local consonant_prev12=\"\"\n    local consonant_next13=\"\"\n    local\
    \ consonant_prev13=\"\"\n    local consonant_next14=\"\"\n    local consonant_prev14=\"\
    \"\n    local consonant_next15=\"\"\n    local consonant_prev15=\"\"\n    local\
    \ consonant_next16=\"\"\n    local consonant_prev16=\"\"\n    local consonant_next17=\"\
    \"\n    local consonant_prev17=\"\"\n    local consonant_next18=\"\"\n    local\
    \ consonant_prev18=\"\"\n    local consonant_next19=\"\"\n    local consonant_prev19=\"\
    \"\n    local consonant_next20=\"\"\n    local consonant_prev20=\"\"\n    local\
    \ consonant_next21=\"\"\n    local consonant_prev21=\"\"\n    local consonant_next22=\"\
    \"\n    local consonant_prev22=\"\"\n    local consonant_next23=\"\"\n    local\
    \ consonant_prev23=\"\"\n    local consonant_next24=\"\"\n    local consonant_prev24=\"\
    \"\n    local consonant_next25\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_position_count=0;\n    local vowel_position_count2=0;\n \
    \   local vowel_position_count3=0;\n    local vowel_position_count4=0;\n    local\
    \ vowel_position_count5=0;\n    local vowel_position_count6=0;\n    local vowel_position_count7=0;\n\
    \    local vowel_position_count8=0;\n    local vowel_position_count9=0;\n    local\
    \ vowel_position_count10=0;\n    local vowel_position_count11=0;\n    local vowel_position_count12=0;\n\
    \    local vowel_position_count13=0;\n    local vowel_position_count14=0;\n  \
    \  local vowel_position_count15=0;\n    local vowel_position_count16=0;\n    local\
    \ vowel_position_count17=0;\n    local vowel_position_count18=0;\n    local vowel_position_count19=0;\n\
    \    local vowel_position_count20=0;\n    local vowel_position_count21=0;\n  \
    \  local vowel_position_count22=0;\n    local vowel_position_count23=0;\n    local\
    \ vowel_position_count24=0;\n    local vowel_position_count25=0;\n    local vowel_position_count26=0;\n\
    \    local vowel_position_count27=0;\n    local vowel_position_count28=0;\n  \
    \  local vowel_position_count29=0;\n    local vowel_position_count30=0;\n    local\
    \ vowel_position_count31=0;\n    local vowel_position_count32=0;\n    local vowel_position_count33=0;\n\
    \    local vowel_position_count34=0;\n    local vowel_position_count35=0;\n  \
    \  local vowel_position_count36=0;\n    local vowel_position_count37=0;\n    local\
    \ vowel_position_count38=0;\n    local vowel_position_count39=0;\n    local vowel_position_count40=0;\n\
    \    local vowel_position_count41=0;\n    local vowel_position_count42=0;\n  \
    \  local vowel_position_count43=0;\n    local vowel_position_count44=0;\n    local\
    \ vowel_position_count45=0;\n    local vowel_position_count46=0;\n    local vowel_position_count47=0;\n\
    \    local vowel_position_count48=0;\n    local vowel_position_count49=0;\n  \
    \  local vowel_position_count50=0;\n    local vowel_position_count51=0;\n    local\
    \ vowel_position_count52=0;\n    local vowel_position_count53=0;\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_positions=\"\";\n    local vowel_founds=\"\";\n    local\
    \ vowel_founds_positions=\"\";\n    local vowel_founds_positions_count=0;\n  \
    \  local vowel_founds_positions_count_max=0;\n    local vowel_founds_positions_count_min=0;\n\
    \    local vowel_founds_positions_count_current=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local vowel_founds_positions_count_current_min=0;\n    local vowel_founds_positions_count_current_max=0;\n\
    \    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u AE II OO UU\"\n  local string=\"$1\"\n  local vowel\n  local vowel_count\n\
    \  local vowel_index\n  local vowel_found\n  local vowel_found_index\n  local\
    \ vowel_found_index2\n  local vowel_found_index3\n  local vowel_found_index4\n\
    \  local vowel_found_index5\n  local vowel_found_index6\n  local vowel_found_index7\n\
    \  local vowel_found_index8\n  local vowel_found_index9\n  local vowel_found_index10\n\
    \  local vowel_found_index11\n  local vowel_found_index12\n  local vowel_found_index13\n\
    \  local vowel_found_index14\n  local vowel_found_index15\n  local vowel_found_index16\n\
    \  local vowel_found_index17\n  local vowel_found_index18\n  local vowel_found_index19\n\
    \  local vowel_found_index20\n  local vowel_found_index21\n  local vowel_found_index22\n\
    \  local vowel_found_index23\n  local vowel_found_index24\n  local vowel_found_index25\n\
    \  local vowel_found_index26\n  local vowel_found_index27\n  local vowel_found_index28\n\
    \  local vowel_found_index29\n  local vowel_found_index30\n  local vowel_found_index31\n\
    \  local vowel_found_index32\n  local vowel_found_index33\n  local vowel_found_index34\n\
    \  local vowel_found_index35\n  local vowel_found_index36\n  local vowel_found_index37\n\
    \  local vowel_found_index38\n  local vowel_found_index39\n  local vowel_found_index40\n\
    \  local vowel_found_index41\n  local vowel_found_index42\n  local vowel_found_index43\n\
    \  local vowel_found_index44\n  local vowel_found_index45\n  local vowel_found_index46\n\
    \  local vowel_found_index47\n  local vowel_found_index48\n  local vowel_found_index49\n\
    \  local vowel_found_index50\n  local vowel_found_index51\n  local vowel_found_index52\n\
    \  local vowel_found_index53\n  local vowel_found_index54\n  local vowel_found_index55\n\
    \  local vowel_found_index56\n  local vowel_found_index57\n  local vowel_found_index58\n\
    \  local vowel_found\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_string=${vowels//,/\
    \ };\n    local vowels_string_count=${#vowels_string};\n    local vowels_string_array=($vowels_string);\n\
    \    local vowels_string_array_count=${#vowels_string_array[@]};\n    local vowels_string_array_index=0;\n\
    \    local vowels_string_array_element=${vowels_string_array[$vowels_string_array_index]};\n\
    \    local vowels_string_array_element_count=${#vowels_string_array_element};\n\
    \    local vowels_string_array_element_index=0;\n    local vowels_string_array_element_element=${vowels_string_array_element[$vowels_string_array_element_index]};\n\
    \    local vowels_string_array_element_element_count=${#vowels_string_array_element_element};\n\
    \    local vowels_string_array_element_element_index=0;\n    local vowels_string_array_element_element_element=${vowels_string_array_element_element[$vowels_string_array_element_element_index]};\n\
    \    local vowels_string_array_element_element_element_count=${#vowels_string_array_element_element_element};\n\
    \    local vowels_string_array_element_element_element_index=0;\n    local vowels_string_array_element_element_element_element=${vowels_string_array_element_element_element[$vowels_string_array_element_element_element_index]};\n\
    \    local vowels_string_array_element_element_element_element_count=${#vowels_string_array_element_element_element_element};\n\
    \    local vowels_string_array_element_element_element_element_index=0;\n    local\
    \ vowels_string_array_element_element_element_element_element=${vowels_string_array_element_element_element_element[$vowels_string_array_element_element_element_element_index]};\n\
    \    local vowels_string_array_element_element_element_element_element_count=${#vowels_string_array_element_element_element_element_element};\n\
    \    local vowels_string_array_element_element_element_element_element_index=0;\n\
    \    local vowels_string_array_element_element_element_element_element_element=${vowels_string_array_element_element_element_element_element[$vowels_string_array_element_element_element_element_element_index]};\n\
    \    local vowels_string_array_element_element_element_element_element_element_count=${#vowels_string_array_element_element_element_element_element_element};\n\
    \    local vowels_string_array_element_element_element_element_element_element_index=0;\n\
    \    local vowels_string_array_element_element_element_element_element_element_element=${vowels_string_array_element_element_element_element_element_element[$vowels_string_array_element_element_element_element_element_element_index]};\n\
    \    local vowels_string_array_element_element_element_element_element_element_element_element_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OE UE ae ie oe ue\"\n    local vowels_count=$(echo $vowels | wc\
    \ -w)\n    local vowels_array=($vowels)\n    local vowels_array_count=${#vowels_array[@]}\n\
    \    local vowels_array_index=0\n    local vowels_array_index_count=0\n    local\
    \ vowels_array_index_count2=0\n    local vowels_array_index_count3=0\n    local\
    \ vowels_array_index_count4=0\n    local vowels_array_index_count5=0\n    local\
    \ vowels_array_index_count6=0\n    local vowels_array_index_count7=0\n    local\
    \ vowels_array_index_count8=0\n    local vowels_array_index_count9=0\n    local\
    \ vowels_array_index_count10=0\n    local vowels_array_index_count11=0\n    local\
    \ vowels_array_index_count12=0\n    local vowels_array_index_count13=0\n    local\
    \ vowels_array_index_count14=0\n    local vowels_array_index_count15=0\n    local\
    \ vowels_array_index_count16=0\n    local vowels_array_index_count17=0\n    local\
    \ vowels_array_index_count18=0\n    local vowels_array_index_count19=0\n    local\
    \ vowels_array_index_count20=0\n    local vowels_array_index_count21=0\n    local\
    \ vowels_array_index_count22=0\n    local vowels_array_index_count23=0\n    local\
    \ vowels_array_index_count24=0\n    local vowels_array_index_count25=0\n    local\
    \ vowels_array_index_count26=0\n    local vowels_array_index_count27=0\n    local\
    \ vowels_array_index_count28=0\n    local vowels_array_index_count29=0\n    local\
    \ vowels_array_index_count30=0\n    local vowels_array_index_count31=0\n    local\
    \ vowels_array_index_count32=0\n    local vowels_array_index_count33=0\n    local\
    \ vowels_array_index_count34=0\n    local vowels_array_index_count35=0\n    local\
    \ vowels_array_index_count36=0\n    local vowels_array_index_count37=0\n    local\
    \ vowels_array_index_count38=0\n    local vowels_array_index_count39=0\n    local\
    \ vowels_array_index_count40=0\n    local vowels_array_index_count41=0\n    local\
    \ vowels_array_index_count42=0\n    local vowels_array_index_count43=0\n    local\
    \ vowels_array_index_count44=0\n    local \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_position_count=0;\n    local vowel_position_index=0;\n  \
    \  local vowel_position_index_count=0;\n    local vowel_position_index_count_max=5;\n\
    \    local vowel_position_index_count_min=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_step=1;\n\
    \    local vowel\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=0;\n\
    \    local vowel_index=0;\n    local consonant_index=0;\n    local consonant_found=\"\
    \";\n    local consonant_found_index=0;\n    local consonant_count=$#word;\n \
    \   local consonant_found_index=0;\n    local consonant_count=$#word;\n    local\
    \ consonant_found_index=0;\n    local consonant_count=$#word;\n    local consonant_found_index=0;\n\
    \    local consonant_count=$#word;\n    local consonant_found_index=0;\n    local\
    \ consonant_count=$#word;\n    local consonant_found_index=0;\n    local consonant_count=$#word;\n\
    \    local consonant_found_index=0;\n    local consonant_count=$#word;\n    local\
    \ consonant_found_index=0;\n    local consonant_count=$#word;\n    local consonant_found_index=0;\n\
    \    local consonant_count=$#word;\n    local consonant_found_index=0;\n    local\
    \ consonant_count=$#word;\n    local consonant_found_index=0;\n    local consonant_count=$#word;\n\
    \    local consonant_found_index=0;\n    local consonant_count=$#word;\n    local\
    \ consonant_found_index=0;\n    local consonant_count=$#word;\n    local consonant_found_index=0;\n\
    \    local consonant_count=$#word;\n    local consonant_found_index=0;\n    local\
    \ consonant_count=$#word;\n    local consonant_found_index=0;\n    local consonant_count=$#word;\n\
    \    local consonant_found_index=0;\n    local consonant_count=$#word;\n    local\
    \ consonant_found_index=0;\n    local consonant_count=$#word;\n    local consonant_found_index=0;\n\
    \    local consonant_count=$#word;\n    local consonant_found_index=0;\n    local\
    \ consonant_count=$#word;\n    local consonant_found_index=0;\n    local consonant_count=$#word;\n\
    \    local consonant_found_index=0;\n    local consonant_count=$#word;\n    local\
    \ consonant_found_index=0;\n    local consonant_count\n}\n\ncandidate() {\n  \
    \  get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_positions=\"\";\n  local vowel_positions_count=0;\n  local\
    \ vowel_positions_count_max=0;\n  local vowel_positions_count_min=0;\n  local\
    \ vowel_positions_count_diff=0;\n  local vowel_positions_count_diff_max=0;\n \
    \ local vowel_positions_count_diff_min=0;\n  local vowel_positions_count_diff_avg=0;\n\
    \  local vowel_positions_count_diff_avg2=0;\n  local vowel_positions_count_diff_avg3=0;\n\
    \  local vowel_positions_count_diff_avg4=0;\n  local vowel_positions_count_diff_avg5=0;\n\
    \  local vowel_positions_count_diff_avg6=0;\n  local vowel_positions_count_diff_avg7=0;\n\
    \  local vowel_positions_count_diff_avg8=0;\n  local vowel_positions_count_diff_avg9=0;\n\
    \  local vowel_positions_count_diff_avg10=0;\n  local vowel_positions_count_diff_avg11=0;\n\
    \  local vowel_positions_count_diff_avg12=0;\n  local vowel_positions_count_diff_avg13=0;\n\
    \  local vowel_positions_count_diff_avg14=0;\n  local vowel_positions_count_diff_avg15=0;\n\
    \  local vowel_positions_count_diff_avg16=0;\n  local vowel_positions_count_diff_avg17=0;\n\
    \  local vowel_positions_count_diff_avg18=0;\n  local vowel_positions_count_diff_avg19=0;\n\
    \  local vowel_positions_count_diff_avg20=0;\n  local vowel_positions_count_diff_avg21=0;\n\
    \  local vowel_positions_count_diff_avg22=0;\n  local vowel_positions_count_diff_avg23=0;\n\
    \  local vowel_positions_count_diff_avg24=0;\n  local vowel_positions_count_diff_avg25=0;\n\
    \  local vowel_positions_count_diff_avg26=0;\n  local vowel_positions_count_diff_avg27=0;\n\
    \  local vowel_positions_count_diff_avg28=0;\n  local vowel_positions_count_diff_avg29=0;\n\
    \  local vowel_positions_count_diff_avg30=0;\n  local vowel_positions_count_diff_avg31=0;\n\
    \  local vowel_positions_count_diff_avg32=0;\n  local vowel_positions_count_diff_avg33=0;\n\
    \  local vowel_positions_count_diff_avg34=0;\n  local \n}\n\ncandidate() {\n \
    \   get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_2=$(echo $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_7=$(echo $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_12=$(echo $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_17=$(echo $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_22=$(echo $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_27=$(echo $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_32=$(echo $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels\
    \ | wc -w)\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count=$(echo\
    \ $vowels_count | bc)\n    local vowels_count=$(echo $vowels_count | sed 's/^0//g')\n\
    \    local vowels_count=$(echo $vowels_count | sed 's/^1//g')\n    local vowels_count=$(echo\
    \ $vowels_count | sed 's/^2//g')\n    local vowels_count=$(echo $vowels_count\
    \ | sed 's/^3//g')\n    local vowels_count=$(echo $vowels_count | sed 's/^4//g')\n\
    \    local vowels_count=$(echo $vowels_count | sed 's/^5//g')\n    local vowels_count=$(echo\
    \ $vowels_count | sed 's/^6//g')\n    local vowels_count=$(echo $vowels_count\
    \ | sed 's/^7//g')\n    local vowels_count=$(echo $vowels_count | sed 's/^8//g')\n\
    \    local vowels_count=$(echo $vowels_count | sed 's/^9//g')\n    local vowels_count=$(echo\
    \ $vowels_count | sed 's/^10//g')\n    local vowels_count=$(echo $vowels_count\
    \ | sed 's/^11//g')\n    local vowels_count=$(echo $vowels_count | sed 's/^12//g')\n\
    \    local vowels_count=$(echo $vowels_count | sed 's/^13//g')\n    local vowels_count=$(echo\
    \ $vowels_count | sed 's/^14//g')\n    local vowels_count=$(echo $vowels_count\
    \ | sed 's/^15//g')\n    local vowels_count=$(echo $vowels_count | sed 's/^16//g')\n\
    \    local vowels_count=$(echo $vowels_count | sed 's/^17//g')\n    local vowels_count=$(echo\
    \ $vowels_count | sed 's/^18//g')\n    local vowels_count=$(echo $vowels_count\
    \ | sed 's/^19//g')\n    local vowels_count=$(echo $vowels_count | sed 's/^20//g')\n\
    \    local vowels_count=$(echo $vowels_count | sed 's/^21//g')\n    local vowels_count=$(echo\
    \ $vowels_count | sed 's/^22//g')\n    local vowels_count=$(echo $vowels_count\
    \ | sed '\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp274e8mcz.sh: line 45: unexpected EOF while looking for matching
    `''''

    /tmp/tmp274e8mcz.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_position_count=0;\n  local vowel_position_count2=0;\n  local\
    \ vowel_position_count3=0;\n  local vowel_position_count4=0;\n  local vowel_position_count5=0;\n\
    \  local vowel_position_count6=0;\n  local vowel_position_count7=0;\n  local vowel_position_count8=0;\n\
    \  local vowel_position_count9=0;\n  local vowel_position_count10=0;\n  local\
    \ vowel_position_count11=0;\n  local vowel_position_count12=0;\n  local vowel_position_count13=0;\n\
    \  local vowel_position_count14=0;\n  local vowel_position_count15=0;\n  local\
    \ vowel_position_count16=0;\n  local vowel_position_count17=0;\n  local vowel_position_count18=0;\n\
    \  local vowel_position_count19=0;\n  local vowel_position_count20=0;\n  local\
    \ vowel_position_count21=0;\n  local vowel_position_count22=0;\n  local vowel_position_count23=0;\n\
    \  local vowel_position_count24=0;\n  local vowel_position_count25=0;\n  local\
    \ vowel_position_count26=0;\n  local vowel_position_count27=0;\n  local vowel_position_count28=0;\n\
    \  local vowel_position_count29=0;\n  local vowel_position_count30=0;\n  local\
    \ vowel_position_count31=0;\n  local vowel_position_count32=0;\n  local vowel_position_count33=0;\n\
    \  local vowel_position_count34=0;\n  local vowel_position_count35=0;\n  local\
    \ vowel_position_count36=0;\n  local vowel_position_count37=0;\n  local vowel_position_count38=0;\n\
    \  local vowel_position_count39=0;\n  local vowel_position_count40=0;\n  local\
    \ vowel_position_count41=0;\n  local vowel_position_count42=0;\n  local vowel_position_count43=0;\n\
    \  local vowel_position_count44=0;\n  local vowel_position_count45=0;\n  local\
    \ vowel_position_count46=0;\n  local vowel_position_count47=0;\n  local vowel_position_count48=0;\n\
    \  local vowel_position_count49=0;\n  local vowel_position_count50=0;\n  local\
    \ vowel_position_count51=0;\n  local vowel_position_count52=0;\n  local vowel_position_count53=0;\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowel_positions=()\n    local vowel_positions_count=()\n\
    \    local vowel_positions_count_max=()\n    local vowel_positions_count_min=()\n\
    \    local vowel_positions_count_max_index=()\n    local vowel_positions_count_min_index=()\n\
    \    local vowel_positions_count_max_value=()\n    local vowel_positions_count_min_value=()\n\
    \    local vowel_positions_count_max_value_max=()\n    local vowel_positions_count_min_value_min=()\n\
    \    local vowel_positions_count_max_value_min_index=()\n    local vowel_positions_count_min_value_min_index=()\n\
    \    local vowel_positions_count_max_value_min_value=()\n    local vowel_positions_count_min_value_min_value=()\n\
    \    local vowel_positions_count_max_value_min_value_max=()\n    local vowel_positions_count_min_value_min_value_min_index=()\n\
    \    local vowel_positions_count_min_value_min_value_min_index=()\n    local vowel_positions_count_max_value_min_value_min_value=()\n\
    \    local vowel_positions_count_min_value_min_value_min_value=()\n    local vowel_positions_count_max_value_min_value_min_value_max=()\n\
    \    local vowel_positions_count_min_value_min_value_min_value_min_index=()\n\
    \    local vowel_positions_count_min_value_min_value_min_value_min_index=()\n\
    \    local vowel_positions_count_max_value_min_value_min_value_min_value=()\n\
    \    local vowel_positions_count_min_value_min_value_min_value_min_value=()\n\
    \    local vowel_positions_count_max_value_min_value_min_value_min_value_max=()\n\
    \    local vowel_positions_count_min_value_min_value_min_value_min_value_min_index=()\n\
    \    local vowel_positions_count_min_value_min_value_min_value_min_value_min_index=()\n\
    \    local vowel_positions_count_max_value_min_value_min_value_min_value_min_value=()\n\
    \    local vowel_positions_count_min_value_min_value_min_value_min_value_min_value=()\n\
    \    local vowel_positions_count_max_value_min_value_min_value_min_value_min_value_max=()\n\
    \    local vowel_positions_count_min_value_min_value_min_value_min_value_min_value_min_index=()\n\
    \    local vowel_positions_count_min_value_min_value_min_value_min_value_min_value_min_index=()\n\
    \    local vowel_positions_count_max_value_min_value_min_value_min_value_min_value_min_value=()\n\
    \    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo \"$vowels\" | wc -l);\n    local\
    \ vowels_count_2=$(echo \"$vowels\" | wc -l | awk '{print $1}');\n    local vowels_count_3=$(echo\
    \ \"$vowels\" | wc -l | awk '{print $2}');\n    local vowels_count_4=$(echo \"\
    $vowels\" | wc -l | awk '{print $3}');\n    local vowels_count_5=$(echo \"$vowels\"\
    \ | wc -l | awk '{print $4}');\n    local vowels_count_6=$(echo \"$vowels\" |\
    \ wc -l | awk '{print $5}');\n    local vowels_count_7=$(echo \"$vowels\" | wc\
    \ -l | awk '{print $6}');\n    local vowels_count_8=$(echo \"$vowels\" | wc -l\
    \ | awk '{print $7}');\n    local vowels_count_9=$(echo \"$vowels\" | wc -l |\
    \ awk '{print $8}');\n    local vowels_count_10=$(echo \"$vowels\" | wc -l | awk\
    \ '{print $9}');\n    local vowels_count_11=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $10}');\n    local vowels_count_12=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $11}');\n    local vowels_count_13=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $12}');\n    local vowels_count_14=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $13}');\n    local vowels_count_15=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $14}');\n    local vowels_count_16=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $15}');\n    local vowels_count_17=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $16}');\n    local vowels_count_18=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $17}');\n    local vowels_count_19=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $18}');\n    local vowels_count_20=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $19}');\n    local vowels_count_21=$(echo \"$vowels\" | w\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxfste2na.sh: line 40: unexpected EOF while looking for matching
    `)''

    /tmp/tmpxfste2na.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local string=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found_index3=0\n    local vowel_found_index4=0\n    local vowel_found_index5=0\n\
    \    local vowel_found_index6=0\n    local vowel_found_index7=0\n    local vowel_found_index8=0\n\
    \    local vowel_found_index9=0\n    local vowel_found_index10=0\n    local vowel_found_index11=0\n\
    \    local vowel_found_index12=0\n    local vowel_found_index13=0\n    local vowel_found_index14=0\n\
    \    local vowel_found_index15=0\n    local vowel_found_index16=0\n    local vowel_found_index17=0\n\
    \    local vowel_found_index18=0\n    local vowel_found_index19=0\n    local vowel_found_index20=0\n\
    \    local vowel_found_index21=0\n    local vowel_found_index22=0\n    local vowel_found_index23=0\n\
    \    local vowel_found_index24=0\n    local vowel_found_index25=0\n    local vowel_found_index26=0\n\
    \    local vowel_found_index27=0\n    local vowel_found_index28=0\n    local vowel_found_index29=0\n\
    \    local vowel_found_index30=0\n    local vowel_found_index31=0\n    local vowel_found_index32=0\n\
    \    local vowel_found_index33=0\n    local vowel_found_index34=0\n    local vowel_found_index35=0\n\
    \    local vowel_found_index36=0\n    local vowel_found_index37=0\n    local vowel_found_index38=0\n\
    \    local vowel_found_index39=0\n    local vowel_found_index40=0\n    local vowel_found_index41=0\n\
    \    local vowel_found_index42=0\n    local vowel_found_index43=0\n    local vowel_found_index44=0\n\
    \    local vowel_found_index45=0\n    local vowel_found_index46=0\n    local vowel_found_index47=0\n\
    \    local vowel_found_index48=0\n    local vowel_found_index49=0\n    local vowel_found_index50=0\n\
    \    local vowel_found_index51=0\n    local vowel_found_index52=0\n    local vowel_found_index53=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=\"$1\"\n  local vowel_found=\"\"\n  local vowel_position=\"\
    \"\n  local vowel_position_count=0\n  local vowel_position_count2=0\n  local vowel_position_count3=0\n\
    \  local vowel_position_count4=0\n  local vowel_position_count5=0\n  local vowel_position_count6=0\n\
    \  local vowel_position_count7=0\n  local vowel_position_count8=0\n  local vowel_position_count9=0\n\
    \  local vowel_position_count10=0\n  local vowel_position_count11=0\n  local vowel_position_count12=0\n\
    \  local vowel_position_count13=0\n  local vowel_position_count14=0\n  local vowel_position_count15=0\n\
    \  local vowel_position_count16=0\n  local vowel_position_count17=0\n  local vowel_position_count18=0\n\
    \  local vowel_position_count19=0\n  local vowel_position_count20=0\n  local vowel_position_count21=0\n\
    \  local vowel_position_count22=0\n  local vowel_position_count23=0\n  local vowel_position_count24=0\n\
    \  local vowel_position_count25=0\n  local vowel_position_count26=0\n  local vowel_position_count27=0\n\
    \  local vowel_position_count28=0\n  local vowel_position_count29=0\n  local vowel_position_count30=0\n\
    \  local vowel_position_count31=0\n  local vowel_position_count32=0\n  local vowel_position_count33=0\n\
    \  local vowel_position_count34=0\n  local vowel_position_count35=0\n  local vowel_position_count36=0\n\
    \  local vowel_position_count37=0\n  local vowel_position_count38=0\n  local vowel_position_count39=0\n\
    \  local vowel_position_count40=0\n  local vowel_position_count41=0\n  local vowel_position_count42=0\n\
    \  local vowel_position_count43=0\n  local vowel_position_count44=0\n  local vowel_position_count45=0\n\
    \  local vowel_position_count46=0\n  local vowel_position_count47=0\n  local vowel_position_count48=0\n\
    \  local vowel_position_count49=0\n  local vowel_position_count50=0\n  local vowel_position_count51=0\n\
    \  local vowel_position_count52=0\n  local vowel_position_count53=0\n  local vowel_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_index=$((${#word} - 1));\n  local\
    \ vowel_found=\"\";\n  local vowel_found_index=0;\n  local vowel_found_indexes=\"\
    \";\n  local vowel_found_indexes_count=\"\";\n  local vowel_found_indexes_count_temp=\"\
    \";\n  local vowel_found_indexes_count_temp2=\"\";\n  local vowel_found_indexes_count_temp3=\"\
    \";\n  local vowel_found_indexes_count_temp4=\"\";\n  local vowel_found_indexes_count_temp5=\"\
    \";\n  local vowel_found_indexes_count_temp6=\"\";\n  local vowel_found_indexes_count_temp7=\"\
    \";\n  local vowel_found_indexes_count_temp8=\"\";\n  local vowel_found_indexes_count_temp9=\"\
    \";\n  local vowel_found_indexes_count_temp10=\"\";\n  local vowel_found_indexes_count_temp11=\"\
    \";\n  local vowel_found_indexes_count_temp12=\"\";\n  local vowel_found_indexes_count_temp13=\"\
    \";\n  local vowel_found_indexes_count_temp14=\"\";\n  local vowel_found_indexes_count_temp15=\"\
    \";\n  local vowel_found_indexes_count_temp16=\"\";\n  local vowel_found_indexes_count_temp17=\"\
    \";\n  local vowel_found_indexes_count_temp18=\"\";\n  local vowel_found_indexes_count_temp19=\"\
    \";\n  local vowel_found_indexes_count_temp20=\"\";\n  local vowel_found_indexes_count_temp21=\"\
    \";\n  local vowel_found_indexes_count_temp22=\"\";\n  local vowel_found_indexes_count_temp23=\"\
    \";\n  local vowel_found_indexes_count_temp24=\"\";\n  local vowel_found_indexes_count_temp25=\"\
    \";\n  local vowel_found_indexes_count_temp26=\"\";\n  local vowel_found_indexes_count_temp27=\"\
    \";\n  local vowel_found_indexes_count_temp28=\"\";\n  local vowel_found_indexes_count_temp29=\"\
    \";\n  local vowel_found_indexes_count_temp30=\"\";\n  local vowel_found_indexes_count_temp31=\"\
    \";\n  local vowel_found_indexes_count_temp32=\"\";\n  local vowel_found_indexes_count_temp33=\"\
    \";\n  local vowel_found_indexes_count_temp34=\"\";\n  local vowel_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local vowels_count=$(echo $vowels | wc -w)\n  local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_3=$(echo $vowels | wc -w)\n  local vowels_count_4=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_5=$(echo $vowels | wc -w)\n  local vowels_count_6=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_7=$(echo $vowels | wc -w)\n  local vowels_count_8=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_9=$(echo $vowels | wc -w)\n  local vowels_count_10=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_11=$(echo $vowels | wc -w)\n  local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_13=$(echo $vowels | wc -w)\n  local vowels_count_14=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_15=$(echo $vowels | wc -w)\n  local vowels_count_16=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_17=$(echo $vowels | wc -w)\n  local vowels_count_18=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_19=$(echo $vowels | wc -w)\n  local vowels_count_20=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_21=$(echo $vowels | wc -w)\n  local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_23=$(echo $vowels | wc -w)\n  local vowels_count_24=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_25=$(echo $vowels | wc -w)\n  local vowels_count_26=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_27=$(echo $vowels | wc -w)\n  local vowels_count_28=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_29=$(echo $vowels | wc -w)\n  local vowels_count_30=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_31=$(echo $vowels | wc -w)\n  local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_33=$(echo $vowels | wc -w)\n  local vowels_count_34\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n\
    \    local vowels=\"a e i o u y\"\n    local vowels_count=${#vowels}\n    local\
    \ vowels_count_2=${#vowels}\n    local vowels_count_3=${#vowels}\n    local vowels_count_4=${#vowels}\n\
    \    local vowels_count_5=${#vowels}\n    local vowels_count_6=${#vowels}\n  \
    \  local vowels_count_7=${#vowels}\n    local vowels_count_8=${#vowels}\n    local\
    \ vowels_count_9=${#vowels}\n    local vowels_count_10=${#vowels}\n    local vowels_count_11=${#vowels}\n\
    \    local vowels_count_12=${#vowels}\n    local vowels_count_13=${#vowels}\n\
    \    local vowels_count_14=${#vowels}\n    local vowels_count_15=${#vowels}\n\
    \    local vowels_count_16=${#vowels}\n    local vowels_count_17=${#vowels}\n\
    \    local vowels_count_18=${#vowels}\n    local vowels_count_19=${#vowels}\n\
    \    local vowels_count_20=${#vowels}\n    local vowels_count_21=${#vowels}\n\
    \    local vowels_count_22=${#vowels}\n    local vowels_count_23=${#vowels}\n\
    \    local vowels_count_24=${#vowels}\n    local vowels_count_25=${#vowels}\n\
    \    local vowels_count_26=${#vowels}\n    local vowels_count_27=${#vowels}\n\
    \    local vowels_count_28=${#vowels}\n    local vowels_count_29=${#vowels}\n\
    \    local vowels_count_30=${#vowels}\n    local vowels_count_31=${#vowels}\n\
    \    local vowels_count_32=${#vowels}\n    local vowels_count_33=${#vowels}\n\
    \    local vowels_count_34=${#vowels}\n    local vowels_count_35=${#vowels}\n\
    \    local vowels_count_36=${#vowels}\n    local vowels_count_37=${#vowels}\n\
    \    local vowels_count_38=${#vowels}\n    local vowels_count_39=${#vowels}\n\
    \    local vowels_count_40=${#vowels}\n    local vowels_count_41=${#vowels}\n\
    \    local vowels_count_42=${#vowels}\n    local vowels_count_43=${#vowels}\n\
    \    local vowels_count_44=${#vowels}\n    local vowels_count_45=${#vowels}\n\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels}\n    local vowels_str=\"\"\n  \
    \  local vowels_str_len=0\n    local vowels_str_len2=0\n    local vowels_str_len3=0\n\
    \    local vowels_str_len4=0\n    local vowels_str_len5=0\n    local vowels_str_len6=0\n\
    \    local vowels_str_len7=0\n    local vowels_str_len8=0\n    local vowels_str_len9=0\n\
    \    local vowels_str_len10=0\n    local vowels_str_len11=0\n    local vowels_str_len12=0\n\
    \    local vowels_str_len13=0\n    local vowels_str_len14=0\n    local vowels_str_len15=0\n\
    \    local vowels_str_len16=0\n    local vowels_str_len17=0\n    local vowels_str_len18=0\n\
    \    local vowels_str_len19=0\n    local vowels_str_len20=0\n    local vowels_str_len21=0\n\
    \    local vowels_str_len22=0\n    local vowels_str_len23=0\n    local vowels_str_len24=0\n\
    \    local vowels_str_len25=0\n    local vowels_str_len26=0\n    local vowels_str_len27=0\n\
    \    local vowels_str_len28=0\n    local vowels_str_len29=0\n    local vowels_str_len30=0\n\
    \    local vowels_str_len31=0\n    local vowels_str_len32=0\n    local vowels_str_len33=0\n\
    \    local vowels_str_len34=0\n    local vowels_str_len35=0\n    local vowels_str_len36=0\n\
    \    local vowels_str_len37=0\n    local vowels_str_len38=0\n    local vowels_str_len39=0\n\
    \    local vowels_str_len40=0\n    local vowels_str_len41=0\n    local vowels_str_len42=0\n\
    \    local vowels_str_len43=0\n    local vowels_str_len44=0\n    local vowels_str_len45=0\n\
    \    local vowels_str_len46=0\n    local vowels_str_len47=0\n    local vowels_str_len48=0\n\
    \    local vowels_str_len49=0\n    local vowels_str_len50=0\n    local vowels_str_len51=0\n\
    \    local vowels_str_len52=0\n    local vowels_str_len53=0\n    local vowels_str_len54=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_index=$((${#word} - 1));\n\
    \    local vowel_found=false;\n    local vowel_found_index=0;\n    local vowel_found_index2=0;\n\
    \    local vowel_found_index3=1;\n    local vowel_found_index4=2;\n    local vowel_found_index5=3;\n\
    \    local vowel_found_index6=4;\n    local vowel_found_index7=5;\n    local vowel_found_index8=6;\n\
    \    local vowel_found_index9=7;\n    local vowel_found_index10=8;\n    local\
    \ vowel_found_index11=9;\n    local vowel_found_index12=10;\n    local vowel_found_index13=11;\n\
    \    local vowel_found_index14=12;\n    local vowel_found_index15=13;\n    local\
    \ vowel_found_index16=14;\n    local vowel_found_index17=15;\n    local vowel_found_index18=16;\n\
    \    local vowel_found_index19=17;\n    local vowel_found_index20=18;\n    local\
    \ vowel_found_index21=19;\n    local vowel_found_index22=20;\n    local vowel_found_index23=21;\n\
    \    local vowel_found_index24=22;\n    local vowel_found_index25=23;\n    local\
    \ vowel_found_index26=24;\n    local vowel_found_index27=25;\n    local vowel_found_index28=26;\n\
    \    local vowel_found_index29=27;\n    local vowel_found_index30=28;\n    local\
    \ vowel_found_index31=29;\n    local vowel_found_index32=30;\n    local vowel_found_index33=31;\n\
    \    local vowel_found_index34=32;\n    local vowel_found_index35=33;\n    local\
    \ vowel_found_index36=34;\n    local vowel_found_index37=35;\n    local vowel_found_index38=36;\n\
    \    local vowel_found_index39=37;\n    local vowel_found_index40=38;\n    local\
    \ vowel_found_index41=39;\n    local vowel_found_index42=40;\n    local vowel_found_index43=41;\n\
    \    local vowel_found_index44=42;\n    local vowel_found_index45=43;\n    local\
    \ vowel_found_index\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local string=\"$1\"\n    local vowel_found=\"\"\n    local\
    \ vowel_position=\"\"\n    local vowel_position_count=0\n    local vowel_position_index=0\n\
    \    local vowel_position_index2=0\n    local vowel_position_index3=0\n    local\
    \ vowel_position_index4=0\n    local vowel_position_index5=0\n    local vowel_position_index6=0\n\
    \    local vowel_position_index7=0\n    local vowel_position_index8=0\n    local\
    \ vowel_position_index9=0\n    local vowel_position_index10=0\n    local vowel_position_index11=0\n\
    \    local vowel_position_index12=0\n    local vowel_position_index13=0\n    local\
    \ vowel_position_index14=0\n    local vowel_position_index15=0\n    local vowel_position_index16=0\n\
    \    local vowel_position_index17=0\n    local vowel_position_index18=0\n    local\
    \ vowel_position_index19=0\n    local vowel_position_index20=0\n    local vowel_position_index21=0\n\
    \    local vowel_position_index22=0\n    local vowel_position_index23=0\n    local\
    \ vowel_position_index24=0\n    local vowel_position_index25=0\n    local vowel_position_index26=0\n\
    \    local vowel_position_index27=0\n    local vowel_position_index28=0\n    local\
    \ vowel_position_index29=0\n    local vowel_position_index30=0\n    local vowel_position_index31=0\n\
    \    local vowel_position_index32=0\n    local vowel_position_index33=0\n    local\
    \ vowel_position_index34=0\n    local vowel_position_index35=0\n    local vowel_position_index36=0\n\
    \    local vowel_position_index37=0\n    local vowel_position_index38=0\n    local\
    \ vowel_position_index39=0\n    local vowel_position_index40=0\n    local vowel_position_index41=0\n\
    \    local vowel_position_index42=0\n    local vowel_position_index43=0\n    local\
    \ vowel_position_index44=0\n    local vowel_position_index45=0\n    local vowel_position_index46=0\n\
    \    local vowel_position_index47=0\n    local vowel_position_index48=0\n    local\
    \ vowel_position_index49=0\n    local vowel_position_index50=0\n    local vowel_position_index51=0\n\
    \    local vowel_position_index52=0\n    local vowel_position\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local string=\"$1\"\n    local vowel\n    local vowel_index\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n\
    \    local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local vowel_found_index60\n    local \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\"\n  local word=$1\n  local vowel\n  local vowel_count\n  local vowel_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found_index2\n\
    \  local vowel_found_index3\n  local vowel_found_index4\n  local vowel_found_index5\n\
    \  local vowel_found_index6\n  local vowel_found_index7\n  local vowel_found_index8\n\
    \  local vowel_found_index9\n  local vowel_found_index10\n  local vowel_found_index11\n\
    \  local vowel_found_index12\n  local vowel_found_index13\n  local vowel_found_index14\n\
    \  local vowel_found_index15\n  local vowel_found_index16\n  local vowel_found_index17\n\
    \  local vowel_found_index18\n  local vowel_found_index19\n  local vowel_found_index20\n\
    \  local vowel_found_index21\n  local vowel_found_index22\n  local vowel_found_index23\n\
    \  local vowel_found_index24\n  local vowel_found_index25\n  local vowel_found_index26\n\
    \  local vowel_found_index27\n  local vowel_found_index28\n  local vowel_found_index29\n\
    \  local vowel_found_index30\n  local vowel_found_index31\n  local vowel_found_index32\n\
    \  local vowel_found_index33\n  local vowel_found_index34\n  local vowel_found_index35\n\
    \  local vowel_found_index36\n  local vowel_found_index37\n  local vowel_found_index38\n\
    \  local vowel_found_index39\n  local vowel_found_index40\n  local vowel_found_index41\n\
    \  local vowel_found_index42\n  local vowel_found_index43\n  local vowel_found_index44\n\
    \  local vowel_found_index45\n  local vowel_found_index46\n  local vowel_found_index47\n\
    \  local vowel_found_index48\n  local vowel_found_index49\n  local vowel_found_index50\n\
    \  local vowel_found_index51\n  local vowel_found_index52\n  local vowel_found_index53\n\
    \  local vowel_found_index54\n  local vowel_found_index55\n  local vowel_found_index56\n\
    \  local vowel_found_index57\n  local vowel_found_index58\n  local vowel_found_index59\n\
    \  local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n\
    \    local vowels=\"a e i o u y\" \n    local vowel_count=$(echo $vowels | wc\
    \ -w)\n    local vowel_found=\"\"\n    local vowel_position=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count2=0\n    local vowel_position_count3=0\n    local\
    \ vowel_position_count4=0\n    local vowel_position_count5=0\n    local vowel_position_count6=0\n\
    \    local vowel_position_count7=0\n    local vowel_position_count8=0\n    local\
    \ vowel_position_count9=0\n    local vowel_position_count10=0\n    local vowel_position_count11=0\n\
    \    local vowel_position_count12=0\n    local vowel_position_count13=0\n    local\
    \ vowel_position_count14=0\n    local vowel_position_count15=0\n    local vowel_position_count16=0\n\
    \    local vowel_position_count17=0\n    local vowel_position_count18=0\n    local\
    \ vowel_position_count19=0\n    local vowel_position_count20=0\n    local vowel_position_count21=0\n\
    \    local vowel_position_count22=0\n    local vowel_position_count23=0\n    local\
    \ vowel_position_count24=0\n    local vowel_position_count25=0\n    local vowel_position_count26=0\n\
    \    local vowel_position_count27=0\n    local vowel_position_count28=0\n    local\
    \ vowel_position_count29=0\n    local vowel_position_count30=0\n    local vowel_position_count31=0\n\
    \    local vowel_position_count32=0\n    local vowel_position_count33=0\n    local\
    \ vowel_position_count34=0\n    local vowel_position_count35=0\n    local vowel_position_count36=0\n\
    \    local vowel_position_count37=0\n    local vowel_position_count38=0\n    local\
    \ vowel_position_count39=0\n    local vowel_position_count40=0\n    local vowel_position_count41=0\n\
    \    local vowel_position_count42=0\n    local vowel_position_count43=0\n    local\
    \ vowel_position_count44=0\n    local vowel_position_count45=0\n    local vowel_position_count46=0\n\
    \    local vowel_position_count47=0\n    local vowel_position_count48=0\n    local\
    \ vowel_position_count49=0\n    local vowel_position_count50=0\n    local vowel_position_count51=0\n\
    \    local vowel_position_count52=0\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel_found=\"\"\n    local vowel_found_index=0\n\
    \    local vowel_index=0\n    local consonant_index=0\n    local consonant_found=\"\
    \"\n    local consonant_found_index=0\n    local consonant_count=0\n    local\
    \ consonant_count2=0\n    local consonant_count3=0\n    local consonant_count4=0\n\
    \    local consonant_count5=0\n    local consonant_count6=0\n    local consonant_count7=0\n\
    \    local consonant_count8=0\n    local consonant_count9=0\n    local consonant_count10=0\n\
    \    local consonant_count11=0\n    local consonant_count12=0\n    local consonant_count13=0\n\
    \    local consonant_count14=0\n    local consonant_count15=0\n    local consonant_count16=0\n\
    \    local consonant_count17=0\n    local consonant_count18=0\n    local consonant_count19=0\n\
    \    local consonant_count20=0\n    local consonant_count21=0\n    local consonant_count22=0\n\
    \    local consonant_count23=0\n    local consonant_count24=0\n    local consonant_count25=0\n\
    \    local consonant_count26=0\n    local consonant_count27=0\n    local consonant_count28=0\n\
    \    local consonant_count29=0\n    local consonant_count30=0\n    local consonant_count31=0\n\
    \    local consonant_count32=0\n    local consonant_count33=0\n    local consonant_count34=0\n\
    \    local consonant_count35=0\n    local consonant_count36=0\n    local consonant_count37=0\n\
    \    local consonant_count38=0\n    local consonant_count39=0\n    local consonant_count40=0\n\
    \    local consonant_count41=0\n    local consonant_count42=0\n    local consonant_count43=0\n\
    \    local consonant_count44=0\n    local consonant_count45=0\n    local consonant_count46=0\n\
    \    local consonant_count47=0\n    local consonant_count48=0\n    local consonant_count49=0\n\
    \    local consonant_count50=0\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local string=\"\
    $1\"\n  local vowels=\"a e i o u\"\n  local vowels_count=${#vowels[@]}\n  local\
    \ vowels_count_from_right=${#string[@]}\n  local vowels_count_from_left=${#string[@]}\
    \ - ${#vowels[@]}\n  local vowels_count_from_left2=$(( ${#string[@]} - ${#vowels[@]}\
    \ ))\n  local vowels_count_from_right2=$(( ${#string[@]} - ${#vowels[@]} ))\n\
    \  local vowels_count_from_left3=$(( ${#string[@]} - ${#vowels[@]} ))\n  local\
    \ vowels_count_from_right3=$(( ${#string[@]} - ${#vowels[@]} ))\n  local vowels_count_from_left4=$((\
    \ ${#string[@]} - ${#vowels[@]} ))\n  local vowels_count_from_right4=$(( ${#string[@]}\
    \ - ${#vowels[@]} ))\n  local vowels_count_from_left5=$(( ${#string[@]} - ${#vowels[@]}\
    \ ))\n  local vowels_count_from_right5=$(( ${#string[@]} - ${#vowels[@]} ))\n\
    \  local vowels_count_from_left6=$(( ${#string[@]} - ${#vowels[@]} ))\n  local\
    \ vowels_count_from_right6=$(( ${#string[@]} - ${#vowels[@]} ))\n  local vowels_count_from_left7=$((\
    \ ${#string[@]} - ${#vowels[@]} ))\n  local vowels_count_from_right7=$(( ${#string[@]}\
    \ - ${#vowels[@]} ))\n  local vowels_count_from_left8=$(( ${#string[@]} - ${#vowels[@]}\
    \ ))\n  local vowels_count_from_right8=$(( ${#string[@]} - ${#vowels[@]} ))\n\
    \  local vowels_count_from_left9=$(( ${#string[@]} - ${#vowels[@]} ))\n  local\
    \ vowels_count_from_right9=$(( ${#string[@]} - ${#vowels[@]} ))\n  local vowels_count_from_left10=$((\
    \ ${#string[@]} - ${#vowels[@]} ))\n  local vowels_count_from_right10=$\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps4jqnknh.sh: line 23: local: `1'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels}\n    local vowels_string=${vowels}\n\
    \    local vowels_string_count=${#vowels_string}\n    local vowels_string_index=0\n\
    \    local vowels_string_index_count=${#vowels_string}\n    local vowels_string_index_count2=0\n\
    \    local vowels_string_index_count3=0\n    local vowels_string_index_count4=0\n\
    \    local vowels_string_index_count5=0\n    local vowels_string_index_count6=0\n\
    \    local vowels_string_index_count7=0\n    local vowels_string_index_count8=0\n\
    \    local vowels_string_index_count9=0\n    local vowels_string_index_count10=0\n\
    \    local vowels_string_index_count11=0\n    local vowels_string_index_count12=0\n\
    \    local vowels_string_index_count13=0\n    local vowels_string_index_count14=0\n\
    \    local vowels_string_index_count15=0\n    local vowels_string_index_count16=0\n\
    \    local vowels_string_index_count17=0\n    local vowels_string_index_count18=0\n\
    \    local vowels_string_index_count19=0\n    local vowels_string_index_count20=0\n\
    \    local vowels_string_index_count21=0\n    local vowels_string_index_count22=0\n\
    \    local vowels_string_index_count23=0\n    local vowels_string_index_count24=0\n\
    \    local vowels_string_index_count25=0\n    local vowels_string_index_count26=0\n\
    \    local vowels_string_index_count27=0\n    local vowels_string_index_count28=0\n\
    \    local vowels_string_index_count29=0\n    local vowels_string_index_count30=0\n\
    \    local vowels_string_index_count31=0\n    local vowels_string_index_count32=0\n\
    \    local vowels_string_index_count33=0\n    local vowels_string_index_count34=0\n\
    \    local vowels_string_index_count35=0\n    local vowels_string_index_count36=0\n\
    \    local vowels_string_index_count37=0\n    local vowels_string_index_count38=0\n\
    \    local vowels_string_index_count39=0\n    local vowels_string_index_count40=0\n\
    \    local vowels_string_index_count41=0\n    local vowels_string_index_count42=0\n\
    \    local vowels_string_index_count43=0\n    local vowels_string_index_count44=0\n\
    \    local vowels_string_index_count45=0\n    local vowels_string_index_count46=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local vowels_count=$(echo $vowels | wc -w)\n  local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_3=$(echo $vowels | wc -w)\n  local vowels_count_4=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_5=$(echo $vowels | wc -w)\n  local vowels_count_6=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_7=$(echo $vowels | wc -w)\n  local vowels_count_8=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_9=$(echo $vowels | wc -w)\n  local vowels_count_10=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_11=$(echo $vowels | wc -w)\n  local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_13=$(echo $vowels | wc -w)\n  local vowels_count_14=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_15=$(echo $vowels | wc -w)\n  local vowels_count_16=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_17=$(echo $vowels | wc -w)\n  local vowels_count_18=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_19=$(echo $vowels | wc -w)\n  local vowels_count_20=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_21=$(echo $vowels | wc -w)\n  local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_23=$(echo $vowels | wc -w)\n  local vowels_count_24=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_25=$(echo $vowels | wc -w)\n  local vowels_count_26=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_27=$(echo $vowels | wc -w)\n  local vowels_count_28=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_29=$(echo $vowels | wc -w)\n  local vowels_count_30=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_31=$(echo $vowels | wc -w)\n  local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_33=$(echo $vowels | wc -w)\n  local vowels_count_34\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=\"$1\"\n    local vowel\n    local vowel_pos\n   \
    \ local vowel_pos2\n    local vowel_pos3\n    local vowel_pos4\n    local vowel_pos5\n\
    \    local vowel_pos6\n    local vowel_pos7\n    local vowel_pos8\n    local vowel_pos9\n\
    \    local vowel_pos10\n    local vowel_pos11\n    local vowel_pos12\n    local\
    \ vowel_pos13\n    local vowel_pos14\n    local vowel_pos15\n    local vowel_pos16\n\
    \    local vowel_pos17\n    local vowel_pos18\n    local vowel_pos19\n    local\
    \ vowel_pos20\n    local vowel_pos21\n    local vowel_pos22\n    local vowel_pos23\n\
    \    local vowel_pos24\n    local vowel_pos25\n    local vowel_pos26\n    local\
    \ vowel_pos27\n    local vowel_pos28\n    local vowel_pos29\n    local vowel_pos30\n\
    \    local vowel_pos31\n    local vowel_pos32\n    local vowel_pos33\n    local\
    \ vowel_pos34\n    local vowel_pos35\n    local vowel_pos36\n    local vowel_pos37\n\
    \    local vowel_pos38\n    local vowel_pos39\n    local vowel_pos40\n    local\
    \ vowel_pos41\n    local vowel_pos42\n    local vowel_pos43\n    local vowel_pos44\n\
    \    local vowel_pos45\n    local vowel_pos46\n    local vowel_pos47\n    local\
    \ vowel_pos48\n    local vowel_pos49\n    local vowel_pos50\n    local vowel_pos51\n\
    \    local vowel_pos52\n    local vowel_pos53\n    local vowel_pos54\n    local\
    \ vowel_pos55\n    local vowel_pos56\n    local vowel_pos57\n    local vowel_pos58\n\
    \    local vowel_pos59\n    local vowel_pos60\n    local vowel_pos61\n    local\
    \ vowel_pos62\n    local vowel_pos63\n    local vowel_pos64\n    local vowel_pos65\n\
    \    local vowel_pos66\n    local vowel_pos67\n    local vowel_pos68\n    local\
    \ vowel_pos69\n    local vowel_pos70\n    local vowel\n}\n\ncandidate() {\n  \
    \  get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_positions=\"\";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_founds=\"\
    \";\n  local vowel_positions=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_founds=\"\
    \";\n  local vowel_positions=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_founds=\"\
    \";\n  local vowel_positions=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_founds=\"\
    \";\n  local vowel_positions=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_founds=\"\
    \";\n  local vowel_positions=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_founds=\"\";\n  local vowel_positions=\"\";\n  local vowel_found=\"\
    \"\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=0;\n\
    \    local vowel_found_index=0;\n    local vowel_found_index=0;\n    local vowel_found_index=\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u\"\n  local input=\"$1\"\n  local output=\"\"\n  local count=0\n  local\
    \ vowel_count=0\n  local vowel_index=0\n  local consonant_index=0\n  local consonant_count=0\n\
    \  local consonant_letter=\"\"\n  local consonant_letter_index=0\n  local consonant_letter_count=0\n\
    \  local consonant_letter_count2=0\n  local consonant_letter_count3=0\n  local\
    \ consonant_letter_count4=0\n  local consonant_letter_count5=0\n  local consonant_letter_count6=0\n\
    \  local consonant_letter_count7=0\n  local consonant_letter_count8=0\n  local\
    \ consonant_letter_count9=0\n  local consonant_letter_count10=0\n  local consonant_letter_count11=0\n\
    \  local consonant_letter_count12=0\n  local consonant_letter_count13=0\n  local\
    \ consonant_letter_count14=0\n  local consonant_letter_count15=0\n  local consonant_letter_count16=0\n\
    \  local consonant_letter_count17=0\n  local consonant_letter_count18=0\n  local\
    \ consonant_letter_count19=0\n  local consonant_letter_count20=0\n  local consonant_letter_count21=0\n\
    \  local consonant_letter_count22=0\n  local consonant_letter_count23=0\n  local\
    \ consonant_letter_count24=0\n  local consonant_letter_count25=0\n  local consonant_letter_count26=0\n\
    \  local consonant_letter_count27=0\n  local consonant_letter_count28=0\n  local\
    \ consonant_letter_count29=0\n  local consonant_letter_count30=0\n  local consonant_letter_count31=0\n\
    \  local consonant_letter_count32=0\n  local consonant_letter_count33=0\n  local\
    \ consonant_letter_count34=0\n  local consonant_letter_count35=0\n  local consonant_letter_count36=0\n\
    \  local consonant_letter_count37=0\n  local consonant_letter_count38=0\n  local\
    \ consonant_letter_count39=0\n  local consonant_letter_count40=0\n  local consonant_letter_count41=0\n\
    \  local consonant_letter_count42=0\n  local consonant_letter_count43=0\n  local\
    \ consonant_letter_count44=0\n  local \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel\n    local vowel_count=0\n   \
    \ local vowel_found\n    local vowel_found_index\n    local vowel_index\n    local\
    \ vowel_length\n    local vowel_length_index\n    local vowel_length_count\n \
    \   local vowel_length_count2\n    local vowel_length_count3\n    local vowel_length_count4\n\
    \    local vowel_length_count5\n    local vowel_length_count6\n    local vowel_length_count7\n\
    \    local vowel_length_count8\n    local vowel_length_count9\n    local vowel_length_count10\n\
    \    local vowel_length_count11\n    local vowel_length_count12\n    local vowel_length_count13\n\
    \    local vowel_length_count14\n    local vowel_length_count15\n    local vowel_length_count16\n\
    \    local vowel_length_count17\n    local vowel_length_count18\n    local vowel_length_count19\n\
    \    local vowel_length_count20\n    local vowel_length_count21\n    local vowel_length_count22\n\
    \    local vowel_length_count23\n    local vowel_length_count24\n    local vowel_length_count25\n\
    \    local vowel_length_count26\n    local vowel_length_count27\n    local vowel_length_count28\n\
    \    local vowel_length_count29\n    local vowel_length_count30\n    local vowel_length_count31\n\
    \    local vowel_length_count32\n    local vowel_length_count33\n    local vowel_length_count34\n\
    \    local vowel_length_count35\n    local vowel_length_count36\n    local vowel_length_count37\n\
    \    local vowel_length_count38\n    local vowel_length_count39\n    local vowel_length_count40\n\
    \    local vowel_length_count41\n    local vowel_length_count42\n    local vowel_length_count43\n\
    \    local vowel_length_count44\n    local vowel_length_count45\n    local vowel_length_count46\n\
    \    local vowel_length_count47\n    local vowel_length_count48\n    local vowel_length_count49\n\
    \    local vowel_length_count50\n    local vowel_length_count51\n    local vowel_length_count52\n\
    \    local vowel_length_count53\n    local vowel_length_count54\n    local vowel_length_count55\n\
    \    local vowel_length_count56\n    local vowel_length_count57\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=0;\n\
    \  local vowel_found_index=0;\n  local vowel_found_index=0;\n  local vowel_found_index=\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels}\n    local vowels_string=${vowels}\n\
    \    local vowels_string_count=${#vowels_string}\n    local vowels_string_index=0\n\
    \    local vowels_string_index2=0\n    local vowels_string_index3=0\n    local\
    \ vowels_string_index4=0\n    local vowels_string_index5=0\n    local vowels_string_index6=0\n\
    \    local vowels_string_index7=0\n    local vowels_string_index8=0\n    local\
    \ vowels_string_index9=0\n    local vowels_string_index10=0\n    local vowels_string_index11=0\n\
    \    local vowels_string_index12=0\n    local vowels_string_index13=0\n    local\
    \ vowels_string_index14=0\n    local vowels_string_index15=0\n    local vowels_string_index16=0\n\
    \    local vowels_string_index17=0\n    local vowels_string_index18=0\n    local\
    \ vowels_string_index19=0\n    local vowels_string_index20=0\n    local vowels_string_index21=0\n\
    \    local vowels_string_index22=0\n    local vowels_string_index23=0\n    local\
    \ vowels_string_index24=0\n    local vowels_string_index25=0\n    local vowels_string_index26=0\n\
    \    local vowels_string_index27=0\n    local vowels_string_index28=0\n    local\
    \ vowels_string_index29=0\n    local vowels_string_index30=0\n    local vowels_string_index31=0\n\
    \    local vowels_string_index32=0\n    local vowels_string_index33=0\n    local\
    \ vowels_string_index34=0\n    local vowels_string_index35=0\n    local vowels_string_index36=0\n\
    \    local vowels_string_index37=0\n    local vowels_string_index38=0\n    local\
    \ vowels_string_index39=0\n    local vowels_string_index40=0\n    local vowels_string_index41=0\n\
    \    local vowels_string_index42=0\n    local vowels_string_index43=0\n    local\
    \ vowels_string_index44=0\n    local vowels_string_index45=0\n    local vowels_string_index46=0\n\
    \    local vowels_string_index47=0\n    local vowels_string_index48=0\n    local\
    \ vowels_string_index49=0\n    local vowels_string_index50=0\n    local vowels_string_index51=0\n\
    \    local vowels_string_index52=0\n    local vowels_\n}\n\ncandidate() {\n  \
    \  get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowel_found=\"\"\
    ;\n    local vowel_found_index=0;\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    local vowel_found_index=0\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    local vowel_found_index=0\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    local vowel_found_index=0\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    local vowel_found_index=0\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    local vowel_found_index=0\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    local vowel_found_index=0\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    local vowel_found_index=0\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    local vowel_found_index=0\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    local vowel_found_index=0\n    local vowel_found_count=0\n    local vowel_found_index=0\n\
    \    local vowel_found_count=0\n    local vowel_found_index=0\n    local vowel_found_count=0\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel;\n    local vowel_position;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local consonant_position;\n    local consonant_count;\n\
    \    local consonant_position;\n    local consonant_count;\n    local consonant_position;\n\
    \    local consonant_count;\n    local \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_2=$(echo $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_7=$(echo $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_12=$(echo $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_17=$(echo $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_22=$(echo $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_27=$(echo $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_32=$(echo $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels\
    \ | wc -w)\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local word=$1\n    local vowel_count=0\n    local vowel_position=0\n\
    \    local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_position_index=0\n\
    \    local vowel_position_index2=0\n    local vowel_position_index3=0\n    local\
    \ vowel_position_index4=0\n    local vowel_position_index5=0\n    local vowel_position_index6=0\n\
    \    local vowel_position_index7=0\n    local vowel_position_index8=0\n    local\
    \ vowel_position_index9=0\n    local vowel_position_index10=0\n    local vowel_position_index11=0\n\
    \    local vowel_position_index12=0\n    local vowel_position_index13=0\n    local\
    \ vowel_position_index14=0\n    local vowel_position_index15=0\n    local vowel_position_index16=0\n\
    \    local vowel_position_index17=0\n    local vowel_position_index18=0\n    local\
    \ vowel_position_index19=0\n    local vowel_position_index20=0\n    local vowel_position_index21=0\n\
    \    local vowel_position_index22=0\n    local vowel_position_index23=0\n    local\
    \ vowel_position_index24=0\n    local vowel_position_index25=0\n    local vowel_position_index26=0\n\
    \    local vowel_position_index27=0\n    local vowel_position_index28=0\n    local\
    \ vowel_position_index29=0\n    local vowel_position_index30=0\n    local vowel_position_index31=0\n\
    \    local vowel_position_index32=0\n    local vowel_position_index33=0\n    local\
    \ vowel_position_index34=0\n    local vowel_position_index35=0\n    local vowel_position_index36=0\n\
    \    local vowel_position_index37=0\n    local vowel_position_index38=0\n    local\
    \ vowel_position_index39=0\n    local vowel_position_index40=0\n    local vowel_position_index41=0\n\
    \    local vowel_position_index42=0\n    local vowel_position_index43=0\n    local\
    \ vowel_position_index44=0\n    local vowel_position_index45=0\n    local vowel_position_index46=0\n\
    \    local vowel_position_index47=0\n    local vowel_position_index48=0\n    local\
    \ vowel_position_index49=0\n    local vowel_position_index50=0\n    local vowel_position_index51=0\n\
    \    local vowel_position_index52=0\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowel_found=\"\
    \"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n    local vowel_found_index3=0\n\
    \    local vowel_found_index4=0\n    local vowel_found_index5=0\n    local vowel_found_index6=0\n\
    \    local vowel_found_index7=0\n    local vowel_found_index8=0\n    local vowel_found_index9=0\n\
    \    local vowel_found_index10=0\n    local vowel_found_index11=0\n    local vowel_found_index12=0\n\
    \    local vowel_found_index13=0\n    local vowel_found_index14=0\n    local vowel_found_index15=0\n\
    \    local vowel_found_index16=0\n    local vowel_found_index17=0\n    local vowel_found_index18=0\n\
    \    local vowel_found_index19=0\n    local vowel_found_index20=0\n    local vowel_found_index21=0\n\
    \    local vowel_found_index22=0\n    local vowel_found_index23=0\n    local vowel_found_index24=0\n\
    \    local vowel_found_index25=0\n    local vowel_found_index26=0\n    local vowel_found_index27=0\n\
    \    local vowel_found_index28=0\n    local vowel_found_index29=0\n    local vowel_found_index30=0\n\
    \    local vowel_found_index31=0\n    local vowel_found_index32=0\n    local vowel_found_index33=0\n\
    \    local vowel_found_index34=0\n    local vowel_found_index35=0\n    local vowel_found_index36=0\n\
    \    local vowel_found_index37=0\n    local vowel_found_index38=0\n    local vowel_found_index39=0\n\
    \    local vowel_found_index40=0\n    local vowel_found_index41=0\n    local vowel_found_index42=0\n\
    \    local vowel_found_index43=0\n    local vowel_found_index44=0\n    local vowel_found_index45=0\n\
    \    local vowel_found_index46=0\n    local vowel_found_index47=0\n    local vowel_found_index48=0\n\
    \    local vowel_found_index49=0\n    local vowel_found_index50=0\n    local vowel_found_index51=0\n\
    \    local vowel_found_index52=0\n    local vowel_found_index53=0\n    local vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_index=\"\
    \";\n    local vowel_position=\"\";\n    local vowel_position_index=\"\";\n  \
    \  local vowel_position_index2=\"\";\n    local vowel_position_index3=\"\";\n\
    \    local vowel_position_index4=\"\";\n    local vowel_position_index5=\"\";\n\
    \    local vowel_position_index6=\"\";\n    local vowel_position_index7=\"\";\n\
    \    local vowel_position_index8=\"\";\n    local vowel_position_index9=\"\";\n\
    \    local vowel_position_index10=\"\";\n    local vowel_position_index11=\"\"\
    ;\n    local vowel_position_index12=\"\";\n    local vowel_position_index13=\"\
    \";\n    local vowel_position_index14=\"\";\n    local vowel_position_index15=\"\
    \";\n    local vowel_position_index16=\"\";\n    local vowel_position_index17=\"\
    \";\n    local vowel_position_index18=\"\";\n    local vowel_position_index19=\"\
    \";\n    local vowel_position_index20=\"\";\n    local vowel_position_index21=\"\
    \";\n    local vowel_position_index22=\"\";\n    local vowel_position_index23=\"\
    \";\n    local vowel_position_index24=\"\";\n    local vowel_position_index25=\"\
    \";\n    local vowel_position_index26=\"\";\n    local vowel_position_index27=\"\
    \";\n    local vowel_position_index28=\"\";\n    local vowel_position_index29=\"\
    \";\n    local vowel_position_index30=\"\";\n    local vowel_position_index31=\"\
    \";\n    local vowel_position_index32=\"\";\n    local vowel_position_index33=\"\
    \";\n    local vowel_position_index34=\"\";\n    local vowel_position_index35=\"\
    \";\n    local vowel_position_index36=\"\";\n    local vowel_position_index37=\"\
    \";\n    local vowel_position_index38=\"\";\n    local vowel_position_index39=\"\
    \";\n    local vowel_position_index40=\"\";\n    local vowel_position_index41=\"\
    \";\n    local vowel_position_index42=\"\";\n    local vowel_position_index43=\"\
    \";\n    local vowel_position_index44=\"\";\n    local vowel_position_index45=\"\
    \";\n    local vowel_position_index46=\"\";\n    local vowel_position_index47=\"\
    \";\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_string=${vowels//,/\
    \ };\n    local vowels_array=($vowels_string);\n    local vowels_array_count=${#vowels_array[@]};\n\
    \    local vowels_array_string=${vowels_array[@]//,/ };\n    local vowels_array_array_count=${#vowels_array_string[@]};\n\
    \    local vowels_array_array_string=${vowels_array_string[@]//,/ };\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@]};\n    local\
    \ vowels_array_array_string_count=${#vowels_array_array_string[@\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprf2asuzu.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo \"$vowels\" | wc -l);\n    local\
    \ vowels_count_2=$(echo \"$vowels\" | wc -l | awk '{print $1}');\n    local vowels_count_3=$(echo\
    \ \"$vowels\" | wc -l | awk '{print $2}');\n    local vowels_count_4=$(echo \"\
    $vowels\" | wc -l | awk '{print $3}');\n    local vowels_count_5=$(echo \"$vowels\"\
    \ | wc -l | awk '{print $4}');\n    local vowels_count_6=$(echo \"$vowels\" |\
    \ wc -l | awk '{print $5}');\n    local vowels_count_7=$(echo \"$vowels\" | wc\
    \ -l | awk '{print $6}');\n    local vowels_count_8=$(echo \"$vowels\" | wc -l\
    \ | awk '{print $7}');\n    local vowels_count_9=$(echo \"$vowels\" | wc -l |\
    \ awk '{print $8}');\n    local vowels_count_10=$(echo \"$vowels\" | wc -l | awk\
    \ '{print $9}');\n    local vowels_count_11=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $10}');\n    local vowels_count_12=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $11}');\n    local vowels_count_13=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $12}');\n    local vowels_count_14=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $13}');\n    local vowels_count_15=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $14}');\n    local vowels_count_16=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $15}');\n    local vowels_count_17=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $16}');\n    local vowels_count_18=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $17}');\n    local vowels_count_19=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $18}');\n    local vowels_count_20=$(echo \"$vowels\" | wc -l | awk '{print\
    \ $19}');\n    local vowels_count_21=$(echo \"$vowels\" | w\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxfste2na.sh: line 40: unexpected EOF while looking for matching
    `)''

    /tmp/tmpxfste2na.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_position_count=0;\n    local vowel_position_count2=0;\n \
    \   local vowel_position_count3=0;\n    local vowel_position_count4=0;\n    local\
    \ vowel_position_count5=0;\n    local vowel_position_count6=0;\n    local vowel_position_count7=0;\n\
    \    local vowel_position_count8=0;\n    local vowel_position_count9=0;\n    local\
    \ vowel_position_count10=0;\n    local vowel_position_count11=0;\n    local vowel_position_count12=0;\n\
    \    local vowel_position_count13=0;\n    local vowel_position_count14=0;\n  \
    \  local vowel_position_count15=0;\n    local vowel_position_count16=0;\n    local\
    \ vowel_position_count17=0;\n    local vowel_position_count18=0;\n    local vowel_position_count19=0;\n\
    \    local vowel_position_count20=0;\n    local vowel_position_count21=0;\n  \
    \  local vowel_position_count22=0;\n    local vowel_position_count23=0;\n    local\
    \ vowel_position_count24=0;\n    local vowel_position_count25=0;\n    local vowel_position_count26=0;\n\
    \    local vowel_position_count27=0;\n    local vowel_position_count28=0;\n  \
    \  local vowel_position_count29=0;\n    local vowel_position_count30=0;\n    local\
    \ vowel_position_count31=0;\n    local vowel_position_count32=0;\n    local vowel_position_count33=0;\n\
    \    local vowel_position_count34=0;\n    local vowel_position_count35=0;\n  \
    \  local vowel_position_count36=0;\n    local vowel_position_count37=0;\n    local\
    \ vowel_position_count38=0;\n    local vowel_position_count39=0;\n    local vowel_position_count40=0;\n\
    \    local vowel_position_count41=0;\n    local vowel_position_count42=0;\n  \
    \  local vowel_position_count43=0;\n    local vowel_position_count44=0;\n    local\
    \ vowel_position_count45=0;\n    local vowel_position_count46=0;\n    local vowel_position_count47=0;\n\
    \    local vowel_position_count48=0;\n    local vowel_position_count49=0;\n  \
    \  local vowel_position_count50=0;\n    local vowel_position_count51=0;\n    local\
    \ vowel_position_count52=0;\n    local vowel_position_count53=0;\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels[@]}\n    local vowels_string=${vowels[$((\
    \ ${#1} % ${vowels_count} ))]}\n    local vowels_string_count=$(( ${#1} / ${vowels_count}\
    \ ))\n    local vowels_string_count_minus_one=$(( ${#1} - 1 ))\n    local vowels_string_count_minus_two=$((\
    \ ${#1} - 2 ))\n    local vowels_string_count_minus_three=$(( ${#1} - 3 ))\n \
    \   local vowels_string_count_minus_four=$(( ${#1} - 4 ))\n    local vowels_string_count_minus_five=$((\
    \ ${#1} - 5 ))\n    local vowels_string_count_minus_six=$(( ${#1} - 6 ))\n   \
    \ local vowels_string_count_minus_seven=$(( ${#1} - 7 ))\n    local vowels_string_count_minus_eight=$((\
    \ ${#1} - 8 ))\n    local vowels_string_count_minus_nine=$(( ${#1} - 9 ))\n  \
    \  local vowels_string_count_minus_ten=$(( ${#1} - 10 ))\n    local vowels_string_count_minus_eleven=$((\
    \ ${#1} - 11 ))\n    local vowels_string_count_minus_twelve=$(( ${#1} - 12 ))\n\
    \    local vowels_string_count_minus_thirteen=$(( ${#1} - 13 ))\n    local vowels_string_count_minus_fourteen=$((\
    \ ${#1} - 14 ))\n    local vowels_string_count_minus_fifteen=$(( ${#1} - 15 ))\n\
    \    local vowels_string_count_minus_sixteen=$(( ${#1} - 16 ))\n    local vowels_string_count_minus_seventeen=$((\
    \ ${#1} - 17 ))\n    local vowels_string_count_minus_eighteen=$(( ${#1} - 18 ))\n\
    \    local vowels_string_count_minus_nineteen=$(( ${#1} - 19 ))\n    local vowels_string_count_minus_twenty=$((\
    \ ${#1} - 20 ))\n    local vowels_string_count_minus_twenty_one=$(( ${#1} - 21\
    \ ))\n    local vowels_string_count_minus_twenty_two=$(( ${#1} - 22 ))\n    local\
    \ vowels_string_count_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local word=$1\n    local vowel\n    local vowel_count\n    local\
    \ vowel_found\n    local vowel_position\n    local consonant_position\n    local\
    \ consonant_count\n    local consonant_found\n    local consonant_left\n    local\
    \ consonant_right\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n    local consonant_found\n    local consonant_found\n    local\
    \ consonant_found\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local vowels_count=${#vowels[@]}\n    local vowel_found=\"\"\n\
    \    local vowel_position=0\n    local vowel_position_count=0\n    local vowel_position_index=0\n\
    \    local vowel_position_index2=0\n    local vowel_position_index3=0\n    local\
    \ vowel_position_index4=0\n    local vowel_position_index5=0\n    local vowel_position_index6=0\n\
    \    local vowel_position_index7=0\n    local vowel_position_index8=0\n    local\
    \ vowel_position_index9=0\n    local vowel_position_index10=0\n    local vowel_position_index11=0\n\
    \    local vowel_position_index12=0\n    local vowel_position_index13=0\n    local\
    \ vowel_position_index14=0\n    local vowel_position_index15=0\n    local vowel_position_index16=0\n\
    \    local vowel_position_index17=0\n    local vowel_position_index18=0\n    local\
    \ vowel_position_index19=0\n    local vowel_position_index20=0\n    local vowel_position_index21=0\n\
    \    local vowel_position_index22=0\n    local vowel_position_index23=0\n    local\
    \ vowel_position_index24=0\n    local vowel_position_index25=0\n    local vowel_position_index26=0\n\
    \    local vowel_position_index27=0\n    local vowel_position_index28=0\n    local\
    \ vowel_position_index29=0\n    local vowel_position_index30=0\n    local vowel_position_index31=0\n\
    \    local vowel_position_index32=0\n    local vowel_position_index33=0\n    local\
    \ vowel_position_index34=0\n    local vowel_position_index35=0\n    local vowel_position_index36=0\n\
    \    local vowel_position_index37=0\n    local vowel_position_index38=0\n    local\
    \ vowel_position_index39=0\n    local vowel_position_index40=0\n    local vowel_position_index41=0\n\
    \    local vowel_position_index42=0\n    local vowel_position_index43=0\n    local\
    \ vowel_position_index44=0\n    local vowel_position_index45=0\n    local vowel_position_index46=0\n\
    \    local vowel_position_index47=0\n    local vowel_position_index48=0\n    local\
    \ vowel_position_index49=0\n    local vowel_position_index50=0\n    local vowel_position_index51=0\n\
    \    local vowel_position_index52=0\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local word=$1;\n  local vowel_found=\"\";\n  local vowel_index=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_position_index=\"\";\n  local\
    \ vowel_position_index2=\"\";\n  local vowel_position_index3=\"\";\n  local vowel_position_index4=\"\
    \";\n  local vowel_position_index5=\"\";\n  local vowel_position_index6=\"\";\n\
    \  local vowel_position_index7=\"\";\n  local vowel_position_index8=\"\";\n  local\
    \ vowel_position_index9=\"\";\n  local vowel_position_index10=\"\";\n  local vowel_position_index11=\"\
    \";\n  local vowel_position_index12=\"\";\n  local vowel_position_index13=\"\"\
    ;\n  local vowel_position_index14=\"\";\n  local vowel_position_index15=\"\";\n\
    \  local vowel_position_index16=\"\";\n  local vowel_position_index17=\"\";\n\
    \  local vowel_position_index18=\"\";\n  local vowel_position_index19=\"\";\n\
    \  local vowel_position_index20=\"\";\n  local vowel_position_index21=\"\";\n\
    \  local vowel_position_index22=\"\";\n  local vowel_position_index23=\"\";\n\
    \  local vowel_position_index24=\"\";\n  local vowel_position_index25=\"\";\n\
    \  local vowel_position_index26=\"\";\n  local vowel_position_index27=\"\";\n\
    \  local vowel_position_index28=\"\";\n  local vowel_position_index29=\"\";\n\
    \  local vowel_position_index30=\"\";\n  local vowel_position_index31=\"\";\n\
    \  local vowel_position_index32=\"\";\n  local vowel_position_index33=\"\";\n\
    \  local vowel_position_index34=\"\";\n  local vowel_position_index35=\"\";\n\
    \  local vowel_position_index36=\"\";\n  local vowel_position_index37=\"\";\n\
    \  local vowel_position_index38=\"\";\n  local vowel_position_index39=\"\";\n\
    \  local vowel_position_index40=\"\";\n  local vowel_position_index41=\"\";\n\
    \  local vowel_position_index42=\"\";\n  local vowel_position_index43=\"\";\n\
    \  local vowel_position_index44=\"\";\n  local vowel_position_index45=\"\";\n\
    \  local vowel_position_index46=\"\";\n  local vowel_position_index47=\"\";\n\
    \  local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local vowels_count=${#vowels}\n    local vowels_string=${vowels:0:1}\n\
    \    local vowels_string_count=${#vowels_string}\n    local vowels_string_end=${vowels_string:$vowels_string_count-1:1}\n\
    \    local vowels_string_end_count=${#vowels_string_end}\n    local vowels_string_start=${vowels_string:0:$vowels_string_count-1}\n\
    \    local vowels_string_start_count=${#vowels_string_start}\n    local vowels_string_middle=${vowels_string:$vowels_string_count-1:$vowels_string_end_count}\n\
    \    local vowels_string_middle_count=${#vowels_string_middle}\n    local vowels_string_middle_end=${vowels_string_middle:$vowels_string_middle_count-1:1}\n\
    \    local vowels_string_middle_end_count=${#vowels_string_middle_end}\n    local\
    \ vowels_string_middle_start=${vowels_string_middle:0:$vowels_string_middle_count-1}\n\
    \    local vowels_string_middle_start_count=${#vowels_string_middle_start}\n \
    \   local vowels_string_middle_middle=${vowels_string:$vowels_string_count-1:$vowels_string_end_count}\n\
    \    local vowels_string_middle_middle_count=${#vowels_string_middle_middle}\n\
    \    local vowels_string_middle_middle_end=${vowels_string_middle_middle:$vowels_string_middle_middle_count-1:1}\n\
    \    local vowels_string_middle_middle_end_count=${#vowels_string_middle_middle_end}\n\
    \    local vowels_string_middle_middle_start=${vowels_string_middle_middle:0:$vowels_string_middle_middle_count-1}\n\
    \    local vowels_string_middle_middle_start_count=${#vowels_string_middle_middle_start}\n\
    \    local vowels_string_middle_middle_middle=${vowels_string:$vowels_string_count-1:$vowels_string_end_count}\n\
    \    local vowels_string_middle_middle_middle_count=${#vowels_string_middle_middle_middle}\n\
    \    local vowels_string_middle_middle_middle_end=${vowels_string_middle_middle_middle:$vowels_string_middle_middle_middle_count-1:1}\n\
    \    local vowels_string_middle_middle_middle_end_count=${#vowels_string_middle_middle_middle_end}\n\
    \    local vowels_string_middle_middle_middle_start=${vowels_string_middle_middle_middle:0:$vowels_string_middle_middle_middle_count-1}\n\
    \    local vowels_string_middle_middle_middle_start_count=${#vowels_string_middle_middle_middle_start}\n\
    \    local vowels_string_middle_middle_middle_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local string=\"\
    $1\"\n    local vowels=\"a e i o u AE II OO UU\"\n    local vowel_count=0\n  \
    \  local vowel_found=\"\"\n    local vowel_position=0\n    local consonant_position=0\n\
    \    local consonant_count=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local conson\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local word=$1\n    local vowel\n    local vowel_found\n\
    \    local vowel_found_index\n    local vowel_index\n    local vowel_length\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_count2\n\
    \    local vowel_length_count3\n    local vowel_length_count4\n    local vowel_length_count5\n\
    \    local vowel_length_count6\n    local vowel_length_count7\n    local vowel_length_count8\n\
    \    local vowel_length_count9\n    local vowel_length_count10\n    local vowel_length_count11\n\
    \    local vowel_length_count12\n    local vowel_length_count13\n    local vowel_length_count14\n\
    \    local vowel_length_count15\n    local vowel_length_count16\n    local vowel_length_count17\n\
    \    local vowel_length_count18\n    local vowel_length_count19\n    local vowel_length_count20\n\
    \    local vowel_length_count21\n    local vowel_length_count22\n    local vowel_length_count23\n\
    \    local vowel_length_count24\n    local vowel_length_count25\n    local vowel_length_count26\n\
    \    local vowel_length_count27\n    local vowel_length_count28\n    local vowel_length_count29\n\
    \    local vowel_length_count30\n    local vowel_length_count31\n    local vowel_length_count32\n\
    \    local vowel_length_count33\n    local vowel_length_count34\n    local vowel_length_count35\n\
    \    local vowel_length_count36\n    local vowel_length_count37\n    local vowel_length_count38\n\
    \    local vowel_length_count39\n    local vowel_length_count40\n    local vowel_length_count41\n\
    \    local vowel_length_count42\n    local vowel_length_count43\n    local vowel_length_count44\n\
    \    local vowel_length_count45\n    local vowel_length_count46\n    local vowel_length_count47\n\
    \    local vowel_length_count48\n    local vowel_length_count49\n    local vowel_length_count50\n\
    \    local vowel_length_count51\n    local vowel_length_count52\n    local vowel_length_count53\n\
    \    local vowel_length_count54\n    local vowel_length_count55\n    local vowel_length_count56\n\
    \    local vowel_length_count\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel;\n    local vowel_found;\n\
    \    local vowel_position;\n    local vowel_position_count;\n    local vowel_position_count2;\n\
    \    local vowel_position_count3;\n    local vowel_position_count4;\n    local\
    \ vowel_position_count5;\n    local vowel_position_count6;\n    local vowel_position_count7;\n\
    \    local vowel_position_count8;\n    local vowel_position_count9;\n    local\
    \ vowel_position_count10;\n    local vowel_position_count11;\n    local vowel_position_count12;\n\
    \    local vowel_position_count13;\n    local vowel_position_count14;\n    local\
    \ vowel_position_count15;\n    local vowel_position_count16;\n    local vowel_position_count17;\n\
    \    local vowel_position_count18;\n    local vowel_position_count19;\n    local\
    \ vowel_position_count20;\n    local vowel_position_count21;\n    local vowel_position_count22;\n\
    \    local vowel_position_count23;\n    local vowel_position_count24;\n    local\
    \ vowel_position_count25;\n    local vowel_position_count26;\n    local vowel_position_count27;\n\
    \    local vowel_position_count28;\n    local vowel_position_count29;\n    local\
    \ vowel_position_count30;\n    local vowel_position_count31;\n    local vowel_position_count32;\n\
    \    local vowel_position_count33;\n    local vowel_position_count34;\n    local\
    \ vowel_position_count35;\n    local vowel_position_count36;\n    local vowel_position_count37;\n\
    \    local vowel_position_count38;\n    local vowel_position_count39;\n    local\
    \ vowel_position_count40;\n    local vowel_position_count41;\n    local vowel_position_count42;\n\
    \    local vowel_position_count43;\n    local vowel_position_count44;\n    local\
    \ vowel_position_count45;\n    local vowel_position_count46;\n    local vowel_position_count47;\n\
    \    local vowel_position_count48;\n    local vowel_position_count49;\n    local\
    \ vowel_position_count50;\n    local vowel_position_count51;\n    local vowel_position_count52;\n\
    \    local vowel_position_count53;\n    local vowel_position_count54;\n    local\
    \ vowel_position_count55;\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_position_count=0;\n    local vowel_position_count2=0;\n \
    \   local vowel_position_count3=0;\n    local vowel_position_count4=0;\n    local\
    \ vowel_position_count5=0;\n    local vowel_position_count6=0;\n    local vowel_position_count7=0;\n\
    \    local vowel_position_count8=0;\n    local vowel_position_count9=0;\n    local\
    \ vowel_position_count10=0;\n    local vowel_position_count11=0;\n    local vowel_position_count12=0;\n\
    \    local vowel_position_count13=0;\n    local vowel_position_count14=0;\n  \
    \  local vowel_position_count15=0;\n    local vowel_position_count16=0;\n    local\
    \ vowel_position_count17=0;\n    local vowel_position_count18=0;\n    local vowel_position_count19=0;\n\
    \    local vowel_position_count20=0;\n    local vowel_position_count21=0;\n  \
    \  local vowel_position_count22=0;\n    local vowel_position_count23=0;\n    local\
    \ vowel_position_count24=0;\n    local vowel_position_count25=0;\n    local vowel_position_count26=0;\n\
    \    local vowel_position_count27=0;\n    local vowel_position_count28=0;\n  \
    \  local vowel_position_count29=0;\n    local vowel_position_count30=0;\n    local\
    \ vowel_position_count31=0;\n    local vowel_position_count32=0;\n    local vowel_position_count33=0;\n\
    \    local vowel_position_count34=0;\n    local vowel_position_count35=0;\n  \
    \  local vowel_position_count36=0;\n    local vowel_position_count37=0;\n    local\
    \ vowel_position_count38=0;\n    local vowel_position_count39=0;\n    local vowel_position_count40=0;\n\
    \    local vowel_position_count41=0;\n    local vowel_position_count42=0;\n  \
    \  local vowel_position_count43=0;\n    local vowel_position_count44=0;\n    local\
    \ vowel_position_count45=0;\n    local vowel_position_count46=0;\n    local vowel_position_count47=0;\n\
    \    local vowel_position_count48=0;\n    local vowel_position_count49=0;\n  \
    \  local vowel_position_count50=0;\n    local vowel_position_count51=0;\n    local\
    \ vowel_position_count52=0;\n    local vowel_position_count53=0;\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u\"\n    local str=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_position=0\n    local vowel_position2=0\n\
    \    local vowel_position3=0\n    local vowel_position4=0\n    local vowel_position5=0\n\
    \    local vowel_position6=0\n    local vowel_position7=0\n    local vowel_position8=0\n\
    \    local vowel_position9=0\n    local vowel_position10=0\n    local vowel_position11=0\n\
    \    local vowel_position12=0\n    local vowel_position13=0\n    local vowel_position14=0\n\
    \    local vowel_position15=0\n    local vowel_position16=0\n    local vowel_position17=0\n\
    \    local vowel_position18=0\n    local vowel_position19=0\n    local vowel_position20=0\n\
    \    local vowel_position21=0\n    local vowel_position22=0\n    local vowel_position23=0\n\
    \    local vowel_position24=0\n    local vowel_position25=0\n    local vowel_position26=0\n\
    \    local vowel_position27=0\n    local vowel_position28=0\n    local vowel_position29=0\n\
    \    local vowel_position30=0\n    local vowel_position31=0\n    local vowel_position32=0\n\
    \    local vowel_position33=0\n    local vowel_position34=0\n    local vowel_position35=0\n\
    \    local vowel_position36=0\n    local vowel_position37=0\n    local vowel_position38=0\n\
    \    local vowel_position39=0\n    local vowel_position40=0\n    local vowel_position41=0\n\
    \    local vowel_position42=0\n    local vowel_position43=0\n    local vowel_position44=0\n\
    \    local vowel_position45=0\n    local vowel_position46=0\n    local vowel_position47=0\n\
    \    local vowel_position48=0\n    local vowel_position49=0\n    local vowel_position50=0\n\
    \    local vowel_position51=0\n    local vowel_position52=0\n    local vowel_position53=0\n\
    \    local vowel_position54=0\n    local vowel_position55=0\n    local vowel_position56=0\n\
    \    local vowel_position57=0\n    local vowel_position58=0\n    local vowel_position59=0\n\
    \    local vowel_position60\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"\
    a e i o u y\";\n  local vowels_count=$(echo $vowels | wc -w)\n  local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_3=$(echo $vowels | wc -w)\n  local vowels_count_4=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_5=$(echo $vowels | wc -w)\n  local vowels_count_6=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_7=$(echo $vowels | wc -w)\n  local vowels_count_8=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_9=$(echo $vowels | wc -w)\n  local vowels_count_10=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_11=$(echo $vowels | wc -w)\n  local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_13=$(echo $vowels | wc -w)\n  local vowels_count_14=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_15=$(echo $vowels | wc -w)\n  local vowels_count_16=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_17=$(echo $vowels | wc -w)\n  local vowels_count_18=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_19=$(echo $vowels | wc -w)\n  local vowels_count_20=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_21=$(echo $vowels | wc -w)\n  local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_23=$(echo $vowels | wc -w)\n  local vowels_count_24=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_25=$(echo $vowels | wc -w)\n  local vowels_count_26=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_27=$(echo $vowels | wc -w)\n  local vowels_count_28=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_29=$(echo $vowels | wc -w)\n  local vowels_count_30=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_31=$(echo $vowels | wc -w)\n  local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_33=$(echo $vowels | wc -w)\n  local vowels_count_34\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local vowel_position_count=0;\n    local vowel_position_count2=0;\n \
    \   local vowel_position_count3=0;\n    local vowel_position_count4=0;\n    local\
    \ vowel_position_count5=0;\n    local vowel_position_count6=0;\n    local vowel_position_count7=0;\n\
    \    local vowel_position_count8=0;\n    local vowel_position_count9=0;\n    local\
    \ vowel_position_count10=0;\n    local vowel_position_count11=0;\n    local vowel_position_count12=0;\n\
    \    local vowel_position_count13=0;\n    local vowel_position_count14=0;\n  \
    \  local vowel_position_count15=0;\n    local vowel_position_count16=0;\n    local\
    \ vowel_position_count17=0;\n    local vowel_position_count18=0;\n    local vowel_position_count19=0;\n\
    \    local vowel_position_count20=0;\n    local vowel_position_count21=0;\n  \
    \  local vowel_position_count22=0;\n    local vowel_position_count23=0;\n    local\
    \ vowel_position_count24=0;\n    local vowel_position_count25=0;\n    local vowel_position_count26=0;\n\
    \    local vowel_position_count27=0;\n    local vowel_position_count28=0;\n  \
    \  local vowel_position_count29=0;\n    local vowel_position_count30=0;\n    local\
    \ vowel_position_count31=0;\n    local vowel_position_count32=0;\n    local vowel_position_count33=0;\n\
    \    local vowel_position_count34=0;\n    local vowel_position_count35=0;\n  \
    \  local vowel_position_count36=0;\n    local vowel_position_count37=0;\n    local\
    \ vowel_position_count38=0;\n    local vowel_position_count39=0;\n    local vowel_position_count40=0;\n\
    \    local vowel_position_count41=0;\n    local vowel_position_count42=0;\n  \
    \  local vowel_position_count43=0;\n    local vowel_position_count44=0;\n    local\
    \ vowel_position_count45=0;\n    local vowel_position_count46=0;\n    local vowel_position_count47=0;\n\
    \    local vowel_position_count48=0;\n    local vowel_position_count49=0;\n  \
    \  local vowel_position_count50=0;\n    local vowel_position_count51=0;\n    local\
    \ vowel_position_count52=0;\n    local vowel_position_count53=0;\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=${#vowels};\n    local vowels_array=($vowels);\n\
    \    local vowels_array_count=${#vowels_array[@]};\n    local vowels_array_index=0;\n\
    \    local vowels_array_element=${vowels_array[$vowels_array_index]};\n    local\
    \ vowels_array_element2=${vowels_array[$vowels_array_index+1]};\n    local vowels_array_element3=${vowels_array[$vowels_array_index+2]};\n\
    \    local vowels_array_element4=${vowels_array[$vowels_array_index+3]};\n   \
    \ local vowels_array_element5=${vowels_array[$vowels_array_index+4]};\n    local\
    \ vowels_array_element6=${vowels_array[$vowels_array_index+5]};\n    local vowels_array_element7=${vowels_array[$vowels_array_index+6]};\n\
    \    local vowels_array_element8=${vowels_array[$vowels_array_index+7]};\n   \
    \ local vowels_array_element9=${vowels_array[$vowels_array_index+8]};\n    local\
    \ vowels_array_element10=${vowels_array[$vowels_array_index+9]};\n    local vowels_array_element11=${vowels_array[$vowels_array_index+10]};\n\
    \    local vowels_array_element12=${vowels_array[$vowels_array_index+11]};\n \
    \   local vowels_array_element13=${vowels_array[$vowels_array_index+12]};\n  \
    \  local vowels_array_element14=${vowels_array[$vowels_array_index+13]};\n   \
    \ local vowels_array_element15=${vowels_array[$vowels_array_index+14]};\n    local\
    \ vowels_array_element16=${vowels_array[$vowels_array_index+15]};\n    local vowels_array_element17=${vowels_array[$vowels_array_index+16]};\n\
    \    local vowels_array_element18=${vowels_array[$vowels_array_index+17]};\n \
    \   local vowels_array_element19=${vowels_array[$vowels_array_index+18]};\n  \
    \  local vowels_array_element20=${vowels_array[$vowels_array_index+19]};\n   \
    \ local vowels_array_element21=${vowels_array[$vowels_array_index+20]};\n    local\
    \ vowels_array_element22=${vowels_array[$vowels_array_index+21]};\n    local vowels_array_element23=${vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp50j9wa1f.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local string=\"$1\"\n    local vowel_found=\"\"\n    local\
    \ vowel_index=0\n    local vowel_start=0\n    local vowel_end=0\n    local vowel_length=0\n\
    \    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_found=\"\"\n    local vowel_found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found_index3=0\n    local vowel_found_index4=0\n    local vowel_found_index5=0\n\
    \    local vowel_found_index6=0\n    local vowel_found_index7=0\n    local vowel_found_index8=0\n\
    \    local vowel_found_index9=0\n    local vowel_found_index10=0\n    local vowel_found_index11=0\n\
    \    local vowel_found_index12=0\n    local vowel_found_index13=0\n    local vowel_found_index14=0\n\
    \    local vowel_found_index15=0\n    local vowel_found_index16=0\n    local vowel_found_index17=0\n\
    \    local vowel_found_index18=0\n    local vowel_found_index19=0\n    local vowel_found_index20=0\n\
    \    local vowel_found_index21=0\n    local vowel_found_index22=0\n    local vowel_found_index23=0\n\
    \    local vowel_found_index24=0\n    local vowel_found_index25=0\n    local vowel_found_index26=0\n\
    \    local vowel_found_index27=0\n    local vowel_found_index28=0\n    local vowel_found_index29=0\n\
    \    local vowel_found_index30=0\n    local vowel_found_index31=0\n    local vowel_found_index32=0\n\
    \    local vowel_found_index33=0\n    local vowel_found_index34=0\n    local vowel_found_index35=0\n\
    \    local vowel_found_index36=0\n    local vowel_found_index37=0\n    local vowel_found_index38=0\n\
    \    local vowel_found_index39=0\n    local vowel_found_index40=0\n    local vowel_found_index41=0\n\
    \    local vowel_found_index42=0\n    local vowel_found_index43=0\n    local vowel_found_index44=0\n\
    \    local vowel_found_index45=0\n    local vowel_found_index46=0\n    local vowel_found_index47=0\n\
    \    local vowel_found_index48=0\n    local vowel_found_index49=0\n    local vowel_found_index50=0\n\
    \    local vowel_found_index51=0\n    local vowel_found_index52=0\n    local vowel_found_index53=0\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u AE II OO UU\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_2=$(echo $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_7=$(echo $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_12=$(echo $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_17=$(echo $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_22=$(echo $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_27=$(echo $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_32=$(echo $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels\
    \ | wc -w)\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print\
    \ $1}')\n    local vowels_count=$(echo $vowels_count | awk '{print $1}')\n   \
    \ local vowels_count=$(echo $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo\
    \ $vowels_count | awk '{print $1}')\n    local vowels_count=$(echo $vowels_count\
    \ | awk '{print $1}')\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\
    \";\n    local consonant_position=\"\";\n    local consonant_found=\"\";\n   \
    \ local consonant_position=\"\";\n    local consonant_found=\"\";\n    local consonant_position=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_position=\"\";\n   \
    \ local consonant_found=\"\";\n    local consonant_position=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_position=\"\";\n    local consonant_found=\"\";\n   \
    \ local consonant_position=\"\";\n    local consonant_found=\"\";\n    local consonant_position=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_position=\"\";\n   \
    \ local consonant_found=\"\";\n    local consonant_position=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_position=\"\";\n    local consonant_found=\"\";\n   \
    \ local consonant_position=\"\";\n    local consonant_found=\"\";\n    local consonant_position=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_position=\"\";\n   \
    \ local consonant_found=\"\";\n    local consonant_position=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_position=\"\";\n    local consonant_found=\"\";\n   \
    \ local consonant_position=\"\";\n    local consonant_found=\"\";\n    local consonant_position=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_position=\"\";\n   \
    \ local consonant_found=\"\";\n    local consonant_position=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_position=\"\";\n    local consonant_found=\"\";\n   \
    \ local consonant_position=\"\";\n    local consonant_found=\"\";\n    local consonant_position=\"\
    \";\n    local consonant_found=\"\";\n    local consonant_position=\"\";\n   \
    \ local consonant_found=\"\";\n    local consonant_position=\"\";\n    local consonant_found=\"\
    \";\n    local consonant_position=\"\";\n    local consonant_found=\"\";\n   \
    \ local consonant_position=\"\";\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\"\n    local vowels_count=${#vowels}\n    local vowels_index=0\n \
    \   local vowels_index_count=0\n    local vowels_index_max=0\n    local vowels_index_min=0\n\
    \    local vowels_index_current=0\n    local vowels_index_current2=0\n    local\
    \ vowels_index_current3=0\n    local vowels_index_current4=0\n    local vowels_index_current5=0\n\
    \    local vowels_index_current6=0\n    local vowels_index_current7=0\n    local\
    \ vowels_index_current8=0\n    local vowels_index_current9=0\n    local vowels_index_current10=0\n\
    \    local vowels_index_current11=0\n    local vowels_index_current12=0\n    local\
    \ vowels_index_current13=0\n    local vowels_index_current14=0\n    local vowels_index_current15=0\n\
    \    local vowels_index_current16=0\n    local vowels_index_current17=0\n    local\
    \ vowels_index_current18=0\n    local vowels_index_current19=0\n    local vowels_index_current20=0\n\
    \    local vowels_index_current21=0\n    local vowels_index_current22=0\n    local\
    \ vowels_index_current23=0\n    local vowels_index_current24=0\n    local vowels_index_current25=0\n\
    \    local vowels_index_current26=0\n    local vowels_index_current27=0\n    local\
    \ vowels_index_current28=0\n    local vowels_index_current29=0\n    local vowels_index_current30=0\n\
    \    local vowels_index_current31=0\n    local vowels_index_current32=0\n    local\
    \ vowels_index_current33=0\n    local vowels_index_current34=0\n    local vowels_index_current35=0\n\
    \    local vowels_index_current36=0\n    local vowels_index_current37=0\n    local\
    \ vowels_index_current38=0\n    local vowels_index_current39=0\n    local vowels_index_current40=0\n\
    \    local vowels_index_current41=0\n    local vowels_index_current42=0\n    local\
    \ vowels_index_current43=0\n    local vowels_index_current44=0\n    local vowels_index_current45=0\n\
    \    local vowels_index_current46=0\n    local vowels_index_current47=0\n    local\
    \ vowels_index_current48=0\n    local vowels_index_current49=0\n    local vowels_index_current50=0\n\
    \    local vowels_index_current51=0\n    local \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051251
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # >>> $(get_closest_vowel \"yogurt\")\n# \"u\"\n# >>> $(get_closest_vowel \"FULL\"\
    )\n# \"U\"\n# >>> $(get_closest_vowel \"quick\")\n# \"\"\n# >>> $(get_closest_vowel\
    \ \"ab\")\n# \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"\
    a e i o u y\";\n    local vowels_count=$(echo $vowels | wc -l);\n    local vowels_array=($vowels);\n\
    \    local vowels_array_count=${#vowels_array[@]};\n    local vowels_array_index=0;\n\
    \    local vowels_array_element=${vowels_array[vowels_array_index]};\n    local\
    \ vowels_array_element_count=$(echo $vowels_array | wc -l);\n    local vowels_array_element_index=0;\n\
    \    local vowels_array_element_value=${vowels_array[vowels_array_element_index]};\n\
    \    local vowels_array_element_value_count=$(echo $vowels_array | wc -l);\n \
    \   local vowels_array_element_value_index=0;\n    local vowels_array_element_value_element=${vowels_array[vowels_array_element_value_index]};\n\
    \    local vowels_array_element_value_element_count=$(echo $vowels_array | wc\
    \ -l);\n    local vowels_array_element_value_element_value_index=0;\n    local\
    \ vowels_array_element_value_element_value_element=${vowels_array[vowels_array_element_value_element_value_index]};\n\
    \    local vowels_array_element_value_element_value_element_count=$(echo $vowels_array\
    \ | wc -l);\n    local vowels_array_element_value_element_value_element_value_index=0;\n\
    \    local vowels_array_element_value_element_value_element_value_element=${vowels_array[vowels_array_element_value_element_value_element_value_index]};\n\
    \    local vowels_array_element_value_element_value_element_value_element_count=$(echo\
    \ $vowels_array | wc -l);\n    local vowels_array_element_value_element_value_element_value_element_value_index=0;\n\
    \    local vowels_array_element_value_element_value_element_value_element_value_element=${vowels_array[vowels_array_element_value_element_value_element_value_element_value_index]};\n\
    \    local vowels_array_element_value_element_value_element_value_element_value_element_count=$(echo\
    \ $vowels_array | wc -l);\n    local vowels_array_element_value_element_value_element_value_element_value_element_value_index=0;\n\
    \    local vowels_array_element_value_element_value_element_value_element_value_element_value_element=${vowels_array[vowels_array_element_value_element_value_element_value_element_value_element_value_index]};\n\
    \    local vowels_array_element_value_element_value_element_value_element_value_element_value_element_count=$(echo\
    \ $vowels_array | wc -l);\n    local vowels_array_element_value_element_value_element_value_element_value_element_value_element_value_index=0;\n\
    \    local vowels_array_element_value_element_value_element_value_element_value_element_value_element_value_element=${vowels_array[vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvygedi3b.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051251

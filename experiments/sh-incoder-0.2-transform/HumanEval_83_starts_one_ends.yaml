name: HumanEval_83_starts_one_ends
language: sh
prompt: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
  \ of n-digit\n# positive integers that start or end with 1.\n#\n# $1 is an integer\n\
  starts_one_ends() {\n"
tests: "}\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n \
  \   [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n\
  \    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
completions: ["  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n\
    \    local j\n    for j in $(seq 1 $n); do\n      if (( $(expr $i % $j) == 1 ));\
    \ then\n        (( count++ ))\n        break\n      fi\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local count=0\n  local i\n  local j\n  local k\n \
    \ local m\n  local ndigits\n  local digit\n  local digit1\n  local digit2\n  local\
    \ digit3\n  local digit4\n  local digit5\n  local digit6\n  local digit7\n  local\
    \ digit8\n  local digit9\n  local digit10\n  local digit11\n  local digit12\n\
    \  local digit13\n  local digit14\n  local digit15\n  local digit16\n  local digit17\n\
    \  local digit18\n  local digit19\n  local digit20\n  local digit21\n  local digit22\n\
    \  local digit23\n  local digit24\n  local digit25\n  local digit26\n  local digit27\n\
    \  local digit28\n  local digit29\n  local digit30\n  local digit31\n  local digit32\n\
    \  local digit33\n  local digit34\n  local digit35\n  local digit36\n  local digit37\n\
    \  local digit38\n  local digit39\n  local digit40\n  local digit41\n  local digit42\n\
    \  local digit43\n  local digit44\n  local digit45\n  local digit46\n  local digit47\n\
    \  local digit48\n  local digit49\n  local digit50\n  local digit51\n  local digit52\n\
    \  local digit53\n  local digit54\n  local digit55\n  local digit56\n  local digit57\n\
    \  local digit58\n  local digit59\n  local digit60\n  local digit61\n  local digit62\n\
    \  local digit63\n  local digit64\n  local digit65\n  local digit66\n  local digit67\n\
    \  local digit68\n  local digit69\n  local digit70\n  local digit71\n  local digit72\n\
    \  local digit73\n  local digit74\n  local digit75\n  local digit76\n  local digit77\n\
    \  local digit78\n  local digit79\n  local digit80\n  local digit81\n  local digit82\n\
    \  local digit83\n  local digit84\n  local digit85\n  local digit86\n  local digit87\n\
    \  local digit88\n  local digit89\n  local digit90\n  local digit91\n  local digit92\n\
    \  local digit93\n  local digit94\n  local digit95\n  ", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      ((count++))\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1\
    \ ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000))\
    \ -eq 1 ]]; then\n          count=$((count + 1))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      ((count++))\n \
    \   fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  local\
    \ j\n  local k\n  local digit\n  local digit2\n  local digit3\n  local digit4\n\
    \  local digit5\n  local digit6\n  local digit7\n  local digit8\n  local digit9\n\
    \  local digit10\n  local digit11\n  local digit12\n  local digit13\n  local digit14\n\
    \  local digit15\n  local digit16\n  local digit17\n  local digit18\n  local digit19\n\
    \  local digit20\n  local digit21\n  local digit22\n  local digit23\n  local digit24\n\
    \  local digit25\n  local digit26\n  local digit27\n  local digit28\n  local digit29\n\
    \  local digit30\n  local digit31\n  local digit32\n  local digit33\n  local digit34\n\
    \  local digit35\n  local digit36\n  local digit37\n  local digit38\n  local digit39\n\
    \  local digit40\n  local digit41\n  local digit42\n  local digit43\n  local digit44\n\
    \  local digit45\n  local digit46\n  local digit47\n  local digit48\n  local digit49\n\
    \  local digit50\n  local digit51\n  local digit52\n  local digit53\n  local digit54\n\
    \  local digit55\n  local digit56\n  local digit57\n  local digit58\n  local digit59\n\
    \  local digit60\n  local digit61\n  local digit62\n  local digit63\n  local digit64\n\
    \  local digit65\n  local digit66\n  local digit67\n  local digit68\n  local digit69\n\
    \  local digit70\n  local digit71\n  local digit72\n  local digit73\n  local digit74\n\
    \  local digit75\n  local digit76\n  local digit77\n  local digit78\n  local digit79\n\
    \  local digit80\n  local digit81\n  local digit82\n  local digit83\n  local digit84\n\
    \  local digit85\n  local digit86\n  local digit87\n  local digit88\n  local digit89\n\
    \  local digit90\n  local digit91\n  local digit92\n  local digit93\n  local digit94\n\
    \  local digit95\n  local digit96\n  local digit97\n  local digit98\n", "  local\
    \ n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i\
    \ % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i\
    \ % 1000)) -eq 1 ]; then\n          count=$((count + 1))\n        fi\n      fi\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i\
    \ % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1\
    \ ]; then\n      if [ $(( i / 10 )) -eq 1 ]; then\n        (( count++ ))\n   \
    \   fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  local j\n  local k\n  local digit\n  local digit2\n  local digit3\n  local\
    \ digit4\n  local digit5\n  local digit6\n  local digit7\n  local digit8\n  local\
    \ digit9\n  local digit10\n  local digit11\n  local digit12\n  local digit13\n\
    \  local digit14\n  local digit15\n  local digit16\n  local digit17\n  local digit18\n\
    \  local digit19\n  local digit20\n  local digit21\n  local digit22\n  local digit23\n\
    \  local digit24\n  local digit25\n  local digit26\n  local digit27\n  local digit28\n\
    \  local digit29\n  local digit30\n  local digit31\n  local digit32\n  local digit33\n\
    \  local digit34\n  local digit35\n  local digit36\n  local digit37\n  local digit38\n\
    \  local digit39\n  local digit40\n  local digit41\n  local digit42\n  local digit43\n\
    \  local digit44\n  local digit45\n  local digit46\n  local digit47\n  local digit48\n\
    \  local digit49\n  local digit50\n  local digit51\n  local digit52\n  local digit53\n\
    \  local digit54\n  local digit55\n  local digit56\n  local digit57\n  local digit58\n\
    \  local digit59\n  local digit60\n  local digit61\n  local digit62\n  local digit63\n\
    \  local digit64\n  local digit65\n  local digit66\n  local digit67\n  local digit68\n\
    \  local digit69\n  local digit70\n  local digit71\n  local digit72\n  local digit73\n\
    \  local digit74\n  local digit75\n  local digit76\n  local digit77\n  local digit78\n\
    \  local digit79\n  local digit80\n  local digit81\n  local digit82\n  local digit83\n\
    \  local digit84\n  local digit85\n  local digit86\n  local digit87\n  local digit88\n\
    \  local digit89\n  local digit90\n  local digit91\n  local digit92\n  local digit93\n\
    \  local digit94\n  local digit95\n  local digit96\n  local digit97\n  local digit98\n",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if\
    \ [[ $((i / 10)) -eq 1 ]]; then\n        count=$((count+1))\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      ((count++))\n \
    \   fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for\
    \ i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i %\
    \ 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count + 1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [[ $(( i % 10 )) == 1 ]]; then\n      if [[ $(( i / 10 )) ==\
    \ 1 ]]; then\n        (( count++ ))\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[\
    \ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n  \
    \        count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  local j\n  local k\n  local m\n  local\
    \ ndigits\n  local digit\n  local digitcount\n  local digitcount2\n  local digitcount3\n\
    \  local digitcount4\n  local digitcount5\n  local digitcount6\n  local digitcount7\n\
    \  local digitcount8\n  local digitcount9\n  local digitcount10\n  local digitcount11\n\
    \  local digitcount12\n  local digitcount13\n  local digitcount14\n  local digitcount15\n\
    \  local digitcount16\n  local digitcount17\n  local digitcount18\n  local digitcount19\n\
    \  local digitcount20\n  local digitcount21\n  local digitcount22\n  local digitcount23\n\
    \  local digitcount24\n  local digitcount25\n  local digitcount26\n  local digitcount27\n\
    \  local digitcount28\n  local digitcount29\n  local digitcount30\n  local digitcount31\n\
    \  local digitcount32\n  local digitcount33\n  local digitcount34\n  local digitcount35\n\
    \  local digitcount36\n  local digitcount37\n  local digitcount38\n  local digitcount39\n\
    \  local digitcount40\n  local digitcount41\n  local digitcount42\n  local digitcount43\n\
    \  local digitcount44\n  local digitcount45\n  local digitcount46\n  local digitcount47\n\
    \  local digitcount48\n  local digitcount49\n  local digitcount50\n  local digitcount51\n\
    \  local digitcount52\n  local digitcount53\n  local digitcount54\n  local digitcount55\n\
    \  local digitcount56\n  local digitcount57\n  local digitcount58\n  local digitcount59\n\
    \  local digitcount60\n  local digitcount61\n  local digitcount62\n  local digitcount63\n\
    \  local digitcount64\n  local digitcount65\n  local digitcount66\n  local digitcount67\n\
    \  local digitcount68\n  local digitcount69\n  local digitcount70\n  local digitcount71\n\
    \  local digitcount72\n  local digitcount73\n  local digitcount74\n  local digitcount75\n\
    \  local digitcount76\n  local digitcount77\n  local digitcount78\n  local digitcount79\n\
    \  local digit", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      ((count++))\n    fi\n \
    \ done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100))\
    \ -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      ((count++))\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq\
    \ 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq\
    \ 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count\
    \ + 1))\n        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n\
    \  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    local j\n    for\
    \ j in $(seq 1 $n); do\n      if (( $(expr $j - $i | bc) -eq 1 )); then\n    \
    \    (( count++ ))\n      fi\n    done\n  done\n  echo $count", "  local n=$1\n\
    \  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10))\
    \ -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000))\
    \ -eq 1 ]; then\n          count=$((count + 1))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  local j\n\
    \  local k\n  local digit\n  local digits\n  local digits_len\n  local digits_start\n\
    \  local digits_end\n  local digits_start2\n  local digits_end2\n  local digits_start3\n\
    \  local digits_end3\n  local digits_start4\n  local digits_end4\n  local digits_start5\n\
    \  local digits_end5\n  local digits_start6\n  local digits_end6\n  local digits_start7\n\
    \  local digits_end7\n  local digits_start8\n  local digits_end8\n  local digits_start9\n\
    \  local digits_end9\n  local digits_start10\n  local digits_end10\n  local digits_start11\n\
    \  local digits_end11\n  local digits_start12\n  local digits_end12\n  local digits_start13\n\
    \  local digits_end13\n  local digits_start14\n  local digits_end14\n  local digits_start15\n\
    \  local digits_end15\n  local digits_start16\n  local digits_end16\n  local digits_start17\n\
    \  local digits_end17\n  local digits_start18\n  local digits_end18\n  local digits_start19\n\
    \  local digits_end19\n  local digits_start20\n  local digits_end20\n  local digits_start21\n\
    \  local digits_end21\n  local digits_start22\n  local digits_end22\n  local digits_start23\n\
    \  local digits_end23\n  local digits_start24\n  local digits_end24\n  local digits_start25\n\
    \  local digits_end25\n  local digits_start26\n  local digits_end26\n  local digits_start27\n\
    \  local digits_end27\n  local digits_start28\n  local digits_end28\n  local digits_start29\n\
    \  local digits_end29\n  local digits_start30\n  local digits_end30\n  local digits_start31\n\
    \  local digits_end31\n  local digits_start32\n  local digits_end32\n  local digits_start33\n\
    \  local digits_end33\n  local digits_start34\n  local digits_end34\n  ", "  local\
    \ n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i\
    \ % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n        if [[\
    \ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n        fi\n   \
    \   fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if\
    \ [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n   \
    \       count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [[ $(( i % 10 )) -eq 1 ]]; then\n    \
    \  if [[ $(( i / 10 )) -eq 1 ]]; then\n        count=$(( count + 1 ))\n      fi\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i\
    \ % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1\
    \ ]; then\n      if [ $(( i / 10 )) -eq 1 ]; then\n        count=$(( $count +\
    \ 1 ))\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [[ $(( i % 10 )) -eq 1 ]]; then\n\
    \      if [[ $(( i / 10 )) -eq $(( n / 10 )) ]]; then\n        (( count++ ))\n\
    \      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  local j\n  local k\n  local digit\n  local digits\n  local digits_length\n\
    \  local digits_length2\n  local digits_length3\n  local digits_length4\n  local\
    \ digits_length5\n  local digits_length6\n  local digits_length7\n  local digits_length8\n\
    \  local digits_length9\n  local digits_length10\n  local digits_length11\n  local\
    \ digits_length12\n  local digits_length13\n  local digits_length14\n  local digits_length15\n\
    \  local digits_length16\n  local digits_length17\n  local digits_length18\n \
    \ local digits_length19\n  local digits_length20\n  local digits_length21\n  local\
    \ digits_length22\n  local digits_length23\n  local digits_length24\n  local digits_length25\n\
    \  local digits_length26\n  local digits_length27\n  local digits_length28\n \
    \ local digits_length29\n  local digits_length30\n  local digits_length31\n  local\
    \ digits_length32\n  local digits_length33\n  local digits_length34\n  local digits_length35\n\
    \  local digits_length36\n  local digits_length37\n  local digits_length38\n \
    \ local digits_length39\n  local digits_length40\n  local digits_length41\n  local\
    \ digits_length42\n  local digits_length43\n  local digits_length44\n  local digits_length45\n\
    \  local digits_length46\n  local digits_length47\n  local digits_length48\n \
    \ local digits_length49\n  local digits_length50\n  local digits_length51\n  local\
    \ digits_length52\n  local digits_length53\n  local digits_length54\n  local digits_length55\n\
    \  local digits_length56\n  local digits_length57\n  local digits_length58\n \
    \ local digits_length59\n  local digits_length60\n  local digits_length61\n  local\
    \ digits_length62\n  local digits_length63\n  local digits_length64\n  local digits_length65\n\
    \  local digits_length66\n  local digits_length67\n  local digits_length68\n \
    \ local digits_length69", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1 ]; then\n      if [ $(( i / 10\
    \ )) -eq 1 ]; then\n        (( count++ ))\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if\
    \ [[ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n\
    \          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  local j\n  local k\n  local m\n  local\
    \ n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  ", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq\
    \ 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count\
    \ + 1))\n        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n\
    \  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10))\
    \ -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000))\
    \ -eq 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      ((count++))\n   \
    \ fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for\
    \ i in $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1 ]; then\n      (( count++\
    \ ))\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if\
    \ [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n   \
    \       count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $(( i % 10 )) -eq 1 ]; then\n      if [ $(( i / 10 )) -eq 1 ]; then\n      \
    \  (( count++ ))\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq\
    \ 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1\
    \ ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000))\
    \ -eq 1 ]]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if (( i % 100 ==\
    \ 0 )); then\n        if (( i % 1000 == 0 )); then\n          if (( i % 10000\
    \ == 0 )); then\n            if (( i % 100000 == 0 )); then\n              if\
    \ (( i % 1000000 == 0 )); then\n                if (( i % 1000000 == 0 )); then\n\
    \                  if (( i % 10000000 == 0 )); then\n                    if ((\
    \ i % 100000000 == 0 )); then\n                      if (( i % 1000000000 == 0\
    \ )); then\n                        if (( i % 10000000000 == 0 )); then\n    \
    \                      if (( i % 100000000000 == 0 )); then\n                \
    \            if (( i % 1000000000000 == 0 )); then\n                         \
    \     if (( i % 10000000000000 == 0 )); then\n                               \
    \ if (( i % 100000000000000 == 0 )); then\n                                  if\
    \ (( i % 1000000000000000 == 0 )); then\n                                    if\
    \ (( i % 10000000000000000 == 0 )); then\n                                   \
    \   if (( i % 100000000000000000 == 0 )); then\n                             \
    \           if (( i % 1000000000000000000 == 0 )); then\n                    \
    \                      if (( i % 10000000000000000000 == 0 )); then\n        \
    \                                    ((count++))\n                           \
    \               fi\n                                        fi\n             \
    \                         fi\n                                    fi\n       \
    \                           fi\n                                fi\n         \
    \                     fi\n                            fi\n                   \
    \       fi\n                        fi\n                      fi\n           \
    \         fi\n                  fi\n                fi\n              fi\n   \
    \         fi\n          fi\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $(( i % 10 )) -eq 1 ]]; then\n      if [[ $(( i / 10 )) -eq $(( n / 10 )) ]];\
    \ then\n        (( count++ ))\n      fi\n    fi\n  done\n  echo $count", "  local\
    \ n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i\
    \ % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i\
    \ % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    local j\n    for j in $(seq 1 $n); do\n      if\
    \ [ $((i-1)) == 1 ] && [ $((j+1)) == 1 ]; then\n        ((count++))\n      fi\n\
    \    done\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n\
    \  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i\
    \ % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1\
    \ ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000))\
    \ -eq 1 ]]; then\n          count=$((count + 1))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100))\
    \ -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count + 1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  local j\n  local k\n  local digit\n  local digit2\n  local\
    \ digit3\n  local digit4\n  local digit5\n  local digit6\n  local digit7\n  local\
    \ digit8\n  local digit9\n  local digit10\n  local digit11\n  local digit12\n\
    \  local digit13\n  local digit14\n  local digit15\n  local digit16\n  local digit17\n\
    \  local digit18\n  local digit19\n  local digit20\n  local digit21\n  local digit22\n\
    \  local digit23\n  local digit24\n  local digit25\n  local digit26\n  local digit27\n\
    \  local digit28\n  local digit29\n  local digit30\n  local digit31\n  local digit32\n\
    \  local digit33\n  local digit34\n  local digit35\n  local digit36\n  local digit37\n\
    \  local digit38\n  local digit39\n  local digit40\n  local digit41\n  local digit42\n\
    \  local digit43\n  local digit44\n  local digit45\n  local digit46\n  local digit47\n\
    \  local digit48\n  local digit49\n  local digit50\n  local digit51\n  local digit52\n\
    \  local digit53\n  local digit54\n  local digit55\n  local digit56\n  local digit57\n\
    \  local digit58\n  local digit59\n  local digit60\n  local digit61\n  local digit62\n\
    \  local digit63\n  local digit64\n  local digit65\n  local digit66\n  local digit67\n\
    \  local digit68\n  local digit69\n  local digit70\n  local digit71\n  local digit72\n\
    \  local digit73\n  local digit74\n  local digit75\n  local digit76\n  local digit77\n\
    \  local digit78\n  local digit79\n  local digit80\n  local digit81\n  local digit82\n\
    \  local digit83\n  local digit84\n  local digit85\n  local digit86\n  local digit87\n\
    \  local digit88\n  local digit89\n  local digit90\n  local digit91\n  local digit92\n\
    \  local digit93\n  local digit94\n  local digit95\n  local digit96\n  local digit97\n\
    \  local digit98\n", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq\
    \ 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1\
    \ ]; then\n      if [ $(( i / 10 )) -eq 1 ]; then\n        (( count++ ))\n   \
    \   fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if\
    \ [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n   \
    \       count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      ((count++))\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if\
    \ [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n   \
    \       count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n      \
    \  if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count + 1))\n      \
    \  fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n \
    \     if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n\
    \          count=$((count + 1))\n        fi\n      fi\n    fi\n  done\n  echo\
    \ $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n\
    \        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n    \
    \    fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n \
    \     if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n\
    \          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $(( i % 10 )) -eq 1 ]]; then\n      (( count++ ))\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  local j\n  local k\n  local digit\n  local digits\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  ", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1\
    \ ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1\
    \ ]]; then\n      if [[ $((i / 10)) -eq $((n / 10)) ]]; then\n        count=$((count+1))\n\
    \      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1 ]; then\n      if\
    \ [ $(( i / 10 )) -eq 1 ]; then\n        (( count++ ))\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  local j\n  local\
    \ k\n  local digit\n  local digit2\n  local digit3\n  local digit4\n  local digit5\n\
    \  local digit6\n  local digit7\n  local digit8\n  local digit9\n  local digit10\n\
    \  local digit11\n  local digit12\n  local digit13\n  local digit14\n  local digit15\n\
    \  local digit16\n  local digit17\n  local digit18\n  local digit19\n  local digit20\n\
    \  local digit21\n  local digit22\n  local digit23\n  local digit24\n  local digit25\n\
    \  local digit26\n  local digit27\n  local digit28\n  local digit29\n  local digit30\n\
    \  local digit31\n  local digit32\n  local digit33\n  local digit34\n  local digit35\n\
    \  local digit36\n  local digit37\n  local digit38\n  local digit39\n  local digit40\n\
    \  local digit41\n  local digit42\n  local digit43\n  local digit44\n  local digit45\n\
    \  local digit46\n  local digit47\n  local digit48\n  local digit49\n  local digit50\n\
    \  local digit51\n  local digit52\n  local digit53\n  local digit54\n  local digit55\n\
    \  local digit56\n  local digit57\n  local digit58\n  local digit59\n  local digit60\n\
    \  local digit61\n  local digit62\n  local digit63\n  local digit64\n  local digit65\n\
    \  local digit66\n  local digit67\n  local digit68\n  local digit69\n  local digit70\n\
    \  local digit71\n  local digit72\n  local digit73\n  local digit74\n  local digit75\n\
    \  local digit76\n  local digit77\n  local digit78\n  local digit79\n  local digit80\n\
    \  local digit81\n  local digit82\n  local digit83\n  local digit84\n  local digit85\n\
    \  local digit86\n  local digit87\n  local digit88\n  local digit89\n  local digit90\n\
    \  local digit91\n  local digit92\n  local digit93\n  local digit94\n  local digit95\n\
    \  local digit96\n  local digit97\n  local digit98\n", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local m\n\
    \  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local m\n  local n\n\
    \  ", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n\
    \    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n \
    \       if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n     \
    \   fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [[ $(( i % 10 )) -eq 1 ]]; then\n\
    \      if [[ $(( i % 100 )) -eq 1 ]]; then\n        if [[ $(( i % 1000 )) -eq\
    \ 1 ]]; then\n          count=$(( $count + 1 ))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  local j\n\
    \  local k\n  local digit\n  local digits\n  local digits_len\n  local digits_start\n\
    \  local digits_end\n  local digits_len\n  local digits_start\n  local digits_end\n\
    \  local digits_len\n  local digits_start\n  local digits_end\n  local digits_len\n\
    \  local digits_start\n  local digits_end\n  local digits_len\n  local digits_start\n\
    \  local digits_end\n  local digits_len\n  local digits_start\n  local digits_end\n\
    \  local digits_len\n  local digits_start\n  local digits_end\n  local digits_len\n\
    \  local digits_start\n  local digits_end\n  local digits_len\n  local digits_start\n\
    \  local digits_end\n  local digits_len\n  local digits_start\n  local digits_end\n\
    \  local digits_len\n  local digits_start\n  local digits_end\n  local digits_len\n\
    \  local digits_start\n  local digits_end\n  local digits_len\n  local digits_start\n\
    \  local digits_end\n  local digits_len\n  local digits_start\n  local digits_end\n\
    \  local digits_len\n  local digits_start\n  local digits_end\n  local digits_len\n\
    \  local digits_start\n  local digits_end\n  local digits_len\n  local digits_start\n\
    \  local digits_end\n  local digits_len\n  local digits_start\n  local digits_end\n\
    \  local digits_len\n  local digits_start\n  local digits_end\n  local digits_len\n\
    \  local digits_start\n  local digits_end\n  local digits_len\n  local digits_start\n\
    \  local digits_end\n  local digits_len\n  local digits_start\n  local digits_end\n\
    \  local digits_len\n  local digits_start\n  local digits_end\n  local digits_len\n\
    \  local digits_start\n  local digits_end\n  local digits_len\n  local digits_start\n\
    \  local digits_end\n  local digits_len\n  local digits_start\n  local digits_end\n\
    \  local digits_len\n  local digits_start\n  ", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n \
    \     if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n\
    \          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n      \
    \  if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n        fi\n\
    \      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[\
    \ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n  \
    \        count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      ((count++))\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  local j\n  local k\n  local digit\n\
    \  local digits\n  local digitsLen\n  local digit\n  local digitsLen\n  local\
    \ digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n\
    \  local digitsLen\n  local digit\n  local digitsLen\n  local digit\n  local digitsLen\n\
    \  local digit\n  local digitsLen\n  local digit\n  local digitsLen", "  local\
    \ n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i\
    \ % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i\
    \ % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i\
    \ % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1\
    \ ]]; then\n      ((count++))\n    fi\n  done\n  echo $count", "  local n=$1\n\
    \  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10))\
    \ -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000))\
    \ -eq 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100))\
    \ -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count\
    \ + 1))\n        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n\
    \  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $(( i % 10\
    \ )) -eq 1 ]]; then\n      if [[ $(( i / 10 )) -eq $(( n / 10 )) ]]; then\n  \
    \      count=$(( count + 1 ))\n      fi\n    fi\n  done\n  echo $count", "  local\
    \ n=$1\n  local count=0\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  ", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      ((count++))\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq\
    \ 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      ((count++))\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  local j\n  local\
    \ k\n  local digit\n  local digits\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  ",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      ((count++))\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if\
    \ [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n   \
    \       count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      ((count++))\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  local j\n  local k\n  local digit\n\
    \  local digits\n  local digits_len\n  local digits_start\n  local digits_end\n\
    \  local digits_starts\n  local digits_ends\n  local digits_starts_ends\n  local\
    \ digits_starts_ends_len\n  local digits_starts_ends_lens\n  local digits_starts_ends_lens_len\n\
    \  local digits_starts_ends_lens_lens\n  local digits_starts_ends_lens_lens_len\n\
    \  local digits_starts_ends_lens_lens_lens\n  local digits_starts_ends_lens_lens_lens_len\n\
    \  local digits_starts_ends_lens_lens_lens_lens\n  local digits_starts_ends_lens_lens_lens_lens_len\n\
    \  local digits_starts_ends_lens_lens_lens_lens_lens\n  local digits_starts_ends_lens_lens_lens_lens_lens_len\n\
    \  local digits_starts_ends_lens_lens_lens_lens_lens_lens\n  local digits_starts_ends_lens_lens_lens_lens_lens_lens_len\n\
    \  local digits_starts_ends_lens_lens_lens_lens_lens_lens_len\n  local digits_starts_ends_lens_lens_lens_lens_lens_lens_lens_len\n\
    \  local digits_starts_ends_lens_lens_lens_lens_lens_lens_lens_lens_len\n  local\
    \ digits_starts_ends_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\n  local\
    \ digits_starts_ends_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n  local\
    \ digits_starts_ends_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n \
    \ local digits_starts_ends_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\n\
    \  local digits_starts_ends_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \  local digits_starts_", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1 ]; then\n      (( count++ ))\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i\
    \ % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [[ $(( i % 10 )) -eq 1 ]]; then\n      if [[ $(( i % 100 ))\
    \ -eq 1 ]]; then\n        if [[ $(( i % 1000 )) -eq 1 ]]; then\n          count=$((\
    \ $count + 1 ))\n        fi\n      fi\n    fi\n  done\n  echo $count", "  local\
    \ n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $(( i\
    \ % 10 )) -eq 1 ]; then\n      (( count++ ))\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count + 1))\n        fi\n\
    \      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if\
    \ [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n   \
    \       count=$((count + 1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n      \
    \  if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n        fi\n\
    \      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if\
    \ [[ $((i / 10)) -eq 1 ]]; then\n        ((count++))\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      ((count++))\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1\
    \ ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000))\
    \ -eq 1 ]]; then\n          count=$((count + 1))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100))\
    \ -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  local j\n  local k\n  local m\n  local ndigits\n  local\
    \ digit\n  local digit1\n  local digit2\n  local digit3\n  local digit4\n  local\
    \ digit5\n  local digit6\n  local digit7\n  local digit8\n  local digit9\n  local\
    \ digit10\n  local digit11\n  local digit12\n  local digit13\n  local digit14\n\
    \  local digit15\n  local digit16\n  local digit17\n  local digit18\n  local digit19\n\
    \  local digit20\n  local digit21\n  local digit22\n  local digit23\n  local digit24\n\
    \  local digit25\n  local digit26\n  local digit27\n  local digit28\n  local digit29\n\
    \  local digit30\n  local digit31\n  local digit32\n  local digit33\n  local digit34\n\
    \  local digit35\n  local digit36\n  local digit37\n  local digit38\n  local digit39\n\
    \  local digit40\n  local digit41\n  local digit42\n  local digit43\n  local digit44\n\
    \  local digit45\n  local digit46\n  local digit47\n  local digit48\n  local digit49\n\
    \  local digit50\n  local digit51\n  local digit52\n  local digit53\n  local digit54\n\
    \  local digit55\n  local digit56\n  local digit57\n  local digit58\n  local digit59\n\
    \  local digit60\n  local digit61\n  local digit62\n  local digit63\n  local digit64\n\
    \  local digit65\n  local digit66\n  local digit67\n  local digit68\n  local digit69\n\
    \  local digit70\n  local digit71\n  local digit72\n  local digit73\n  local digit74\n\
    \  local digit75\n  local digit76\n  local digit77\n  local digit78\n  local digit79\n\
    \  local digit80\n  local digit81\n  local digit82\n  local digit83\n  local digit84\n\
    \  local digit85\n  local digit86\n  local digit87\n  local digit88\n  local digit89\n\
    \  local digit90\n  local digit91\n  local digit92\n  local digit93\n  local digit94\n\
    \  local digit95\n  ", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      ((count++))\n    fi\n \
    \ done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100))\
    \ -eq 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1\
    \ ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000))\
    \ -eq 1 ]]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  local j\n\
    \  local k\n  local digit\n  local digits\n  local digitslen\n  local digitsstart\n\
    \  local digitsend\n  local digitsstartend\n  local digit\n  local digitlen\n\
    \  local digitstart\n  local digitend\n  local digitstartend\n  local digitstartendlen\n\
    \  local digitstartendlen2\n  local digitstartendlen3\n  local digitstartendlen4\n\
    \  local digitstartendlen5\n  local digitstartendlen6\n  local digitstartendlen7\n\
    \  local digitstartendlen8\n  local digitstartendlen9\n  local digitstartendlen10\n\
    \  local digitstartendlen11\n  local digitstartendlen12\n  local digitstartendlen13\n\
    \  local digitstartendlen14\n  local digitstartendlen15\n  local digitstartendlen16\n\
    \  local digitstartendlen17\n  local digitstartendlen18\n  local digitstartendlen19\n\
    \  local digitstartendlen20\n  local digitstartendlen21\n  local digitstartendlen22\n\
    \  local digitstartendlen23\n  local digitstartendlen24\n  local digitstartendlen25\n\
    \  local digitstartendlen26\n  local digitstartendlen27\n  local digitstartendlen28\n\
    \  local digitstartendlen29\n  local digitstartendlen30\n  local digitstartendlen31\n\
    \  local digitstartendlen32\n  local digitstartendlen33\n  local digitstartendlen34\n\
    \  local digitstartendlen35\n  local digitstartendlen36\n  local digitstartendlen37\n\
    \  local digitstartendlen38\n  local digitstartendlen39\n  local digitstartendlen40\n\
    \  local digitstartendlen41\n  local digitstartendlen42\n  local digitstartendlen43\n\
    \  local digitstartendlen44\n  local digitstartendlen45\n  local digitstartendlen46\n\
    \  local digitstartendlen47\n  local digitstartendlen48\n  local digitstartendlen49\n\
    \  local digitstartendlen50\n  local digitstartendlen51\n  local digitstartendlen52\n\
    \  local digitstartendlen53\n  local digitstartendlen54\n  local digitstart",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    local\
    \ j\n    for j in $(seq 1 $n); do\n      if (( $(expr $i % $j) == 0 )); then\n\
    \        (( count++ ))\n        break\n      fi\n    done\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      if (( i / 10 )); then\n        (( count++\
    \ ))\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n \
    \     if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n\
    \          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      ((count++))\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n      \
    \  if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n        fi\n\
    \      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  local j\n  local k\n  local digit\n  local digits\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  ", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      ((count++))\n    fi\n \
    \ done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100))\
    \ -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq\
    \ 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    local j\n    for j in $(seq\
    \ 1 $n); do\n      if [ $((i*10+j)) -eq $((i*10+j+1)) ]; then\n        ((count++))\n\
    \        break\n      fi\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1\
    \ ]; then\n      if [ $(( i / 10 )) -eq 1 ]; then\n        (( count++ ))\n   \
    \   fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if\
    \ [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n   \
    \       count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      if ((i % 10) == 1) {\n        count=$((count\
    \ + 1))\n      }\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n \
    \     ((count++))\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n \
    \     if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n\
    \          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  local j\n  local k\n  local digit\n  local digits\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  ", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1\
    \ ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count + 1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  local j\n  local k\n  local digit\n  local digit1\n  local\
    \ digit2\n  local digit3\n  local digit4\n  local digit5\n  local digit6\n  local\
    \ digit7\n  local digit8\n  local digit9\n  local digit10\n  local digit11\n \
    \ local digit12\n  local digit13\n  local digit14\n  local digit15\n  local digit16\n\
    \  local digit17\n  local digit18\n  local digit19\n  local digit20\n  local digit21\n\
    \  local digit22\n  local digit23\n  local digit24\n  local digit25\n  local digit26\n\
    \  local digit27\n  local digit28\n  local digit29\n  local digit30\n  local digit31\n\
    \  local digit32\n  local digit33\n  local digit34\n  local digit35\n  local digit36\n\
    \  local digit37\n  local digit38\n  local digit39\n  local digit40\n  local digit41\n\
    \  local digit42\n  local digit43\n  local digit44\n  local digit45\n  local digit46\n\
    \  local digit47\n  local digit48\n  local digit49\n  local digit50\n  local digit51\n\
    \  local digit52\n  local digit53\n  local digit54\n  local digit55\n  local digit56\n\
    \  local digit57\n  local digit58\n  local digit59\n  local digit60\n  local digit61\n\
    \  local digit62\n  local digit63\n  local digit64\n  local digit65\n  local digit66\n\
    \  local digit67\n  local digit68\n  local digit69\n  local digit70\n  local digit71\n\
    \  local digit72\n  local digit73\n  local digit74\n  local digit75\n  local digit76\n\
    \  local digit77\n  local digit78\n  local digit79\n  local digit80\n  local digit81\n\
    \  local digit82\n  local digit83\n  local digit84\n  local digit85\n  local digit86\n\
    \  local digit87\n  local digit88\n  local digit89\n  local digit90\n  local digit91\n\
    \  local digit92\n  local digit93\n  local digit94\n  local digit95\n  local digit96\n\
    \  local digit97\n", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq\
    \ 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  local j\n  local\
    \ k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  ", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    local j\n    for j in $(seq 1 $n); do\n \
    \     if (( $(expr $j - $i) == 1 )); then\n        (( count++ ))\n        break\n\
    \      fi\n    done\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  local j\n  local k\n  local digit\n  local digits\n  local digits_len\n\
    \  local digits_start\n  local digits_end\n  local digits_start_end\n  local digits_start_end_len\n\
    \  local digits_start_end_start\n  local digits_start_end_end\n  local digits_start_end_start_end\n\
    \  local digits_start_end_start_end_end\n  local digits_start_end_start_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end\n  local digits_start_end_start_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end\n  local digits_start_end_start_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end\n  local digits_start_end_start_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end\n  local\
    \ digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end\n  local\
    \ digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end\n  local\
    \ digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local digits_start_end_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1 ]; then\n      if\
    \ [ $(( i / 10 )) -eq 1 ]; then\n        count=$(( count + 1 ))\n      fi\n  \
    \  fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for\
    \ i in $(seq 1 $n); do\n    local j\n    for j in $(seq 1 $n); do\n      if ((\
    \ $(expr $j - $i | bc) -eq 1 )); then\n        (( count++ ))\n        break\n\
    \      fi\n    done\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n \
    \     ((count++))\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  local j\n  local k\n  local digit\n  local digit2\n  local digit3\n\
    \  local digit4\n  local digit5\n  local digit6\n  local digit7\n  local digit8\n\
    \  local digit9\n  local digit10\n  local digit11\n  local digit12\n  local digit13\n\
    \  local digit14\n  local digit15\n  local digit16\n  local digit17\n  local digit18\n\
    \  local digit19\n  local digit20\n  local digit21\n  local digit22\n  local digit23\n\
    \  local digit24\n  local digit25\n  local digit26\n  local digit27\n  local digit28\n\
    \  local digit29\n  local digit30\n  local digit31\n  local digit32\n  local digit33\n\
    \  local digit34\n  local digit35\n  local digit36\n  local digit37\n  local digit38\n\
    \  local digit39\n  local digit40\n  local digit41\n  local digit42\n  local digit43\n\
    \  local digit44\n  local digit45\n  local digit46\n  local digit47\n  local digit48\n\
    \  local digit49\n  local digit50\n  local digit51\n  local digit52\n  local digit53\n\
    \  local digit54\n  local digit55\n  local digit56\n  local digit57\n  local digit58\n\
    \  local digit59\n  local digit60\n  local digit61\n  local digit62\n  local digit63\n\
    \  local digit64\n  local digit65\n  local digit66\n  local digit67\n  local digit68\n\
    \  local digit69\n  local digit70\n  local digit71\n  local digit72\n  local digit73\n\
    \  local digit74\n  local digit75\n  local digit76\n  local digit77\n  local digit78\n\
    \  local digit79\n  local digit80\n  local digit81\n  local digit82\n  local digit83\n\
    \  local digit84\n  local digit85\n  local digit86\n  local digit87\n  local digit88\n\
    \  local digit89\n  local digit90\n  local digit91\n  local digit92\n  local digit93\n\
    \  local digit94\n  local digit95\n  local digit96\n  local digit97\n  local digit98\n",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if\
    \ [[ $((i / 10)) -eq $((n / 10)) ]]; then\n        count=$((count+1))\n      fi\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i\
    \ % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ];\
    \ then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  local j\n  local k\n  local digit\n  local digit2\n  local\
    \ digit3\n  local digit4\n  local digit5\n  local digit6\n  local digit7\n  local\
    \ digit8\n  local digit9\n  local digit10\n  local digit11\n  local digit12\n\
    \  local digit13\n  local digit14\n  local digit15\n  local digit16\n  local digit17\n\
    \  local digit18\n  local digit19\n  local digit20\n  local digit21\n  local digit22\n\
    \  local digit23\n  local digit24\n  local digit25\n  local digit26\n  local digit27\n\
    \  local digit28\n  local digit29\n  local digit30\n  local digit31\n  local digit32\n\
    \  local digit33\n  local digit34\n  local digit35\n  local digit36\n  local digit37\n\
    \  local digit38\n  local digit39\n  local digit40\n  local digit41\n  local digit42\n\
    \  local digit43\n  local digit44\n  local digit45\n  local digit46\n  local digit47\n\
    \  local digit48\n  local digit49\n  local digit50\n  local digit51\n  local digit52\n\
    \  local digit53\n  local digit54\n  local digit55\n  local digit56\n  local digit57\n\
    \  local digit58\n  local digit59\n  local digit60\n  local digit61\n  local digit62\n\
    \  local digit63\n  local digit64\n  local digit65\n  local digit66\n  local digit67\n\
    \  local digit68\n  local digit69\n  local digit70\n  local digit71\n  local digit72\n\
    \  local digit73\n  local digit74\n  local digit75\n  local digit76\n  local digit77\n\
    \  local digit78\n  local digit79\n  local digit80\n  local digit81\n  local digit82\n\
    \  local digit83\n  local digit84\n  local digit85\n  local digit86\n  local digit87\n\
    \  local digit88\n  local digit89\n  local digit90\n  local digit91\n  local digit92\n\
    \  local digit93\n  local digit94\n  local digit95\n  local digit96\n  local digit97\n\
    \  local digit98\n", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      count=$((count + 1))\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if [[\
    \ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n  \
    \        count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if\
    \ [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n   \
    \       count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n      \
    \  if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count + 1))\n      \
    \  fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n\
    \      if [[ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]];\
    \ then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n \
    \ echo $count", "  local n=$1\n  local count=0\n  local i\n  local j\n  local\
    \ k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local m\n  local\
    \ n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local m\n  local n\n  ", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [ $(( i % 10 )) -eq 1 ]; then\n      if\
    \ [ $(( i / 10 )) -eq $(( n - 1 )) ]; then\n        (( count++ ))\n      fi\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n \
    \ for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i\
    \ % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ];\
    \ then\n      if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq\
    \ 1 ]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    if [ $(( i % 10 )) -eq 1 ]; then\n      if [ $(( i / 10 )) -eq\
    \ 1 ]; then\n        (( count++ ))\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100)) -eq 1 ]; then\n        if\
    \ [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n        fi\n  \
    \    fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n  local\
    \ i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1 ]]; then\n      if\
    \ [[ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000)) -eq 1 ]]; then\n\
    \          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [\
    \ $(( i % 10 )) -eq 1 ]; then\n      if [ $(( i / 10 )) -eq 1 ]; then\n      \
    \  (( count++ ))\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[ $((i % 10)) -eq 1\
    \ ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n        if [[ $((i % 1000))\
    \ -eq 1 ]]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n\
    \  done\n  echo $count", "  local n=$1\n  local count=0\n  local i\n  for i in\
    \ $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n      if [ $((i % 100))\
    \ -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ count=0\n  local i\n  for i in $(seq 1 $n); do\n    local j\n    for j in $(seq\
    \ 1 $n); do\n      if (( $i == $j )); then\n        (( count++ ))\n        break\n\
    \      fi\n    done\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n \
    \     if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n\
    \          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n      \
    \  if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count + 1))\n      \
    \  fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local count=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    if [ $((i % 10)) -eq 1 ]; then\n \
    \     if [ $((i % 100)) -eq 1 ]; then\n        if [ $((i % 1000)) -eq 1 ]; then\n\
    \          count=$((count+1))\n        fi\n      fi\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n    if [[\
    \ $((i % 10)) -eq 1 ]]; then\n      if [[ $((i % 100)) -eq 1 ]]; then\n      \
    \  if [[ $((i % 1000)) -eq 1 ]]; then\n          count=$((count+1))\n        fi\n\
    \      fi\n    fi\n  done\n  echo $count"]
stop_tokens:
- "\n}"

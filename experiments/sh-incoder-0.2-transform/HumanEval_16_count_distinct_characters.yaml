name: HumanEval_16_count_distinct_characters
language: sh
prompt: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
  \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n#\
  \ \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
  count_distinct_characters() {\n"
tests: "}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
  \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
  ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
completions: ["    local string=\"$1\"\n    local count=0\n    local char\n    for\
    \ char in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n\
    \        ((count++))\n    done\n    echo \"$count\"", "    local string=\"$1\"\
    \n    local count=0\n    local char\n    for char in \"${string}\"; do\n     \
    \   [ \"$char\" == \"$string\" ] && continue\n        [ \"$char\" == \"${string^}\"\
    \ ] && continue\n        [ \"$char\" == \"${string^^}\" ] && continue\n      \
    \  [ \"$char\" == \"${string^^^}\" ] && continue\n        count=$((count+1))\n\
    \    done\n    echo \"$count\"", "    local string=\"$1\"\n    local count=0\n\
    \    local char\n    for char in \"${string}\"; do\n        [[ $char != $char\
    \ ]] && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] &&\
    \ [[ $char != [!-~] ]] && [[ $char != [()] ]] && [[ $char != [,] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [&] ]]\
    \ && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char\
    \ != [,] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]]\
    \ && [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char\
    \ != [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]]\
    \ && [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char\
    \ != [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]]\
    \ && [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char\
    \ != [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]]\
    \ && [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char\
    \ != [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]]\
    \ && [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char\
    \ != [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]]\
    \ && [[ $char != [&] ]] && [[ $char != [", "    local string=\"$1\"\n    local\
    \ count=0\n    local char\n    for char in \"${string}\"; do\n        [[ $char\
    \ =~ ^[[:lower:]]$ ]] && count=$((count+1))\n        [[ $char =~ ^[[:upper:]]$\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"", "    local string=\"\
    $1\"\n    local count=0\n    local char\n    for char in \"${string}\"; do\n \
    \       [[ $char =~ [A-Z] ]] && count=$((count+1))\n        [[ $char =~ [a-z]\
    \ ]] && count=$((count+1))\n        [[ $char =~ [0-9] ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"", "    local string=\"$1\"\n    local count=0\n\
    \    local char\n    for char in \"${string}\"; do\n        [ \"${char,,}\" =\
    \ \"${char,,}\" ] && count=$((count+1))\n    done\n    echo \"$count\"", "  local\
    \ string=$1\n  local count=0\n  local char\n  local char_count\n  local chars\n\
    \  local char\n  local char_count\n  local chars\n  local char\n  local char_count\n\
    \  local chars\n  local char\n  local char_count\n  local chars\n  local char\n\
    \  local char_count\n  local chars\n  local char\n  local char_count\n  local\
    \ chars\n  local char\n  local char_count\n  local chars\n  local char\n  local\
    \ char_count\n  local chars\n  local char\n  local char_count\n  local chars\n\
    \  local char\n  local char_count\n  local chars\n  local char\n  local char_count\n\
    \  local chars\n  local char\n  local char_count\n  local chars\n  local char\n\
    \  local char_count\n  local chars\n  local char\n  local char_count\n  local\
    \ chars\n  local char\n  local char_count\n  local chars\n  local char\n  local\
    \ char_count\n  local chars\n  local char\n  local char_count\n  local chars\n\
    \  local char\n  local char_count\n  local chars\n  local char\n  local char_count\n\
    \  local chars\n  local char\n  local char_count\n  local chars\n  local char\n\
    \  local char_count\n  local chars\n  local char\n  local char_count\n  local\
    \ chars\n  local char\n  local char_count\n  local chars\n  local char\n  local\
    \ char_count\n  local chars\n  local char\n  local char_count\n  local chars\n\
    \  local char\n  local char_count\n  local chars\n  local char\n  local char_count\n\
    \  local chars\n  local char\n  local char_count\n  local chars\n  local char\n\
    \  local char_count\n  local chars\n  local char\n  local char_count\n  local\
    \ chars\n  local char\n  local char_count\n  local chars\n  local char\n  local\
    \ char_count\n  local chars\n  local char\n  local char_count\n  local chars\n\
    \  local char\n  local char_count\n  local chars\n  local char\n  local char_count\n\
    \  local chars\n  local char\n  local char_count\n  local ", "    local string=\"\
    $1\"\n    local count=0\n    local char\n    for char in \"${string}\"; do\n \
    \       [[ $char != $char ]] && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] &&\
    \ [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char !=\
    \ [~`] ]] && [[ $char != [|] ]] && [[ $char != [;] ]] && [[ $char != [,] ]] &&\
    \ [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [,] ]] && [[ $char !=\
    \ [;] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] &&\
    \ [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char !=\
    \ [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] &&\
    \ [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char !=\
    \ [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] &&\
    \ [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char !=\
    \ [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] &&\
    \ [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char !=\
    \ [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] &&\
    \ [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char !=\
    \ [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] &&\
    \ [[ $char != [,] ]] && [[ $char != [,] ]] && ", "    local string=\"$1\"\n  \
    \  local count=0\n    local character\n    for character in \"${string}\"; do\n\
    \        [[ $character == [A-Z] ]] && count=$((count+1))\n        [[ $character\
    \ == [a-z] ]] && count=$((count+1))\n        [[ $character == [0-9] ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"", "    local string=\"$1\"\n    local count=0\n\
    \    local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"",
  "    local string=\"$1\"\n    local count=0\n    local char\n    for char in \"\
    ${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n        ((\
    \ count++ ))\n    done\n    echo \"$count\"", "    local string=\"$1\"\n    local\
    \ count=0\n    local char\n    for char in \"${string}\"; do\n        [ \"$char\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"",
  "  local string=\"$1\"\n  local count=0\n  local char\n  local chars\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n", "    local string=\"$1\"\n    local count=0\n\
    \    local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"", "    local string=\"$1\"\n    local count=0\n    local char\n\n   \
    \ for char in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n\
    \        [ \"$char\" == \"${string^}\" ] && continue\n        ((count++))\n  \
    \  done\n\n    echo \"$count\"", "    local string=\"$1\"\n    local count=0\n\
    \    local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"", "    local string=$1\n    local count=0\n   \
    \ local char\n    for char in ${string//,/ }; do\n        ((count++))\n    done\n\
    \    echo \"$count\"", "    local string=\"$1\"\n    local count=0\n    local\
    \ character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"",
  "    local string=\"$1\"\n    local count=0\n    local char\n    for char in \"\
    ${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n        ((\
    \ count++ ))\n    done\n    echo \"$count\"", "    local string=$1\n    local\
    \ count=0\n    local char\n\n    for char in $(echo $string | tr [A-Z] [a-z]);\
    \ do\n        ((count++))\n    done\n\n    echo \"$count\""]
stop_tokens:
- "\n}"

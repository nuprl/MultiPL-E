name: HumanEval_80_is_happy
language: sh
prompt: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
  \ string is happy or not.\n# A string is happy if its length is at least 3 and every\
  \ 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n# \"\
  false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\n\
  # >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>> $(is_happy\
  \ xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n"
tests: "}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n\
  \    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\"\
  \ ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"\
  false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"\
  iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
completions: ["  local string=\"$1\"\n  local length=\"${#string}\"\n  local count=0\n\
    \  local letter\n  local flag=0\n  while [ \"$count\" -lt \"$length\" ]; do\n\
    \    letter=\"${string:$count:1}\"\n    if [ \"$letter\" == \"$letter\" ] || [\
    \ \"$letter\" == \"$letter$letter\" ]; then\n      ((count++))\n    else\n   \
    \   ((flag++))\n    fi\n  done\n  if [ \"$flag\" -eq \"$length\" ]; then\n   \
    \ echo \"true\"\n  else\n    echo \"false\"\n  fi", "  local string=\"$1\"\n \
    \ local len=${#string}\n  local count=0\n  local letters=()\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local\
    \ E\n  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local\
    \ L\n  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local\
    \ S\n  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local\
    \ Z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n  local\
    \ B\n  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n  local\
    \ I\n  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n  local\
    \ P\n  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n  local\
    \ W\n  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n", "    local string=\"$1\"\n    local length=\"${#string}\"\n\
    \    if [ \"${length}\" -lt 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    local count=0\n    local letters=()\n    for (( i=0; i<${#string};\
    \ i++ )); do\n        local letter=\"${string:$i:1}\"\n        if [[ ${letters}\
    \ =~ \"${letter}\" ]]; then\n            (( count++ ))\n        else\n       \
    \     letters+=(${letter})\n        fi\n    done\n    if [ \"${count}\" -gt 3\
    \ ]; then\n        echo \"true\"\n        return\n    fi\n    echo \"false\"",
  "    local string=\"$1\"\n    local length=\"${#string}\"\n    local count=0\n \
    \   local letters=()\n    local i\n    local j\n    local k\n    local l\n   \
    \ local m\n    local n\n    local o\n    local p\n    local q\n    local r\n \
    \   local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z", "    local string=$1\n \
    \   local length=${#string}\n    local count=0\n    local letters=()\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n", "    local s=$1\n    local len=${#s}\n    if [[ $len < 3\
    \ ]]; then\n        echo \"false\"\n        return\n    fi\n    local count=0\n\
    \    local last\n    local i\n    for (( i=0; i<len; i++ )); do\n        if [[\
    \ $(( count++ % 3 )) -eq 0 ]]; then\n            last=${s:$i:1}\n        else\n\
    \            if [[ $last != ${s:$i:1} ]]; then\n                echo \"false\"\
    \n                return\n            fi\n        fi\n    done\n    echo \"true\"",
  "  local string=\"$1\"\n  local length=${#string}\n  local count=0\n  local letters=()\n\
    \  local letter\n  local result\n\n  if [[ $length -gt 3 ]]; then\n    return\
    \ 0\n  fi\n\n  while (( count < length )); do\n    letter=${string:$count:1}\n\
    \    letters+=($letter)\n    (( count++ ))\n  done\n\n  result=$(echo \"${letters[*]}\"\
    \ | sort | uniq -d)\n\n  if [[ $result != \"\" ]]; then\n    return 1\n  else\n\
    \    return 0\n  fi", "    local string=\"$1\"\n    local length=${#string}\n\
    \    local count=0\n    local letters=()\n    local letter\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n", "   \
    \ local string=$1\n    local length=${#string}\n    local count=0\n    local letter\n\
    \    local letter2\n    local letter3\n    local letter4\n    local letter5\n\
    \    local letter6\n    local letter7\n    local letter8\n    local letter9\n\
    \    local letter10\n    local letter11\n    local letter12\n    local letter13\n\
    \    local letter14\n    local letter15\n    local letter16\n    local letter17\n\
    \    local letter18\n    local letter19\n    local letter20\n    local letter21\n\
    \    local letter22\n    local letter23\n    local letter24\n    local letter25\n\
    \    local letter26\n    local letter27\n    local letter28\n    local letter29\n\
    \    local letter30\n    local letter31\n    local letter32\n    local letter33\n\
    \    local letter34\n    local letter35\n    local letter36\n    local letter37\n\
    \    local letter38\n    local letter39\n    local letter40\n    local letter41\n\
    \    local letter42\n    local letter43\n    local letter44\n    local letter45\n\
    \    local letter46\n    local letter47\n    local letter48\n    local letter49\n\
    \    local letter50\n    local letter51\n    local letter52\n    local letter53\n\
    \    local letter54\n    local letter55\n    local letter56\n    local letter57\n\
    \    local letter58\n    local letter59\n    local letter60\n    local letter61\n\
    \    local letter62\n    local letter63\n    local letter64\n    local letter65\n\
    \    local letter66\n    local letter67\n    local letter68\n    local letter69\n\
    \    local letter70\n    local letter71\n    local letter72\n    local letter73\n\
    \    local letter74\n    local letter75\n    local letter76\n    local letter77\n\
    \    local letter78\n    local letter79\n    local letter80\n    local letter81\n\
    \    local letter82\n    local letter83\n    local letter84\n    local letter85\n\
    \    local letter86\n    local letter87\n    local letter88\n    local letter89\n\
    \    local letter90\n    local letter91\n    local letter92\n    local letter93\n\
    \    local letter94\n    local letter95\n    local letter96\n    local letter97\n\
    \    local letter98\n    local letter99\n", "    local string=$1\n    local length=${#string}\n\
    \    local count=0\n    local letters=()\n    local letter\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n", "   \
    \ local string=$1\n    local length=${#string}\n    if [[ $length -gt 3 ]]; then\n\
    \        local count=0\n        local letters=()\n        for (( i=0; i<${#string};\
    \ i++ )); do\n            local letter=${string:$i:1}\n            if [[ ${letters[*]}\
    \ != *$letter* ]]; then\n                count=$((count+1))\n            else\n\
    \                count=$((count+1))\n            fi\n            letters+=(\"\
    $letter\")\n        done\n        if [[ $count -eq 3 ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi", "    local string=\"$1\"\n    local length=\"\
    ${#string}\"\n    if [ \"${length}\" -lt 3 ]; then\n        echo \"false\"\n \
    \       return\n    fi\n    local i\n    for (( i=0; i<${#string}-3; i++ )); do\n\
    \        local j\n        for (( j=0; j<${#string}-i; j++ )); do\n           \
    \ local k\n            for (( k=0; k<${#string}-j; k++ )); do\n              \
    \  if [ \"${string:$j:$k:1}\" == \"${string:$j:$k+1:1}\" ]; then\n           \
    \         echo \"false\"\n                    return\n                fi\n   \
    \         done\n        done\n    done\n    echo \"true\"", "    local string=$1\n\
    \    local length=${#string}\n    if [[ $length -gt 3 ]]; then\n        local\
    \ count=1\n        local letters=()\n        while [[ $count -le $length ]]; do\n\
    \            local letter=${string:$count:1}\n            if [[ ${#letters[@]}\
    \ -eq 0 ]]; then\n                letters[$count]=$letter\n            else\n\
    \                local found=0\n                for i in \"${!letters[@]}\"; do\n\
    \                    if [[ \"$letter\" == \"${letters[$i]}\" ]]; then\n      \
    \                  found=1\n                        break\n                  \
    \  fi\n                done\n                if [[ $found -eq 0 ]]; then\n   \
    \                 letters[$count]=$letter\n                fi\n            fi\n\
    \            ((count++))\n        done\n        local count=1\n        while [[\
    \ $count -le $length ]]; do\n            local letter=${string:$count:1}\n   \
    \         if [[ \"$letter\" != \"${letters[$((count-1))]}\" ]]; then\n       \
    \         return 0\n            fi\n            ((count++))\n        done\n  \
    \      return 1\n    else\n        return 0\n    fi", "    local string=$1\n \
    \   local length=${#string}\n    local count=1\n    local letters=()\n    local\
    \ letter\n    local i\n    local j\n    local k\n    local l\n    local m\n  \
    \  local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n", "    local string=\"$1\"\n    local length=${#string}\n\
    \    local count=1\n    local letters=()\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n", "   \
    \ local string=\"$1\"\n    local length=${#string}\n    local count=0\n    local\
    \ letters=()\n    local letter\n    local result\n\n    if [[ $length -gt 3 ]];\
    \ then\n        echo \"$string is not happy\"\n        return 1\n    fi\n\n  \
    \  for (( i=0; i<$length; i++ )); do\n        letter=${string:$i:1}\n        if\
    \ [[ ${letters[*]} != *\"$letter\"* ]]; then\n            count=$((count+1))\n\
    \            letters+=(\"$letter\")\n        fi\n    done\n\n    if [[ $count\
    \ -eq 3 ]]; then\n        result=\"true\"\n    else\n        result=\"false\"\n\
    \    fi\n\n    echo \"$result\"", "    local string=\"$1\"\n    local len=${#string}\n\
    \    local count=0\n    local letters=()\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n", "  local\
    \ string=\"$1\"\n  local length=${#string}\n  local count=0\n  local letters=()\n\
    \  local i=0\n  while [ $i -lt $length ]; do\n    letters[$i]=${string:$i:1}\n\
    \    (( i++ ))\n  done\n  local j=0\n  while [ $j -lt $length ]; do\n    (( j++\
    \ ))\n    local letter=${letters[$j]}\n    local letterCount=0\n    for (( i=0;\
    \ i<$length-1; i++ )); do\n      if [ \"$letter\" == \"$letters[$i]\" ]; then\n\
    \        (( letterCount++ ))\n      fi\n    done\n    if [ \"$letterCount\" -eq\
    \ 3 ]; then\n      (( count++ ))\n    fi\n  done\n  if [ \"$count\" -eq 3 ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi", "    local string=\"$1\"\
    \n    local length=${#string}\n    local count=0\n    local letter\n    local\
    \ letter2\n    local letter3\n    local letter4\n    local letter5\n    local\
    \ letter6\n    local letter7\n    local letter8\n    local letter9\n    local\
    \ letter10\n    local letter11\n    local letter12\n    local letter13\n    local\
    \ letter14\n    local letter15\n    local letter16\n    local letter17\n    local\
    \ letter18\n    local letter19\n    local letter20\n    local letter21\n    local\
    \ letter22\n    local letter23\n    local letter24\n    local letter25\n    local\
    \ letter26\n    local letter27\n    local letter28\n    local letter29\n    local\
    \ letter30\n    local letter31\n    local letter32\n    local letter33\n    local\
    \ letter34\n    local letter35\n    local letter36\n    local letter37\n    local\
    \ letter38\n    local letter39\n    local letter40\n    local letter41\n    local\
    \ letter42\n    local letter43\n    local letter44\n    local letter45\n    local\
    \ letter46\n    local letter47\n    local letter48\n    local letter49\n    local\
    \ letter50\n    local letter51\n    local letter52\n    local letter53\n    local\
    \ letter54\n    local letter55\n    local letter56\n    local letter57\n    local\
    \ letter58\n    local letter59\n    local letter60\n    local letter61\n    local\
    \ letter62\n    local letter63\n    local letter64\n    local letter65\n    local\
    \ letter66\n    local letter67\n    local letter68\n    local letter69\n    local\
    \ letter70\n    local letter71\n    local letter72\n    local letter73\n    local\
    \ letter74\n    local letter75\n    local letter76\n    local letter77\n    local\
    \ letter78\n    local letter79\n    local letter80\n    local letter81\n    local\
    \ letter82\n    local letter83\n    local letter84\n    local letter85\n    local\
    \ letter86\n    local letter87\n    local letter88\n    local letter89\n    local\
    \ letter90\n    local letter91\n    local letter92\n    local letter93\n    local\
    \ letter94\n    local letter95\n    local letter96\n    local letter97\n    local\
    \ letter98\n    local letter99\n", "  local string=\"$1\"\n  local length=\"${#string}\"\
    \n  local count=0\n  local letters=()\n  local letter\n  local result\n\n  if\
    \ [[ $length -gt 3 ]]; then\n    return 0\n  fi\n\n  while (( count < length ));\
    \ do\n    letter=\"${string:$count:1}\"\n    letters+=($letter)\n    (( count++\
    \ ))\n  done\n\n  result=$(echo \"${letters[*]}\" | sort -u | grep -q \"^[a-z]$\"\
    )\n\n  if [[ $result -eq 1 ]]; then\n    return 0\n  fi\n\n  return 1"]
stop_tokens:
- "\n}"

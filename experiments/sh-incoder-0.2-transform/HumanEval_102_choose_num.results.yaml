language: sh
name: HumanEval_102_choose_num
results:
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    \n    # Find max and even numbers\n    max=$(( x > y ? x :\
    \ y ))\n    even=$(( max % 2 ))\n    odd=$(( max - even ))\n    \n    # Find max\
    \ and odd numbers\n    max=$(( x > y ? y : x ))\n    even=$(( max % 2 ))\n   \
    \ odd=$(( max - even ))\n    \n    # Find max and even numbers that are in the\
    \ range\n    for i in $(seq 1 $(( max - even + 1)); do\n        (( even += 1 ))\n\
    \        if (( even % 2 )); then\n            (( odd += 1 ))\n        fi\n   \
    \ done\n    \n    # Return max even number if even, -1 if odd, otherwise return\
    \ -1\n    if (( even )); then\n        echo \"$even\"\n    else\n        echo\
    \ \"$odd\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyo_2izxa.sh: line 32: unexpected EOF while looking for matching
    `)''

    /tmp/tmpyo_2izxa.sh: line 64: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local even\n\
    \    local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    if [ \"$x\" -gt \"$y\" ];\
    \ then\n        result=\"$x\"\n    elif [ \"$x\" -eq \"$y\" ]; then\n        result=\"\
    $x\"\n    elif [ \"$y\" -gt \"$x\" ]; then\n        result=\"$y\"\n    elif [\
    \ \"$y\" -eq \"$x\" ]; then\n        result=\"$y\"\n    else\n        result=\"\
    -1\"\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y z\n    x=$1\n    y=$2\n    z=$((x+y))\n    while [ $z -gt $y ]; do\n   \
    \     ((z+=2))\n    done\n    while [ $z -gt $x ]; do\n        ((z+=2))\n    done\n\
    \    echo $z\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660054006
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local z=$((x+y))\n    while [ $z -le $y ]; do\n  \
    \      if [ $((z % 2)) -eq 0 ]; then\n            echo $z\n            break\n\
    \        fi\n        ((z++))\n    done\n    if [ $z -eq $y ]; then\n        echo\
    \ \"-1\"\n    else\n        echo $z\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    if [ $num\
    \ -ge 0 ] && [ $num -le $(($x + $y)) ]; then\n        echo $num\n    else\n  \
    \      echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y\n  x=$1\n  y=$2\n  local max\n  max=$(( x > y ? x : y ))\n  while [ $((\
    \ max % 2 )) -ne 0 ]; do\n    (( max /= 2 ))\n  done\n  echo $max\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $x + $y ))\"\n    local b=\"$(( $z + 1 ))\"\n    local c=\"$(( $a + $b ))\"\
    \n    local d=\"$(( $c - $x ))\"\n    local e=\"$(( $d - $y ))\"\n    local f=\"\
    $(( $e + $z ))\"\n    local g=\"$(( $f + 1 ))\"\n    local h=\"$(( $g + $x ))\"\
    \n    local i=\"$(( $h + $y ))\"\n    local j=\"$(( $i + $z ))\"\n    local k=\"\
    $(( $j + 1 ))\"\n    local l=\"$(( $k + $x ))\"\n    local m=\"$(( $l + $y ))\"\
    \n    local n=\"$(( $m + $z ))\"\n    local o=\"$(( $n + 1 ))\"\n    local p=\"\
    $(( $o + $x ))\"\n    local q=\"$(( $p + $y ))\"\n    local r=\"$(( $q + $z ))\"\
    \n    local s=\"$(( $r + 1 ))\"\n    local t=\"$(( $s + $x ))\"\n    local u=\"\
    $(( $t + $y ))\"\n    local v=\"$(( $u + $z ))\"\n    local w=\"$(( $v + 1 ))\"\
    \n    local x=\"$(( $w + $x ))\"\n    local y=\"$(( $x + $y ))\"\n    local z=\"\
    $(( $y + $z ))\"\n    local a=\"$(( $x + $y ))\"\n    local b=\"$(( $z + 1 ))\"\
    \n    local c=\"$(( $a + $b ))\"\n    local d=\"$(( $c - $x ))\"\n    local e=\"\
    $(( $d - $y ))\"\n    local f=\"$(( $e + $z ))\"\n    local g=\"$(( $f + 1 ))\"\
    \n    local h=\"$(( $g + $x ))\"\n    local i=\"$(( $h + $y ))\"\n    local j=\"\
    $(( $i + $z ))\"\n    local k=\"$(( $j + 1 ))\"\n    local l=\"$(( $k + $x ))\"\
    \n    local m=\"$(( $l + $y ))\"\n    local n=\"$(( $\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpco02mba6.sh: line 56: unexpected EOF while looking for matching
    `)''

    /tmp/tmpco02mba6.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local even2\n    local odd2\n    local even3\n    local\
    \ odd3\n    local even4\n    local odd4\n    local even5\n    local odd5\n   \
    \ local even6\n    local odd6\n    local even7\n    local odd7\n    local even8\n\
    \    local odd8\n    local even9\n    local odd9\n    local even10\n    local\
    \ odd10\n    local even11\n    local odd11\n    local even12\n    local odd12\n\
    \    local even13\n    local odd13\n    local even14\n    local odd14\n    local\
    \ even15\n    local odd15\n    local even16\n    local odd16\n    local even17\n\
    \    local odd17\n    local even18\n    local odd18\n    local even19\n    local\
    \ odd19\n    local even20\n    local odd20\n    local even21\n    local odd21\n\
    \    local even22\n    local odd22\n    local even23\n    local odd23\n    local\
    \ even24\n    local odd24\n    local even25\n    local odd25\n    local even26\n\
    \    local odd26\n    local even27\n    local odd27\n    local even28\n    local\
    \ odd28\n    local even29\n    local odd29\n    local even30\n    local odd30\n\
    \    local even31\n    local odd31\n    local even32\n    local odd32\n    local\
    \ even33\n    local odd33\n    local even34\n    local odd34\n    local even35\n\
    \    local odd35\n    local even36\n    local odd36\n    local even37\n    local\
    \ odd37\n    local even38\n    local odd38\n    local even39\n    local odd39\n\
    \    local even40\n    local odd40\n    local even41\n    local odd41\n    local\
    \ even42\n    local odd42\n    local even43\n    local odd43\n    local even44\n\
    \    local odd44\n    local even45\n    local odd45\n    local even46\n    local\
    \ odd46\n    local even47\n    local odd47\n    local even48\n    local odd48\n\
    \    local even49\n    local odd49\n\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x+y) / 2 ))\"\n    local a=\"\
    $(( (x+y) % 2 ))\"\n    if [ \"$a\" -eq 0 ]; then\n        echo \"$z\"\n    else\n\
    \        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    local num\n    local even\n    local odd\n    local even2\n    local\
    \ odd2\n    local even3\n    local odd3\n    local even4\n    local odd4\n   \
    \ local even5\n    local odd5\n    local even6\n    local odd6\n    local even7\n\
    \    local odd7\n    local even8\n    local odd8\n    local even9\n    local odd9\n\
    \    local even10\n    local odd10\n    local even11\n    local odd11\n    local\
    \ even12\n    local odd12\n    local even13\n    local odd13\n    local even14\n\
    \    local odd14\n    local even15\n    local odd15\n    local even16\n    local\
    \ odd16\n    local even17\n    local odd17\n    local even18\n    local odd18\n\
    \    local even19\n    local odd19\n    local even20\n    local odd20\n    local\
    \ even21\n    local odd21\n    local even22\n    local odd22\n    local even23\n\
    \    local odd23\n    local even24\n    local odd24\n    local even25\n    local\
    \ odd25\n    local even26\n    local odd26\n    local even27\n    local odd27\n\
    \    local even28\n    local odd28\n    local even29\n    local odd29\n    local\
    \ even30\n    local odd30\n    local even31\n    local odd31\n    local even32\n\
    \    local odd32\n    local even33\n    local odd33\n    local even34\n    local\
    \ odd34\n    local even35\n    local odd35\n    local even36\n    local odd36\n\
    \    local even37\n    local odd37\n    local even38\n    local odd38\n    local\
    \ even39\n    local odd39\n    local even40\n    local odd40\n    local even41\n\
    \    local odd41\n    local even42\n    local odd42\n    local even43\n    local\
    \ odd43\n    local even44\n    local odd44\n    local even45\n    local odd45\n\
    \    local even46\n    local odd46\n    local even47\n    local odd47\n    local\
    \ even48\n    local odd48\n    local even49\n    local odd49\n    local even50\n\
    \    local odd50\n    local even51\n\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y\n  x=$1\n  y=$2\n  local max\n  max=$(( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpln95nx7v.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmpln95nx7v.sh: line 38: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( y - b ))\"\n   \
    \ local d=\"$(( c - a ))\"\n    local e=\"$(( b - a ))\"\n    local f=\"$(( e\
    \ - d ))\"\n    local g=\"$(( f - c ))\"\n    local h=\"$(( g - b ))\"\n    local\
    \ i=\"$(( h - a ))\"\n    local j=\"$(( i - a ))\"\n    local k=\"$(( j - a ))\"\
    \n    local l=\"$(( k - a ))\"\n    local m=\"$(( l - a ))\"\n    local n=\"$((\
    \ m - a ))\"\n    local o=\"$(( n - a ))\"\n    local p=\"$(( o - a ))\"\n   \
    \ local q=\"$(( p - a ))\"\n    local r=\"$(( q - a ))\"\n    local s=\"$(( r\
    \ - a ))\"\n    local t=\"$(( s - a ))\"\n    local u=\"$(( t - a ))\"\n    local\
    \ v=\"$(( u - a ))\"\n    local w=\"$(( v - a ))\"\n    local x=\"$(( w - a ))\"\
    \n    local y=\"$(( x - a ))\"\n    local z=\"$(( y - a ))\"\n    local a=\"$((\
    \ z - a ))\"\n    local b=\"$(( a % 2 ))\"\n    local c=\"$(( a / 2 ))\"\n   \
    \ local d=\"$(( c - b ))\"\n    local e=\"$(( d - b ))\"\n    local f=\"$(( e\
    \ - b ))\"\n    local g=\"$(( f - b ))\"\n    local h=\"$(( g - b ))\"\n    local\
    \ i=\"$(( h - b ))\"\n    local j=\"$(( i - b ))\"\n    local k=\"$(( j - b ))\"\
    \n    local l=\"$(( k - b ))\"\n    local m=\"$(( l - b ))\"\n    local n=\"$((\
    \ m - b ))\"\n    local o=\"$(( n - b ))\"\n    local p=\"$(( o - b ))\"\n   \
    \ local q=\"$(( p - \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmludrv6d.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmludrv6d.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y z\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    while\
    \ [ $num -gt $y ]\n    do\n        (( num -= y ))\n    done\n    while [ $num\
    \ -gt $x ]\n    do\n        (( num -= x ))\n    done\n    if [ $num -eq 0 ]\n\
    \    then\n        echo \"-1\"\n    else\n        echo $num\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    read x y <<< \"$2\"\n    local num\n    local\
    \ max\n    local i\n    \n    if [ $x -le $y ]; then\n        num=$(expr $x +\
    \ 1)\n    else\n        num=$(expr $y - 1)\n    fi\n    \n    for i in $(seq 0\
    \ $((num-1))); do\n        if [ $((num % 2)) -eq 0 ]; then\n            num=$(expr\
    \ $num / 2)\n        else\n            num=$(expr $num / 2)\n            if [\
    \ $num -gt $max ]; then\n                max=$num\n            fi\n        fi\n\
    \    done\n    \n    if [ $max -eq 0 ]; then\n        echo \"-1\"\n    else\n\
    \        echo $max\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmpy14u6ymc.sh: line 21: [: 15: unary operator expected\nexpr: syntax\
    \ error: unexpected argument \u20181\u2019\n/tmp/tmpy14u6ymc.sh: line 38: [: -eq:\
    \ unary operator expected\n"
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x + ( y - x ) ))\"\n    local\
    \ a=\"$(( z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z / 2 ))\"\
    \n    local d=\"$(( z / 2 ))\"\n    local e=\"$(( z / 2 ))\"\n    local f=\"$((\
    \ z / 2 ))\"\n    local g=\"$(( z / 2 ))\"\n    local h=\"$(( z / 2 ))\"\n   \
    \ local i=\"$(( z / 2 ))\"\n    local j=\"$(( z / 2 ))\"\n    local k=\"$(( z\
    \ / 2 ))\"\n    local l=\"$(( z / 2 ))\"\n    local m=\"$(( z / 2 ))\"\n    local\
    \ n=\"$(( z / 2 ))\"\n    local o=\"$(( z / 2 ))\"\n    local p=\"$(( z / 2 ))\"\
    \n    local q=\"$(( z / 2 ))\"\n    local r=\"$(( z / 2 ))\"\n    local s=\"$((\
    \ z / 2 ))\"\n    local t=\"$(( z / 2 ))\"\n    local u=\"$(( z / 2 ))\"\n   \
    \ local v=\"$(( z / 2 ))\"\n    local w=\"$(( z / 2 ))\"\n    local x=\"$(( z\
    \ / 2 ))\"\n    local y=\"$(( z / 2 ))\"\n    local z=\"$(( z / 2 ))\"\n    local\
    \ a=\"$(( z / 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z / 2 ))\"\
    \n    local d=\"$(( z / 2 ))\"\n    local e=\"$(( z / 2 ))\"\n    local f=\"$((\
    \ z / 2 ))\"\n    local g=\"$(( z / 2 ))\"\n    local h=\"$(( z / 2 ))\"\n   \
    \ local i=\"$(( z / 2 ))\"\n    local j=\"$(( z / 2 ))\"\n    local k=\"$(( z\
    \ / 2 ))\"\n    local l=\"$(( z / 2 ))\"\n    local m=\"$(( z / 2 ))\"\n    local\
    \ n=\"$(( z / 2 ))\"\n    local o=\"$((\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpezz8n81u.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpezz8n81u.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local even\n    local odd\n    local max\n    local\
    \ min\n    local num\n    local num2\n    local num3\n    local num4\n    local\
    \ num5\n    local num6\n    local num7\n    local num8\n    local num9\n    local\
    \ num10\n    local num11\n    local num12\n    local num13\n    local num14\n\
    \    local num15\n    local num16\n    local num17\n    local num18\n    local\
    \ num19\n    local num20\n    local num21\n    local num22\n    local num23\n\
    \    local num24\n    local num25\n    local num26\n    local num27\n    local\
    \ num28\n    local num29\n    local num30\n    local num31\n    local num32\n\
    \    local num33\n    local num34\n    local num35\n    local num36\n    local\
    \ num37\n    local num38\n    local num39\n    local num40\n    local num41\n\
    \    local num42\n    local num43\n    local num44\n    local num45\n    local\
    \ num46\n    local num47\n    local num48\n    local num49\n    local num50\n\
    \    local num51\n    local num52\n    local num53\n    local num54\n    local\
    \ num55\n    local num56\n    local num57\n    local num58\n    local num59\n\
    \    local num60\n    local num61\n    local num62\n    local num63\n    local\
    \ num64\n    local num65\n    local num66\n    local num67\n    local num68\n\
    \    local num69\n    local num70\n    local num71\n    local num72\n    local\
    \ num73\n    local num74\n    local num75\n    local num76\n    local num77\n\
    \    local num78\n    local num79\n    local num80\n    local num81\n    local\
    \ num82\n    local num83\n    local num84\n    local num85\n    local num86\n\
    \    local num87\n    local num88\n    local num89\n    local num90\n    local\
    \ num91\n    local num92\n    local num93\n    local num94\n    local num95\n\
    \    local num96\n    local num97\n    \n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local num\n  local max\n  local even\n  local\
    \ odd\n  local even2\n  local odd2\n  local even3\n  local odd3\n  local even4\n\
    \  local odd4\n  local even5\n  local odd5\n  local even6\n  local odd6\n  local\
    \ even7\n  local odd7\n  local even8\n  local odd8\n  local even9\n  local odd9\n\
    \  local even10\n  local odd10\n  local even11\n  local odd11\n  local even12\n\
    \  local odd12\n  local even13\n  local odd13\n  local even14\n  local odd14\n\
    \  local even15\n  local odd15\n  local even16\n  local odd16\n  local even17\n\
    \  local odd17\n  local even18\n  local odd18\n  local even19\n  local odd19\n\
    \  local even20\n  local odd20\n  local even21\n  local odd21\n  local even22\n\
    \  local odd22\n  local even23\n  local odd23\n  local even24\n  local odd24\n\
    \  local even25\n  local odd25\n  local even26\n  local odd26\n  local even27\n\
    \  local odd27\n  local even28\n  local odd28\n  local even29\n  local odd29\n\
    \  local even30\n  local odd30\n  local even31\n  local odd31\n  local even32\n\
    \  local odd32\n  local even33\n  local odd33\n  local even34\n  local odd34\n\
    \  local even35\n  local odd35\n  local even36\n  local odd36\n  local even37\n\
    \  local odd37\n  local even38\n  local odd38\n  local even39\n  local odd39\n\
    \  local even40\n  local odd40\n  local even41\n  local odd41\n  local even42\n\
    \  local odd42\n  local even43\n  local odd43\n  local even44\n  local odd44\n\
    \  local even45\n  local odd45\n  local even46\n  local odd46\n  local even47\n\
    \  local odd47\n  local even48\n  local odd48\n  local even49\n  local odd49\n\
    \  local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y num\n    x=$1\n    y=$2\n    if [ $x -ge $y ]; then\n        echo \"-1\"\
    \n    else\n        num=$(echo $(( $x % $y )) | bc)\n        if [ $num -eq 0 ];\
    \ then\n            echo \"$x\"\n        else\n            echo \"$y\"\n     \
    \   fi\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local result\n  \n  result=$(( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptxhi_268.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmptxhi_268.sh: line 38: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local result\n  \n  result=$(( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptxhi_268.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmptxhi_268.sh: line 38: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local result\n    if [[ $x -le $y ]]; then\n\
    \        result=$(( ( ( ( $x % 2 != 0 ) &&  $y % 2 != 0 ) &&  $x -gt $y ) ?  -1\
    \ :  $x ))\n    else\n        result=$(( ( ( ( $x % 2 != 0 ) &&  $y % 2 != 0 )\
    \ &&  $x -le $y ) ?  -1 :  $x ))\n    fi\n    echo $result\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy8xewkq8.sh: line 20: ( ( ( 12 % 2 != 0 ) &&   % 2 != 0 ) &&  12
    -le  ) ?  -1 :  12 : syntax error: operand expected (error token is "% 2 != 0
    ) &&  12 -le  ) ?  -1 :  12 ")

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -gt $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    read x y <<< \"$2\"\n    local num\n    local\
    \ even\n    local odd\n    local max\n    local min\n    local range\n    local\
    \ result\n    local i\n    \n    # Check if x is greater than y\n    if [ \"$x\"\
    \ -gt \"$y\" ]; then\n        echo \"$x is greater than $y\"\n        return 1\n\
    \    fi\n    \n    # Check if x is less than y\n    if [ \"$x\" -lt \"$y\" ];\
    \ then\n        echo \"$x is less than $y\"\n        return -1\n    fi\n    \n\
    \    # Check if x is equal to y\n    if [ \"$x\" -eq \"$y\" ]; then\n        echo\
    \ \"$x is equal to $y\"\n        return 0\n    fi\n    \n    # Check if x is greater\
    \ than or equal to y\n    if [ \"$x\" -ge \"$y\" ]; then\n        echo \"$x is\
    \ greater than or equal to $y\"\n        return 0\n    fi\n    \n    # Check if\
    \ x is less than or equal to y\n    if [ \"$x\" -le \"$y\" ]; then\n        echo\
    \ \"$x is less than or equal to $y\"\n        return 0\n    fi\n    \n    # Check\
    \ if x is between y and z\n    if [ \"$x\" -ge \"$y\" -a \"$x\" -le \"$z\" ];\
    \ then\n        echo \"$x is between $y and $z\"\n        return 0\n    fi\n \
    \   \n    # Check if x is between y and z\n    if [ \"$x\" -ge \"$y\" -a \"$x\"\
    \ -le \"$z\" ]; then\n        echo \"$x is between $y and $z\"\n        return\
    \ 0\n    fi\n    \n    # Check if x is between y and z\n    if [ \"$x\" -ge \"\
    $y\" -a \"$x\" -le \"$z\" ]; then\n        echo \"$x is between $y and $z\"\n\
    \        return 0\n    fi\n    \n    # Check if x is between y and z\n    if [\
    \ \"$x\" -ge \"$y\" -a \"$x\" -le \"$z\" ]; then\n        echo \"$x is between\
    \ $y and $z\"\n        return 0\n    fi\n    \n    # Check if x is between y and\
    \ z\n    if [ \"$x\" -ge \"$y\" -a \"$x\" -le \"$z\" ]; then\n        echo \"\
    $x is between $y and $z\"\n        return 0\n    fi\n    \n    # Check if x is\
    \ between y and z\n    if [ \"$x\" -ge \"$y\" -a \"$x\" -le \"$z\" ]; then\n \
    \       echo \"$x is between $y and $z\"\n        return 0\n    fi\n    \n   \
    \ # Check if x is between y and z\n    if [ \"$\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy95o3u9l.sh: line 109: unexpected EOF while looking for matching
    `"''

    /tmp/tmpy95o3u9l.sh: line 113: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(( x > y ? x : y ))\n    local\
    \ i\n    i=$(( num % 2 ))\n    while [ $i -eq 0 ]; do\n        (( num-- ))\n \
    \       i=$(( num % 2 ))\n    done\n    echo $num\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local result\n    local i\n    for ((i=1;\
    \ i<=y; i++)); do\n        result=$((x%i))\n        if (( result != 0 )); then\n\
    \            echo \"$result\"\n            break\n        fi\n    done\n    if\
    \ (( result == 0 )); then\n        echo \"-1\"\n    else\n        echo \"$result\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local even2\n    local odd2\n    local even3\n    local\
    \ odd3\n    local even4\n    local odd4\n    local even5\n    local odd5\n   \
    \ local even6\n    local odd6\n    local even7\n    local odd7\n    local even8\n\
    \    local odd8\n    local even9\n    local odd9\n    local even10\n    local\
    \ odd10\n    local even11\n    local odd11\n    local even12\n    local odd12\n\
    \    local even13\n    local odd13\n    local even14\n    local odd14\n    local\
    \ even15\n    local odd15\n    local even16\n    local odd16\n    local even17\n\
    \    local odd17\n    local even18\n    local odd18\n    local even19\n    local\
    \ odd19\n    local even20\n    local odd20\n    local even21\n    local odd21\n\
    \    local even22\n    local odd22\n    local even23\n    local odd23\n    local\
    \ even24\n    local odd24\n    local even25\n    local odd25\n    local even26\n\
    \    local odd26\n    local even27\n    local odd27\n    local even28\n    local\
    \ odd28\n    local even29\n    local odd29\n    local even30\n    local odd30\n\
    \    local even31\n    local odd31\n    local even32\n    local odd32\n    local\
    \ even33\n    local odd33\n    local even34\n    local odd34\n    local even35\n\
    \    local odd35\n    local even36\n    local odd36\n    local even37\n    local\
    \ odd37\n    local even38\n    local odd38\n    local even39\n    local odd39\n\
    \    local even40\n    local odd40\n    local even41\n    local odd41\n    local\
    \ even42\n    local odd42\n    local even43\n    local odd43\n    local even44\n\
    \    local odd44\n    local even45\n    local odd45\n    local even46\n    local\
    \ odd46\n    local even47\n    local odd47\n    local even48\n    local odd48\n\
    \    local even49\n    local odd49\n\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local even2\n    local odd2\n    local even3\n    local\
    \ odd3\n    local even4\n    local odd4\n    local even5\n    local odd5\n   \
    \ local even6\n    local odd6\n    local even7\n    local odd7\n    local even8\n\
    \    local odd8\n    local even9\n    local odd9\n    local even10\n    local\
    \ odd10\n    local even11\n    local odd11\n    local even12\n    local odd12\n\
    \    local even13\n    local odd13\n    local even14\n    local odd14\n    local\
    \ even15\n    local odd15\n    local even16\n    local odd16\n    local even17\n\
    \    local odd17\n    local even18\n    local odd18\n    local even19\n    local\
    \ odd19\n    local even20\n    local odd20\n    local even21\n    local odd21\n\
    \    local even22\n    local odd22\n    local even23\n    local odd23\n    local\
    \ even24\n    local odd24\n    local even25\n    local odd25\n    local even26\n\
    \    local odd26\n    local even27\n    local odd27\n    local even28\n    local\
    \ odd28\n    local even29\n    local odd29\n    local even30\n    local odd30\n\
    \    local even31\n    local odd31\n    local even32\n    local odd32\n    local\
    \ even33\n    local odd33\n    local even34\n    local odd34\n    local even35\n\
    \    local odd35\n    local even36\n    local odd36\n    local even37\n    local\
    \ odd37\n    local even38\n    local odd38\n    local even39\n    local odd39\n\
    \    local even40\n    local odd40\n    local even41\n    local odd41\n    local\
    \ even42\n    local odd42\n    local even43\n    local odd43\n    local even44\n\
    \    local odd44\n    local even45\n    local odd45\n    local even46\n    local\
    \ odd46\n    local even47\n    local odd47\n    local even48\n    local odd48\n\
    \    local even49\n    local odd49\n\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local num\n\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo\
    \ \"$x is greater than $y\"\n        return -1\n    elif [ \"$x\" -lt \"$y\" ];\
    \ then\n        echo \"$x is less than $y\"\n        return -1\n    fi\n\n   \
    \ max=$x\n    even=1\n    odd=1\n    num=$(expr $x + $y)\n\n    for i in $(seq\
    \ 1 $num); do\n        if [ $(( $i % 2 )) -eq 0 ]; then\n            even=$((\
    \ $even + 1 ))\n        else\n            odd=$(( $odd + 1 ))\n        fi\n  \
    \  done\n\n    if [ $even -gt $odd ]; then\n        echo \"$max is even\"\n  \
    \      return $even\n    else\n        echo \"$max is odd\"\n        return $odd\n\
    \    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y z\n    x=$1\n    y=$2\n    \n    while [ $x -le $y ]; do\n        z=$((\
    \ $x + $y ))\n        if [ $z -gt $(( 2 * $x )) ]; then\n            x=$z\n  \
    \      else\n            y=$z\n        fi\n    done\n    \n    if [ $x -le $y\
    \ ]; then\n        echo $x\n    else\n        echo $y\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max_num=\"$x\"\n    local min_num=\"\
    $y\"\n    local even=0\n    local odd=0\n    local max_even=0\n    local max_odd=0\n\
    \    local max_even2=0\n    local max_odd2=0\n    local max_even3=0\n    local\
    \ max_odd3=0\n    local max_even4=0\n    local max_odd4=0\n    local max_even5=0\n\
    \    local max_odd5=0\n    local max_even6=0\n    local max_odd6=0\n    local\
    \ max_even7=0\n    local max_odd7=0\n    local max_even8=0\n    local max_odd8=0\n\
    \    local max_even9=0\n    local max_odd9=0\n    local max_even10=0\n    local\
    \ max_odd10=0\n    local max_even11=0\n    local max_odd11=0\n    local max_even12=0\n\
    \    local max_odd12=0\n    local max_even13=0\n    local max_odd13=0\n    local\
    \ max_even14=0\n    local max_odd14=0\n    local max_even15=0\n    local max_odd15=0\n\
    \    local max_even16=0\n    local max_odd16=0\n    local max_even17=0\n    local\
    \ max_odd17=0\n    local max_even18=0\n    local max_odd18=0\n    local max_even19=0\n\
    \    local max_odd19=0\n    local max_even20=0\n    local max_odd20=0\n    local\
    \ max_even21=0\n    local max_odd21=0\n    local max_even22=0\n    local max_odd22=0\n\
    \    local max_even23=0\n    local max_odd23=0\n    local max_even24=0\n    local\
    \ max_odd24=0\n    local max_even25=0\n    local max_odd25=0\n    local max_even26=0\n\
    \    local max_odd26=0\n    local max_even27=0\n    local max_odd27=0\n    local\
    \ max_even28=0\n    local max_odd28=0\n    local max_even29=0\n    local max_odd29=0\n\
    \    local max_even30=0\n    local max_odd30=0\n    local max_even31=0\n    local\
    \ max_odd31=0\n    local max_even32=0\n    local max_odd32=0\n    local max_even33=0\n\
    \    local max_odd33=0\n    local max_even34=0\n    local max_odd34=0\n    \n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( y - b ))\"\n   \
    \ local d=\"$(( y - a ))\"\n    local e=\"$(( x - c ))\"\n    local f=\"$(( x\
    \ - d ))\"\n    local g=\"$(( y - e ))\"\n    local h=\"$(( x - f ))\"\n    local\
    \ i=\"$(( y - g ))\"\n    local j=\"$(( x - h ))\"\n    local k=\"$(( y - i ))\"\
    \n    local l=\"$(( x - j ))\"\n    local m=\"$(( y - k ))\"\n    local n=\"$((\
    \ x - l ))\"\n    local o=\"$(( y - m ))\"\n    local p=\"$(( x - n ))\"\n   \
    \ local q=\"$(( y - o ))\"\n    local r=\"$(( x - p ))\"\n    local s=\"$(( y\
    \ - q ))\"\n    local t=\"$(( x - r ))\"\n    local u=\"$(( y - s ))\"\n    local\
    \ v=\"$(( x - t ))\"\n    local w=\"$(( y - u ))\"\n    local x=\"$(( x - v ))\"\
    \n    local y=\"$(( y - w ))\"\n    local z=\"$(( x - x ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( y - b ))\"\n   \
    \ local d=\"$(( y - a ))\"\n    local e=\"$(( x - c ))\"\n    local f=\"$(( x\
    \ - d ))\"\n    local g=\"$(( y - e ))\"\n    local h=\"$(( x - f ))\"\n    local\
    \ i=\"$(( y - g ))\"\n    local j=\"$(( x - h ))\"\n    local k=\"$(( y - i ))\"\
    \n    local l=\"$(( x - j ))\"\n    local m=\"$(( y - k ))\"\n    local n=\"$((\
    \ x - l ))\"\n    local o=\"$(( y - m ))\"\n    local p=\"$(( x - n ))\"\n   \
    \ local q=\"$(( y - o ))\"\n    local r=\"$(( x - p ))\"\n    \n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -gt $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    local even\n\
    \    even=$(expr $num % 2)\n    if [ \"$even\" -eq 0 ]; then\n        echo $num\n\
    \    else\n        echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    local i\n    local j\n \
    \   \n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is bigger than $y\"\
    \n        return -1\n    elif [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is\
    \ smaller than $y\"\n        return -1\n    elif [ \"$x\" -eq \"$y\" ]; then\n\
    \        echo \"$x is equal to $y\"\n        return 0\n    fi\n    \n    for i\
    \ in $(seq 0 \"$(( x - 1 ))\"); do\n        result=$(( $i * $y ))\n        if\
    \ [ \"$result\" -ge \"$y\" ]; then\n            echo \"$result is greater than\
    \ $y\"\n            return -1\n        elif [ \"$result\" -le \"$y\" ]; then\n\
    \            echo \"$result is smaller than $y\"\n            return -1\n    \
    \    fi\n    done\n    \n    for i in $(seq 0 \"$(( y - 1 ))\"); do\n        result=$((\
    \ $x * $i ))\n        if [ \"$result\" -ge \"$x\" ]; then\n            echo \"\
    $result is greater than $x\"\n            return -1\n        elif [ \"$result\"\
    \ -le \"$x\" ]; then\n            echo \"$result is smaller than $x\"\n      \
    \      return -1\n        fi\n    done\n    \n    for i in $(seq 0 \"$(( y - 1\
    \ ))\"); do\n        result=$(( $x * $i ))\n        if [ \"$result\" -ge \"$x\"\
    \ ]; then\n            echo \"$result is greater than $x\"\n            return\
    \ -1\n        elif [ \"$result\" -le \"$x\" ]; then\n            echo \"$result\
    \ is smaller than $x\"\n            return -1\n        fi\n    done\n    \n  \
    \  for i in $(seq 0 \"$(( x - 1 ))\"); do\n        result=$(( $i * $y ))\n   \
    \     if [ \"$result\" -ge \"$y\" ]; then\n            echo \"$result is greater\
    \ than $y\"\n            return -1\n        elif [ \"$result\" -le \"$y\" ]; then\n\
    \            echo \"$result is smaller than $y\"\n            return -1\n    \
    \    fi\n    done\n    \n    for i in $(seq 0 \"$(( y - 1 ))\"); do\n        result=$((\
    \ $i * $y ))\n        if [ \"$result\" -ge \"$y\" ]; then\n            echo \"\
    $result is greater than $y\"\n            return -1\n        elif [ \"$result\"\
    \ -le \"$y\" ]; then\n            echo \"$result is smaller than $y\"\n      \
    \      return -1\n        fi\n    done\n    \n    for i in $(seq 0 \"$(( y - 1\
    \ ))\"); do\n        result=$(( $i * $y ))\n        if [ \"$result\" -ge \"$y\"\
    \ ]; then\n            echo \"$result is greater than $y\"\n            return\
    \ -1\n        elif [ \"$result\" -le \"$y\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjgt2pogx.sh: line 107: unexpected EOF while looking for matching
    `"''

    /tmp/tmpjgt2pogx.sh: line 111: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( (x<y) ? x : y ))\n  (( z > y\
    \ )) && return -1 || return $z\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y num\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        num=$(echo\
    \ $(( $(echo $(( $y - ($x + 1)) / 2 )) )) | bc)\n        if [ $num -gt 0 ]; then\n\
    \            echo $num\n        else\n            echo -1\n        fi\n    else\n\
    \        echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8bu19e61.sh: command substitution: line 18: syntax error near unexpected
    token `(''

    /tmp/tmp8bu19e61.sh: command substitution: line 18: `( $y - ($x + 1)) / 2 ''

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y num\n    x=$1\n    y=$2\n    num=$(expr $x + $y)\n    while [ $num -gt $x\
    \ ]\n    do\n        ((num-=2))\n    done\n    if [ $num -eq $x ]\n    then\n\
    \        echo $num\n    else\n        echo $x\n    fi\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( x > y ? x : y ))\n    local\
    \ num=$(( max % 2 ))\n    local i\n    for (( i = 3; i <= max; i++ )); do\n  \
    \      (( num += i % 2 ))\n        if (( num == 0 )); then\n            break\n\
    \        fi\n    done\n    if (( num == 0 )); then\n        echo \"-1\"\n    else\n\
    \        echo \"$num\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuid4rql7.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmpuid4rql7.sh: line 37: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x - $y) / 2 ))\"\n    local\
    \ a=\"$(( $x + $z ))\"\n    local b=\"$(( $y + $z ))\"\n    local c=\"$(( $x +\
    \ $y ))\"\n    local d=\"$(( $y + $x ))\"\n    local e=\"$(( $x + $y ))\"\n  \
    \  local f=\"$(( $y + $x ))\"\n    local g=\"$(( $x + $y ))\"\n    local h=\"\
    $(( $y + $x ))\"\n    local i=\"$(( $x + $y ))\"\n    local j=\"$(( $y + $x ))\"\
    \n    local k=\"$(( $x + $y ))\"\n    local l=\"$(( $y + $x ))\"\n    local m=\"\
    $(( $x + $y ))\"\n    local n=\"$(( $y + $x ))\"\n    local o=\"$(( $x + $y ))\"\
    \n    local p=\"$(( $y + $x ))\"\n    local q=\"$(( $x + $y ))\"\n    local r=\"\
    $(( $y + $x ))\"\n    local s=\"$(( $x + $y ))\"\n    local t=\"$(( $y + $x ))\"\
    \n    local u=\"$(( $x + $y ))\"\n    local v=\"$(( $y + $x ))\"\n    local w=\"\
    $(( $x + $y ))\"\n    local x=\"$(( $y + $x ))\"\n    local y=\"$(( $x + $y ))\"\
    \n    local z=\"$(( $x + $y ))\"\n    local a=\"$(( $x + $y ))\"\n    local b=\"\
    $(( $x + $y ))\"\n    local c=\"$(( $x + $y ))\"\n    local d=\"$(( $x + $y ))\"\
    \n    local e=\"$(( $x + $y ))\"\n    local f=\"$(( $x + $y ))\"\n    local g=\"\
    $(( $x + $y ))\"\n    local h=\"$(( $x + $y ))\"\n    local i=\"$(( $x + $y ))\"\
    \n    local j=\"$(( $x + $y ))\"\n    local k=\"$(( $x + $y ))\"\n    local l=\"\
    $(( $x + $y ))\"\n    local m=\"$(( $x + $y ))\"\n    local n=\"$(( $x + $y ))\"\
    \n    local o=\"$((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb4tw88gk.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpb4tw88gk.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( (x<y) ? x : y ))\"\n  local a=\"\
    $(( (z%2==0) ? z : z+1 ))\"\n  local b=\"$(( (z%2==0) ? z : z-1 ))\"\n  echo \"\
    $a\"\n  echo \"$b\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local z=$((x+y))\n    local a=$((z%2))\n    local\
    \ b=$((z%4))\n    local c=$((z%8))\n    local d=$((z%16))\n    local e=$((z%32))\n\
    \    local f=$((z%64))\n    local g=$((z%128))\n    local h=$((z%256))\n    local\
    \ i=$((z%512))\n    local j=$((z%1024))\n    local k=$((z%2048))\n    local l=$((z%4096))\n\
    \    local m=$((z%8192))\n    local n=$((z%16384))\n    local o=$((z%32768))\n\
    \    local p=$((z%65536))\n    local q=$((z%131072))\n    local r=$((z%262144))\n\
    \    local s=$((z%524288))\n    local t=$((z%1048576))\n    local u=$((z%2097152))\n\
    \    local v=$((z%4194304))\n    local w=$((z%8388608))\n    local x=$((z%16777216))\n\
    \    local y=$((z%33554432))\n    local z=$((z%67108864))\n    local a=$((z%134217728))\n\
    \    local b=$((z%268435456))\n    local c=$((z%536870912))\n    local d=$((z%1073741824))\n\
    \    local e=$((z%2147483648))\n    local f=$((z%4294967296))\n    local g=$((z%8589934592))\n\
    \    local h=$((z%17179869184))\n    local i=$((z%34359738368))\n    local j=$((z%68719476736))\n\
    \    local k=$((z%137438953472))\n    local l=$((z%274877906944))\n    local m=$((z%549755813888))\n\
    \    local n=$((z%1099511627776))\n    local o=$((z%2199023255552))\n    local\
    \ p=$((z%43980465\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpai1vjgab.sh: line 58: unexpected EOF while looking for matching
    `)''

    /tmp/tmpai1vjgab.sh: line 78: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local num=$(( x > y ? x : y ))\n    local even=0\n\
    \    while [ $num -gt 0 ]; do\n        (( num % 2 )) && even=$(( even+1 ))\n \
    \       (( num-- ))\n    done\n    [ $even -eq 0 ] && return -1\n    echo $((\
    \ num + 1 ))\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y\n  x=$1\n  y=$2\n  local result\n  result=$(( (x<y) ? x : y ))\n  (( x >\
    \ y )) && return -1\n  (( x < y )) && return result\n  (( x == y )) && return\
    \ result\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj4usp51k.sh: line 20: return: result: numeric argument required

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    if [ $x -le $y ]; then\n\
    \        result=$(( ($x+$y)/2 ))\n    else\n        result=$(( $x-$y ))\n    fi\n\
    \    if [ $result -eq 0 ]; then\n        echo \"-1\"\n    else\n        echo \"\
    $result\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( ($x+$y)/2 ))\"\n  local a=\"$((\
    \ $x % 2 ))\"\n  local b=\"$(( $y % 2 ))\"\n  local c=\"$(( $z % 2 ))\"\n  local\
    \ d=\"$(( $a || $b || $c ))\"\n  local e=\"$(( $d && $c ))\"\n  local f=\"$((\
    \ $d && $b ))\"\n  local g=\"$(( $d && $a ))\"\n  local h=\"$(( $e || $f || $g\
    \ ))\"\n  local i=\"$(( $h && $g ))\"\n  local j=\"$(( $h && $f ))\"\n  local\
    \ k=\"$(( $h && $e ))\"\n  local l=\"$(( $h && $d ))\"\n  local m=\"$(( $h &&\
    \ $c ))\"\n  local n=\"$(( $h && $b ))\"\n  local o=\"$(( $h && $a ))\"\n  local\
    \ p=\"$(( $i || $j || $k || $l || $m || $n || $o ))\"\n  local q=\"$(( $p && $m\
    \ ))\"\n  local r=\"$(( $p && $n ))\"\n  local s=\"$(( $p && $o ))\"\n  local\
    \ t=\"$(( $q || $r ))\"\n  local u=\"$(( $t && $s ))\"\n  local v=\"$(( $t &&\
    \ $r ))\"\n  local w=\"$(( $t && $q ))\"\n  local x=\"$(( $u || $v ))\"\n  local\
    \ y=\"$(( $u || $w ))\"\n  local z=\"$(( $x || $y ))\"\n  echo $z\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x+$y)/2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    if [ \"$a\" -eq 0 ]; then\n        echo \"$z\"\n    else\n\
    \        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    read y x <<< \"$2\"\n    local max\n    local\
    \ i\n    for i in $(seq 1 \"$x\"); do\n        if (( $(expr \"$i\" \"$y\") % 2\
    \ == 0 )); then\n            (( max = $i ))\n        fi\n    done\n    if (( max\
    \ < 0 )); then\n        echo \"-1\"\n    else\n        echo \"$max\"\n    fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "seq: invalid floating point argument: \u2018\u2019\nTry 'seq --help' for\
    \ more information.\n"
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y\n  x=$1\n  y=$2\n  local max\n  max=$(( x > y ? x : y ))\n  while [ $max\
    \ -le $x ]; do\n    (( max+=2 ))\n  done\n  echo $max\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x + (y - x) / 2 ))\"\n    local\
    \ a=\"$(( z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z - 1 ))\"\
    \n    local d=\"$(( z * 2 ))\"\n    local e=\"$(( z * 3 ))\"\n    local f=\"$((\
    \ z * 4 ))\"\n    local g=\"$(( z * 5 ))\"\n    local h=\"$(( z * 6 ))\"\n   \
    \ local i=\"$(( z * 7 ))\"\n    local j=\"$(( z * 8 ))\"\n    local k=\"$(( z\
    \ * 9 ))\"\n    local l=\"$(( z * 10 ))\"\n    local m=\"$(( z * 11 ))\"\n   \
    \ local n=\"$(( z * 12 ))\"\n    local o=\"$(( z * 13 ))\"\n    local p=\"$((\
    \ z * 14 ))\"\n    local q=\"$(( z * 15 ))\"\n    local r=\"$(( z * 16 ))\"\n\
    \    local s=\"$(( z * 17 ))\"\n    local t=\"$(( z * 18 ))\"\n    local u=\"\
    $(( z * 19 ))\"\n    local v=\"$(( z * 20 ))\"\n    local w=\"$(( z * 21 ))\"\n\
    \    local x=\"$(( z * 22 ))\"\n    local y=\"$(( z * 23 ))\"\n    local z=\"\
    $(( z * 24 ))\"\n    local a=\"$(( z * 25 ))\"\n    local b=\"$(( z * 26 ))\"\n\
    \    local c=\"$(( z * 27 ))\"\n    local d=\"$(( z * 28 ))\"\n    local e=\"\
    $(( z * 29 ))\"\n    local f=\"$(( z * 30 ))\"\n    local g=\"$(( z * 31 ))\"\n\
    \    local h=\"$(( z * 32 ))\"\n    local i=\"$(( z * 33 ))\"\n    local j=\"\
    $(( z * 34 ))\"\n    local k=\"$(( z * 35 ))\"\n    local l=\"$(( z * 36 ))\"\n\
    \    local m=\"$(( z * 37 ))\"\n    local n=\"$(( z * 38 ))\"\n    local o\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    \n    # If the\
    \ first number is smaller than the second one, then the \n    # function should\
    \ return -1\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"-1\"\n       \
    \ return\n    fi\n\n    # If the first number is bigger than the second one, then\
    \ the \n    # function should return -1\n    if [ \"$x\" -gt \"$y\" ]; then\n\
    \        echo \"-1\"\n        return\n    fi\n\n    # If the first number is equal\
    \ to the second one, then the \n    # function should return -1\n    if [ \"$x\"\
    \ -eq \"$y\" ]; then\n        echo \"-1\"\n        return\n    fi\n\n    # If\
    \ the first number is even and the second is odd, then the \n    # function should\
    \ return -1\n    if [ \"$x\" -eq \"0\" ] && [ \"$y\" -eq \"1\" ]; then\n     \
    \   echo \"-1\"\n        return\n    fi\n\n    # If the first number is odd and\
    \ second is even, then the \n    # function should return -1\n    if [ \"$x\"\
    \ -eq \"1\" ] && [ \"$y\" -eq \"0\" ]; then\n        echo \"-1\"\n        return\n\
    \    fi\n\n    # If the first number is even and the second is even, then the\
    \ \n    # function should return -1\n    if [ \"$x\" -eq \"0\" ] && [ \"$y\" -eq\
    \ \"0\" ]; then\n        echo \"-1\"\n        return\n    fi\n\n    # If the first\
    \ number is odd and second is odd, then the \n    # function should return -1\n\
    \    if [ \"$x\" -eq \"1\" ] && [ \"$y\" -eq \"1\" ]; then\n        echo \"-1\"\
    \n        return\n    fi\n\n    # If the first number is even and the second is\
    \ odd, then the \n    # function should return -1\n    if [ \"$x\" -eq \"1\" ]\
    \ && [ \"$y\" -eq \"0\" ]; then\n        echo \"-1\"\n        return\n    fi\n\
    \n    # If the first number is odd and second is even, then the \n    # function\
    \ should return -1\n    if [ \"$x\" -eq \"0\" ] && [ \"$y\" -eq \"1\" ]; then\n\
    \        echo \"-1\"\n        return\n    fi\n\n    # If the first number is even\
    \ and the second is even, then the \n    # function should return -1\n    if [\
    \ \"$x\" -eq \"0\" ] && [ \"$y\" -eq \"0\" ]; then\n        echo \"-1\"\n    \
    \    return\n    fi\n\n    # If the first number is odd and second is odd, then\
    \ the \n    # function should return -1\n    if [ \"$x\" -eq \"1\" ] && [ \"$y\"\
    \ -eq \"1\" ]; then\n        echo \"-1\"\n        return\n    fi\n\n    # If the\
    \ first number is even and the second is odd, then the \n    # function should\
    \ return -1\n    if [ \"$x\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsed68l0d.sh: line 114: unexpected EOF while looking for matching
    `"''

    /tmp/tmpsed68l0d.sh: line 118: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-y)*(x-y)) )\"\n    local b=\"$(( (x-y)*(x-y)) )\"\n    local c=\"$(( (x-y)*(x-y))\
    \ )\"\n    local d=\"$(( (x-y)*(x-y)) )\"\n    local e=\"$(( (x-y)*(x-y)) )\"\n\
    \    local f=\"$(( (x-y)*(x-y)) )\"\n    local g=\"$(( (x-y)*(x-y)) )\"\n    local\
    \ h=\"$(( (x-y)*(x-y)) )\"\n    local i=\"$(( (x-y)*(x-y)) )\"\n    local j=\"\
    $(( (x-y)*(x-y)) )\"\n    local k=\"$(( (x-y)*(x-y)) )\"\n    local l=\"$(( (x-y)*(x-y))\
    \ )\"\n    local m=\"$(( (x-y)*(x-y)) )\"\n    local n=\"$(( (x-y)*(x-y)) )\"\n\
    \    local o=\"$(( (x-y)*(x-y)) )\"\n    local p=\"$(( (x-y)*(x-y)) )\"\n    local\
    \ q=\"$(( (x-y)*(x-y)) )\"\n    local r=\"$(( (x-y)*(x-y)) )\"\n    local s=\"\
    $(( (x-y)*(x-y)) )\"\n    local t=\"$(( (x-y)*(x-y)) )\"\n    local u=\"$(( (x-y)*(x-y))\
    \ )\"\n    local v=\"$(( (x-y)*(x-y)) )\"\n    local w=\"$(( (x-y)*(x-y)) )\"\n\
    \    local x=\"$(( (x-y)*(x-y)) )\"\n    local y=\"$(( (x-y)*(x-y)) )\"\n    local\
    \ z=\"$(( (x-y)*(x-y)) )\"\n    local a=\"$(( (x-y)*(x-y)) )\"\n    local b=\"\
    $(( (x-y)*(x-y)) )\"\n    local c=\"$(( (x-y)*(x-y)) )\"\n    local d=\"$(( (x-y)*(x-y))\
    \ )\"\n    local e=\"$(( (x-y)*(x-y)) )\"\n    local f=\"$(( (x-y)*(x-y)) )\"\n\
    \    local g=\"$(( (x-y)*(x-y)) )\"\n    local h=\"$(( (x-y)*(x-y)) )\"\n    local\
    \ i=\"$(( (x-y)*(x\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpddtc_ipe.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmpddtc_ipe.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    local count\n    num=$(expr\
    \ $x + $y)\n    count=0\n    while [ $num -gt 0 ]; do\n        num=$(expr $num\
    \ / 2)\n        ((count++))\n    done\n    if [ $count -eq 0 ]; then\n       \
    \ echo \"-1\"\n    else\n        echo \"$num\"\n    fi\n}\n\ncandidate() {\n \
    \   choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: missing argument after \u2018+\u2019\n/tmp/tmp12qaeuwr.sh:\
    \ line 20: [: -gt: unary operator expected\n"
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x+$y)/2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    if [ \"$a\" -eq \"0\" ]; then\n        echo \"$z\"\n    else\n\
    \        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local z=$(( x - y ))\n    local a=$(( z % 2 ))\n \
    \   local b=$(( z / 2 ))\n    local c=$(( b - a ))\n    local d=$(( c - 1 ))\n\
    \    local e=$(( d + 1 ))\n    local f=$(( e + 1 ))\n    local g=$(( f + 1 ))\n\
    \    local h=$(( g + 1 ))\n    local i=$(( h + 1 ))\n    local j=$(( i + 1 ))\n\
    \    local k=$(( j + 1 ))\n    local l=$(( k + 1 ))\n    local m=$(( l + 1 ))\n\
    \    local n=$(( m + 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( o + 1 ))\n\
    \    local q=$(( p + 1 ))\n    local r=$(( q + 1 ))\n    local s=$(( r + 1 ))\n\
    \    local t=$(( s + 1 ))\n    local u=$(( t + 1 ))\n    local v=$(( u + 1 ))\n\
    \    local w=$(( v + 1 ))\n    local x=$(( w + 1 ))\n    local y=$(( x + 1 ))\n\
    \    echo $y\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  local j\n  local even\n\
    \  local odd\n  local num\n\n  if (( x < y )); then\n    echo \"$x is smaller\
    \ than $y\"\n    return -1\n  fi\n\n  max=$x\n  i=1\n  while (( i <= y )); do\n\
    \    (( even = ( i % 2 ) ))\n    (( odd = ( i % 2 ) ))\n    if (( even )); then\n\
    \      (( num = max ))\n    else\n      (( num = max ))\n    fi\n    (( max =\
    \ num + 1 ))\n    (( i = i + 1 ))\n  done\n\n  echo \"$max\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-z)/2 ))\"\n    local b=\"$(( (y-z)/2 ))\"\n    local c=\"$(( (x-y)*(x-y)))\"\
    \n    local d=\"$(( (y-z)/2 ))\"\n    local e=\"$(( (x-z)/2 ))\"\n    local f=\"\
    $(( (y-z)/2 ))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$(( (y-z)/2\
    \ ))\"\n    local i=\"$(( (x-z)/2 ))\"\n    local j=\"$(( (y-z)/2 ))\"\n    local\
    \ k=\"$(( (x-y)*(x-y)))\"\n    local l=\"$(( (y-z)/2 ))\"\n    local m=\"$(( (x-z)/2\
    \ ))\"\n    local n=\"$(( (y-z)/2 ))\"\n    local o=\"$(( (x-y)*(x-y)))\"\n  \
    \  local p=\"$(( (y-z)/2 ))\"\n    local q=\"$(( (x-z)/2 ))\"\n    local r=\"\
    $(( (y-z)/2 ))\"\n    local s=\"$(( (x-y)*(x-y)))\"\n    local t=\"$(( (y-z)/2\
    \ ))\"\n    local u=\"$(( (x-z)/2 ))\"\n    local v=\"$(( (y-z)/2 ))\"\n    local\
    \ w=\"$(( (x-y)*(x-y)))\"\n    local x=\"$(( (y-z)/2 ))\"\n    local y=\"$(( (x-z)/2\
    \ ))\"\n    local z=\"$(( (y-z)/2 ))\"\n    local a=\"$(( (x-y)*(x-y)))\"\n  \
    \  local b=\"$(( (y-z)/2 ))\"\n    local c=\"$(( (x-y)*(x-y)))\"\n    local d=\"\
    $(( (y-z)/2 ))\"\n    local e=\"$(( (x-z)/2 ))\"\n    local f=\"$(( (y-z)/2 ))\"\
    \n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$(( (y-z)/2 ))\"\n    local\
    \ i=\"$(( (x-z)/2 ))\"\n    local j=\"$(( (y-z)/2 ))\"\n    local k=\"$(( (x-y)*\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxma22b1k.sh: line 53: unexpected EOF while looking for matching
    `)''

    /tmp/tmpxma22b1k.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( x - y ))\"\n  local a=\"$(( z %\
    \ 2 ))\"\n  local b=\"$(( z / 2 ))\"\n  local c=\"$(( z * 2 ))\"\n  local d=\"\
    $(( z + 1 ))\"\n  local e=\"$(( z + 2 ))\"\n  local f=\"$(( z + 3 ))\"\n  local\
    \ g=\"$(( z + 4 ))\"\n  local h=\"$(( z + 5 ))\"\n  local i=\"$(( z + 6 ))\"\n\
    \  local j=\"$(( z + 7 ))\"\n  local k=\"$(( z + 8 ))\"\n  local l=\"$(( z + 9\
    \ ))\"\n  local m=\"$(( z + 10 ))\"\n  local n=\"$(( z + 11 ))\"\n  local o=\"\
    $(( z + 12 ))\"\n  local p=\"$(( z + 13 ))\"\n  local q=\"$(( z + 14 ))\"\n  local\
    \ r=\"$(( z + 15 ))\"\n  local s=\"$(( z + 16 ))\"\n  local t=\"$(( z + 17 ))\"\
    \n  local u=\"$(( z + 18 ))\"\n  local v=\"$(( z + 19 ))\"\n  local w=\"$(( z\
    \ + 20 ))\"\n  local x=\"$(( z + 21 ))\"\n  local y=\"$(( z + 22 ))\"\n  local\
    \ z=\"$(( z + 23 ))\"\n  local a=\"$(( z + 24 ))\"\n  local b=\"$(( z + 25 ))\"\
    \n  local c=\"$(( z + 26 ))\"\n  local d=\"$(( z + 27 ))\"\n  local e=\"$(( z\
    \ + 28 ))\"\n  local f=\"$(( z + 29 ))\"\n  local g=\"$(( z + 30 ))\"\n  local\
    \ h=\"$(( z + 31 ))\"\n  local i=\"$(( z + 32 ))\"\n  local j=\"$(( z + 33 ))\"\
    \n  local k=\"$(( z + 34 ))\"\n  local l=\"$(( z + 35 ))\"\n  local m=\"$(( z\
    \ + 36 ))\"\n  local n=\"$(( z + 37 ))\"\n  local o=\"$(( z + \n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpywa9vayf.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpywa9vayf.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    local i\n    local j\n \
    \   local k\n    local m\n    local n\n    local odd\n    local even\n    local\
    \ biggest\n    local evennum\n    local evennum2\n    local evennum3\n    local\
    \ evennum4\n    local evennum5\n    local evennum6\n    local evennum7\n    local\
    \ evennum8\n    local evennum9\n    local evennum10\n    local evennum11\n   \
    \ local evennum12\n    local evennum13\n    local evennum14\n    local evennum15\n\
    \    local evennum16\n    local evennum17\n    local evennum18\n    local evennum19\n\
    \    local evennum20\n    local evennum21\n    local evennum22\n    local evennum23\n\
    \    local evennum24\n    local evennum25\n    local evennum26\n    local evennum27\n\
    \    local evennum28\n    local evennum29\n    local evennum30\n    local evennum31\n\
    \    local evennum32\n    local evennum33\n    local evennum34\n    local evennum35\n\
    \    local evennum36\n    local evennum37\n    local evennum38\n    local evennum39\n\
    \    local evennum40\n    local evennum41\n    local evennum42\n    local evennum43\n\
    \    local evennum44\n    local evennum45\n    local evennum46\n    local evennum47\n\
    \    local evennum48\n    local evennum49\n    local evennum50\n    local evennum51\n\
    \    local evennum52\n    local evennum53\n    local evennum54\n    local evennum55\n\
    \    local evennum56\n    local evennum57\n    local evennum58\n    local evennum59\n\
    \    local evennum60\n    local evennum61\n    local evennum62\n    local evennum63\n\
    \    local evennum64\n    local evennum65\n    local evennum66\n    local evennum67\n\
    \    local evennum68\n    local evennum69\n    local evennum70\n    local evennum71\n\
    \    local evennum72\n    local evennum73\n    local evennum74\n    local evennum75\n\
    \    local evennum76\n    local evennum77\n    local \n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"-1\"\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ x % 2 ))\"\n    local b=\"$(( y % 2 ))\"\n    local c=\"$(( z % 2 ))\"\n   \
    \ local d=\"$(( z % 3 ))\"\n    local e=\"$(( z % 5 ))\"\n    local f=\"$(( z\
    \ % 7 ))\"\n    local g=\"$(( z % 11 ))\"\n    local h=\"$(( z % 13 ))\"\n   \
    \ local i=\"$(( z % 17 ))\"\n    local j=\"$(( z % 19 ))\"\n    local k=\"$((\
    \ z % 23 ))\"\n    local l=\"$(( z % 29 ))\"\n    local m=\"$(( z % 31 ))\"\n\
    \    local n=\"$(( z % 37 ))\"\n    local o=\"$(( z % 41 ))\"\n    local p=\"\
    $(( z % 43 ))\"\n    local q=\"$(( z % 47 ))\"\n    local r=\"$(( z % 51 ))\"\n\
    \    local s=\"$(( z % 55 ))\"\n    local t=\"$(( z % 59 ))\"\n    local u=\"\
    $(( z % 63 ))\"\n    local v=\"$(( z % 67 ))\"\n    local w=\"$(( z % 71 ))\"\n\
    \    local x=\"$(( z % 73 ))\"\n    local y=\"$(( z % 79 ))\"\n    local z=\"\
    $(( z % 83 ))\"\n    local a=\"$(( z % 89 ))\"\n    local b=\"$(( z % 93 ))\"\n\
    \    local c=\"$(( z % 97 ))\"\n    local d=\"$(( z % 101 ))\"\n    local e=\"\
    $(( z % 103 ))\"\n    local f=\"$(( z % 107 ))\"\n    local g=\"$(( z % 111 ))\"\
    \n    local h=\"$(( z % 113 ))\"\n    local i=\"$(( z % 117 ))\"\n    local j=\"\
    $(( z % 121 ))\"\n    local k=\"$(( z % 123 ))\"\n    local l=\"$(( z % 127 ))\"\
    \n    local m=\"$(( z % 13\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuuzp6smk.sh: line 55: unexpected EOF while looking for matching
    `)''

    /tmp/tmpuuzp6smk.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local i\n  \
    \  local j\n    local even\n    local odd\n    local even2\n    local odd2\n \
    \   local even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n\
    \    local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max_num=\"$x\"\n    local min_num=\"\
    $y\"\n    while [ \"$max_num\" -lt \"$min_num\" ]; do\n        local num=\"$((max_num\
    \ + 1))\"\n        if [ \"$num\" -eq \"$max_num\" ]; then\n            local num=\"\
    $((max_num - 1))\"\n        fi\n        if [ \"$num\" -eq \"$min_num\" ]; then\n\
    \            local num=\"$((min_num + 1))\"\n        fi\n        if [ \"$num\"\
    \ -eq \"$max_num\" ] || [ \"$num\" -eq \"$min_num\" ]; then\n            local\
    \ num=\"$((max_num + 1))\"\n        fi\n        if [ \"$num\" -eq \"$max_num\"\
    \ ]; then\n            local num=\"$((min_num - 1))\"\n        fi\n        if\
    \ [ \"$num\" -eq \"$min_num\" ]; then\n            local num=\"$((max_num - 1))\"\
    \n        fi\n        if [ \"$num\" -eq \"$max_num\" ] || [ \"$num\" -eq \"$min_num\"\
    \ ]; then\n            local num=\"$((max_num + 1))\"\n        fi\n        if\
    \ [ \"$num\" -eq \"$max_num\" ]; then\n            local num=\"$((min_num + 1))\"\
    \n        fi\n        if [ \"$num\" -eq \"$min_num\" ]; then\n            local\
    \ num=\"$((min_num - 1))\"\n        fi\n        if [ \"$num\" -eq \"$max_num\"\
    \ ] || [ \"$num\" -eq \"$min_num\" ]; then\n            local num=\"$((max_num\
    \ - 1))\"\n        fi\n        if [ \"$num\" -eq \"$max_num\" ]; then\n      \
    \      local num=\"$((min_num + 1))\"\n        fi\n        if [ \"$num\" -eq \"\
    $min_num\" ]; then\n            local num=\"$((min_num - 1))\"\n        fi\n \
    \       if [ \"$num\" -eq \"$max_num\" ] || [ \"$num\" -eq \"$min_num\" ]; then\n\
    \            local num=\"$((max_num + 1))\"\n        fi\n        if [ \"$num\"\
    \ -eq \"$max_num\" ]; then\n            local num=\"$((min_num - 1))\"\n     \
    \   fi\n        if [ \"$num\" -eq \"$min_num\" ]; then\n            local num=\"\
    $((min_num + 1))\"\n        fi\n        if [ \"$num\" -eq \"$max_num\" ] || [\
    \ \"$num\" -eq \"$min_num\" ]; then\n            local num=\"$((max_num - 1))\"\
    \n        fi\n        if [ \"$num\" -eq \"$max_num\" ]; then\n            local\
    \ num=\"$((min_num - 1))\"\n        fi\n        if [ \"$num\" -eq \"$min_num\"\
    \ ]; then\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphmy4jvhj.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmphmy4jvhj.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y\n  x=$1\n  y=$2\n  local num\n  num=$(expr $x + $y)\n  while [ $num -gt\
    \ $x ]; do\n    num=$(expr $num - 2)\n  done\n  while [ $num -gt $y ]; do\n  \
    \  num=$(expr $num - 2)\n  done\n  if [ $num -eq 0 ]; then\n    return -1\n  else\n\
    \    return $num\n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( y - b ))\"\n   \
    \ local d=\"$(( y / 2 ))\"\n    local e=\"$(( b - d ))\"\n    local f=\"$(( b\
    \ / 2 ))\"\n    local g=\"$(( d / 2 ))\"\n    local h=\"$(( c / 2 ))\"\n    local\
    \ i=\"$(( c % 2 ))\"\n    local j=\"$(( e % 2 ))\"\n    local k=\"$(( e / 2 ))\"\
    \n    local l=\"$(( f % 2 ))\"\n    local m=\"$(( f / 2 ))\"\n    local n=\"$((\
    \ g % 2 ))\"\n    local o=\"$(( g / 2 ))\"\n    local p=\"$(( h % 2 ))\"\n   \
    \ local q=\"$(( h / 2 ))\"\n    local r=\"$(( i % 2 ))\"\n    local s=\"$(( i\
    \ / 2 ))\"\n    local t=\"$(( j % 2 ))\"\n    local u=\"$(( j / 2 ))\"\n    local\
    \ v=\"$(( k % 2 ))\"\n    local w=\"$(( k / 2 ))\"\n    local x=\"$(( l % 2 ))\"\
    \n    local y=\"$(( l / 2 ))\"\n    local z=\"$(( m % 2 ))\"\n    local a=\"$((\
    \ m / 2 ))\"\n    local b=\"$(( n % 2 ))\"\n    local c=\"$(( n / 2 ))\"\n   \
    \ local d=\"$(( o % 2 ))\"\n    local e=\"$(( o / 2 ))\"\n    local f=\"$(( p\
    \ % 2 ))\"\n    local g=\"$(( p / 2 ))\"\n    local h=\"$(( q % 2 ))\"\n    local\
    \ i=\"$(( q / 2 ))\"\n    local j=\"$(( r % 2 ))\"\n    local k=\"$(( r / 2 ))\"\
    \n    local l=\"$(( s % 2 ))\"\n    local m=\"$(( s / 2 ))\"\n    local n=\"$((\
    \ t % 2 ))\"\n    local o=\"$(( t / 2 ))\"\n    local p\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\n    local c=\"$(( $z / 2 ))\"\n\
    \    local d=\"$(( $z % 2 ))\"\n    local e=\"$(( $z % 2 ))\"\n    local f=\"\
    $(( $z % 2 ))\"\n    local g=\"$(( $z % 2 ))\"\n    local h=\"$(( $z % 2 ))\"\n\
    \    local i=\"$(( $z % 2 ))\"\n    local j=\"$(( $z % 2 ))\"\n    local k=\"\
    $(( $z % 2 ))\"\n    local l=\"$(( $z % 2 ))\"\n    local m=\"$(( $z % 2 ))\"\n\
    \    local n=\"$(( $z % 2 ))\"\n    local o=\"$(( $z % 2 ))\"\n    local p=\"\
    $(( $z % 2 ))\"\n    local q=\"$(( $z % 2 ))\"\n    local r=\"$(( $z % 2 ))\"\n\
    \    local s=\"$(( $z % 2 ))\"\n    local t=\"$(( $z % 2 ))\"\n    local u=\"\
    $(( $z % 2 ))\"\n    local v=\"$(( $z % 2 ))\"\n    local w=\"$(( $z % 2 ))\"\n\
    \    local x=\"$(( $z % 2 ))\"\n    local y=\"$(( $z % 2 ))\"\n    local z=\"\
    $(( $z % 2 ))\"\n    local a=\"$(( $z % 2 ))\"\n    local b=\"$(( $z % 2 ))\"\n\
    \    local c=\"$(( $z % 2 ))\"\n    local d=\"$(( $z % 2 ))\"\n    local e=\"\
    $(( $z % 2 ))\"\n    local f=\"$(( $z % 2 ))\"\n    local g=\"$(( $z % 2 ))\"\n\
    \    local h=\"$(( $z % 2 ))\"\n    local i=\"$(( $z % 2 ))\"\n    local j=\"\
    $(( $z % 2 ))\"\n    local k=\"$(( $z % 2 ))\"\n    local l=\"$(( $z % 2 ))\"\n\
    \    local m=\"$(( $z % 2 ))\"\n    local n=\"$(( $z % 2 ))\"\n    local o=\"\
    $((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxs2hlhib.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpxs2hlhib.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local num\n    local even\n    local odd\n\
    \    local max\n    local min\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local max\n    local min\n    local num\n    local even\n    local\
    \ odd\n    local max\n    local min\n    local i\n    local j\n    local even\n\
    \    local odd\n    local max\n    local min\n    local num\n    local even\n\
    \    local odd\n    local max\n    local min\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local max\n    local min\n    local num\n    local\
    \ even\n    local odd\n    local max\n    local min\n    local i\n    local j\n\
    \    local even\n    local odd\n    local max\n    local min\n    local num\n\
    \    local even\n    local odd\n    local max\n    local min\n    local i\n  \
    \  local j\n    local even\n    local odd\n    local max\n    local min\n    local\
    \ num\n    local even\n    local odd\n    local max\n    local min\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local max\n    local min\n\
    \    local num\n    local even\n    local odd\n    local max\n    local min\n\
    \    local i\n    local j\n    local even\n    local odd\n    local max\n    local\
    \ min\n    local num\n    local even\n    local odd\n    local max\n    local\
    \ min\n    local i\n    local j\n    local even\n    local odd\n    local max\n\
    \    local min\n    local num\n    local even\n    local odd\n    local max\n\
    \    local min\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ max\n    local min\n    local num\n    local even\n    local odd\n    local\
    \ max\n    local min\n    local i\n    local j\n    local even\n    local odd\n\
    \    local max\n    local min\n    local num\n    local even\n    local odd\n\
    \    local max\n    local min\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local max\n    local min\n    local num\n    local even\n    local\
    \ odd\n    local max\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local num\n\n  if (( x < y )); then\n\
    \    choose_num \"$y\" \"$x\"\n  fi\n\n  max=$(( x ))\n  num=$(\n    local num=0\n\
    \    while (( num < y )); do\n      (( num += 2 ))\n      if (( num > max ));\
    \ then\n        max=$num\n      fi\n    done\n    echo \"$max\"\n  )\n\n  if ((\
    \ num == 0 )); then\n    echo \"-1\"\n  fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z % 4 ))\"\n    local c=\"$(( z % 8 ))\"\n   \
    \ local d=\"$(( z % 16 ))\"\n    local e=\"$(( z % 32 ))\"\n    local f=\"$((\
    \ z % 64 ))\"\n    local g=\"$(( z % 128 ))\"\n    local h=\"$(( z % 256 ))\"\n\
    \    local i=\"$(( z % 512 ))\"\n    local j=\"$(( z % 1024 ))\"\n    local k=\"\
    $(( z % 2048 ))\"\n    local l=\"$(( z % 4096 ))\"\n    local m=\"$(( z % 8192\
    \ ))\"\n    local n=\"$(( z % 16384 ))\"\n    local o=\"$(( z % 32768 ))\"\n \
    \   local p=\"$(( z % 65536 ))\"\n    local q=\"$(( z % 131072 ))\"\n    local\
    \ r=\"$(( z % 262144 ))\"\n    local s=\"$(( z % 524288 ))\"\n    local t=\"$((\
    \ z % 1048576 ))\"\n    local u=\"$(( z % 2097152 ))\"\n    local v=\"$(( z %\
    \ 4194304 ))\"\n    local w=\"$(( z % 8388608 ))\"\n    local x=\"$(( z % 16777216\
    \ ))\"\n    local y=\"$(( z % 33554432 ))\"\n    local z=\"$(( z % 67108864 ))\"\
    \n    local a=\"$(( z % 134217728 ))\"\n    local b=\"$(( z % 268435456 ))\"\n\
    \    local c=\"$(( z % 536870912 ))\"\n    local d=\"$(( z % 1073741824 ))\"\n\
    \    local e=\"$(( z % 2147483648 ))\"\n    local f=\"$(( z % 4294967296 ))\"\n\
    \    local g=\"$(( z % 8589934592 ))\"\n    local h=\"$(( z % 17179869184 ))\"\
    \n    local i=\"$(( z % 34359738368 \n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1zdztkc2.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1zdztkc2.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( y - b ))\"\n   \
    \ local d=\"$(( c - a ))\"\n    local e=\"$(( b - a ))\"\n    local f=\"$(( e\
    \ % 2 ))\"\n    local g=\"$(( e / 2 ))\"\n    local h=\"$(( f - g ))\"\n    local\
    \ i=\"$(( g - h ))\"\n    local j=\"$(( h - i ))\"\n    local k=\"$(( i - j ))\"\
    \n    local l=\"$(( j % 2 ))\"\n    local m=\"$(( j / 2 ))\"\n    local n=\"$((\
    \ l - m ))\"\n    local o=\"$(( m - n ))\"\n    local p=\"$(( n - o ))\"\n   \
    \ local q=\"$(( o % 2 ))\"\n    local r=\"$(( o / 2 ))\"\n    local s=\"$(( q\
    \ - r ))\"\n    local t=\"$(( r - s ))\"\n    local u=\"$(( s - t ))\"\n    local\
    \ v=\"$(( t - u ))\"\n    local w=\"$(( u % 2 ))\"\n    local x=\"$(( u / 2 ))\"\
    \n    local y=\"$(( v - w ))\"\n    local z=\"$(( w - x ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( y - b ))\"\n   \
    \ local d=\"$(( c - a ))\"\n    local e=\"$(( b - a ))\"\n    local f=\"$(( e\
    \ % 2 ))\"\n    local g=\"$(( e / 2 ))\"\n    local h=\"$(( f - g ))\"\n    local\
    \ i=\"$(( g - h ))\"\n    local j=\"$(( h - i ))\"\n    local k=\"$(( i - j ))\"\
    \n    local l=\"$(( j % 2 ))\"\n    local m=\"$(( j / 2 ))\"\n    local n=\"$((\
    \ l - m ))\"\n    local o=\"$(( m - n ))\"\n    local p=\"$(( n - o ))\"\n   \
    \ local q=\"$\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpblvroxnq.sh: line 75: unexpected EOF while looking for matching
    `"''

    /tmp/tmpblvroxnq.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( (x-y)*(x-y)))\n  z=$(( (x-y)*(y-x))\
    \ )\n  z=$(( (x-y)*(y-x)) )\n  echo $z\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkx11vx63.sh: command substitution: line 18: syntax error near unexpected
    token `*''

    /tmp/tmpkx11vx63.sh: command substitution: line 18: `( (x-y)*(y-x)) ''

    /tmp/tmpkx11vx63.sh: command substitution: line 19: syntax error near unexpected
    token `*''

    /tmp/tmpkx11vx63.sh: command substitution: line 19: `( (x-y)*(y-x)) ''

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max_num=\"$x\"\n    local min_num=\"\
    $y\"\n    local i\n    local j\n    local k\n    local even\n    local odd\n \
    \   local even2\n    local odd2\n    local even3\n    local odd3\n    local even4\n\
    \    local odd4\n    local even5\n    local odd5\n    local even6\n    local odd6\n\
    \    local even7\n    local odd7\n    local even8\n    local odd8\n    local even9\n\
    \    local odd9\n    local even10\n    local odd10\n    local even11\n    local\
    \ odd11\n    local even12\n    local odd12\n    local even13\n    local odd13\n\
    \    local even14\n    local odd14\n    local even15\n    local odd15\n    local\
    \ even16\n    local odd16\n    local even17\n    local odd17\n    local even18\n\
    \    local odd18\n    local even19\n    local odd19\n    local even20\n    local\
    \ odd20\n    local even21\n    local odd21\n    local even22\n    local odd22\n\
    \    local even23\n    local odd23\n    local even24\n    local odd24\n    local\
    \ even25\n    local odd25\n    local even26\n    local odd26\n    local even27\n\
    \    local odd27\n    local even28\n    local odd28\n    local even29\n    local\
    \ odd29\n    local even30\n    local odd30\n    local even31\n    local odd31\n\
    \    local even32\n    local odd32\n    local even33\n    local odd33\n    local\
    \ even34\n    local odd34\n    local even35\n    local odd35\n    local even36\n\
    \    local odd36\n    local even37\n    local odd37\n    local even38\n    local\
    \ odd38\n    local even39\n    local odd39\n    local even40\n    local odd40\n\
    \    local even41\n    local odd41\n    local even42\n    local odd42\n    local\
    \ even43\n    local odd43\n    local even44\n    local odd44\n    local even45\n\
    \    local odd45\n    local even46\n    local odd46\n    local even47\n    local\
    \ odd47\n    local even48\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( x + (y - x) / 2 ))\n  while [\
    \ $z -le $y ]; do\n    [ $(( z % 2 )) -eq 0 ] && return $z\n    z=$(( z + 1 ))\n\
    \  done\n  return -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  max=$(( x > y ? x : y\
    \ ))\n  for i in $(seq 1 $max); do\n    if (( i % 2 )); then\n      (( max +=\
    \ 1 ))\n    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( (x-y)*(x-y)))\"\n  local a=\"$((\
    \ (x-z)/2 ))\"\n  local b=\"$(( (y-z)/2 ))\"\n  local c=\"$(( (x-y)*(x-y)))\"\n\
    \  local d=\"$(( (y-z)/2 ))\"\n  local e=\"$(( (x-z)/2 ))\"\n  local f=\"$(( (y-z)/2\
    \ ))\"\n  local g=\"$(( (x-y)*(x-y)))\"\n  local h=\"$(( (y-z)/2 ))\"\n  local\
    \ i=\"$(( (x-z)/2 ))\"\n  local j=\"$(( (y-z)/2 ))\"\n  local k=\"$(( (x-y)*(x-y)))\"\
    \n  local l=\"$(( (y-z)/2 ))\"\n  local m=\"$(( (x-z)/2 ))\"\n  local n=\"$((\
    \ (y-z)/2 ))\"\n  local o=\"$(( (x-y)*(x-y)))\"\n  local p=\"$(( (y-z)/2 ))\"\n\
    \  local q=\"$(( (x-z)/2 ))\"\n  local r=\"$(( (y-z)/2 ))\"\n  local s=\"$(( (x-y)*(x-y)))\"\
    \n  local t=\"$(( (y-z)/2 ))\"\n  local u=\"$(( (x-z)/2 ))\"\n  local v=\"$((\
    \ (y-z)/2 ))\"\n  local w=\"$(( (x-y)*(x-y)))\"\n  local x=\"$(( (y-z)/2 ))\"\n\
    \  local y=\"$(( (x-z)/2 ))\"\n  local z=\"$(( (y-z)/2 ))\"\n  local a=\"$(( (x-y)*(x-y)))\"\
    \n  local b=\"$(( (y-z)/2 ))\"\n  local c=\"$(( (x-y)*(x-y)))\"\n  local d=\"\
    $(( (y-z)/2 ))\"\n  local e=\"$(( (x-z)/2 ))\"\n  local f=\"$(( (y-z)/2 ))\"\n\
    \  local g=\"$(( (x-y)*(x-y)))\"\n  local h=\"$(( (y-z)/2 ))\"\n  local i=\"$((\
    \ (x-z)/2 ))\"\n  local j=\"$(( (y-z)/2 ))\"\n  local k=\"$(( (x-y)*\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmias27b1.sh: line 53: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmias27b1.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n\n    if [ $x -ge\
    \ $y ]; then\n        max=x\n    else\n        max=y\n    fi\n\n    while [ $max\
    \ -ge $x ]; do\n        num=$(expr $max + 1)\n        if [ $num -gt $y ]; then\n\
    \            max=$(expr $num - 1)\n        else\n            max=$(expr $num -\
    \ 1)\n        fi\n    done\n\n    if [ $max -eq $x ]; then\n        echo -1\n\
    \    else\n        echo $max\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpl3pv2jr8.sh: line 25: [: y: integer expression expected

    /tmp/tmpl3pv2jr8.sh: line 34: [: y: integer expression expected

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( (x > y) ? x : y ))\n    local\
    \ i\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y num\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        num=$(echo\
    \ $(( $(echo $(( $x % $y )) )) | bc -l))\n        if [ $num -eq 0 ]; then\n  \
    \          num=$(echo $(( $x | bc -l)))\n        fi\n    elif [ $y -le $x ]; then\n\
    \        num=$(echo $(( $(echo $(( $y % $x )) )) | bc -l))\n        if [ $num\
    \ -eq 0 ]; then\n            num=$(echo $(( $y | bc -l)))\n        fi\n    else\n\
    \        num=-1\n    fi\n    echo \"$num\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6n_8q_c8.sh: line 18: 12: command not found

    /tmp/tmp6n_8q_c8.sh: line 19: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\n    local c=\"$(( $z - 1 ))\"\n\
    \    local d=\"$(( $z + 1 ))\"\n    local e=\"$(( $z * 2 ))\"\n    local f=\"\
    $(( $z * 3 ))\"\n    local g=\"$(( $z * 4 ))\"\n    local h=\"$(( $z * 5 ))\"\n\
    \    local i=\"$(( $z * 6 ))\"\n    local j=\"$(( $z * 7 ))\"\n    local k=\"\
    $(( $z * 8 ))\"\n    local l=\"$(( $z * 9 ))\"\n    local m=\"$(( $z * 10 ))\"\
    \n    local n=\"$(( $z * 11 ))\"\n    local o=\"$(( $z * 12 ))\"\n    local p=\"\
    $(( $z * 13 ))\"\n    local q=\"$(( $z * 14 ))\"\n    local r=\"$(( $z * 15 ))\"\
    \n    local s=\"$(( $z * 16 ))\"\n    local t=\"$(( $z * 17 ))\"\n    local u=\"\
    $(( $z * 18 ))\"\n    local v=\"$(( $z * 19 ))\"\n    local w=\"$(( $z * 20 ))\"\
    \n    local x=\"$(( $z * 21 ))\"\n    local y=\"$(( $z * 22 ))\"\n    local z=\"\
    $(( $z * 23 ))\"\n    local a=\"$(( $z * 24 ))\"\n    local b=\"$(( $z * 25 ))\"\
    \n    local c=\"$(( $z * 26 ))\"\n    local d=\"$(( $z * 27 ))\"\n    local e=\"\
    $(( $z * 28 ))\"\n    local f=\"$(( $z * 29 ))\"\n    local g=\"$(( $z * 30 ))\"\
    \n    local h=\"$(( $z * 31 ))\"\n    local i=\"$(( $z * 32 ))\"\n    local j=\"\
    $(( $z * 33 ))\"\n    local k=\"$(( $z * 34 ))\"\n    local l=\"$(( $z * 35 ))\"\
    \n    local m=\"$(( $z * 36 ))\"\n    local n=\"$(( $z * 37 ))\"\n    local o=\"\
    $\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp03x0fkk_.sh: line 73: unexpected EOF while looking for matching
    `"''

    /tmp/tmp03x0fkk_.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    local even\n    local odd\n\
    \    local max\n    local min\n    local res\n    \n    if [ \"$x\" -gt \"$y\"\
    \ ]; then\n        echo \"$x is greater than $y\"\n        exit 1\n    elif [\
    \ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is less than $y\"\n        exit\
    \ 1\n    fi\n\n    num=$(expr $x \\* $y)\n    even=$(( $num / 2 ))\n    odd=$((\
    \ $num % 2 ))\n    \n    if [ \"$even\" -eq 0 ]; then\n        echo \"$x is even\"\
    \n        exit 1\n    elif [ \"$odd\" -eq 0 ]; then\n        echo \"$x is odd\"\
    \n        exit 1\n    fi\n    \n    if [ \"$even\" -gt \"$y\" ]; then\n      \
    \  echo \"$x is greater than $y\"\n        exit 1\n    elif [ \"$even\" -lt \"\
    $y\" ]; then\n        echo \"$x is less than $y\"\n        exit 1\n    fi\n  \
    \  \n    if [ \"$odd\" -gt \"$y\" ]; then\n        echo \"$x is greater than $y\"\
    \n        exit 1\n    elif [ \"$odd\" -lt \"$y\" ]; then\n        echo \"$x is\
    \ less than $y\"\n        exit 1\n    fi\n    \n    max=$(expr $x \\* $y)\n  \
    \  min=$(expr $x \\* $y \\+ 1)\n    res=$(( $min + $max ))\n    \n    if [ \"\
    $res\" -gt \"$y\" ]; then\n        echo \"$x is greater than $y\"\n        exit\
    \ 1\n    elif [ \"$res\" -lt \"$y\" ]; then\n        echo \"$x is less than $y\"\
    \n        exit 1\n    fi\n    \n    echo \"$res\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmp_gd0oj4q.sh: line 23: [: : integer expression expected\n/tmp/tmp_gd0oj4q.sh:\
    \ line 26: [: : integer expression expected\nexpr: syntax error: missing argument\
    \ after \u2018*\u2019\n/tmp/tmp_gd0oj4q.sh: line 32: / 2 : syntax error: operand\
    \ expected (error token is \"/ 2 \")\n"
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-y)*(x-y)) )\"\n    local b=\"$(( (x-y)*(x-y)) )\"\n    local c=\"$(( (x-y)*(x-y))\
    \ )\"\n    local d=\"$(( (x-y)*(x-y)) )\"\n    local e=\"$(( (x-y)*(x-y)) )\"\n\
    \    local f=\"$(( (x-y)*(x-y)) )\"\n    local g=\"$(( (x-y)*(x-y)) )\"\n    local\
    \ h=\"$(( (x-y)*(x-y)) )\"\n    local i=\"$(( (x-y)*(x-y)) )\"\n    local j=\"\
    $(( (x-y)*(x-y)) )\"\n    local k=\"$(( (x-y)*(x-y)) )\"\n    local l=\"$(( (x-y)*(x-y))\
    \ )\"\n    local m=\"$(( (x-y)*(x-y)) )\"\n    local n=\"$(( (x-y)*(x-y)) )\"\n\
    \    local o=\"$(( (x-y)*(x-y)) )\"\n    local p=\"$(( (x-y)*(x-y)) )\"\n    local\
    \ q=\"$(( (x-y)*(x-y)) )\"\n    local r=\"$(( (x-y)*(x-y)) )\"\n    local s=\"\
    $(( (x-y)*(x-y)) )\"\n    local t=\"$(( (x-y)*(x-y)) )\"\n    local u=\"$(( (x-y)*(x-y))\
    \ )\"\n    local v=\"$(( (x-y)*(x-y)) )\"\n    local w=\"$(( (x-y)*(x-y)) )\"\n\
    \    local x=\"$(( (x-y)*(x-y)) )\"\n    local y=\"$(( (x-y)*(x-y)) )\"\n    local\
    \ z=\"$(( (x-y)*(x-y)) )\"\n    local a=\"$(( (x-y)*(x-y)) )\"\n    local b=\"\
    $(( (x-y)*(x-y)) )\"\n    local c=\"$(( (x-y)*(x-y)) )\"\n    local d=\"$(( (x-y)*(x-y))\
    \ )\"\n    local e=\"$(( (x-y)*(x-y)) )\"\n    local f=\"$(( (x-y)*(x-y)) )\"\n\
    \    local g=\"$(( (x-y)*(x-y)) )\"\n    local h=\"$(( (x-y)*(x-y)) )\"\n    local\
    \ i=\"$(( (x-y)*(x\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpddtc_ipe.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmpddtc_ipe.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max_num=\"$x\"\n    local min_num=\"\
    $y\"\n    local i\n    local j\n    local num\n    local even\n    local odd\n\
    \    local even_index\n    local odd_index\n    local max_even_index\n    local\
    \ max_odd_index\n    local max_even\n    local max_odd\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local \n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n\n    # Check if\
    \ x is bigger than y\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is\
    \ bigger than $y\"\n        exit 1\n    fi\n\n    # Check if x is smaller than\
    \ y\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is smaller than $y\"\
    \n        exit 1\n    fi\n\n    # Check if x is equal to y\n    if [ \"$x\" -eq\
    \ \"$y\" ]; then\n        echo \"$x is equal to $y\"\n        exit 1\n    fi\n\
    \n    # Check if x is even\n    if [ \"$x\" -eq \"0\" ]; then\n        echo \"\
    $x is even\"\n        exit 1\n    fi\n\n    # Check if x is odd\n    if [ \"$x\"\
    \ -eq \"1\" ]; then\n        echo \"$x is odd\"\n        exit 1\n    fi\n\n  \
    \  # Check if x is between y and z\n    if [ \"$x\" -gt \"$y\" -a \"$x\" -lt \"\
    $z\" ]; then\n        echo \"$x is between $y and $z\"\n        exit 1\n    fi\n\
    \n    # Check if x is between y and z\n    if [ \"$x\" -gt \"$y\" -a \"$x\" -eq\
    \ \"$z\" ]; then\n        echo \"$x is between $y and $z\"\n        exit 1\n \
    \   fi\n\n    # Check if x is between y and z\n    if [ \"$x\" -gt \"$y\" -a \"\
    $x\" -lt \"$z\" ]; then\n        echo \"$x is between $y and $z\"\n        exit\
    \ 1\n    fi\n\n    # Check if x is between y and z\n    if [ \"$x\" -gt \"$y\"\
    \ -a \"$x\" -eq \"$z\" ]; then\n        echo \"$x is between $y and $z\"\n   \
    \     exit 1\n    fi\n\n    # Check if x is between y and z\n    if [ \"$x\" -gt\
    \ \"$y\" -a \"$x\" -lt \"$z\" ]; then\n        echo \"$x is between $y and $z\"\
    \n        exit 1\n    fi\n\n    # Check if x is between y and z\n    if [ \"$x\"\
    \ -gt \"$y\" -a \"$x\" -eq \"$z\" ]; then\n        echo \"$x is between $y and\
    \ $z\"\n        exit 1\n    fi\n\n    # Check if x is between y and z\n    if\
    \ [ \"$x\" -gt \"$y\" -a \"$x\" -lt \"$z\" ]; then\n        echo \"$x is between\
    \ $y and $z\"\n        exit 1\n    fi\n\n    # Check if x is between y and z\n\
    \    if [ \"$x\" -gt \"$y\" -a \"$x\" \n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdcrhayqg.sh: line 93: syntax error near unexpected token `}''

    /tmp/tmpdcrhayqg.sh: line 93: `}''

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\n    local c=\"$(( $z % 2 ))\"\n\
    \    local d=\"$(( $z / 2 ))\"\n    local e=\"$(( $z % 2 ))\"\n    local f=\"\
    $(( $z / 2 ))\"\n    local g=\"$(( $z % 2 ))\"\n    local h=\"$(( $z / 2 ))\"\n\
    \    local i=\"$(( $z % 2 ))\"\n    local j=\"$(( $z / 2 ))\"\n    local k=\"\
    $(( $z % 2 ))\"\n    local l=\"$(( $z / 2 ))\"\n    local m=\"$(( $z % 2 ))\"\n\
    \    local n=\"$(( $z / 2 ))\"\n    local o=\"$(( $z % 2 ))\"\n    local p=\"\
    $(( $z / 2 ))\"\n    local q=\"$(( $z % 2 ))\"\n    local r=\"$(( $z / 2 ))\"\n\
    \    local s=\"$(( $z % 2 ))\"\n    local t=\"$(( $z / 2 ))\"\n    local u=\"\
    $(( $z % 2 ))\"\n    local v=\"$(( $z / 2 ))\"\n    local w=\"$(( $z % 2 ))\"\n\
    \    local x=\"$(( $z / 2 ))\"\n    local y=\"$(( $z % 2 ))\"\n    local z=\"\
    $(( $z / 2 ))\"\n    local a=\"$(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\n\
    \    local c=\"$(( $z % 2 ))\"\n    local d=\"$(( $z / 2 ))\"\n    local e=\"\
    $(( $z % 2 ))\"\n    local f=\"$(( $z / 2 ))\"\n    local g=\"$(( $z % 2 ))\"\n\
    \    local h=\"$(( $z / 2 ))\"\n    local i=\"$(( $z % 2 ))\"\n    local j=\"\
    $(( $z / 2 ))\"\n    local k=\"$(( $z % 2 ))\"\n    local l=\"$(( $z / 2 ))\"\n\
    \    local m=\"$(( $z % 2 ))\"\n    local n=\"$(( $z / 2 ))\"\n    local o=\"\
    $((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeid6hwwf.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpeid6hwwf.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( y - b ))\"\n   \
    \ local d=\"$(( c - a ))\"\n    local e=\"$(( d - b ))\"\n    local f=\"$(( e\
    \ - a ))\"\n    local g=\"$(( f - a ))\"\n    local h=\"$(( g - a ))\"\n    local\
    \ i=\"$(( h - a ))\"\n    local j=\"$(( i - a ))\"\n    local k=\"$(( j - a ))\"\
    \n    local l=\"$(( k - a ))\"\n    local m=\"$(( l - a ))\"\n    local n=\"$((\
    \ m - a ))\"\n    local o=\"$(( n - a ))\"\n    local p=\"$(( o - a ))\"\n   \
    \ local q=\"$(( p - a ))\"\n    local r=\"$(( q - a ))\"\n    local s=\"$(( r\
    \ - a ))\"\n    local t=\"$(( s - a ))\"\n    local u=\"$(( t - a ))\"\n    local\
    \ v=\"$(( u - a ))\"\n    local w=\"$(( v - a ))\"\n    local x=\"$(( w - a ))\"\
    \n    local y=\"$(( x - a ))\"\n    local z=\"$(( y - a ))\"\n    local a=\"$((\
    \ z - a ))\"\n    local b=\"$(( a % 2 ))\"\n    local c=\"$(( a / 2 ))\"\n   \
    \ local d=\"$(( c - b ))\"\n    local e=\"$(( d - b ))\"\n    local f=\"$(( e\
    \ - b ))\"\n    local g=\"$(( f - b ))\"\n    local h=\"$(( g - b ))\"\n    local\
    \ i=\"$(( h - b ))\"\n    local j=\"$(( i - b ))\"\n    local k=\"$(( j - b ))\"\
    \n    local l=\"$(( k - b ))\"\n    local m=\"$(( l - b ))\"\n    local n=\"$((\
    \ m - b ))\"\n    local o=\"$(( n - b ))\"\n    local p=\"$(( o - b ))\"\n   \
    \ local q=\"$(( p - b \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuzb7dj88.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmpuzb7dj88.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n\n    if [[ $x -ge\
    \ $y ]]; then\n        max=x\n    else\n        max=y\n    fi\n\n    while [[\
    \ $max -ge $x ]]; do\n        num=$((max+1))\n        if [[ $num -gt $y ]]; then\n\
    \            max=num\n        else\n            max=-1\n            break\n  \
    \      fi\n    done\n\n    echo \"$max\"\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660054006
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  max=$(( x > y ? x : y\
    \ ))\n  for i in $(seq 1 $max); do\n    if [ $(( i * 2 )) -eq $(( i * 2 )) ];\
    \ then\n      if [ $(( i * 2 )) -eq $(( i * 2 )) ]; then\n        if [ $(( i *\
    \ 2 )) -eq $(( i * 2 )) ]; then\n          echo \"$i\"\n          break\n    \
    \    fi\n      fi\n    fi\n  done\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    if [ $num\
    \ -ge 0 ] && [ $num -le $(($x + $y)) ]; then\n        echo $num\n    else\n  \
    \      echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local num\n\n    # Check if x is greater\
    \ than y\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is greater than\
    \ $y\"\n        exit 1\n    fi\n\n    # Check if x is less than or equal to y\n\
    \    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is less than or equal to\
    \ $y\"\n        exit 1\n    fi\n\n    # Check if x is equal to y\n    if [ \"\
    $x\" = \"$y\" ]; then\n        echo \"$x is equal to $y\"\n        exit 0\n  \
    \  fi\n\n    # Check if x is even\n    if [ \"$x\" -eq \"$x\" -a \"$x\" -mod 2\
    \ -eq 0 ]; then\n        echo \"$x is even\"\n        exit 0\n    fi\n\n    #\
    \ Check if x is odd\n    if [ \"$x\" -eq \"$x\" -a \"$x\" -mod 2 -ne 0 ]; then\n\
    \        echo \"$x is odd\"\n        exit 1\n    fi\n\n    # Check if x is greater\
    \ than y\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is greater than\
    \ $y\"\n        exit 1\n    fi\n\n    # Check if x is less than or equal to y\n\
    \    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is less than or equal to\
    \ $y\"\n        exit 1\n    fi\n\n    # Check if x is equal to y\n    if [ \"\
    $x\" = \"$y\" ]; then\n        echo \"$x is equal to $y\"\n        exit 0\n  \
    \  fi\n\n    # Check if x is even\n    if [ \"$x\" -eq \"$x\" -a \"$x\" -mod 2\
    \ -eq 0 ]; then\n        echo \"$x is even\"\n        exit 0\n    fi\n\n    #\
    \ Check if x is odd\n    if [ \"$x\" -eq \"$x\" -a \"$x\" -mod 2 -ne 0 ]; then\n\
    \        echo \"$x is odd\"\n        exit 1\n    fi\n\n    # Check if x is greater\
    \ than y\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is greater than\
    \ $y\"\n        exit 1\n    fi\n\n    # Check if x is less than or equal to y\n\
    \    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is less than or equal to\
    \ $y\"\n        exit 1\n    fi\n\n    # Check if x is equal to y\n    if [ \"\
    $x\" = \"$y\" ]; then\n        echo \"$x is equal to $y\"\n        exit 0\n  \
    \  fi\n\n    # Check if x is even\n    if [ \"$x\" -eq \"$\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnikm76gm.sh: line 119: unexpected EOF while looking for matching
    `"''

    /tmp/tmpnikm76gm.sh: line 123: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n\n    # Check if\
    \ x is bigger than y\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is\
    \ bigger than $y\"\n        return -1\n    fi\n\n    # Check if x is smaller than\
    \ y\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is smaller than $y\"\
    \n        return -1\n    fi\n\n    # Check if x is equal to y\n    if [ \"$x\"\
    \ -eq \"$y\" ]; then\n        echo \"$x is equal to $y\"\n        return 0\n \
    \   fi\n\n    # Check if x is even and y is odd\n    if [ \"$x\" -eq \"0\" ] &&\
    \ [ \"$y\" -eq \"1\" ]; then\n        echo \"$x is even\"\n        return 0\n\
    \    fi\n\n    # Check if x is odd and y is even\n    if [ \"$x\" -eq \"1\" ]\
    \ && [ \"$y\" -eq \"0\" ]; then\n        echo \"$x is odd\"\n        return 0\n\
    \    fi\n\n    # Check if x is even and y is odd\n    if [ \"$x\" -eq \"0\" ]\
    \ && [ \"$y\" -eq \"1\" ]; then\n        echo \"$x is even\"\n        return 0\n\
    \    fi\n\n    # Check if x is odd and y is even\n    if [ \"$x\" -eq \"1\" ]\
    \ && [ \"$y\" -eq \"0\" ]; then\n        echo \"$x is odd\"\n        return 0\n\
    \    fi\n\n    # Check if x is bigger than y\n    if [ \"$x\" -gt \"$y\" ]; then\n\
    \        echo \"$x is bigger than $y\"\n        return -1\n    fi\n\n    # Check\
    \ if x is smaller than y\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"\
    $x is smaller than $y\"\n        return -1\n    fi\n\n    # Check if x is equal\
    \ to y\n    if [ \"$x\" -eq \"$y\" ]; then\n        echo \"$x is equal to $y\"\
    \n        return 0\n    fi\n\n    # Check if x is even and y is odd\n    if [\
    \ \"$x\" -eq \"0\" ] && [ \"$y\" -eq \"1\" ]; then\n        echo \"$x is even\"\
    \n        return 0\n    fi\n\n    # Check if x is odd and y is even\n    if [\
    \ \"$x\" -eq \"1\" ] && [ \"$y\" -eq \"0\" ]; then\n        echo \"$x is odd\"\
    \n        return 0\n    fi\n\n    # Check if x is even and y is odd\n    if [\
    \ \"$x\" -eq \"0\" ] && [ \"$y\" -eq \"1\" ]; then\n        echo \"$x is even\"\
    \n        return 0\n    fi\n\n    # Check if x is odd and y is even\n    if [\
    \ \"$x\" -eq \"1\" ] && [ \"$y\" -eq \"0\" ]; then\n\n}\n\ncandidate() {\n   \
    \ choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\"\
    ) = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7fzyf602.sh: line 100: syntax error near unexpected token `}''

    /tmp/tmp7fzyf602.sh: line 100: `}''

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    if [ $x -le $y ]; then\n       \
    \ num=$(echo $(( $x % 2 )) | bc)\n        if [ $num -eq 0 ]; then\n          \
    \  echo $x\n        else\n            echo $y\n        fi\n    else\n        echo\
    \ $x\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( x > y ? x : y ))\n    local\
    \ min=$(( x < y ? x : y ))\n    local even=0\n    local odd=0\n    local num=$((\
    \ min + max ))\n    while [ $num -gt 0 ]; do\n        (( num % 2 )) && even=$((\
    \ even+1 ))\n        (( num % 2 )) && odd=$(( odd+1 ))\n        (( num-- ))\n\
    \    done\n    [ $odd -eq 0 ] && return $even\n    [ $even -eq 0 ] && return $odd\n\
    \    return -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x+y) % 2 ))\"\n    if [ \"\
    $z\" -eq \"0\" ]; then\n        echo \"$x\"\n    else\n        echo \"$y\"\n \
    \   fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max_num\n    local num_found\n    local\
    \ i\n    \n    # If the first number is greater than the second one, then the\
    \ \n    # function should return -1.\n    if [ \"$x\" -gt \"$y\" ]; then\n   \
    \     echo \"-1\"\n        return\n    fi\n\n    # If the first number is equal\
    \ to the second one, then the \n    # function should return 0.\n    if [ \"$x\"\
    \ -eq \"$y\" ]; then\n        echo \"0\"\n        return\n    fi\n\n    # If the\
    \ first number is less than the second one, then the \n    # function should return\
    \ 1.\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"1\"\n        return\n\
    \    fi\n\n    # If the first number is greater than the second one, then the\
    \ \n    # function should return -1.\n    if [ \"$x\" -gt \"$y\" ]; then\n   \
    \     echo \"-1\"\n        return\n    fi\n\n    # If the first number is less\
    \ than the second one, then the \n    # function should return 1.\n    if [ \"\
    $x\" -lt \"$y\" ]; then\n        echo \"1\"\n        return\n    fi\n\n    # If\
    \ the first number is equal to the second one, then the \n    # function should\
    \ return 0.\n    if [ \"$x\" -eq \"$y\" ]; then\n        echo \"0\"\n        return\n\
    \    fi\n\n    # If the first number is less than the second one, then the \n\
    \    # function should return 1.\n    if [ \"$x\" -lt \"$y\" ]; then\n       \
    \ echo \"1\"\n        return\n    fi\n\n    # If the first number is greater than\
    \ the second one, then the \n    # function should return -1.\n    if [ \"$x\"\
    \ -gt \"$y\" ]; then\n        echo \"-1\"\n        return\n    fi\n\n    # If\
    \ the first number is less than the second one, then the \n    # function should\
    \ return 1.\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"1\"\n        return\n\
    \    fi\n\n    # If the first number is equal to the second one, then the \n \
    \   # function should return 0.\n    if [ \"$x\" -eq \"$y\" ]; then\n        echo\
    \ \"0\"\n        return\n    fi\n\n    # If the first number is less than the\
    \ second one, then the \n    # function should return 1.\n    if [ \"$x\" -lt\
    \ \"$y\" ]; then\n        echo \"1\"\n        return\n    fi\n\n    # If the first\
    \ number is greater than the second one, then the \n    # function should return\
    \ -1.\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"-1\"\n        return\n\
    \    fi\n\n    # If the first number is less than the second one, then the \n\
    \    # function should return 1.\n    if [ \"$x\" -lt \"$y\" ]; then\n       \
    \ echo \"1\"\n        return\n    fi\n\n    # If the first number is equal to\
    \ the second one, then the \n    # function should return 0.\n    if [ \"$x\"\
    \ -eq \"$y\" ]; then\n        echo \"\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9e7iwwet.sh: line 130: unexpected EOF while looking for matching
    `"''

    /tmp/tmp9e7iwwet.sh: line 134: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y xx yy xy xx yy\n  x=$1\n  y=$2\n  xx=$(( x ))\n  yy=$(( y ))\n  xy=$(( xx\
    \ + yy ))\n  xx2=$(( x * x ))\n  yy2=$(( y * y ))\n  xyy=$(( xy + yy ))\n  xxy=$((\
    \ xx + xy ))\n  xyy2=$(( xy + yy ))\n  xxy2=$(( xx + xy ))\n  xyyx2=$(( xy + xx\
    \ ))\n  xyyx2y=$(( xy + yx ))\n  xyyx2yx=$(( xy + yx ))\n  xyyx2yxy=$(( xy + yx\
    \ ))\n  xyyx2yxyy=$(( xy + yx ))\n  xyyx2yxyxy=$(( xy + yx ))\n  xyyx2yxyxyy=$((\
    \ xy + yx ))\n  xyyx2yxyxyxy=$(( xy + yx ))\n  xyyx2yxyxyxyy=$(( xy + yx ))\n\
    \  xyyx2yxyxyxyxy=$(( xy + yx ))\n  xyyx2yxyxyxyxyy=$(( xy + yx ))\n  xyyx2yxyxyxyxyxy=$((\
    \ xy + yx ))\n  xyyx2yxyxyxyxyxy=$(( xy + yx ))\n  xyyx2yxyxyxyxyxy=$(( xy + yx\
    \ ))\n  xyyx2yxyxyxyxyxyy=$(( xy + yx ))\n  xyyx2yxyxyxyxyxyxy=$(( xy + yx ))\n\
    \  xyyx2yxyxyxyxyxyxyy=$(( xy + yx ))\n  xyyx2yxyxyxyxyxyxyxy=$(( xy + yx ))\n\
    \  xyyx2yxyxyxyxyxyxyxy=$(( xy + yx ))\n  xyyx2yxyxyxyxyxyxyxyy=$(( xy + yx ))\n\
    \  xyyx2yxyxyxyxyxyxyxyxy=$(( xy + yx ))\n  xyyx2yxyxyxyxyxy\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvgw18qsy.sh: line 47: xyyx2yxyxyxyxyxy: command not found

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( (x-y)*(x-y)))\"\n  local a=\"$((\
    \ z % 2 ))\"\n  local b=\"$(( z % 3 ))\"\n  local c=\"$(( z % 5 ))\"\n  local\
    \ d=\"$(( z % 7 ))\"\n  local e=\"$(( z % 11 ))\"\n  local f=\"$(( z % 13 ))\"\
    \n  local g=\"$(( z % 17 ))\"\n  local h=\"$(( z % 19 ))\"\n  local i=\"$(( z\
    \ % 23 ))\"\n  local j=\"$(( z % 29 ))\"\n  local k=\"$(( z % 31 ))\"\n  local\
    \ l=\"$(( z % 37 ))\"\n  local m=\"$(( z % 41 ))\"\n  local n=\"$(( z % 43 ))\"\
    \n  local o=\"$(( z % 47 ))\"\n  local p=\"$(( z % 51 ))\"\n  local q=\"$(( z\
    \ % 55 ))\"\n  local r=\"$(( z % 59 ))\"\n  local s=\"$(( z % 61 ))\"\n  local\
    \ t=\"$(( z % 65 ))\"\n  local u=\"$(( z % 69 ))\"\n  local v=\"$(( z % 71 ))\"\
    \n  local w=\"$(( z % 75 ))\"\n  local x=\"$(( z % 79 ))\"\n  local y=\"$(( z\
    \ % 81 ))\"\n  local z=\"$(( z % 83 ))\"\n  local a=\"$(( z % 85 ))\"\n  local\
    \ b=\"$(( z % 87 ))\"\n  local c=\"$(( z % 89 ))\"\n  local d=\"$(( z % 91 ))\"\
    \n  local e=\"$(( z % 93 ))\"\n  local f=\"$(( z % 95 ))\"\n  local g=\"$(( z\
    \ % 97 ))\"\n  local h=\"$(( z % 99 ))\"\n  local i=\"$(( z % 101 ))\"\n  local\
    \ j=\"$(( z % 103 ))\"\n  local k=\"$(( z % 105 ))\"\n  local l=\"$(( z % 107\
    \ ))\"\n  local m=\"$((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppfglo18m.sh: line 55: unexpected EOF while looking for matching
    `)''

    /tmp/tmppfglo18m.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    read x y <<< \"$2\"\n    local max\n    local\
    \ even\n    local odd\n    local num\n    local i\n    \n    if [ \"$x\" -gt \"\
    $y\" ]; then\n        echo \"$x is greater than $y\"\n        return 1\n    elif\
    \ [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is less than $y\"\n        return\
    \ -1\n    fi\n    \n    max=x\n    even=y\n    odd=x\n    \n    for i in $(seq\
    \ 1 $y); do\n        if [ $(( $even * 2 )) -gt $(( $max * 2 )) ]; then\n     \
    \       max=$even\n            even=$i\n        elif [ $(( $even * 2 )) -lt $((\
    \ $max * 2 )) ]; then\n            even=$i\n        fi\n    done\n    \n    for\
    \ i in $(seq 1 $x); do\n        if [ $(( $odd * 2 )) -gt $(( $max * 2 )) ]; then\n\
    \            max=$odd\n            odd=$i\n        elif [ $(( $odd * 2 )) -lt\
    \ $(( $max * 2 )) ]; then\n            odd=$i\n        fi\n    done\n    \n  \
    \  if [ \"$max\" -gt \"$even\" ]; then\n        echo \"$max is greater than $even\"\
    \n    elif [ \"$max\" -lt \"$even\" ]; then\n        echo \"$max is less than\
    \ $even\"\n    else\n        echo \"$max is equal to $even\"\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjnt8mehq.sh: line 23: [: : integer expression expected

    /tmp/tmpjnt8mehq.sh: line 26: [: : integer expression expected

    /tmp/tmpjnt8mehq.sh: line 53: [: x: integer expression expected

    /tmp/tmpjnt8mehq.sh: line 55: [: x: integer expression expected

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    read x y <<< \"$2\"\n    local max_num\n \
    \   local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ even_index\n    local odd_index\n    local max_num_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even\n    local max_odd\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local \n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-y)*(x-y)))\"\n    local b=\"$(( (x-y)*(x-y)))\"\n    local c=\"$(( (x-y)*(x-y)))\"\
    \n    local d=\"$(( (x-y)*(x-y)))\"\n    local e=\"$(( (x-y)*(x-y)))\"\n    local\
    \ f=\"$(( (x-y)*(x-y)))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$((\
    \ (x-y)*(x-y)))\"\n    local i=\"$(( (x-y)*(x-y)))\"\n    local j=\"$(( (x-y)*(x-y)))\"\
    \n    local k=\"$(( (x-y)*(x-y)))\"\n    local l=\"$(( (x-y)*(x-y)))\"\n    local\
    \ m=\"$(( (x-y)*(x-y)))\"\n    local n=\"$(( (x-y)*(x-y)))\"\n    local o=\"$((\
    \ (x-y)*(x-y)))\"\n    local p=\"$(( (x-y)*(x-y)))\"\n    local q=\"$(( (x-y)*(x-y)))\"\
    \n    local r=\"$(( (x-y)*(x-y)))\"\n    local s=\"$(( (x-y)*(x-y)))\"\n    local\
    \ t=\"$(( (x-y)*(x-y)))\"\n    local u=\"$(( (x-y)*(x-y)))\"\n    local v=\"$((\
    \ (x-y)*(x-y)))\"\n    local w=\"$(( (x-y)*(x-y)))\"\n    local x=\"$(( (x-y)*(x-y)))\"\
    \n    local y=\"$(( (x-y)*(x-y)))\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local\
    \ a=\"$(( (x-y)*(x-y)))\"\n    local b=\"$(( (x-y)*(x-y)))\"\n    local c=\"$((\
    \ (x-y)*(x-y)))\"\n    local d=\"$(( (x-y)*(x-y)))\"\n    local e=\"$(( (x-y)*(x-y)))\"\
    \n    local f=\"$(( (x-y)*(x-y)))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local\
    \ h=\"$(( (x-y)*(x-y)))\"\n    local i=\"$(( (x-y)*(x\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6ctsf69u.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmp6ctsf69u.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x + (y - x) / 2 ))\"\n    local\
    \ a=\"$(( z % 2 ))\"\n    if [ \"$a\" -eq \"0\" ]; then\n        echo \"$z\"\n\
    \    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local even\n    local odd\n    local biggest\n   \
    \ local num\n\n    even=$(( $x % 2 ))\n    odd=$(( $x % 2 ))\n\n    if [ $even\
    \ -eq 0 ]; then\n        biggest=$x\n    else\n        biggest=$y\n    fi\n\n\
    \    while [ $biggest -le $y ]; do\n        if [ $biggest -eq $even ]; then\n\
    \            if [ $odd -eq 0 ]; then\n                num=$biggest\n         \
    \   else\n                num=$(( $biggest + 1 ))\n            fi\n        else\n\
    \            if [ $odd -eq 0 ]; then\n                num=$(( $biggest - 1 ))\n\
    \            else\n                num=$biggest\n            fi\n        fi\n\
    \        biggest=$(( $num % 2 ))\n    done\n\n    if [ $biggest -eq 0 ]; then\n\
    \        echo \"-1\"\n    else\n        echo $num\n    fi\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=41 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=25 encoding='utf-8'>
  timestamp: 1660054006
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local even\n    local odd\n    local max\n    local\
    \ num\n    \n    even=$(( $x % 2 ))\n    odd=$(( $x % 2 ))\n    \n    if [ $even\
    \ -eq 0 ]; then\n        max=$(expr $x + $y)\n    else\n        max=$(expr $x\
    \ - $y)\n    fi\n    \n    while [ $odd -eq 0 ]; do\n        num=$(expr $max +\
    \ $y)\n        odd=$(( $num % 2 ))\n        max=$(expr $num - $y)\n    done\n\
    \    \n    if [ $odd -eq 0 ]; then\n        echo $max\n    else\n        echo\
    \ $max\n        echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=31 encoding='utf-8'>
  timestamp: 1660054007
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-y)*(x-y)))\"\n    local b=\"$(( (x-y)*(x-y)))\"\n    local c=\"$(( (x-y)*(x-y)))\"\
    \n    local d=\"$(( (x-y)*(x-y)))\"\n    local e=\"$(( (x-y)*(x-y)))\"\n    local\
    \ f=\"$(( (x-y)*(x-y)))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$((\
    \ (x-y)*(x-y)))\"\n    local i=\"$(( (x-y)*(x-y)))\"\n    local j=\"$(( (x-y)*(x-y)))\"\
    \n    local k=\"$(( (x-y)*(x-y)))\"\n    local l=\"$(( (x-y)*(x-y)))\"\n    local\
    \ m=\"$(( (x-y)*(x-y)))\"\n    local n=\"$(( (x-y)*(x-y)))\"\n    local o=\"$((\
    \ (x-y)*(x-y)))\"\n    local p=\"$(( (x-y)*(x-y)))\"\n    local q=\"$(( (x-y)*(x-y)))\"\
    \n    local r=\"$(( (x-y)*(x-y)))\"\n    local s=\"$(( (x-y)*(x-y)))\"\n    local\
    \ t=\"$(( (x-y)*(x-y)))\"\n    local u=\"$(( (x-y)*(x-y)))\"\n    local v=\"$((\
    \ (x-y)*(x-y)))\"\n    local w=\"$(( (x-y)*(x-y)))\"\n    local x=\"$(( (x-y)*(x-y)))\"\
    \n    local y=\"$(( (x-y)*(x-y)))\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local\
    \ a=\"$(( (x-y)*(x-y)))\"\n    local b=\"$(( (x-y)*(x-y)))\"\n    local c=\"$((\
    \ (x-y)*(x-y)))\"\n    local d=\"$(( (x-y)*(x-y)))\"\n    local e=\"$(( (x-y)*(x-y)))\"\
    \n    local f=\"$(( (x-y)*(x-y)))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local\
    \ h=\"$(( (x-y)*(x-y)))\"\n    local i=\"$(( (x-y)*(x\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6ctsf69u.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmp6ctsf69u.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $x + $y ))\"\n    local b=\"$(( $x - $y ))\"\n    local c=\"$(( $x + $y -\
    \ $z ))\"\n    local d=\"$(( $x - $y - $z ))\"\n    local e=\"$(( $x + $y - $z\
    \ - $a ))\"\n    local f=\"$(( $x - $y - $z - $a ))\"\n    local g=\"$(( $x +\
    \ $y - $z - $a - $b ))\"\n    local h=\"$(( $x - $y - $z - $a - $b ))\"\n    local\
    \ i=\"$(( $x + $y - $z - $a - $b - $c ))\"\n    local j=\"$(( $x - $y - $z - $a\
    \ - $b - $c ))\"\n    local k=\"$(( $x + $y - $z - $a - $b - $c - $d ))\"\n  \
    \  local l=\"$(( $x - $y - $z - $a - $b - $c - $d ))\"\n    local m=\"$(( $x +\
    \ $y - $z - $a - $b - $c - $d - $e ))\"\n    local n=\"$(( $x - $y - $z - $a -\
    \ $b - $c - $d - $e ))\"\n    local o=\"$(( $x + $y - $z - $a - $b - $c - $d -\
    \ $e - $f ))\"\n    local p=\"$(( $x - $y - $z - $a - $b - $c - $d - $e - $f ))\"\
    \n    local q=\"$(( $x + $y - $z - $a - $b - $c - $d - $e - $f - $g ))\"\n   \
    \ local r=\"$(( $x - $y - $z - $a - $b - $c - $d - $e - $f - $g ))\"\n    local\
    \ s=\"$(( $x + $y - $z - $a - $b - $c - $d - $e - $f - $g - $h ))\"\n    local\
    \ t=\"$(( $x - $y - $z - $a - $b - $c - $d - $e - $f - $g - $h ))\"\n    local\
    \ u=\"$(( $x + $y - $z - $a - $b - $c - $d - $e - $f - $g - $h - $i ))\"\n   \
    \ \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max_num=\"$x\"\n    local min_num=\"\
    $y\"\n    local even=0\n    local odd=0\n    local even2=0\n    local odd2=0\n\
    \    local even3=0\n    local odd3=0\n    local even4=0\n    local odd4=0\n  \
    \  local even5=0\n    local odd5=0\n    local even6=0\n    local odd6=0\n    local\
    \ even7=0\n    local odd7=0\n    local even8=0\n    local odd8=0\n    local even9=0\n\
    \    local odd9=0\n    local even10=0\n    local odd10=0\n    local even11=0\n\
    \    local odd11=0\n    local even12=0\n    local odd12=0\n    local even13=0\n\
    \    local odd13=0\n    local even14=0\n    local odd14=0\n    local even15=0\n\
    \    local odd15=0\n    local even16=0\n    local odd16=0\n    local even17=0\n\
    \    local odd17=0\n    local even18=0\n    local odd18=0\n    local even19=0\n\
    \    local odd19=0\n    local even20=0\n    local odd20=0\n    local even21=0\n\
    \    local odd21=0\n    local even22=0\n    local odd22=0\n    local even23=0\n\
    \    local odd23=0\n    local even24=0\n    local odd24=0\n    local even25=0\n\
    \    local odd25=0\n    local even26=0\n    local odd26=0\n    local even27=0\n\
    \    local odd27=0\n    local even28=0\n    local odd28=0\n    local even29=0\n\
    \    local odd29=0\n    local even30=0\n    local odd30=0\n    local even31=0\n\
    \    local odd31=0\n    local even32=0\n    local odd32=0\n    local even33=0\n\
    \    local odd33=0\n    local even34=0\n    local odd34=0\n    local even35=0\n\
    \    local odd35=0\n    local even36=0\n    local odd36=0\n    local even37=0\n\
    \    local odd37=0\n    local even38=0\n    local odd38=0\n    local even39=0\n\
    \    local odd39=0\n    local even40=0\n    local odd40=0\n    local even41=0\n\
    \    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    if [ \"$x\" -le \"$y\" ]; then\n\
    \        num=$(expr $x + 1)\n    else\n        num=$(expr $y - $x + 1)\n    fi\n\
    \    while [ \"$num\" -le \"$y\" ] && [ \"$num\" -ge \"$x\" ]; do\n        ((\
    \ num += 2 ))\n    done\n    echo \"$num\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmpnl9hzwpi.sh: line 17: [: : integer expression expected\nexpr: syntax\
    \ error: unexpected argument \u201812\u2019\n/tmp/tmpnl9hzwpi.sh: line 22: [:\
    \ : integer expression expected\n"
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local result\n  \n  if (( x < y )); then\n   \
    \ echo \"$x is smaller than $y\"\n    return -1\n  fi\n  \n  if (( x == y ));\
    \ then\n    echo \"$x is equal to $y\"\n    return 0\n  fi\n  \n  if (( x > y\
    \ )); then\n    echo \"$x is greater than $y\"\n    return -1\n  fi\n  \n  result=$((\
    \ x + y ))\n  \n  while (( result > 0 )); do\n    if (( result % 2 == 0 )); then\n\
    \      result=$(( result / 2 ))\n    else\n      result=$(( result / 2 ))\n  \
    \    break\n    fi\n  done\n  \n  echo \"$result\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local num\n    \n    if [ \"$x\" -gt \"$y\" ]; then\n     \
    \   echo \"$x is greater than $y\"\n        return -1\n    fi\n    \n    if [\
    \ \"$x\" -le \"$y\" ]; then\n        echo \"$x is less than $y\"\n        return\
    \ -1\n    fi\n    \n    max=x\n    \n    for i in $(seq 1 \"$y\"); do\n      \
    \  even=$(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnz8_obyh.sh: line 35: unexpected EOF while looking for matching
    `)''

    /tmp/tmpnz8_obyh.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local num\n  local even\n  local\
    \ odd\n  local even2\n  local odd2\n  local even3\n  local odd3\n  local even4\n\
    \  local odd4\n  local even5\n  local odd5\n  local even6\n  local odd6\n  local\
    \ even7\n  local odd7\n  local even8\n  local odd8\n  local even9\n  local odd9\n\
    \  local even10\n  local odd10\n  local even11\n  local odd11\n  local even12\n\
    \  local odd12\n  local even13\n  local odd13\n  local even14\n  local odd14\n\
    \  local even15\n  local odd15\n  local even16\n  local odd16\n  local even17\n\
    \  local odd17\n  local even18\n  local odd18\n  local even19\n  local odd19\n\
    \  local even20\n  local odd20\n  local even21\n  local odd21\n  local even22\n\
    \  local odd22\n  local even23\n  local odd23\n  local even24\n  local odd24\n\
    \  local even25\n  local odd25\n  local even26\n  local odd26\n  local even27\n\
    \  local odd27\n  local even28\n  local odd28\n  local even29\n  local odd29\n\
    \  local even30\n  local odd30\n  local even31\n  local odd31\n  local even32\n\
    \  local odd32\n  local even33\n  local odd33\n  local even34\n  local odd34\n\
    \  local even35\n  local odd35\n  local even36\n  local odd36\n  local even37\n\
    \  local odd37\n  local even38\n  local odd38\n  local even39\n  local odd39\n\
    \  local even40\n  local odd40\n  local even41\n  local odd41\n  local even42\n\
    \  local odd42\n  local even43\n  local odd43\n  local even44\n  local odd44\n\
    \  local even45\n  local odd45\n  local even46\n  local odd46\n  local even47\n\
    \  local odd47\n  local even48\n  local odd48\n  local even49\n  local odd49\n\
    \  local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"-1\"\n    while (( \"$x\" <= \"\
    $y\" )); do\n        (( z += $x ))\n        (( x -= 2 ))\n    done\n    echo \"\
    $z\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=34 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660054007
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    if [[ $x -ge $y ]]; then\n\
    \        result=$(( x + y ))\n    else\n        result=$(( y - x ))\n    fi\n\
    \    echo $result\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    local num2\n    local num3\n\
    \    local num4\n    local num5\n    local num6\n    local num7\n    local num8\n\
    \    local num9\n    local num10\n    local num11\n    local num12\n    local\
    \ num13\n    local num14\n    local num15\n    local num16\n    local num17\n\
    \    local num18\n    local num19\n    local num20\n    local num21\n    local\
    \ num22\n    local num23\n    local num24\n    local num25\n    local num26\n\
    \    local num27\n    local num28\n    local num29\n    local num30\n    local\
    \ num31\n    local num32\n    local num33\n    local num34\n    local num35\n\
    \    local num36\n    local num37\n    local num38\n    local num39\n    local\
    \ num40\n    local num41\n    local num42\n    local num43\n    local num44\n\
    \    local num45\n    local num46\n    local num47\n    local num48\n    local\
    \ num49\n    local num50\n    local num51\n    local num52\n    local num53\n\
    \    local num54\n    local num55\n    local num56\n    local num57\n    local\
    \ num58\n    local num59\n    local num60\n    local num61\n    local num62\n\
    \    local num63\n    local num64\n    local num65\n    local num66\n    local\
    \ num67\n    local num68\n    local num69\n    local num70\n    local num71\n\
    \    local num72\n    local num73\n    local num74\n    local num75\n    local\
    \ num76\n    local num77\n    local num78\n    local num79\n    local num80\n\
    \    local num81\n    local num82\n    local num83\n    local num84\n    local\
    \ num85\n    local num86\n    local num87\n    local num88\n    local num89\n\
    \    local num90\n    local num91\n    local num92\n    local num93\n    local\
    \ num94\n    local num95\n    local num96\n    local num97\n    local num98\n\
    \    local num99\n    local num100\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y num\n    x=$1\n    y=$2\n    num=$(expr $x + $y)\n    while [ $num -gt $y\
    \ ]\n    do\n        ((num-=y))\n    done\n    while [ $num -gt $x ]\n    do\n\
    \        ((num-=x))\n    done\n    echo $num\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -gt $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y\n  x=$1\n  y=$2\n  local num\n  num=$(( x > y ? x : y ))\n  while [ $num\
    \ -gt $y ]; do\n    (( num -= y ))\n  done\n  echo $num\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( b - a ))\"\n   \
    \ local d=\"$(( c + 1 ))\"\n    local e=\"$(( d - 1 ))\"\n    local f=\"$(( e\
    \ + 1 ))\"\n    local g=\"$(( f + 1 ))\"\n    local h=\"$(( g + 1 ))\"\n    local\
    \ i=\"$(( h + 1 ))\"\n    local j=\"$(( i + 1 ))\"\n    local k=\"$(( j + 1 ))\"\
    \n    local l=\"$(( k + 1 ))\"\n    local m=\"$(( l + 1 ))\"\n    local n=\"$((\
    \ m + 1 ))\"\n    local o=\"$(( n + 1 ))\"\n    local p=\"$(( o + 1 ))\"\n   \
    \ local q=\"$(( p + 1 ))\"\n    local r=\"$(( q + 1 ))\"\n    local s=\"$(( r\
    \ + 1 ))\"\n    local t=\"$(( s + 1 ))\"\n    local u=\"$(( t + 1 ))\"\n    local\
    \ v=\"$(( u + 1 ))\"\n    local w=\"$(( v + 1 ))\"\n    local x=\"$(( w + 1 ))\"\
    \n    local y=\"$(( x + 1 ))\"\n    local z=\"$(( y + 1 ))\"\n    local a=\"$((\
    \ z + 1 ))\"\n    local b=\"$(( a + 1 ))\"\n    local c=\"$(( b + 1 ))\"\n   \
    \ local d=\"$(( c + 1 ))\"\n    local e=\"$(( d + 1 ))\"\n    local f=\"$(( e\
    \ + 1 ))\"\n    local g=\"$(( f + 1 ))\"\n    local h=\"$(( g + 1 ))\"\n    local\
    \ i=\"$(( h + 1 ))\"\n    local j=\"$(( i + 1 ))\"\n    local k=\"$(( j + 1 ))\"\
    \n    local l=\"$(( k + 1 ))\"\n    local m=\"$(( l + 1 ))\"\n    local n=\"$((\
    \ m + 1 ))\"\n    local o=\"$(( n + 1 ))\"\n    local p=\"$(( o + 1 ))\"\n   \
    \ local q=\"$((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1lqvf9jg.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1lqvf9jg.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local even\n\
    \    local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ((x + (y - x)) % y) + x ))\"\
    \n    if [[ $z -eq 0 ]]; then\n        echo \"-1\"\n    else\n        echo \"\
    $z\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    if [ $num\
    \ -ge 0 ] && [ $num -le $(($x + $y)) ]; then\n        echo $num\n    else\n  \
    \      echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-z)/2 ))\"\n    local b=\"$(( (y-z)/2 ))\"\n    local c=\"$(( (x-y)*(x-y)))\"\
    \n    local d=\"$(( (y-z)/2 ))\"\n    local e=\"$(( (x-z)/2 ))\"\n    local f=\"\
    $(( (y-z)/2 ))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$(( (y-z)/2\
    \ ))\"\n    local i=\"$(( (x-z)/2 ))\"\n    local j=\"$(( (y-z)/2 ))\"\n    local\
    \ k=\"$(( (x-y)*(x-y)))\"\n    local l=\"$(( (y-z)/2 ))\"\n    local m=\"$(( (x-z)/2\
    \ ))\"\n    local n=\"$(( (y-z)/2 ))\"\n    local o=\"$(( (x-y)*(x-y)))\"\n  \
    \  local p=\"$(( (y-z)/2 ))\"\n    local q=\"$(( (x-z)/2 ))\"\n    local r=\"\
    $(( (y-z)/2 ))\"\n    local s=\"$(( (x-y)*(x-y)))\"\n    local t=\"$(( (y-z)/2\
    \ ))\"\n    local u=\"$(( (x-z)/2 ))\"\n    local v=\"$(( (y-z)/2 ))\"\n    local\
    \ w=\"$(( (x-y)*(x-y)))\"\n    local x=\"$(( (y-z)/2 ))\"\n    local y=\"$(( (x-z)/2\
    \ ))\"\n    local z=\"$(( (y-z)/2 ))\"\n    local a=\"$(( (x-y)*(x-y)))\"\n  \
    \  local b=\"$(( (y-z)/2 ))\"\n    local c=\"$(( (x-y)*(x-y)))\"\n    local d=\"\
    $(( (y-z)/2 ))\"\n    local e=\"$(( (x-z)/2 ))\"\n    local f=\"$(( (y-z)/2 ))\"\
    \n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$(( (y-z)/2 ))\"\n    local\
    \ i=\"$(( (x-z)/2 ))\"\n    local j=\"$(( (y-z)/2 ))\"\n    local k=\"$(( (x-y)*\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxma22b1k.sh: line 53: unexpected EOF while looking for matching
    `)''

    /tmp/tmpxma22b1k.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local z=$(( ($x-$y)*2 ))\n    while [ $z -gt $x ];\
    \ do\n        (( z += 2 ))\n    done\n    echo $z\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y\n  x=$1\n  y=$2\n  local z\n  z=$(( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprl2hcd5z.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmprl2hcd5z.sh: line 38: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local z=$((x+y))\n    local a=$((z%2))\n    local\
    \ b=$((z-1))\n    local c=$((z+1))\n    local d=$((z+y))\n    local e=$((z+1))\n\
    \    local f=$((z+y))\n    local g=$((z+1))\n    local h=$((z+y))\n    local i=$((z+1))\n\
    \    local j=$((z+y))\n    local k=$((z+1))\n    local l=$((z+y))\n    local m=$((z+1))\n\
    \    local n=$((z+y))\n    local o=$((z+1))\n    local p=$((z+y))\n    local q=$((z+1))\n\
    \    local r=$((z+y))\n    local s=$((z+1))\n    local t=$((z+y))\n    local u=$((z+1))\n\
    \    local v=$((z+y))\n    local w=$((z+1))\n    local x=$((z+y))\n    local y=$((z+1))\n\
    \    local z=$((z+y))\n    local a=$((z%2))\n    local b=$((z-1))\n    local c=$((z+1))\n\
    \    local d=$((z+y))\n    local e=$((z+1))\n    local f=$((z+y))\n    local g=$((z+1))\n\
    \    local h=$((z+y))\n    local i=$((z+1))\n    local j=$((z+y))\n    local k=$((z+1))\n\
    \    local l=$((z+y))\n    local m=$((z+1))\n    local n=$((z+y))\n    local o=$((z+1))\n\
    \    local p=$((z+y))\n    local q=$((z+1))\n    local r=$((z+y))\n    local s=$((z+1))\n\
    \    local t=$((z+y))\n    local u=$((z+1))\n    local v=$((z+y))\n    local w=$((z+1))\n\
    \    local x=$((z+y))\n    local y=$((z+1))\n    local z=$((z+y))\n    local a=$((z%2))\n\
    \    local b=$((z-1))\n    local c=$((z+1))\n    \n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( b - a ))\"\n   \
    \ local d=\"$(( c + y ))\"\n    local e=\"$(( d - x ))\"\n    local f=\"$(( e\
    \ % 2 ))\"\n    local g=\"$(( e / 2 ))\"\n    local h=\"$(( g - f ))\"\n    local\
    \ i=\"$(( h - g ))\"\n    local j=\"$(( i - f ))\"\n    local k=\"$(( j % 2 ))\"\
    \n    local l=\"$(( j / 2 ))\"\n    local m=\"$(( l - k ))\"\n    local n=\"$((\
    \ m - l ))\"\n    local o=\"$(( n - m ))\"\n    local p=\"$(( o % 2 ))\"\n   \
    \ local q=\"$(( o / 2 ))\"\n    local r=\"$(( q % 2 ))\"\n    local s=\"$(( q\
    \ / 2 ))\"\n    local t=\"$(( r - s ))\"\n    local u=\"$(( t - s ))\"\n    local\
    \ v=\"$(( u % 2 ))\"\n    local w=\"$(( u / 2 ))\"\n    local x=\"$(( v - w ))\"\
    \n    local y=\"$(( w - v ))\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( b - a ))\"\n   \
    \ local d=\"$(( c + y ))\"\n    local e=\"$(( d - x ))\"\n    local f=\"$(( e\
    \ % 2 ))\"\n    local g=\"$(( e / 2 ))\"\n    local h=\"$(( g - f ))\"\n    local\
    \ i=\"$(( h - g ))\"\n    local j=\"$(( i - f ))\"\n    local k=\"$(( j % 2 ))\"\
    \n    local l=\"$(( j / 2 ))\"\n    local m=\"$(( l - k ))\"\n    local n=\"$((\
    \ m - l ))\"\n    local o=\"$(( n - m ))\"\n    local p=\"$(( o % 2 ))\"\n   \
    \ local q=\"$\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjzi2sowl.sh: line 75: unexpected EOF while looking for matching
    `"''

    /tmp/tmpjzi2sowl.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ num\n    local even\n    local odd\n\n    if [[ $x -ge $y ]]; then\n       \
    \ max=x\n    else\n        max=y\n    fi\n\n    for ((i=1; i<=$max; i++)); do\n\
    \        if [[ $((i%2)) -eq 0 ]]; then\n            even=$i\n        else\n  \
    \          odd=$i\n        fi\n    done\n\n    if [[ $even -ge $odd ]]; then\n\
    \        num=even\n    else\n        num=odd\n    fi\n\n    echo $num\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    if [[ $x -le $y ]]; then\n\
    \        num=$(expr $x + $y - 1)\n        if [[ $num -gt 0 ]]; then\n        \
    \    echo \"$num\"\n        else\n            echo \"-1\"\n        fi\n    else\n\
    \        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z * 2 ))\"\n   \
    \ local d=\"$(( z * 3 ))\"\n    local e=\"$(( z * 4 ))\"\n    local f=\"$(( z\
    \ * 5 ))\"\n    local g=\"$(( z * 6 ))\"\n    local h=\"$(( z * 7 ))\"\n    local\
    \ i=\"$(( z * 8 ))\"\n    local j=\"$(( z * 9 ))\"\n    local k=\"$(( z * 10 ))\"\
    \n    local l=\"$(( z * 11 ))\"\n    local m=\"$(( z * 12 ))\"\n    local n=\"\
    $(( z * 13 ))\"\n    local o=\"$(( z * 14 ))\"\n    local p=\"$(( z * 15 ))\"\n\
    \    local q=\"$(( z * 16 ))\"\n    local r=\"$(( z * 17 ))\"\n    local s=\"\
    $(( z * 18 ))\"\n    local t=\"$(( z * 19 ))\"\n    local u=\"$(( z * 20 ))\"\n\
    \    local v=\"$(( z * 21 ))\"\n    local w=\"$(( z * 22 ))\"\n    local x=\"\
    $(( z * 23 ))\"\n    local y=\"$(( z * 24 ))\"\n    local z=\"$(( z * 25 ))\"\n\
    \    local a=\"$(( z * 26 ))\"\n    local b=\"$(( z * 27 ))\"\n    local c=\"\
    $(( z * 28 ))\"\n    local d=\"$(( z * 29 ))\"\n    local e=\"$(( z * 30 ))\"\n\
    \    local f=\"$(( z * 31 ))\"\n    local g=\"$(( z * 32 ))\"\n    local h=\"\
    $(( z * 33 ))\"\n    local i=\"$(( z * 34 ))\"\n    local j=\"$(( z * 35 ))\"\n\
    \    local k=\"$(( z * 36 ))\"\n    local l=\"$(( z * 37 ))\"\n    local m=\"\
    $(( z * 38 ))\"\n    local n=\"$(( z * 39 ))\"\n    local o=\"$(( \n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpshoi896k.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpshoi896k.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    if [[ $x -le $y ]]; then\n\
    \        num=$(expr $x + $y)\n        if [[ $num -gt 0 ]]; then\n            echo\
    \ \"$num\"\n        else\n            echo \"-1\"\n        fi\n    else\n    \
    \    echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local z\n    z=$(( x + ( y - x ) ))\n    if [ $z\
    \ -gt $y ]; then\n        echo $z\n    else\n        echo $(( z - 1 ))\n    fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    if [[ $x -le $y ]]; then\n\
    \        num=$(expr $x + 1)\n    else\n        num=$(expr $y - 1)\n    fi\n  \
    \  while [[ $num -gt 0 ]]; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n   \
    \         echo \"$num\"\n            break\n        fi\n        num=$(expr $num\
    \ / 2)\n    done\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u20181\u2019\n"
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\n    local c=\"$(( $z - 1 ))\"\n\
    \    local d=\"$(( $z * 2 ))\"\n    local e=\"$(( $z + 1 ))\"\n    local f=\"\
    $(( $z + 2 ))\"\n    local g=\"$(( $z + 3 ))\"\n    local h=\"$(( $z + 4 ))\"\n\
    \    local i=\"$(( $z + 5 ))\"\n    local j=\"$(( $z + 6 ))\"\n    local k=\"\
    $(( $z + 7 ))\"\n    local l=\"$(( $z + 8 ))\"\n    local m=\"$(( $z + 9 ))\"\n\
    \    local n=\"$(( $z + 10 ))\"\n    local o=\"$(( $z + 11 ))\"\n    local p=\"\
    $(( $z + 12 ))\"\n    local q=\"$(( $z + 13 ))\"\n    local r=\"$(( $z + 14 ))\"\
    \n    local s=\"$(( $z + 15 ))\"\n    local t=\"$(( $z + 16 ))\"\n    local u=\"\
    $(( $z + 17 ))\"\n    local v=\"$(( $z + 18 ))\"\n    local w=\"$(( $z + 19 ))\"\
    \n    local x=\"$(( $z + 20 ))\"\n    local y=\"$(( $z + 21 ))\"\n    local z=\"\
    $(( $z + 22 ))\"\n    local a=\"$(( $z + 23 ))\"\n    local b=\"$(( $z + 24 ))\"\
    \n    local c=\"$(( $z + 25 ))\"\n    local d=\"$(( $z + 26 ))\"\n    local e=\"\
    $(( $z + 27 ))\"\n    local f=\"$(( $z + 28 ))\"\n    local g=\"$(( $z + 29 ))\"\
    \n    local h=\"$(( $z + 30 ))\"\n    local i=\"$(( $z + 31 ))\"\n    local j=\"\
    $(( $z + 32 ))\"\n    local k=\"$(( $z + 33 ))\"\n    local l=\"$(( $z + 34 ))\"\
    \n    local m=\"$(( $z + 35 ))\"\n    local n=\"$(( $z + 36 ))\"\n    local o=\"\
    $\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjeh8xtn_.sh: line 73: unexpected EOF while looking for matching
    `"''

    /tmp/tmpjeh8xtn_.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( x - y ))\"\n  local a=\"$(( z %\
    \ 2 ))\"\n  local b=\"$(( z / 2 ))\"\n  echo \"$(( a > b ? a : b ))\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($y - $x + 1) | 0 ))\"\n   \
    \ local a=\"$(( ($z - $z % 2) | 0 ))\"\n    local b=\"$(( ($z - $z % 4) | 0 ))\"\
    \n    local c=\"$(( ($z - $z % 8) | 0 ))\"\n    local d=\"$(( ($z - $z % 16) |\
    \ 0 ))\"\n    local e=\"$(( ($z - $z % 32) | 0 ))\"\n    local f=\"$(( ($z - $z\
    \ % 64) | 0 ))\"\n    local g=\"$(( ($z - $z % 128) | 0 ))\"\n    local h=\"$((\
    \ ($z - $z % 256) | 0 ))\"\n    local i=\"$(( ($z - $z % 512) | 0 ))\"\n    local\
    \ j=\"$(( ($z - $z % 1024) | 0 ))\"\n    local k=\"$(( ($z - $z % 2048) | 0 ))\"\
    \n    local l=\"$(( ($z - $z % 4096) | 0 ))\"\n    local m=\"$(( ($z - $z % 8192)\
    \ | 0 ))\"\n    local n=\"$(( ($z - $z % 16384) | 0 ))\"\n    local o=\"$(( ($z\
    \ - $z % 32768) | 0 ))\"\n    local p=\"$(( ($z - $z % 65536) | 0 ))\"\n    local\
    \ q=\"$(( ($z - $z % 131072) | 0 ))\"\n    local r=\"$(( ($z - $z % 262144) |\
    \ 0 ))\"\n    local s=\"$(( ($z - $z % 524288) | 0 ))\"\n    local t=\"$(( ($z\
    \ - $z % 1048576) | 0 ))\"\n    local u=\"$(( ($z - $z % 2097152) | 0 ))\"\n \
    \   local v=\"$(( ($z - $z % 4194304) | 0 ))\"\n    local w=\"$(( ($z - $z % 8388608)\
    \ | 0 ))\"\n    local x=\"$(( ($z - $z % 16777216) | 0 ))\"\n    local y=\"$((\
    \ ($z - $z % 33554432) | 0 ))\"\n    local z=\"$(( ($z - $z\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpllv9rmqu.sh: line 42: unexpected EOF while looking for matching
    `)''

    /tmp/tmpllv9rmqu.sh: line 62: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( x > y ? x : y ))\n  while [ $z\
    \ -le $x ]; do\n    (( z += 2 ))\n  done\n  while [ $z -le $y ]; do\n    (( z\
    \ += 2 ))\n  done\n  echo $z\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\n    local c=\"$(( $z - 1 ))\"\n\
    \    local d=\"$(( $z + 1 ))\"\n    local e=\"$(( $z + 2 ))\"\n    local f=\"\
    $(( $z + 3 ))\"\n    local g=\"$(( $z + 4 ))\"\n    local h=\"$(( $z + 5 ))\"\n\
    \    local i=\"$(( $z + 6 ))\"\n    local j=\"$(( $z + 7 ))\"\n    local k=\"\
    $(( $z + 8 ))\"\n    local l=\"$(( $z + 9 ))\"\n    local m=\"$(( $z + 10 ))\"\
    \n    local n=\"$(( $z + 11 ))\"\n    local o=\"$(( $z + 12 ))\"\n    local p=\"\
    $(( $z + 13 ))\"\n    local q=\"$(( $z + 14 ))\"\n    local r=\"$(( $z + 15 ))\"\
    \n    local s=\"$(( $z + 16 ))\"\n    local t=\"$(( $z + 17 ))\"\n    local u=\"\
    $(( $z + 18 ))\"\n    local v=\"$(( $z + 19 ))\"\n    local w=\"$(( $z + 20 ))\"\
    \n    local x=\"$(( $z + 21 ))\"\n    local y=\"$(( $z + 22 ))\"\n    local z=\"\
    $(( $z + 23 ))\"\n    local a=\"$(( $z + 24 ))\"\n    local b=\"$(( $z + 25 ))\"\
    \n    local c=\"$(( $z + 26 ))\"\n    local d=\"$(( $z + 27 ))\"\n    local e=\"\
    $(( $z + 28 ))\"\n    local f=\"$(( $z + 29 ))\"\n    local g=\"$(( $z + 30 ))\"\
    \n    local h=\"$(( $z + 31 ))\"\n    local i=\"$(( $z + 32 ))\"\n    local j=\"\
    $(( $z + 33 ))\"\n    local k=\"$(( $z + 34 ))\"\n    local l=\"$(( $z + 35 ))\"\
    \n    local m=\"$(( $z + 36 ))\"\n    local n=\"$(( $z + 37 ))\"\n    local o=\"\
    $\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpty5zo80g.sh: line 73: unexpected EOF while looking for matching
    `"''

    /tmp/tmpty5zo80g.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x \\* $y)\n    while\
    \ [ $num -le $(($x + $y)) ]; do\n        ((num += $x))\n        if [ $num -eq\
    \ $y ]; then\n            echo $num\n            return 0\n        fi\n    done\n\
    \    echo $((num - $y))\n    return -1\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ i\n  local j\n  local k\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local i\n  local j\n  local k\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local i\n  local\
    \ j\n  local k\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local i\n  local j\n  local k\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local i\n  local j\n  local\
    \ k\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local i\n  local j\n  local k\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n\n    # Find max and min values\n    max=$(( x > y ? x : y ))\n\
    \    min=$(( x < y ? x : y ))\n\n    # Find all even numbers between min and max\n\
    \    for (( i=1; i<=max; i++ )); do\n        even=$(( i % 2 ))\n        if [ $even\
    \ = 0 ]; then\n            echo \"$i\"\n        fi\n    done\n\n    # Find all\
    \ odd numbers between min and max\n    for (( i=1; i<=max; i++ )); do\n      \
    \  odd=$(( i % 2 ))\n        if [ $odd = 0 ]; then\n            echo \"$i\"\n\
    \        fi\n    done\n\n    # Return -1 if there's no even or odd number\n  \
    \  if [ $even = 0 ] || [ $odd = 0 ]; then\n        echo \"-1\"\n    fi\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local max_num=$(( ($x | $y) ))\n    local max_even=0\n\
    \    local even=0\n    local odd=0\n    local even2=0\n    local odd2=0\n    local\
    \ even3=0\n    local odd3=0\n    local even4=0\n    local odd4=0\n    local even5=0\n\
    \    local odd5=0\n    local even6=0\n    local odd6=0\n    local even7=0\n  \
    \  local odd7=0\n    local even8=0\n    local odd8=0\n    local even9=0\n    local\
    \ odd9=0\n    local even10=0\n    local odd10=0\n    local even11=0\n    local\
    \ odd11=0\n    local even12=0\n    local odd12=0\n    local even13=0\n    local\
    \ odd13=0\n    local even14=0\n    local odd14=0\n    local even15=0\n    local\
    \ odd15=0\n    local even16=0\n    local odd16=0\n    local even17=0\n    local\
    \ odd17=0\n    local even18=0\n    local odd18=0\n    local even19=0\n    local\
    \ odd19=0\n    local even20=0\n    local odd20=0\n    local even21=0\n    local\
    \ odd21=0\n    local even22=0\n    local odd22=0\n    local even23=0\n    local\
    \ odd23=0\n    local even24=0\n    local odd24=0\n    local even25=0\n    local\
    \ odd25=0\n    local even26=0\n    local odd26=0\n    local even27=0\n    local\
    \ odd27=0\n    local even28=0\n    local odd28=0\n    local even29=0\n    local\
    \ odd29=0\n    local even30=0\n    local odd30=0\n    local even31=0\n    local\
    \ odd31=0\n    local even32=0\n    local odd32=0\n    local even33=0\n    local\
    \ odd33=0\n    local even34=0\n    local odd34=0\n    local even35=0\n    local\
    \ odd35=0\n    local even36=0\n    local odd36=0\n    local even37=0\n    local\
    \ odd37=0\n    local even38=0\n    local odd38=0\n    local even39=0\n    local\
    \ odd39=0\n    local even40=0\n    local odd40=0\n    local even\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x \\* $x + $y \\* $y\
    \ - $x \\* $y)\n    if [ $num -gt 0 ]; then\n        echo $num\n    else\n   \
    \     echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( y - b ))\"\n   \
    \ local d=\"$(( c - a ))\"\n    local e=\"$(( b - a ))\"\n    local f=\"$(( e\
    \ - d ))\"\n    local g=\"$(( f - c ))\"\n    local h=\"$(( g - b ))\"\n    local\
    \ i=\"$(( h - a ))\"\n    local j=\"$(( i - a ))\"\n    local k=\"$(( j - a ))\"\
    \n    local l=\"$(( k - a ))\"\n    local m=\"$(( l - a ))\"\n    local n=\"$((\
    \ m - a ))\"\n    local o=\"$(( n - a ))\"\n    local p=\"$(( o - a ))\"\n   \
    \ local q=\"$(( p - a ))\"\n    local r=\"$(( q - a ))\"\n    local s=\"$(( r\
    \ - a ))\"\n    local t=\"$(( s - a ))\"\n    local u=\"$(( t - a ))\"\n    local\
    \ v=\"$(( u - a ))\"\n    local w=\"$(( v - a ))\"\n    local x=\"$(( w - a ))\"\
    \n    local y=\"$(( x - a ))\"\n    local z=\"$(( y - a ))\"\n    local a=\"$((\
    \ z - a ))\"\n    local b=\"$(( a % 2 ))\"\n    local c=\"$(( a / 2 ))\"\n   \
    \ local d=\"$(( c - b ))\"\n    local e=\"$(( d - b ))\"\n    local f=\"$(( e\
    \ - b ))\"\n    local g=\"$(( f - b ))\"\n    local h=\"$(( g - b ))\"\n    local\
    \ i=\"$(( h - b ))\"\n    local j=\"$(( i - b ))\"\n    local k=\"$(( j - b ))\"\
    \n    local l=\"$(( k - b ))\"\n    local m=\"$(( l - b ))\"\n    local n=\"$((\
    \ m - b ))\"\n    local o=\"$(( n - b ))\"\n    local p=\"$(( o - b ))\"\n   \
    \ local q=\"$(( p - \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmludrv6d.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmludrv6d.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x+$y)/2 ))\"\n    local a=\"\
    $(( $x % $y ))\"\n    local b=\"$(( $y % $x ))\"\n    local c=\"$(( $z % $a ))\"\
    \n    local d=\"$(( $z % $b ))\"\n    local e=\"$(( $z % $c ))\"\n    local f=\"\
    $(( $z % $d ))\"\n    local g=\"$(( $z % $e ))\"\n    local h=\"$(( $z % $f ))\"\
    \n    local i=\"$(( $z % $g ))\"\n    local j=\"$(( $z % $h ))\"\n    local k=\"\
    $(( $z % $i ))\"\n    local l=\"$(( $z % $j ))\"\n    local m=\"$(( $z % $k ))\"\
    \n    local n=\"$(( $z % $l ))\"\n    local o=\"$(( $z % $m ))\"\n    local p=\"\
    $(( $z % $n ))\"\n    local q=\"$(( $z % $o ))\"\n    local r=\"$(( $z % $p ))\"\
    \n    local s=\"$(( $z % $q ))\"\n    local t=\"$(( $z % $r ))\"\n    local u=\"\
    $(( $z % $s ))\"\n    local v=\"$(( $z % $t ))\"\n    local w=\"$(( $z % $u ))\"\
    \n    local x=\"$(( $z % $v ))\"\n    local y=\"$(( $z % $w ))\"\n    local z=\"\
    $(( $z % $x ))\"\n    echo $z\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp42musilm.sh: line 23: 13 % 0 : division by 0 (error token is "0
    ")

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local even\n    local odd\n    local max\n    local\
    \ min\n    local num\n    \n    even=$(( $x % 2 ))\n    odd=$(( $x % 2 ))\n  \
    \  \n    if [ $even -eq 0 ]; then\n        max=$(expr $x + 1)\n    else\n    \
    \    max=$(expr $x - 1)\n    fi\n    \n    if [ $odd -eq 0 ]; then\n        min=$(expr\
    \ $y - 1)\n    else\n        min=$(expr $y - 1)\n    fi\n    \n    if [ $min -gt\
    \ $max ]; then\n        num=$(expr $min + 1)\n    else\n        num=$(expr $max\
    \ + 1)\n    fi\n    \n    echo $num\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x<y) ? x : y ))\"\n    local\
    \ a=\"$(( (z%2==0) ? z : z+1 ))\"\n    local b=\"$(( (z%2==0) ? z : z-1 ))\"\n\
    \    local c=\"$(( (z%2==0) ? z : z+1 ))\"\n    local d=\"$(( (z%2==0) ? z : z-1\
    \ ))\"\n    local e=\"$(( (z%2==0) ? z : z+1 ))\"\n    local f=\"$(( (z%2==0)\
    \ ? z : z-1 ))\"\n    local g=\"$(( (z%2==0) ? z : z+1 ))\"\n    local h=\"$((\
    \ (z%2==0) ? z : z-1 ))\"\n    local i=\"$(( (z%2==0) ? z : z+1 ))\"\n    local\
    \ j=\"$(( (z%2==0) ? z : z-1 ))\"\n    local k=\"$(( (z%2==0) ? z : z+1 ))\"\n\
    \    local l=\"$(( (z%2==0) ? z : z-1 ))\"\n    local m=\"$(( (z%2==0) ? z : z+1\
    \ ))\"\n    local n=\"$(( (z%2==0) ? z : z-1 ))\"\n    local o=\"$(( (z%2==0)\
    \ ? z : z+1 ))\"\n    local p=\"$(( (z%2==0) ? z : z-1 ))\"\n    local q=\"$((\
    \ (z%2==0) ? z : z+1 ))\"\n    local r=\"$(( (z%2==0) ? z : z-1 ))\"\n    local\
    \ s=\"$(( (z%2==0) ? z : z+1 ))\"\n    local t=\"$(( (z%2==0) ? z : z-1 ))\"\n\
    \    local u=\"$(( (z%2==0) ? z : z+1 ))\"\n    local v=\"$(( (z%2==0) ? z : z-1\
    \ ))\"\n    local w=\"$(( (z%2==0) ? z : z+1 ))\"\n    local x=\"$(( (z%2==0)\
    \ ? z : z-1 ))\"\n    local y=\"$(( (z%2==0) ? z : z+1 ))\"\n    local z=\"$((\
    \ (z%2==0) ? z : z-1 ))\"\n    local a=\"$\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc77e63wt.sh: line 59: unexpected EOF while looking for matching
    `"''

    /tmp/tmpc77e63wt.sh: line 63: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($y - $x + 1) | 0 ))\"\n   \
    \ local a=\"$(( ($z - $z % 2) | 0 ))\"\n    local b=\"$(( ($z - $z % 4) | 0 ))\"\
    \n    local c=\"$(( ($z - $z % 8) | 0 ))\"\n    local d=\"$(( ($z - $z % 16) |\
    \ 0 ))\"\n    local e=\"$(( ($z - $z % 32) | 0 ))\"\n    local f=\"$(( ($z - $z\
    \ % 64) | 0 ))\"\n    local g=\"$(( ($z - $z % 128) | 0 ))\"\n    local h=\"$((\
    \ ($z - $z % 256) | 0 ))\"\n    local i=\"$(( ($z - $z % 512) | 0 ))\"\n    local\
    \ j=\"$(( ($z - $z % 1024) | 0 ))\"\n    local k=\"$(( ($z - $z % 2048) | 0 ))\"\
    \n    local l=\"$(( ($z - $z % 4096) | 0 ))\"\n    local m=\"$(( ($z - $z % 8192)\
    \ | 0 ))\"\n    local n=\"$(( ($z - $z % 16384) | 0 ))\"\n    local o=\"$(( ($z\
    \ - $z % 32768) | 0 ))\"\n    local p=\"$(( ($z - $z % 65536) | 0 ))\"\n    local\
    \ q=\"$(( ($z - $z % 131072) | 0 ))\"\n    local r=\"$(( ($z - $z % 262144) |\
    \ 0 ))\"\n    local s=\"$(( ($z - $z % 524288) | 0 ))\"\n    local t=\"$(( ($z\
    \ - $z % 1048576) | 0 ))\"\n    local u=\"$(( ($z - $z % 2097152) | 0 ))\"\n \
    \   local v=\"$(( ($z - $z % 4194304) | 0 ))\"\n    local w=\"$(( ($z - $z % 8388608)\
    \ | 0 ))\"\n    local x=\"$(( ($z - $z % 16777216) | 0 ))\"\n    local y=\"$((\
    \ ($z - $z % 33554432) | 0 ))\"\n    local z=\"$(( ($z - $z\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpllv9rmqu.sh: line 42: unexpected EOF while looking for matching
    `)''

    /tmp/tmpllv9rmqu.sh: line 62: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    if [ $num\
    \ -gt $x ]; then\n        num=$(expr $x - $y)\n    fi\n    if [ $num -gt $y ];\
    \ then\n        num=$(expr $y - $x)\n    fi\n    if [ $num -eq 0 ]; then\n   \
    \     num=-1\n    fi\n    echo \"$num\"\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054001
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local even\n    even=0\n    while [ $x -le $y ];\
    \ do\n        if [ $x -eq $even ]; then\n            x=$(( $x + 1 ))\n       \
    \     continue\n        fi\n        even=$(( $even + 1 ))\n        echo $even\n\
    \        x=$(( $x + 1 ))\n    done\n    echo $even\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local even\n    local odd\n    local max\n    local\
    \ min\n    local num\n    \n    even=$(( $x % 2 ))\n    odd=$(( $x % 2 ))\n  \
    \  \n    if [ $even -eq 0 ]; then\n        max=$(expr $x + 1)\n    else\n    \
    \    max=$(expr $x - 1)\n    fi\n    \n    if [ $odd -eq 0 ]; then\n        min=$(expr\
    \ $y - 1)\n    else\n        min=$(expr $y - 1)\n    fi\n    \n    num=$(expr\
    \ $min + $max)\n    \n    if [ $num -eq 0 ]; then\n        num=-1\n    fi\n  \
    \  \n    return $num\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y z\n    local -a arr\n    local -i i\n    local -a arr2\n    local -i j\n\
    \    local -a arr3\n    local -i k\n    local -a arr4\n    local -i l\n    local\
    \ -a arr5\n    local -i m\n    local -a arr6\n    local -i n\n    local -a arr7\n\
    \    local -i o\n    local -a arr8\n    local -i p\n    local -a arr9\n    local\
    \ -i q\n    local -a arr10\n    local -i r\n    local -a arr11\n    local -i s\n\
    \    local -a arr12\n    local -i t\n    local -a arr13\n    local -i u\n    local\
    \ -a arr14\n    local -i v\n    local -a arr15\n    local -i w\n    local -a arr16\n\
    \    local -i x\n    local -a arr17\n    local -i y\n    local -a arr18\n    local\
    \ -i z\n    local -a arr19\n    local -i a\n    local -a arr20\n    local -i b\n\
    \    local -a arr21\n    local -i c\n    local -a arr22\n    local -i d\n    local\
    \ -a arr23\n    local -i e\n    local -a arr24\n    local -i f\n    local -a arr25\n\
    \    local -i g\n    local -a arr26\n    local -i h\n    local -a arr27\n    local\
    \ -i i\n    local -a arr28\n    local -i j\n    local -a arr29\n    local -i k\n\
    \    local -a arr30\n    local -i l\n    local -a arr31\n    local -i m\n    local\
    \ -a arr32\n    local -i n\n    local -a arr33\n    local -i o\n    local -a arr34\n\
    \    local -i p\n    local -a arr35\n    local -i q\n    local -a arr36\n    local\
    \ -i r\n    local -a arr37\n    local -i s\n    local -a arr38\n    local -i t\n\
    \    local -a arr39\n    local -i u\n    local -a arr40\n    local -i v\n    local\
    \ -a arr41\n    local -i w\n    local -a arr42\n    local -i x\n    local -\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local num\n    local num2\n    local num3\n    local\
    \ num4\n    local num5\n    local num6\n    local num7\n    local num8\n    local\
    \ num9\n    local num10\n    local num11\n    local num12\n    local num13\n \
    \   local num14\n    local num15\n    local num16\n    local num17\n    local\
    \ num18\n    local num19\n    local num20\n    local num21\n    local num22\n\
    \    local num23\n    local num24\n    local num25\n    local num26\n    local\
    \ num27\n    local num28\n    local num29\n    local num30\n    local num31\n\
    \    local num32\n    local num33\n    local num34\n    local num35\n    local\
    \ num36\n    local num37\n    local num38\n    local num39\n    local num40\n\
    \    local num41\n    local num42\n    local num43\n    local num44\n    local\
    \ num45\n    local num46\n    local num47\n    local num48\n    local num49\n\
    \    local num50\n    local num51\n    local num52\n    local num53\n    local\
    \ num54\n    local num55\n    local num56\n    local num57\n    local num58\n\
    \    local num59\n    local num60\n    local num61\n    local num62\n    local\
    \ num63\n    local num64\n    local num65\n    local num66\n    local num67\n\
    \    local num68\n    local num69\n    local num70\n    local num71\n    local\
    \ num72\n    local num73\n    local num74\n    local num75\n    local num76\n\
    \    local num77\n    local num78\n    local num79\n    local num80\n    local\
    \ num81\n    local num82\n    local num83\n    local num84\n    local num85\n\
    \    local num86\n    local num87\n    local num88\n    local num89\n    local\
    \ num90\n    local num91\n    local num92\n    local num93\n    local num94\n\
    \    local num95\n    local num96\n    \n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max_num=\"$x\"\n  local min_num=\"$y\"\n\
    \  local even=0\n  local odd=0\n  local even_string=\"\"\n  local odd_string=\"\
    \"\n  while [ \"$max_num\" -le \"$min_num\" ]; do\n    local num=\"$max_num\"\n\
    \    local even_string=\"$even_string$num\"\n    ((even+=1))\n    local num=\"\
    $max_num\"\n    local odd_string=\"$odd_string$num\"\n    ((odd+=1))\n    ((max_num+=1))\n\
    \  done\n  if ((even == 0)); then\n    echo \"-1\"\n  else\n    echo \"$even_string\"\
    \n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z * 2 ))\"\n   \
    \ local d=\"$(( z / 2 ))\"\n    local e=\"$(( z % 2 ))\"\n    local f=\"$(( z\
    \ / 2 ))\"\n    local g=\"$(( z * 2 ))\"\n    local h=\"$(( z / 2 ))\"\n    local\
    \ i=\"$(( z % 2 ))\"\n    local j=\"$(( z / 2 ))\"\n    local k=\"$(( z * 2 ))\"\
    \n    local l=\"$(( z / 2 ))\"\n    local m=\"$(( z * 2 ))\"\n    local n=\"$((\
    \ z / 2 ))\"\n    local o=\"$(( z * 2 ))\"\n    local p=\"$(( z / 2 ))\"\n   \
    \ local q=\"$(( z * 2 ))\"\n    local r=\"$(( z / 2 ))\"\n    local s=\"$(( z\
    \ * 2 ))\"\n    local t=\"$(( z / 2 ))\"\n    local u=\"$(( z * 2 ))\"\n    local\
    \ v=\"$(( z / 2 ))\"\n    local w=\"$(( z * 2 ))\"\n    local x=\"$(( z / 2 ))\"\
    \n    local y=\"$(( z * 2 ))\"\n    local z=\"$(( z / 2 ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z * 2 ))\"\n   \
    \ local d=\"$(( z / 2 ))\"\n    local e=\"$(( z % 2 ))\"\n    local f=\"$(( z\
    \ / 2 ))\"\n    local g=\"$(( z * 2 ))\"\n    local h=\"$(( z / 2 ))\"\n    local\
    \ i=\"$(( z % 2 ))\"\n    local j=\"$(( z / 2 ))\"\n    local k=\"$(( z * 2 ))\"\
    \n    local l=\"$(( z / 2 ))\"\n    local m=\"$(( z * 2 ))\"\n    local n=\"$((\
    \ z / 2 ))\"\n    local o=\"$(( z * 2 \n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt3qd2b_l.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpt3qd2b_l.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x y\n  x=$1\n  y=$2\n  local max\n  max=-1\n  while [ $x -le $y ]\n  do\n  \
    \  local tmp=$(( $x ))\n    local even\n    even=0\n    while [ $tmp -gt 0 ]\n\
    \    do\n      (( tmp /= 2 ))\n      (( even += 1 ))\n    done\n    if [ $even\
    \ -eq 0 ]\n    then\n      max=$tmp\n    fi\n    x=$(( $x + 1 ))\n  done\n  echo\
    \ $max\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max_num=\"$x\"\n    local min_num=\"\
    $y\"\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    local \n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054002

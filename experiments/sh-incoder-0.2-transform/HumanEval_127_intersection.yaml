name: HumanEval_127_intersection
language: sh
prompt: "#!/bin/bash\n# You are given two intervals,\n# where each interval is a pair\
  \ of integers. For example, interval = (start, end) = (1, 2).\n# The given intervals\
  \ are closed which means that the interval (start, end)\n# includes both start and\
  \ end.\n# For each given interval, it is assumed that its start is less or equal\
  \ its end.\n# Your task is to determine whether the length of intersection of these\
  \ two \n# intervals is a prime number.\n# Example, the intersection of the intervals\
  \ (1, 3), (2, 4) is (2, 3)\n# which its length is 1, which not a prime number.\n\
  # If the length of the intersection is a prime number, return \"YES\",\n# otherwise,\
  \ return \"NO\".\n# If the two intervals don't intersect, return \"NO\".\n# [input/output]\
  \ samples:\n# >>> $(intersection \"1 2\" \"2 3\")\n# \"NO\"\n# >>> $(intersection\
  \ \"-1 1\" \"0 4\")\n# \"NO\"\n# >>> $(intersection \"-3 -1\" \"-5 5\")\n# \"YES\"\
  \n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nintersection()\
  \ {\n"
tests: "}\n\ncandidate() {\n    intersection \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"1 2\" \"2 3\") = \"NO\" ]]\n    [[ $(candidate \"-1 1\" \"\
  0 4\") = \"NO\" ]]\n    [[ $(candidate \"-3 -1\" \"-5 5\") = \"YES\" ]]\n    [[\
  \ $(candidate \"-2 2\" \"-4 0\") = \"YES\" ]]\n    [[ $(candidate \"-11 2\" \"-1\
  \ -1\") = \"NO\" ]]\n    [[ $(candidate \"1 2\" \"3 5\") = \"NO\" ]]\n    [[ $(candidate\
  \ \"1 2\" \"1 2\") = \"NO\" ]]\n    [[ $(candidate \"-2 -2\" \"-3 -2\") = \"NO\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"${interval_1}\" | wc -w)\n    length_intersection_2=$(echo \"${interval_2}\"\
    \ | wc -w)\n    if [[ ${length_intersection_1} -eq ${length_intersection_2} ]];\
    \ then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local\
    \ interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [[ \"$length_intersection\" == \"NO\" ]]; then\n        echo \"NO\"\n    else\n\
    \        echo \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    local start1=$((${interval1[0]}))\n\
    \    local end1=$((${interval1[1]}))\n    local start2=$((${interval2[0]}))\n\
    \    local end2=$((${interval2[1]}))\n    local flag=0\n    local prime=0\n  \
    \  local prime1=0\n    local prime2=0\n    local prime3=0\n    local prime4=0\n\
    \    local prime5=0\n    local prime6=0\n    local prime7=0\n    local prime8=0\n\
    \    local prime9=0\n    local prime10=0\n    local prime11=0\n    local prime12=0\n\
    \    local prime13=0\n    local prime14=0\n    local prime15=0\n    local prime16=0\n\
    \    local prime17=0\n    local prime18=0\n    local prime19=0\n    local prime20=0\n\
    \    local prime21=0\n    local prime22=0\n    local prime23=0\n    local prime24=0\n\
    \    local prime25=0\n    local prime26=0\n    local prime27=0\n    local prime28=0\n\
    \    local prime29=0\n    local prime30=0\n    local prime31=0\n    local prime32=0\n\
    \    local prime33=0\n    local prime34=0\n    local prime35=0\n    local prime36=0\n\
    \    local prime37=0\n    local prime38=0\n    local prime39=0\n    local prime40=0\n\
    \    local prime41=0\n    local prime42=0\n    local prime43=0\n    local prime44=0\n\
    \    local prime45=0\n    local prime46=0\n    local prime47=0\n    local prime48=0\n\
    \    local prime49=0\n    local prime50=0\n    local prime51=0\n    local prime52=0\n\
    \    local prime53=0\n    local prime54=0\n    local prime55=0\n    local prime56=0\n\
    \    local prime57=0\n    local prime58=0\n    local prime59=0\n    local prime60=0\n\
    \    local prime61=0\n    local prime62=0\n    local prime63=0\n    local prime64=0\n\
    \    local prime65=0\n    local prime66=0\n", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection prime_number\n\
    \    length_interval=$(echo \"$interval_1 $interval_2\" | awk '{print $1 - $2}')\n\
    \    prime_number=$((length_interval % 2))\n    if [ \"$prime_number\" -eq \"\
    1\" ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local length\n    local prime\n    local result\n\n    length1=$(echo $interval1\
    \ | awk '{print $1}')\n    length2=$(echo $interval2 | awk '{print $1}')\n   \
    \ length=$(expr $length1 + $length2)\n    prime=\"YES\"\n    result=\"NO\"\n \
    \   if [ $length -eq 1 ]\n    then\n        prime=\"NO\"\n        result=\"NO\"\
    \n    elif [ $length -eq 2 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 3 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 4 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 5 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 6 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 7 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 8 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 9 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 10 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 11 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 12 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 13 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 14 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 15 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 16 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 17 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 18 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 19 ]\n    then", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n   \
    \ local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=", "   \
    \ local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(expr\
    \ ${interval_1}[1] - ${interval_1}[0] + 1)\n    length_intersection_2=$(expr ${interval_2}[1]\
    \ - ${interval_2}[0] + 1)\n    if [[ ${length_intersection_1} -eq ${length_intersection_2}\
    \ ]]; then\n        if [[ ${interval_1}[0] -lt ${interval_2}[0] ]]; then\n   \
    \         echo \"NO\"\n        else\n            echo \"YES\"\n        fi\n  \
    \  else\n        echo \"NO\"\n    fi", "    local a b\n    local len\n    local\
    \ i\n    local j\n    local prime\n    local primes\n    local result\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local tmp", "    local a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\n    a=$1\n    b=$2\n    local len\n    len=0\n    for (( i=0; i<${#a}; i++\
    \ )); do\n        c=${a[i]}\n        d=${b[i]}\n        if (( c <= d )); then\n\
    \            len=$(( len + 1 ))\n        fi\n    done\n    for (( i=0; i<${#a};\
    \ i++ )); do\n        c=${a[i]}\n        d=${b[i]}\n        if (( c <= d )); then\n\
    \            len=$(( len + 1 ))\n        fi\n    done\n    if [ $len -eq 0 ];\
    \ then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local\
    \ interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]} -\
    \ ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=\n    local prime_flag=\n\
    \    local prime_flag2=\n    local prime_flag3=\n    local prime_flag4=\n    local\
    \ prime_flag5=\n    local prime_flag6=\n    local prime_flag7=\n    local prime_flag8=\n\
    \    local prime_flag9=\n    local prime_flag10=\n    local prime_flag11=\n  \
    \  local prime_flag12=\n    local prime_flag13=\n    local prime_flag14=\n   \
    \ local prime_flag15=\n    local prime_flag16=\n    local prime_flag17=\n    local\
    \ prime_flag18=\n    local prime_flag19=\n    local prime_flag20=\n    local prime_flag21=\n\
    \    local prime_flag22=\n    local prime_flag23=\n    local prime_flag24=\n \
    \   local prime_flag25=\n    local prime_flag26=\n    local prime_flag27=\n  \
    \  local prime_flag28=\n    local prime_flag29=\n    local prime_flag30=\n   \
    \ local prime_flag31=\n    local prime_flag32=\n    local prime_flag33=\n    local\
    \ prime_flag34=\n    local prime_flag35=\n    local prime_flag36=\n    local prime_flag37=\n\
    \    local prime_flag38=\n    local prime_flag39=\n    local prime_flag40=\n \
    \   local prime_flag41=\n    local prime_flag42=\n    local prime_flag43=\n  \
    \  local prime_flag44=\n    local prime_flag45=\n    local prime_flag46=\n   \
    \ local prime_flag47=\n    local prime_flag48=\n    local prime_flag49=\n    local\
    \ prime_flag50=\n    local prime_flag51=\n    local prime_flag52=\n    local prime_flag53=\n\
    \    local prime_flag54=\n    local prime_flag55=\n    local prime_flag56=\n \
    \   local prime_", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n \
    \   local length_intersection=$((length1<length2?length1:length2))\n    local\
    \ prime_number=\"YES\"\n    local prime_number_flag=\"NO\"\n    local prime_number_flag2=\"\
    NO\"\n    local prime_number_flag3=\"NO\"\n    local prime_number_flag4=\"NO\"\
    \n    local prime_number_flag5=\"NO\"\n    local prime_number_flag6=\"NO\"\n \
    \   local prime_number_flag7=\"NO\"\n    local prime_number_flag8=\"NO\"\n   \
    \ local prime_number_flag9=\"NO\"\n    local prime_number_flag10=\"NO\"\n    local\
    \ prime_number_flag11=\"NO\"\n    local prime_number_flag12=\"NO\"\n    local\
    \ prime_number_flag13=\"NO\"\n    local prime_number_flag14=\"NO\"\n    local\
    \ prime_number_flag15=\"NO\"\n    local prime_number_flag16=\"NO\"\n    local\
    \ prime_number_flag17=\"NO\"\n    local prime_number_flag18=\"NO\"\n    local\
    \ prime_number_flag19=\"NO\"\n    local prime_number_flag20=\"NO\"\n    local\
    \ prime_number_flag21=\"NO\"\n    local prime_number_flag22=\"NO\"\n    local\
    \ prime_number_flag23=\"NO\"\n    local prime_number_flag24=\"NO\"\n    local\
    \ prime_number_flag25=\"NO\"\n    local prime_number_flag26=\"NO\"\n    local\
    \ prime_number_flag27=\"NO\"\n    local prime_number_flag28=\"NO\"\n    local\
    \ prime_number_flag29=\"NO\"\n    local prime_number_flag30=\"NO\"\n    local\
    \ prime_number_flag31=\"NO\"\n    local prime_number_flag32=\"NO\"\n    local\
    \ prime_number_flag33=\"NO\"\n    local prime_number_flag34=\"NO\"\n    local\
    \ prime_number_flag35=\"NO\"\n    local prime_number_flag36=\"NO\"\n    local\
    \ prime_number_flag37=\"NO\"\n    local prime_number_flag38=\"NO\"\n    local\
    \ prime_number_flag39=\"NO\"\n    local prime_number_flag40=\"NO\"\n    local\
    \ prime_", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((${length1}+${length2}))\n\
    \    local prime=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    ", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2[@]}\")\n    if [[ $length_intersection -eq 0\
    \ ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "  \
    \  local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((${length1}+${length2}))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local result\n    local prime\n    local primes\n    local\
    \ prime_found\n    local prime_found2\n    local prime_found3\n    local prime_found4\n\
    \    local prime_found5\n    local prime_found6\n    local prime_found7\n    local\
    \ prime_found8\n    local prime_found9\n    local prime_found10\n    local prime_found11\n\
    \    local prime_found12\n    local prime_found13\n    local prime_found14\n \
    \   local prime_found15\n    local prime_found16\n    local prime_found17\n  \
    \  local prime_found18\n    local prime_found19\n    local prime_found20\n   \
    \ local prime_found21\n    local prime_found22\n    local prime_found23\n    local\
    \ prime_found24\n    local prime_found25\n    local prime_found26\n    local prime_found27\n\
    \    local prime_found28\n    local prime_found29\n    local prime_found30\n \
    \   local prime_found31\n    local prime_found32\n    local prime_found33\n  \
    \  local prime_found34\n    local prime_found35\n    local prime_found36\n   \
    \ local prime_found37\n    local prime_found38\n    local prime_found39\n    local\
    \ prime_found40\n    local prime_found41\n    local prime_found42\n    local prime_found43\n\
    \    local prime_found44\n    local prime_found45\n    local prime_found46\n \
    \   local prime_found47\n    local prime_found48\n    local prime_found49\n  \
    \  local prime_found50\n    local prime_found51\n    local prime_found52\n   \
    \ local prime_found53\n    local prime_found54\n    local prime_found55\n    local\
    \ prime_found56\n    local prime_found57\n    local prime_found58\n    local prime_found59\n\
    \    local prime_found60\n    local prime_found61\n    local prime_found62\n \
    \   local prime_found63\n    local prime_found64\n    local prime_found65\n  \
    \  local prime_found66\n    local prime_found67\n    local prime_found68\n", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local result\n    local i\n    local j\n    local prime\n    local primes\n\
    \    local primesCount\n    local primesCount2\n    local primesCount3\n    local\
    \ primesCount4\n    local primesCount5\n    local primesCount6\n    local primesCount7\n\
    \    local primesCount8\n    local primesCount9\n    local primesCount10\n   \
    \ local primesCount11\n    local primesCount12\n    local primesCount13\n    local\
    \ primesCount14\n    local primesCount15\n    local primesCount16\n    local primesCount17\n\
    \    local primesCount18\n    local primesCount19\n    local primesCount20\n \
    \   local primesCount21\n    local primesCount22\n    local primesCount23\n  \
    \  local primesCount24\n    local primesCount25\n    local primesCount26\n   \
    \ local primesCount27\n    local primesCount28\n    local primesCount29\n    local\
    \ primesCount30\n    local primesCount31\n    local primesCount32\n    local primesCount33\n\
    \    local primesCount34\n    local primesCount35\n    local primesCount36\n \
    \   local primesCount37\n    local primesCount38\n    local primesCount39\n  \
    \  local primesCount40\n    local primesCount41\n    local primesCount42\n   \
    \ local primesCount43\n    local primesCount44\n    local primesCount45\n    local\
    \ primesCount46\n    local primesCount47\n    local primesCount48\n    local primesCount49\n\
    \    local primesCount50\n    local primesCount51\n    local primesCount52\n \
    \   local primesCount53\n    local primesCount54\n    local primesCount55\n  \
    \  local primesCount56\n    local primesCount57\n    local primesCount58\n   \
    \ local primesCount59\n    local primesCount60\n    local primesCount61\n    local\
    \ primesCount62\n    local primesCount63\n    local primesCount64\n    local primesCount65\n\
    \    local primesCount66\n    local primesCount67", "    local a b c d e f g h\
    \ i j k l m n o p q r s t u v w x y z\n    local interval_length\n    local prime_number\n\
    \    local prime_number_length\n    local prime_number_string\n    local prime_number_string_length\n\
    \    local prime_number_string_length_string\n    local prime_number_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string\n    local prime_number_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n\
    \    local length2=$((${interval2[1]}+1))\n    local length=$((length1<length2?length1:length2))\n\
    \    local start1=$((${interval1[0]}-1))\n    local end1=$((${interval1[1]}-1))\n\
    \    local start2=$((${interval2[0]}-1))\n    local end2=$((${interval2[1]}-1))\n\
    \    local start=$((start1<start2?start1:start2))\n    local end=$((end1<end2?end1:end2))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [[ \"$length_intersection\" == \"\
    \" ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(echo \"$interval_1\" \"$interval_2\"\
    \ | sort -n | uniq -c | sort -nr | head -1)\n    if [ \"$length_intersection\"\
    \ -eq 1 ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2}\")\n    if [ \"$length_intersection\" -eq 0 ]; then\n        echo\
    \ \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n \
    \   local interval2=$2\n    local length1\n    local length2\n    local length\n\
    \    local prime\n    local prime_str\n    local prime_str_len\n    local prime_str_len2\n\
    \    local prime_str_len3\n    local prime_str_len4\n    local prime_str_len5\n\
    \    local prime_str_len6\n    local prime_str_len7\n    local prime_str_len8\n\
    \    local prime_str_len9\n    local prime_str_len10\n    local prime_str_len11\n\
    \    local prime_str_len12\n    local prime_str_len13\n    local prime_str_len14\n\
    \    local prime_str_len15\n    local prime_str_len16\n    local prime_str_len17\n\
    \    local prime_str_len18\n    local prime_str_len19\n    local prime_str_len20\n\
    \    local prime_str_len21\n    local prime_str_len22\n    local prime_str_len23\n\
    \    local prime_str_len24\n    local prime_str_len25\n    local prime_str_len26\n\
    \    local prime_str_len27\n    local prime_str_len28\n    local prime_str_len29\n\
    \    local prime_str_len30\n    local prime_str_len31\n    local prime_str_len32\n\
    \    local prime_str_len33\n    local prime_str_len34\n    local prime_str_len35\n\
    \    local prime_str_len36\n    local prime_str_len37\n    local prime_str_len38\n\
    \    local prime_str_len39\n    local prime_str_len40\n    local prime_str_len41\n\
    \    local prime_str_len42\n    local prime_str_len43\n    local prime_str_len44\n\
    \    local prime_str_len45\n    local prime_str_len46\n    local prime_str_len47\n\
    \    local prime_str_len48\n    local prime_str_len49\n    local prime_str_len50\n\
    \    local prime_str_len51\n    local prime_str_len52\n    local prime_str_len53\n\
    \    local prime_str_len54\n    local prime_str_len55\n    local prime_str_len56\n\
    \    local prime_str_len57\n    local prime_str_len58\n    local prime_str_len59\n\
    \    local prime", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    if [ $length\
    \ -eq 0 ]\n    then\n        echo \"NO\"\n    else\n        local i\n        for\
    \ (( i=1; i<=$length; i++ ))\n        do\n            if [ $((${interval1[0]}\
    \ + $i)) -le $((${interval2[0]} - $i)) ]\n            then\n                if\
    \ [ $((${interval1[1]} + $i)) -le $((${interval2[1]} - $i)) ]\n              \
    \  then\n                    local j\n                    for (( j=1; j<=$i; j++\
    \ ))\n                    do\n                        if [ $((${interval1[0]}\
    \ + $j)) -le $((${interval2[1]} - $j)) ]\n                        then\n     \
    \                       echo \"YES\"\n                            break\n    \
    \                    fi\n                    done\n                fi\n      \
    \      fi\n        done\n    fi", "    local interval_1 interval_2\n    interval_1=$(echo\
    \ $1 | cut -d \" \" -f 1)\n    interval_2=$(echo $2 | cut -d \" \" -f 1)\n   \
    \ local length_intersection\n    length_intersection=$(echo \"$interval_1 $interval_2\"\
    \ | sort -n | uniq -c | sort -n | tail -1)\n    if [ \"$length_intersection\"\
    \ -eq \"1\" ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n   \
    \ fi", "    local interval1=$1\n    local interval2=$2\n    local length1\n  \
    \  local length2\n    local prime\n    local prime1\n    local prime2\n    local\
    \ result\n    local i\n    local j\n    local prime_check\n    local prime_check1\n\
    \    local prime_check2\n    local prime_check3\n    local prime_check4\n    local\
    \ prime_check5\n    local prime_check6\n    local prime_check7\n    local prime_check8\n\
    \    local prime_check9\n    local prime_check10\n    local prime_check11\n  \
    \  local prime_check12\n    local prime_check13\n    local prime_check14\n   \
    \ local prime_check15\n    local prime_check16\n    local prime_check17\n    local\
    \ prime_check18\n    local prime_check19\n    local prime_check20\n    local prime_check21\n\
    \    local prime_check22\n    local prime_check23\n    local prime_check24\n \
    \   local prime_check25\n    local prime_check26\n    local prime_check27\n  \
    \  local prime_check28\n    local prime_check29\n    local prime_check30\n   \
    \ local prime_check31\n    local prime_check32\n    local prime_check33\n    local\
    \ prime_check34\n    local prime_check35\n    local prime_check36\n    local prime_check37\n\
    \    local prime_check38\n    local prime_check39\n    local prime_check40\n \
    \   local prime_check41\n    local prime_check42\n    local prime_check43\n  \
    \  local prime_check44\n    local prime_check45\n    local prime_check46\n   \
    \ local prime_check47\n    local prime_check48\n    local prime_check49\n    local\
    \ prime_check50\n    local prime_check51\n    local prime_check52\n    local prime_check53\n\
    \    local prime_check54\n    local prime_check55\n    local prime_check56\n \
    \   local prime_check57\n    local prime_check58\n    local prime_check59\n  \
    \  local prime_check60\n    local prime_check61\n    local prime_check62\n   \
    \ local prime_check63\n    local prime_check64\n    local prime_check65\n    ",
  "    local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local length\n    local prime\n    local result\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2[@]}\")\n    if [[ $length_intersection -eq 0\
    \ ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "  \
    \  local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length_intersection=$((${length1}+${length2}))\n\
    \    local length_prime=$((${length_intersection}-1))\n    if [[ ${length_prime}\
    \ -eq 0 ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2[@]}\")\n    if [ \"$length_intersection\" -eq 0 ]; then\n       \
    \ echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((${length1}\
    \ + ${length2}))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo \"$interval_2\" |\
    \ wc -w)\n    if [ \"$length_intersection_1\" -eq \"$length_intersection_2\" ];\
    \ then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local\
    \ a b\n    local len\n    local i\n    local j\n    local prime\n    local result\n\
    \n    a=$1\n    b=$2\n\n    len=$((${#a} + ${#b}))\n    prime=\"YES\"\n    for\
    \ (( i=0; i<${#a}; i++ )); do\n        for (( j=0; j<${#b}; j++ )); do\n     \
    \       if [[ ${a[$i]} -gt ${b[$j]} ]]; then\n                a=$a${a[$i]}\n \
    \           else\n                b=$b${b[$j]}\n            fi\n        done\n\
    \    done\n    for (( i=0; i<${#a}; i++ )); do\n        if [[ ${a[$i]} -gt ${len}\
    \ ]]; then\n            prime=\"NO\"\n            break\n        fi\n    done\n\
    \    for (( i=0; i<${#b}; i++ )); do\n        if [[ ${b[$i]} -gt ${len} ]]; then\n\
    \            prime=\"NO\"\n            break\n        fi\n    done\n    echo \"\
    $prime\"", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local result\n    local i\n    local j\n    local prime\n\
    \    local primes\n    local primesCount\n    local primesCount2\n    local primesCount3\n\
    \    local primesCount4\n    local primesCount5\n    local primesCount6\n    local\
    \ primesCount7\n    local primesCount8\n    local primesCount9\n    local primesCount10\n\
    \    local primesCount11\n    local primesCount12\n    local primesCount13\n \
    \   local primesCount14\n    local primesCount15\n    local primesCount16\n  \
    \  local primesCount17\n    local primesCount18\n    local primesCount19\n   \
    \ local primesCount20\n    local primesCount21\n    local primesCount22\n    local\
    \ primesCount23\n    local primesCount24\n    local primesCount25\n    local primesCount26\n\
    \    local primesCount27\n    local primesCount28\n    local primesCount29\n \
    \   local primesCount30\n    local primesCount31\n    local primesCount32\n  \
    \  local primesCount33\n    local primesCount34\n    local primesCount35\n   \
    \ local primesCount36\n    local primesCount37\n    local primesCount38\n    local\
    \ primesCount39\n    local primesCount40\n    local primesCount41\n    local primesCount42\n\
    \    local primesCount43\n    local primesCount44\n    local primesCount45\n \
    \   local primesCount46\n    local primesCount47\n    local primesCount48\n  \
    \  local primesCount49\n    local primesCount50\n    local primesCount51\n   \
    \ local primesCount52\n    local primesCount53\n    local primesCount54\n    local\
    \ primesCount55\n    local primesCount56\n    local primesCount57\n    local primesCount58\n\
    \    local primesCount59\n    local primesCount60\n    local primesCount61\n \
    \   local primesCount62\n    local primesCount63\n    local primesCount64\n  \
    \  local primesCount65\n    local primesCount66\n    local primesCount67", " \
    \   local interval_1 interval_2\n    interval_1=( $1 )\n    interval_2=( $2 )\n\
    \    local length_intersection\n    length_intersection=`expr $(( ${#interval_1[@]}\
    \ - ${#interval_2[@]} ))`\n    if [ $length_intersection -eq 0 ]\n    then\n \
    \       echo \"NO\"\n    else\n        local i\n        local j\n        local\
    \ prime\n        prime=\"YES\"\n        for i in \"${interval_1[@]}\"\n      \
    \  do\n            for j in \"${interval_2[@]}\"\n            do\n           \
    \     if [ $i -le $j ]\n                then\n                    local prime_test\n\
    \                    prime_test=\"YES\"\n                    prime=\"NO\"\n  \
    \                  break\n                else\n                    prime=\"YES\"\
    \n                fi\n            done\n            if [ $prime == \"YES\" ]\n\
    \            then\n                break\n            fi\n        done\n     \
    \   echo \"$prime\"\n    fi", "    local interval_1 interval_2\n    interval_1=$(echo\
    \ $1 | tr ' ' '\\n' | sort -n)\n    interval_2=$(echo $2 | tr ' ' '\\n' | sort\
    \ -n)\n    local length_intersection\n    length_intersection=$(echo \"$interval_1\"\
    \ \"$interval_2\" | sort -n | uniq -c | sort -n | tail -n 1)\n    if [ \"$length_intersection\"\
    \ -eq \"1\" ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n   \
    \ fi", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local i\n    for (( i=0; i<${length};\
    \ i++ )); do\n        if [[ ${interval1[0]} -le ${interval2[0]} && ${interval1[1]}\
    \ -le ${interval2[1]} ]]; then\n            if [[ ${interval1[0]} -le ${interval2[i]}\
    \ ]]; then\n                interval1[0]=$((${interval1[0]} + 1))\n          \
    \  else\n                interval2[i]=$((${interval2[i]} + 1))\n            fi\n\
    \        fi\n    done\n    if [[ ${interval1[0]} -le ${interval2[0]} && ${interval1[1]}\
    \ -le ${interval2[1]} ]]; then\n        if [[ ${interval1[0]} -le ${interval2[i]}\
    \ ]]; then\n            interval1[0]=$((${interval1[0]} + 1))\n        else\n\
    \            interval2[i]=$((${interval2[i]} + 1))\n        fi\n    fi\n    if\
    \ [[ ${interval1[0]} -le ${interval2[0]} && ${interval1[1]} -le ${interval2[1]}\
    \ ]]; then\n        if [[ ${interval1[0]} -le ${interval2[i]} ]]; then\n     \
    \       interval1[0]=$((${interval1[0]} + 1))\n        else\n            interval2[i]=$((${interval2[i]}\
    \ + 1))\n        fi\n    fi\n    if [[ ${interval1[0]} -le ${interval2[0]} &&\
    \ ${interval1[1]} -le ${interval2[1]} ]]; then\n        if [[ ${interval1[0]}\
    \ -le ${interval2[i]} ]]; then\n            interval1[0]=$((${interval1[0]} +\
    \ 1))\n        else\n            interval2[i]=$((${interval2[i]} + 1))\n     \
    \   fi\n    fi\n    if [[ ${interval1[0]} -le ${interval2[0]} && ${interval1[1]}\
    \ -le ${interval2[1]} ]]; then\n        if [[ ${interval1[0]} -le ${interval2[i]}\
    \ ]]; then\n            interval1[0]=$((${interval1[0]} + 1))\n        else\n\
    \            interval2[i]=$((${interval2[i]} + 1))\n        fi\n    fi\n    if\
    \ [[ ${interval1[0]} -le ${interval2[0]} && ${interval1[1]} -", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((${length1}+${length2}))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56=0\n    local ", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length_intersection=$((${length1}+${length2}))\n    local length_prime=1\n\
    \    local prime_flag=false\n    local prime_flag2=false\n    local prime_flag3=false\n\
    \    local prime_flag4=false\n    local prime_flag5=false\n    local prime_flag6=false\n\
    \    local prime_flag7=false\n    local prime_flag8=false\n    local prime_flag9=false\n\
    \    local prime_flag10=false\n    local prime_flag11=false\n    local prime_flag12=false\n\
    \    local prime_flag13=false\n    local prime_flag14=false\n    local prime_flag15=false\n\
    \    local prime_flag16=false\n    local prime_flag17=false\n    local prime_flag18=false\n\
    \    local prime_flag19=false\n    local prime_flag20=false\n    local prime_flag21=false\n\
    \    local prime_flag22=false\n    local prime_flag23=false\n    local prime_flag24=false\n\
    \    local prime_flag25=false\n    local prime_flag26=false\n    local prime_flag27=false\n\
    \    local prime_flag28=false\n    local prime_flag29=false\n    local prime_flag30=false\n\
    \    local prime_flag31=false\n    local prime_flag32=false\n    local prime_flag33=false\n\
    \    local prime_flag34=false\n    local prime_flag35=false\n    local prime_flag36=false\n\
    \    local prime_flag37=false\n    local prime_flag38=false\n    local prime_flag39=false\n\
    \    local prime_flag40=false\n    local prime_flag41=false\n    local prime_flag42=false\n\
    \    local prime_flag43=false\n    local prime_flag44=false\n    local prime_flag45=false\n\
    \    local prime_flag46=false\n    local prime_flag47=false\n    local prime_flag48=false\n\
    \    local prime_flag49=false\n    local prime_flag50=false\n    ", "    local\
    \ interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [[ $length_intersection == *\"YES\"* ]]; then\n        echo \"YES\"\n    else\n\
    \        echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length_intersection=$((length1 + length2))\n\
    \    local prime_number=0\n    local prime_number_flag=0\n    local prime_number_flag2=0\n\
    \    local prime_number_flag3=0\n    local prime_number_flag4=0\n    local prime_number_flag5=0\n\
    \    local prime_number_flag6=0\n    local prime_number_flag7=0\n    local prime_number_flag8=0\n\
    \    local prime_number_flag9=0\n    local prime_number_flag10=0\n    local prime_number_flag11=0\n\
    \    local prime_number_flag12=0\n    local prime_number_flag13=0\n    local prime_number_flag14=0\n\
    \    local prime_number_flag15=0\n    local prime_number_flag16=0\n    local prime_number_flag17=0\n\
    \    local prime_number_flag18=0\n    local prime_number_flag19=0\n    local prime_number_flag20=0\n\
    \    local prime_number_flag21=0\n    local prime_number_flag22=0\n    local prime_number_flag23=0\n\
    \    local prime_number_flag24=0\n    local prime_number_flag25=0\n    local prime_number_flag26=0\n\
    \    local prime_number_flag27=0\n    local prime_number_flag28=0\n    local prime_number_flag29=0\n\
    \    local prime_number_flag30=0\n    local prime_number_flag31=0\n    local prime_number_flag32=0\n\
    \    local prime_number_flag33=0\n    local prime_number_flag34=0\n    local prime_number_flag35=0\n\
    \    local prime_number_flag36=0\n    local prime_number_flag37=0\n    local prime_number_flag38=0\n\
    \    local prime_number_flag39=0\n    local prime_number_flag40=0\n    local prime_number_flag41=0\n\
    \    local prime_number_flag42=0\n    local prime_number_flag43=0\n    local prime_number_flag44=0\n\
    \    local prime_number_flag45=0\n    local prime_number_flag46=0\n    local prime_number_flag47=0\n\
    \    local prime_number_flag48=0\n    local prime_number_flag49=0\n    local prime_number_",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime\n    local prime_flag=0\n    local prime_flag2=0\n    local prime_flag3=0\n\
    \    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n \
    \   local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n  \
    \  local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56=0\n    local prime", "    local\
    \ interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection_1\
    \ length_intersection_2 length_1 length_2\n    length_intersection_1=$(echo \"\
    ${interval_1}\" | wc -w)\n    length_intersection_2=$(echo \"${interval_2}\" |\
    \ wc -w)\n    length_1=$(echo \"${interval_1}\" | wc -w)\n    length_2=$(echo\
    \ \"${interval_2}\" | wc -w)\n    if [[ ${length_intersection_1} -eq ${length_intersection_2}\
    \ ]]; then\n        if [[ ${length_intersection_1} -eq ${length_1} ]]; then\n\
    \            if [[ ${length_intersection_2} -eq ${length_2} ]]; then\n       \
    \         if [[ ${interval_1} -le ${interval_2} ]]; then\n                   \
    \ if [[ ${interval_1} -le ${interval_2} ]]; then\n                        echo\
    \ \"YES\"\n                    else\n                        echo \"NO\"\n   \
    \                 fi\n                else\n                    echo \"NO\"\n\
    \                fi\n            else\n                echo \"NO\"\n         \
    \   fi\n        else\n            echo \"NO\"\n        fi\n    else\n        echo\
    \ \"NO\"\n    fi", "    local interval_1 interval_2\n    interval_1=( $1 )\n \
    \   interval_2=( $2 )\n    local length_intersection\n    length_intersection=(\
    \ $( echo \"${interval_1[0]} ${interval_1[1]}\" | bc -l ) )\n    local length_intersection_1\n\
    \    length_intersection_1=( $( echo \"${interval_2[0]} ${interval_2[1]}\" | bc\
    \ -l ) )\n    local length_intersection_2\n    length_intersection_2=( $( echo\
    \ \"${interval_2[0]} ${interval_2[1]}\" | bc -l ) )\n    if [ $length_intersection\
    \ -eq $length_intersection_1 ]; then\n        if [ $length_intersection -eq $length_intersection_2\
    \ ]; then\n            if [ $length_intersection -eq $length_intersection_1 ];\
    \ then\n                if [ $length_intersection -eq $length_intersection_2 ];\
    \ then\n                    if [ $length_intersection -eq $length_intersection_1\
    \ ]; then\n                        if [ $length_intersection -eq $length_intersection_2\
    \ ]; then\n                            if [ $length_intersection -eq $length_intersection_1\
    \ ]; then\n                                echo \"YES\"\n                    \
    \        else\n                                echo \"NO\"\n                 \
    \           fi\n                        else\n                            echo\
    \ \"NO\"\n                        fi\n                    else\n             \
    \           echo \"NO\"\n                    fi\n                else\n      \
    \              echo \"NO\"\n                fi\n            else\n           \
    \     echo \"NO\"\n            fi\n        else\n            echo \"NO\"\n   \
    \     fi\n    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n  \
    \  local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local result\n    local i\n    local j\n    local k\n    local\
    \ prime\n    local primes\n    local prime_found\n    local prime_found2\n   \
    \ local prime_found3\n    local prime_found4\n    local prime_found5\n    local\
    \ prime_found6\n    local prime_found7\n    local prime_found8\n    local prime_found9\n\
    \    local prime_found10\n    local prime_found11\n    local prime_found12\n \
    \   local prime_found13\n    local prime_found14\n    local prime_found15\n  \
    \  local prime_found16\n    local prime_found17\n    local prime_found18\n   \
    \ local prime_found19\n    local prime_found20\n    local prime_found21\n    local\
    \ prime_found22\n    local prime_found23\n    local prime_found24\n    local prime_found25\n\
    \    local prime_found26\n    local prime_found27\n    local prime_found28\n \
    \   local prime_found29\n    local prime_found30\n    local prime_found31\n  \
    \  local prime_found32\n    local prime_found33\n    local prime_found34\n   \
    \ local prime_found35\n    local prime_found36\n    local prime_found37\n    local\
    \ prime_found38\n    local prime_found39\n    local prime_found40\n    local prime_found41\n\
    \    local prime_found42\n    local prime_found43\n    local prime_found44\n \
    \   local prime_found45\n    local prime_found46\n    local prime_found47\n  \
    \  local prime_found48\n    local prime_found49\n    local prime_found50\n   \
    \ local prime_found51\n    local prime_found52\n    local prime_found53\n    local\
    \ prime_found54\n    local prime_found55\n    local prime_found56\n    local prime_found57\n\
    \    local prime_found58\n    local prime_found59\n    local prime_found60\n \
    \   local prime_found61\n    local prime", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n   \
    \ local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local result\n    if [ $length -eq 0 ]\n    then\n        result=\"\
    NO\"\n    else\n        result=\"YES\"\n        for (( i=1; i<=$length; i++ ))\n\
    \        do\n            if [ $((${interval1[0]} + $i)) -le $((${interval2[0]}\
    \ + $i)) ]\n            then\n                if [ $((${interval1[1]} + $i)) -le\
    \ $((${interval2[1]} + $i)) ]\n                then\n                    result=\"\
    NO\"\n                    break\n                else\n                    result=\"\
    YES\"\n                    break\n                fi\n            else\n     \
    \           result=\"NO\"\n                break\n            fi\n        done\n\
    \    fi\n    echo \"$result\"", "    local interval_1 interval_2 length_1 length_2\n\
    \    interval_1=$1\n    interval_2=$2\n    length_1=$(echo $interval_1 | awk '{print\
    \ $1}')\n    length_2=$(echo $interval_2 | awk '{print $1}')\n    if [[ $length_1\
    \ -le $length_2 ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n\
    \    fi", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((${length1} + ${length2}))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56", "    local interval1=$1\n    local interval2=$2\n  \
    \  local length1=$((${interval1[1]}-${interval1[0]}))\n    local length2=$((${interval2[1]}-${interval2[0]}))\n\
    \    local length=$((length1+length2))\n    local prime=\n    local prime_flag=\n\
    \    local prime_flag2=\n    local prime_flag3=\n    local prime_flag4=\n    local\
    \ prime_flag5=\n    local prime_flag6=\n    local prime_flag7=\n    local prime_flag8=\n\
    \    local prime_flag9=\n    local prime_flag10=\n    local prime_flag11=\n  \
    \  local prime_flag12=\n    local prime_flag13=\n    local prime_flag14=\n   \
    \ local prime_flag15=\n    local prime_flag16=\n    local prime_flag17=\n    local\
    \ prime_flag18=\n    local prime_flag19=\n    local prime_flag20=\n    local prime_flag21=\n\
    \    local prime_flag22=\n    local prime_flag23=\n    local prime_flag24=\n \
    \   local prime_flag25=\n    local prime_flag26=\n    local prime_flag27=\n  \
    \  local prime_flag28=\n    local prime_flag29=\n    local prime_flag30=\n   \
    \ local prime_flag31=\n    local prime_flag32=\n    local prime_flag33=\n    local\
    \ prime_flag34=\n    local prime_flag35=\n    local prime_flag36=\n    local prime_flag37=\n\
    \    local prime_flag38=\n    local prime_flag39=\n    local prime_flag40=\n \
    \   local prime_flag41=\n    local prime_flag42=\n    local prime_flag43=\n  \
    \  local prime_flag44=\n    local prime_flag45=\n    local prime_flag46=\n   \
    \ local prime_flag47=\n    local prime_flag48=\n    local prime_flag49=\n    local\
    \ prime_flag50=\n    local prime_flag51=\n    local prime_flag52=\n    local prime_flag53=\n\
    \    local prime_flag54=\n    local prime_flag55=\n    local prime_flag56=\n \
    \   local prime_", "    local a b c d e f g h i j k l m n o p q r s t u v w x\
    \ y z\n    a=$1\n    b=$2\n    \n    local len\n    len=0\n    \n    for (( i=0;\
    \ i<${#a}; i++ )); do\n        c=${a[i]}\n        d=${b[i]}\n        \n      \
    \  if [ $c -le $d ]; then\n            len=$((len+1))\n        elif [ $d -le $c\
    \ ]; then\n            len=$((len+1))\n        else\n            len=$((len+0))\n\
    \        fi\n    done\n    \n    if [ $len -eq 0 ]; then\n        echo \"NO\"\n\
    \    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local i\n    local j\n    local prime\n\
    \    local primes\n    local primesCount\n    local primesCount2\n    local primesCount3\n\
    \    local primesCount4\n    local primesCount5\n    local primesCount6\n    local\
    \ primesCount7\n    local primesCount8\n    local primesCount9\n    local primesCount10\n\
    \    local primesCount11\n    local primesCount12\n    local primesCount13\n \
    \   local primesCount14\n    local primesCount15\n    local primesCount16\n  \
    \  local primesCount17\n    local primesCount18\n    local primesCount19\n   \
    \ local primesCount20\n    local primesCount21\n    local primesCount22\n    local\
    \ primesCount23\n    local primesCount24\n    local primesCount25\n    local primesCount26\n\
    \    local primesCount27\n    local primesCount28\n    local primesCount29\n \
    \   local primesCount30\n    local primesCount31\n    local primesCount32\n  \
    \  local primesCount33\n    local primesCount34\n    local primesCount35\n   \
    \ local primesCount36\n    local primesCount37\n    local primesCount38\n    local\
    \ primesCount39\n    local primesCount40\n    local primesCount41\n    local primesCount42\n\
    \    local primesCount43\n    local primesCount44\n    local primesCount45\n \
    \   local primesCount46\n    local primesCount47\n    local primesCount48\n  \
    \  local primesCount49\n    local primesCount50\n    local primesCount51\n   \
    \ local primesCount52\n    local primesCount53\n    local primesCount54\n    local\
    \ primesCount55\n    local primesCount56\n    local primesCount57\n    local primesCount58\n\
    \    local primesCount59\n    local primesCount60\n    local primesCount61\n \
    \   local primesCount62\n    local primesCount63\n    local primesCount64\n  \
    \  local primesCount65\n    local primesCount66\n    local primesCount67\n   \
    \ local prime", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local length\n    local prime\n    local result\n\n  \
    \  length1=$(echo $interval1 | awk '{print $1}')\n    length2=$(echo $interval2\
    \ | awk '{print $1}')\n    length=$(expr $length1 + $length2)\n\n    if [ $length\
    \ -eq 1 ]\n    then\n        prime=\"NO\"\n    else\n        prime=\"YES\"\n \
    \   fi\n\n    if [ $prime == \"YES\" ]\n    then\n        result=\"NO\"\n    else\n\
    \        result=\"YES\"\n    fi\n\n    echo $result", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length_intersection=$((${length1}+${length2}))\n    local length_prime=1\n\
    \    local prime_flag=0\n    local prime_flag2=0\n    local prime_flag3=0\n  \
    \  local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n   \
    \ local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n    local\
    \ prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n    local\
    \ prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n    local\
    \ prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n    local\
    \ prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n    local\
    \ prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n    local\
    \ prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n    local\
    \ prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n    local\
    \ prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n    local\
    \ prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n    local\
    \ prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n    local\
    \ prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n    local\
    \ prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n    local\
    \ prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n    local\
    \ prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n    local\
    \ prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n    local\
    \ prime_flag55=0\n    local prime_flag56=0\n    ", "    local interval1=$1\n \
    \   local interval2=$2\n    local length1\n    local length2\n    local length\n\
    \    local result\n    local i\n    local j\n    local k\n    local prime\n  \
    \  local primes\n    local prime_found\n    local prime_not_found\n    local prime_not_found_index\n\
    \    local prime_not_found_index2\n    local prime_not_found_index3\n    local\
    \ prime_not_found_index4\n    local prime_not_found_index5\n    local prime_not_found_index6\n\
    \    local prime_not_found_index7\n    local prime_not_found_index8\n    local\
    \ prime_not_found_index9\n    local prime_not_found_index10\n    local prime_not_found_index11\n\
    \    local prime_not_found_index12\n    local prime_not_found_index13\n    local\
    \ prime_not_found_index14\n    local prime_not_found_index15\n    local prime_not_found_index16\n\
    \    local prime_not_found_index17\n    local prime_not_found_index18\n    local\
    \ prime_not_found_index19\n    local prime_not_found_index20\n    local prime_not_found_index21\n\
    \    local prime_not_found_index22\n    local prime_not_found_index23\n    local\
    \ prime_not_found_index24\n    local prime_not_found_index25\n    local prime_not_found_index26\n\
    \    local prime_not_found_index27\n    local prime_not_found_index28\n    local\
    \ prime_not_found_index29\n    local prime_not_found_index30\n    local prime_not_found_index31\n\
    \    local prime_not_found_index32\n    local prime_not_found_index33\n    local\
    \ prime_not_found_index34\n    local prime_not_found_index35\n    local prime_not_found_index36\n\
    \    local prime_not_found_index37\n    local prime_not_found_index38\n    local\
    \ prime_not_found_index39\n    local prime_not_found_index40\n    local prime_not_found_index41\n\
    \    local prime_not_found_index42\n    local prime_not_found_index43\n    local\
    \ prime_not_found_index44\n    local prime_not_found_index45\n    local prime_not_found_index46\n\
    \    local prime_not_found_index47\n    local prime_not_found_index48\n    local\
    \ prime_not_found_index49\n    local prime_not_found_", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((${length1}+${length2}))\n\
    \    local prime\n    local prime_flag=0\n    local prime_flag2=0\n    local prime_flag3=0\n\
    \    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n \
    \   local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n  \
    \  local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56=0", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2[@]}\")\n    if [[ $length_intersection -gt 0\
    \ ]]; then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi", "  \
    \  local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2}\")\n    if [ \"$length_intersection\" -eq 0 ]; then\n        echo\
    \ \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n \
    \   local interval2=$2\n    local length1\n    local length2\n    local result\n\
    \    local prime\n    local prime_check\n    local prime_check2\n    local prime_check3\n\
    \    local prime_check4\n    local prime_check5\n    local prime_check6\n    local\
    \ prime_check7\n    local prime_check8\n    local prime_check9\n    local prime_check10\n\
    \    local prime_check11\n    local prime_check12\n    local prime_check13\n \
    \   local prime_check14\n    local prime_check15\n    local prime_check16\n  \
    \  local prime_check17\n    local prime_check18\n    local prime_check19\n   \
    \ local prime_check20\n    local prime_check21\n    local prime_check22\n    local\
    \ prime_check23\n    local prime_check24\n    local prime_check25\n    local prime_check26\n\
    \    local prime_check27\n    local prime_check28\n    local prime_check29\n \
    \   local prime_check30\n    local prime_check31\n    local prime_check32\n  \
    \  local prime_check33\n    local prime_check34\n    local prime_check35\n   \
    \ local prime_check36\n    local prime_check37\n    local prime_check38\n    local\
    \ prime_check39\n    local prime_check40\n    local prime_check41\n    local prime_check42\n\
    \    local prime_check43\n    local prime_check44\n    local prime_check45\n \
    \   local prime_check46\n    local prime_check47\n    local prime_check48\n  \
    \  local prime_check49\n    local prime_check50\n    local prime_check51\n   \
    \ local prime_check52\n    local prime_check53\n    local prime_check54\n    local\
    \ prime_check55\n    local prime_check56\n    local prime_check57\n    local prime_check58\n\
    \    local prime_check59\n    local prime_check60\n    local prime_check61\n \
    \   local prime_check62\n    local prime_check63\n    local prime_check64\n  \
    \  local prime_check65\n    local prime_check66\n    local prime_check67\n   \
    \ local prime_check68\n    local prime_check", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n   \
    \ local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length_intersection=$((length1\
    \ + length2))\n    local length_prime=$((length_intersection % 2))\n    local\
    \ prime_number=\"YES\"\n    if [[ $length_prime -eq 0 ]]; then\n        prime_number=\"\
    NO\"\n    fi\n    echo $prime_number", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection prime_number\n    length_interval=$(echo\
    \ \"$interval_1 $interval_2\" | awk '{print length($1)+length($2)}')\n    prime_number=$((length_interval))\n\
    \    if [ $prime_number -eq 0 ]\n    then\n        echo \"NO\"\n    else\n   \
    \     echo \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=(\
    \ $1 )\n    interval_2=( $2 )\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"${interval_1[@]}\" \"${interval_2[@]}\")\n    if [[ ${length_intersection}\
    \ -eq 0 ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(echo \"$interval_1 $interval_2\"\
    \ | awk '{print $1-$2}')\n    if [[ $length_intersection -eq 0 ]]; then\n    \
    \    echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [[ $length_intersection -eq 0 ]]; then\n        echo \"NO\"\n    else\n    \
    \    echo \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [ \"$length_intersection\" -eq 0\
    \ ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "   \
    \ local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection prime_number\n    length_interval=$(echo \"$interval_1 $interval_2\"\
    \ | awk '{print $1-$2}')\n    prime_number=$((length_interval % 2))\n    if [\
    \ \"$prime_number\" -eq 0 ]; then\n        echo \"NO\"\n    else\n        echo\
    \ \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection\n    length_intersection=$(intersect \"$interval_1\"\
    \ \"${interval_2}\")\n    if [[ \"$length_intersection\" == \"\" ]]; then\n  \
    \      echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1\n    local length2\n    local prime\n\
    \    local result\n\n    length1=$(expr ${interval1[1]} - ${interval1[0]})\n \
    \   length2=$(expr ${interval2[1]} - ${interval2[0]})\n    prime=$(expr $length1\
    \ \\* $length2)\n\n    if [ $prime -eq 0 ]; then\n        result=\"NO\"\n    else\n\
    \        result=\"YES\"\n    fi\n\n    echo \"$result\"", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local len_intersection\n\
    \    len_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if [[\
    \ $len_intersection == *\"YES\"* ]]; then\n        echo \"YES\"\n    else\n  \
    \      echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i1\n    local i2\n    local\
    \ j1\n    local j2\n    local k1\n    local k2\n    local l\n    local m\n   \
    \ local n\n    local o\n    local p\n    local q\n    local r\n    local s\n \
    \   local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i1\n    local i2\n    local\
    \ j1\n    local j2\n    local k1\n    local k2\n    local l\n    local m\n   \
    \ local n\n    local o\n    local p\n    local q\n    local r\n    local s\n \
    \   local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i1\n    local i2\n    local\
    \ j1\n    local j2\n    local k1\n    local k2\n    local l\n    local m\n   \
    \ local n\n    local o\n    local p\n    local q\n    local r\n    local s\n \
    \   local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i1\n    local i2\n    local\
    \ j1\n    ", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=true\n    local prime_flag=false\n\
    \    local prime_flag2=false\n    local prime_flag3=false\n    local prime_flag4=false\n\
    \    local prime_flag5=false\n    local prime_flag6=false\n    local prime_flag7=false\n\
    \    local prime_flag8=false\n    local prime_flag9=false\n    local prime_flag10=false\n\
    \    local prime_flag11=false\n    local prime_flag12=false\n    local prime_flag13=false\n\
    \    local prime_flag14=false\n    local prime_flag15=false\n    local prime_flag16=false\n\
    \    local prime_flag17=false\n    local prime_flag18=false\n    local prime_flag19=false\n\
    \    local prime_flag20=false\n    local prime_flag21=false\n    local prime_flag22=false\n\
    \    local prime_flag23=false\n    local prime_flag24=false\n    local prime_flag25=false\n\
    \    local prime_flag26=false\n    local prime_flag27=false\n    local prime_flag28=false\n\
    \    local prime_flag29=false\n    local prime_flag30=false\n    local prime_flag31=false\n\
    \    local prime_flag32=false\n    local prime_flag33=false\n    local prime_flag34=false\n\
    \    local prime_flag35=false\n    local prime_flag36=false\n    local prime_flag37=false\n\
    \    local prime_flag38=false\n    local prime_flag39=false\n    local prime_flag40=false\n\
    \    local prime_flag41=false\n    local prime_flag42=false\n    local prime_flag43=false\n\
    \    local prime_flag44=false\n    local prime_flag45=false\n    local prime_flag46=false\n\
    \    local prime_flag47=false\n    local prime_flag48=false\n    local prime_flag49=false\n\
    \    local prime_flag50=false\n    ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${#interval1} - 1))\n    local length2=$((${#interval2}\
    \ - 1))\n    local length_intersection=$((length1 + length2))\n    local prime_number=$((length_intersection\
    \ % 2))\n    local prime_number_string=$((prime_number == 1 ? \"YES\" : \"NO\"\
    ))\n    local prime_number_string_1=$((prime_number == 1 ? \"YES\" : \"NO\"))\n\
    \    local prime_number_string_2=$((prime_number == 1 ? \"YES\" : \"NO\"))\n \
    \   local prime_number_string_3=$((prime_number == 1 ? \"YES\" : \"NO\"))\n  \
    \  local prime_number_string_4=$((prime_number == 1 ? \"YES\" : \"NO\"))\n   \
    \ local prime_number_string_5=$((prime_number == 1 ? \"YES\" : \"NO\"))\n    local\
    \ prime_number_string_6=$((prime_number == 1 ? \"YES\" : \"NO\"))\n    local prime_number_string_7=$((prime_number\
    \ == 1 ? \"YES\" : \"NO\"))\n    local prime_number_string_8=$((prime_number ==\
    \ 1 ? \"YES\" : \"NO\"))\n    local prime_number_string_9=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_10=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_11=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_12=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_13=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_14=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_15=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_16=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_17=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_18=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_19=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_20=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_21=$((prime_number == 1\
    \ ? \"YES\" : \"NO\"))\n    local prime_number_string_22=$", "    local a b\n\
    \    local len\n    local i\n    local j\n    local result\n\n    a=$1\n    b=$2\n\
    \    len=$((${#a} + ${#b}))\n    result=\"NO\"\n    for ((i = 0; i <= ${#a}; i++));\
    \ do\n        for ((j = 0; j <= ${#b}; j++)); do\n            if [[ ${a[i]} -eq\
    \ ${b[j]} ]]; then\n                result=\"YES\"\n                break\n  \
    \          fi\n        done\n    done\n    echo \"$result\"", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1\n    local length2\n    local length\n\
    \    local prime\n    local result\n    local start\n    local end\n    local\
    \ interval1Array\n    local interval2Array\n    local interval1ArrayLength\n \
    \   local interval2ArrayLength\n    local interval1ArrayElement\n    local interval2ArrayElement\n\
    \    local interval1ArrayElementLength\n    local interval2ArrayElementLength\n\
    \    local interval1ArrayElementStart\n    local interval2ArrayElementStart\n\
    \    local interval1ArrayElementEnd\n    local interval2ArrayElementEnd\n    local\
    \ interval1ArrayElementLength\n    local interval2ArrayElementLength\n    local\
    \ interval1ArrayElementStart\n    local interval2ArrayElementStart\n    local\
    \ interval1ArrayElementEnd\n    local interval2ArrayElementEnd\n    local interval1ArrayElementLength\n\
    \    local interval2ArrayElementLength\n    local interval1ArrayElementStart\n\
    \    local interval2ArrayElementStart\n    local interval1ArrayElementEnd\n  \
    \  local interval2ArrayElementEnd\n    local interval1ArrayElementLength\n   \
    \ local interval2ArrayElementLength\n    local interval1ArrayElementStart\n  \
    \  local interval2ArrayElementStart\n    local interval1ArrayElementEnd\n    local\
    \ interval2ArrayElementEnd\n    local interval1ArrayElementLength\n    local interval2ArrayElementLength\n\
    \    local interval1ArrayElementStart\n    local interval2ArrayElementStart\n\
    \    local interval1ArrayElementEnd\n    local interval2ArrayElementEnd\n    local\
    \ interval1ArrayElementLength\n    local interval2ArrayElementLength\n    local\
    \ interval1ArrayElementStart\n    local interval2ArrayElementStart\n    local\
    \ interval1ArrayElementEnd\n    local interval2ArrayElementEnd\n    local interval1ArrayElementLength\n\
    \    local interval2ArrayElementLength\n    local interval1ArrayElementStart\n\
    \    local interval2ArrayElementStart\n    local interval1ArrayElementEnd\n  \
    \  local interval2ArrayElementEnd\n    local interval1ArrayElementLength\n   \
    \ local interval2ArrayElementLength\n    local interval1ArrayElementStart\n  \
    \  local interval2ArrayElementStart\n    local interval1ArrayElementEnd\n    local\
    \ interval2ArrayElementEnd\n    local interval1ArrayElementLength\n    local interval2ArrayElementLength\n\
    \    local interval1ArrayElementStart\n    local interval2ArrayElementStart\n\
    \    local interval1ArrayElementEnd\n    local interval2", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [[ $length_intersection -eq 0 ]]; then\n        echo \"NO\"\n    else\n    \
    \    echo \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=(\
    \ $1 )\n    interval_2=( $2 )\n    local len_intersection\n    len_intersection=$(intersect\
    \ \"${interval_1[@]}\" \"${interval_2[@]}\")\n    if [[ $len_intersection -eq\
    \ 0 ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo \"$interval_2\" |\
    \ wc -w)\n    if [ \"$length_intersection_1\" -gt \"$length_intersection_2\" ];\
    \ then\n        echo \"NO\"\n    else\n        local i\n        for i in $(seq\
    \ 0 \"$length_intersection_1\" -1); do\n            if [[ $(( $(echo \"$interval_1\"\
    \ | cut -d \" \" -f $i | cut -d \"-\" -f 1) \\\n                    < $(echo \"\
    $interval_2\" | cut -d \" \" -f $i | cut -d \"-\" -f 1) \\\n                 \
    \   && $(echo \"$interval_1\" | cut -d \" \" -f $i | cut -d \"-\" -f 1) \\\n \
    \                   > $(echo \"$interval_2\" | cut -d \" \" -f $i | cut -d \"\
    -\" -f 1) \\\n                    )) -eq 0 ]]; then\n                echo \"NO\"\
    \n                break\n            else\n                echo \"YES\"\n    \
    \            break\n            fi\n        done\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=( $1 )\n    interval_2=( $2 )\n    local len_intersection\n\
    \    len_intersection=( $(len $( intersect $interval_1 $interval_2 )) )\n    if\
    \ [ $len_intersection -eq 0 ]; then\n        echo \"NO\"\n    else\n        echo\
    \ \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1=$((${#interval1} + 1))\n    local length2=$((${#interval2} + 1))\n \
    \   local start1=$((${interval1[0]}))\n    local end1=$((${interval1[1]}))\n \
    \   local start2=$((${interval2[0]}))\n    local end2=$((${interval2[1]}))\n \
    \   local start\n    local end\n    local length\n    local prime\n    local primes\n\
    \    local primesLength\n    local primesLength2\n    local primesLength3\n  \
    \  local primesLength4\n    local primesLength5\n    local primesLength6\n   \
    \ local primesLength7\n    local primesLength8\n    local primesLength9\n    local\
    \ primesLength10\n    local primesLength11\n    local primesLength12\n    local\
    \ primesLength13\n    local primesLength14\n    local primesLength15\n    local\
    \ primesLength16\n    local primesLength17\n    local primesLength18\n    local\
    \ primesLength19\n    local primesLength20\n    local primesLength21\n    local\
    \ primesLength22\n    local primesLength23\n    local primesLength24\n    local\
    \ primesLength25\n    local primesLength26\n    local primesLength27\n    local\
    \ primesLength28\n    local primesLength29\n    local primesLength30\n    local\
    \ primesLength31\n    local primesLength32\n    local primesLength33\n    local\
    \ primesLength34\n    local primesLength35\n    local primesLength36\n    local\
    \ primesLength37\n    local primesLength38\n    local primesLength39\n    local\
    \ primesLength40\n    local primesLength41\n    local primesLength42\n    local\
    \ primesLength43\n    local primesLength44\n    local primesLength45\n    local\
    \ primesLength46\n    local primesLength47\n    local primesLength48\n    local\
    \ primesLength49\n    local primesLength50\n    local primesLength51\n    local\
    \ primesLength52\n    local primesLength53\n    local primesLength54\n    local\
    \ primesLength55\n    local primesLength56\n    local primesLength57\n    local\
    \ primesLength", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local length\n    local result\n    local prime\n    local\
    \ primes\n    local i\n    local j\n    local prime_found\n    local prime_found1\n\
    \    local prime_found2\n    local prime_found3\n    local prime_found4\n    local\
    \ prime_found5\n    local prime_found6\n    local prime_found7\n    local prime_found8\n\
    \    local prime_found9\n    local prime_found10\n    local prime_found11\n  \
    \  local prime_found12\n    local prime_found13\n    local prime_found14\n   \
    \ local prime_found15\n    local prime_found16\n    local prime_found17\n    local\
    \ prime_found18\n    local prime_found19\n    local prime_found20\n    local prime_found21\n\
    \    local prime_found22\n    local prime_found23\n    local prime_found24\n \
    \   local prime_found25\n    local prime_found26\n    local prime_found27\n  \
    \  local prime_found28\n    local prime_found29\n    local prime_found30\n   \
    \ local prime_found31\n    local prime_found32\n    local prime_found33\n    local\
    \ prime_found34\n    local prime_found35\n    local prime_found36\n    local prime_found37\n\
    \    local prime_found38\n    local prime_found39\n    local prime_found40\n \
    \   local prime_found41\n    local prime_found42\n    local prime_found43\n  \
    \  local prime_found44\n    local prime_found45\n    local prime_found46\n   \
    \ local prime_found47\n    local prime_found48\n    local prime_found49\n    local\
    \ prime_found50\n    local prime_found51\n    local prime_found52\n    local prime_found53\n\
    \    local prime_found54\n    local prime_found55\n    local prime_found56\n \
    \   local prime_found57\n    local prime_found58\n    local prime_found59\n  \
    \  local prime_found60\n    local prime_found61\n    local prime_found62\n   \
    \ local prime_found63\n    local prime_found64\n    local prime_found65\n    local ",
  "    local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local length\n    local prime\n    local prime_str\n    local prime_str_len\n\
    \    local prime_str_len_str\n    local prime_str_len_str_len\n    local prime_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len\n    local prime_str_len_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len_str_len\n    local prime_str_len_str_len_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len\n    local prime_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len\n    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len\n   \
    \ local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str\n  \
    \  local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local prime_str_len_str_len_str_len_str_len_str_len_str_len_", "    local\
    \ a b c d e f g h i j k l m n o p q r s t u v w x y z\n    a=$1\n    b=$2\n  \
    \  local len\n    len=$(( (${#a} - 1) * (${#b} - 1) ))\n    for (( i = 0; i <=\
    \ len; i++ )); do\n        c=$(a[${i}])\n        d=$(b[${i}])\n        e=$(( c\
    \ + d ))\n        f=$(( c - d ))\n        g=$(( e * e ))\n        h=$(( f * f\
    \ ))\n        i=$(( g + h ))\n        j=$(( g - h ))\n        k=$(( j * j ))\n\
    \        l=$(( k + l ))\n        m=$(( k - l ))\n        n=$(( m * m ))\n    \
    \    o=$(( n + o ))\n        p=$(( n - o ))\n        q=$(( p * p ))\n        r=$((\
    \ q + r ))\n        s=$(( r - q ))\n        t=$(( s * s ))\n        u=$(( t +\
    \ u ))\n        v=$(( u - t ))\n        w=$(( v * v ))\n        x=$(( w + x ))\n\
    \        y=$(( x - w ))\n        z=$(( y * y ))\n    done\n    if [ $z -eq 0 ];\
    \ then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local\
    \ interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection_1\
    \ length_intersection_2\n    length_intersection_1=$(echo \"$interval_1\" | wc\
    \ -w)\n    length_intersection_2=$(echo \"$interval_2\" | wc -w)\n    if [ \"\
    $length_intersection_1\" -gt \"$length_intersection_2\" ]; then\n        echo\
    \ \"$interval_1\" | awk '{print $1}' | sort -n | uniq -c | sort -nr\n    else\n\
    \        echo \"$interval_2\" | awk '{print $1}' | sort -n | uniq -c | sort -nr\n\
    \    fi", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | awk '{print $1}')\n    length_intersection_2=$(echo \"$interval_2\"\
    \ | awk '{print $1}')\n    if [ $length_intersection_1 -eq $length_intersection_2\
    \ ]; then\n        if [ $length_intersection_1 -eq 1 ]; then\n            if [\
    \ $length_intersection_2 -eq 1 ]; then\n                if [ \"$interval_1\" ==\
    \ \"$interval_2\" ]; then\n                    echo \"YES\"\n                else\n\
    \                    echo \"NO\"\n                fi\n            else\n     \
    \           if [ \"$interval_1\" == \"$interval_2\" ]; then\n                \
    \    echo \"YES\"\n                else\n                    echo \"NO\"\n   \
    \             fi\n            fi\n        else\n            if [ \"$interval_1\"\
    \ == \"$interval_2\" ]; then\n                echo \"YES\"\n            else\n\
    \                echo \"NO\"\n            fi\n        fi\n    else\n        echo\
    \ \"NO\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection\n    length_intersection=$(echo \"$interval_1 $interval_2\"\
    \ | awk '{print $1 - $2}')\n    if [ \"$length_intersection\" -eq 0 ]; then\n\
    \        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1\n    local length2\n    local length\n\
    \    local prime\n    local result\n\n    length1=$(echo $interval1 | awk '{print\
    \ length}')\n    length2=$(echo $interval2 | awk '{print length}')\n    length=$(echo\
    \ $length1 $length2)\n\n    if [ $length -eq 0 ]\n    then\n        result=\"\
    NO\"\n    else\n        prime=\"YES\"\n        for (( i=1; i<=$length-1; i++ ))\n\
    \        do\n            if [ $(($interval1[1])) -le $(($interval2[1])) ]\n  \
    \          then\n                if [ $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le $(($interval2[1])) -a $(($interval1[1])) -le $(($interval2[1]))\
    \ -a $(($interval1[1])) -le ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local result\n    local i\n    local\
    \ j\n    local prime\n    local primes\n    local prime_found\n    local prime_found2\n\
    \    local prime_found3\n    local prime_found4\n    local prime_found5\n    local\
    \ prime_found6\n    local prime_found7\n    local prime_found8\n    local prime_found9\n\
    \    local prime_found10\n    local prime_found11\n    local prime_found12\n \
    \   local prime_found13\n    local prime_found14\n    local prime_found15\n  \
    \  local prime_found16\n    local prime_found17\n    local prime_found18\n   \
    \ local prime_found19\n    local prime_found20\n    local prime_found21\n    local\
    \ prime_found22\n    local prime_found23\n    local prime_found24\n    local prime_found25\n\
    \    local prime_found26\n    local prime_found27\n    local prime_found28\n \
    \   local prime_found29\n    local prime_found30\n    local prime_found31\n  \
    \  local prime_found32\n    local prime_found33\n    local prime_found34\n   \
    \ local prime_found35\n    local prime_found36\n    local prime_found37\n    local\
    \ prime_found38\n    local prime_found39\n    local prime_found40\n    local prime_found41\n\
    \    local prime_found42\n    local prime_found43\n    local prime_found44\n \
    \   local prime_found45\n    local prime_found46\n    local prime_found47\n  \
    \  local prime_found48\n    local prime_found49\n    local prime_found50\n   \
    \ local prime_found51\n    local prime_found52\n    local prime_found53\n    local\
    \ prime_found54\n    local prime_found55\n    local prime_found56\n    local prime_found57\n\
    \    local prime_found58\n    local prime_found59\n    local prime_found60\n \
    \   local prime_found61\n    local prime_found62\n    local prime_found63\n  \
    \  local prime_found64\n    local prime_found65\n    local prime_found66\n   \
    \ local prime_found67", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    if [ $length1 -eq $length2 ]; then\n        if [ $length1\
    \ -eq 0 ]; then\n            echo \"NO\"\n        else\n            echo \"YES\"\
    \n        fi\n    else\n        echo \"NO\"\n    fi", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\n\
    \    length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    if [ \"$length_intersection_1\" -eq \"$length_intersection_2\"\
    \ ]; then\n        local length_1 length_2\n        length_1=$(echo \"$interval_1\"\
    \ | wc -l)\n        length_2=$(echo \"$interval_2\" | wc -l)\n        if [ \"\
    $length_1\" -eq \"$length_2\" ]; then\n            local i\n            for i\
    \ in $(seq 0 \"$length_intersection_1\" \"$length_intersection_2\"); do\n    \
    \            if [[ $(( $(echo \"$interval_1\" | cut -d \" \" -f $i | cut -d \"\
    \ \" -f 1) \\\n                        + $(echo \"$interval_2\" | cut -d \" \"\
    \ -f $i | cut -d \" \" -f 1) )) -eq 0 ]]; then\n                    return \"\
    NO\"\n                fi\n            done\n            return \"YES\"\n     \
    \   fi\n    fi", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local length\n    local prime\n    local result\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection_1\
    \ length_intersection_2\n    length_intersection_1=$(echo \"$interval_1\" | wc\
    \ -w)\n    length_intersection_2=$(echo \"$interval_2\" | wc -w)\n    if [ \"\
    $length_intersection_1\" -gt \"$length_intersection_2\" ]; then\n        echo\
    \ \"NO\"\n    elif [ \"$length_intersection_1\" -eq \"$length_intersection_2\"\
    \ ]; then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi", "   \
    \ local a b c d e f g h i j k l m n o p q r s t u v w x y z\n    local -a intervals\n\
    \    intervals=($1)\n    intervals=(\"${intervals[@]}\" \"$2\")\n    for (( i=0;\
    \ i<${#intervals[@]}; i++ )); do\n        a=${intervals[$i]}\n        b=${intervals[$(($i+1))]}\n\
    \        c=$((${a}+${b}))\n        d=$((${a}-${b}))\n        e=$((${a}*${b}))\n\
    \        f=$((${a}%${b}))\n        g=$((${a}/${b}))\n        h=$((${a}<<${b}))\n\
    \        i=$((${a}>>${b}))\n        j=$((${a}&${b}))\n        k=$((${a}|${b}))\n\
    \        l=$((${a}^${b}))\n        m=$((${a}<<${b}))\n        n=$((${a}>>${b}))\n\
    \        o=$((${a}&${b}))\n        p=$((${a}|${b}))\n        q=$((${a}^${b}))\n\
    \        r=$((${a}+${b}))\n        s=$((${a}-${b}))\n        t=$((${a}*${b}))\n\
    \        u=$((${a}%${b}))\n        v=$((${a}/${b}))\n        w=$((${a}<<${b}))\n\
    \        x=$((${a}>>${b}))\n        y=$((${a}&${b}))\n        z=$((${a}|${b}))\n\
    \    done\n    local prime\n    prime=$((${c}+${d}+${e}+${f}+${g}+${h}+${i}+${j}+${k}+${l}+${m}+${n}+${o}+${p}+${q}+${r}+${s}+${t}+${u}+${v}+${w}+${x}+${y}+${z}))\n\
    \    if [[ ${prime} -eq 1 ]]; then\n        echo \"NO\"\n    else\n        echo\
    \ \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2 length_1 length_2 length_prime\n\
    \    length_intersection_1=$(expr ${interval_1}[1] - ${interval_1}[0])\n    length_intersection_2=$(expr\
    \ ${interval_2}[1] - ${interval_2}[0])\n    length_1=$(expr ${interval_1}[1] -\
    \ ${interval_1}[0])\n    length_2=$(expr ${interval_2}[1] - ${interval_2}[0])\n\
    \    length_prime=$(expr ${length_intersection_1} + ${length_intersection_2})\n\
    \    if [[ ${length_prime} -eq 0 ]]; then\n        echo \"NO\"\n    else\n   \
    \     if [[ ${length_prime} -eq 1 ]]; then\n            echo \"YES\"\n       \
    \ else\n            if [[ ${length_prime} -eq 2 ]]; then\n                echo\
    \ \"YES\"\n            else\n                if [[ ${length_prime} -eq 3 ]]; then\n\
    \                    echo \"YES\"\n                else\n                    if\
    \ [[ ${length_prime} -eq 4 ]]; then\n                        echo \"YES\"\n  \
    \                  else\n                        if [[ ${length_prime} -eq 5 ]];\
    \ then\n                            echo \"YES\"\n                        else\n\
    \                            if [[ ${length_prime} -eq 6 ]]; then\n          \
    \                      echo \"YES\"\n                            else\n      \
    \                          if [[ ${length_prime} -eq 7 ]]; then\n            \
    \                        echo \"YES\"\n                                else\n\
    \                                    if [[ ${length_prime} -eq 8 ]]; then\n  \
    \                                      echo \"YES\"\n                        \
    \            else\n                                        if [[ ${length_prime}\
    \ -eq 9 ]]; then\n                                            echo \"YES\"\n \
    \                                       else\n                               \
    \             if [[ ${length_prime} -eq 10 ]]; then\n                        \
    \                        echo \"YES\"\n                                      \
    \      else\n                                                if [[ ${length_prime}\
    \ -eq 11 ]]; then\n                                                    echo \"\
    YES\"\n                                                else\n                \
    \                                    if [[ ${length_prime} -eq 12 ]]; then\n \
    \                                                       echo \"YES\"\n       \
    \                                             else\n                         \
    \                               if [[ ${length_prime} -eq 13 ]]; then\n      \
    \                                                      echo \"YES\"\n        \
    \                                                else\n                      \
    \                                      echo \"NO\"\n                         \
    \                               fi\n                                         \
    \           fi\n                                                fi\n         \
    \                                   fi\n                                     \
    \   fi\n                                    fi\n                             \
    \   fi\n                            fi\n                        fi\n         \
    \           fi\n                fi\n            fi\n        fi\n    fi", "   \
    \ local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local intersect\n    local prime\n    local result\n    local interval1\n\
    \    local interval2\n    local length1\n    local length2\n    local intersect\n\
    \    local prime\n    local result\n    local interval1\n    local interval2\n\
    \    local length1\n    local length2\n    local intersect\n    local prime\n\
    \    local result\n    local interval1\n    local interval2\n    local length1\n\
    \    local length2\n    local intersect\n    local prime\n    local result\n \
    \   local interval1\n    local interval2\n    local length1\n    local length2\n\
    \    local intersect\n    local prime\n    local result\n    local interval1\n\
    \    local interval2\n    local length1\n    local length2\n    local intersect\n\
    \    local prime\n    local result\n    local interval1\n    local interval2\n\
    \    local length1\n    local length2\n    local intersect\n    local prime\n\
    \    local result\n    local interval1\n    local interval2\n    local length1\n\
    \    local length2\n    local intersect\n    local prime\n    local result\n \
    \   local interval1\n    local interval2\n    local length1\n    local length2\n\
    \    local intersect\n    local prime\n    local result\n    local interval1\n\
    \    local interval2\n    local length1\n    local length2\n    local intersect\n\
    \    local prime\n    local result\n    local interval1\n    local interval2\n\
    \    local length1\n    local length2\n    local intersect\n    local prime\n\
    \    local result\n    local interval1\n    local interval2\n    local length1\n\
    \    local length2\n    local intersect\n    local prime\n    local result\n \
    \   local interval1\n    local interval2\n    local length1\n    local length2\n\
    \    local intersect\n    local prime\n    local result\n    local interval1\n\
    \    local interval2\n    local length1\n    local length2\n    local intersect\n\
    \    local prime\n    local result\n    local interval1\n    local interval2\n\
    \    local length1\n    local length2\n    local intersect\n    local prime\n\
    \    local result\n    local interval1\n    local interval2\n    local length1\n\
    \    local length2\n    local intersect\n    local prime\n", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local len_intersection_1\
    \ len_intersection_2 len_1 len_2 len_1_prime len_2_prime prime_flag prime_flag2\
    \ prime_flag3 prime_flag4 prime_flag5 prime_flag6 prime_flag7 prime_flag8 prime_flag9\
    \ prime_flag10 prime_flag11 prime_flag12 prime_flag13 prime_flag14 prime_flag15\
    \ prime_flag16 prime_flag17 prime_flag18 prime_flag19 prime_flag20 prime_flag21\
    \ prime_flag22 prime_flag23 prime_flag24 prime_flag25 prime_flag26 prime_flag27\
    \ prime_flag28 prime_flag29 prime_flag30 prime_flag31 prime_flag32 prime_flag33\
    \ prime_flag34 prime_flag35 prime_flag36 prime_flag37 prime_flag38 prime_flag39\
    \ prime_flag40 prime_flag41 prime_flag42 prime_flag43 prime_flag44 prime_flag45\
    \ prime_flag46 prime_flag47 prime_flag48 prime_flag49 prime_flag50 prime_flag51\
    \ prime_flag52 prime_flag53 prime_flag54 prime_flag55 prime_flag56 prime_flag57\
    \ prime_flag58 prime_flag59 prime_flag60 prime_flag61 prime_flag62 prime_flag63\
    \ prime_flag64 prime_flag65 prime_flag66 prime_flag67 prime_flag68 prime_flag69\
    \ prime_flag70 prime_flag71 prime_flag72 prime_flag73 prime_flag74 prime_flag75\
    \ prime_flag76 prime_flag77 prime_flag78 prime_flag79 prime_flag80 prime_flag81\
    \ prime_flag82 prime_flag83 prime_flag84 prime_flag85 prime_flag86 prime_flag87\
    \ prime_flag88 prime_flag89 prime_flag90 prime_flag91 prime_flag92 prime_flag93\
    \ prime_flag94 prime_flag95 prime_flag96 prime_flag97 prime_flag98 prime_flag99\
    \ prime_flag100\n    len_intersection_1=$(expr ${interval_1}[1] - ${interval_1}[0])\n",
  "    local interval_1 interval_2 length_1 length_2 i\n    interval_1=$1\n    interval_2=$2\n\
    \    length_1=$(echo \"$interval_1\" | awk '{print length}')\n    length_2=$(echo\
    \ \"$interval_2\" | awk '{print length}')\n    for i in $(seq 0 $((length_1 -\
    \ 1))); do\n        if [ $((i + length_2)) -le $((length_1 + length_2)) ]; then\n\
    \            if [ $((interval_1[i] + interval_2[i])) -eq $((interval_1[i] + interval_2[i]))\
    \ ]; then\n                echo \"YES\"\n                break\n            else\n\
    \                echo \"NO\"\n                break\n            fi\n        fi\n\
    \    done", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local result\n  \
    \  local i\n    local j\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1 | cut -d ' ' -f 1\"| wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2 | cut -d ' ' -f 1\"| wc -w)\n    if [ $length_intersection_1 -eq\
    \ $length_intersection_2 ]; then\n        if [ $length_intersection_1 -eq 1 ];\
    \ then\n            if [ $length_intersection_2 -eq 1 ]; then\n              \
    \  if [ \"$interval_1\" == \"$interval_2\" ]; then\n                    echo \"\
    YES\"\n                else\n                    echo \"NO\"\n               \
    \ fi\n            else\n                echo \"NO\"\n            fi\n        else\n\
    \            echo \"NO\"\n        fi\n    else\n        echo \"NO\"\n    fi",
  "    local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local result\n    local i\n    local j\n    local prime\n    local prime_flag\n\
    \    local prime_flag2\n    local prime_flag3\n    local prime_flag4\n    local\
    \ prime_flag5\n    local prime_flag6\n    local prime_flag7\n    local prime_flag8\n\
    \    local prime_flag9\n    local prime_flag10\n    local prime_flag11\n    local\
    \ prime_flag12\n    local prime_flag13\n    local prime_flag14\n    local prime_flag15\n\
    \    local prime_flag16\n    local prime_flag17\n    local prime_flag18\n    local\
    \ prime_flag19\n    local prime_flag20\n    local prime_flag21\n    local prime_flag22\n\
    \    local prime_flag23\n    local prime_flag24\n    local prime_flag25\n    local\
    \ prime_flag26\n    local prime_flag27\n    local prime_flag28\n    local prime_flag29\n\
    \    local prime_flag30\n    local prime_flag31\n    local prime_flag32\n    local\
    \ prime_flag33\n    local prime_flag34\n    local prime_flag35\n    local prime_flag36\n\
    \    local prime_flag37\n    local prime_flag38\n    local prime_flag39\n    local\
    \ prime_flag40\n    local prime_flag41\n    local prime_flag42\n    local prime_flag43\n\
    \    local prime_flag44\n    local prime_flag45\n    local prime_flag46\n    local\
    \ prime_flag47\n    local prime_flag48\n    local prime_flag49\n    local prime_flag50\n\
    \    local prime_flag51\n    local prime_flag52\n    local prime_flag53\n    local\
    \ prime_flag54\n    local prime_flag55\n    local prime_flag56\n    local prime_flag57\n\
    \    local prime_flag58\n    local prime_flag59\n    local prime_flag60\n    local\
    \ prime_flag61\n    local prime_flag62\n    local prime_flag63\n    local prime_flag64\n\
    \    local prime_flag65\n    local prime_flag66\n    local prime_flag67\n    local\
    \ prime_", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56=0\n    local ", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local i\n    local j\n    local prime\n    local primes\n \
    \   local primesLength\n    local primesLength2\n    local primesLength3\n   \
    \ local primesLength4\n    local primesLength5\n    local primesLength6\n    local\
    \ primesLength7\n    local primesLength8\n    local primesLength9\n    local primesLength10\n\
    \    local primesLength11\n    local primesLength12\n    local primesLength13\n\
    \    local primesLength14\n    local primesLength15\n    local primesLength16\n\
    \    local primesLength17\n    local primesLength18\n    local primesLength19\n\
    \    local primesLength20\n    local primesLength21\n    local primesLength22\n\
    \    local primesLength23\n    local primesLength24\n    local primesLength25\n\
    \    local primesLength26\n    local primesLength27\n    local primesLength28\n\
    \    local primesLength29\n    local primesLength30\n    local primesLength31\n\
    \    local primesLength32\n    local primesLength33\n    local primesLength34\n\
    \    local primesLength35\n    local primesLength36\n    local primesLength37\n\
    \    local primesLength38\n    local primesLength39\n    local primesLength40\n\
    \    local primesLength41\n    local primesLength42\n    local primesLength43\n\
    \    local primesLength44\n    local primesLength45\n    local primesLength46\n\
    \    local primesLength47\n    local primesLength48\n    local primesLength49\n\
    \    local primesLength50\n    local primesLength51\n    local primesLength52\n\
    \    local primesLength53\n    local primesLength54\n    local primesLength55\n\
    \    local primesLength56\n    local primesLength57\n    local primesLength58\n\
    \    local primesLength59\n    local primesLength60\n    local primesLength61\n\
    \    local primesLength62\n    local primes", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n   \
    \ local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length_intersection=$((length1\
    \ + length2))\n    if [ $length_intersection -eq 0 ]\n    then\n        echo \"\
    NO\"\n    else\n        local prime_numbers=$(echo \"$length_intersection\" |\
    \ awk '{print $1}')\n        if [ $prime_numbers -eq 0 ]\n        then\n     \
    \       echo \"NO\"\n        else\n            local prime_numbers_length=$(echo\
    \ \"$prime_numbers\" | awk '{print $1}')\n            if [ $prime_numbers_length\
    \ -eq 1 ]\n            then\n                echo \"YES\"\n            else\n\
    \                echo \"NO\"\n            fi\n        fi\n    fi", "    local\
    \ interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56=0\n    local ", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length_intersection=$((length1+length2))\n\
    \    local is_prime=1\n    local prime_numbers=()\n    local prime_numbers_count=${#prime_numbers[@]}\n\
    \    local prime_numbers_index=0\n    local prime_numbers_index_count=0\n    local\
    \ prime_numbers_index_start=0\n    local prime_numbers_index_end=0\n    local\
    \ prime_numbers_index_end2=0\n    local prime_numbers_index_end3=0\n    local\
    \ prime_numbers_index_end4=0\n    local prime_numbers_index_end5=0\n    local\
    \ prime_numbers_index_end6=0\n    local prime_numbers_index_end7=0\n    local\
    \ prime_numbers_index_end8=0\n    local prime_numbers_index_end9=0\n    local\
    \ prime_numbers_index_end10=0\n    local prime_numbers_index_end11=0\n    local\
    \ prime_numbers_index_end12=0\n    local prime_numbers_index_end13=0\n    local\
    \ prime_numbers_index_end14=0\n    local prime_numbers_index_end15=0\n    local\
    \ prime_numbers_index_end16=0\n    local prime_numbers_index_end17=0\n    local\
    \ prime_numbers_index_end18=0\n    local prime_numbers_index_end19=0\n    local\
    \ prime_numbers_index_end20=0\n    local prime_numbers_index_end21=0\n    local\
    \ prime_numbers_index_end22=0\n    local prime_numbers_index_end23=0\n    local\
    \ prime_numbers_index_end24=0\n    local prime_numbers_index_end25=0\n    local\
    \ prime_numbers_index_end26=0\n    local prime_numbers_index_end27=0\n    local\
    \ prime_numbers_index_end28=0\n    local prime_numbers_index_end29=0\n    local\
    \ prime_numbers_index_end30=0\n    local prime_numbers_index_end31=0\n    local\
    \ prime_numbers_index_end32=0\n    local prime_numbers_index_end33=0\n    local\
    \ prime_numbers_index_end34=0\n    local prime_numbers_index_end35=0\n    local\
    \ prime_numbers_index_end36", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local primes\n    local primesLength\n    local primesLength2\n    local primesLength3\n\
    \    local primesLength4\n    local primesLength5\n    local primesLength6\n \
    \   local primesLength7\n    local primesLength8\n    local primesLength9\n  \
    \  local primesLength10\n    local primesLength11\n    local primesLength12\n\
    \    local primesLength13\n    local primesLength14\n    local primesLength15\n\
    \    local primesLength16\n    local primesLength17\n    local primesLength18\n\
    \    local primesLength19\n    local primesLength20\n    local primesLength21\n\
    \    local primesLength22\n    local primesLength23\n    local primesLength24\n\
    \    local primesLength25\n    local primesLength26\n    local primesLength27\n\
    \    local primesLength28\n    local primesLength29\n    local primesLength30\n\
    \    local primesLength31\n    local primesLength32\n    local primesLength33\n\
    \    local primesLength34\n    local primesLength35\n    local primesLength36\n\
    \    local primesLength37\n    local primesLength38\n    local primesLength39\n\
    \    local primesLength40\n    local primesLength41\n    local primesLength42\n\
    \    local primesLength43\n    local primesLength44\n    local primesLength45\n\
    \    local primesLength46\n    local primesLength47\n    local primesLength48\n\
    \    local primesLength49\n    local primesLength50\n    local primesLength51\n\
    \    local primesLength52\n    local primesLength53\n    local primesLength54\n\
    \    local primesLength55\n    local primesLength56\n    local primesLength57\n\
    \    local primesLength58\n    local primesLength59\n    local primesLength60\n\
    \    local primesLength61\n    local primesLength62\n    local primesLength63\n\
    \    local primesLength64\n    local primesLength65\n    local primesLength66\n\
    \    local primesLength67\n    local primesLength68\n", "    local interval_1\
    \ interval_2\n    interval_1=$(echo $1 | tr \" \" \"\\n\")\n    interval_2=$(echo\
    \ $2 | tr \" \" \"\\n\")\n    local len_intersection\n    len_intersection=$(echo\
    \ \"$interval_1 $interval_2\" | wc -w)\n    if [ $len_intersection -eq 0 ]\n \
    \   then\n        echo \"NO\"\n    else\n        local prime_number\n        prime_number=$(echo\
    \ \"$len_intersection\" | awk '{print $1}')\n        if [ $prime_number -eq 0\
    \ ]\n        then\n            echo \"NO\"\n        else\n            echo \"\
    YES\"\n        fi\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]}-${interval1[0]}))\n    local length2=$((${interval2[1]}-${interval2[0]}))\n\
    \    local length=$((${length1}+${length2}))\n    local result=\"NO\"\n    local\
    \ prime=\"YES\"\n    local prime_flag=\"NO\"\n    local prime_flag2=\"NO\"\n \
    \   local prime_flag3=\"NO\"\n    local prime_flag4=\"NO\"\n    local prime_flag5=\"\
    NO\"\n    local prime_flag6=\"NO\"\n    local prime_flag7=\"NO\"\n    local prime_flag8=\"\
    NO\"\n    local prime_flag9=\"NO\"\n    local prime_flag10=\"NO\"\n    local prime_flag11=\"\
    NO\"\n    local prime_flag12=\"NO\"\n    local prime_flag13=\"NO\"\n    local\
    \ prime_flag14=\"NO\"\n    local prime_flag15=\"NO\"\n    local prime_flag16=\"\
    NO\"\n    local prime_flag17=\"NO\"\n    local prime_flag18=\"NO\"\n    local\
    \ prime_flag19=\"NO\"\n    local prime_flag20=\"NO\"\n    local prime_flag21=\"\
    NO\"\n    local prime_flag22=\"NO\"\n    local prime_flag23=\"NO\"\n    local\
    \ prime_flag24=\"NO\"\n    local prime_flag25=\"NO\"\n    local prime_flag26=\"\
    NO\"\n    local prime_flag27=\"NO\"\n    local prime_flag28=\"NO\"\n    local\
    \ prime_flag29=\"NO\"\n    local prime_flag30=\"NO\"\n    local prime_flag31=\"\
    NO\"\n    local prime_flag32=\"NO\"\n    local prime_flag33=\"NO\"\n    local\
    \ prime_flag34=\"NO\"\n    local prime_flag35=\"NO\"\n    local prime_flag36=\"\
    NO\"\n    local prime_flag37=\"NO\"\n    local prime_flag38=\"NO\"\n    local\
    \ prime_flag39=\"NO\"\n    local prime_flag40=\"NO\"\n    local prime_flag41=\"\
    NO\"\n    local prime_flag42=\"NO\"\n    local prime_flag43=\"NO\"\n    local\
    \ prime_flag44=\"", "    local a b\n    local len\n    local i\n    local j\n\
    \    local prime\n    local primes\n    local result\n    local temp\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96",
  "    local interval_1 interval_2 length prime\n    interval_1=$1\n    interval_2=$2\n\
    \    length=$(expr ${interval_1}[1] - ${interval_2}[1])\n    prime=$(expr ${length}\
    \ + 1)\n    prime=$(expr $prime % 2)\n    if [ $prime -eq 0 ]; then\n        echo\
    \ \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n \
    \   local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    if [ $length -eq 0 ]\n    then\n        echo \"NO\"\n    else\n\
    \        local prime=1\n        local prime_flag=0\n        local prime_flag2=0\n\
    \        local prime_flag3=0\n        local prime_flag4=0\n        local prime_flag5=0\n\
    \        local prime_flag6=0\n        local prime_flag7=0\n        local prime_flag8=0\n\
    \        local prime_flag9=0\n        local prime_flag10=0\n        local prime_flag11=0\n\
    \        local prime_flag12=0\n        local prime_flag13=0\n        local prime_flag14=0\n\
    \        local prime_flag15=0\n        local prime_flag16=0\n        local prime_flag17=0\n\
    \        local prime_flag18=0\n        local prime_flag19=0\n        local prime_flag20=0\n\
    \        local prime_flag21=0\n        local prime_flag22=0\n        local prime_flag23=0\n\
    \        local prime_flag24=0\n        local prime_flag25=0\n        local prime_flag26=0\n\
    \        local prime_flag27=0\n        local prime_flag28=0\n        local prime_flag29=0\n\
    \        local prime_flag30=0\n        local prime_flag31=0\n        local prime_flag32=0\n\
    \        local prime_flag33=0\n        local prime_flag34=0\n        local prime_flag35=0\n\
    \        local prime_flag36=0\n        local prime_flag37=0\n        local prime_flag38=0\n\
    \        local prime_flag39=0\n        local prime_flag40=0\n        local prime_flag41=0\n\
    \        local prime_flag42=0\n        local prime_flag43=0\n        local prime_flag44=0\n\
    \        local prime_flag45=0\n        local prime_flag46=0\n        local prime_flag47=0\n\
    \        local prime_flag48=0\n        local prime_flag49=0\n        local prime_flag50=0\n\
    \        local prime_flag51=0\n        local prime_flag52=0\n        local prime_flag53=0\n\
    \        local prime_flag54=0", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local intersect\n    local prime\n\
    \    local prime_flag\n    local prime_flag2\n    local prime_flag3\n    local\
    \ prime_flag4\n    local prime_flag5\n    local prime_flag6\n    local prime_flag7\n\
    \    local prime_flag8\n    local prime_flag9\n    local prime_flag10\n    local\
    \ prime_flag11\n    local prime_flag12\n    local prime_flag13\n    local prime_flag14\n\
    \    local prime_flag15\n    local prime_flag16\n    local prime_flag17\n    local\
    \ prime_flag18\n    local prime_flag19\n    local prime_flag20\n    local prime_flag21\n\
    \    local prime_flag22\n    local prime_flag23\n    local prime_flag24\n    local\
    \ prime_flag25\n    local prime_flag26\n    local prime_flag27\n    local prime_flag28\n\
    \    local prime_flag29\n    local prime_flag30\n    local prime_flag31\n    local\
    \ prime_flag32\n    local prime_flag33\n    local prime_flag34\n    local prime_flag35\n\
    \    local prime_flag36\n    local prime_flag37\n    local prime_flag38\n    local\
    \ prime_flag39\n    local prime_flag40\n    local prime_flag41\n    local prime_flag42\n\
    \    local prime_flag43\n    local prime_flag44\n    local prime_flag45\n    local\
    \ prime_flag46\n    local prime_flag47\n    local prime_flag48\n    local prime_flag49\n\
    \    local prime_flag50\n    local prime_flag51\n    local prime_flag52\n    local\
    \ prime_flag53\n    local prime_flag54\n    local prime_flag55\n    local prime_flag56\n\
    \    local prime_flag57\n    local prime_flag58\n    local prime_flag59\n    local\
    \ prime_flag60\n    local prime_flag61\n    local prime_flag62\n    local prime_flag63\n\
    \    local prime_flag64\n    local prime_flag65\n    local prime_flag66\n    local\
    \ prime_flag67\n    local prime_flag68\n    local prime_flag", "    local interval_1\
    \ interval_2 length_1 length_2 prime_number\n    interval_1=$1\n    interval_2=$2\n\
    \    length_1=$(echo $interval_1 | awk '{print $1}')\n    length_2=$(echo $interval_2\
    \ | awk '{print $1}')\n    prime_number=$(echo $length_1 | awk '{print $1}')\n\
    \    prime_number=$(echo $length_2 | awk '{print $1}')\n    prime_number=$(echo\
    \ $prime_number | awk '{print $1}')\n    prime_number=$(echo $prime_number | awk\
    \ '{print $1}')\n    prime_number=$(echo $prime_number | awk '{print $1}')\n \
    \   prime_number=$(echo $prime_number | awk '{print $1}')\n    prime_number=$(echo\
    \ $prime_number | awk '{print $1}')\n    prime_number=$(echo $prime_number | awk\
    \ '{print $1}')\n    prime_number=$(echo $prime_number | awk '{print $1}')\n \
    \   prime_number=$(echo $prime_number | awk '{print $1}')\n    prime_number=$(echo\
    \ $prime_number | awk '{print $1}')\n    prime_number=$(echo $prime_number | awk\
    \ '{print $1}')\n    prime_number=$(echo $prime_number | awk '{print $1}')\n \
    \   prime_number=$(echo $prime_number | awk '{print $1}')\n    prime_number=$(echo\
    \ $prime_number | awk '{print $1}')\n    prime_number=$(echo $prime_number | awk\
    \ '{print $1}')\n    prime_number=$(echo $prime_number | awk '{print $1}')\n \
    \   prime_number=$(echo $prime_number | awk '{print $1}')\n    prime_number=$(echo\
    \ $prime_number | awk '{print $1}')\n    prime_number=$(echo $prime_number | awk\
    \ '{print $1}')\n    prime_number=$(echo $prime_number | awk '{print $1}')\n \
    \   prime_number=$(echo $prime_number | awk '{print $1}')\n    prime_number=$(echo\
    \ $prime_number | awk '{print $1}')\n    prime_number=$(echo $prime_number | awk\
    \ '{print $1}')\n    prime_number=$(echo $prime_number | awk '{print $1}')\n \
    \   prime_number=$(echo $prime_number | awk '{print $1}')\n    prime_number=$(echo\
    \ $prime_number | awk '{print $", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n", "    local interval_1 interval_2\n    interval_1=( $1 )\n    interval_2=(\
    \ $2 )\n    local length_intersection\n    length_intersection=`expr $(( ${interval_1[1]}\
    \ + ${interval_2[1]} - ${interval_1[0]} - ${interval_2[0]} ))`\n    if [ $length_intersection\
    \ -eq 0 ]\n    then\n        echo \"NO\"\n    else\n        echo \"YES\"\n   \
    \ fi", "    local interval1=$1\n    local interval2=$2\n    local length1\n  \
    \  local length2\n    local prime\n    local prime1\n    local prime2\n    local\
    \ result\n\n    length1=$(echo $interval1 | awk '{print $1}')\n    length2=$(echo\
    \ $interval2 | awk '{print $1}')\n    prime1=$(echo $interval1 | awk '{print $2}')\n\
    \    prime2=$(echo $interval2 | awk '{print $2}')\n\n    if [ $length1 -eq $length2\
    \ ]; then\n        if [ $prime1 -eq $prime2 ]; then\n            result=\"YES\"\
    \n        else\n            result=\"NO\"\n        fi\n    else\n        result=\"\
    NO\"\n    fi\n\n    echo $result", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | awk '{print $1}')\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | awk '{print $1}')\n    if [ \"$length_intersection_1\" -gt\
    \ \"$length_intersection_2\" ]; then\n        echo \"$interval_1\" | awk '{print\
    \ $2}'\n    else\n        echo \"$interval_2\" | awk '{print $2}'\n    fi", " \
    \   local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo \"$interval_2\" |\
    \ wc -w)\n    if [ \"$length_intersection_1\" -gt \"$length_intersection_2\" ];\
    \ then\n        echo \"$interval_1\" | awk '{print $1}'\n    elif [ \"$length_intersection_1\"\
    \ -lt \"$length_intersection_2\" ]; then\n        echo \"$interval_2\" | awk '{print\
    \ $1}'\n    else\n        echo \"$interval_1\" | awk '{print $1}' | sort | uniq\
    \ | wc -l\n        echo \"$interval_2\" | awk '{print $1}' | sort | uniq | wc\
    \ -l\n    fi", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local length\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local prime", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${#interval1} - 1))\n    local length2=$((${#interval2}\
    \ - 1))\n    local start1=$((${interval1[0]}))\n    local end1=$((${interval1[1]}))\n\
    \    local start2=$((${interval2[0]}))\n    local end2=$((${interval2[1]}))\n\
    \    local intersected\n    local prime\n    local prime_flag\n    local prime_flag2\n\
    \    local prime_flag3\n    local prime_flag4\n    local prime_flag5\n    local\
    \ prime_flag6\n    local prime_flag7\n    local prime_flag8\n    local prime_flag9\n\
    \    local prime_flag10\n    local prime_flag11\n    local prime_flag12\n    local\
    \ prime_flag13\n    local prime_flag14\n    local prime_flag15\n    local prime_flag16\n\
    \    local prime_flag17\n    local prime_flag18\n    local prime_flag19\n    local\
    \ prime_flag20\n    local prime_flag21\n    local prime_flag22\n    local prime_flag23\n\
    \    local prime_flag24\n    local prime_flag25\n    local prime_flag26\n    local\
    \ prime_flag27\n    local prime_flag28\n    local prime_flag29\n    local prime_flag30\n\
    \    local prime_flag31\n    local prime_flag32\n    local prime_flag33\n    local\
    \ prime_flag34\n    local prime_flag35\n    local prime_flag36\n    local prime_flag37\n\
    \    local prime_flag38\n    local prime_flag39\n    local prime_flag40\n    local\
    \ prime_flag41\n    local prime_flag42\n    local prime_flag43\n    local prime_flag44\n\
    \    local prime_flag45\n    local prime_flag46\n    local prime_flag47\n    local\
    \ prime_flag48\n    local prime_flag49\n    local prime_flag50\n    local prime_flag51\n\
    \    local prime_flag52\n    local prime_flag53\n    local prime_flag54\n    local\
    \ prime_flag55\n    local prime_flag56\n    local prime_flag57\n    local prime_flag58\n\
    \    local prime_flag59\n    local ", "    local interval_1 interval_2\n    interval_1=(\
    \ $1 )\n    interval_2=( $2 )\n    local length_intersection\n    length_intersection=(\
    \ $(echo \"${interval_1[0]} ${interval_1[1]}\" | bc -l) )\n    local length_1\n\
    \    length_1=( $( echo \"${interval_1[0]}\" | bc -l ) )\n    local length_2\n\
    \    length_2=( $( echo \"${interval_2[0]}\" | bc -l ) )\n    local length_3\n\
    \    length_3=( $( echo \"${interval_1[1]}\" | bc -l ) )\n    local length_4\n\
    \    length_4=( $( echo \"${interval_2[1]}\" | bc -l ) )\n    local length_5\n\
    \    length_5=( $( echo \"${interval_2[0]}\" | bc -l ) )\n    local length_6\n\
    \    length_6=( $( echo \"${interval_1[1]}\" | bc -l ) )\n    local length_7\n\
    \    length_7=( $( echo \"${interval_2[1]}\" | bc -l ) )\n    local length_8\n\
    \    length_8=( $( echo \"${interval_1[0]}\" | bc -l ) )\n    local length_9\n\
    \    length_9=( $( echo \"${interval_2[0]}\" | bc -l ) )\n    local length_10\n\
    \    length_10=( $( echo \"${interval_1[1]}\" | bc -l ) )\n    local length_11\n\
    \    length_11=( $( echo \"${interval_2[1]}\" | bc -l ) )\n    local length_12\n\
    \    length_12=( $( echo \"${interval_1[0]}\" | bc -l ) )\n    local length_13\n\
    \    length_13=( $( echo \"${interval_2[0]}\" | bc -l ) )\n    local length_14\n\
    \    length_14=( $( echo \"${interval_1[1]}\" | bc -l ) )\n    local length_15\n\
    \    length_15=( $( echo \"${interval_2[1]}\" | bc -l ) )\n    local length_16\n\
    \    length_16=( $( echo \"${interval_1[0]}\" | bc -l ) )\n    local length_17\n\
    \    length_17=( $( echo \"${interval_2[0]}\" | bc -l ) )\n    local length_18\n\
    \    length_18=( $( echo \"${interval_1[1]}\" | bc -l ) )\n    local length_19\n\
    \    length_19", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local length\n    local prime\n    local primes\n    local\
    \ primesLength\n    local primesLength2\n    local primesLength2\n    local primesLength3\n\
    \    local primesLength4\n    local primesLength5\n    local primesLength6\n \
    \   local primesLength7\n    local primesLength8\n    local primesLength9\n  \
    \  local primesLength10\n    local primesLength11\n    local primesLength12\n\
    \    local primesLength13\n    local primesLength14\n    local primesLength15\n\
    \    local primesLength16\n    local primesLength17\n    local primesLength18\n\
    \    local primesLength19\n    local primesLength20\n    local primesLength21\n\
    \    local primesLength22\n    local primesLength23\n    local primesLength24\n\
    \    local primesLength25\n    local primesLength26\n    local primesLength27\n\
    \    local primesLength28\n    local primesLength29\n    local primesLength30\n\
    \    local primesLength31\n    local primesLength32\n    local primesLength33\n\
    \    local primesLength34\n    local primesLength35\n    local primesLength36\n\
    \    local primesLength37\n    local primesLength38\n    local primesLength39\n\
    \    local primesLength40\n    local primesLength41\n    local primesLength42\n\
    \    local primesLength43\n    local primesLength44\n    local primesLength45\n\
    \    local primesLength46\n    local primesLength47\n    local primesLength48\n\
    \    local primesLength49\n    local primesLength50\n    local primesLength51\n\
    \    local primesLength52\n    local primesLength53\n    local primesLength54\n\
    \    local primesLength55\n    local primesLength56\n    local primesLength57\n\
    \    local primesLength58\n    local primesLength59\n    local primesLength60\n\
    \    local primesLength61\n    local primesLength62\n    local primesLength63\n\
    \    local primesLength64\n    local primesLength65\n    local primesLength66\n\
    \    local primesLength67\n", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local result\n    local i\n    local\
    \ j\n    local prime\n    local primes\n    local primesCount\n    local primesCount2\n\
    \    local primesCount3\n    local primesCount4\n    local primesCount5\n    local\
    \ primesCount6\n    local primesCount7\n    local primesCount8\n    local primesCount9\n\
    \    local primesCount10\n    local primesCount11\n    local primesCount12\n \
    \   local primesCount13\n    local primesCount14\n    local primesCount15\n  \
    \  local primesCount16\n    local primesCount17\n    local primesCount18\n   \
    \ local primesCount19\n    local primesCount20\n    local primesCount21\n    local\
    \ primesCount22\n    local primesCount23\n    local primesCount24\n    local primesCount25\n\
    \    local primesCount26\n    local primesCount27\n    local primesCount28\n \
    \   local primesCount29\n    local primesCount30\n    local primesCount31\n  \
    \  local primesCount32\n    local primesCount33\n    local primesCount34\n   \
    \ local primesCount35\n    local primesCount36\n    local primesCount37\n    local\
    \ primesCount38\n    local primesCount39\n    local primesCount40\n    local primesCount41\n\
    \    local primesCount42\n    local primesCount43\n    local primesCount44\n \
    \   local primesCount45\n    local primesCount46\n    local primesCount47\n  \
    \  local primesCount48\n    local primesCount49\n    local primesCount50\n   \
    \ local primesCount51\n    local primesCount52\n    local primesCount53\n    local\
    \ primesCount54\n    local primesCount55\n    local primesCount56\n    local primesCount57\n\
    \    local primesCount58\n    local primesCount59\n    local primesCount60\n \
    \   local primesCount61\n    local primesCount62\n    local primesCount63\n  \
    \  local primesCount64\n    local primesCount65\n    local primesCount66\n   \
    \ local primesCount67", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | awk '{print length($1)}')\n\
    \    length_intersection_2=$(echo \"$interval_2\" | awk '{print length($2)}')\n\
    \    if [ $length_intersection_1 -eq $length_intersection_2 ]; then\n        if\
    \ [ $length_intersection_1 -eq 1 ]; then\n            echo \"$interval_1\"\n \
    \       else\n            echo \"$interval_1\"\n        fi\n    else\n       \
    \ echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1\n    local length2\n    local result\n    local i\n    local j\n   \
    \ local k\n    local prime\n    local primes\n    local prime_found\n    local\
    \ prime_found1\n    local prime_found2\n    local prime_found3\n    local prime_found4\n\
    \    local prime_found5\n    local prime_found6\n    local prime_found7\n    local\
    \ prime_found8\n    local prime_found9\n    local prime_found10\n    local prime_found11\n\
    \    local prime_found12\n    local prime_found13\n    local prime_found14\n \
    \   local prime_found15\n    local prime_found16\n    local prime_found17\n  \
    \  local prime_found18\n    local prime_found19\n    local prime_found20\n   \
    \ local prime_found21\n    local prime_found22\n    local prime_found23\n    local\
    \ prime_found24\n    local prime_found25\n    local prime_found26\n    local prime_found27\n\
    \    local prime_found28\n    local prime_found29\n    local prime_found30\n \
    \   local prime_found31\n    local prime_found32\n    local prime_found33\n  \
    \  local prime_found34\n    local prime_found35\n    local prime_found36\n   \
    \ local prime_found37\n    local prime_found38\n    local prime_found39\n    local\
    \ prime_found40\n    local prime_found41\n    local prime_found42\n    local prime_found43\n\
    \    local prime_found44\n    local prime_found45\n    local prime_found46\n \
    \   local prime_found47\n    local prime_found48\n    local prime_found49\n  \
    \  local prime_found50\n    local prime_found51\n    local prime_found52\n   \
    \ local prime_found53\n    local prime_found54\n    local prime_found55\n    local\
    \ prime_found56\n    local prime_found57\n    local prime_found58\n    local prime_found59\n\
    \    local prime_found60\n    local prime_found61\n    local prime_found62\n \
    \   local prime_found63\n    local prime_found64\n    local prime_found65\n  \
    \  local ", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection\n    length_intersection=$(echo \"${interval_1}\"\
    \ | sed 's/ /-/g' | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g'\
    \ | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g'\
    \ | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/\
    \ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g'\
    \ | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g'\
    \ | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/\
    \ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g'\
    \ | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g'\
    \ | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/\
    \ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g'\
    \ | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g'\
    \ | sed 's/-$//g' | sed 's/-/ /g' | sed 's/^-//g' | sed 's/-$//g' | sed 's/-/\
    \ /g' | sed 's/^-//g' | sed 's/-$//g", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | awk '{print $1}')\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | awk '{print $1}')\n    if [ \"$length_intersection_1\" -gt\
    \ \"$length_intersection_2\" ]; then\n        echo \"NO\"\n    else\n        local\
    \ i\n        local j\n        local length_1\n        local length_2\n       \
    \ length_1=$((length_intersection_1 - 1))\n        length_2=$((length_intersection_2\
    \ - 1))\n        local prime_number\n        prime_number=1\n        local prime_number_1\n\
    \        prime_number_1=1\n        local prime_number_2\n        prime_number_2=1\n\
    \        local prime_number_3\n        prime_number_3=1\n        local prime_number_4\n\
    \        prime_number_4=1\n        local prime_number_5\n        prime_number_5=1\n\
    \        local prime_number_6\n        prime_number_6=1\n        local prime_number_7\n\
    \        prime_number_7=1\n        local prime_number_8\n        prime_number_8=1\n\
    \        local prime_number_9\n        prime_number_9=1\n        local prime_number_10\n\
    \        prime_number_10=1\n        local prime_number_11\n        prime_number_11=1\n\
    \        local prime_number_12\n        prime_number_12=1\n        local prime_number_13\n\
    \        prime_number_13=1\n        local prime_number_14\n        prime_number_14=1\n\
    \        local prime_number_15\n        prime_number_15=1\n        local prime_number_16\n\
    \        prime_number_16=1\n        local prime_number_17\n        prime_number_17=1\n\
    \        local prime_number_18\n        prime_number_18=1\n        local prime_number_19\n\
    \        prime_number_19=1\n        local prime_number_20\n        prime_number_20=1\n\
    \        local prime_number_21\n        prime_number_21=1\n        local prime_number_22\n\
    \        prime_number_22=1\n        local prime_number_23\n        prime_number_23=1\n\
    \        local prime_number_24\n        prime_number_24=1\n        local prime_number_25\n\
    \        prime_number_25=1\n        local prime_number_26\n        prime_number_26=1\n\
    \        local prime_number_27\n", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${#interval1} - 1))\n    local length2=$((${#interval2}\
    \ - 1))\n    local start1=$((${interval1[0]}))\n    local end1=$((${interval1[1]}))\n\
    \    local start2=$((${interval2[0]}))\n    local end2=$((${interval2[1]}))\n\
    \    local intersect1=$((${start1} + ${end2}))\n    local intersect2=$((${start2}\
    \ + ${end1}))\n    local intersectLength=$((${intersect1} + ${intersect2}))\n\
    \    if [[ ${intersectLength} -eq ${length1} || ${intersectLength} -eq ${length2}\
    \ ]]; then\n        echo \"NO\"\n    else\n        local primeNumber=true\n  \
    \      for (( i=1; i<${intersectLength}; i++ )); do\n            if [[ ${interval1[i]}\
    \ -le ${interval2[i]} ]]; then\n                primeNumber=false\n          \
    \      break\n            fi\n        done\n        if [[ ${primeNumber} == true\
    \ ]]; then\n            echo \"YES\"\n        else\n            echo \"NO\"\n\
    \        fi\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n  \
    \  interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [ \"$length_intersection\" == \"\"\
    \ ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "   \
    \ local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local result\n    local start1\n    local end1\n    local start2\n    local\
    \ end2\n    local flag\n\n    length1=$(expr ${interval1[1]} - ${interval1[0]})\n\
    \    length2=$(expr ${interval2[1]} - ${interval2[0]})\n    if [[ ${length1} -eq\
    \ ${length2} ]]; then\n        result=\"NO\"\n    else\n        result=\"YES\"\
    \n    fi\n    if [[ ${length1} -le ${length2} ]]; then\n        start1=$(expr\
    \ ${interval1[0]})\n        end1=$(expr ${interval1[1]})\n        start2=$(expr\
    \ ${interval2[0]})\n        end2=$(expr ${interval2[1]})\n        if [[ ${start1}\
    \ -le ${end2} ]]; then\n            if [[ ${start2} -le ${end1} ]]; then\n   \
    \             if [[ ${start1} -le ${end2} ]]; then\n                    if [[\
    \ ${start2} -le ${end1} ]]; then\n                        if [[ ${interval1[0]}\
    \ -le ${interval2[1]} ]]; then\n                            if [[ ${interval1[1]}\
    \ -le ${interval2[0]} ]]; then\n                                flag=0\n     \
    \                           for (( i=1; i<${length1}; i++ )); do\n           \
    \                         for (( j=1; j<${length2}; j++ )); do\n             \
    \                           if [[ ${interval1[0]} -le ${interval2[j]} ]]; then\n\
    \                                            flag=1\n                        \
    \                    break\n                                        fi\n     \
    \                               done\n                                    if [[\
    \ ${flag} = 0 ]]; then\n                                        break\n      \
    \                              fi\n                                done\n    \
    \                            if [[ ${flag} = 0 ]]; then\n                    \
    \                if [[ ${interval1[0]} -eq ${interval2[0]} ]]; then\n        \
    \                                if [[ ${interval1[1]} -eq ${interval2[1]} ]];\
    \ then\n                                            result=\"NO\"\n          \
    \                              else\n                                        \
    \    result=\"YES\"\n                                        fi\n            \
    \                        else\n                                        result=\"\
    YES\"\n                                    fi\n                              \
    \  fi\n                            fi\n                        fi\n          \
    \          fi\n                fi\n            fi\n        fi\n    fi\n    echo\
    \ \"$result\"", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=\n    local prime_flag=\n    local prime_flag2=\n    local prime_flag3=\n\
    \    local prime_flag4=\n    local prime_flag5=\n    local prime_flag6=\n    local\
    \ prime_flag7=\n    local prime_flag8=\n    local prime_flag9=\n    local prime_flag10=\n\
    \    local prime_flag11=\n    local prime_flag12=\n    local prime_flag13=\n \
    \   local prime_flag14=\n    local prime_flag15=\n    local prime_flag16=\n  \
    \  local prime_flag17=\n    local prime_flag18=\n    local prime_flag19=\n   \
    \ local prime_flag20=\n    local prime_flag21=\n    local prime_flag22=\n    local\
    \ prime_flag23=\n    local prime_flag24=\n    local prime_flag25=\n    local prime_flag26=\n\
    \    local prime_flag27=\n    local prime_flag28=\n    local prime_flag29=\n \
    \   local prime_flag30=\n    local prime_flag31=\n    local prime_flag32=\n  \
    \  local prime_flag33=\n    local prime_flag34=\n    local prime_flag35=\n   \
    \ local prime_flag36=\n    local prime_flag37=\n    local prime_flag38=\n    local\
    \ prime_flag39=\n    local prime_flag40=\n    local prime_flag41=\n    local prime_flag42=\n\
    \    local prime_flag43=\n    local prime_flag44=\n    local prime_flag45=\n \
    \   local prime_flag46=\n    local prime_flag47=\n    local prime_flag48=\n  \
    \  local prime_flag49=\n    local prime_flag50=\n    local prime_flag51=\n   \
    \ local prime_flag52=\n    local prime_flag53=\n    local prime_flag54=\n    local\
    \ prime_flag55=\n    local prime_flag56=\n    local prime_", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1\n    local length2\n    local result\n\
    \    local i\n    local j\n    local prime\n    local primes\n    local primesCount\n\
    \    local primesCount2\n    local primesCount3\n    local primesCount4\n    local\
    \ primesCount5\n    local primesCount6\n    local primesCount7\n    local primesCount8\n\
    \    local primesCount9\n    local primesCount10\n    local primesCount11\n  \
    \  local primesCount12\n    local primesCount13\n    local primesCount14\n   \
    \ local primesCount15\n    local primesCount16\n    local primesCount17\n    local\
    \ primesCount18\n    local primesCount19\n    local primesCount20\n    local primesCount21\n\
    \    local primesCount22\n    local primesCount23\n    local primesCount24\n \
    \   local primesCount25\n    local primesCount26\n    local primesCount27\n  \
    \  local primesCount28\n    local primesCount29\n    local primesCount30\n   \
    \ local primesCount31\n    local primesCount32\n    local primesCount33\n    local\
    \ primesCount34\n    local primesCount35\n    local primesCount36\n    local primesCount37\n\
    \    local primesCount38\n    local primesCount39\n    local primesCount40\n \
    \   local primesCount41\n    local primesCount42\n    local primesCount43\n  \
    \  local primesCount44\n    local primesCount45\n    local primesCount46\n   \
    \ local primesCount47\n    local primesCount48\n    local primesCount49\n    local\
    \ primesCount50\n    local primesCount51\n    local primesCount52\n    local primesCount53\n\
    \    local primesCount54\n    local primesCount55\n    local primesCount56\n \
    \   local primesCount57\n    local primesCount58\n    local primesCount59\n  \
    \  local primesCount60\n    local primesCount61\n    local primesCount62\n   \
    \ local primesCount63\n    local primesCount64\n    local primesCount65\n    local\
    \ primesCount66\n    local primesCount67", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2[@]}\")\n    if [ \"$length_intersection\" -eq\
    \ 0 ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    if [ $length -eq 0 ]; then\n        echo \"NO\"\n    else\n        local\
    \ i\n        for i in $(seq 0 $((length-1)); do\n            if [ $((${interval1[0]}+i))\
    \ -le $((${interval2[1]}+i)) ]; then\n                local j\n              \
    \  for j in $(seq 0 $((length-1)); do\n                    if [ $((${interval1[1]}+j))\
    \ -le $((${interval2[0]}+j)) ]; then\n                        local k\n      \
    \                  for k in $(seq 0 $((length-1)); do\n                      \
    \      if [ $((${interval1[0]}+k)) -le $((${interval2[1]}+k)) ]; then\n      \
    \                          local l\n                                for l in $(seq\
    \ 0 $((length-1)); do\n                                    if [ $((${interval1[1]}+l))\
    \ -le $((${interval2[0]}+l)) ]; then\n                                       \
    \ local m\n                                        for m in $(seq 0 $((length-1));\
    \ do\n                                            if [ $((${interval1[0]}+m))\
    \ -le $((${interval2[1]}+m)) ]; then\n                                       \
    \         local n\n                                                for n in $(seq\
    \ 0 $((length-1)); do\n                                                    if\
    \ [ $((${interval1[1]}+n)) -le $((${interval2[0]}+n)) ]; then\n              \
    \                                          local o\n                         \
    \                               for o in $(seq 0 $((length-1)); do\n         \
    \                                                   if [ $((${interval1[0]}+o))\
    \ -le $((${interval2[1]}+o)) ]; then\n                                       \
    \                         local p\n                                          \
    \                      for p in $(seq 0 $((length-1)); do\n                  \
    \                                                  if [ $((${interval1[1]}+p))\
    \ -le $((${interval2[0]}+p)) ]; then\n                                       \
    \                                 local q\n                                  \
    \                                      for q in $(seq 0 $((length-1)); do\n  \
    \                                                                          if\
    \ [ $((${interval1[0]}+q)) -le $((${interval2[1]}+q)) ]; then\n              \
    \                                                                  local r\n \
    \                                                                            \
    \   for r in $(seq 0 $((length-1)); do\n                                     \
    \                                               if [ $((${interval1[1]}+r)) -le\
    \ $((${interval2[0]}+r)) ]; then\n                                           \
    \                                             local s\n                      \
    \                                                                  for s in $(seq ",
  "    local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local result\n    local i\n    local j\n    local prime\n    local primes\n\
    \    local primesCount\n    local primesCount2\n    local primesCount3\n    local\
    \ primesCount4\n    local primesCount5\n    local primesCount6\n    local primesCount7\n\
    \    local primesCount8\n    local primesCount9\n    local primesCount10\n   \
    \ local primesCount11\n    local primesCount12\n    local primesCount13\n    local\
    \ primesCount14\n    local primesCount15\n    local primesCount16\n    local primesCount17\n\
    \    local primesCount18\n    local primesCount19\n    local primesCount20\n \
    \   local primesCount21\n    local primesCount22\n    local primesCount23\n  \
    \  local primesCount24\n    local primesCount25\n    local primesCount26\n   \
    \ local primesCount27\n    local primesCount28\n    local primesCount29\n    local\
    \ primesCount30\n    local primesCount31\n    local primesCount32\n    local primesCount33\n\
    \    local primesCount34\n    local primesCount35\n    local primesCount36\n \
    \   local primesCount37\n    local primesCount38\n    local primesCount39\n  \
    \  local primesCount40\n    local primesCount41\n    local primesCount42\n   \
    \ local primesCount43\n    local primesCount44\n    local primesCount45\n    local\
    \ primesCount46\n    local primesCount47\n    local primesCount48\n    local primesCount49\n\
    \    local primesCount50\n    local primesCount51\n    local primesCount52\n \
    \   local primesCount53\n    local primesCount54\n    local primesCount55\n  \
    \  local primesCount56\n    local primesCount57\n    local primesCount58\n   \
    \ local primesCount59\n    local primesCount60\n    local primesCount61\n    local\
    \ primesCount62\n    local primesCount63\n    local primesCount64\n    local primesCount65\n\
    \    local primesCount66\n    local primesCount67", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${#interval1} - 1))\n    local length2=$((${#interval2}\
    \ - 1))\n    local start1=$((${interval1[0]}))\n    local end1=$((${interval1[1]}))\n\
    \    local start2=$((${interval2[0]}))\n    local end2=$((${interval2[1]}))\n\
    \    local length_intersection=$((${end1} - ${start1} + ${end2} - ${start2}))\n\
    \    local prime_number=$((${length_intersection} % ${length1} + ${length2} -\
    \ ${length_intersection} % ${length2}))\n    local prime_number_string=$((${prime_number}\
    \ + 1))\n    if [[ ${prime_number} -eq 0 ]]; then\n        echo \"NO\"\n    else\n\
    \        echo \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    if [ $length_intersection_1 -eq $length_intersection_2\
    \ ]; then\n        local length_1 length_2 length_length_1 length_length_2 length_length_length_1\
    \ length_length_length_2 length_length_length_length_1 length_length_length_length_2\
    \ length_length_length_length_length_1 length_length_length_length_length_2 length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_2 length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_2 length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_2 length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_2 length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_2 length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_", " \
    \   local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2}\")\n    if [[ $length_intersection -eq 0 ]]; then\n        echo\
    \ \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ $interval_1 $interval_2)\n    if [ $length_intersection -eq 0 ]; then\n    \
    \    echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${#interval1} + 1))\n    local length2=$((${#interval2}\
    \ + 1))\n    local length_intersection=$((length1 - length2))\n    local prime_number\n\
    \    local prime_number_flag\n    local prime_number_flag2\n    local prime_number_flag3\n\
    \    local prime_number_flag4\n    local prime_number_flag5\n    local prime_number_flag6\n\
    \    local prime_number_flag7\n    local prime_number_flag8\n    local prime_number_flag9\n\
    \    local prime_number_flag10\n    local prime_number_flag11\n    local prime_number_flag12\n\
    \    local prime_number_flag13\n    local prime_number_flag14\n    local prime_number_flag15\n\
    \    local prime_number_flag16\n    local prime_number_flag17\n    local prime_number_flag18\n\
    \    local prime_number_flag19\n    local prime_number_flag20\n    local prime_number_flag21\n\
    \    local prime_number_flag22\n    local prime_number_flag23\n    local prime_number_flag24\n\
    \    local prime_number_flag25\n    local prime_number_flag26\n    local prime_number_flag27\n\
    \    local prime_number_flag28\n    local prime_number_flag29\n    local prime_number_flag30\n\
    \    local prime_number_flag31\n    local prime_number_flag32\n    local prime_number_flag33\n\
    \    local prime_number_flag34\n    local prime_number_flag35\n    local prime_number_flag36\n\
    \    local prime_number_flag37\n    local prime_number_flag38\n    local prime_number_flag39\n\
    \    local prime_number_flag40\n    local prime_number_flag41\n    local prime_number_flag42\n\
    \    local prime_number_flag43\n    local prime_number_flag44\n    local prime_number_flag45\n\
    \    local prime_number_flag46\n    local prime_number_flag47\n    local prime_number_flag48\n\
    \    local prime_number_flag49\n    local prime_number_flag50\n    local prime_number_flag51\n\
    \    local prime_number_flag52\n    local prime_number_flag53\n    local prime_number_flag54\n\
    \    local prime_number_flag55\n    local prime_number_flag56\n    local prime_number_flag57",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval_1 interval_2\n   \
    \ interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\n\
    \    length_intersection_1=$(echo \"$interval_1 | cut -d ' ' -f 1\"| wc -w)\n\
    \    length_intersection_2=$(echo \"$interval_2 | cut -d ' ' -f 1\"| wc -w)\n\
    \    if [ \"$length_intersection_1\" -gt \"$length_intersection_2\" ]; then\n\
    \        echo \"$interval_1\" | cut -d ' ' -f 2\n    elif [ \"$length_intersection_1\"\
    \ -lt \"$length_intersection_2\" ]; then\n        echo \"$interval_2\" | cut -d\
    \ ' ' -f 2\n    else\n        echo \"NO\"\n    fi", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [[ \"$length_intersection\" == \"\
    0\" ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2}\")\n    if [ \"$length_intersection\" -eq \"0\" ]; then\n      \
    \  echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\
    \ prime_number\n    length_interval=$(echo \"${interval_1}\" \"$interval_2\" |\
    \ awk '{print $1-$2}')\n    prime_number=$((length_interval % 2))\n    if [ \"\
    $prime_number\" -eq 0 ]; then\n        echo \"NO\"\n    else\n        echo \"\
    YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local result\n    local i\n    local j\n    local prime\n\
    \    local primes\n    local prime_found\n    local prime_found1\n    local prime_found2\n\
    \    local prime_found3\n    local prime_found4\n    local prime_found5\n    local\
    \ prime_found6\n    local prime_found7\n    local prime_found8\n    local prime_found9\n\
    \    local prime_found10\n    local prime_found11\n    local prime_found12\n \
    \   local prime_found13\n    local prime_found14\n    local prime_found15\n  \
    \  local prime_found16\n    local prime_found17\n    local prime_found18\n   \
    \ local prime_found19\n    local prime_found20\n    local prime_found21\n    local\
    \ prime_found22\n    local prime_found23\n    local prime_found24\n    local prime_found25\n\
    \    local prime_found26\n    local prime_found27\n    local prime_found28\n \
    \   local prime_found29\n    local prime_found30\n    local prime_found31\n  \
    \  local prime_found32\n    local prime_found33\n    local prime_found34\n   \
    \ local prime_found35\n    local prime_found36\n    local prime_found37\n    local\
    \ prime_found38\n    local prime_found39\n    local prime_found40\n    local prime_found41\n\
    \    local prime_found42\n    local prime_found43\n    local prime_found44\n \
    \   local prime_found45\n    local prime_found46\n    local prime_found47\n  \
    \  local prime_found48\n    local prime_found49\n    local prime_found50\n   \
    \ local prime_found51\n    local prime_found52\n    local prime_found53\n    local\
    \ prime_found54\n    local prime_found55\n    local prime_found56\n    local prime_found57\n\
    \    local prime_found58\n    local prime_found59\n    local prime_found60\n \
    \   local prime_found61\n    local prime_found62\n    local prime_found63\n  \
    \  local prime_found64\n    local prime_found65\n    local prime_found66", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=true\n    local prime_numbers=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()\n    local prime_numbers_count=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()\n    local prime_numbers_count=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()\n    local prime_numbers_count=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()\n    local prime_numbers_count=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()\n    local prime_numbers_count=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()\n    local prime_numbers_count=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()\n    local prime_numbers_count=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()\n    local prime_numbers_count=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()\n    local prime_numbers_count=()\n    local prime_numbers_count=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count=()\n    local\
    \ prime_numbers_count=()", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | awk '{print $1}')\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | awk '{print $1}')\n    if [ \"$length_intersection_1\" -gt\
    \ \"$length_intersection_2\" ]; then\n        echo \"NO\"\n    else\n        echo\
    \ \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2\n    length_intersection_1=$(expr\
    \ ${interval_1}[1] - ${interval_1}[0])\n    length_intersection_2=$(expr ${interval_2}[1]\
    \ - ${interval_2}[0])\n    if [[ ${length_intersection_1} -eq ${length_intersection_2}\
    \ ]]; then\n        if [[ ${interval_1}[0] <= ${interval_2}[0] ]]; then\n    \
    \        if [[ ${interval_1}[1] >= ${interval_2}[1] ]]; then\n               \
    \ echo \"YES\"\n            else\n                echo \"NO\"\n            fi\n\
    \        else\n            echo \"NO\"\n        fi\n    else\n        echo \"\
    NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local result\n    local i\n    local\
    \ j\n    local prime\n    local primes\n    local prime_found\n    local prime_found1\n\
    \    local prime_found2\n    local prime_found3\n    local prime_found4\n    local\
    \ prime_found5\n    local prime_found6\n    local prime_found7\n    local prime_found8\n\
    \    local prime_found9\n    local prime_found10\n    local prime_found11\n  \
    \  local prime_found12\n    local prime_found13\n    local prime_found14\n   \
    \ local prime_found15\n    local prime_found16\n    local prime_found17\n    local\
    \ prime_found18\n    local prime_found19\n    local prime_found20\n    local prime_found21\n\
    \    local prime_found22\n    local prime_found23\n    local prime_found24\n \
    \   local prime_found25\n    local prime_found26\n    local prime_found27\n  \
    \  local prime_found28\n    local prime_found29\n    local prime_found30\n   \
    \ local prime_found31\n    local prime_found32\n    local prime_found33\n    local\
    \ prime_found34\n    local prime_found35\n    local prime_found36\n    local prime_found37\n\
    \    local prime_found38\n    local prime_found39\n    local prime_found40\n \
    \   local prime_found41\n    local prime_found42\n    local prime_found43\n  \
    \  local prime_found44\n    local prime_found45\n    local prime_found46\n   \
    \ local prime_found47\n    local prime_found48\n    local prime_found49\n    local\
    \ prime_found50\n    local prime_found51\n    local prime_found52\n    local prime_found53\n\
    \    local prime_found54\n    local prime_found55\n    local prime_found56\n \
    \   local prime_found57\n    local prime_found58\n    local prime_found59\n  \
    \  local prime_found60\n    local prime_found61\n    local prime_found62\n   \
    \ local prime_found63\n    local prime_found64\n    local prime_found65\n    local\
    \ prime_found66", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection\n    length_intersection=$(intersect \"$interval_1\"\
    \ \"${interval_2}\")\n    if [[ $length_intersection -eq 0 ]]; then\n        echo\
    \ \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n \
    \   local interval2=$2\n    local length1\n    local length2\n    local length\n\
    \    local prime\n    local result\n    local i\n    local j\n    local k\n  \
    \  local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    local length_1 length_2 length_of_intersection\n\
    \    length_1=$(echo \"$interval_1\" | wc -w)\n    length_2=$(echo \"$interval_2\"\
    \ | wc -w)\n    length_of_intersection=$((length_intersection_1 + length_intersection_2))\n\
    \    if [ \"$length_of_intersection\" -eq \"$length_1\" ]; then\n        echo\
    \ \"NO\"\n    elif [ \"$length_of_intersection\" -eq \"$length_2\" ]; then\n \
    \       echo \"NO\"\n    elif [ \"$length_of_intersection\" -eq \"$length_1\"\
    \ -o \"$length_of_intersection\" -eq \"$length_2\" ]; then\n        echo \"YES\"\
    \n    else\n        echo \"NO\"\n    fi", "    local interval_1 interval_2\n \
    \   interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\n\
    \    length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    local length_1 length_2 length_length_1 length_length_2\
    \ length_length_length_1 length_length_length_2 length_length_length_length_1\
    \ length_length_length_length_2 length_length_length_length_length_1 length_length_length_length_length_2\
    \ length_length_length_length_length_length_1 length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_2 length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"${interval_1}\" | wc -w)\n    length_intersection_2=$(echo \"${interval_2}\"\
    \ | wc -w)\n    if [[ ${length_intersection_1} -eq ${length_intersection_2} ]];\
    \ then\n        local interval_1_arr interval_2_arr\n        interval_1_arr=$(echo\
    \ \"${interval_1}\" | tr '\\n' ' ')\n        interval_2_arr=$(echo \"${interval_2}\"\
    \ | tr '\\n' ' ')\n        local length_arr prime_arr prime_length_arr\n     \
    \   length_arr=$(echo \"${interval_1_arr}\" | wc -w)\n        prime_arr=()\n \
    \       prime_length_arr=()\n        local prime_length_arr_index prime_arr_index\n\
    \        prime_length_arr_index=0\n        prime_arr_index=0\n        while [[\
    \ ${prime_length_arr_index} -lt ${length_arr} ]]; do\n            prime_length_arr[$prime_length_arr_index]=$(echo\
    \ \"${interval_1_arr[$prime_arr_index]}\" | wc -w)\n            prime_arr[$prime_arr_index]=$(echo\
    \ \"${interval_2_arr[$prime_arr_index]}\" | wc -w)\n            prime_arr_index=$((prime_arr_index\
    \ + 1))\n        done\n        prime_length_arr_index=$((prime_length_arr_index\
    \ + 1))\n        prime_arr_index=$((prime_arr_index + 1))\n        local prime_length_arr_index\
    \ prime_arr_index\n        prime_length_arr_index=0\n        prime_arr_index=0\n\
    \        while [[ ${prime_length_arr_index} -lt ${length_arr} ]]; do\n       \
    \     if [[ ${prime_arr[$prime_arr_index]} -eq ${prime_length_arr[$prime_length_arr_index]}\
    \ ]]; then\n                prime_length_arr_index=$((prime_length_arr_index +\
    \ 1))\n            else\n                prime_arr_index=$((prime_arr_index +\
    \ 1))\n            fi\n        done\n        prime_length_arr_index=$((prime_length_arr_index\
    \ + 1))\n        prime_arr_index=$((prime_arr_index + 1))\n        local prime_length_arr_index\
    \ prime_arr_index\n        prime_length_arr_index=0\n        prime_arr_index=0\n\
    \        while [[ ${", "    local interval_1 interval_2 length prime_number\n\
    \    interval_1=$1\n    interval_2=$2\n    length=$(echo \"$interval_1\" \"$interval_2\"\
    \ | wc -w)\n    prime_number=$((length-1))\n    if [ $prime_number -eq 0 ]; then\n\
    \        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    if [ $length -eq 0 ]\n    then\n        echo \"NO\"\n    else\n        local\
    \ prime=1\n        local prime_flag=0\n        local prime_flag2=0\n        local\
    \ prime_flag3=0\n        local prime_flag4=0\n        local prime_flag5=0\n  \
    \      local prime_flag6=0\n        local prime_flag7=0\n        local prime_flag8=0\n\
    \        local prime_flag9=0\n        local prime_flag10=0\n        local prime_flag11=0\n\
    \        local prime_flag12=0\n        local prime_flag13=0\n        local prime_flag14=0\n\
    \        local prime_flag15=0\n        local prime_flag16=0\n        local prime_flag17=0\n\
    \        local prime_flag18=0\n        local prime_flag19=0\n        local prime_flag20=0\n\
    \        local prime_flag21=0\n        local prime_flag22=0\n        local prime_flag23=0\n\
    \        local prime_flag24=0\n        local prime_flag25=0\n        local prime_flag26=0\n\
    \        local prime_flag27=0\n        local prime_flag28=0\n        local prime_flag29=0\n\
    \        local prime_flag30=0\n        local prime_flag31=0\n        local prime_flag32=0\n\
    \        local prime_flag33=0\n        local prime_flag34=0\n        local prime_flag35=0\n\
    \        local prime_flag36=0\n        local prime_flag37=0\n        local prime_flag38=0\n\
    \        local prime_flag39=0\n        local prime_flag40=0\n        local prime_flag41=0\n\
    \        local prime_flag42=0\n        local prime_flag43=0\n        local prime_flag44=0\n\
    \        local prime_flag45=0\n        local prime_flag46=0\n        local prime_flag47=0\n\
    \        local prime_flag48=0\n        local prime_flag49=0\n        local prime_flag50=0\n\
    \        local prime_flag51=0\n        local prime_flag52=0\n        local prime_flag53=0\n\
    \        local prime_flag54=0", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    local result\n\
    \    local i\n    local j\n    local k\n    local prime\n    local primes\n  \
    \  local prime_found\n    local prime_found2\n    local prime_found3\n    local\
    \ prime_found4\n    local prime_found5\n    local prime_found6\n    local prime_found7\n\
    \    local prime_found8\n    local prime_found9\n    local prime_found10\n   \
    \ local prime_found11\n    local prime_found12\n    local prime_found13\n    local\
    \ prime_found14\n    local prime_found15\n    local prime_found16\n    local prime_found17\n\
    \    local prime_found18\n    local prime_found19\n    local prime_found20\n \
    \   local prime_found21\n    local prime_found22\n    local prime_found23\n  \
    \  local prime_found24\n    local prime_found25\n    local prime_found26\n   \
    \ local prime_found27\n    local prime_found28\n    local prime_found29\n    local\
    \ prime_found30\n    local prime_found31\n    local prime_found32\n    local prime_found33\n\
    \    local prime_found34\n    local prime_found35\n    local prime_found36\n \
    \   local prime_found37\n    local prime_found38\n    local prime_found39\n  \
    \  local prime_found40\n    local prime_found41\n    local prime_found42\n   \
    \ local prime_found43\n    local prime_found44\n    local prime_found45\n    local\
    \ prime_found46\n    local prime_found47\n    local prime_found48\n    local prime_found49\n\
    \    local prime_found50\n    local prime_found51\n    local prime_found52\n \
    \   local prime_found53\n    local prime_found54\n    local prime_found55\n  \
    \  local prime_found56\n    local prime_found57\n    local prime_found58\n   \
    \ local prime_found59\n    local prime_found60\n    local prime_found61\n    local\
    \ prime", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    if [[ ${length1} -eq ${length2} ]]; then\n        local length=$((${length1}\
    \ + ${length2}))\n        if [[ ${length} -eq 1 ]]; then\n            echo \"\
    NO\"\n        else\n            echo \"YES\"\n        fi\n    else\n        echo\
    \ \"NO\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2 length_1 length_2\n   \
    \ length_intersection_1=$(expr ${interval_1}[1] - ${interval_1}[0] + 1)\n    length_intersection_2=$(expr\
    \ ${interval_2}[1] - ${interval_2}[0] + 1)\n    length_1=$(expr ${interval_1}[1]\
    \ - ${interval_1}[0] + 1)\n    length_2=$(expr ${interval_2}[1] - ${interval_2}[0]\
    \ + 1)\n    if [ $length_intersection_1 -eq $length_intersection_2 ]; then\n \
    \       if [ $length_1 -eq $length_2 ]; then\n            if [ $length_intersection_1\
    \ -eq 1 ]; then\n                echo \"YES\"\n            else\n            \
    \    echo \"NO\"\n            fi\n        else\n            echo \"NO\"\n    \
    \    fi\n    else\n        echo \"NO\"\n    fi", "    local a b\n    local len\n\
    \    local i\n    local j\n    local prime\n    local primes\n    local result\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp96\n    local tmp", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(echo\
    \ \"$interval_1\" \"$interval_2\" | sort -n | uniq -c | sort -nr | head -1)\n\
    \    if [[ \"$length_intersection\" -eq 1 ]]; then\n        echo \"NO\"\n    else\n\
    \        echo \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    local prime=true\n\
    \    local prime_flag=false\n    local prime_flag2=false\n    local prime_flag3=false\n\
    \    local prime_flag4=false\n    local prime_flag5=false\n    local prime_flag6=false\n\
    \    local prime_flag7=false\n    local prime_flag8=false\n    local prime_flag9=false\n\
    \    local prime_flag10=false\n    local prime_flag11=false\n    local prime_flag12=false\n\
    \    local prime_flag13=false\n    local prime_flag14=false\n    local prime_flag15=false\n\
    \    local prime_flag16=false\n    local prime_flag17=false\n    local prime_flag18=false\n\
    \    local prime_flag19=false\n    local prime_flag20=false\n    local prime_flag21=false\n\
    \    local prime_flag22=false\n    local prime_flag23=false\n    local prime_flag24=false\n\
    \    local prime_flag25=false\n    local prime_flag26=false\n    local prime_flag27=false\n\
    \    local prime_flag28=false\n    local prime_flag29=false\n    local prime_flag30=false\n\
    \    local prime_flag31=false\n    local prime_flag32=false\n    local prime_flag33=false\n\
    \    local prime_flag34=false\n    local prime_flag35=false\n    local prime_flag36=false\n\
    \    local prime_flag37=false\n    local prime_flag38=false\n    local prime_flag39=false\n\
    \    local prime_flag40=false\n    local prime_flag41=false\n    local prime_flag42=false\n\
    \    local prime_flag43=false\n    local prime_flag44=false\n    local prime_flag45=false\n\
    \    local prime_flag46=false\n    local prime_flag47=false\n    local prime_flag48=false\n\
    \    local prime_flag49=false\n    local prime_flag50=false\n    ", "    local\
    \ interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n\
    \    local length2=$((${interval2[1]}+1))\n    local length_intersection=$((length1+length2))\n\
    \    local length_prime=$((length_intersection/2))\n    local prime_number=$((length_prime))\n\
    \    local prime_number_string=$((${prime_number}+1))\n    local prime_number_string2=$((${prime_number_string}+1))\n\
    \    local prime_number_string3=$((${prime_number_string2}+1))\n    local prime_number_string4=$((${prime_number_string3}+1))\n\
    \    local prime_number_string5=$((${prime_number_string4}>${prime_number_string}?${prime_number_string}:${prime_number_string2}))\n\
    \    local prime_number_string6=$((${prime_number_string5}>${prime_number_string2}?${prime_number_string2}:${prime_number_string3}))\n\
    \    local prime_number_string7=$((${prime_number_string6}>${prime_number_string3}?${prime_number_string3}:${prime_number_string4}))\n\
    \    local prime_number_string8=$((${prime_number_string7}>${prime_number_string4}?${prime_number_string4}:${prime_number_string5}))\n\
    \    local prime_number_string9=$((${prime_number_string8}>${prime_number_string5}?${prime_number_string5}:${prime_number_string6}))\n\
    \    local prime_number_string10=$((${prime_number_string9}>${prime_number_string6}?${prime_number_string6}:${prime_number_string7}))\n\
    \    local prime_number_string11=$((${prime_number_string10}>${prime_number_string7}?${prime_number_string7}:${prime_number_string8}))\n\
    \    local prime_number_string12=$((${prime_number_string11}>${prime_number_string8}?${prime_number_string8}:${prime_number_string9}))\n\
    \    local prime_number_string13=$((${prime_number_string12}>${prime_number_string9}?${prime_number_string9}:${prime_number_string10}))\n\
    \    local prime_number_string14=$((${prime_number_string13}>${prime_number_",
  "    local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local length\n    local prime\n    local primes\n    local i\n    local j\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection\n    length_intersection=$(echo \"${interval_1}${interval_2}\"\
    \ | wc -w)\n    if [[ ${length_intersection} -eq 0 ]]; then\n        echo \"NO\"\
    \n    else\n        echo \"YES\"\n    fi", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\n\
    \    length_intersection_1=$(echo $interval_1 | wc -w)\n    length_intersection_2=$(echo\
    \ $interval_2 | wc -w)\n    local length_1 length_2 length_length_1 length_length_2\
    \ length_length_length_1 length_length_length_2 length_length_length_length_1\
    \ length_length_length_length_2 length_length_length_length_length_1 length_length_length_length_length_2\
    \ length_length_length_length_length_length_1 length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_length_",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2}\")\n    if [ \"$length_intersection\" == \"\" ]; then\n        echo\
    \ \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\
    \ length_1 length_2\n    length_intersection_1=$(expr ${interval_1}[1] - ${interval_1}[0]\
    \ + 1)\n    length_intersection_2=$(expr ${interval_2}[1] - ${interval_2}[0] +\
    \ 1)\n    length_1=$(expr ${interval_1}[1] - ${interval_1}[0] + 1)\n    length_2=$(expr\
    \ ${interval_2}[1] - ${interval_2}[0] + 1)\n    if [ ${length_intersection_1}\
    \ -eq ${length_intersection_2} ]; then\n        if [ ${length_1} -eq ${length_2}\
    \ ]; then\n            if [ ${length_intersection_1} -eq ${length_1} ]; then\n\
    \                if [ ${interval_1}[0] -le ${interval_2}[1] ]; then\n        \
    \            if [ ${interval_1}[1] -le ${interval_2}[0] ]; then\n            \
    \            echo \"YES\"\n                    else\n                        echo\
    \ \"NO\"\n                    fi\n                else\n                    echo\
    \ \"NO\"\n                fi\n            else\n                echo \"NO\"\n\
    \            fi\n        else\n            echo \"NO\"\n        fi\n    else\n\
    \        echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local interval\n    local start\n    local end\n    local\
    \ start1\n    local end1\n    local start2\n    local end2\n    local start3\n\
    \    local end3\n    local start4\n    local end4\n    local start5\n    local\
    \ end5\n    local start6\n    local end6\n    local start7\n    local end7\n \
    \   local start8\n    local end8\n    local start9\n    local end9\n    local\
    \ start10\n    local end10\n    local start11\n    local end11\n    local start12\n\
    \    local end12\n    local start13\n    local end13\n    local start14\n    local\
    \ end14\n    local start15\n    local end15\n    local start16\n    local end16\n\
    \    local start17\n    local end17\n    local start18\n    local end18\n    local\
    \ start19\n    local end19\n    local start20\n    local end20\n    local start21\n\
    \    local end21\n    local start22\n    local end22\n    local start23\n    local\
    \ end23\n    local start24\n    local end24\n    local start25\n    local end25\n\
    \    local start26\n    local end26\n    local start27\n    local end27\n    local\
    \ start28\n    local end28\n    local start29\n    local end29\n    local start30\n\
    \    local end30\n    local start31\n    local end31\n    local start32\n    local\
    \ end32\n    local start33\n    local end33\n    local start34\n    local end34\n\
    \    local start35\n    local end35\n    local start36\n    local end36\n    local\
    \ start37\n    local end37\n    local start38\n    local end38\n    local start39\n\
    \    local end39\n    local start40\n    local end40\n    local start41\n    local\
    \ end41\n    local start42\n    local end42\n    local start43\n    local end43\n\
    \    local start44\n    local end44\n    local start45\n    local end45\n    local\
    \ start46\n    local end46\n    local start47", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2[@]}\")\n    if [ \"$length_intersection\" -eq\
    \ 0 ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((${length1} + ${length2}))\n    local prime_number=0\n   \
    \ local prime_number_flag=0\n    local prime_number_flag2=0\n    local prime_number_flag3=0\n\
    \    local prime_number_flag4=0\n    local prime_number_flag5=0\n    local prime_number_flag6=0\n\
    \    local prime_number_flag7=0\n    local prime_number_flag8=0\n    local prime_number_flag9=0\n\
    \    local prime_number_flag10=0\n    local prime_number_flag11=0\n    local prime_number_flag12=0\n\
    \    local prime_number_flag13=0\n    local prime_number_flag14=0\n    local prime_number_flag15=0\n\
    \    local prime_number_flag16=0\n    local prime_number_flag17=0\n    local prime_number_flag18=0\n\
    \    local prime_number_flag19=0\n    local prime_number_flag20=0\n    local prime_number_flag21=0\n\
    \    local prime_number_flag22=0\n    local prime_number_flag23=0\n    local prime_number_flag24=0\n\
    \    local prime_number_flag25=0\n    local prime_number_flag26=0\n    local prime_number_flag27=0\n\
    \    local prime_number_flag28=0\n    local prime_number_flag29=0\n    local prime_number_flag30=0\n\
    \    local prime_number_flag31=0\n    local prime_number_flag32=0\n    local prime_number_flag33=0\n\
    \    local prime_number_flag34=0\n    local prime_number_flag35=0\n    local prime_number_flag36=0\n\
    \    local prime_number_flag37=0\n    local prime_number_flag38=0\n    local prime_number_flag39=0\n\
    \    local prime_number_flag40=0\n    local prime_number_flag41=0\n    local prime_number_flag42=0\n\
    \    local prime_number_flag43=0\n    local prime_number_flag44=0\n    local prime_number_flag45=0\n\
    \    local prime_number_flag46=0\n    local prime_number_flag47=0\n    local prime_number_flag48=0\n\
    \    local prime_number_flag49=0\n    local prime", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local len_intersection_1 len_intersection_2\n\
    \    len_intersection_1=$(echo \"$interval_1\" | wc -w)\n    len_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    if [ $len_intersection_1 -eq $len_intersection_2\
    \ ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "   \
    \ local a b\n    local len\n    local i\n    local j\n    local prime\n    local\
    \ primes\n    local result\n    local temp\n    local tmp\n    local tmp2\n  \
    \  local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${#interval1} - 1))\n    local length2=$((${#interval2}\
    \ - 1))\n    local length_intersection=$((length1 + length2))\n    local length_prime=0\n\
    \    local prime_flag=0\n    local prime_flag2=0\n    local prime_flag3=0\n  \
    \  local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n   \
    \ local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n    local\
    \ prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n    local\
    \ prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n    local\
    \ prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n    local\
    \ prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n    local\
    \ prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n    local\
    \ prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n    local\
    \ prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n    local\
    \ prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n    local\
    \ prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n    local\
    \ prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n    local\
    \ prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n    local\
    \ prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n    local\
    \ prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n    local\
    \ prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n    local\
    \ prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n    local\
    \ prime_flag55=0\n    local prime_flag56=0\n    local prime_flag57=0", "    local\
    \ interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]} -\
    \ ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    if [ $length1 -eq 0 ] || [ $length2 -eq 0 ]\n    then\n        echo \"NO\"\
    \n        return\n    fi\n    local length=$((length1 + length2))\n    if [ $length\
    \ -eq 1 ]\n    then\n        echo \"YES\"\n        return\n    fi\n    if [ $length\
    \ -eq 2 ]\n    then\n        local start1=$((${interval1[0]} + 1))\n        local\
    \ end1=$((${interval1[1]} - 1))\n        local start2=$((${interval2[0]} + 1))\n\
    \        local end2=$((${interval2[1]} - 1))\n        if [ $start1 -le $end2 ]\n\
    \        then\n            echo \"YES\"\n            return\n        fi\n    \
    \    if [ $start2 -le $end1 ]\n        then\n            echo \"NO\"\n       \
    \     return\n        fi\n        local start=$((${interval1[0]} + 1))\n     \
    \   local end=$((${interval2[1]} - 1))\n        if [ $start -le $end ]\n     \
    \   then\n            echo \"YES\"\n            return\n        fi\n        if\
    \ [ $end -le $start1 ]\n        then\n            echo \"NO\"\n            return\n\
    \        fi\n        local start=$((${interval2[0]} + 1))\n        local end=$((${interval1[1]}\
    \ - 1))\n        if [ $start -le $end ]\n        then\n            echo \"YES\"\
    \n            return\n        fi\n        if [ $end -le $start2 ]\n        then\n\
    \            echo \"NO\"\n            return\n        fi\n        local start=$((${interval1[0]}\
    \ + 1))\n        local end=$((${interval2[1]} - 1))\n        if [ $start -le $end\
    \ ]\n        then\n            echo \"YES\"\n            return\n        fi\n\
    \        if [ $end -le $start1 ]\n        then\n            echo \"NO\"\n    \
    \        return\n        fi\n        local start=$((${interval2[0]} + 1))\n  \
    \      local end=$((${interval1[1]} - 1))\n        if [ $start -le $end ]\n  \
    \      then\n            echo \"YES\"\n            return\n        fi\n      \
    \  if [ $end -le $start2 ]\n        then\n            echo \"NO\"\n          \
    \  return\n        fi\n        local start=$((${interval1[0]", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\
    \ is_prime\n    length_interval=$(expr ${interval_1}[1] - ${interval_2}[1])\n\
    \    is_prime=$(expr $length_interval % 2)\n    if [ $is_prime -eq 0 ]; then\n\
    \        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1\n    local length2\n    local result\n\
    \    local i\n    local j\n    local prime\n    local primes\n    local primesCount\n\
    \    local primesCount2\n    local primesCount3\n    local primesCount4\n    local\
    \ primesCount5\n    local primesCount6\n    local primesCount7\n    local primesCount8\n\
    \    local primesCount9\n    local primesCount10\n    local primesCount11\n  \
    \  local primesCount12\n    local primesCount13\n    local primesCount14\n   \
    \ local primesCount15\n    local primesCount16\n    local primesCount17\n    local\
    \ primesCount18\n    local primesCount19\n    local primesCount20\n    local primesCount21\n\
    \    local primesCount22\n    local primesCount23\n    local primesCount24\n \
    \   local primesCount25\n    local primesCount26\n    local primesCount27\n  \
    \  local primesCount28\n    local primesCount29\n    local primesCount30\n   \
    \ local primesCount31\n    local primesCount32\n    local primesCount33\n    local\
    \ primesCount34\n    local primesCount35\n    local primesCount36\n    local primesCount37\n\
    \    local primesCount38\n    local primesCount39\n    local primesCount40\n \
    \   local primesCount41\n    local primesCount42\n    local primesCount43\n  \
    \  local primesCount44\n    local primesCount45\n    local primesCount46\n   \
    \ local primesCount47\n    local primesCount48\n    local primesCount49\n    local\
    \ primesCount50\n    local primesCount51\n    local primesCount52\n    local primesCount53\n\
    \    local primesCount54\n    local primesCount55\n    local primesCount56\n \
    \   local primesCount57\n    local primesCount58\n    local primesCount59\n  \
    \  local primesCount60\n    local primesCount61\n    local primesCount62\n   \
    \ local primesCount63\n    local primesCount64\n    local primesCount65\n    local\
    \ primesCount66\n    local primesCount67", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n   \
    \ local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=false\n    local prime_length=2\n\
    \    local prime_start=2\n    local prime_end=2\n    local prime_length=2\n  \
    \  local prime_start=2\n    local prime_end=2\n    local prime_length=2\n    local\
    \ prime_start=2\n    local prime_end=2\n    local prime_length=2\n    local prime_start=2\n\
    \    local prime_end=2\n    local prime_length=2\n    local prime_start=2\n  \
    \  local prime_end=2\n    local prime_length=2\n    local prime_start=2\n    local\
    \ prime_end=2\n    local prime_length=2\n    local prime_start=2\n    local prime_end=2\n\
    \    local prime_length=2\n    local prime_start=2\n    local prime_end=2\n  \
    \  local prime_length=2\n    local prime_start=2\n    local prime_end=2\n    local\
    \ prime_length=2\n    local prime_start=2\n    local prime_end=2\n    local prime_length=2\n\
    \    local prime_start=2\n    local prime_end=2\n    local prime_length=2\n  \
    \  local prime_start=2\n    local prime_end=2\n    local prime_length=2\n    local\
    \ prime_start=2\n    local prime_end=2\n    local prime_length=2\n    local prime_start=2\n\
    \    local prime_end=2\n    local prime_length=2\n    local prime_start=2\n  \
    \  local prime_end=2\n    local prime_length=2\n    local prime_start=2\n    local\
    \ prime_end=2\n    local prime_length=2\n    local prime_start=2\n    local prime_end=2\n\
    \    local prime_length=2\n    local prime_start=2\n    local prime_end=2\n  \
    \  local prime_length=2\n    local prime_start=2\n    local prime_end=2\n    local\
    \ prime_length=2\n    local prime_start=2\n    local prime_end=2\n    local prime_length=2\n\
    \    local prime_start=2\n    local prime_end=2\n    local prime_length=2\n",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local i\n    local j\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    primes=$(echo \"$length\" | sed 's/ //g')\n\
    \    prime=$(echo \"$primes\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed\
    \ 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo \"\
    $prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo\
    \ \"$prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n  \
    \  prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed\
    \ 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo \"\
    $prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo\
    \ \"$prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n  \
    \  prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed\
    \ 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo \"\
    $prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo\
    \ \"$prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n  \
    \  prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed\
    \ 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo \"\
    $prime\" | sed 's/ //g')\n    prime=$(echo \"$prime\" | sed 's/ //g')\n    prime=$(echo\
    \ \"$prime\" | sed 's/ //g')\n    prime", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local primes\n    local prime_found\n    local prime_found2\n    local prime_found3\n\
    \    local prime_found4\n    local prime_found5\n    local prime_found6\n    local\
    \ prime_found7\n    local prime_found8\n    local prime_found9\n    local prime_found10\n\
    \    local prime_found11\n    local prime_found12\n    local prime_found13\n \
    \   local prime_found14\n    local prime_found15\n    local prime_found16\n  \
    \  local prime_found17\n    local prime_found18\n    local prime_found19\n   \
    \ local prime_found20\n    local prime_found21\n    local prime_found22\n    local\
    \ prime_found23\n    local prime_found24\n    local prime_found25\n    local prime_found26\n\
    \    local prime_found27\n    local prime_found28\n    local prime_found29\n \
    \   local prime_found30\n    local prime_found31\n    local prime_found32\n  \
    \  local prime_found33\n    local prime_found34\n    local prime_found35\n   \
    \ local prime_found36\n    local prime_found37\n    local prime_found38\n    local\
    \ prime_found39\n    local prime_found40\n    local prime_found41\n    local prime_found42\n\
    \    local prime_found43\n    local prime_found44\n    local prime_found45\n \
    \   local prime_found46\n    local prime_found47\n    local prime_found48\n  \
    \  local prime_found49\n    local prime_found50\n    local prime_found51\n   \
    \ local prime_found52\n    local prime_found53\n    local prime_found54\n    local\
    \ prime_found55\n    local prime_found56\n    local prime_found57\n    local prime_found58\n\
    \    local prime_found59\n    local prime_found60\n    local prime_found61\n \
    \   local prime_found62\n    local prime_found63\n    local prime_found64\n  \
    \  local prime_found65\n    local prime_found66\n    local prime_found67\n   \
    \ local prime_found68\n", "    local interval1=$1\n    local interval2=$2\n  \
    \  local length1\n    local length2\n    local length\n    local result\n    local\
    \ i\n    local j\n    local prime\n    local primes\n    local prime_found\n \
    \   local prime_found2\n    local prime_found3\n    local prime_found4\n    local\
    \ prime_found5\n    local prime_found6\n    local prime_found7\n    local prime_found8\n\
    \    local prime_found9\n    local prime_found10\n    local prime_found11\n  \
    \  local prime_found12\n    local prime_found13\n    local prime_found14\n   \
    \ local prime_found15\n    local prime_found16\n    local prime_found17\n    local\
    \ prime_found18\n    local prime_found19\n    local prime_found20\n    local prime_found21\n\
    \    local prime_found22\n    local prime_found23\n    local prime_found24\n \
    \   local prime_found25\n    local prime_found26\n    local prime_found27\n  \
    \  local prime_found28\n    local prime_found29\n    local prime_found30\n   \
    \ local prime_found31\n    local prime_found32\n    local prime_found33\n    local\
    \ prime_found34\n    local prime_found35\n    local prime_found36\n    local prime_found37\n\
    \    local prime_found38\n    local prime_found39\n    local prime_found40\n \
    \   local prime_found41\n    local prime_found42\n    local prime_found43\n  \
    \  local prime_found44\n    local prime_found45\n    local prime_found46\n   \
    \ local prime_found47\n    local prime_found48\n    local prime_found49\n    local\
    \ prime_found50\n    local prime_found51\n    local prime_found52\n    local prime_found53\n\
    \    local prime_found54\n    local prime_found55\n    local prime_found56\n \
    \   local prime_found57\n    local prime_found58\n    local prime_found59\n  \
    \  local prime_found60\n    local prime_found61\n    local prime_found62\n   \
    \ local prime_found63\n    local prime_found64\n    local prime_found65\n    local\
    \ prime_found66\n    local ", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1 | cut -d ' ' -f 1\"| wc -w)\n  \
    \  length_intersection_2=$(echo \"$interval_2 | cut -d ' ' -f 1\"| wc -w)\n  \
    \  if [ \"$length_intersection_1\" -gt \"$length_intersection_2\" ]; then\n  \
    \      echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [ \"$length_intersection\" -eq 0 ]; then\n        echo \"NO\"\n    else\n  \
    \      echo \"YES\"\n    fi", "    local interval_1 interval_2 length prime\n\
    \    interval_1=$1\n    interval_2=$2\n    length=$(echo \"$interval_1 $interval_2\"\
    \ | awk '{print length($0)}')\n    prime=$(echo \"$interval_1 $interval_2\" |\
    \ awk '{print prime($0)}')\n    if [ $length -eq 0 ]; then\n        echo \"NO\"\
    \n    elif [ $prime -eq 0 ]; then\n        echo \"NO\"\n    elif [ $prime -eq\
    \ 1 ]; then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval_1 interval_2\n   \
    \ interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\n\
    \    length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    if [ $length_intersection_1 -eq $length_intersection_2\
    \ ]; then\n        echo \"$interval_1\" | awk '{print $1}' | sort | uniq -c |\
    \ sort -nr | head -1\n        echo \"$interval_2\" | awk '{print $1}' | sort |\
    \ uniq -c | sort -nr | head -1\n        echo \"$interval_1\" | awk '{print $1}'\
    \ | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_2\" | awk '{print\
    \ $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_1\" | awk\
    \ '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_2\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_1\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_2\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_1\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_2\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_1\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_2\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_1\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_2\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_1\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_2\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1\n        echo \"$interval_1\"\
    \ | awk '{print $1}' | sort | uniq -c | sort -nr | head -1", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length_intersection=$((length1<length2?length1:length2))\n    local\
    \ prime_number=1\n    local prime_number_flag=0\n    local prime_number_flag2=0\n\
    \    local prime_number_flag3=0\n    local prime_number_flag4=0\n    local prime_number_flag5=0\n\
    \    local prime_number_flag6=0\n    local prime_number_flag7=0\n    local prime_number_flag8=0\n\
    \    local prime_number_flag9=0\n    local prime_number_flag10=0\n    local prime_number_flag11=0\n\
    \    local prime_number_flag12=0\n    local prime_number_flag13=0\n    local prime_number_flag14=0\n\
    \    local prime_number_flag15=0\n    local prime_number_flag16=0\n    local prime_number_flag17=0\n\
    \    local prime_number_flag18=0\n    local prime_number_flag19=0\n    local prime_number_flag20=0\n\
    \    local prime_number_flag21=0\n    local prime_number_flag22=0\n    local prime_number_flag23=0\n\
    \    local prime_number_flag24=0\n    local prime_number_flag25=0\n    local prime_number_flag26=0\n\
    \    local prime_number_flag27=0\n    local prime_number_flag28=0\n    local prime_number_flag29=0\n\
    \    local prime_number_flag30=0\n    local prime_number_flag31=0\n    local prime_number_flag32=0\n\
    \    local prime_number_flag33=0\n    local prime_number_flag34=0\n    local prime_number_flag35=0\n\
    \    local prime_number_flag36=0\n    local prime_number_flag37=0\n    local prime_number_flag38=0\n\
    \    local prime_number_flag39=0\n    local prime_number_flag40=0\n    local prime_number_flag41=0\n\
    \    local prime_number_flag42=0\n    local prime_number_flag43=0\n    local prime_number_flag44=0\n\
    \    local prime_number_flag45=0\n    local prime_number_flag46=0\n    local prime_number_flag47=0\n\
    \    local prime_number_flag48=0\n    local prime_number_flag49=0\n    local prime_number_",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n\n    length1=$(echo $interval1 | awk '{print $1}')\n    length2=$(echo\
    \ $interval2 | awk '{print $1}')\n    length=$(expr $length1 + $length2)\n   \
    \ prime=$(expr $length1 \\* $length2)\n\n    if [ $prime -eq 0 ]\n    then\n \
    \       result=\"NO\"\n    else\n        result=\"YES\"\n    fi\n    echo $result",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo \"$interval_2\" |\
    \ wc -w)\n    if [ \"$length_intersection_1\" -eq \"$length_intersection_2\" ];\
    \ then\n        echo \"NO\"\n    else\n        local i\n        local j\n    \
    \    local length_of_intersection\n        length_of_intersection=$((length_intersection_1\
    \ - length_intersection_2))\n        local prime_number\n        prime_number=1\n\
    \        local prime_number_1\n        prime_number_1=1\n        local prime_number_2\n\
    \        prime_number_2=1\n        local prime_number_3\n        prime_number_3=1\n\
    \        local prime_number_4\n        prime_number_4=1\n        local prime_number_5\n\
    \        prime_number_5=1\n        local prime_number_6\n        prime_number_6=1\n\
    \        local prime_number_7\n        prime_number_7=1\n        local prime_number_8\n\
    \        prime_number_8=1\n        local prime_number_9\n        prime_number_9=1\n\
    \        local prime_number_10\n        prime_number_10=1\n        local prime_number_11\n\
    \        prime_number_11=1\n        local prime_number_12\n        prime_number_12=1\n\
    \        local prime_number_13\n        prime_number_13=1\n        local prime_number_14\n\
    \        prime_number_14=1\n        local prime_number_15\n        prime_number_15=1\n\
    \        local prime_number_16\n        prime_number_16=1\n        local prime_number_17\n\
    \        prime_number_17=1\n        local prime_number_18\n        prime_number_18=1\n\
    \        local prime_number_19\n        prime_number_19=1\n        local prime_number_20\n\
    \        prime_number_20=1\n        local prime_number_21\n        prime_number_21=1\n\
    \        local prime_number_22\n        prime_number_22=1\n        local prime_number_23\n\
    \        prime_number_23=1\n        local prime_number_24\n        prime_number_24=1\n\
    \        local prime_number_25\n        prime_number_25=1\n        local prime_number_26\n\
    \        prime_number_26=1\n        local prime_number_27\n        prime_number_27=1\n\
    \        local prime_number_28\n", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((${length1} + ${length2}))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56", "    local interval1=$1\n    local interval2=$2\n  \
    \  local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((${length1} + ${length2}))\n    local\
    \ prime=true\n    local prime_number=1\n    local prime_number_count=1\n    local\
    \ prime_number_count2=1\n    local prime_number_count3=1\n    local prime_number_count4=1\n\
    \    local prime_number_count5=1\n    local prime_number_count6=1\n    local prime_number_count7=1\n\
    \    local prime_number_count8=1\n    local prime_number_count9=1\n    local prime_number_count10=1\n\
    \    local prime_number_count11=1\n    local prime_number_count12=1\n    local\
    \ prime_number_count13=1\n    local prime_number_count14=1\n    local prime_number_count15=1\n\
    \    local prime_number_count16=1\n    local prime_number_count17=1\n    local\
    \ prime_number_count18=1\n    local prime_number_count19=1\n    local prime_number_count20=1\n\
    \    local prime_number_count21=1\n    local prime_number_count22=1\n    local\
    \ prime_number_count23=1\n    local prime_number_count24=1\n    local prime_number_count25=1\n\
    \    local prime_number_count26=1\n    local prime_number_count27=1\n    local\
    \ prime_number_count28=1\n    local prime_number_count29=1\n    local prime_number_count30=1\n\
    \    local prime_number_count31=1\n    local prime_number_count32=1\n    local\
    \ prime_number_count33=1\n    local prime_number_count34=1\n    local prime_number_count35=1\n\
    \    local prime_number_count36=1\n    local prime_number_count37=1\n    local\
    \ prime_number_count38=1\n    local prime_number_count39=1\n    local prime_number_count40=1\n\
    \    local prime_number_count41=1\n    local prime_number_count42=1\n    local\
    \ prime_number_count43=1\n    local prime_number_count44=1\n    local prime_number_count45=1\n\
    \    local prime_number_count46=1\n    local prime_number_count47=1\n    local\
    \ prime_number_count48=1\n    local prime_number_count", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2[@]}\")\n \
    \   if [[ $length_intersection -eq 0 ]]; then\n        echo \"NO\"\n    else\n\
    \        echo \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n"]
stop_tokens:
- "\n}"

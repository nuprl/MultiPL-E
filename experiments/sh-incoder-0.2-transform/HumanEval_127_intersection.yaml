name: HumanEval_127_intersection
language: sh
prompt: "#!/bin/bash\n# You are given two intervals,\n# where each interval is a pair\
  \ of integers. For example, interval = (start, end) = (1, 2).\n# The given intervals\
  \ are closed which means that the interval (start, end)\n# includes both start and\
  \ end.\n# For each given interval, it is assumed that its start is less or equal\
  \ its end.\n# Your task is to determine whether the length of intersection of these\
  \ two \n# intervals is a prime number.\n# Example, the intersection of the intervals\
  \ (1, 3), (2, 4) is (2, 3)\n# which its length is 1, which not a prime number.\n\
  # If the length of the intersection is a prime number, return \"YES\",\n# otherwise,\
  \ return \"NO\".\n# If the two intervals don't intersect, return \"NO\".\n# [input/output]\
  \ samples:\n# >>> $(intersection \"1 2\" \"2 3\")\n# \"NO\"\n# >>> $(intersection\
  \ \"-1 1\" \"0 4\")\n# \"NO\"\n# >>> $(intersection \"-3 -1\" \"-5 5\")\n# \"YES\"\
  \n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nintersection()\
  \ {\n"
tests: "}\n\ncandidate() {\n    intersection \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"1 2\" \"2 3\") = \"NO\" ]]\n    [[ $(candidate \"-1 1\" \"\
  0 4\") = \"NO\" ]]\n    [[ $(candidate \"-3 -1\" \"-5 5\") = \"YES\" ]]\n    [[\
  \ $(candidate \"-2 2\" \"-4 0\") = \"YES\" ]]\n    [[ $(candidate \"-11 2\" \"-1\
  \ -1\") = \"NO\" ]]\n    [[ $(candidate \"1 2\" \"3 5\") = \"NO\" ]]\n    [[ $(candidate\
  \ \"1 2\" \"1 2\") = \"NO\" ]]\n    [[ $(candidate \"-2 -2\" \"-3 -2\") = \"NO\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"${interval_1}\" | wc -w)\n    length_intersection_2=$(echo \"${interval_2}\"\
    \ | wc -w)\n    if [[ ${length_intersection_1} -eq ${length_intersection_2} ]];\
    \ then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local\
    \ interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [[ \"$length_intersection\" == \"NO\" ]]; then\n        echo \"NO\"\n    else\n\
    \        echo \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    local start1=$((${interval1[0]}))\n\
    \    local end1=$((${interval1[1]}))\n    local start2=$((${interval2[0]}))\n\
    \    local end2=$((${interval2[1]}))\n    local flag=0\n    local prime=0\n  \
    \  local prime1=0\n    local prime2=0\n    local prime3=0\n    local prime4=0\n\
    \    local prime5=0\n    local prime6=0\n    local prime7=0\n    local prime8=0\n\
    \    local prime9=0\n    local prime10=0\n    local prime11=0\n    local prime12=0\n\
    \    local prime13=0\n    local prime14=0\n    local prime15=0\n    local prime16=0\n\
    \    local prime17=0\n    local prime18=0\n    local prime19=0\n    local prime20=0\n\
    \    local prime21=0\n    local prime22=0\n    local prime23=0\n    local prime24=0\n\
    \    local prime25=0\n    local prime26=0\n    local prime27=0\n    local prime28=0\n\
    \    local prime29=0\n    local prime30=0\n    local prime31=0\n    local prime32=0\n\
    \    local prime33=0\n    local prime34=0\n    local prime35=0\n    local prime36=0\n\
    \    local prime37=0\n    local prime38=0\n    local prime39=0\n    local prime40=0\n\
    \    local prime41=0\n    local prime42=0\n    local prime43=0\n    local prime44=0\n\
    \    local prime45=0\n    local prime46=0\n    local prime47=0\n    local prime48=0\n\
    \    local prime49=0\n    local prime50=0\n    local prime51=0\n    local prime52=0\n\
    \    local prime53=0\n    local prime54=0\n    local prime55=0\n    local prime56=0\n\
    \    local prime57=0\n    local prime58=0\n    local prime59=0\n    local prime60=0\n\
    \    local prime61=0\n    local prime62=0\n    local prime63=0\n    local prime64=0\n\
    \    local prime65=0\n    local prime66=0\n", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection prime_number\n\
    \    length_interval=$(echo \"$interval_1 $interval_2\" | awk '{print $1 - $2}')\n\
    \    prime_number=$((length_interval % 2))\n    if [ \"$prime_number\" -eq \"\
    1\" ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local length\n    local prime\n    local result\n\n    length1=$(echo $interval1\
    \ | awk '{print $1}')\n    length2=$(echo $interval2 | awk '{print $1}')\n   \
    \ length=$(expr $length1 + $length2)\n    prime=\"YES\"\n    result=\"NO\"\n \
    \   if [ $length -eq 1 ]\n    then\n        prime=\"NO\"\n        result=\"NO\"\
    \n    elif [ $length -eq 2 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 3 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 4 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 5 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 6 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 7 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 8 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 9 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 10 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 11 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 12 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 13 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 14 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 15 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 16 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 17 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 18 ]\n    then\n        prime=\"YES\"\n        result=\"\
    YES\"\n    elif [ $length -eq 19 ]\n    then", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n   \
    \ local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=", "   \
    \ local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(expr\
    \ ${interval_1}[1] - ${interval_1}[0] + 1)\n    length_intersection_2=$(expr ${interval_2}[1]\
    \ - ${interval_2}[0] + 1)\n    if [[ ${length_intersection_1} -eq ${length_intersection_2}\
    \ ]]; then\n        if [[ ${interval_1}[0] -lt ${interval_2}[0] ]]; then\n   \
    \         echo \"NO\"\n        else\n            echo \"YES\"\n        fi\n  \
    \  else\n        echo \"NO\"\n    fi", "    local a b\n    local len\n    local\
    \ i\n    local j\n    local prime\n    local primes\n    local result\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local tmp", "    local a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\n    a=$1\n    b=$2\n    local len\n    len=0\n    for (( i=0; i<${#a}; i++\
    \ )); do\n        c=${a[i]}\n        d=${b[i]}\n        if (( c <= d )); then\n\
    \            len=$(( len + 1 ))\n        fi\n    done\n    for (( i=0; i<${#a};\
    \ i++ )); do\n        c=${a[i]}\n        d=${b[i]}\n        if (( c <= d )); then\n\
    \            len=$(( len + 1 ))\n        fi\n    done\n    if [ $len -eq 0 ];\
    \ then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local\
    \ interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]} -\
    \ ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=\n    local prime_flag=\n\
    \    local prime_flag2=\n    local prime_flag3=\n    local prime_flag4=\n    local\
    \ prime_flag5=\n    local prime_flag6=\n    local prime_flag7=\n    local prime_flag8=\n\
    \    local prime_flag9=\n    local prime_flag10=\n    local prime_flag11=\n  \
    \  local prime_flag12=\n    local prime_flag13=\n    local prime_flag14=\n   \
    \ local prime_flag15=\n    local prime_flag16=\n    local prime_flag17=\n    local\
    \ prime_flag18=\n    local prime_flag19=\n    local prime_flag20=\n    local prime_flag21=\n\
    \    local prime_flag22=\n    local prime_flag23=\n    local prime_flag24=\n \
    \   local prime_flag25=\n    local prime_flag26=\n    local prime_flag27=\n  \
    \  local prime_flag28=\n    local prime_flag29=\n    local prime_flag30=\n   \
    \ local prime_flag31=\n    local prime_flag32=\n    local prime_flag33=\n    local\
    \ prime_flag34=\n    local prime_flag35=\n    local prime_flag36=\n    local prime_flag37=\n\
    \    local prime_flag38=\n    local prime_flag39=\n    local prime_flag40=\n \
    \   local prime_flag41=\n    local prime_flag42=\n    local prime_flag43=\n  \
    \  local prime_flag44=\n    local prime_flag45=\n    local prime_flag46=\n   \
    \ local prime_flag47=\n    local prime_flag48=\n    local prime_flag49=\n    local\
    \ prime_flag50=\n    local prime_flag51=\n    local prime_flag52=\n    local prime_flag53=\n\
    \    local prime_flag54=\n    local prime_flag55=\n    local prime_flag56=\n \
    \   local prime_", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n \
    \   local length_intersection=$((length1<length2?length1:length2))\n    local\
    \ prime_number=\"YES\"\n    local prime_number_flag=\"NO\"\n    local prime_number_flag2=\"\
    NO\"\n    local prime_number_flag3=\"NO\"\n    local prime_number_flag4=\"NO\"\
    \n    local prime_number_flag5=\"NO\"\n    local prime_number_flag6=\"NO\"\n \
    \   local prime_number_flag7=\"NO\"\n    local prime_number_flag8=\"NO\"\n   \
    \ local prime_number_flag9=\"NO\"\n    local prime_number_flag10=\"NO\"\n    local\
    \ prime_number_flag11=\"NO\"\n    local prime_number_flag12=\"NO\"\n    local\
    \ prime_number_flag13=\"NO\"\n    local prime_number_flag14=\"NO\"\n    local\
    \ prime_number_flag15=\"NO\"\n    local prime_number_flag16=\"NO\"\n    local\
    \ prime_number_flag17=\"NO\"\n    local prime_number_flag18=\"NO\"\n    local\
    \ prime_number_flag19=\"NO\"\n    local prime_number_flag20=\"NO\"\n    local\
    \ prime_number_flag21=\"NO\"\n    local prime_number_flag22=\"NO\"\n    local\
    \ prime_number_flag23=\"NO\"\n    local prime_number_flag24=\"NO\"\n    local\
    \ prime_number_flag25=\"NO\"\n    local prime_number_flag26=\"NO\"\n    local\
    \ prime_number_flag27=\"NO\"\n    local prime_number_flag28=\"NO\"\n    local\
    \ prime_number_flag29=\"NO\"\n    local prime_number_flag30=\"NO\"\n    local\
    \ prime_number_flag31=\"NO\"\n    local prime_number_flag32=\"NO\"\n    local\
    \ prime_number_flag33=\"NO\"\n    local prime_number_flag34=\"NO\"\n    local\
    \ prime_number_flag35=\"NO\"\n    local prime_number_flag36=\"NO\"\n    local\
    \ prime_number_flag37=\"NO\"\n    local prime_number_flag38=\"NO\"\n    local\
    \ prime_number_flag39=\"NO\"\n    local prime_number_flag40=\"NO\"\n    local\
    \ prime_", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((${length1}+${length2}))\n\
    \    local prime=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    ", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2[@]}\")\n    if [[ $length_intersection -eq 0\
    \ ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "  \
    \  local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((${length1}+${length2}))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local result\n    local prime\n    local primes\n    local\
    \ prime_found\n    local prime_found2\n    local prime_found3\n    local prime_found4\n\
    \    local prime_found5\n    local prime_found6\n    local prime_found7\n    local\
    \ prime_found8\n    local prime_found9\n    local prime_found10\n    local prime_found11\n\
    \    local prime_found12\n    local prime_found13\n    local prime_found14\n \
    \   local prime_found15\n    local prime_found16\n    local prime_found17\n  \
    \  local prime_found18\n    local prime_found19\n    local prime_found20\n   \
    \ local prime_found21\n    local prime_found22\n    local prime_found23\n    local\
    \ prime_found24\n    local prime_found25\n    local prime_found26\n    local prime_found27\n\
    \    local prime_found28\n    local prime_found29\n    local prime_found30\n \
    \   local prime_found31\n    local prime_found32\n    local prime_found33\n  \
    \  local prime_found34\n    local prime_found35\n    local prime_found36\n   \
    \ local prime_found37\n    local prime_found38\n    local prime_found39\n    local\
    \ prime_found40\n    local prime_found41\n    local prime_found42\n    local prime_found43\n\
    \    local prime_found44\n    local prime_found45\n    local prime_found46\n \
    \   local prime_found47\n    local prime_found48\n    local prime_found49\n  \
    \  local prime_found50\n    local prime_found51\n    local prime_found52\n   \
    \ local prime_found53\n    local prime_found54\n    local prime_found55\n    local\
    \ prime_found56\n    local prime_found57\n    local prime_found58\n    local prime_found59\n\
    \    local prime_found60\n    local prime_found61\n    local prime_found62\n \
    \   local prime_found63\n    local prime_found64\n    local prime_found65\n  \
    \  local prime_found66\n    local prime_found67\n    local prime_found68\n", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local result\n    local i\n    local j\n    local prime\n    local primes\n\
    \    local primesCount\n    local primesCount2\n    local primesCount3\n    local\
    \ primesCount4\n    local primesCount5\n    local primesCount6\n    local primesCount7\n\
    \    local primesCount8\n    local primesCount9\n    local primesCount10\n   \
    \ local primesCount11\n    local primesCount12\n    local primesCount13\n    local\
    \ primesCount14\n    local primesCount15\n    local primesCount16\n    local primesCount17\n\
    \    local primesCount18\n    local primesCount19\n    local primesCount20\n \
    \   local primesCount21\n    local primesCount22\n    local primesCount23\n  \
    \  local primesCount24\n    local primesCount25\n    local primesCount26\n   \
    \ local primesCount27\n    local primesCount28\n    local primesCount29\n    local\
    \ primesCount30\n    local primesCount31\n    local primesCount32\n    local primesCount33\n\
    \    local primesCount34\n    local primesCount35\n    local primesCount36\n \
    \   local primesCount37\n    local primesCount38\n    local primesCount39\n  \
    \  local primesCount40\n    local primesCount41\n    local primesCount42\n   \
    \ local primesCount43\n    local primesCount44\n    local primesCount45\n    local\
    \ primesCount46\n    local primesCount47\n    local primesCount48\n    local primesCount49\n\
    \    local primesCount50\n    local primesCount51\n    local primesCount52\n \
    \   local primesCount53\n    local primesCount54\n    local primesCount55\n  \
    \  local primesCount56\n    local primesCount57\n    local primesCount58\n   \
    \ local primesCount59\n    local primesCount60\n    local primesCount61\n    local\
    \ primesCount62\n    local primesCount63\n    local primesCount64\n    local primesCount65\n\
    \    local primesCount66\n    local primesCount67", "    local a b c d e f g h\
    \ i j k l m n o p q r s t u v w x y z\n    local interval_length\n    local prime_number\n\
    \    local prime_number_length\n    local prime_number_string\n    local prime_number_string_length\n\
    \    local prime_number_string_length_string\n    local prime_number_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string\n    local prime_number_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n\
    \    local length2=$((${interval2[1]}+1))\n    local length=$((length1<length2?length1:length2))\n\
    \    local start1=$((${interval1[0]}-1))\n    local end1=$((${interval1[1]}-1))\n\
    \    local start2=$((${interval2[0]}-1))\n    local end2=$((${interval2[1]}-1))\n\
    \    local start=$((start1<start2?start1:start2))\n    local end=$((end1<end2?end1:end2))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [[ \"$length_intersection\" == \"\
    \" ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi"]
stop_tokens:
- "\n}"

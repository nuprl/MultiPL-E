name: HumanEval_34_unique
language: sh
prompt: "#!/bin/bash\n# Return sorted unique elements in a list\n# >>> $(unique \"\
  5 3 5 2 3 3 9 0 123\")\n# ['\"0\"', '\"2\"', '\"3\"', '\"5\"', '\"9\"', '\"123\"\
  ']\n#\n# $1 is a space-separated list\nunique() {\n"
tests: "}\n\ncandidate() {\n    unique \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5 3 5 2 3 3 9 0 123\") = \"0 2 3 5 9 123\" ]]\n}\n\nrun_test"
completions: ["    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "    local IFS=$'\\\
    n' arr=($1) output\n    for el in \"${arr[@]}\"; do\n        [[ $output == *\"\
    $el\"* ]] && continue\n        ((output+=(\"$el\")))\n    done\n    echo \"${output[@]}\"",
  "    local IFS=$1\n    local -a arr\n    local i item\n    arr=( $@ )\n    IFS=$'\
    \ \\t\\n'\n    for ((i=0; i<${#arr[@]}; i++)); do\n        item=\"${arr[i]}\"\n\
    \        if [[ \" ${arr[i]} \" != *\" \"$* ]]; then\n            arr[i]=\"${item}\
    \ \"\n        fi\n    done\n    IFS=$IFS\n    echo ${arr[*]} | tr ' ' '\\n'",
  "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n' arr=($(sort\
    \ -u <<<\"$1\"))\n    echo \"${arr[@]}\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", '    local IFS=$1; shift; echo "$*" | tr " " "\n" | sort -u | tr
    "\n" " "', "    local IFS=$'\\n';\n    sort -u <<< \"$1\"", "  local IFS=$1\n\
    \  local -a arr\n  local i item\n  arr=( $@ )\n  IFS=$' \\t\\n'\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    item=${arr[i]}\n    arr[i]=${item//$'\\t'/,}\n\
    \  done\n  IFS=$IFS_ORIG\n  echo \"${arr[@]}\"", "  local IFS=$'\\n' arr=($(sort\
    \ -u <<<\"$1\"))\n  printf '%s\\n' \"${arr[@]}\"", '    local IFS=$1; shift; echo
    "$*" | sort -u', "    local IFS=$'\\n' arr=($(sort -u <<<\"$1\"))\n    printf\
    \ '%s\\n' \"${arr[@]}\"", "  local IFS=$1\n  local -a arr\n  local i item\n  arr=(\
    \ $@ )\n  IFS=$' \\t\\n'\n  for ((i=0; i<${#arr[@]}; i++)); do\n    item=${arr[i]}\n\
    \    arr[i]=${arr[i]//[!$item]} # remove duplicates\n  done\n  IFS=$IFS\n  echo\
    \ ${arr[@]}", "  local IFS=$1\n  local -a arr\n  local -a seen\n  local -a output\n\
    \  output=(${(@s/ /)1})\n  arr=( $output )\n  seen=()\n  while IFS= read -r line;\
    \ do\n    seen+=(\"$line\")\n  done < <(printf \"%s\\n\" \"${arr[@]}\" | sort\
    \ -u)\n  printf \"%s\\n\" \"${seen[@]}\"", "  local IFS=$1\n  local -a A\n  local\
    \ -a B\n  local -a C\n  local -a RESULT\n\n  A=( $* )\n  C=( \"${A[@]}\" )\n \
    \ B=( \"${C[@]}\" )\n  RESULT=()\n  while [ \"${#B[@]}\" -gt 0 ]; do\n    RESULT+=(\
    \ \"${B[@]}\" )\n    B=( \"${C[@]}\" )\n  done\n  RESULT+=( \"${B[@]}\" )\n  echo\
    \ \"${RESULT[@]}\"", "  local IFS=$'\\n' arr=($(sort -u <<<\"$1\")); unset IFS\n\
    \  printf '%s\\n' \"${arr[@]}\"", "    local IFS=$'\\n'\n    local a\n    a=(\
    \ $1 )\n    local i seen=()\n    local output\n    for ((i=0; i<${#a[@]}; i++));\
    \ do\n        if [[ ${seen[i]} == \"\" ]]; then\n            seen[i]=1\n     \
    \       output+=(\"${a[i]}\")\n        fi\n    done\n    echo \"${output[@]}\"",
  '    local IFS=$1; shift; echo "$@" | sort -u', "    local IFS=$'\\n' arr=($(sort\
    \ <<<\"$1\")); unset IFS\n    local i result=()\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        [[ ${arr[i]} == ${arr[i+1]} ]] && result+=(\"${arr[i]}\"\
    ) && arr[i]=''\n    done\n    echo \"${result[@]}\"", "  local IFS=$'\\n'\n  local\
    \ -a list=( $1 )\n  local output\n  output=$(printf '%s\\n' \"${list[@]}\" | sort\
    \ -u)\n  printf '%s\\n' \"${output}\""]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_20_find_closest_elements
results:
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i\n    local j\n    local\
    \ element\n    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local distance\n    local index\n    local element\n \
    \   local distance\n    local index\n    local element\n    local distance\n \
    \   local index\n    local element\n    local distance\n    local index\n    local\
    \ element\n    local distance\n    local index\n    local element\n    local distance\n\
    \    local index\n    local element\n    local distance\n    local index\n   \
    \ local element\n    local distance\n    local index\n    local element\n    local\
    \ distance\n    local index\n    local element\n    local distance\n    local\
    \ index\n    local element\n    local distance\n    local index\n    local element\n\
    \    local distance\n    local index\n    local element\n    local distance\n\
    \    local index\n    local element\n    local distance\n    local index\n   \
    \ local element\n    local distance\n    local index\n    local element\n    local\
    \ distance\n    local index\n    local element\n    local distance\n    local\
    \ index\n    local element\n    local distance\n    local index\n    local element\n\
    \    local distance\n    local index\n    local element\n    local distance\n\
    \    local index\n    local element\n    local distance\n    local index\n   \
    \ local element\n    local distance\n    local index\n    local element\n    local\
    \ distance\n    local index\n    local element\n    local distance\n    local\
    \ index\n    local element\n    local distance\n    local index\n    local element\n\
    \    local distance\n    local index\n    local element\n    local distance\n\
    \    local index\n    local element\n    local distance\n    local index\n   \
    \ local element\n    local distance\n    local index\n    local element\n    local\
    \ distance\n    local index\n    local element\n    local distance\n    local\
    \ index\n    local element\n    local distance\n    local index\n    local element\n\
    \    local distance\n    local index\n    local element\n    local distance\n\
    \    local index\n    local element\n    local distance\n    local index\n   \
    \ local element\n    local distance\n    local index\n    local element\n    local\
    \ distance\n    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_value\n    local element_index\n    local element_count\n\
    \    local elements_array\n    local elements_array_index\n    local elements_array_count\n\
    \    local elements_array_element\n    local elements_array_element_index\n  \
    \  local elements_array_element_count\n    local elements_array_element_value\n\
    \    local elements_array_element_value_count\n    local elements_array_element_value_count\n\
    \    local elements_array_element_value_count_index\n    local elements_array_element_value_count_index\n\
    \    local elements_array_element_value_count_value\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_count_value_index\n    local elements_array_element_value_count_value_index\n\
    \    local elements_array_element_value_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ result=\n    local number\n    local number1\n    local number2\n    local diff\n\
    \    local diff1\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local \n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest\n \
    \   local closest2\n    local closest3\n    local closest4\n    local closest5\n\
    \    local closest6\n    local closest7\n    local closest8\n    local closest9\n\
    \    local closest10\n    local closest11\n    local closest12\n    local closest13\n\
    \    local closest14\n    local closest15\n    local closest16\n    local closest17\n\
    \    local closest18\n    local closest19\n    local closest20\n    local closest21\n\
    \    local closest22\n    local closest23\n    local closest24\n    local closest25\n\
    \    local closest26\n    local closest27\n    local closest28\n    local closest29\n\
    \    local closest30\n    local closest31\n    local closest32\n    local closest33\n\
    \    local closest34\n    local closest35\n    local closest36\n    local closest37\n\
    \    local closest38\n    local closest39\n    local closest40\n    local closest41\n\
    \    local closest42\n    local closest43\n    local closest44\n    local closest45\n\
    \    local closest46\n    local closest47\n    local closest48\n    local closest49\n\
    \    local closest50\n    local closest51\n    local closest52\n    local closest53\n\
    \    local closest54\n    local closest55\n    local closest56\n    local closest57\n\
    \    local closest58\n    local closest59\n    local closest60\n    local closest61\n\
    \    local closest62\n    local closest63\n    local closest64\n    local closest65\n\
    \    local closest66\n    local closest67\n    local closest68\n    local closest69\n\
    \    local closest70\n    local closest71\n    local closest72\n    local closest73\n\
    \    local closest74\n    local closest75\n    local closest76\n    local closest77\n\
    \    local closest78\n    local closest79\n    local closest80\n    local closest81\n\
    \    local closest82\n    local closest83\n    local closest84\n    local closest85\n\
    \    local closest86\n    local closest87\n    local closest88\n    local closest89\n\
    \    local closest90\n    local closest91\n    local closest92\n    local closest93\n\
    \    local closest94\n    local closest95\n    local closest96\n    local closest97\n\
    \    local closest98\n    local closest99\n    local closest100\n    local closest101\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_count\n    local\
    \ element_count2\n    local element_count3\n    local element_count4\n    local\
    \ element_count5\n    local element_count6\n    local element_count7\n    local\
    \ element_count8\n    local element_count9\n    local element_count10\n    local\
    \ element_count11\n    local element_count12\n    local element_count13\n    local\
    \ element_count14\n    local element_count15\n    local element_count16\n    local\
    \ element_count17\n    local element_count18\n    local element_count19\n    local\
    \ element_count20\n    local element_count21\n    local element_count22\n    local\
    \ element_count23\n    local element_count24\n    local element_count25\n    local\
    \ element_count26\n    local element_count27\n    local element_count28\n    local\
    \ element_count29\n    local element_count30\n    local element_count31\n    local\
    \ element_count32\n    local element_count33\n    local element_count34\n    local\
    \ element_count35\n    local element_count36\n    local element_count37\n    local\
    \ element_count38\n    local element_count39\n    local element_count40\n    local\
    \ element_count41\n    local element_count42\n    local element_count43\n    local\
    \ element_count44\n    local element_count45\n    local element_count46\n    local\
    \ element_count47\n    local element_count48\n    local element_count49\n    local\
    \ element_count50\n    local element_count51\n    local element_count52\n    local\
    \ element_count53\n    local element_count54\n    local element_count55\n    local\
    \ element_count56\n    local element_count57\n    local element_count58\n    local\
    \ element_count59\n    local element_count60\n    local element_count61\n    local\
    \ element_count62\n    local element_count63\n    local element_count64\n    local\
    \ element_count65\n    local element_count66\n    local element_count67\n    local\
    \ element_count68\n    local element_count69\n    local element_count70\n    local\
    \ element_count71\n    local element_count72\n    local element_count73\n    local\
    \ element_count74\n    local element_count75\n    local element_count76\n    local\
    \ element_count77\n    local element_count78\n    local element_count\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local closest=\n  local\
    \ smallest=\n  local largest=\n  local element\n  local element2\n  local element3\n\
    \  local element4\n  local element5\n  local element6\n  local element7\n  local\
    \ element8\n  local element9\n  local element10\n  local element11\n  local element12\n\
    \  local element13\n  local element14\n  local element15\n  local element16\n\
    \  local element17\n  local element18\n  local element19\n  local element20\n\
    \  local element21\n  local element22\n  local element23\n  local element24\n\
    \  local element25\n  local element26\n  local element27\n  local element28\n\
    \  local element29\n  local element30\n  local element31\n  local element32\n\
    \  local element33\n  local element34\n  local element35\n  local element36\n\
    \  local element37\n  local element38\n  local element39\n  local element40\n\
    \  local element41\n  local element42\n  local element43\n  local element44\n\
    \  local element45\n  local element46\n  local element47\n  local element48\n\
    \  local element49\n  local element50\n  local element51\n  local element52\n\
    \  local element53\n  local element54\n  local element55\n  local element56\n\
    \  local element57\n  local element58\n  local element59\n  local element60\n\
    \  local element61\n  local element62\n  local element63\n  local element64\n\
    \  local element65\n  local element66\n  local element67\n  local element68\n\
    \  local element69\n  local element70\n  local element71\n  local element72\n\
    \  local element73\n  local element74\n  local element75\n  local element76\n\
    \  local element77\n  local element78\n  local element79\n  local element80\n\
    \  local element81\n  local element82\n  local element83\n  local element84\n\
    \  local element85\n  local element86\n  local element87\n  local element88\n\
    \  local element89\n  local element90\n  local element91\n  local element92\n\
    \  local element93\n  local element94\n  local element95\n  local element96\n\
    \  local element97\n  local element98\n\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local smallest_element_index=0\n\
    \    local smallest_element_distance=${smallest_element}\n    local second_smallest_element=${elements_array[1]}\n\
    \    local second_smallest_element_index=1\n    local second_smallest_element_distance=${second_smallest_element}\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    local second_smallest_element_distance\n\
    \    local smallest_element_distance\n    \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ result=\n    local number\n    local number1\n    local number2\n    local diff\n\
    \n    for (( i=1; i<${#numbers}; i++ )); do\n        number=${numbers:$i:1}\n\
    \        number1=${number:0:1}\n        number2=${number:1:1}\n        diff=$((\
    \ ${number1} - ${number2} ))\n        if [[ ${smallest} == \"\" ]]; then\n   \
    \         smallest=${number1}\n            largest=${number2}\n        elif [[\
    \ ${smallest} -gt ${number1} ]]; then\n            smallest=${number1}\n     \
    \   elif [[ ${largest} -lt ${number1} ]]; then\n            largest=${number1}\n\
    \        fi\n        if [[ ${smallest} -gt ${number2} ]]; then\n            smallest=${number2}\n\
    \        elif [[ ${largest} -lt ${number2} ]]; then\n            largest=${number2}\n\
    \        fi\n    done\n\n    for (( j=1; j<${#numbers}; j++ )); do\n        number=${numbers:$j:1}\n\
    \        number1=${number:0:1}\n        number2=${number:1:1}\n        diff=$((\
    \ ${number1} - ${number2} ))\n        if [[ ${smallest} == \"\" ]]; then\n   \
    \         smallest=${number1}\n            largest=${number2}\n        elif [[\
    \ ${smallest} -gt ${number1} ]]; then\n            smallest=${number1}\n     \
    \   elif [[ ${largest} -lt ${number1} ]]; then\n            largest=${number1}\n\
    \        fi\n        if [[ ${smallest} -gt ${number2} ]]; then\n            smallest=${number2}\n\
    \        elif [[ ${largest} -lt ${number2} ]]; then\n            largest=${number2}\n\
    \        fi\n    done\n\n    for (( i=1; i<${#numbers}; i++ )); do\n        number=${numbers:$i:1}\n\
    \        number1=${number:0:1}\n        number2=${number:1:1}\n        diff=$((\
    \ ${number1} - ${number2} ))\n        if [[ ${smallest} == \"\" ]]; then\n   \
    \         smallest=${number1}\n            largest=${number2}\n        elif [[\
    \ ${smallest} -gt ${number1} ]]; then\n            smallest=${number1}\n     \
    \   elif [[ ${\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp12zue1qs.sh: line 74: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmp12zue1qs.sh: line 74: syntax error near `}''

    /tmp/tmp12zue1qs.sh: line 74: `}''

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$(echo\
    \ $numbers | awk '{print $1}')\n    local largest=$(echo $numbers | awk '{print\
    \ $1}')\n    local smallest_index=$(echo $numbers | awk '{print $1}' | sort -n\
    \ | tail -1)\n    local largest_index=$(echo $numbers | awk '{print $1}' | sort\
    \ -n | head -1)\n    local smallest_diff=$(echo $numbers | awk '{print $1}' |\
    \ sort -n | tail -1 | awk '{print $1}' - $smallest)\n    local largest_diff=$(echo\
    \ $numbers | awk '{print $1}' | sort -n | head -1 | awk '{print $1}' - $largest)\n\
    \    local smallest_diff_index=$((smallest_index - 1))\n    local largest_diff_index=$((largest_index\
    \ - 1))\n    local smallest_diff=$((smallest_diff + 1))\n    local largest_diff=$((largest_diff\
    \ + 1))\n    local smallest_diff_index=$((smallest_diff_index + 1))\n    local\
    \ largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$((largest_diff_index + 1))\n    local smallest_diff_index=$((smallest_diff_index\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgnudn5x4.sh: line 42: unexpected EOF while looking for matching
    `)''

    /tmp/tmpgnudn5x4.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n\n    local element\n    local min_index\n\
    \    local max_index\n    local min_index2\n    local max_index2\n\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n\n    local\
    \ element\n    local min_index\n    local max_index\n    local min_index2\n  \
    \  local max_index2\n\n    local i\n    local j\n    local k\n    local l\n  \
    \  local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n\n    local element\n    local min_index\n    local\
    \ max_index\n    local min_index2\n    local max_index2\n\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n\n    local element\n\
    \    local min_index\n    local max_index\n    local min_index2\n    local max_index2\n\
    \n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \n    local element\n    local min_index\n    local max_index\n    local min_index2\n\
    \    local max_index2\n\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n\n\n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_value\n    local\
    \ element_value_as_float\n    local element_value_as_int\n    local element_value_as_string\n\
    \    local element_value_as_string_index\n    local element_value_as_string_length\n\
    \    local element_value_as_string_length_index\n    local element_value_as_string_length_index_as_int\n\
    \    local element_value_as_string_length_index_as_float\n    local element_value_as_string_length_index_as_string\n\
    \    local element_value_as_string_length_index_as_string_index\n    local element_value_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_int\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_float\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_string\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_string_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_int\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_float\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_int\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_float\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_string\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_string_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local i\n    local j\n    local diff\n\
    \    local diff2\n    local diff3\n    local diff4\n    local diff5\n    local\
    \ diff6\n    local diff7\n    local diff8\n    local diff9\n    local diff10\n\
    \    local diff11\n    local diff12\n    local diff13\n    local diff14\n    local\
    \ diff15\n    local diff16\n    local diff17\n    local diff18\n    local diff19\n\
    \    local diff20\n    local diff21\n    local diff22\n    local diff23\n    local\
    \ diff24\n    local diff25\n    local diff26\n    local diff27\n    local diff28\n\
    \    local diff29\n    local diff30\n    local diff31\n    local diff32\n    local\
    \ diff33\n    local diff34\n    local diff35\n    local diff36\n    local diff37\n\
    \    local diff38\n    local diff39\n    local diff40\n    local diff41\n    local\
    \ diff42\n    local diff43\n    local diff44\n    local diff45\n    local diff46\n\
    \    local diff47\n    local diff48\n    local diff49\n    local diff50\n    local\
    \ diff51\n    local diff52\n    local diff53\n    local diff54\n    local diff55\n\
    \    local diff56\n    local diff57\n    local diff58\n    local diff59\n    local\
    \ diff60\n    local diff61\n    local diff62\n    local diff63\n    local diff64\n\
    \    local diff65\n    local diff66\n    local diff67\n    local diff68\n    local\
    \ diff69\n    local diff70\n    local diff71\n    local diff72\n    local diff73\n\
    \    local diff74\n    local diff75\n    local diff76\n    local diff77\n    local\
    \ diff78\n    local diff79\n    local diff80\n    local diff81\n    local diff82\n\
    \    local diff83\n    local diff84\n    local diff85\n    local diff86\n    local\
    \ diff87\n    local diff88\n    local diff89\n    local diff90\n    local diff91\n\
    \    local diff92\n    local diff93\n    local diff94\n    local diff95\n    local\
    \ diff96\n    local diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_sorted=$(echo\
    \ \"$elements\" | tr \" \" \"\\n\" | sort -n | uniq)\n    local closest_elements=$(echo\
    \ \"$elements\" | tr \" \" \"\\n\" | sort -n | uniq)\n    local closest_elements_sorted=$(echo\
    \ \"$closest_elements\" | tr \" \" \"\\n\" | sort -n | uniq)\n    local smallest_element=$(echo\
    \ \"$elements_sorted\" | head -1)\n    local largest_element=$(echo \"$elements_sorted\"\
    \ | tail -1)\n    local smallest_element_sorted=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_sorted=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local largest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | tail -1)\n    local smallest_element_index=$(echo \"$closest_elements_sorted\"\
    \ | head -1)\n    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local min=$2\n  local\
    \ max=$3\n  local output\n\n  output=$(echo $elements | tr \" \" \"\\n\" | sort\
    \ -n | head -n 1)\n  while read -r line; do\n    local value=$(echo $line | cut\
    \ -d \" \" -f 1)\n    local diff=$(( $(echo \"$value - $min\" | bc -l) ))\n  \
    \  if [[ $diff -lt 0 ]]; then\n      diff=$(( $(echo \"$max - $value\" | bc -l)\
    \ ))\n    fi\n    if [[ $diff -eq 0 ]]; then\n      output=\"$value\"\n      break\n\
    \    fi\n  done <<< \"$output\"\n  echo $output\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 2: syntax error

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local elements_array=($elements)\n\
    \  local smallest_element=${elements_array[0]}\n  local second_smallest_element=${elements_array[1]}\n\
    \  local smallest_element_index=0\n  local second_smallest_element_index=1\n \
    \ local smallest_element_distance=${smallest_element}\n  local second_smallest_element_distance=${second_smallest_element}\n\
    \  local smallest_element_distance_index=0\n  local second_smallest_element_distance_index=1\n\
    \  while [ $smallest_element_index -lt ${#elements_array[@]} ]\n  do\n    local\
    \ current_distance=${elements_array[$smallest_element_index]}\n    local current_distance_index=$smallest_element_index\n\
    \    while [ $current_distance_index -lt ${#elements_array[@]} ]\n    do\n   \
    \   local current_distance=${elements_array[$current_distance_index]}\n      local\
    \ current_distance_index=$current_distance_index\n      local current_distance=$((current_distance+current_distance))\n\
    \      if [ $current_distance -gt $smallest_element_distance ]\n      then\n \
    \       smallest_element_distance=$current_distance\n        smallest_element_distance_index=$current_distance_index\n\
    \      fi\n      if [ $current_distance -gt $second_smallest_element_distance\
    \ ]\n      then\n        second_smallest_element_distance=$current_distance\n\
    \        second_smallest_element_distance_index=$current_distance_index\n    \
    \  fi\n      current_distance=$((current_distance-current_distance))\n      current_distance_index=$((current_distance_index+1))\n\
    \    done\n    smallest_element_distance=$((smallest_element_distance+smallest_element_distance))\n\
    \    smallest_element_distance_index=$((smallest_element_distance_index+1))\n\
    \    smallest_element_distance=$((smallest_element_distance+smallest_element_distance))\n\
    \    smallest_element_distance_index=$((smallest_element_distance_index+1))\n\
    \    smallest_element_distance=$((smallest_element_distance+smallest_element_distance))\n\
    \    smallest_element_distance_index=$((smallest_element_distance_index+1))\n\
    \    smallest_element_distance=$((smallest_element_distance+smallest_element_distance))\n\
    \    smallest_element_distance_index=$((smallest_element_distance_index+1))\n\
    \    smallest_element_distance=$((smallest_element_distance+smallest_element_distance))\n\
    \    smallest_element_distance_index=$((smallest_element_distance_index+1))\n\
    \    smallest_element_distance=$((smallest_element_distance+smallest_element_distance))\n\
    \    smallest_element_distance_index=$((\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphehvtl61.sh: line 54: unexpected EOF while looking for matching
    `)''

    /tmp/tmphehvtl61.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local elements=\n    local element\n\
    \    local index\n    local element\n    local i\n    local j\n    local k\n \
    \   local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=\"$1\"\n    local min=\"\
    $(echo \"$numbers\" | awk '{print $1}')\"\n    local max=\"$(echo \"$numbers\"\
    \ | awk '{print $2}')\"\n    local result\n    local i\n    local j\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local smallest=$2\n\
    \  local largest=$3\n  local smallest_element\n  local largest_element\n  local\
    \ element\n  local element_count\n  local element_count2\n  local element_count3\n\
    \  local element_count4\n  local element_count5\n  local element_count6\n  local\
    \ element_count7\n  local element_count8\n  local element_count9\n  local element_count10\n\
    \  local element_count11\n  local element_count12\n  local element_count13\n \
    \ local element_count14\n  local element_count15\n  local element_count16\n  local\
    \ element_count17\n  local element_count18\n  local element_count19\n  local element_count20\n\
    \  local element_count21\n  local element_count22\n  local element_count23\n \
    \ local element_count24\n  local element_count25\n  local element_count26\n  local\
    \ element_count27\n  local element_count28\n  local element_count29\n  local element_count30\n\
    \  local element_count31\n  local element_count32\n  local element_count33\n \
    \ local element_count34\n  local element_count35\n  local element_count36\n  local\
    \ element_count37\n  local element_count38\n  local element_count39\n  local element_count40\n\
    \  local element_count41\n  local element_count42\n  local element_count43\n \
    \ local element_count44\n  local element_count45\n  local element_count46\n  local\
    \ element_count47\n  local element_count48\n  local element_count49\n  local element_count50\n\
    \  local element_count51\n  local element_count52\n  local element_count53\n \
    \ local element_count54\n  local element_count55\n  local element_count56\n  local\
    \ element_count57\n  local element_count58\n  local element_count59\n  local element_count60\n\
    \  local element_count61\n  local element_count62\n  local element_count63\n \
    \ local element_count64\n  local element_count65\n  local element_count66\n  local\
    \ element_count67\n  local element_count68\n  local element_count69\n  local element_count70\n\
    \  local element_count71\n  local element_count72\n  local element_count73\n \
    \ local element_count74\n  local element_count75\n  local element_count76\n  local\
    \ element_count77\n  local element_count78\n  local element_count79\n  local element_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=\"$1\"\n    local min=\"\
    $(echo \"$numbers\" | awk '{print $1}' | sort -n | head -1)\"\n    local max=\"\
    $(echo \"$numbers\" | awk '{print $1}' | sort -n | tail -1)\"\n    local result\n\
    \    local i\n    local j\n    local k\n    local diff\n    local diff2\n    local\
    \ diff3\n    local diff4\n    local diff5\n    local diff6\n    local diff7\n\
    \    local diff8\n    local diff9\n    local diff10\n    local diff11\n    local\
    \ diff12\n    local diff13\n    local diff14\n    local diff15\n    local diff16\n\
    \    local diff17\n    local diff18\n    local diff19\n    local diff20\n    local\
    \ diff21\n    local diff22\n    local diff23\n    local diff24\n    local diff25\n\
    \    local diff26\n    local diff27\n    local diff28\n    local diff29\n    local\
    \ diff30\n    local diff31\n    local diff32\n    local diff33\n    local diff34\n\
    \    local diff35\n    local diff36\n    local diff37\n    local diff38\n    local\
    \ diff39\n    local diff40\n    local diff41\n    local diff42\n    local diff43\n\
    \    local diff44\n    local diff45\n    local diff46\n    local diff47\n    local\
    \ diff48\n    local diff49\n    local diff50\n    local diff51\n    local diff52\n\
    \    local diff53\n    local diff54\n    local diff55\n    local diff56\n    local\
    \ diff57\n    local diff58\n    local diff59\n    local diff60\n    local diff61\n\
    \    local diff62\n    local diff63\n    local diff64\n    local diff65\n    local\
    \ diff66\n    local diff67\n    local diff68\n    local diff69\n    local diff70\n\
    \    local diff71\n    local diff72\n    local diff73\n    local diff74\n    local\
    \ diff75\n    local diff76\n    local diff77\n    local diff78\n    local diff79\n\
    \    local diff80\n    local diff81\n    local diff82\n    local diff83\n    local\
    \ diff84\n    local diff85\n    local diff86\n    local diff87\n    local diff88\n\
    \    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local elements_array\n    local elements_array_index\n    local\
    \ elements_array_element\n    local elements_array_element_index\n    local elements_array_element_value\n\
    \    local elements_array_element_value_length\n    local elements_array_element_value_length_index\n\
    \    local elements_array_element_value_length_value\n    local elements_array_element_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_index\n    local elements_array_element_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length\n   \
    \ local elements_array_element_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local element2\n\
    \    local element3\n    local element4\n    local element5\n    local element6\n\
    \    local element7\n    local element8\n    local element9\n    local element10\n\
    \    local element11\n    local element12\n    local element13\n    local element14\n\
    \    local element15\n    local element16\n    local element17\n    local element18\n\
    \    local element19\n    local element20\n    local element21\n    local element22\n\
    \    local element23\n    local element24\n    local element25\n    local element26\n\
    \    local element27\n    local element28\n    local element29\n    local element30\n\
    \    local element31\n    local element32\n    local element33\n    local element34\n\
    \    local element35\n    local element36\n    local element37\n    local element38\n\
    \    local element39\n    local element40\n    local element41\n    local element42\n\
    \    local element43\n    local element44\n    local element45\n    local element46\n\
    \    local element47\n    local element48\n    local element49\n    local element50\n\
    \    local element51\n    local element52\n    local element53\n    local element54\n\
    \    local element55\n    local element56\n    local element57\n    local element58\n\
    \    local element59\n    local element60\n    local element61\n    local element62\n\
    \    local element63\n    local element64\n    local element65\n    local element66\n\
    \    local element67\n    local element68\n    local element69\n    local element70\n\
    \    local element71\n    local element72\n    local element73\n    local element74\n\
    \    local element75\n    local element76\n    local element77\n    local element78\n\
    \    local element79\n    local element80\n    local element81\n    local element82\n\
    \    local element83\n    local element84\n    local element85\n    local element86\n\
    \    local element87\n    local element88\n    local element89\n    local element90\n\
    \    local element91\n    local element92\n    local element93\n    local element94\n\
    \    local element95\n    local element96\n    local element97\n    local element98\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_index=\n    local\
    \ largest_index=\n    local i\n    local j\n    local num\n    local smallest_diff\n\
    \    local largest_diff\n    local smallest_num\n    local largest_num\n    local\
    \ diff\n    local diff_index\n    local smallest_num_index\n    local largest_num_index\n\
    \    local smallest_num_diff\n    local largest_num_diff\n    local smallest_num_num\n\
    \    local largest_num_num\n    local smallest_num_num_diff\n    local largest_num_num_diff\n\
    \    local smallest_num_num_num\n    local largest_num_num_num\n    local smallest_num_num_num_diff\n\
    \    local largest_num_num_num_diff\n    local smallest_num_num_num_num\n    local\
    \ largest_num_num_num_num\n    local smallest_num_num_num_num_diff\n    local\
    \ largest_num_num_num_diff\n    local smallest_num_num_num_num_num\n    local\
    \ largest_num_num_num_num\n    local smallest_num_num_num_num_diff\n    local\
    \ largest_num_num_num_diff\n    local smallest_num_num_num_num_num\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_diff\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_num\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_diff\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_num\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_diff\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_num\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_diff\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_num\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_diff\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_num\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_diff\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_num_num_num_num\n    local\
    \ largest_num_num_num_num_diff\n    local smallest_num_\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local numbers=\n    local number\n\
    \    local i\n    local j\n    local result\n\n    numbers=$(echo $elements |\
    \ sed 's/ /\" \"/g')\n    for number in $numbers; do\n        smallest=$(( smallest\
    \ > number ? smallest : number ))\n        largest=$(( largest < number ? largest\
    \ : number ))\n    done\n    for (( i=1; i<=$(( largest - smallest )); i++ ));\
    \ do\n        closest=$(( smallest + i ))\n        number=$(( closest + 1 ))\n\
    \        if [[ $elements == \"$number\" ]]; then\n            result=\"\\\"$number\\\
    \"\"\n            break\n        fi\n        if [[ $elements == \"$numbers\" ]];\
    \ then\n            result=\"\\\"$number\\\"\"\n            break\n        fi\n\
    \        if [[ $elements == \"$closest\" ]]; then\n            result=\"\\\"$closest\\\
    \"\"\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsvmzpgp1.sh: line 23: 1.0": syntax error: invalid arithmetic operator
    (error token is ".0"")

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local i\n    local j\n    local elements\n    local min_index\n    local\
    \ max_index\n    local element\n    local min\n    local max\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_count\n    local\
    \ element_count2\n    local element_count3\n    local element_count4\n    local\
    \ element_count5\n    local element_count6\n    local element_count7\n    local\
    \ element_count8\n    local element_count9\n    local element_count10\n    local\
    \ element_count11\n    local element_count12\n    local element_count13\n    local\
    \ element_count14\n    local element_count15\n    local element_count16\n    local\
    \ element_count17\n    local element_count18\n    local element_count19\n    local\
    \ element_count20\n    local element_count21\n    local element_count22\n    local\
    \ element_count23\n    local element_count24\n    local element_count25\n    local\
    \ element_count26\n    local element_count27\n    local element_count28\n    local\
    \ element_count29\n    local element_count30\n    local element_count31\n    local\
    \ element_count32\n    local element_count33\n    local element_count34\n    local\
    \ element_count35\n    local element_count36\n    local element_count37\n    local\
    \ element_count38\n    local element_count39\n    local element_count40\n    local\
    \ element_count41\n    local element_count42\n    local element_count43\n    local\
    \ element_count44\n    local element_count45\n    local element_count46\n    local\
    \ element_count47\n    local element_count48\n    local element_count49\n    local\
    \ element_count50\n    local element_count51\n    local element_count52\n    local\
    \ element_count53\n    local element_count54\n    local element_count55\n    local\
    \ element_count56\n    local element_count57\n    local element_count58\n    local\
    \ element_count59\n    local element_count60\n    local element_count61\n    local\
    \ element_count62\n    local element_count63\n    local element_count64\n    local\
    \ element_count65\n    local element_count66\n    local element_count67\n    local\
    \ element_count68\n    local element_count69\n    local element_count70\n    local\
    \ element_count71\n    local element_count72\n    local element_count73\n    local\
    \ element_count74\n    local element_count75\n    local element_count76\n    local\
    \ element_count77\n    local element_count78\n    local element_count\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_num=\n    local largest_num=\n    local\
    \ smallest_diff=\n    local largest_diff=\n    local smallest_element=\n    local\
    \ largest_element=\n    local elements=\n    local element\n    local num\n  \
    \  local diff\n    local element\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local numbers=\n    local number\n\
    \    local i\n    local j\n    local k\n    local element\n    local distance\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local elements_string\n    local elements_string_with_quotes\n\
    \    local elements_string_with_quotes_no_space\n    local elements_string_no_space\n\
    \    local elements_string_no_quotes\n    local elements_string_no_quotes_no_space\n\
    \    local elements_string_no_space_no_quotes\n    local elements_string_no_space_no_quotes_no_space\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes\n    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes\n\
    \    local elements_string_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quotes_no_space_no_quote\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local elements=()\n    local index\n    local number\n    local\
    \ number_index\n    local string\n    local string_index\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_index=0\n    local largest_index=0\n\
    \    local smallest_diffn\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local i\n    local j\n    local diff\n\
    \    local diff1\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=$4\n    local max_index=$5\n    local element\n\
    \    local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ i\n    local j\n    local result\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local element\n    local element\n    local element\n   \
    \ local element\n    local \n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local output\n\n    local smallest_element\n    local\
    \ largest_element\n\n    local smallest_element_index\n    local largest_element_index\n\
    \n    local smallest_element_value\n    local largest_element_value\n\n    local\
    \ smallest_element_value_index\n    local largest_element_value_index\n\n    local\
    \ smallest_element_index\n    local largest_element_index\n\n    local smallest_element_value\n\
    \    local largest_element_value\n\n    local smallest_element_value_index\n \
    \   local largest_element_value_index\n\n    local smallest_element_index\n  \
    \  local largest_element_index\n\n    local smallest_element_value\n    local\
    \ largest_element_value\n\n    local smallest_element_value_index\n    local largest_element_value_index\n\
    \n    local smallest_element_index\n    local largest_element_index\n\n    local\
    \ smallest_element_value\n    local largest_element_value\n\n    local smallest_element_value_index\n\
    \    local largest_element_value_index\n\n    local smallest_element_index\n \
    \   local largest_element_index\n\n    local smallest_element_value\n    local\
    \ largest_element_value\n\n    local smallest_element_value_index\n    local largest_element_value_index\n\
    \n    local smallest_element_index\n    local largest_element_index\n\n    local\
    \ smallest_element_value\n    local largest_element_value\n\n    local smallest_element_value_index\n\
    \    local largest_element_value_index\n\n    local smallest_element_index\n \
    \   local largest_element_index\n\n    local smallest_element_value\n    local\
    \ largest_element_value\n\n    local smallest_element_value_index\n    local largest_element_value_index\n\
    \n    local smallest_element_index\n    local largest_element_index\n\n    local\
    \ smallest_element_value\n    local largest_element_value\n\n    local smallest_element_value_index\n\
    \    local largest_element_value_index\n\n    local smallest_element_index\n \
    \   local largest_element_index\n\n    local smallest_element_value\n    local\
    \ largest_element_value\n\n    local smallest_element_value_index\n    local largest_element_value_index\n\
    \n    local smallest_element_index\n    local largest_element_index\n\n    local\
    \ smallest_element_value\n    local largest_element_value\n\n    local smallest_element_value_index\n\
    \    local largest_element_value_index\n\n    local smallest_element_index\n \
    \   local largest_element_index\n\n    local smallest_element_value\n    local\
    \ largest_element_value\n\n    local smallest_element_value_index\n\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local i\n    local j\n    local output\n\n    # Make sure we have at least\
    \ two elements\n    if [[ ${#elements} -lt 2 ]]; then\n        echo \"ERROR: find_closest_elements:\
    \ Not enough arguments\"\n        return 1\n    fi\n\n    # Make sure the min\
    \ and max are numbers\n    if [[ ${min} =~ ^[0-9]+$ ]]; then\n        local min_index=$((\
    \ ${min} - 1 ))\n    else\n        echo \"ERROR: find_closest_elements: min is\
    \ not a number\"\n        return 1\n    fi\n    if [[ ${max} =~ ^[0-9]+$ ]]; then\n\
    \        local max_index=$(( ${max} - 1 ))\n    else\n        echo \"ERROR: find_closest_elements:\
    \ max is not a number\"\n        return 1\n    fi\n\n    # Make sure the min and\
    \ max are in the list\n    if [[ ${min_index} -lt 0 || ${max_index} -lt 0 || ${min_index}\
    \ -gt ${#elements} || ${max_index} -gt ${#elements} ]]; then\n        echo \"\
    ERROR: find_closest_elements: min or max are out of range\"\n        return 1\n\
    \    fi\n\n    # Make sure the min and max are in the list\n    if [[ ${min_index}\
    \ -gt ${max_index} ]]; then\n        echo \"ERROR: find_closest_elements: min\
    \ is greater than max\"\n        return 1\n    fi\n\n    # Make sure the min and\
    \ max are in the list\n    if [[ ${min_index} -lt 0 || ${max_index} -lt 0 || ${min_index}\
    \ -gt ${#elements} || ${max_index} -gt ${#elements} ]]; then\n        echo \"\
    ERROR: find_closest_elements: min or max are out of range\"\n        return 1\n\
    \    fi\n\n    # Make sure the min and max are in the list\n    if [[ ${min_index}\
    \ -gt ${max_index} ]]; then\n        echo \"ERROR: find_closest_elements: min\
    \ is greater than max\"\n        return 1\n    fi\n\n    # Make sure the min and\
    \ max are in the list\n    if [[ ${min_index} -lt 0 || ${max_index} -lt 0 || ${min_index}\
    \ -gt ${#elements} || ${max_index} -gt ${#elements} ]]; then\n        echo \"\
    ERROR: find_closest_elements: min or max are out of range\"\n        return 1\n\
    \    fi\n\n    # Make sure the min and max are in the list\n    if [[ ${min_index}\
    \ -gt ${max_index} ]]; then\n        echo \"ERROR: find_closest_elements: min\
    \ is greater than max\"\n        return 1\n    fi\n\n    # Make sure the \n}\n\
    \ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local elements\n    local element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element_index\n\
    \    local largest_element_index\n    local smallest_element_value\n    local\
    \ largest_element_value\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ smallest_element_index\n    local largest_element_index\n    local smallest_element_value\n\
    \    local largest_element_value\n    local smallest_element_index\n    local\
    \ largest_element_index\n    local smallest_element_value\n    local largest_element_value\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element_value\n    local largest_element_value\n    local smallest_element_index\n\
    \    local largest_element_index\n    local smallest_element_value\n    local\
    \ largest_element_value\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ smallest_element_index\n    local largest_element_index\n    local smallest_element_value\n\
    \    local largest_element_value\n    local smallest_element_index\n    local\
    \ largest_element_index\n    local smallest_element_value\n    local largest_element_value\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element_value\n    local largest_element_value\n    local smallest_element_index\n\
    \    local largest_element_index\n    local smallest_element_value\n    local\
    \ largest_element_value\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ smallest_element_index\n    local largest_element_index\n    local smallest_element_value\n\
    \    local largest_element_value\n    local smallest_element_index\n    local\
    \ largest_element_index\n    local smallest_element_value\n    local largest_element_value\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element_value\n    local largest_element_value\n    local smallest_element_index\n\
    \    local largest_element_index\n    local smallest_element_value\n    local\
    \ largest_element_value\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_index2=0\n\
    \    local max_index2=0\n    local min_index3=0\n    local max_index3=0\n    local\
    \ min_index4=0\n    local max_index4=0\n    local min_index5=0\n    local max_index5=0\n\
    \    local min_index6=0\n    local max_index6=0\n    local min_index7=0\n    local\
    \ max_index7=0\n    local min_index8=0\n    local max_index8=0\n    local min_index9=0\n\
    \    local max_index9=0\n    local min_index10=0\n    local max_index10=0\n  \
    \  local min_index11=0\n    local max_index11=0\n    local min_index12=0\n   \
    \ local max_index12=0\n    local min_index13=0\n    local max_index13=0\n    local\
    \ min_index14=0\n    local max_index14=0\n    local min_index15=0\n    local max_index15=0\n\
    \    local min_index16=0\n    local max_index16=0\n    local min_index17=0\n \
    \   local max_index17=0\n    local min_index18=0\n    local max_index18=0\n  \
    \  local min_index19=0\n    local max_index19=0\n    local min_index20=0\n   \
    \ local max_index20=0\n    local min_index21=0\n    local max_index21=0\n    local\
    \ min_index22=0\n    local max_index22=0\n    local min_index23=0\n    local max_index23=0\n\
    \    local min_index24=0\n    local max_index24=0\n    local min_index25=0\n \
    \   local max_index25=0\n    local min_index26=0\n    local max_index26=0\n  \
    \  local min_index27=0\n    local max_index27=0\n    local min_index28=0\n   \
    \ local max_index28=0\n    local min_index29=0\n    local max_index29=0\n    local\
    \ min_index30=0\n    local max_index30=0\n    local min_index31=0\n    local max_index31=0\n\
    \    local min_index32=0\n    local max_index32=0\n    local min_index33=0\n \
    \   local max_index33=0\n    local min_index34=0\n    local max_index34=0\n  \
    \  local min_index35=0\n    local max_index35=0\n    local min_index36=0\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local elements_array\n\
    \    local i\n    local j\n    local k\n    local smallest_index\n    local largest_index\n\
    \    local elements_array_index\n    local smallest_element\n    local largest_element\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_value_index2\n    local element_value_index3\n    local element_value_index4\n\
    \    local element_value_index5\n    local element_value_index6\n    local element_value_index7\n\
    \    local element_value_index8\n    local element_value_index9\n    local element_value_index10\n\
    \    local element_value_index11\n    local element_value_index12\n    local element_value_index13\n\
    \    local element_value_index14\n    local element_value_index15\n    local element_value_index16\n\
    \    local element_value_index17\n    local element_value_index18\n    local element_value_index19\n\
    \    local element_value_index20\n    local element_value_index21\n    local element_value_index22\n\
    \    local element_value_index23\n    local element_value_index24\n    local element_value_index25\n\
    \    local element_value_index26\n    local element_value_index27\n    local element_value_index28\n\
    \    local element_value_index29\n    local element_value_index30\n    local element_value_index31\n\
    \    local element_value_index32\n    local element_value_index33\n    local element_value_index34\n\
    \    local element_value_index35\n    local element_value_index36\n    local element_value_index37\n\
    \    local element_value_index38\n    local element_value_index39\n    local element_value_index40\n\
    \    local element_value_index41\n    local element_value_index42\n    local element_value_index43\n\
    \    local element_value_index44\n    local element_value_index45\n    local element_value_index46\n\
    \    local element_value_index47\n    local element_value_index48\n    local element_value_index49\n\
    \    local element_value_index50\n    local element_value_index51\n    local element_value_index52\n\
    \    local element_value_index53\n    local element_value_index54\n    local element_value_index55\n\
    \    local element_value_index56\n    local element_value_index57\n    local element_value_index58\n\
    \    local element_value_index59\n    local element_value_index60\n    local element_value_index61\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_index2=0\n\
    \    local max_index2=0\n    local min_index3=0\n    local max_index3=0\n    local\
    \ min_index4=0\n    local max_index4=0\n    local min_index5=0\n    local max_index5=0\n\
    \    local min_index6=0\n    local max_index6=0\n    local min_index7=0\n    local\
    \ max_index7=0\n    local min_index8=0\n    local max_index8=0\n    local min_index9=0\n\
    \    local max_index9=0\n    local min_index10=0\n    local max_index10=0\n  \
    \  local min_index11=0\n    local max_index11=0\n    local min_index12=0\n   \
    \ local max_index12=0\n    local min_index13=0\n    local max_index13=0\n    local\
    \ min_index14=0\n    local max_index14=0\n    local min_index15=0\n    local max_index15=0\n\
    \    local min_index16=0\n    local max_index16=0\n    local min_index17=0\n \
    \   local max_index17=0\n    local min_index18=0\n    local max_index18=0\n  \
    \  local min_index19=0\n    local max_index19=0\n    local min_index20=0\n   \
    \ local max_index20=0\n    local min_index21=0\n    local max_index21=0\n    local\
    \ min_index22=0\n    local max_index22=0\n    local min_index23=0\n    local max_index23=0\n\
    \    local min_index24=0\n    local max_index24=0\n    local min_index25=0\n \
    \   local max_index25=0\n    local min_index26=0\n    local max_index26=0\n  \
    \  local min_index27=0\n    local max_index27=0\n    local min_index28=0\n   \
    \ local max_index28=0\n    local min_index29=0\n    local max_index29=0\n    local\
    \ min_index30=0\n    local max_index30=0\n    local min_index31=0\n    local max_index31=0\n\
    \    local min_index32=0\n    local max_index32=0\n    local min_index33=0\n \
    \   local max_index33=0\n    local min_index34=0\n    local max_index34=0\n  \
    \  local min_index35=0\n    local max_index35=0\n    local min_index36=0\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_value\n\n    smallest_element=$(echo\
    \ $elements | awk '{print $1}')\n    largest_element=$(echo $elements | awk '{print\
    \ $NF}')\n    smallest_element_index=0\n    largest_element_index=$((${#elements}\
    \ - 1))\n\n    while [ $smallest_element_index -lt $largest_element_index ]; do\n\
    \        element_value=$(echo $elements | awk -v smallest_element=$smallest_element\
    \ -v largest_element=$largest_element '{print $smallest_element, $largest_element}')\n\
    \        element_index=$(echo $element_value | awk '{print $1}')\n        if [[\
    \ $element_index -eq $smallest_element_index ]]; then\n            smallest_element_index=$((smallest_element_index\
    \ + 1))\n        elif [[ $element_index -eq $largest_element_index ]]; then\n\
    \            largest_element_index=$((largest_element_index - 1))\n        else\n\
    \            smallest_element_index=$((smallest_element_index + 1))\n        \
    \    largest_element_index=$((largest_element_index - 1))\n        fi\n    done\n\
    \n    echo $elements\n    echo $smallest_element\n    echo $largest_element\n\
    \    echo $smallest_element_index\n    echo $largest_element_index\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 28: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpad5x_ddr.sh: line 30: [[: 1.0: syntax error: invalid arithmetic operator
    (error tok'
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local min=$2\n  local\
    \ max=$3\n  local min_index=0\n  local max_index=0\n  local min_diff=99999999\n\
    \  local max_diff=-1\n  local element\n  local element2\n  local element3\n  local\
    \ element4\n  local element5\n  local element6\n  local element7\n  local element8\n\
    \  local element9\n  local element10\n  local element11\n  local element12\n \
    \ local element13\n  local element14\n  local element15\n  local element16\n \
    \ local element17\n  local element18\n  local element19\n  local element20\n \
    \ local element21\n  local element22\n  local element23\n  local element24\n \
    \ local element25\n  local element26\n  local element27\n  local element28\n \
    \ local element29\n  local element30\n  local element31\n  local element32\n \
    \ local element33\n  local element34\n  local element35\n  local element36\n \
    \ local element37\n  local element38\n  local element39\n  local element40\n \
    \ local element41\n  local element42\n  local element43\n  local element44\n \
    \ local element45\n  local element46\n  local element47\n  local element48\n \
    \ local element49\n  local element50\n  local element51\n  local element52\n \
    \ local element53\n  local element54\n  local element55\n  local element56\n \
    \ local element57\n  local element58\n  local element59\n  local element60\n \
    \ local element61\n  local element62\n  local element63\n  local element64\n \
    \ local element65\n  local element66\n  local element67\n  local element68\n \
    \ local element69\n  local element70\n  local element71\n  local element72\n \
    \ local element73\n  local element74\n  local element75\n  local element76\n \
    \ local element77\n  local element78\n  local element79\n  local element80\n \
    \ local element81\n  local element82\n  local element83\n  local element84\n \
    \ local element85\n  local element86\n  local element87\n  local element88\n \
    \ local element89\n  local element90\n  local element91\n  local element92\n \
    \ local element93\n  local element\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=\n    local largest_index=\n   \
    \ local element\n    local i\n    local j\n    local element\n    local smallest_diff\n\
    \    local largest_diff\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element_diff\n    local largest_element_diff\n    local smallest_element_element\n\
    \    local largest_element_element\n    local smallest_element_element_index\n\
    \    local largest_element_element_index\n    local smallest_element_element_diff\n\
    \    local largest_element_element_diff\n    local smallest_element_element_element\n\
    \    local largest_element_element_element\n    local smallest_element_element_element_index\n\
    \    local largest_element_element_element_index\n    local smallest_element_element_element_diff\n\
    \    local largest_element_element_element_diff\n    local smallest_element_element_element_element\n\
    \    local largest_element_element_element_element\n    local smallest_element_element_element_element_index\n\
    \    local largest_element_element_element_element_diff\n    local smallest_element_element_element_element_element\n\
    \    local largest_element_element_element_element_element\n    local smallest_element_element_element_element_element_index\n\
    \    local largest_element_element_element_element_element_element_diff\n    local\
    \ smallest_element_element_element_element_element_element_element\n    local\
    \ largest_element_element_element_element_element_element_element\n    local smallest_element_element_element_element_element_element_element_index\n\
    \    local largest_element_element_element_element_element_element_element_diff\n\
    \    local smallest_element_element_element_element_element_element_element_element\n\
    \    local largest_element_element_element_element_element_element_element_element\n\
    \    local smallest_element_element_element_element_element_element_element_element_index\n\
    \    local largest_element_element_element_element_element_element_element_element_diff\n\
    \    local smallest_element_element_element_element_element_element_element_element_element\n\
    \    local largest_element_element_element_element_element_element_element_element_element\n\
    \    local smallest_element_element_element_element_element_element_element_element_element_index\n\
    \    local largest_element_element_element_element_element_element_element_element_element_diff\n\
    \    local smallest_element_element_element_element_element_element_element_element_element_element\n\
    \    local largest_element_element_element_element_element_element_element_element_element_element\n\
    \    local smallest_element_element_element_element_element_element_element_element_element_index\n\
    \    local largest_element_element_element_element_element_element_element_element_element_diff\n\
    \    local smallest_element_element_element_element_element_element_element_element_element_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local i\n   \
    \ local j\n    local k\n    local diff\n    local diff2\n    local diff3\n   \
    \ local diff4\n    local diff5\n    local diff6\n    local diff7\n    local diff8\n\
    \    local diff9\n    local diff10\n    local diff11\n    local diff12\n    local\
    \ diff13\n    local diff14\n    local diff15\n    local diff16\n    local diff17\n\
    \    local diff18\n    local diff19\n    local diff20\n    local diff21\n    local\
    \ diff22\n    local diff23\n    local diff24\n    local diff25\n    local diff26\n\
    \    local diff27\n    local diff28\n    local diff29\n    local diff30\n    local\
    \ diff31\n    local diff32\n    local diff33\n    local diff34\n    local diff35\n\
    \    local diff36\n    local diff37\n    local diff38\n    local diff39\n    local\
    \ diff40\n    local diff41\n    local diff42\n    local diff43\n    local diff44\n\
    \    local diff45\n    local diff46\n    local diff47\n    local diff48\n    local\
    \ diff49\n    local diff50\n    local diff51\n    local diff52\n    local diff53\n\
    \    local diff54\n    local diff55\n    local diff56\n    local diff57\n    local\
    \ diff58\n    local diff59\n    local diff60\n    local diff61\n    local diff62\n\
    \    local diff63\n    local diff64\n    local diff65\n    local diff66\n    local\
    \ diff67\n    local diff68\n    local diff69\n    local diff70\n    local diff71\n\
    \    local diff72\n    local diff73\n    local diff74\n    local diff75\n    local\
    \ diff76\n    local diff77\n    local diff78\n    local diff79\n    local diff80\n\
    \    local diff81\n    local diff82\n    local diff83\n    local diff84\n    local\
    \ diff85\n    local diff86\n    local diff87\n    local diff88\n    local diff89\n\
    \    local diff90\n    local diff91\n    local diff92\n    local diff93\n    local\
    \ diff94\n    local diff95\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local min=$2\n  local\
    \ max=$3\n  local min_index\n  local max_index\n  local element\n  local index\n\
    \  local result\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local index\n    local element_list\n    local element_list_length\n\
    \    local smallest_element_list\n    local largest_element_list\n    local smallest_element_list_length\n\
    \    local largest_element_list_length\n    local smallest_element_list_element\n\
    \    local largest_element_list_element\n    local smallest_element_list_element_index\n\
    \    local largest_element_list_element_index\n    local smallest_element_list_element_value\n\
    \    local largest_element_list_element_value\n    local smallest_element_list_element_value_length\n\
    \    local largest_element_list_element_value_length\n    local smallest_element_list_element_value_length_index\n\
    \    local largest_element_list_element_value_length_index\n    local smallest_element_list_element_value_length_value\n\
    \    local largest_element_list_element_value_length_value\n    local smallest_element_list_element_value_length_value_index\n\
    \    local largest_element_list_element_value_length_value_index\n    local smallest_element_list_element_value_length_value_value\n\
    \    local largest_element_list_element_value_length_value_value\n    local smallest_element_list_element_value_length_value_value_index\n\
    \    local largest_element_list_element_value_length_value_value_index\n    local\
    \ smallest_element_list_element_value_length_value_value_value\n    local largest_element_list_element_value_length_value_value_value\n\
    \    local smallest_element_list_element_value_length_value_value_value_index\n\
    \    local largest_element_list_element_value_length_value_value_value_index\n\
    \    local smallest_element_list_element_value_length_value_value_value_value\n\
    \    local largest_element_list_element_value_length_value_value_value_value\n\
    \    local smallest_element_list_element_value_length_value_value_value_value_index\n\
    \    local largest_element_list_element_value_length_value_value_value_value_index\n\
    \    local smallest_element_list_element_value_length_value_value_value_value_value\n\
    \    local largest_element_list_element_value_length_value_value_value_value_value\n\
    \    local smallest_element_list_element_value_length_value_value_value_value_value_index\n\
    \    local largest_element_list_element_value_length_value_value_value_value_value_index\n\
    \    local smallest_element_list_element_value_length_value_value_value_value_value_value_index\n\
    \    local largest_element_list_element_value_length_value_value_value_value_value_value_index\n\
    \    local smallest_element_list_element_value_length_value_value_value_value_value_value_value_index\n\
    \    local largest_element_list_element_value_length_value_value_value_value_value_value_value_index\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local index\n    local element_list\n    local element_list_index\n\
    \    local element_list_element\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ element_list_element_index\n    local element_list_element_index\n    local\
    \ \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local elements=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_index\n\
    \    local element_count\n    local element\n    local element_value\n    local\
    \ element_index\n    local element_count\n    local element\n    local element_value\n\
    \    local element_index\n    local element_count\n    local element\n    local\
    \ element_value\n    local element_index\n    local element_count\n    local element\n\
    \    local element_value\n    local element_index\n    local element_count\n \
    \   local element\n    local element_value\n    local element_index\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_index\n\
    \    local element_count\n    local element\n    local element_value\n    local\
    \ element_index\n    local element_count\n    local element\n    local element_value\n\
    \    local element_index\n    local element_count\n    local element\n    local\
    \ element_value\n    local element_index\n    local element_count\n    local element\n\
    \    local element_value\n    local element_index\n    local element_count\n \
    \   local element\n    local element_value\n    local element_index\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_index\n\
    \    local element_count\n    local element\n    local element_value\n    local\
    \ element_index\n    local element_count\n    local element\n    local element_value\n\
    \    local element_index\n    local element_count\n    local element\n    local\
    \ element_value\n    local element_index\n    local element_count\n    local element\n\
    \    local element_value\n    local element_index\n    local element_count\n \
    \   local element\n    local element_value\n    local element_index\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_index\n\
    \    local element_count\n    local element\n    local element_value\n    local\
    \ element_index\n    local element_count\n    local element\n    local element_value\n\
    \    local element_index\n    local element_count\n    local element\n    local\
    \ element_value\n    local element_index\n    local element_count\n    local element\n\
    \    local element_value\n    local element_index\n    local element_count\n \
    \   local element\n    local element_value\n    local element_index\n    local\
    \ element_count\n    local element\n    \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_index2=0\n\
    \    local max_index2=0\n    local min_diffn\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local index\n    local elements_array\n    local elements_array_index\n\
    \    local elements_array_index2\n    local elements_array_index3\n    local elements_array_index4\n\
    \    local elements_array_index5\n    local elements_array_index6\n    local elements_array_index7\n\
    \    local elements_array_index8\n    local elements_array_index9\n    local elements_array_index10\n\
    \    local elements_array_index11\n    local elements_array_index12\n    local\
    \ elements_array_index13\n    local elements_array_index14\n    local elements_array_index15\n\
    \    local elements_array_index16\n    local elements_array_index17\n    local\
    \ elements_array_index18\n    local elements_array_index19\n    local elements_array_index20\n\
    \    local elements_array_index21\n    local elements_array_index22\n    local\
    \ elements_array_index23\n    local elements_array_index24\n    local elements_array_index25\n\
    \    local elements_array_index26\n    local elements_array_index27\n    local\
    \ elements_array_index28\n    local elements_array_index29\n    local elements_array_index30\n\
    \    local elements_array_index31\n    local elements_array_index32\n    local\
    \ elements_array_index33\n    local elements_array_index34\n    local elements_array_index35\n\
    \    local elements_array_index36\n    local elements_array_index37\n    local\
    \ elements_array_index38\n    local elements_array_index39\n    local elements_array_index40\n\
    \    local elements_array_index41\n    local elements_array_index42\n    local\
    \ elements_array_index43\n    local elements_array_index44\n    local elements_array_index45\n\
    \    local elements_array_index46\n    local elements_array_index47\n    local\
    \ elements_array_index48\n    local elements_array_index49\n    local elements_array_index50\n\
    \    local elements_array_index51\n    local elements_array_index52\n    local\
    \ elements_array_index53\n    local elements_array_index54\n    local elements_array_index55\n\
    \    local elements_array_index56\n    local elements_array_index57\n    local\
    \ elements_array_index58\n    local elements_array_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local element\n    local elements\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_value\n    local largest_value\n\
    \    local smallest_element\n    local largest_element\n\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local elements_array\n    local elements_array_index\n    local elements_array_index2\n\
    \    local elements_array_index3\n    local elements_array_index4\n    local elements_array_index5\n\
    \    local elements_array_index6\n    local elements_array_index7\n    local elements_array_index8\n\
    \    local elements_array_index9\n    local elements_array_index10\n    local\
    \ elements_array_index11\n    local elements_array_index12\n    local elements_array_index13\n\
    \    local elements_array_index14\n    local elements_array_index15\n    local\
    \ elements_array_index16\n    local elements_array_index17\n    local elements_array_index18\n\
    \    local elements_array_index19\n    local elements_array_index20\n    local\
    \ elements_array_index21\n    local elements_array_index22\n    local elements_array_index23\n\
    \    local elements_array_index24\n    local elements_array_index25\n    local\
    \ elements_array_index26\n    local elements_array_index27\n    local elements_array_index28\n\
    \    local elements_array_index29\n    local elements_array_index30\n    local\
    \ elements_array_index31\n    local elements_array_index32\n    local elements_array_index33\n\
    \    local elements_array_index34\n    local elements_array_index35\n    local\
    \ elements_array_index36\n    local elements_array_index37\n    local elements_array_index38\n\
    \    local elements_array_index39\n    local elements_array_index40\n    local\
    \ elements_array_index41\n    local elements_array_index42\n    local elements_array_index43\n\
    \    local elements_array_index44\n    local elements_array_index45\n    local\
    \ elements_array_index46\n    local elements_array_index47\n    local elements_array_index48\n\
    \    local elements_array_index49\n    local elements_array_index50\n    local\
    \ elements_array_index51\n    local elements_array_index52\n    local elements_array_index53\n\
    \    local elements_array_index54\n    local elements_array_index55\n    local\
    \ elements_array_index56\n    local elements_array_index57\n    local elements_array_index58\n\
    \    local elements_array_index59\n    local element\n}\n\ncandidate() {\n   \
    \ find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local element_index\n    local element_string\n    local element_string_index\n\
    \    local element_string_length\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_index\n    local element_value\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local index=0\n    while [ $index\
    \ -lt ${#elements} ]; do\n        local element=${elements[$index]};\n       \
    \ local distance=$(bc <<< \"scale=3; ${element} - $closest\")\n        if [ $distance\
    \ -lt $smallest ]; then\n            smallest=$distance\n            closest=$element\n\
    \        elif [ $distance -gt $largest ]; then\n            largest=$distance\n\
    \            closest=$element\n        fi\n        ((index++))\n    done\n   \
    \ echo \"$closest\"\n    echo \"$largest\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    (standard_in) 2: syntax error

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: -1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local second_smallest_element=${elements_array[1]}\n\
    \    local smallest_element_index=0\n    local second_smallest_element_index=1\n\
    \    while [ $smallest_element_index -lt ${#elements_array[@]} ]; do\n       \
    \ if [[ $elements_array[$smallest_element_index] -lt $smallest_element ]]; then\n\
    \            smallest_element=${elements_array[$smallest_element_index]}\n   \
    \         smallest_element_index=$smallest_element_index\n        fi\n       \
    \ if [[ $elements_array[$second_smallest_element_index] -lt $second_smallest_element\
    \ ]]; then\n            second_smallest_element=${elements_array[$second_smallest_element_index]}\n\
    \            second_smallest_element_index=$second_smallest_element_index\n  \
    \      fi\n    done\n    echo \"$smallest_element\"\n    echo \"$second_smallest_element\"\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=19 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=5 encoding='utf-8'>
  timestamp: 1660049117
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element=$2\n\
    \    local largest_element=$3\n    local smallest_element_index=0\n    local largest_element_index=0\n\
    \    local smallest_element_value=$(echo \"$smallest_element\" | cut -d \" \"\
    \ -f 1)\n    local largest_element_value=$(echo \"$largest_element\" | cut -d\
    \ \" \" -f 1)\n    local smallest_element_value_length=$(echo \"$smallest_element\"\
    \ | wc -c)\n    local largest_element_value_length=$(echo \"$largest_element\"\
    \ | wc -c)\n    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_value_length-1))\n\
    \    local largest_element_value_length=$((largest_element_value_length-1))\n\
    \    local smallest_element_value_length=$((smallest_element_\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgojbxcj9.sh: line 44: unexpected EOF while looking for matching
    `)''

    /tmp/tmpgojbxcj9.sh: line 61: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_index\n    local element_value\n    local element_value_as_float\n\
    \    local element_value_as_int\n    local element_value_as_string\n    local\
    \ element_value_as_string_index\n    local element_value_as_string_length\n  \
    \  local element_value_as_string_length_index\n    local element_value_as_string_length_index_as_int\n\
    \    local element_value_as_string_length_index_as_float\n    local element_value_as_string_length_index_as_string\n\
    \    local element_value_as_string_length_index_as_string_index\n    local element_value_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_int\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_float\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_string\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_string_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_int\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_float\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_int\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_float\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_string\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_string_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local output\n\
    \n    smallest=$2\n    largest=$3\n    output=()\n    elements=($elements)\n \
    \   for ((i=0; i<${#elements[@]}; i++)); do\n        element=${elements[$i]}\n\
    \        if [ -z \"$smallest\" ]; then\n            smallest=$element\n      \
    \  elif [ -z \"$largest\" ]; then\n            largest=$element\n        elif\
    \ [ \"$element\" -gt \"$largest\" ]; then\n            largest=$element\n    \
    \    elif [ \"$element\" -lt \"$smallest\" ]; then\n            smallest=$element\n\
    \        fi\n    done\n    for ((i=0; i<${#elements[@]}; i++)); do\n        element=${elements[$i]}\n\
    \        if [ -z \"$smallest\" ]; then\n            smallest=$element\n      \
    \  elif [ -z \"$largest\" ]; then\n            largest=$element\n        elif\
    \ [ \"$element\" -gt \"$largest\" ]; then\n            largest=$element\n    \
    \    elif [ \"$element\" -lt \"$smallest\" ]; then\n            smallest=$element\n\
    \        fi\n    done\n    for ((i=0; i<${#elements[@]}; i++)); do\n        element=${elements[$i]}\n\
    \        if [ \"$element\" -gt \"$largest\" ]; then\n            output+=(\"$element\"\
    )\n        elif [ \"$element\" -lt \"$smallest\" ]; then\n            output+=(\"\
    $element\")\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnfodew_n.sh: line 29: [: 3.9: integer expression expected

    /tmp/tmpnfodew_n.sh: line 31: [: 3.9: integer expression expected

    /tmp/tmpnfodew_n.sh: line 29: [: 4.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 31: [: 4.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 29: [: 5.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 31: [: 5.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 29: [: 2.2: integer expression expected

    /tmp/tmpnfodew_n.sh: line 31: [: 2.2: integer expression expected

    /tmp/tmpnfodew_n.sh: line 41: [: 1.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 43: [: 1.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 41: [: 2.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 43: [: 2.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 41: [: 3.9: integer expression expected

    /tmp/tmpnfodew_n.sh: line 43: [: 3.9: integer expression expected

    /tmp/tmpnfodew_n.sh: line 41: [: 4.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 43: [: 4.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 41: [: 5.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 43: [: 5.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 41: [: 2.2: integer expression expected

    /tmp/tmpnfodew_n.sh: line 43: [: 2.2: integer expression expected

    /tmp/tmpnfodew_n.sh: line 49: [: 1.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 51: [: 1.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 49: [: 2.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 51: [: 2.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 49: [: 3.9: integer expression expected

    /tmp/tmpnfodew_n.sh: line 51: [: 3.9: integer expression expected

    /tmp/tmpnfodew_n.sh: line 49: [: 4.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 51: [: 4.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 49: [: 5.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 51: [: 5.0: integer expression expected

    /tmp/tmpnfodew_n.sh: line 49: [: 2.2: integer expression expected

    /t'
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local element2\n\
    \    local element3\n    local element4\n    local element5\n    local element6\n\
    \    local element7\n    local element8\n    local element9\n    local element10\n\
    \    local element11\n    local element12\n    local element13\n    local element14\n\
    \    local element15\n    local element16\n    local element17\n    local element18\n\
    \    local element19\n    local element20\n    local element21\n    local element22\n\
    \    local element23\n    local element24\n    local element25\n    local element26\n\
    \    local element27\n    local element28\n    local element29\n    local element30\n\
    \    local element31\n    local element32\n    local element33\n    local element34\n\
    \    local element35\n    local element36\n    local element37\n    local element38\n\
    \    local element39\n    local element40\n    local element41\n    local element42\n\
    \    local element43\n    local element44\n    local element45\n    local element46\n\
    \    local element47\n    local element48\n    local element49\n    local element50\n\
    \    local element51\n    local element52\n    local element53\n    local element54\n\
    \    local element55\n    local element56\n    local element57\n    local element58\n\
    \    local element59\n    local element60\n    local element61\n    local element62\n\
    \    local element63\n    local element64\n    local element65\n    local element66\n\
    \    local element67\n    local element68\n    local element69\n    local element70\n\
    \    local element71\n    local element72\n    local element73\n    local element74\n\
    \    local element75\n    local element76\n    local element77\n    local element78\n\
    \    local element79\n    local element80\n    local element81\n    local element82\n\
    \    local element83\n    local element84\n    local element85\n    local element86\n\
    \    local element87\n    local element88\n    local element89\n    local element90\n\
    \    local element91\n    local element92\n    local element93\n    local element94\n\
    \    local element95\n    local element96\n    local element97\n    local element98\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest\n \
    \   local closest2\n    local closest3\n    local closest4\n    local closest5\n\
    \    local closest6\n    local closest7\n    local closest8\n    local closest9\n\
    \    local closest10\n    local closest11\n    local closest12\n    local closest13\n\
    \    local closest14\n    local closest15\n    local closest16\n    local closest17\n\
    \    local closest18\n    local closest19\n    local closest20\n    local closest21\n\
    \    local closest22\n    local closest23\n    local closest24\n    local closest25\n\
    \    local closest26\n    local closest27\n    local closest28\n    local closest29\n\
    \    local closest30\n    local closest31\n    local closest32\n    local closest33\n\
    \    local closest34\n    local closest35\n    local closest36\n    local closest37\n\
    \    local closest38\n    local closest39\n    local closest40\n    local closest41\n\
    \    local closest42\n    local closest43\n    local closest44\n    local closest45\n\
    \    local closest46\n    local closest47\n    local closest48\n    local closest49\n\
    \    local closest50\n    local closest51\n    local closest52\n    local closest53\n\
    \    local closest54\n    local closest55\n    local closest56\n    local closest57\n\
    \    local closest58\n    local closest59\n    local closest60\n    local closest61\n\
    \    local closest62\n    local closest63\n    local closest64\n    local closest65\n\
    \    local closest66\n    local closest67\n    local closest68\n    local closest69\n\
    \    local closest70\n    local closest71\n    local closest72\n    local closest73\n\
    \    local closest74\n    local closest75\n    local closest76\n    local closest77\n\
    \    local closest78\n    local closest79\n    local closest80\n    local closest81\n\
    \    local closest82\n    local closest83\n    local closest84\n    local closest85\n\
    \    local closest86\n    local closest87\n    local closest88\n    local closest89\n\
    \    local closest90\n    local closest91\n    local closest92\n    local closest93\n\
    \    local closest94\n    local closest95\n    local closest96\n    local closest97\n\
    \    local closest98\n    local closest99\n    local closest100\n    local closest101\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local element2\n    local element3\n    local element4\n    local element5\n\
    \    local element6\n    local element7\n    local element8\n    local element9\n\
    \    local element10\n    local element11\n    local element12\n    local element13\n\
    \    local element14\n    local element15\n    local element16\n    local element17\n\
    \    local element18\n    local element19\n    local element20\n    local element21\n\
    \    local element22\n    local element23\n    local element24\n    local element25\n\
    \    local element26\n    local element27\n    local element28\n    local element29\n\
    \    local element30\n    local element31\n    local element32\n    local element33\n\
    \    local element34\n    local element35\n    local element36\n    local element37\n\
    \    local element38\n    local element39\n    local element40\n    local element41\n\
    \    local element42\n    local element43\n    local element44\n    local element45\n\
    \    local element46\n    local element47\n    local element48\n    local element49\n\
    \    local element50\n    local element51\n    local element52\n    local element53\n\
    \    local element54\n    local element55\n    local element56\n    local element57\n\
    \    local element58\n    local element59\n    local element60\n    local element61\n\
    \    local element62\n    local element63\n    local element64\n    local element65\n\
    \    local element66\n    local element67\n    local element68\n    local element69\n\
    \    local element70\n    local element71\n    local element72\n    local element73\n\
    \    local element74\n    local element75\n    local element76\n    local element77\n\
    \    local element78\n    local element79\n    local element80\n    local element81\n\
    \    local element82\n    local element83\n    local element84\n    local element85\n\
    \    local element86\n    local element87\n    local element88\n    local element89\n\
    \    local element90\n    local element91\n    local element92\n    local element93\n\
    \    local element94\n    local element95\n    local element96\n    local element\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ element\n    local result\n\n    IFS=' ' read -r -a elements <<< \"$elements\"\
    \n\n    for ((i=0; i<${#elements[@]}; i++)); do\n        element=${elements[$i]}\n\
    \        smallest=${smallest:-0}\n        largest=${largest:-0}\n\n        for\
    \ ((j=0; j<${#elements[@]}; j++)); do\n            if [[ $((${elements[$j]} -\
    \ $element)) < $smallest ]]; then\n                smallest=$((${elements[$j]}\
    \ - $element))\n                closest=$element\n            fi\n           \
    \ if [[ $((${elements[$j]} - $element)) > $largest ]]; then\n                largest=$((${elements[$j]}\
    \ - $element))\n                closest=$element\n            fi\n        done\n\
    \n        result+=(\"\\\"$closest\\\"\")\n    done\n\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn25py1yu.sh: line 28: 1.0 - 1.0: syntax error: invalid arithmetic
    operator (error token is ".0 - 1.0")

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local largest_element=${elements_array[0]}\n\
    \    local smallest_element_index=0\n    local largest_element_index=0\n    local\
    \ smallest_element_diff=${smallest_element}\n    local largest_element_diff=${largest_element}\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \    local smallest_element_diff_index=0\n    local largest_element_diff_index=0\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ smallest_number\n    local largest_number\n    local index\n    local number\n\
    \    local result\n    local element\n    local elements=${numbers//[[:space:]]/}\n\
    \    local count\n    local count2\n    local count3\n    local count4\n    local\
    \ count5\n    local count6\n    local count7\n    local count8\n    local count9\n\
    \    local count10\n    local count11\n    local count12\n    local count13\n\
    \    local count14\n    local count15\n    local count16\n    local count17\n\
    \    local count18\n    local count19\n    local count20\n    local count21\n\
    \    local count22\n    local count23\n    local count24\n    local count25\n\
    \    local count26\n    local count27\n    local count28\n    local count29\n\
    \    local count30\n    local count31\n    local count32\n    local count33\n\
    \    local count34\n    local count35\n    local count36\n    local count37\n\
    \    local count38\n    local count39\n    local count40\n    local count41\n\
    \    local count42\n    local count43\n    local count44\n    local count45\n\
    \    local count46\n    local count47\n    local count48\n    local count49\n\
    \    local count50\n    local count51\n    local count52\n    local count53\n\
    \    local count54\n    local count55\n    local count56\n    local count57\n\
    \    local count58\n    local count59\n    local count60\n    local count61\n\
    \    local count62\n    local count63\n    local count64\n    local count65\n\
    \    local count66\n    local count67\n    local count68\n    local count69\n\
    \    local count70\n    local count71\n    local count72\n    local count73\n\
    \    local count74\n    local count75\n    local count76\n    local count77\n\
    \    local count78\n    local count79\n    local count80\n    local count81\n\
    \    local count82\n    local count83\n    local count84\n    local count85\n\
    \    local count86\n    local count87\n    local count88\n    local \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_value\n    local element_index\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local smallest_index\n    local largest_index\n    local element\n    local\
    \ index\n    local elements=()\n    local elements_index=0\n    local elements_length\n\
    \    local elements_length_index\n    local elements_length_index2\n    local\
    \ elements_length_index3\n    local elements_length_index4\n    local elements_length_index5\n\
    \    local elements_length_index6\n    local elements_length_index7\n    local\
    \ elements_length_index8\n    local elements_length_index9\n    local elements_length_index10\n\
    \    local elements_length_index11\n    local elements_length_index12\n    local\
    \ elements_length_index13\n    local elements_length_index14\n    local elements_length_index15\n\
    \    local elements_length_index16\n    local elements_length_index17\n    local\
    \ elements_length_index18\n    local elements_length_index19\n    local elements_length_index20\n\
    \    local elements_length_index21\n    local elements_length_index22\n    local\
    \ elements_length_index23\n    local elements_length_index24\n    local elements_length_index25\n\
    \    local elements_length_index26\n    local elements_length_index27\n    local\
    \ elements_length_index28\n    local elements_length_index29\n    local elements_length_index30\n\
    \    local elements_length_index31\n    local elements_length_index32\n    local\
    \ elements_length_index33\n    local elements_length_index34\n    local elements_length_index35\n\
    \    local elements_length_index36\n    local elements_length_index37\n    local\
    \ elements_length_index38\n    local elements_length_index39\n    local elements_length_index40\n\
    \    local elements_length_index41\n    local elements_length_index42\n    local\
    \ elements_length_index43\n    local elements_length_index44\n    local elements_length_index45\n\
    \    local elements_length_index46\n    local elements_length_index47\n    local\
    \ elements_length_index48\n    local elements_length_index49\n    local elements_length_index50\n\
    \    local elements_length_index51\n    local elements_length_index52\n    local\
    \ elements_length_index53\n    local elements_length_index54\n    local elements_length_index55\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local smallest_element\n\
    \  local smallest_element_index\n  local smallest_element_value\n  local smallest_element_value_index\n\
    \  local smallest_element_value_diff\n  local smallest_element_value_diff_index\n\
    \  local smallest_element_value_diff_value\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local element2\n\
    \    local element3\n    local element4\n    local element5\n    local element6\n\
    \    local element7\n    local element8\n    local element9\n    local element10\n\
    \    local element11\n    local element12\n    local element13\n    local element14\n\
    \    local element15\n    local element16\n    local element17\n    local element18\n\
    \    local element19\n    local element20\n    local element21\n    local element22\n\
    \    local element23\n    local element24\n    local element25\n    local element26\n\
    \    local element27\n    local element28\n    local element29\n    local element30\n\
    \    local element31\n    local element32\n    local element33\n    local element34\n\
    \    local element35\n    local element36\n    local element37\n    local element38\n\
    \    local element39\n    local element40\n    local element41\n    local element42\n\
    \    local element43\n    local element44\n    local element45\n    local element46\n\
    \    local element47\n    local element48\n    local element49\n    local element50\n\
    \    local element51\n    local element52\n    local element53\n    local element54\n\
    \    local element55\n    local element56\n    local element57\n    local element58\n\
    \    local element59\n    local element60\n    local element61\n    local element62\n\
    \    local element63\n    local element64\n    local element65\n    local element66\n\
    \    local element67\n    local element68\n    local element69\n    local element70\n\
    \    local element71\n    local element72\n    local element73\n    local element74\n\
    \    local element75\n    local element76\n    local element77\n    local element78\n\
    \    local element79\n    local element80\n    local element81\n    local element82\n\
    \    local element83\n    local element84\n    local element85\n    local element86\n\
    \    local element87\n    local element88\n    local element89\n    local element90\n\
    \    local element91\n    local element92\n    local element93\n    local element94\n\
    \    local element95\n    local element96\n    local element97\n    local element98\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_index=0\n    local largest_index=0\n\
    \    local element\n    local element_index\n    local element_value\n    local\
    \ element_value_index\n    local element_value_diff\n    local element_value_diff_index\n\
    \    local element_value_diff_value\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value_index\n\
    \    local element_value_diff_value_index\n    local element_value_diff_value\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local i\n   \
    \ local j\n    local k\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_element\n}\n\ncandidate() {\n   \
    \ find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_index\n    local element_value\n\n    smallest_element_index=0\n\
    \    largest_element_index=0\n    smallest_element_value=$(echo $elements | cut\
    \ -d \" \" -f 1)\n    largest_element_value=$(echo $elements | cut -d \" \" -f\
    \ 1)\n    for element_index in $(seq 1 $((${#elements} - 1))); do\n        element=$(echo\
    \ $elements | cut -d \" \" -f $element_index)\n        element_value=$(echo $element\
    \ | cut -d \".\" -f 1)\n        if [ \"$smallest_element_value\" = \"$element_value\"\
    \ ]; then\n            smallest_element_index=$element_index\n            smallest_element_value=$element_value\n\
    \        fi\n        if [ \"$largest_element_value\" = \"$element_value\" ]; then\n\
    \            largest_element_index=$element_index\n            largest_element_value=$element_value\n\
    \        fi\n    done\n    smallest_element=$(echo $elements | cut -d \" \" -f\
    \ $smallest_element_index)\n    largest_element=$(echo $elements | cut -d \" \"\
    \ -f $largest_element_index)\n    echo \"$smallest_element\"\n    echo \"$largest_element\"\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_value\n    local\
    \ element_value_split\n    local element_value_split2\n    local element_value_split3\n\
    \    local element_value_split4\n    local element_value_split5\n    local element_value_split6\n\
    \    local element_value_split7\n    local element_value_split8\n    local element_value_split9\n\
    \    local element_value_split10\n    local element_value_split11\n    local element_value_split12\n\
    \    local element_value_split13\n    local element_value_split14\n    local element_value_split15\n\
    \    local element_value_split16\n    local element_value_split17\n    local element_value_split18\n\
    \    local element_value_split19\n    local element_value_split20\n    local element_value_split21\n\
    \    local element_value_split22\n    local element_value_split23\n    local element_value_split24\n\
    \    local element_value_split25\n    local element_value_split26\n    local element_value_split27\n\
    \    local element_value_split28\n    local element_value_split29\n    local element_value_split30\n\
    \    local element_value_split31\n    local element_value_split32\n    local element_value_split33\n\
    \    local element_value_split34\n    local element_value_split35\n    local element_value_split36\n\
    \    local element_value_split37\n    local element_value_split38\n    local element_value_split39\n\
    \    local element_value_split40\n    local element_value_split41\n    local element_value_split42\n\
    \    local element_value_split43\n    local element_value_split44\n    local element_value_split45\n\
    \    local element_value_split46\n    local element_value_split47\n    local element_value_split48\n\
    \    local element_value_split49\n    local element_value_split50\n    local element_value_split51\n\
    \    local element_value_split52\n    local element_value_split53\n    local element_value_split54\n\
    \    local element_value_split55\n    local element_value_split56\n    local element_value_split57\n\
    \    local element_value_split58\n    local element_value_split59\n    local element_value_split60\n\
    \    local element_value_split61\n    local element_value_split62\n    local element_value_split63\n\
    \    local element_value_split64\n    local element_value_split65\n    local element_value_split66\n\
    \    local element_value_split\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_string\n    local\
    \ element_string_index\n    local element_string_length\n    local element_string_length_index\n\
    \    local element_string_length_value\n    local element_string_length_value_diff\n\
    \    local element_string_length_value_diff_index\n    local element_string_length_value_diff_value\n\
    \    local element_string_length_value_diff_value_diff\n    local element_string_length_value_diff_value_diff_index\n\
    \    local element_string_length_value_diff_value_diff_value\n    local element_string_length_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_index\n    local\
    \ element_string_length_value_diff_value_diff_value_diff_value\n    local element_string_length_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_index\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local index=0\n    local element\n\
    \    local element2\n    local element3\n    local element4\n    local element5\n\
    \    local element6\n    local element7\n    local element8\n    local element9\n\
    \    local element10\n    local element11\n    local element12\n    local element13\n\
    \    local element14\n    local element15\n    local element16\n    local element17\n\
    \    local element18\n    local element19\n    local element20\n    local element21\n\
    \    local element22\n    local element23\n    local element24\n    local element25\n\
    \    local element26\n    local element27\n    local element28\n    local element29\n\
    \    local element30\n    local element31\n    local element32\n    local element33\n\
    \    local element34\n    local element35\n    local element36\n    local element37\n\
    \    local element38\n    local element39\n    local element40\n    local element41\n\
    \    local element42\n    local element43\n    local element44\n    local element45\n\
    \    local element46\n    local element47\n    local element48\n    local element49\n\
    \    local element50\n    local element51\n    local element52\n    local element53\n\
    \    local element54\n    local element55\n    local element56\n    local element57\n\
    \    local element58\n    local element59\n    local element60\n    local element61\n\
    \    local element62\n    local element63\n    local element64\n    local element65\n\
    \    local element66\n    local element67\n    local element68\n    local element69\n\
    \    local element70\n    local element71\n    local element72\n    local element73\n\
    \    local element74\n    local element75\n    local element76\n    local element77\n\
    \    local element78\n    local element79\n    local element80\n    local element81\n\
    \    local element82\n    local element83\n    local element84\n    local element85\n\
    \    local element86\n    local element87\n    local element88\n    local element89\n\
    \    local element90\n    local element91\n    local element92\n    local element93\n\
    \    local element94\n    local element95\n    local element96\n    local element97\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local elements_array=($elements)\n\
    \  local smallest_element=${elements_array[0]}\n  local second_smallest_element=${elements_array[1]}\n\
    \  local smallest_element_index=0\n  local second_smallest_element_index=1\n \
    \ while [[ $smallest_element_index -le $#elements_array && $second_smallest_element_index\
    \ -le $#elements_array ]]; do\n    local smallest_element_value=${elements_array[$smallest_element_index]}\n\
    \    local second_smallest_element_value=${elements_array[$second_smallest_element_index]}\n\
    \    if [[ $smallest_element_value -gt $second_smallest_element_value ]]; then\n\
    \      smallest_element=$smallest_element_value\n      second_smallest_element=$second_smallest_element_value\n\
    \      smallest_element_index=$smallest_element_index\n      second_smallest_element_index=$second_smallest_element_index\n\
    \    elif [[ $smallest_element_value -lt $second_smallest_element_value ]]; then\n\
    \      smallest_element=$second_smallest_element_value\n      second_smallest_element=$smallest_element_value\n\
    \      smallest_element_index=$second_smallest_element_index\n      second_smallest_element_index=$smallest_element_index\n\
    \    else\n      smallest_element=$smallest_element_value\n      second_smallest_element=$second_smallest_element_value\n\
    \      smallest_element_index=$second_smallest_element_index\n      second_smallest_element_index=$smallest_element_index\n\
    \    fi\n  done\n  echo \"$smallest_element\"\n  echo \"$second_smallest_element\"\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn0kivgeh.sh: line 17: [[: 1elements_array: value too great for
    base (error token is "1elements_array")

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_sorted=$(echo\
    \ $elements | tr \" \" \"\\n\" | sort -n)\n    local smallest_element=$(echo $elements_sorted\
    \ | head -1)\n    local smallest_element_index=$(echo $elements_sorted | awk '{print\
    \ $1}' | head -1)\n    local second_element=$(echo $elements_sorted | awk '{print\
    \ $2}' | head -1)\n    local second_element_index=$(echo $elements_sorted | awk\
    \ '{print $2}' | head -1)\n    local third_element=$(echo $elements_sorted | awk\
    \ '{print $3}' | head -1)\n    local third_element_index=$(echo $elements_sorted\
    \ | awk '{print $3}' | head -1)\n    local fourth_element=$(echo $elements_sorted\
    \ | awk '{print $4}' | head -1)\n    local fourth_element_index=$(echo $elements_sorted\
    \ | awk '{print $4}' | head -1)\n    local fifth_element=$(echo $elements_sorted\
    \ | awk '{print $5}' | head -1)\n    local fifth_element_index=$(echo $elements_sorted\
    \ | awk '{print $5}' | head -1)\n    local sixth_element=$(echo $elements_sorted\
    \ | awk '{print $6}' | head -1)\n    local sixth_element_index=$(echo $elements_sorted\
    \ | awk '{print $6}' | head -1)\n    local seventh_element=$(echo $elements_sorted\
    \ | awk '{print $7}' | head -1)\n    local seventh_element_index=$(echo $elements_sorted\
    \ | awk '{print $7}' | head -1)\n    local eighth_element=$(echo $elements_sorted\
    \ | awk '{print $8}' | head -1)\n    local eighth_element_index=$(echo $elements_sorted\
    \ | awk '{print $8}' | head -1)\n    local ninth_element=$(echo $elements_sorted\
    \ | awk '{print $9}' | head -1)\n    local ninth_element_index=$(echo $elements_sorted\
    \ | awk '{print $9}' | head -1)\n    local tenth_element=$(echo $elements_sorted\
    \ | awk '{print $10}' | head -1)\n    local tenth_element_index=$(echo $elements_sorted\
    \ | awk '{print $10}' | head -1)\n    local eleventh_element=$(echo $elements_sorted\
    \ | awk '{print $11}' | head -1)\n    local eleventh_element_index=$(echo $elements_sorted\
    \ | awk '{print $11}' | head -1)\n    local twelfth_element=$(echo $elements_sorted\
    \ | awk '{print $12}' | head -1)\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local smallest_element_index\n    local smallest_element_value\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_diff\n    local\
    \ smallest_element_value_diff_index\n    local smallest_element_value_diff_value\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local smallest_element_value_diff_value_index\n\
    \    local smallest_element_value_diff_value_index\n    local \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local element\n    local i\n    local\
    \ j\n    local diff\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local diff96\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest\n\
    \    local closest2\n    local closest3\n    local closest4\n    local closest5\n\
    \    local closest6\n    local closest7\n    local closest8\n    local closest9\n\
    \    local closest10\n    local closest11\n    local closest12\n    local closest13\n\
    \    local closest14\n    local closest15\n    local closest16\n    local closest17\n\
    \    local closest18\n    local closest19\n    local closest20\n    local closest21\n\
    \    local closest22\n    local closest23\n    local closest24\n    local closest25\n\
    \    local closest26\n    local closest27\n    local closest28\n    local closest29\n\
    \    local closest30\n    local closest31\n    local closest32\n    local closest33\n\
    \    local closest34\n    local closest35\n    local closest36\n    local closest37\n\
    \    local closest38\n    local closest39\n    local closest40\n    local closest41\n\
    \    local closest42\n    local closest43\n    local closest44\n    local closest45\n\
    \    local closest46\n    local closest47\n    local closest48\n    local closest49\n\
    \    local closest50\n    local closest51\n    local closest52\n    local closest53\n\
    \    local closest54\n    local closest55\n    local closest56\n    local closest57\n\
    \    local closest58\n    local closest59\n    local closest60\n    local closest61\n\
    \    local closest62\n    local closest63\n    local closest64\n    local closest65\n\
    \    local closest66\n    local closest67\n    local closest68\n    local closest69\n\
    \    local closest70\n    local closest71\n    local closest72\n    local closest73\n\
    \    local closest74\n    local closest75\n    local closest76\n    local closest77\n\
    \    local closest78\n    local closest79\n    local closest80\n    local closest81\n\
    \    local closest82\n    local closest83\n    local closest84\n    local closest85\n\
    \    local closest86\n    local closest87\n    local closest88\n    local closest89\n\
    \    local closest90\n    local closest91\n    local closest92\n    local closest93\n\
    \    local closest94\n    local closest95\n    local closest96\n    local closest97\n\
    \    local closest98\n    local closest99\n    local closest100\n    local closest101\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=\"$1\"\n    local closest=\"\
    $(echo \"$numbers\" | sort -n | head -n 1)\"\n    local closest2=\"$(echo \"$numbers\"\
    \ | sort -n | tail -n 1)\"\n    local result\n    for number in $numbers; do\n\
    \        if [ \"$number\" -lt \"$closest\" ]; then\n            result=\"$closest\"\
    \n            closest=\"$number\"\n        elif [ \"$number\" -lt \"$closest2\"\
    \ ]; then\n            result=\"$closest2\"\n            closest2=\"$number\"\n\
    \        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5vo8knun.sh: line 16: [: 1.0: integer expression expected

    /tmp/tmp5vo8knun.sh: line 19: [: 1.0: integer expression expected

    /tmp/tmp5vo8knun.sh: line 16: [: 2.0: integer expression expected

    /tmp/tmp5vo8knun.sh: line 19: [: 2.0: integer expression expected

    /tmp/tmp5vo8knun.sh: line 16: [: 3.9: integer expression expected

    /tmp/tmp5vo8knun.sh: line 19: [: 3.9: integer expression expected

    /tmp/tmp5vo8knun.sh: line 16: [: 4.0: integer expression expected

    /tmp/tmp5vo8knun.sh: line 19: [: 4.0: integer expression expected

    /tmp/tmp5vo8knun.sh: line 16: [: 5.0: integer expression expected

    /tmp/tmp5vo8knun.sh: line 19: [: 5.0: integer expression expected

    /tmp/tmp5vo8knun.sh: line 16: [: 2.2: integer expression expected

    /tmp/tmp5vo8knun.sh: line 19: [: 2.2: integer expression expected

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local i\n    local j\n    local diff\n    local diff_index\n    local diff_value\n\
    \    local diff_value_index\n    local diff_value_index2\n    local diff_value_index3\n\
    \    local diff_value_index4\n    local diff_value_index5\n    local diff_value_index6\n\
    \    local diff_value_index7\n    local diff_value_index8\n    local diff_value_index9\n\
    \    local diff_value_index10\n    local diff_value_index11\n    local diff_value_index12\n\
    \    local diff_value_index13\n    local diff_value_index14\n    local diff_value_index15\n\
    \    local diff_value_index16\n    local diff_value_index17\n    local diff_value_index18\n\
    \    local diff_value_index19\n    local diff_value_index20\n    local diff_value_index21\n\
    \    local diff_value_index22\n    local diff_value_index23\n    local diff_value_index24\n\
    \    local diff_value_index25\n    local diff_value_index26\n    local diff_value_index27\n\
    \    local diff_value_index28\n    local diff_value_index29\n    local diff_value_index30\n\
    \    local diff_value_index31\n    local diff_value_index32\n    local diff_value_index33\n\
    \    local diff_value_index34\n    local diff_value_index35\n    local diff_value_index36\n\
    \    local diff_value_index37\n    local diff_value_index38\n    local diff_value_index39\n\
    \    local diff_value_index40\n    local diff_value_index41\n    local diff_value_index42\n\
    \    local diff_value_index43\n    local diff_value_index44\n    local diff_value_index45\n\
    \    local diff_value_index46\n    local diff_value_index47\n    local diff_value_index48\n\
    \    local diff_value_index49\n    local diff_value_index50\n    local diff_value_index51\n\
    \    local diff_value_index52\n    local diff_value_index53\n    local diff_value_index54\n\
    \    local diff_value_index55\n    local diff_value_index56\n    local diff_value_index57\n\
    \    local diff_value_index58\n    local diff_value_index59\n    local diff_value_index60\n\
    \    local diff_value_index61\n    local diff_value_index62\n    local diff_value_index63\n\
    \    local diff_value_index64\n    local diff_value_index65\n    local diff_value\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=\n    local largest_index=\n   \
    \ local element\n    local element_index\n    local element_count\n    local element_count2\n\
    \    local element_count3\n    local element_count4\n    local element_count5\n\
    \    local element_count6\n    local element_count7\n    local element_count8\n\
    \    local element_count9\n    local element_count10\n    local element_count11\n\
    \    local element_count12\n    local element_count13\n    local element_count14\n\
    \    local element_count15\n    local element_count16\n    local element_count17\n\
    \    local element_count18\n    local element_count19\n    local element_count20\n\
    \    local element_count21\n    local element_count22\n    local element_count23\n\
    \    local element_count24\n    local element_count25\n    local element_count26\n\
    \    local element_count27\n    local element_count28\n    local element_count29\n\
    \    local element_count30\n    local element_count31\n    local element_count32\n\
    \    local element_count33\n    local element_count34\n    local element_count35\n\
    \    local element_count36\n    local element_count37\n    local element_count38\n\
    \    local element_count39\n    local element_count40\n    local element_count41\n\
    \    local element_count42\n    local element_count43\n    local element_count44\n\
    \    local element_count45\n    local element_count46\n    local element_count47\n\
    \    local element_count48\n    local element_count49\n    local element_count50\n\
    \    local element_count51\n    local element_count52\n    local element_count53\n\
    \    local element_count54\n    local element_count55\n    local element_count56\n\
    \    local element_count57\n    local element_count58\n    local element_count59\n\
    \    local element_count60\n    local element_count61\n    local element_count62\n\
    \    local element_count63\n    local element_count64\n    local element_count65\n\
    \    local element_count66\n    local element_count67\n    local element_count68\n\
    \    local element_count69\n    local element_count70\n    local element_count71\n\
    \    local element_count72\n    local element_count73\n    local element_count74\n\
    \    local element_count75\n    local element_count76\n    local element_count77\n\
    \    local element_count78\n    local element_count79\n\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_index=\n    local\
    \ largest_index=\n    local i\n    local j\n    local num\n    local nums\n  \
    \  local nums_len\n    local smallest_num\n    local largest_num\n    local smallest_num_index\n\
    \    local largest_num_index\n    local smallest_num_index\n    local largest_num_index\n\
    \    local smallest_num\n    local largest_num\n    local smallest_num_index\n\
    \    local largest_num_index\n    local smallest_num\n    local largest_num\n\
    \    local smallest_num_index\n    local largest_num_index\n    local smallest_num\n\
    \    local largest_num\n    local smallest_num_index\n    local largest_num_index\n\
    \    local smallest_num\n    local largest_num\n    local smallest_num_index\n\
    \    local largest_num_index\n    local smallest_num\n    local largest_num\n\
    \    local smallest_num_index\n    local largest_num_index\n    local smallest_num\n\
    \    local largest_num\n    local smallest_num_index\n    local largest_num_index\n\
    \    local smallest_num\n    local largest_num\n    local smallest_num_index\n\
    \    local largest_num_index\n    local smallest_num\n    local largest_num\n\
    \    local smallest_num_index\n    local largest_num_index\n    local smallest_num\n\
    \    local largest_num\n    local smallest_num_index\n    local largest_num_index\n\
    \    local smallest_num\n    local largest_num\n    local smallest_num_index\n\
    \    local largest_num_index\n    local smallest_num\n    local largest_num\n\
    \    local smallest_num_index\n    local largest_num_index\n    local smallest_num\n\
    \    local largest_num\n    local smallest_num_index\n    local largest_num_index\n\
    \    local smallest_num\n    local largest_num\n    local smallest_num_index\n\
    \    local largest_num_index\n    local smallest_num\n    local largest_num\n\
    \    local smallest_num_index\n    local largest_num_index\n    local smallest_num\n\
    \    local largest_num\n    local smallest_num_index\n    local largest_num_index\n\
    \    local smallest_num\n    local largest_num\n    local smallest_num_index\n\
    \    local largest_num\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"\
    3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element=$2\n\
    \    local largest_element=$3\n    local smallest_element_index=0\n    local largest_element_index=0\n\
    \    local smallest_element_distance=$((largest_element_index - smallest_element_index))\n\
    \    local largest_element_distance=$((smallest_element_index - largest_element_index))\n\
    \    local smallest_element_string=$(echo $smallest_element | sed 's/ /\\\\ /g')\n\
    \    local largest_element_string=$(echo $largest_element | sed 's/ /\\\\ /g')\n\
    \    local smallest_element_string_index=0\n    local largest_element_string_index=0\n\
    \    local smallest_element_string_distance=$((largest_element_string_index -\
    \ smallest_element_string_index))\n    local largest_element_string_distance=$((smallest_element_string_index\
    \ - largest_element_string_index))\n    local smallest_element_string=$(echo $smallest_element_string\
    \ | sed 's/ /\\\\ /g')\n    local largest_element_string=$(echo $largest_element_string\
    \ | sed 's/ /\\\\ /g')\n    local smallest_element_string_distance=$((largest_element_string_distance\
    \ - smallest_element_string_distance))\n    local largest_element_string_distance=$((smallest_element_string_distance\
    \ - largest_element_string_distance))\n    local smallest_element_string_index=0\n\
    \    local largest_element_string_index=0\n    local smallest_element_string_distance=$((largest_element_string_index\
    \ - smallest_element_string_index))\n    local largest_element_string_distance=$((smallest_element_string_index\
    \ - largest_element_string_index))\n    local smallest_element_string=$(echo $smallest_element_string\
    \ | sed 's/ /\\\\ /g')\n    local largest_element_string=$(echo $largest_element_string\
    \ | sed 's/ /\\\\ /g')\n    local smallest_element_string_distance=$((largest_element_string_distance\
    \ - smallest_element_string_distance))\n    local largest_element_string_distance=$((smallest_element_string_distance\
    \ - largest_element_string_distance))\n    local smallest_element_string=$(echo\
    \ $smallest_element_string | sed 's/ /\\\\ /g')\n    local largest_element_string=$(echo\
    \ $largest_element_string | sed 's/ /\\\\ /g')\n    local smallest_element_string_distance=$((largest_element_string_distance\
    \ - smallest_element_string_distance))\n    local largest_element_string_distance=$((smallest_element_string_distance\
    \ - largest_element_string_distance))\n    local smallest_element_string\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local i\n    local j\n    local diff\n\
    \    local diff1\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: -1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local second_smallest_element=${elements_array[1]}\n\
    \    local smallest_element_index=0\n    local second_smallest_element_index=1\n\
    \    local smallest_element_diff=${smallest_element}\n    local second_smallest_element_diff=${second_smallest_element}\n\
    \    local smallest_element_diff_index=0\n    local second_smallest_element_diff_index=1\n\
    \    local smallest_element_diff_indexes=()\n    local second_smallest_element_diff_indexes=()\n\
    \    while [[ ${#elements_array[@]} -gt 1 ]]; do\n        local smallest_element_diff_index=$((smallest_element_diff_index+1))\n\
    \        local second_smallest_element_diff_index=$((second_smallest_element_diff_index+1))\n\
    \        local smallest_element_diff=${elements_array[smallest_element_diff_index]}\n\
    \        local second_smallest_element_diff=${elements_array[second_smallest_element_diff_index]}\n\
    \        local smallest_element_diff_indexes=(\"${smallest_element_diff_indexes[@]}\"\
    \ \"$smallest_element_diff_index\")\n        local second_smallest_element_diff_indexes=(\"\
    ${second_smallest_element_diff_indexes[@]}\" \"$second_smallest_element_diff_index\"\
    )\n        if [[ ${smallest_element} -gt ${second_smallest_element} ]]; then\n\
    \            smallest_element=${elements_array[smallest_element_diff_index]}\n\
    \            second_smallest_element=${elements_array[second_smallest_element_diff_index]}\n\
    \            smallest_element_diff=${elements_array[smallest_element_diff_index]}\n\
    \            second_smallest_element_diff=${elements_array[second_smallest_element_diff_index]}\n\
    \            smallest_element_diff_index=$((smallest_element_diff_index+1))\n\
    \            second_smallest_element_diff_index=$((second_smallest_element_diff_index+1))\n\
    \            smallest_element_diff=${elements_array[smallest_element_diff_index]}\n\
    \            second_smallest_element_diff=${elements_array[second_smallest_element_diff_index]}\n\
    \            smallest_element_diff_indexes=(\"${smallest_element_diff_indexes[@]}\"\
    \ \"$smallest_element_diff_index\")\n            second_smallest_element_diff_indexes=(\"\
    ${second_smallest_element_diff_indexes[@]}\" \"$second_smallest_element_diff_index\"\
    )\n        fi\n    done\n    local smallest_element_diff_index=$((smallest_element_diff_index+1))\n\
    \    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660049117
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element\n    local largest_element\n\
    \    local elements=()\n    local index=0\n    while [ $index -lt ${#numbers}\
    \ ]; do\n        smallest_element=$(echo \"${numbers[$index]}\" | awk '{print\
    \ $1}')\n        largest_element=$(echo \"${numbers[$index]}\" | awk '{print $1}')\n\
    \        if [ \"${smallest_element}\" -gt \"${largest_element}\" ]; then\n   \
    \         smallest_element=$(echo \"${numbers[$index]}\" | awk '{print $1}')\n\
    \            largest_element=$(echo \"${numbers[$index]}\" | awk '{print $1}')\n\
    \        fi\n        elements[$index]=\"${smallest_element}\"\n        ((index++))\n\
    \    done\n    echo ${elements[@]}\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7f_542b9.sh: line 21: [: 1.0: integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    /tmp/tmp7f_542b9.sh: line 21: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local element\n    local i\n    local\
    \ j\n    local diff\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local diff96\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local element\n    local i\n    local j\n    local\
    \ smallest_index\n    local largest_index\n    local smallest_value\n    local\
    \ largest_value\n    local element\n    local elements_array\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local number\n    local closest\n\
    \    local smallest\n    local largest\n    local index\n    local number\n  \
    \  local result\n    local i\n    local j\n    local result\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n    local number\n    local\
    \ number\n    local number\n    local number\n    local number\n    local number\n\
    \    local number\n    local number\n    local number\n}\n\ncandidate() {\n  \
    \  find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local numbers=$1\n  local closest=\n  local\
    \ smallest=\n  local largest=\n  local i=\n  local j=\n  local elements=\n  local\
    \ element\n  local result=\n  local element\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local number\n  local number\n\
    \  local number\n  local number\n  local number\n  local \n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_index=0\n    local largest_index=0\n\
    \    local smallest_diff=10000000000\n    local largest_diff=10000000000\n   \
    \ local smallest_string=\"\"\n    local largest_string=\"\"\n    local index=0\n\
    \    local diff=10000000000\n    local string=\"\"\n    local elements=\"\"\n\
    \    local elements_count=${#numbers[@]}\n    local elements_string=\"\"\n   \
    \ local elements_count=${#numbers[@]}\n    local elements_string=\"\"\n    local\
    \ elements_count=${#numbers[@]}\n    local elements_string=\"\"\n    local elements_count=${#numbers[@]}\n\
    \    local elements_string=\"\"\n    local elements_count=${#numbers[@]}\n   \
    \ local elements_string=\"\"\n    local elements_count=${#numbers[@]}\n    local\
    \ elements_string=\"\"\n    local elements_count=${#numbers[@]}\n    local elements_string=\"\
    \"\n    local elements_count=${#numbers[@]}\n    local elements_string=\"\"\n\
    \    local elements_count=${#numbers[@]}\n    local elements_string=\"\"\n   \
    \ local elements_count=${#numbers[@]}\n    local elements_string=\"\"\n    local\
    \ elements_count=${#numbers[@]}\n    local elements_string=\"\"\n    local elements_count=${#numbers[@]}\n\
    \    local elements_string=\"\"\n    local elements_count=${#numbers[@]}\n   \
    \ local elements_string=\"\"\n    local elements_count=${#numbers[@]}\n    local\
    \ elements_string=\"\"\n    local elements_count=${#numbers[@]}\n    local elements_string=\"\
    \"\n    local elements_count=${#numbers[@]}\n    local elements_string=\"\"\n\
    \    local elements_count=${#numbers[@]}\n    local elements_string=\"\"\n   \
    \ local elements_count=${#numbers[@]}\n    local elements_string=\"\"\n    local\
    \ elements_count=${#numbers[@]}\n    local elements_string=\"\"\n    local elements_count=${#numbers[@]}\n\
    \    local elements_string=\"\"\n    local elements_count=${#numbers[@]}\n   \
    \ local elements_string=\"\"\n    local elements_count=${#numbers[@]}\n    local\
    \ elements_string=\"\"\n    local element\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_sorted=(\
    \ $(echo \"$elements\" | tr \" \" \"\\n\" | sort -n ) )\n    local smallest_element=$(\
    \ echo \"${elements_sorted[0]}\" )\n    local second_smallest_element=$( echo\
    \ \"${elements_sorted[1]}\" )\n    local smallest_element_index=0\n    local second_smallest_element_index=1\n\
    \    while [ \"$smallest_element_index\" -lt \"$#\" ] && [ \"$second_smallest_element_index\"\
    \ -lt \"$#\" ]\n    do\n        local smallest_element_distance=$( echo \"${elements_sorted[$smallest_element_index]}\"\
    \ \\\n            | awk -F'[\" \"]' '{print $1}' )\n        local second_smallest_element_distance=$(\
    \ echo \"${elements_sorted[$second_smallest_element_index]}\" \\\n           \
    \ | awk -F'[\" \"]' '{print $1}' )\n        if [ \"$smallest_element_distance\"\
    \ -gt \"$second_smallest_element_distance\" ]\n        then\n            smallest_element=$(\
    \ echo \"${elements_sorted[$smallest_element_index]}\" )\n            second_smallest_element=$(\
    \ echo \"${elements_sorted[$second_smallest_element_index]}\" )\n            smallest_element_index=$((\
    \ $smallest_element_index + 1 ))\n        else\n            second_smallest_element=$(\
    \ echo \"${elements_sorted[$second_smallest_element_index]}\" )\n            smallest_element_index=$((\
    \ $second_smallest_element_index + 1 ))\n        fi\n    done\n    echo \"$smallest_element\"\
    \n    echo \"$second_smallest_element\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local output\n\
    \n    smallest=$elements\n    largest=$elements\n    smallest=${smallest%?}\n\
    \    largest=${largest%?}\n\n    for (( i=1; i<${#elements}; i++ )); do\n    \
    \    element=${elements##* }\n        smallest=${element}\n        largest=${element}\n\
    \        for (( j=i+1; j<${#elements}; j++ )); do\n            element=${elements##*\
    \ }\n            smallest=${smallest}${smallest}\n            largest=${largest}${element}\n\
    \        done\n        if [[ ${smallest} -gt ${largest} ]]; then\n           \
    \ smallest=${element}\n        fi\n        if [[ ${largest} -gt ${smallest} ]];\
    \ then\n            largest=${element}\n        fi\n    done\n\n    output=$(echo\
    \ \"${smallest} ${largest}\")\n    echo \"$output\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8pvaju8l.sh: line 33: [[: 2.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22.22'
  stdout: ''
  timestamp: 1660049116
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=\"$1\"\n    local min=\"\
    $(echo \"$numbers\" | sort -n | head -n 1)\"\n    local max=\"$(echo \"$numbers\"\
    \ | sort -n | tail -n 1)\"\n    local output\n    for number in $numbers; do\n\
    \        if [ \"$number\" == \"$min\" ]; then\n            output=\"$min\"\n \
    \       elif [ \"$number\" == \"$max\" ]; then\n            output=\"$max\"\n\
    \        else\n            output=\"$number\"\n        fi\n    done\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local min=$2\n  \
    \  local max=$3\n    local min_index=0\n    local max_index=0\n    local min_index2=0\n\
    \    local max_index2=0\n    local min_index3=0\n    local max_index3=0\n    local\
    \ min_index4=0\n    local max_index4=0\n    local min_index5=0\n    local max_index5=0\n\
    \    local min_index6=0\n    local max_index6=0\n    local min_index7=0\n    local\
    \ max_index7=0\n    local min_index8=0\n    local max_index8=0\n    local min_index9=0\n\
    \    local max_index9=0\n    local min_index10=0\n    local max_index10=0\n  \
    \  local min_index11=0\n    local max_index11=0\n    local min_index12=0\n   \
    \ local max_index12=0\n    local min_index13=0\n    local max_index13=0\n    local\
    \ min_index14=0\n    local max_index14=0\n    local min_index15=0\n    local max_index15=0\n\
    \    local min_index16=0\n    local max_index16=0\n    local min_index17=0\n \
    \   local max_index17=0\n    local min_index18=0\n    local max_index18=0\n  \
    \  local min_index19=0\n    local max_index19=0\n    local min_index20=0\n   \
    \ local max_index20=0\n    local min_index21=0\n    local max_index21=0\n    local\
    \ min_index22=0\n    local max_index22=0\n    local min_index23=0\n    local max_index23=0\n\
    \    local min_index24=0\n    local max_index24=0\n    local min_index25=0\n \
    \   local max_index25=0\n    local min_index26=0\n    local max_index26=0\n  \
    \  local min_index27=0\n    local max_index27=0\n    local min_index28=0\n   \
    \ local max_index28=0\n    local min_index29=0\n    local max_index29=0\n    local\
    \ min_index30=0\n    local max_index30=0\n    local min_index31=0\n    local max_index31=0\n\
    \    local min_index32=0\n    local max_index32=0\n    local min_index33=0\n \
    \   local max_index33=0\n    local min_index34=0\n    local max_index34=0\n  \
    \  local min_index35=0\n    local max_index35=0\n    local min_index36=0\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local second_smallest_element=${elements_array[1]}\n\
    \    local smallest_element_index=0\n    local second_smallest_element_index=1\n\
    \    local smallest_element_distance=${smallest_element}\n    local second_smallest_element_distance=${second_smallest_element}\n\
    \    local smallest_element_distance_index=0\n    local second_smallest_element_distance_index=1\n\
    \    local smallest_element_distance_value=${smallest_element}\n    local second_smallest_element_distance_value=${second_smallest_element}\n\
    \    local smallest_element_distance_value_index=0\n    local second_smallest_element_distance_value_index=1\n\
    \    local smallest_element_distance_value_value=${smallest_element}\n    local\
    \ second_smallest_element_distance_value_value=${second_smallest_element}\n  \
    \  local smallest_element_distance_value_value_index=0\n    local second_smallest_element_distance_value_value_index=1\n\
    \    local smallest_element_distance_value_value_value=${smallest_element}\n \
    \   local second_smallest_element_distance_value_value_value=${second_smallest_element}\n\
    \    local smallest_element_distance_value_value_value_index=0\n    local second_smallest_element_distance_value_value_value_index=1\n\
    \    local smallest_element_distance_value_value_value_value=${smallest_element}\n\
    \    local second_smallest_element_distance_value_value_value_value=${second_smallest_element}\n\
    \    local smallest_element_distance_value_value_value_index=0\n    local second_smallest_element_distance_value_value_value_index=1\n\
    \    local smallest_element_distance_value_value_value_value=${smallest_element}\n\
    \    local second_smallest_element_distance_value_value_value_value=${second_smallest_element}\n\
    \    local smallest_element_distance_value_value_value_value_index=0\n    local\
    \ second_smallest_element_distance_value_value_value_value_index=1\n    local\
    \ smallest_element_distance_value_value_value_value_value=${smallest_element}\n\
    \    local second_smallest_element_distance_value_value_value_value=${second_smallest_element}\n\
    \    local smallest_element_distance_value_value_value_value_index=0\n    local\
    \ second_smallest_element_distance_value_value_value_index=1\n    local smallest_element_distance_value_value_value_value=${smallest_element}\n\
    \    local second_smallest_element_distance_value_value_value_value=${second_smallest_element}\n\
    \    local smallest_element_distance_value_value_value_value_index=0\n    local\
    \ second_smallest_element_distance_value_value_value_index=1\n    local smallest_element_distance_value_value_value\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local elements=()\n    local index\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local result\n\n    smallest=$2\n\
    \    largest=$3\n\n    IFS=' ' read -ra numbers <<< \"$numbers\"\n    IFS=' '\
    \ read -ra result <<< \"${numbers[0]} ${numbers[1]}\"\n\n    for (( i=1; i<${#numbers[@]};\
    \ i++ )); do\n        for (( j=0; j<${#numbers[@]}; j++ )); do\n            if\
    \ [[ ${numbers[i]} -gt ${numbers[j]} ]]; then\n                smallest=$numbers[i]\n\
    \                largest=$numbers[j]\n            fi\n        done\n    done\n\
    \n    IFS=' ' read -ra result <<< \"${result[0]} ${result[1]}\"\n\n    echo \"\
    $result\"\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprq7jp3vc.sh: line 26: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 3.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 3.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 3.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 3.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 3.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 3.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmprq7jp3vc.sh: line 26: [[: 5.0: syntax error: invalid arithmetic operator
    (error tok'
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local elements_array=( $elements )\n    local smallest_array=(\
    \ $smallest )\n    local largest_array=( $largest )\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local smallest_value\n    local largest_value\n    local index\n    local\
    \ value\n    local element\n    local result\n\n    smallest_element=${smallest_array[0]}\n\
    \    largest_element=${largest_array[0]}\n    smallest_index=${smallest_array[0]}\n\
    \    largest_index=${largest_array[0]}\n    smallest_value=${smallest_array[0]}\n\
    \    largest_value=${largest_array[0]}\n    for index in ${!elements_array[@]};\
    \ do\n        value=${elements_array[$index]}\n        if [ \"$smallest_element\"\
    \ == \"$value\" ]; then\n            smallest_element=${elements_array[$index]}\n\
    \            smallest_index=${index}\n        fi\n        if [ \"$largest_element\"\
    \ == \"$value\" ]; then\n            largest_element=${elements_array[$index]}\n\
    \            largest_index=${index}\n        fi\n        if [ \"$smallest_value\"\
    \ == \"$value\" ]; then\n            smallest_value=${value}\n            smallest_index=${index}\n\
    \        fi\n        if [ \"$largest_value\" == \"$value\" ]; then\n         \
    \   largest_value=${value}\n            largest_index=${index}\n        fi\n \
    \   done\n\n    result=( ${elements_array[@]:$smallest_index} ${elements_array[@]:$largest_index}\
    \ )\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=\n    local largest_index=\n   \
    \ local smallest_value=\n    local largest_value=\n    local index=0\n    local\
    \ value=\n    local result=\n    local elements=\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=\n    local largest_index=\n   \
    \ local smallest_value=\n    local largest_value=\n    local index=0\n    local\
    \ value=\n    local elements=\n    local result=\n    local element\n    local\
    \ index\n    local element\n    local value\n    local element\n    local index\n\
    \    local element\n    local value\n    local element\n    local index\n    local\
    \ element\n    local value\n    local element\n    local index\n    local element\n\
    \    local value\n    local element\n    local index\n    local element\n    local\
    \ value\n    local element\n    local index\n    local element\n    local value\n\
    \    local element\n    local index\n    local element\n    local value\n    local\
    \ element\n    local index\n    local element\n    local value\n    local element\n\
    \    local index\n    local element\n    local value\n    local element\n    local\
    \ index\n    local element\n    local value\n    local element\n    local index\n\
    \    local element\n    local value\n    local element\n    local index\n    local\
    \ element\n    local value\n    local element\n    local index\n    local element\n\
    \    local value\n    local element\n    local index\n    local element\n    local\
    \ value\n    local element\n    local index\n    local element\n    local value\n\
    \    local element\n    local index\n    local element\n    local value\n    local\
    \ element\n    local index\n    local element\n    local value\n    local element\n\
    \    local index\n    local element\n    local value\n    local element\n    local\
    \ index\n    local element\n    local value\n    local element\n    local index\n\
    \    local element\n    local value\n    local element\n    local index\n    local\
    \ element\n    local value\n    local element\n    local index\n    local element\n\
    \    local value\n    local element\n    local index\n    local element\n    local\
    \ value\n    local element\n    local index\n    local element\n    local value\n\
    \    local element\n    local index\n    local element\n    local value\n    local\
    \ element\n    local index\n    local element\n    local value\n    local element\n\
    \    local index\n    local element\n    local value\n    local element\n    local\
    \ index\n    local element\n    local value\n    local element\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_element=\n    local\
    \ largest_element=\n    local elements_array=( $elements )\n    local i j\n\n\
    \    for (( i = 0; i < ${#elements_array[@]}; i++ )); do\n        local element=${elements_array[i]}\n\
    \        local element_array=( $element )\n        local smallest_distance=\n\
    \        local largest_distance=\n        local smallest_element=\n        local\
    \ largest_element=\n        for (( j=0; j < ${#element_array[@]}; j++ )); do\n\
    \            local distance=$(( ${element_array[j]} - ${element_array[i]} ))\n\
    \            if (( smallest_distance == 0 )); then\n                smallest_distance=$distance\n\
    \                smallest_element=${element_array[j]}\n            else\n    \
    \            if (( smallest_distance > $distance )); then\n                  \
    \  smallest_distance=$distance\n                    smallest_element=${element_array[j]}\n\
    \                fi\n            fi\n            if (( largest_distance == 0 ));\
    \ then\n                largest_distance=$distance\n                largest_element=${element_array[j]}\n\
    \            else\n                if (( largest_distance < $distance )); then\n\
    \                    largest_distance=$distance\n                    largest_element=${element_array[j]}\n\
    \                fi\n            fi\n        done\n        if (( smallest_distance\
    \ < $smallest_distance )); then\n            smallest=$smallest_element\n    \
    \        smallest_distance=$smallest_distance\n        else\n            if ((\
    \ smallest_distance > $smallest_distance )); then\n                smallest=$smallest_element\n\
    \                smallest_distance=$smallest_distance\n            fi\n      \
    \  fi\n        if (( largest_distance < $largest_distance )); then\n         \
    \   largest=$largest_element\n            largest_distance=$largest_distance\n\
    \        else\n            if (( largest_distance > $largest_distance )); then\n\
    \                largest=$largest_element\n                largest_distance=$largest_distance\n\
    \            fi\n        fi\n    done\n    echo \"$smallest $largest\"\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5yawd77i.sh: line 28: 1.0 - 1.0 : syntax error: invalid arithmetic
    operator (error token is ".0 - 1.0 ")

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local k\n    local smallest_diff\n\
    \    local largest_diff\n    local diff\n    local diff1\n    local diff2\n  \
    \  local diff3\n    local diff4\n    local diff5\n    local diff6\n    local diff7\n\
    \    local diff8\n    local diff9\n    local diff10\n    local diff11\n    local\
    \ diff12\n    local diff13\n    local diff14\n    local diff15\n    local diff16\n\
    \    local diff17\n    local diff18\n    local diff19\n    local diff20\n    local\
    \ diff21\n    local diff22\n    local diff23\n    local diff24\n    local diff25\n\
    \    local diff26\n    local diff27\n    local diff28\n    local diff29\n    local\
    \ diff30\n    local diff31\n    local diff32\n    local diff33\n    local diff34\n\
    \    local diff35\n    local diff36\n    local diff37\n    local diff38\n    local\
    \ diff39\n    local diff40\n    local diff41\n    local diff42\n    local diff43\n\
    \    local diff44\n    local diff45\n    local diff46\n    local diff47\n    local\
    \ diff48\n    local diff49\n    local diff50\n    local diff51\n    local diff52\n\
    \    local diff53\n    local diff54\n    local diff55\n    local diff56\n    local\
    \ diff57\n    local diff58\n    local diff59\n    local diff60\n    local diff61\n\
    \    local diff62\n    local diff63\n    local diff64\n    local diff65\n    local\
    \ diff66\n    local diff67\n    local diff68\n    local diff69\n    local diff70\n\
    \    local diff71\n    local diff72\n    local diff73\n    local diff74\n    local\
    \ diff75\n    local diff76\n    local diff77\n    local diff78\n    local diff79\n\
    \    local diff80\n    local diff81\n    local diff82\n    local diff83\n    local\
    \ diff84\n    local diff85\n    local diff86\n    local diff87\n    local diff88\n\
    \    local diff89\n    local diff\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local smallest_diff\n    local\
    \ largest_diff\n    local diff\n    local smallest_elements_string\n    local\
    \ largest_elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local elements_string\n    local elements_string\n\
    \    local elements_string\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local index=0\n    while [ $index\
    \ -lt ${#elements} ]; do\n        local element=${elements[$index]} # Get the\
    \ current element\n        local distance=$(( ${element} - $closest )) # Calculate\
    \ distance to closest element\n        if [ $distance -lt 0 ]; then # Element\
    \ is closer to smallest element\n            smallest=$element\n            smallestIndex=$index\n\
    \        elif [ $distance -gt 0 ]; then # Element is closer to largest element\n\
    \            largest=$element\n            largestIndex=$index\n        fi\n \
    \       (( index++ )) # Increment index\n    done\n    local result=\n    if [\
    \ $smallest -ne $closest ]; then # Return smallest element if smallest element\
    \ is not closest\n        result=$smallest\n    elif [ $largest -ne $closest ];\
    \ then # Return largest element if largest element is not closest\n        result=$largest\n\
    \    else\n        result=$closest\n    fi\n    echo $result\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmmdba9en.sh: line 18: 1.0 2.0 3.9 4.0 5.0 2.2 -  : syntax error:
    invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 -  ")

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local elements_array=($elements)\n\
    \  local smallest_element=${elements_array[0]}\n  local second_smallest_element=${elements_array[1]}\n\
    \  local smallest_element_index=0\n  local second_smallest_element_index=1\n \
    \ local smallest_element_distance=${smallest_element}\n  local second_smallest_element_distance=${second_smallest_element}\n\
    \  local smallest_element_distance_index=0\n  local second_smallest_element_distance_index=1\n\
    \  local smallest_element_distance_value=${smallest_element}\n  local second_smallest_element_distance_value=${second_smallest_element}\n\
    \  local smallest_element_distance_value_index=0\n  local second_smallest_element_distance_value_index=1\n\
    \  local smallest_element_distance_value_value=${smallest_element}\n  local second_smallest_element_distance_value_value=${second_smallest_element}\n\
    \  local smallest_element_distance_value_value_index=0\n  local second_smallest_element_distance_value_value_index=1\n\
    \  local smallest_element_distance_value_value_value=${smallest_element}\n  local\
    \ second_smallest_element_distance_value_value_value=${second_smallest_element}\n\
    \  local smallest_element_distance_value_value_value_index=0\n  local second_smallest_element_distance_value_value_value_index=1\n\
    \  local smallest_element_distance_value_value_value_value=${smallest_element}\n\
    \  local second_smallest_element_distance_value_value_value_value=${second_smallest_element}\n\
    \  local smallest_element_distance_value_value_value_index=0\n  local second_smallest_element_distance_value_value_value_index=1\n\
    \  local smallest_element_distance_value_value_value_value=${smallest_element}\n\
    \  local second_smallest_element_distance_value_value_value_value=${second_smallest_element}\n\
    \  local smallest_element_distance_value_value_value_value_index=0\n  local second_smallest_element_distance_value_value_value_value_index=1\n\
    \  local smallest_element_distance_value_value_value_value_value=${smallest_element}\n\
    \  local second_smallest_element_distance_value_value_value_value_value=${second_smallest_element}\n\
    \  while [[ ${#elements_array[@]} -gt 0 ]]; do\n    local current_element=${elements_array[$smallest_element_distance_value_value_value_value_index]}\n\
    \    local current_element_distance=${smallest_element_distance_value_value_value_value}\n\
    \    local current_element_distance_index=0\n    local current_element_distance_value=${current_element}\n\
    \    local current_element_distance_value_index=0\n    local current_element_distance_value_value=${current_element}\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk97k2qwg.sh: line 50: syntax error near unexpected token `}''

    /tmp/tmpk97k2qwg.sh: line 50: `}''

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local smallest_distance\n  \
    \  local largest_distance\n    local distance\n    local smallest_index\n    local\
    \ largest_index\n    local index\n    local elements_array\n    local elements_array_index\n\
    \    local elements_array_element\n    local elements_array_element_index\n  \
    \  local elements_array_element_value\n    local elements_array_element_value_length\n\
    \    local elements_array_element_value_length_index\n    local elements_array_element_value_length_value\n\
    \    local elements_array_element_value_length_value_length\n    local elements_array_element_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value\n    local elements_array_element_value_length_value_length_value_index\n\
    \    local elements_array_element_value_length_value_length_value_value\n    local\
    \ elements_array_element_value_length_value_length_value_value_index\n    local\
    \ elements_array_element_value_length_value_length_value_value\n    local elements_array_element_value_length_value_length_value_value_index\n\
    \    local elements_array_element_value_length_value_length_value_value\n    local\
    \ elements_array_element_value_length_value_length_value_value\n    local elements_array_element_value_length_value_length_value_value_index\n\
    \    local elements_array_element_value_length_value_length_value_value\n    local\
    \ elements_array_element_value_length_value_length_value_value_index\n    local\
    \ elements_array_element_value_length_value_length_value_value\n    local elements_array_element_value_length_value_length_value_value_index\n\
    \    local elements_array_element_value_length_value_length_value_value\n    local\
    \ elements_array_element_value_length_value_length_value_value_index\n    local\
    \ elements_array_element_value_length_value_length_value_value\n    local elements_array_element_value_length_value_length_value_value_index\n\
    \    local elements_array_element_value_length_value_length_value_value\n    local\
    \ elements_array_element_value_length_value_length_value_value_index\n    local\
    \ elements_array_element_value_length_value_length_value_value\n    local elements_array_element_value_length_value_length_value_value_index\n\
    \    local elements_array_element_value_length_value_length_value_value\n    local\
    \ elements_array_element_value_length_value_length_value_value_index\n    local\
    \ elements_array_element_value_length_value_length_value_value\n    local elements_array_element_value_length_value_length_value_value_index\n\
    \    local elements_array_element_value_length_value_length_value\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_count\n    local\
    \ element_count2\n    local element_count3\n    local element_count4\n    local\
    \ element_count5\n    local element_count6\n    local element_count7\n    local\
    \ element_count8\n    local element_count9\n    local element_count10\n    local\
    \ element_count11\n    local element_count12\n    local element_count13\n    local\
    \ element_count14\n    local element_count15\n    local element_count16\n    local\
    \ element_count17\n    local element_count18\n    local element_count19\n    local\
    \ element_count20\n    local element_count21\n    local element_count22\n    local\
    \ element_count23\n    local element_count24\n    local element_count25\n    local\
    \ element_count26\n    local element_count27\n    local element_count28\n    local\
    \ element_count29\n    local element_count30\n    local element_count31\n    local\
    \ element_count32\n    local element_count33\n    local element_count34\n    local\
    \ element_count35\n    local element_count36\n    local element_count37\n    local\
    \ element_count38\n    local element_count39\n    local element_count40\n    local\
    \ element_count41\n    local element_count42\n    local element_count43\n    local\
    \ element_count44\n    local element_count45\n    local element_count46\n    local\
    \ element_count47\n    local element_count48\n    local element_count49\n    local\
    \ element_count50\n    local element_count51\n    local element_count52\n    local\
    \ element_count53\n    local element_count54\n    local element_count55\n    local\
    \ element_count56\n    local element_count57\n    local element_count58\n    local\
    \ element_count59\n    local element_count60\n    local element_count61\n    local\
    \ element_count62\n    local element_count63\n    local element_count64\n    local\
    \ element_count65\n    local element_count66\n    local element_count67\n    local\
    \ element_count68\n    local element_count69\n    local element_count70\n    local\
    \ element_count71\n    local element_count72\n    local element_count73\n    local\
    \ element_count74\n    local element_count75\n    local element_count76\n    local\
    \ element_count77\n    local element_count78\n    local element_count\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$(echo\
    \ $numbers | awk '{print $1}')\n    local largest=$(echo $numbers | awk '{print\
    \ $NF}')\n    local smallest_index=$(echo $numbers | awk '{print index($1, $1)}')\n\
    \    local largest_index=$(echo $numbers | awk '{print index($1, $NF)}')\n   \
    \ local smallest_diff=$(echo $numbers | awk '{print ($1 - smallest)}' | bc)\n\
    \    local largest_diff=$(echo $numbers | awk '{print ($largest - $1)}' | bc)\n\
    \    local smallest_diff_index=$(($smallest_index - 1))\n    local largest_diff_index=$(($largest_index\
    \ - 1))\n    local smallest_diff_index=$(($smallest_diff_index + 1))\n    local\
    \ largest_diff_index=$(($largest_diff_index + 1))\n    local smallest_diff=$(echo\
    \ $numbers | awk '{print ($smallest - $1)}' | bc)\n    local largest_diff=$(echo\
    \ $numbers | awk '{print ($largest - $1)}' | bc)\n    local smallest_diff_index=$(($smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$(($largest_diff_index + 1))\n    local\
    \ smallest_diff=$(echo $numbers | awk '{print ($smallest - $1)}' | bc)\n    local\
    \ largest_diff=$(echo $numbers | awk '{print ($largest - $1)}' | bc)\n    local\
    \ smallest_diff_index=$(($smallest_diff_index + 1))\n    local largest_diff_index=$(($largest_diff_index\
    \ + 1))\n    local smallest_diff=$(echo $numbers | awk '{print ($smallest - $1)}'\
    \ | bc)\n    local largest_diff=$(echo $numbers | awk '{print ($largest - $1)}'\
    \ | bc)\n    local smallest_diff_index=$(($smallest_diff_index + 1))\n    local\
    \ largest_diff_index=$(($largest_diff_index + 1))\n    local smallest_diff=$(echo\
    \ $numbers | awk '{print ($smallest - $1)}' | bc)\n    local largest_diff=$(echo\
    \ $numbers | awk '{print ($largest - $1)}' | bc)\n    local smallest_diff_index=$(($smallest_diff_index\
    \ + 1))\n    local largest_diff_index=$(($largest_diff_index + 1))\n    local\
    \ smallest_diff=$(echo $numbers | awk '{print ($smallest - $1)}' | bc)\n    local\
    \ largest_diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ k=\n    local result=\n    local elements=\n    local element\n    local number\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local result\n    local element\n\
    \    local element_index\n    local element\n    local element_index\n    local\
    \ element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    \    local element\n    local element_index\n    local element\n    local element_index\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local elements\n    local element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local i\n    local j\n    local diff\n\
    \    local diff1\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element\n    local largest_element\n\
    \    local i\n    local j\n    local output\n    local number\n    local numbers_array\n\
    \    local smallest_elements_array\n    local largest_elements_array\n    local\
    \ smallest_element\n    local largest_element\n    local smallest_element_index\n\
    \    local largest_element_index\n    local smallest_element_value\n    local\
    \ largest_element_value\n    local smallest_element_value_index\n    local largest_element_value_index\n\
    \    local smallest_element_value_array\n    local largest_element_value_array\n\
    \    local smallest_element_value_array_index\n    local largest_element_value_array_index\n\
    \    local smallest_element_value_array_value\n    local largest_element_value_array_value\n\
    \    local smallest_element_value_array_value_index\n    local largest_element_value_array_value_index\n\
    \    local smallest_element_value_array_value_array\n    local largest_element_value_array_value_array\n\
    \    local smallest_element_value_array_value_array_index\n    local largest_element_value_array_value_array_index\n\
    \    local smallest_element_value_array_value_array_value\n    local largest_element_value_array_value_array_value\n\
    \    local smallest_element_value_array_value_array_value_index\n    local largest_element_value_array_value_array_value_index\n\
    \    local smallest_element_value_array_value_array_value_array\n    local largest_element_value_array_value_array_value_array\n\
    \    local smallest_element_value_array_value_array_value_array_value\n    local\
    \ largest_element_value_array_value_array_value_array_value\n    local smallest_element_value_array_value_array_value_array_value_index\n\
    \    local largest_element_value_array_value_array_value_array_value_index\n \
    \   local smallest_element_value_array_value_array_value_array_value_array\n \
    \   local largest_element_value_array_value_array_value_array_value_array\n  \
    \  local smallest_element_value_array_value_array_value_array_value_array_value\n\
    \    local largest_element_value_array_value_array_value_array_value_array_value\n\
    \    local smallest_element_value_array_value_array_value_array_value_array_value_index\n\
    \    local largest_element_value_array_value_array_value_array_value_array_value_index\n\
    \    local smallest_element_value_array_value_array_value_array_value_array_value_array\n\
    \    local largest_element_value_array_value_array_value_array_value_array_value_array\n\
    \    local smallest_element_value_array_value_array_value_array_value_array_value_array_value\n\
    \    local largest_element_value_array_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local closest=\n  local\
    \ closest2=\n  local closest3=\n  local closest4=\n  local closest5=\n  local\
    \ closest6=\n  local closest7=\n  local closest8=\n  local closest9=\n  local\
    \ closest10=\n  local closest11=\n  local closest12=\n  local closest13=\n  local\
    \ closest14=\n  local closest15=\n  local closest16=\n  local closest17=\n  local\
    \ closest18=\n  local closest19=\n  local closest20=\n  local closest21=\n  local\
    \ closest22=\n  local closest23=\n  local closest24=\n  local closest25=\n  local\
    \ closest26=\n  local closest27=\n  local closest28=\n  local closest29=\n  local\
    \ closest30=\n  local closest31=\n  local closest32=\n  local closest33=\n  local\
    \ closest34=\n  local closest35=\n  local closest36=\n  local closest37=\n  local\
    \ closest38=\n  local closest39=\n  local closest40=\n  local closest41=\n  local\
    \ closest42=\n  local closest43=\n  local closest44=\n  local closest45=\n  local\
    \ closest46=\n  local closest47=\n  local closest48=\n  local closest49=\n  local\
    \ closest50=\n  local closest51=\n  local closest52=\n  local closest53=\n  local\
    \ closest54=\n  local closest55=\n  local closest56=\n  local closest57=\n  local\
    \ closest58=\n  local closest59=\n  local closest60=\n  local closest61=\n  local\
    \ closest62=\n  local closest63=\n  local closest64=\n  local closest65=\n  local\
    \ closest66=\n  local closest67=\n  local closest68=\n  local closest69=\n  local\
    \ closest70=\n  local closest71=\n  local closest72=\n  local closest73=\n  local\
    \ closest74=\n  local closest75=\n  local closest76=\n  local closest77=\n  local\
    \ closest78=\n  local closest79=\n  local closest80=\n  local closest81=\n  local\
    \ closest82=\n  local closest83=\n  local closest84=\n  local closest85=\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local numbers=\n    local number\n\
    \    local i\n    local j\n    local element\n    local result\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local i\n    local j\n    local diff\n\
    \    local diff1\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local second_smallest_element=${elements_array[1]}\n\
    \    local smallest_element_index=0\n    local second_smallest_element_index=1\n\
    \    local smallest_element_distance=${smallest_element}\n    local second_smallest_element_distance=${second_smallest_element}\n\
    \    local smallest_element_distance_index=0\n    local second_smallest_element_distance_index=1\n\
    \    local smallest_element_distance_string=${smallest_element_distance}\n   \
    \ local second_smallest_element_distance_string=${second_smallest_element_distance}\n\
    \    local smallest_element_distance_string_index=0\n    local second_smallest_element_distance_string_index=1\n\
    \    local smallest_element_distance_string_length=${#smallest_element_distance_string}\n\
    \    local second_smallest_element_distance_string_length=${#second_smallest_element_distance_string}\n\
    \    local smallest_element_distance_string_length_index=0\n    local second_smallest_element_distance_string_length_index=1\n\
    \    local smallest_element_distance_string_length_difference=${smallest_element_distance_string_length}\n\
    \    local second_smallest_element_distance_string_length_difference=${second_smallest_element_distance_string_length}\n\
    \    local smallest_element_distance_string_length_difference_index=0\n    local\
    \ second_smallest_element_distance_string_length_difference_index=1\n    local\
    \ smallest_element_distance_string_length_difference=${smallest_element_distance_string_length}\n\
    \    local second_smallest_element_distance_string_length_difference=${second_smallest_element_distance_string_length}\n\
    \    local smallest_element_distance_string_length_difference_index=0\n    local\
    \ second_smallest_element_distance_string_length_difference_index=1\n    local\
    \ smallest_element_distance_string_length_difference=${smallest_element_distance_string_length}\n\
    \    local second_smallest_element_distance_string_length_difference=${second_smallest_element_distance_string_length}\n\
    \    local smallest_element_distance_string_length_difference_index=0\n    local\
    \ second_smallest_element_distance_string_length_difference_index=1\n    local\
    \ smallest_element_distance_string_length_difference=${smallest_element_distance_string_length}\n\
    \    local second_smallest_element_distance_string_length_difference=${second_smallest_element_distance_string_length}\n\
    \    local smallest_element_distance_string_length_difference_index=0\n    local\
    \ second_smallest_element_distance_string_length_difference_index=1\n    local\
    \ smallest_element_distance_string_length_difference=${smallest_element_distance_string_length}\n\
    \    local second_smallest_element_distance_string_length_difference=${second_smallest_element_distance_string_length}\n\
    \    local smallest_element_distance_string_length_difference\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local smallest_element\n\
    \  local smallest_element_index\n  local smallest_element_value\n  local smallest_element_value_index\n\
    \  local smallest_element_value_diff\n  local smallest_element_value_diff_index\n\
    \  local smallest_element_value_diff_value\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local smallest_element_value_diff_value_index\n  local smallest_element_value_diff_value_index\n\
    \  local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min_index\n\
    \    local max_index\n    local element\n    local min_index\n    local max_index\n\
    \    local element\n    local min_index\n    local max_index\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min_index\n\
    \    local max_index\n    local element\n    local min_index\n    local max_index\n\
    \    local element\n    local min_index\n    local max_index\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min_index\n\
    \    local max_index\n    local element\n    local min_index\n    local max_index\n\
    \    local element\n    local min_index\n    local max_index\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min_index\n\
    \    local max_index\n    local element\n    local min_index\n    local max_index\n\
    \    local element\n    local min_index\n    local max_index\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min_index\n\
    \    local max_index\n    local element\n    local min_index\n    local max_index\n\
    \    local element\n    local min_index\n    local max_index\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min_index\n\
    \    local max_index\n    local element\n    local min_index\n    local max_index\n\
    \    local element\n    local min_index\n    local max_index\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min_index\n\
    \    local max_index\n    local element\n    local min_index\n    local max_index\n\
    \    local element\n    local min_index\n    local max_index\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min_index\n\
    \    local max_index\n    local element\n    local min_index\n    local max_index\n\
    \    local element\n    local min_index\n    local max_index\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min_index\n\
    \    local max_index\n    local element\n    local min_index\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$(echo\
    \ $numbers | awk '{print $1}')\n    local largest=$(echo $numbers | awk '{print\
    \ $2}')\n    local smallest_index=0\n    local largest_index=0\n    local smallest_diff=$(echo\
    \ $smallest | awk '{print $1 - $2}')\n    local largest_diff=$(echo $largest |\
    \ awk '{print $1 - $2}')\n    local smallest_diff_index=0\n    local largest_diff_index=0\n\
    \    local smallest_diff_index2=0\n    local largest_diff_index2=0\n    local\
    \ smallest_diff_index3=0\n    local largest_diff_index3=0\n    local smallest_diff_index4=0\n\
    \    local largest_diff_index4=0\n    local smallest_diff_index5=0\n    local\
    \ largest_diff_index5=0\n    local smallest_diff_index6=0\n    local largest_diff_index6=0\n\
    \    local smallest_diff_index7=0\n    local largest_diff_index7=0\n    local\
    \ smallest_diff_index8=0\n    local largest_diff_index8=0\n    local smallest_diff_index9=0\n\
    \    local largest_diff_index9=0\n    local smallest_diff_index10=0\n    local\
    \ largest_diff_index10=0\n    local smallest_diff_index11=0\n    local largest_diff_index11=0\n\
    \    local smallest_diff_index12=0\n    local largest_diff_index12=0\n    local\
    \ smallest_diff_index13=0\n    local largest_diff_index13=0\n    local smallest_diff_index14=0\n\
    \    local largest_diff_index14=0\n    local smallest_diff_index15=0\n    local\
    \ largest_diff_index15=0\n    local smallest_diff_index16=0\n    local largest_diff_index16=0\n\
    \    local smallest_diff_index17=0\n    local largest_diff_index17=0\n    local\
    \ smallest_diff_index18=0\n    local largest_diff_index18=0\n    local smallest_diff_index19=0\n\
    \    local largest_diff_index19=0\n    local smallest_diff_index20=0\n    local\
    \ largest_diff_index20=0\n    local smallest_diff_index21=0\n    local largest_diff_index21=0\n\
    \    local smallest_diff_index22=0\n    local largest_diff_index22=0\n    local\
    \ smallest_diff_index23=0\n    local largest_diff_index23=0\n    local smallest_diff_index24=0\n\
    \    local largest_diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"\
    3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local second_smallest_element=${elements_array[1]}\n\
    \    local smallest_element_index=0\n    local second_smallest_element_index=1\n\
    \    local smallest_element_distance=${smallest_element}\n    local second_smallest_element_distance=${second_smallest_element}\n\
    \    local smallest_element_distance_index=0\n    local second_smallest_element_distance_index=1\n\
    \    local smallest_element_distance_diff=${smallest_element_distance}\n    local\
    \ second_smallest_element_distance_diff=${second_smallest_element_distance}\n\
    \    local smallest_element_distance_diff_index=0\n    local second_smallest_element_distance_diff_index=1\n\
    \    local smallest_element_distance_diff_string=${smallest_element_distance_diff}\n\
    \    local second_smallest_element_distance_diff_string=${second_smallest_element_distance_diff}\n\
    \    local smallest_element_distance_diff_string_index=0\n    local second_smallest_element_distance_diff_string_index=1\n\
    \    local smallest_element_distance_diff_string_diff=${smallest_element_distance_diff_string}\n\
    \    local second_smallest_element_distance_diff_string_diff=${second_smallest_element_distance_diff_string}\n\
    \    local smallest_element_distance_diff_string_diff_index=0\n    local second_smallest_element_distance_diff_string_diff_index=1\n\
    \    local smallest_element_distance_diff_string_diff_string=${smallest_element_distance_diff_string_diff}\n\
    \    local second_smallest_element_distance_diff_string_diff_string=${second_smallest_element_distance_diff_string_diff}\n\
    \    local smallest_element_distance_diff_string_diff_string_index=0\n    local\
    \ second_smallest_element_distance_diff_string_diff_string_index=1\n    local\
    \ smallest_element_distance_diff_string_diff_string_diff=${smallest_element_distance_diff_string_diff_string}\n\
    \    local second_smallest_element_distance_diff_string_diff_string_diff=${second_smallest_element_distance_diff_string_diff_string}\n\
    \    local smallest_element_distance_diff_string_diff_string_diff_index=0\n  \
    \  local second_smallest_element_distance_diff_string_diff_string_diff_index=1\n\
    \    local smallest_element_distance_diff_string_diff_string_diff_string_diff=${smallest_element_distance_diff_string_diff_string_diff}\n\
    \    local second_smallest_element_distance_diff_string_diff_string_diff_string_diff=${second_smallest_element_distance_diff_string_diff_string_diff}\n\
    \    local smallest_element_distance_diff_string_diff_string_diff_string_diff_index=0\n\
    \    local second_smallest_element_distance_diff_string_diff_string_diff_string_diff_index=1\n\
    \    local smallest_element_distance_diff_string_diff\n}\n\ncandidate() {\n  \
    \  find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_index2=0\n\
    \    local max_index2=0\n    local min_index3=0\n    local max_index3=0\n    local\
    \ min_index4=0\n    local max_index4=0\n    local min_index5=0\n    local max_index5=0\n\
    \    local min_index6=0\n    local max_index6=0\n    local min_index7=0\n    local\
    \ max_index7=0\n    local min_index8=0\n    local max_index8=0\n    local min_index9=0\n\
    \    local max_index9=0\n    local min_index10=0\n    local max_index10=0\n  \
    \  local min_index11=0\n    local max_index11=0\n    local min_index12=0\n   \
    \ local max_index12=0\n    local min_index13=0\n    local max_index13=0\n    local\
    \ min_index14=0\n    local max_index14=0\n    local min_index15=0\n    local max_index15=0\n\
    \    local min_index16=0\n    local max_index16=0\n    local min_index17=0\n \
    \   local max_index17=0\n    local min_index18=0\n    local max_index18=0\n  \
    \  local min_index19=0\n    local max_index19=0\n    local min_index20=0\n   \
    \ local max_index20=0\n    local min_index21=0\n    local max_index21=0\n    local\
    \ min_index22=0\n    local max_index22=0\n    local min_index23=0\n    local max_index23=0\n\
    \    local min_index24=0\n    local max_index24=0\n    local min_index25=0\n \
    \   local max_index25=0\n    local min_index26=0\n    local max_index26=0\n  \
    \  local min_index27=0\n    local max_index27=0\n    local min_index28=0\n   \
    \ local max_index28=0\n    local min_index29=0\n    local max_index29=0\n    local\
    \ min_index30=0\n    local max_index30=0\n    local min_index31=0\n    local max_index31=0\n\
    \    local min_index32=0\n    local max_index32=0\n    local min_index33=0\n \
    \   local max_index33=0\n    local min_index34=0\n    local max_index34=0\n  \
    \  local min_index35=0\n    local max_index35=0\n    local min_index36=0\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local elements_array\n    local i\n    local j\n    local diff\n    local\
    \ diff_index\n    local diff_value\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n\n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local index\n    local result\n\n    for index in ${!elements[@]}; do\n \
    \       element=${elements[$index]}\n        if [[ $element < $min ]]; then\n\
    \            min=$element\n            min_index=$index\n        fi\n        if\
    \ [[ $element > $max ]]; then\n            max=$element\n            max_index=$index\n\
    \        fi\n    done\n\n    if [[ $min_index == $max_index ]]; then\n       \
    \ result=\"\\\"$min\\\"\"\n    else\n        result=\"\\\"${elements[$min_index]}\
    \ and ${elements[$max_index]}\\\" \"\n    fi\n\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_value\n    local\
    \ element_value_index\n    local element_value_length\n    local element_value_length_index\n\
    \    local element_value_length_value\n    local element_value_length_value_length\n\
    \    local element_value_length_value_length_index\n    local element_value_length_value_length_value\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_value\n\
    \    local element_value_length_value_length_value_value_index\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value_value\n\
    \    local element_value_length_value_length_value_value_value\n    local element_value_length_value_length_value_value\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ element\n    local result\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest\n\
    \    local smallest\n    local largest\n    local i\n    local j\n    local elements\n\
    \    local element\n    local result\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ element\n    local element1\n    local element2\n    local diff\n    local diff1\n\
    \    local diff2\n    local diff3\n    local diff4\n    local diff5\n    local\
    \ diff6\n    local diff7\n    local diff8\n    local diff9\n    local diff10\n\
    \    local diff11\n    local diff12\n    local diff13\n    local diff14\n    local\
    \ diff15\n    local diff16\n    local diff17\n    local diff18\n    local diff19\n\
    \    local diff20\n    local diff21\n    local diff22\n    local diff23\n    local\
    \ diff24\n    local diff25\n    local diff26\n    local diff27\n    local diff28\n\
    \    local diff29\n    local diff30\n    local diff31\n    local diff32\n    local\
    \ diff33\n    local diff34\n    local diff35\n    local diff36\n    local diff37\n\
    \    local diff38\n    local diff39\n    local diff40\n    local diff41\n    local\
    \ diff42\n    local diff43\n    local diff44\n    local diff45\n    local diff46\n\
    \    local diff47\n    local diff48\n    local diff49\n    local diff50\n    local\
    \ diff51\n    local diff52\n    local diff53\n    local diff54\n    local diff55\n\
    \    local diff56\n    local diff57\n    local diff58\n    local diff59\n    local\
    \ diff60\n    local diff61\n    local diff62\n    local diff63\n    local diff64\n\
    \    local diff65\n    local diff66\n    local diff67\n    local diff68\n    local\
    \ diff69\n    local diff70\n    local diff71\n    local diff72\n    local diff73\n\
    \    local diff74\n    local diff75\n    local diff76\n    local diff77\n    local\
    \ diff78\n    local diff79\n    local diff80\n    local diff81\n    local diff82\n\
    \    local diff83\n    local diff84\n    local diff85\n    local diff86\n    local\
    \ diff87\n    local diff88\n    local diff89\n    local diff90\n    local diff91\n\
    \    local diff92\n    local \n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local largest_element=${elements_array[0]}\n\
    \    local smallest_element_index=0\n    local largest_element_index=0\n    for\
    \ (( i=1; i<${#elements_array[@]}; i++ )); do\n        if [[ ${elements_array[i]}\
    \ < ${smallest_element} ]]; then\n            smallest_element=${elements_array[i]}\n\
    \            smallest_element_index=${i}\n        fi\n        if [[ ${elements_array[i]}\
    \ > ${largest_element} ]]; then\n            largest_element=${elements_array[i]}\n\
    \            largest_element_index=${i}\n        fi\n    done\n    local smallest_element_string=${elements_array[smallest_element_index]}\n\
    \    local largest_element_string=${elements_array[largest_element_index]}\n \
    \   echo \"${smallest_element_string} and ${largest_element_string}\"\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=${elements[0]}\n\
    \    local largest=${elements[0]}\n    local smallest_index=0\n    local largest_index=0\n\
    \    for (( i=1; i<${#elements[@]}; i++ )); do\n        local element=${elements[i]}\n\
    \        local element_value=$(echo \"$element\" | tr -d '[\" \"]')\n        if\
    \ [ \"$smallest\" == \"$element\" ]; then\n            smallest=$element_value\n\
    \            smallest_index=$i\n        elif [ \"$largest\" == \"$element\" ];\
    \ then\n            largest=$element_value\n            largest_index=$i\n   \
    \     fi\n    done\n    local smallest_element=${elements[smallest_index]}\n \
    \   local largest_element=${elements[largest_index]}\n    echo \"$smallest_element\"\
    \ \"$largest_element\"\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"\
    3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local i\n    local j\n    local elements\n    local smallest_element\n  \
    \  local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local elements_array\n    local\
    \ element_array\n    local i\n    local j\n    local k\n    local smallest_element_string\n\
    \    local largest_element_string\n    local smallest_element_float\n    local\
    \ largest_element_float\n    local smallest_element_int\n    local largest_element_int\n\
    \    local smallest_element_bool\n    local largest_element_bool\n    local smallest_element_string\n\
    \    local largest_element_string\n    local smallest_element_float\n    local\
    \ largest_element_float\n    local smallest_element_int\n    local largest_element_int\n\
    \    local smallest_element_bool\n    local largest_element_bool\n    local smallest_element_string\n\
    \    local largest_element_string\n    local smallest_element_float\n    local\
    \ largest_element_float\n    local smallest_element_int\n    local largest_element_int\n\
    \    local smallest_element_bool\n    local largest_element_bool\n    local smallest_element_string\n\
    \    local largest_element_string\n    local smallest_element_float\n    local\
    \ largest_element_float\n    local smallest_element_int\n    local largest_element_int\n\
    \    local smallest_element_bool\n    local largest_element_bool\n    local smallest_element_string\n\
    \    local largest_element_string\n    local smallest_element_float\n    local\
    \ largest_element_float\n    local smallest_element_int\n    local largest_element_int\n\
    \    local smallest_element_bool\n    local largest_element_bool\n    local smallest_element_string\n\
    \    local largest_element_string\n    local smallest_element_float\n    local\
    \ largest_element_float\n    local smallest_element_int\n    local largest_element_int\n\
    \    local smallest_element_bool\n    local largest_element_bool\n    local smallest_element_string\n\
    \    local largest_element_string\n    local smallest_element_float\n    local\
    \ largest_element_float\n    local smallest_element_int\n    local largest_element_int\n\
    \    local smallest_element_bool\n    local largest_element_bool\n    local smallest_element_string\n\
    \    local largest_element_string\n    local smallest_element_float\n    local\
    \ largest_element_float\n    local smallest_element_int\n    local largest_element_int\n\
    \    local smallest_element_bool\n    local largest_element_bool\n\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local element_index=0\n    local min_index\n    local max_index\n    local\
    \ element\n    local element_index\n    local min\n    local max\n    local element\n\
    \    local element_index\n    local min\n    local max\n    local element\n  \
    \  local element_index\n    local min\n    local max\n    local element\n    local\
    \ element_index\n    local min\n    local max\n    local element\n    local element_index\n\
    \    local min\n    local max\n    local element\n    local element_index\n  \
    \  local min\n    local max\n    local element\n    local element_index\n    local\
    \ min\n    local max\n    local element\n    local element_index\n    local min\n\
    \    local max\n    local element\n    local element_index\n    local min\n  \
    \  local max\n    local element\n    local element_index\n    local min\n    local\
    \ max\n    local element\n    local element_index\n    local min\n    local max\n\
    \    local element\n    local element_index\n    local min\n    local max\n  \
    \  local element\n    local element_index\n    local min\n    local max\n    local\
    \ element\n    local element_index\n    local min\n    local max\n    local element\n\
    \    local element_index\n    local min\n    local max\n    local element\n  \
    \  local element_index\n    local min\n    local max\n    local element\n    local\
    \ element_index\n    local min\n    local max\n    local element\n    local element_index\n\
    \    local min\n    local max\n    local element\n    local element_index\n  \
    \  local min\n    local max\n    local element\n    local element_index\n    local\
    \ min\n    local max\n    local element\n    local element_index\n    local min\n\
    \    local max\n    local element\n    local element_index\n    local min\n  \
    \  local max\n    local element\n    local element_index\n    local min\n    local\
    \ max\n    local element\n    local element_index\n    local min\n    local max\n\
    \    local element\n    local element_index\n    local min\n    local max\n  \
    \  local element\n    local element_index\n    local min\n    local max\n    local\
    \ element\n    local element_index\n    local min\n    local max\n    local element\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local output\n    local i\n    local j\n    local k\n\
    \    local smallest_index\n    local largest_index\n    local smallest_value\n\
    \    local largest_value\n    local smallest_diff\n    local largest_diff\n  \
    \  local smallest_element\n    local largest_element\n    local smallest_element2\n\
    \    local largest_element2\n    local smallest_element3\n    local largest_element3\n\
    \    local smallest_element4\n    local largest_element4\n    local smallest_element5\n\
    \    local largest_element5\n    local smallest_element6\n    local largest_element6\n\
    \    local smallest_element7\n    local largest_element7\n    local smallest_element8\n\
    \    local largest_element8\n    local smallest_element9\n    local largest_element9\n\
    \    local smallest_element10\n    local largest_element10\n    local smallest_element11\n\
    \    local largest_element11\n    local smallest_element12\n    local largest_element12\n\
    \    local smallest_element13\n    local largest_element13\n    local smallest_element14\n\
    \    local largest_element14\n    local smallest_element15\n    local largest_element15\n\
    \    local smallest_element16\n    local largest_element16\n    local smallest_element17\n\
    \    local largest_element17\n    local smallest_element18\n    local largest_element18\n\
    \    local smallest_element19\n    local largest_element19\n    local smallest_element20\n\
    \    local largest_element20\n    local smallest_element21\n    local largest_element21\n\
    \    local smallest_element22\n    local largest_element22\n    local smallest_element23\n\
    \    local largest_element23\n    local smallest_element24\n    local largest_element24\n\
    \    local smallest_element25\n    local largest_element25\n    local smallest_element26\n\
    \    local largest_element26\n    local smallest_element27\n    local largest_element27\n\
    \    local smallest_element28\n    local largest_element28\n    local smallest_element29\n\
    \    local largest_element29\n    local smallest_element30\n    local largest_element30\n\
    \    local smallest_element31\n    local largest_element31\n    local smallest_element32\n\
    \    local largest_element\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=(\
    \ $elements )\n    local smallest_element=${elements_array[0]}\n    local smallest_element_index=0\n\
    \    local smallest_element_distance=${smallest_element}\n    local smallest_element_distance_index=0\n\
    \    local second_smallest_element=${elements_array[1]}\n    local second_smallest_element_index=1\n\
    \    local second_smallest_element_distance=${second_smallest_element}\n    local\
    \ second_smallest_element_distance_index=1\n    local third_smallest_element=${elements_array[2]}\n\
    \    local third_smallest_element_index=2\n    local third_smallest_element_distance=${third_smallest_element}\n\
    \    local third_smallest_element_distance_index=2\n    local fourth_smallest_element=${elements_array[3]}\n\
    \    local fourth_smallest_element_index=3\n    local fourth_smallest_element_distance=${fourth_smallest_element}\n\
    \    local fourth_smallest_element_distance_index=3\n    local fifth_smallest_element=${elements_array[4]}\n\
    \    local fifth_smallest_element_index=4\n    local fifth_smallest_element_distance=${fifth_smallest_element}\n\
    \    local fifth_smallest_element_distance_index=4\n    local smallest_element_distance_index=0\n\
    \    local second_smallest_element_distance_index=1\n    local third_smallest_element_distance_index=2\n\
    \    local fourth_smallest_element_distance_index=3\n    local fifth_smallest_element_distance_index=4\n\
    \    local smallest_element_distance=${smallest_element}\n    local second_smallest_element_distance=${second_smallest_element}\n\
    \    local third_smallest_element_distance=${third_smallest_element}\n    local\
    \ fourth_smallest_element_distance=${fourth_smallest_element}\n    local fifth_smallest_element_distance=${fifth_smallest_element}\n\
    \    local smallest_element_distance_index=0\n    local second_smallest_element_distance_index=1\n\
    \    local third_smallest_element_distance_index=2\n    local fourth_smallest_element_distance_index=3\n\
    \    local fifth_smallest_element_distance_index=4\n    local smallest_element_distance=${smallest_element}\n\
    \    local second_smallest_element_distance=${second_smallest_element}\n    local\
    \ third_smallest_element_distance=${third_smallest_element}\n    local fourth_smallest_element_distance=${fourth_smallest_element}\n\
    \    local fifth_smallest_element_distance=${\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps_pf9a44.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_element\n    local\
    \ largest_element\n    local i\n    local j\n    local element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local large\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local result\n    local i\n \
    \   local j\n    local elements\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local element_index\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element\n    local largest_element\n\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local output\n    local i\n    local j\n    local diff\n\
    \    local diff1\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local min=$2\n  local\
    \ max=$3\n  local min_index=$4\n  local max_index=$5\n  local min_diff=$6\n  local\
    \ max_diff=$7\n  local min_element=$8\n  local max_element=$9\n  local min_element_index=$10\n\
    \  local max_element_index=$11\n  local min_element_diff=$12\n  local max_element_diff=$13\n\
    \n  local elements_array=($elements)\n  local min_array=($min)\n  local max_array=($max)\n\
    \n  local min_element_array=($min_element)\n  local max_element_array=($max_element)\n\
    \n  local min_element_index_array=($min_element_index)\n  local max_element_index_array=($max_element_index)\n\
    \n  local min_element_diff_array=($min_element_diff)\n  local max_element_diff_array=($max_element_diff)\n\
    \n  local min_element_array=($min_element)\n  local max_element_array=($max_element)\n\
    \n  local min_element_index_array=($min_element_index)\n  local max_element_index_array=($max_element_index)\n\
    \n  local min_element_diff_array=($min_element_diff)\n  local max_element_diff_array=($max_element_diff)\n\
    \n  local min_element_array=($min_element)\n  local max_element_array=($max_element)\n\
    \n  local min_element_index_array=($min_element_index)\n  local max_element_index_array=($max_element_index)\n\
    \n  local min_element_diff_array=($min_element_diff)\n  local max_element_diff_array=($max_element_diff)\n\
    \n  local min_element_array=($min_element)\n  local max_element_array=($max_element)\n\
    \n  local min_element_index_array=($min_element_index)\n  local max_element_index_array=($max_element_index)\n\
    \n  local min_element_diff_array=($min_element_diff)\n  local max_element_diff_array=($max_element_diff)\n\
    \n  local min_element_array=($min_element)\n  local max_element_array=($max_element)\n\
    \n  local min_element_index_array=($min_element_index)\n  local max_element_index_array=($max_element_index)\n\
    \n  local min_element_diff_array=($min_element_diff)\n  local max_element_diff_array=($max_element_diff)\n\
    \n  local min_element_array=($min_element)\n  local max_element_array=($max_element)\n\
    \n  local min_element_index_array=($min_element_index)\n  local max_element_index_array=($max_element_index)\n\
    \n\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local elements=\n    local element\n\
    \    local i\n    local j\n    local k\n    local diff\n    local diff2\n    local\
    \ diff3\n    local diff4\n    local diff5\n    local diff6\n    local diff7\n\
    \    local diff8\n    local diff9\n    local diff10\n    local diff11\n    local\
    \ diff12\n    local diff13\n    local diff14\n    local diff15\n    local diff16\n\
    \    local diff17\n    local diff18\n    local diff19\n    local diff20\n    local\
    \ diff21\n    local diff22\n    local diff23\n    local diff24\n    local diff25\n\
    \    local diff26\n    local diff27\n    local diff28\n    local diff29\n    local\
    \ diff30\n    local diff31\n    local diff32\n    local diff33\n    local diff34\n\
    \    local diff35\n    local diff36\n    local diff37\n    local diff38\n    local\
    \ diff39\n    local diff40\n    local diff41\n    local diff42\n    local diff43\n\
    \    local diff44\n    local diff45\n    local diff46\n    local diff47\n    local\
    \ diff48\n    local diff49\n    local diff50\n    local diff51\n    local diff52\n\
    \    local diff53\n    local diff54\n    local diff55\n    local diff56\n    local\
    \ diff57\n    local diff58\n    local diff59\n    local diff60\n    local diff61\n\
    \    local diff62\n    local diff63\n    local diff64\n    local diff65\n    local\
    \ diff66\n    local diff67\n    local diff68\n    local diff69\n    local diff70\n\
    \    local diff71\n    local diff72\n    local diff73\n    local diff74\n    local\
    \ diff75\n    local diff76\n    local diff77\n    local diff78\n    local diff79\n\
    \    local diff80\n    local diff81\n    local diff82\n    local diff83\n    local\
    \ diff84\n    local diff85\n    local diff86\n    local diff87\n    local diff88\n\
    \    local diff89\n    local diff90\n    local diff91\n    local diff92\n    local\
    \ diff93\n    local diff94\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local min=$2\n  \
    \  local max=$3\n    local min_index=$4\n    local max_index=$5\n\n    local min_index\n\
    \    local max_index\n\n    local min\n    local max\n\n    local i\n    local\
    \ j\n    local diff\n    local diff_index\n    local diff_index2\n\n    local\
    \ number\n    local number2\n\n    local output\n\n    local output2\n\n    local\
    \ output3\n\n    local output4\n\n    local output5\n\n    local output6\n\n \
    \   local output7\n\n    local output8\n\n    local output9\n\n    local output10\n\
    \n    local output11\n\n    local output12\n\n    local output13\n\n    local\
    \ output14\n\n    local output15\n\n    local output16\n\n    local output17\n\
    \n    local output18\n\n    local output19\n\n    local output20\n\n    local\
    \ output21\n\n    local output22\n\n    local output23\n\n    local output24\n\
    \n    local output25\n\n    local output26\n\n    local output27\n\n    local\
    \ output28\n\n    local output29\n\n    local output30\n\n    local output31\n\
    \n    local output32\n\n    local output33\n\n    local output34\n\n    local\
    \ output35\n\n    local output36\n\n    local output37\n\n    local output38\n\
    \n    local output39\n\n    local output40\n\n    local output41\n\n    local\
    \ output42\n\n    local output43\n\n    local output44\n\n    local output45\n\
    \n    local output46\n\n    local output47\n\n    local output48\n\n    local\
    \ output49\n\n    local output50\n\n    local output51\n\n    local output52\n\
    \n    local output53\n\n    local output54\n\n    local output55\n\n    local\
    \ output56\n\n    local output57\n\n    local output58\n\n    local output59\n\
    \n    local output60\n\n    local output61\n\n    local output62\n\n    local\
    \ output63\n\n    local output64\n\n    local output65\n\n    local output66\n\
    \n    local output67\n\n    local output68\n\n    local output69\n\n    local\
    \ output70\n\n    local output71\n\n    local output72\n\n    local output73\n\
    \n    local output74\n\n    local output75\n\n    local output76\n\n    local\
    \ output77\n\n    local output78\n\n    local output79\n\n    local output80\n\
    \n    local output81\n\n    local output82\n\n    local output83\n\n    local\
    \ output84\n\n    local output85\n\n    local output86\n\n    \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_value\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_index=\n    local\
    \ largest_index=\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_diff=10000000000\n\
    \    local max_diff=10000000000\n    local element\n    local elements_array\n\
    \    local i\n    local j\n    local diff\n    local diff_index\n    local diff_value\n\
    \    local diff_value_index\n    local diff_value_index2\n    local diff_value_index3\n\
    \    local diff_value_index4\n    local diff_value_index5\n    local diff_value_index6\n\
    \    local diff_value_index7\n    local diff_value_index8\n    local diff_value_index9\n\
    \    local diff_value_index10\n    local diff_value_index11\n    local diff_value_index12\n\
    \    local diff_value_index13\n    local diff_value_index14\n    local diff_value_index15\n\
    \    local diff_value_index16\n    local diff_value_index17\n    local diff_value_index18\n\
    \    local diff_value_index19\n    local diff_value_index20\n    local diff_value_index21\n\
    \    local diff_value_index22\n    local diff_value_index23\n    local diff_value_index24\n\
    \    local diff_value_index25\n    local diff_value_index26\n    local diff_value_index27\n\
    \    local diff_value_index28\n    local diff_value_index29\n    local diff_value_index30\n\
    \    local diff_value_index31\n    local diff_value_index32\n    local diff_value_index33\n\
    \    local diff_value_index34\n    local diff_value_index35\n    local diff_value_index36\n\
    \    local diff_value_index37\n    local diff_value_index38\n    local diff_value_index39\n\
    \    local diff_value_index40\n    local diff_value_index41\n    local diff_value_index42\n\
    \    local diff_value_index43\n    local diff_value_index44\n    local diff_value_index45\n\
    \    local diff_value_index46\n    local diff_value_index47\n    local diff_value_index48\n\
    \    local diff_value_index49\n    local diff_value_index50\n    local diff_value_index51\n\
    \    local diff_value_index52\n    local diff_value_index53\n    local diff_value_index54\n\
    \    local diff_value_index55\n    local diff_value_index56\n    local diff_value_index57\n\
    \    local diff_value_index58\n    local diff_value_index59\n    local diff_value_index60\n\
    \    local diff_value_index61\n    local diff_value_index62\n    \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local min=$2\n  \
    \  local max=$3\n    local min_index\n    local max_index\n    local i\n    local\
    \ j\n    local element\n    local elements\n    local elements_str\n    local\
    \ elements_str_index\n    local elements_str_len\n    local elements_str_index2\n\
    \    local elements_str_index3\n    local elements_str_index4\n    local elements_str_index5\n\
    \    local elements_str_index6\n    local elements_str_index7\n    local elements_str_index8\n\
    \    local elements_str_index9\n    local elements_str_index10\n    local elements_str_index11\n\
    \    local elements_str_index12\n    local elements_str_index13\n    local elements_str_index14\n\
    \    local elements_str_index15\n    local elements_str_index16\n    local elements_str_index17\n\
    \    local elements_str_index18\n    local elements_str_index19\n    local elements_str_index20\n\
    \    local elements_str_index21\n    local elements_str_index22\n    local elements_str_index23\n\
    \    local elements_str_index24\n    local elements_str_index25\n    local elements_str_index26\n\
    \    local elements_str_index27\n    local elements_str_index28\n    local elements_str_index29\n\
    \    local elements_str_index30\n    local elements_str_index31\n    local elements_str_index32\n\
    \    local elements_str_index33\n    local elements_str_index34\n    local elements_str_index35\n\
    \    local elements_str_index36\n    local elements_str_index37\n    local elements_str_index38\n\
    \    local elements_str_index39\n    local elements_str_index40\n    local elements_str_index41\n\
    \    local elements_str_index42\n    local elements_str_index43\n    local elements_str_index44\n\
    \    local elements_str_index45\n    local elements_str_index46\n    local elements_str_index47\n\
    \    local elements_str_index48\n    local elements_str_index49\n    local elements_str_index50\n\
    \    local elements_str_index51\n    local elements_str_index52\n    local elements_str_index53\n\
    \    local elements_str_index54\n    local elements_str_index55\n    local elements_str_index56\n\
    \    local elements_str_index57\n\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local elements\n    local element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local output\n    local number\n\
    \    local smallest_number\n    local largest_number\n    local smallest_string\n\
    \    local largest_string\n    local smallest_float\n    local largest_float\n\
    \    local smallest_int\n    local largest_int\n    local smallest_bool\n    local\
    \ largest_bool\n    local smallest_string\n    local largest_string\n    local\
    \ smallest_array\n    local largest_array\n    local smallest_object\n    local\
    \ largest_object\n    local smallest_null\n    local largest_null\n    local smallest_undefined\n\
    \    local largest_undefined\n    local smallest_string\n    local largest_string\n\
    \    local smallest_number\n    local largest_number\n    local smallest_object\n\
    \    local largest_object\n    local smallest_null\n    local largest_null\n \
    \   local smallest_undefined\n    local largest_undefined\n    local smallest_string\n\
    \    local largest_string\n    local smallest_number\n    local largest_number\n\
    \    local smallest_object\n    local largest_object\n    local smallest_null\n\
    \    local largest_null\n    local smallest_undefined\n    local largest_undefined\n\
    \    local smallest_string\n    local largest_string\n    local smallest_number\n\
    \    local largest_number\n    local smallest_object\n    local largest_object\n\
    \    local smallest_null\n    local largest_null\n    local smallest_undefined\n\
    \    local largest_undefined\n    local smallest_string\n    local largest_string\n\
    \    local smallest_number\n    local largest_number\n    local smallest_object\n\
    \    local largest_object\n    local smallest_null\n    local largest_null\n \
    \   local smallest_undefined\n    local largest_undefined\n    local smallest_string\n\
    \    local largest_string\n    local smallest_number\n    local largest_number\n\
    \    local smallest_object\n    local largest_object\n    local smallest_null\n\
    \    local largest_null\n    local smallest_undefined\n    local largest_undefined\n\
    \    local smallest_string\n    local largest_string\n    local smallest_number\n\
    \    local largest_number\n    local smallest_object\n    local largest_object\n\
    \    local smallest_null\n    local largest_null\n    local smallest_undefined\n\
    \    local largest_undefined\n\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local smallest=\n  local\
    \ largest=\n  local smallest_element\n  local largest_element\n  local element\n\
    \  local elements_array\n  local index\n  local count\n  local i\n  local j\n\
    \  local k\n  local count\n  local count2\n  local count3\n  local count4\n  local\
    \ count5\n  local count6\n  local count7\n  local count8\n  local count9\n  local\
    \ count10\n  local count11\n  local count12\n  local count13\n  local count14\n\
    \  local count15\n  local count16\n  local count17\n  local count18\n  local count19\n\
    \  local count20\n  local count21\n  local count22\n  local count23\n  local count24\n\
    \  local count25\n  local count26\n  local count27\n  local count28\n  local count29\n\
    \  local count30\n  local count31\n  local count32\n  local count33\n  local count34\n\
    \  local count35\n  local count36\n  local count37\n  local count38\n  local count39\n\
    \  local count40\n  local count41\n  local count42\n  local count43\n  local count44\n\
    \  local count45\n  local count46\n  local count47\n  local count48\n  local count49\n\
    \  local count50\n  local count51\n  local count52\n  local count53\n  local count54\n\
    \  local count55\n  local count56\n  local count57\n  local count58\n  local count59\n\
    \  local count60\n  local count61\n  local count62\n  local count63\n  local count64\n\
    \  local count65\n  local count66\n  local count67\n  local count68\n  local count69\n\
    \  local count70\n  local count71\n  local count72\n  local count73\n  local count74\n\
    \  local count75\n  local count76\n  local count77\n  local count78\n  local count79\n\
    \  local count80\n  local count81\n  local count82\n  local count83\n  local count84\n\
    \  local count85\n  local count86\n  local count87\n  local count88\n  local count89\n\
    \  local count90\n  local count\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local elements\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local index\n    local i\n    local j\n    local k\n \
    \   local smallest_index\n    local largest_index\n    local smallest_value\n\
    \    local largest_value\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local smallest_value_length\n    local largest_value_length\n    local smallest_value_length\n\
    \    local largest_value_length\n    local smallest_value_length\n    local largest_value_length\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local k\n    local smallest_distance\n\
    \    local largest_distance\n    local distance\n\n    smallest_distance=0\n \
    \   largest_distance=0\n\n    for (( i=0; i<${#elements[@]}; i++ )); do\n    \
    \    smallest_element=${elements[$i]}\n        largest_element=${elements[$((i+1))]}\n\
    \        smallest_distance=0\n        largest_distance=0\n\n        for (( j=0;\
    \ j<${#elements[@]}; j++ )); do\n            element=${elements[$j]}\n       \
    \     distance=$(( ${smallest_distance} + ${smallest_element} - ${element} - ${smallest_distance}\
    \ ))\n            if (( distance < 0 )) ; then\n                smallest_distance=$distance\n\
    \                smallest_element=$element\n            fi\n            distance=$((\
    \ ${largest_distance} + ${largest_element} - ${element} - ${largest_distance}\
    \ ))\n            if (( distance > 0 )) ; then\n                largest_distance=$distance\n\
    \                largest_element=$element\n            fi\n        done\n\n  \
    \      if (( smallest_distance < largest_distance )) ; then\n            smallest=$smallest_element\n\
    \            largest=$largest_element\n        else\n            smallest=$largest_element\n\
    \            largest=$smallest_element\n        fi\n    done\n\n    echo \"$smallest\
    \ $largest\"\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7z3jrgzv.sh: line 35: 0 + 1.0 2.0 3.9 4.0 5.0 2.2 - 1.0 2.0 3.9
    4.0 5.0 2.2 - 0 : syntax error: invalid arithmetic operator (error token is ".0
    2.0 3.9 4.0 5.0 2.2 - 1.0 2.0 3.9 4.0 5.0 2.2 - 0 ")

    '
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local number\n    for number in\
    \ $numbers; do\n        if [ -z \"$smallest\" ]; then\n            smallest=$number\n\
    \            largest=$number\n        elif [ \"$number\" -gt \"$largest\" ]; then\n\
    \            largest=$number\n        elif [ \"$number\" -lt \"$smallest\" ];\
    \ then\n            smallest=$number\n        fi\n    done\n    echo $smallest\n\
    \    echo $largest\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps3iw4d7m.sh: line 20: [: 2.0: integer expression expected

    /tmp/tmps3iw4d7m.sh: line 22: [: 2.0: integer expression expected

    /tmp/tmps3iw4d7m.sh: line 20: [: 3.9: integer expression expected

    /tmp/tmps3iw4d7m.sh: line 22: [: 3.9: integer expression expected

    /tmp/tmps3iw4d7m.sh: line 20: [: 4.0: integer expression expected

    /tmp/tmps3iw4d7m.sh: line 22: [: 4.0: integer expression expected

    /tmp/tmps3iw4d7m.sh: line 20: [: 5.0: integer expression expected

    /tmp/tmps3iw4d7m.sh: line 22: [: 5.0: integer expression expected

    /tmp/tmps3iw4d7m.sh: line 20: [: 2.2: integer expression expected

    /tmp/tmps3iw4d7m.sh: line 22: [: 2.2: integer expression expected

    '
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_element=\n    local largest_element=\n\
    \    local elements_array=()\n    local elements_array_length=\n    local elements_array_element=\n\
    \    local elements_array_element_length=\n    local elements_array_element_value=\n\
    \    local elements_array_element_value_length=\n    local elements_array_element_value_element=\n\
    \    local elements_array_element_value_element_length=\n    local elements_array_element_value_element_value=\n\
    \    local elements_array_element_value_element_value_length=\n    local elements_array_element_value_element_value_element=\n\
    \    local elements_array_element_value_element_value_element_length=\n    local\
    \ elements_array_element_value_element_value_element_value=\n    local elements_array_element_value_element_value_element_value_length=\n\
    \    local elements_array_element_value_element_value_element_value_element=\n\
    \    local elements_array_element_value_element_value_element_value_element_length=\n\
    \    local elements_array_element_value_element_value_element_value_element_value=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_length=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_length=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_length=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_length=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_value=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_value_length=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_value_element=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_value_element_length=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_value_element_value=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_value_element_value_length=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_length=\n\
    \    local elements_array_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value=\n\
    \    local elements_array_element_value_element_value_\n}\n\ncandidate() {\n \
    \   find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=\n    local largest_index=\n   \
    \ local smallest_value=\n    local largest_value=\n    local index=0\n    local\
    \ value=0\n    local result=\n    local elements=\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local output\n    local i\n    local j\n    local k\n\
    \    local diff\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_value\n    local\
    \ element_value_split\n    local element_value_split2\n    local element_value_split3\n\
    \    local element_value_split4\n    local element_value_split5\n    local element_value_split6\n\
    \    local element_value_split7\n    local element_value_split8\n    local element_value_split9\n\
    \    local element_value_split10\n    local element_value_split11\n    local element_value_split12\n\
    \    local element_value_split13\n    local element_value_split14\n    local element_value_split15\n\
    \    local element_value_split16\n    local element_value_split17\n    local element_value_split18\n\
    \    local element_value_split19\n    local element_value_split20\n    local element_value_split21\n\
    \    local element_value_split22\n    local element_value_split23\n    local element_value_split24\n\
    \    local element_value_split25\n    local element_value_split26\n    local element_value_split27\n\
    \    local element_value_split28\n    local element_value_split29\n    local element_value_split30\n\
    \    local element_value_split31\n    local element_value_split32\n    local element_value_split33\n\
    \    local element_value_split34\n    local element_value_split35\n    local element_value_split36\n\
    \    local element_value_split37\n    local element_value_split38\n    local element_value_split39\n\
    \    local element_value_split40\n    local element_value_split41\n    local element_value_split42\n\
    \    local element_value_split43\n    local element_value_split44\n    local element_value_split45\n\
    \    local element_value_split46\n    local element_value_split47\n    local element_value_split48\n\
    \    local element_value_split49\n    local element_value_split50\n    local element_value_split51\n\
    \    local element_value_split52\n    local element_value_split53\n    local element_value_split54\n\
    \    local element_value_split55\n    local element_value_split56\n    local element_value_split57\n\
    \    local element_value_split58\n    local element_value_split59\n    local element_value_split60\n\
    \    local element_value_split61\n    local element_value_split62\n    local element_value_split63\n\
    \    local element_value_split64\n    local element_value_split65\n    local element_value_split66\n\
    \    local element_value_split\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_string\n    local\
    \ element_string_index\n    local element_string_length\n    local element_string_length_index\n\
    \    local element_string_length\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_sorted=$(echo\
    \ $elements | tr \" \" \"\\n\" | sort -n | uniq)\n    local smallest_element=$(echo\
    \ $elements_sorted | head -1)\n    local second_smallest_element=$(echo $elements_sorted\
    \ | tail -1)\n    echo $smallest_element $second_smallest_element\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_\n}\n\ncandidate() {\n  \
    \  find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_index\n    local element_value\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_as_number\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_string\n    local\
    \ element_value_as_number\n    local element_value_as_string\n    local element_value_as_number\n\
    \    local element_value_as_string\n    local element_value_as_number\n    local\
    \ element_value_as_string\n    local element_value_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local i\n    local j\n    local element\n\
    \    local diff\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local diff96\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local i\n   \
    \ local j\n    local closest\n    local smallest\n    local largest\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_index=\n    local\
    \ largest_index=\n    local element\n    local i\n    local j\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049112
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local elements_array\n    local index\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local diff\n    local diff1\n\
    \    local diff2\n    local diff3\n    local diff4\n    local diff5\n    local\
    \ diff6\n    local diff7\n    local diff8\n    local diff9\n    local diff10\n\
    \    local diff11\n    local diff12\n    local diff13\n    local diff14\n    local\
    \ diff15\n    local diff16\n    local diff17\n    local diff18\n    local diff19\n\
    \    local diff20\n    local diff21\n    local diff22\n    local diff23\n    local\
    \ diff24\n    local diff25\n    local diff26\n    local diff27\n    local diff28\n\
    \    local diff29\n    local diff30\n    local diff31\n    local diff32\n    local\
    \ diff33\n    local diff34\n    local diff35\n    local diff36\n    local diff37\n\
    \    local diff38\n    local diff39\n    local diff40\n    local diff41\n    local\
    \ diff42\n    local diff43\n    local diff44\n    local diff45\n    local diff46\n\
    \    local diff47\n    local diff48\n    local diff49\n    local diff50\n    local\
    \ diff51\n    local diff52\n    local diff53\n    local diff54\n    local diff55\n\
    \    local diff56\n    local diff57\n    local diff58\n    local diff59\n    local\
    \ diff60\n    local diff61\n    local diff62\n    local diff63\n    local diff64\n\
    \    local diff65\n    local diff66\n    local diff67\n    local diff68\n    local\
    \ diff69\n    local diff70\n    local diff71\n    local diff72\n    local diff73\n\
    \    local diff74\n    local diff75\n    local diff76\n    local diff77\n    local\
    \ diff78\n    local diff79\n    local diff80\n    local diff81\n    local diff82\n\
    \    local diff83\n    local diff84\n    local diff85\n    local diff86\n    local\
    \ diff87\n    local diff88\n    local diff89\n    local diff90\n    local diff91\n\
    \    local diff92\n    local \n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ k=\n    local l=\n    local element\n    local result\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049113

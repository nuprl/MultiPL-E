name: HumanEval_135_can_arrange
language: sh
prompt: "#!/bin/bash\n# Create a function which returns the largest index of an element\
  \ which\n# is not greater than or equal to the element immediately preceding it.\
  \ If\n# no such element exists then return -1. The given array will not contain\n\
  # duplicate values.\n# Examples:\n# >>> $(can_arrange \"1 2 4 3 5\")\n# \"3\"\n\
  # >>> $(can_arrange \"1 2 3\")\n# \"-1\"\n#\n# $1 is a space-separated list\ncan_arrange()\
  \ {\n"
tests: "}\n\ncandidate() {\n    can_arrange \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1 2 4 3 5\") = \"3\" ]]\n    [[ $(candidate \"1 2 4 5\") = \"\
  -1\" ]]\n    [[ $(candidate \"1 4 2 5 6 7 8 9 10\") = \"2\" ]]\n    [[ $(candidate\
  \ \"4 8 5 7 3\") = \"4\" ]]\n    [[ $(candidate \"\") = \"-1\" ]]\n}\n\nrun_test"
completions: ["  local arr=( $1 )\n  local max=$(( ${#arr[@]} - 1 ))\n  local maxIndex=$((\
    \ ${#arr[@]} - 1 ))\n  local i\n  for i in $(seq 0 $maxIndex); do\n    if [[ ${arr[$i]}\
    \ -gt ${arr[$maxIndex]} ]]; then\n      maxIndex=$i\n    fi\n  done\n  echo $maxIndex",
  "    local -n arr=$1\n    local -i max=$(( ${#arr[@]} - 1 ))\n    local -i i\n\n\
    \    for (( i=1; i<=$max; i++ )); do\n        if [[ ${arr[$i]} -gt ${arr[$(( i\
    \ - 1 ))]} ]]; then\n            max=i\n        fi\n    done\n    echo \"$max\"",
  "  local array=\"$1\"\n  local index=0\n  local max=$array[0]\n  local maxIndex=0\n\
    \  local current=$array[index]\n  while [ \"$current\" != \"$max\" ]; do\n   \
    \ current=${array[index]}\n    index=$((index+1))\n    if [ \"$index\" -eq \"\
    $#array\" ]; then\n      index=0\n      current=$array[index]\n    fi\n    if\
    \ [ \"$current\" -gt \"$max\" ]; then\n      max=$current\n      maxIndex=$index\n\
    \    fi\n  done\n  echo \"$maxIndex\"", "  local -n arr=$1\n  local -a sorted=()\n\
    \  local -a result=()\n  local -i max=0\n  local -i i\n  local val\n  local -n\
    \ val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val\n  local -n val\n  local\
    \ -n val\n  local -n val\n  local -n val\n  local -n val", "    local -n arrange=$1\n\
    \    local -a arranged\n    local -n max=$2\n    local -n last=$3\n    local -n\
    \ index\n    local -n i\n    local -n j\n    local -n len=${#arrange[@]}\n   \
    \ local -n maxlen=${#max}\n    local -n maxindex\n    local -n maxval\n    local\
    \ -n maxvalindex\n    local -n maxvalindex2\n    local -n maxvalindex3\n    local\
    \ -n maxvalindex4\n    local -n maxvalindex5\n    local -n maxvalindex6\n    local\
    \ -n maxvalindex7\n    local -n maxvalindex8\n    local -n maxvalindex9\n    local\
    \ -n maxvalindex10\n    local -n maxvalindex11\n    local -n maxvalindex12\n \
    \   local -n maxvalindex13\n    local -n maxvalindex14\n    local -n maxvalindex15\n\
    \    local -n maxvalindex16\n    local -n maxvalindex17\n    local -n maxvalindex18\n\
    \    local -n maxvalindex19\n    local -n maxvalindex20\n    local -n maxvalindex21\n\
    \    local -n maxvalindex22\n    local -n maxvalindex23\n    local -n maxvalindex24\n\
    \    local -n maxvalindex25\n    local -n maxvalindex26\n    local -n maxvalindex27\n\
    \    local -n maxvalindex28\n    local -n maxvalindex29\n    local -n maxvalindex30\n\
    \    local -n maxvalindex31\n    local -n maxvalindex32\n    local -n maxvalindex33\n\
    \    local -n maxvalindex34\n    local -n maxvalindex35\n    local -n maxvalindex36\n\
    \    local -n maxvalindex37\n    local -n maxvalindex38\n    local -n maxvalindex39\n\
    \    local -n maxvalindex40\n    local -n maxvalindex41\n    local -n maxvalindex42\n\
    \    local -n maxvalindex43\n    local -n maxvalindex44\n    local -n maxvalindex45\n\
    \    local -n maxvalindex46\n    local -n maxvalindex47\n    local ", "  local\
    \ -n arr=$1\n  local -i max=$(( ${#arr[@]} - 1 ))\n  local -i i\n  for i in $(seq\
    \ 0 $(( ${#arr[@]} - 1 ))); do\n    if [[ ${arr[$i]} -gt ${arr[$(( i + 1 ))]}\
    \ ]]; then\n      max=$i\n    fi\n  done\n  if [[ $max -eq 0 ]]; then\n    return\
    \ -1\n  else\n    echo \"$max\"\n  fi", "  local -n arr=$1\n  local -n max=$2\n\
    \  local -n idx=0\n  local -n maxidx=0\n  local -n maxval=$(( ${#arr[@]} - 1 ))\n\
    \  local -n maxvalidx=0\n  local -n maxvalval=$(( ${#maxval} - 1 ))\n  local -n\
    \ maxvalvalidx=0\n  local -n maxvalvalval=$(( ${#maxvalval} - 1 ))\n  local -n\
    \ maxvalvalvalidx=0\n  local -n maxvalvalvalval=$(( ${#maxvalvalval} - 1 ))\n\
    \  local -n maxvalvalvalvalidx=0\n  local -n maxvalvalvalvalval=$(( ${#maxvalvalvalval}\
    \ - 1 ))\n  local -n maxvalvalvalvalvalidx=0\n  local -n maxvalvalvalvalvalval=$((\
    \ ${#maxvalvalvalvalval} - 1 ))\n  local -n maxvalvalvalvalvalvalidx=0\n  local\
    \ -n maxvalvalvalvalvalvalval=$(( ${#maxvalvalvalvalvalval} - 1 ))\n  local -n\
    \ maxvalvalvalvalvalvalidx=0\n  local -n maxvalvalvalvalvalvalval=$(( ${#maxvalvalvalvalvalvalval}\
    \ - 1 ))\n  local -n maxvalvalvalvalvalvalvalidx=0\n  local -n maxvalvalvalvalvalvalvalvalval=$((\
    \ ${#maxvalvalvalvalvalvalvalval} - 1 ))\n  local -n maxvalvalvalvalvalvalvalvalidx=0\n\
    \  local -n maxvalvalvalvalvalvalvalvalval=$(( ${#maxvalvalvalvalvalvalvalvalval}\
    \ - 1 ))\n  local -n maxvalvalvalvalvalvalvalvalidx=0\n  local -n maxvalvalvalvalvalvalvalvalvalval=$((\
    \ ${#maxvalvalvalvalvalvalvalvalvalval} - 1 ))\n  local -n maxvalvalvalvalvalvalvalvalvalidx=0\n\
    \  local -n maxvalvalvalvalvalvalvalvalvalvalval=$(( ${#maxvalvalvalvalvalvalvalvalvalvalval}\
    \ - 1 ))\n  local -n maxvalvalvalvalvalvalval", "  local -n arr=$1\n  local -n\
    \ max=$2\n  local -n i=$(( ${#arr[@]} - 1 ))\n  local -n j=$(( ${#arr[@]} - 1\
    \ ))\n  local -n maxi=$(( ${#max[@]} - 1 ))\n  local -n maxj=$(( ${#max[@]} -\
    \ 1 ))\n  local -n maxmax=$(( ${#max[@]} - 1 ))\n  local -n maxmaxi=$(( ${#maxmax[@]}\
    \ - 1 ))\n  local -n maxmaxj=$(( ${#maxmax[@]} - 1 ))\n  local -n maxmaxmax=$((\
    \ ${#maxmax[@]} - 1 ))\n  local -n maxmaxmaxi=$(( ${#maxmaxmax[@]} - 1 ))\n  local\
    \ -n maxmaxmaxj=$(( ${#maxmaxmax[@]} - 1 ))\n  local -n maxmaxmaxmax=$(( ${#maxmaxmax[@]}\
    \ - 1 ))\n  local -n maxmaxmaxmaxi=$(( ${#maxmaxmaxmax[@]} - 1 ))\n  local -n\
    \ maxmaxmaxmaxj=$(( ${#maxmaxmaxmax[@]} - 1 ))\n  local -n maxmaxmaxmaxmax=$((\
    \ ${#maxmaxmaxmax[@]} - 1 ))\n  local -n maxmaxmaxmaxmaxi=$(( ${#maxmaxmaxmaxmax[@]}\
    \ - 1 ))\n  local -n maxmaxmaxmaxmaxj=$(( ${#maxmaxmaxmaxmax[@]} - 1 ))\n  local\
    \ -n maxmaxmaxmaxmaxmax=$(( ${#maxmaxmaxmaxmax[@]} - 1 ))\n  local -n maxmaxmaxmaxmaxmaxi=$((\
    \ ${#maxmaxmaxmaxmaxmax[@]} - 1 ))\n  local -n maxmaxmaxmaxmaxmaxj=$(( ${#maxmaxmaxmaxmaxmax[@]}\
    \ - 1 ))\n  local -n maxmaxmaxmaxmaxmaxmax=$(( ${#maxmaxmaxmaxmaxmax[@]} - 1 ))\n\
    \  local -n maxmaxmaxmaxmaxmaxmaxi=$(( ${#maxmaxmaxmaxmaxmaxmax[@]} - 1 ))\n \
    \ local -n maxmaxmaxmaxmaxmaxmaxj=$(( ${#max", "  local -n arr=$1\n  local -n\
    \ max=$2\n  local -n i=$((${#arr[@]} - 1))\n  local -n j=$((${#arr[@]} - 1))\n\
    \  local -n maxi=$((${#max} - 1))\n  local -n maxj=$((${#max} - 1))\n  local -n\
    \ maxval=$((${#max} - 1))\n  local -n maxvali=$((${#max} - 1))\n  local -n maxvalj=$((${#max}\
    \ - 1))\n  local -n maxvalval=$((${#max} - 1))\n  local -n maxvalvali=$((${#max}\
    \ - 1))\n  local -n maxvalvalj=$((${#max} - 1))\n  local -n maxvalvalval=$((${#max}\
    \ - 1))\n  local -n maxvalvalvali=$((${#max} - 1))\n  local -n maxvalvalvalj=$((${#max}\
    \ - 1))\n  local -n maxvalvalvalval=$((${#max} - 1))\n  local -n maxvalvalvalvali=$((${#max}\
    \ - 1))\n  local -n maxvalvalvalvalj=$((${#max} - 1))\n  local -n maxvalvalvalvalval=$((${#max}\
    \ - 1))\n  local -n maxvalvalvalvalvali=$((${#max} - 1))\n  local -n maxvalvalvalvalvalj=$((${#max}\
    \ - 1))\n  local -n maxvalvalvalvalvalval=$((${#max} - 1))\n  local -n maxvalvalvalvalvalvali=$((${#max}\
    \ - 1))\n  local -n maxvalvalvalvalvalvalj=$((${#max} - 1))\n  local -n maxvalvalvalvalvalvalval=$((${#max}\
    \ - 1))\n  local -n maxvalvalvalvalvalvalvali=$((${#max} - 1))\n  local -n maxvalvalvalvalvalvalvalj=$((${#max}\
    \ - 1))\n  local -n maxvalvalvalvalvalvalvalval=$((${#max} - 1))\n  local -n maxvalvalvalvalvalvalvalvali=$((${#max}\
    \ - 1))\n  local -n maxvalvalvalvalvalvalvalvalj=$((${#max} - 1))\n  local ",
  "  local array=\"$1\"\n  local index=0\n  local max=$((${#array}-1))\n  while [\
    \ $index -lt $max ]; do\n    if [[ ${array[$index]} -gt ${array[$((index+1))]}\
    \ ]]; then\n      max=$((index+1))\n    fi\n    index=$((index+1))\n  done\n \
    \ if [[ $index -eq $max ]]; then\n    return -1\n  else\n    echo \"$max\"\n \
    \ fi", "    local array=\"$1\"\n    local max=$(( ${#array} - 1 ))\n    local\
    \ index=$(( ${#array} - 1 ))\n    while (( ${index} > 0 )); do\n        local\
    \ current=$(( ${index} - 1 ))\n        local currentValue=${array[$current]}\n\
    \        if (( ${current} > ${max} )); then\n            max=${current}\n    \
    \    fi\n        (( index = current ))\n    done\n    if (( ${index} == 0 ));\
    \ then\n        echo \"-1\"\n    else\n        echo \"${max}\"\n    fi", "  local\
    \ array=\"$1\"\n  local index=0\n  local max=$(( ${#array} -1 ))\n  while [ $index\
    \ -lt $max ]; do\n    local element=${array[$index]}\n    local previousElement=${array[$((\
    \ index - 1 ))]}\n    if [ \"$element\" -le \"$previousElement\" ]; then\n   \
    \   index=$(( index + 1 ))\n    else\n      echo \"$index\"\n      return 0\n\
    \    fi\n  done\n  echo \"$max\"\n  return 0", "  local -n arr=$1\n  local -n\
    \ max=$2\n  local -n idx=0\n  local -n maxidx=0\n  local -n maxval=$max\n  local\
    \ -n val=$arr[idx]\n  while [ \"$val\" != \"$maxval\" ]; do\n    ((idx++))\n \
    \   val=$arr[idx]\n  done\n  ((idx++))\n  while [ \"$idx\" -lt \"$#\" ]; do\n\
    \    ((idx++))\n    val=$arr[idx]\n  done\n  ((idx++))\n  while [ \"$idx\" -gt\
    \ \"$#\" ]; do\n    ((idx--))\n    val=$arr[idx]\n  done\n  ((idx--))\n  echo\
    \ \"$idx\"", "  local -n arr=$1\n  local -a sorted=()\n  local -n max=$2\n  local\
    \ -i i\n  local -n last=$((${#arr[@]} - 1))\n  local -n last2=$((${#arr[@]} -\
    \ 2))\n  local -n last3=$((${#arr[@]} - 3))\n  local -n last4=$((${#arr[@]} -\
    \ 4))\n  local -n last5=$((${#arr[@]} - 5))\n  local -n last6=$((${#arr[@]} -\
    \ 6))\n  local -n last7=$((${#arr[@]} - 7))\n  local -n last8=$((${#arr[@]} -\
    \ 8))\n  local -n last9=$((${#arr[@]} - 9))\n  local -n last10=$((${#arr[@]} -\
    \ 10))\n  local -n last11=$((${#arr[@]} - 11))\n  local -n last12=$((${#arr[@]}\
    \ - 12))\n  local -n last13=$((${#arr[@]} - 13))\n  local -n last14=$((${#arr[@]}\
    \ - 14))\n  local -n last15=$((${#arr[@]} - 15))\n  local -n last16=$((${#arr[@]}\
    \ - 16))\n  local -n last17=$((${#arr[@]} - 17))\n  local -n last18=$((${#arr[@]}\
    \ - 18))\n  local -n last19=$((${#arr[@]} - 19))\n  local -n last20=$((${#arr[@]}\
    \ - 20))\n  local -n last21=$((${#arr[@]} - 21))\n  local -n last22=$((${#arr[@]}\
    \ - 22))\n  local -n last23=$((${#arr[@]} - 23))\n  local -n last24=$((${#arr[@]}\
    \ - 24))\n  local -n last25=$((${#arr[@]} - 25))\n  local -n last26=$((${#arr[@]}\
    \ - 26))\n  local -n last27=$((${#arr[@]} - 27))\n  local -n last28=$((${#arr[@]}\
    \ - 28))\n  local -n last29=$((${#arr[@]} - 29))\n  local ", "    local -n arr=$1\n\
    \    local -n max=$2\n    local -n idx=$3\n    local -n val=$4\n    local -n i\n\
    \    local -n j\n    local -n len\n\n    len=${#arr[@]}\n    if [ $len -eq 0 ];\
    \ then\n        echo \"-1\"\n        return\n    fi\n\n    local -n maxidx=$((\
    \ len-1 ))\n    local -n maxval=${arr[$maxidx]}\n\n    for (( i=1; i<len; i++\
    \ )); do\n        if [[ ${arr[$i]} -gt $maxval ]]; then\n            maxidx=$i\n\
    \            maxval=${arr[$i]}\n        fi\n    done\n\n    if [[ $maxidx -eq\
    \ $idx ]]; then\n        echo \"$maxidx\"\n        return\n    fi\n\n    for ((\
    \ j=$idx+1; j<len; j++ )); do\n        if [[ ${arr[$j]} -gt $maxval ]]; then\n\
    \            maxidx=$j\n            maxval=${arr[$j]}\n        fi\n    done\n\n\
    \    echo \"$maxidx\"", "  local array=\"$1\"\n  local index=0\n  local max=0\n\
    \  local maxIndex=0\n  while [ \"$index\" -lt \"$#\" ] && [ \"$max\" -lt \"$#\"\
    \ ] && [ \"$array\" != \"${array[$index]} ${array[$max]}\" ]; do\n    ((index++))\n\
    \    ((max++))\n  done\n  if [ \"$index\" -eq \"$#\" ]; then\n    return -1\n\
    \  fi\n  while [ \"$index\" -ge \"$max\" ] && [ \"$max\" -lt \"$#\" ] && [ \"\
    $array\" != \"${array[$index]} ${array[$max]}\" ]; do\n    ((max++))\n  done\n\
    \  echo \"$max\"", "  local -n arrange=\"$1\"\n  local -a arranged\n  local -n\
    \ max=\"$2\"\n  local -i maxidx\n  local -i idx\n  local -n last\n  local -n first\n\
    \  local -n lastidx\n  local -n firstidx\n  local -n lastval\n  local -n firstval\n\
    \  local -n idx2\n  local -n val2\n  local -n idx3\n  local -n val3\n  local -n\
    \ idx4\n  local -n val4\n  local -n idx5\n  local -n val5\n  local -n idx6\n \
    \ local -n val6\n  local -n idx7\n  local -n val7\n  local -n idx8\n  local -n\
    \ val8\n  local -n idx9\n  local -n val9\n  local -n idx10\n  local -n val10\n\
    \  local -n idx11\n  local -n val11\n  local -n idx12\n  local -n val12\n  local\
    \ -n idx13\n  local -n val13\n  local -n idx14\n  local -n val14\n  local -n idx15\n\
    \  local -n val15\n  local -n idx16\n  local -n val16\n  local -n idx17\n  local\
    \ -n val17\n  local -n idx18\n  local -n val18\n  local -n idx19\n  local -n val19\n\
    \  local -n idx20\n  local -n val20\n  local -n idx21\n  local -n val21\n  local\
    \ -n idx22\n  local -n val22\n  local -n idx23\n  local -n val23\n  local -n idx24\n\
    \  local -n val24\n  local -n idx25\n  local -n val25\n  local -n idx26\n  local\
    \ -n val26\n  local -n idx27\n  local -n val27\n  local -n idx28\n  local -n val28\n\
    \  local -n idx29\n  local -n val29\n  local -n idx30\n  local -n val30\n  local\
    \ -n idx31\n  local -n val31\n  local -n idx32\n  local -n val32\n  local ", " \
    \ local array=\"$1\"\n  local index=0\n  local max=0\n  local maxIndex=0\n  while\
    \ [ \"$index\" -lt \"$#\" ] && [ \"$max\" -lt \"$array[$index]\" ]; do\n    local\
    \ nextIndex=$((index+1))\n    if [ \"$nextIndex\" -eq \"$#\" ]; then\n      nextIndex=0\n\
    \    fi\n    local next=$((array[$nextIndex]))\n    if [ \"$next\" -ge \"$max\"\
    \ ]; then\n      max=$next\n      maxIndex=$index\n    fi\n    index=$(expr $nextIndex\
    \ + 1)\n  done\n  echo \"$maxIndex\"", "    local array=\"$1\"\n    local index\n\
    \    local max\n    local i\n    local j\n    local element\n    local length\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local valueLength\n\
    \n    length=${#array[@]}\n    if [ $length -eq 0 ]; then\n        echo \"-1\"\
    \n        return\n    fi\n\n    maxIndex=0\n    maxValue=${array[0]}\n    for\
    \ (( i=1; i<$length; i++ )); do\n        value=${array[$i]}\n        valueLength=${#value}\n\
    \        if [ $valueLength -gt $maxValue ]; then\n            maxValue=$valueLength\n\
    \            maxIndex=$i\n        fi\n    done\n\n    if [ $maxIndex -eq 0 ];\
    \ then\n        echo \"-1\"\n        return\n    fi\n\n    for (( j=1; j<$length;\
    \ j++ )); do\n        value=${array[$j]}\n        valueLength=${#value}\n    \
    \    if [ $valueLength -gt $maxValue ]; then\n            if [ $valueLength -eq\
    \ $maxValue ]; then\n                if [ $valueLength -eq 1 ]; then\n       \
    \             maxIndex=$j\n                    maxValue=$valueLength\n       \
    \         else\n                    maxIndex=$j\n                    maxValue=$valueLength\n\
    \                fi\n            else\n                if [ $valueLength -eq 1\
    \ ]; then\n                    maxIndex=$j\n                    maxValue=$valueLength\n\
    \                else\n                    maxIndex=$j\n                    maxValue=$valueLength\n\
    \                fi\n            fi\n        fi\n    done\n\n    echo \"$maxIndex\"",
  "  local -n arr=$1\n  local max=$2\n  local -a indices\n  local i\n  local j\n \
    \ local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n"]
stop_tokens:
- "\n}"

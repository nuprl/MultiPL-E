language: sh
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local odd\n    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_pos\n\
    \    local evens_pos\n    local odds_neg\n    local evens_neg\n    local odds_pos2\n\
    \    local evens_pos2\n    local odds_neg2\n    local evens_neg2\n    local odds_pos3\n\
    \    local evens_pos3\n    local odds_neg3\n    local evens_neg3\n    local odds_pos4\n\
    \    local evens_pos4\n    local odds_neg4\n    local evens_neg4\n    local odds_pos5\n\
    \    local evens_pos5\n    local odds_neg5\n    local evens_neg5\n    local odds_pos6\n\
    \    local evens_pos6\n    local odds_neg6\n    local evens_neg6\n    local odds_pos7\n\
    \    local evens_pos7\n    local odds_neg7\n    local evens_neg7\n    local odds_pos8\n\
    \    local evens_pos8\n    local odds_neg8\n    local evens_neg8\n    local odds_pos9\n\
    \    local evens_pos9\n    local odds_neg9\n    local evens_neg9\n    local odds_pos10\n\
    \    local evens_pos10\n    local odds_neg10\n    local evens_neg10\n    local\
    \ odds_pos11\n    local evens_pos11\n    local odds_neg11\n    local evens_neg11\n\
    \    local odds_pos12\n    local evens_pos12\n    local odds_neg12\n    local\
    \ evens_neg12\n    local odds_pos13\n    local evens_pos13\n    local odds_neg13\n\
    \    local evens_neg13\n    local odds_pos14\n    local evens_pos14\n    local\
    \ odds_neg14\n    local evens_neg14\n    local odds_pos15\n    local evens_pos15\n\
    \    local odds_neg15\n    local evens_neg15\n    local odds_pos16\n    local\
    \ evens_pos16\n    local odds_neg16\n    local evens_neg16\n    local odds_pos17\n\
    \    local evens_pos17\n    local odds_neg17\n    local evens_neg17\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( $i % 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( sum + i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i=0\n    while [ $i -lt ${#numbers}\
    \ ]; do\n        if [ $(( $i % 2 )) -eq 0 ]; then\n            sum=$(( $sum +\
    \ ${numbers[$i]} ))\n        fi\n        i=$(( $i + 1 ))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp34aigiv5.sh: line 18: 0 + 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i=0\n    while [ $i -lt ${#numbers}\
    \ ]; do\n        if [ $(( ${numbers[$i]} % 2 )) -eq 0 ]; then\n            sum=$((\
    \ $sum + ${numbers[$i]} ))\n        fi\n        i=$(( $i + 1 ))\n    done\n  \
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwibf49ye.sh: line 17: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_count\n\
    \    local evens_count\n    local odds_sum\n    local evens_sum\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index2\n    local evens_sum_index2\n\
    \    local odds_sum_index3\n    local evens_sum_index3\n    local odds_sum_index4\n\
    \    local evens_sum_index4\n    local odds_sum_index5\n    local evens_sum_index5\n\
    \    local odds_sum_index6\n    local evens_sum_index6\n    local odds_sum_index7\n\
    \    local evens_sum_index7\n    local odds_sum_index8\n    local evens_sum_index8\n\
    \    local odds_sum_index9\n    local evens_sum_index9\n    local odds_sum_index10\n\
    \    local evens_sum_index10\n    local odds_sum_index11\n    local evens_sum_index11\n\
    \    local odds_sum_index12\n    local evens_sum_index12\n    local odds_sum_index13\n\
    \    local evens_sum_index13\n    local odds_sum_index14\n    local evens_sum_index14\n\
    \    local odds_sum_index15\n    local evens_sum_index15\n    local odds_sum_index16\n\
    \    local evens_sum_index16\n    local odds_sum_index17\n    local evens_sum_index17\n\
    \    local odds_sum_index18\n    local evens_sum_index18\n    local odds_sum_index19\n\
    \    local evens_sum_index19\n    local odds_sum_index20\n    local evens_sum_index20\n\
    \    local odds_sum_index21\n    local evens_sum_index21\n    local odds_sum_index22\n\
    \    local evens_sum_index22\n    local odds_sum_index23\n    local evens_sum_index23\n\
    \    local odds_sum_index24\n    local evens_sum_index24\n    local odds_sum_index25\n\
    \    local evens_sum_index25\n    local odds_sum_index26\n    local evens_sum_index26\n\
    \    local odds_sum_index27\n    local evens_sum_index27\n    local odds_sum_index28\n\
    \    local evens_sum_index28\n    local \n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 0 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 2 ]\n   \
    \ then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_evens_sum\n    local odds_odds_sum\n\
    \    local odds_evens_odds_sum\n    local odds_odds_evens_sum\n    local odds_evens_odds_evens_sum\n\
    \    local odds_evens_evens_odds_sum\n    local odds_evens_evens_evens_sum\n \
    \   local odds_evens_evens_evens_odds_sum\n    local odds_evens_evens_evens_evens_sum\n\
    \    local odds_evens_evens_evens_evens_sum\n    local odds_evens_evens_evens_evens_odds_sum\n\
    \    local odds_evens_evens_evens_evens_evens_sum\n    local odds_evens_evens_evens_evens_evens_odds_sum\n\
    \    local odds_evens_evens_evens_evens_evens_evens_sum\n    local odds_evens_evens_evens_evens_evens_evens_odds_sum\n\
    \    local odds_evens_evens_evens_evens_evens_evens_evens_sum\n    local odds_evens_evens_evens_evens_evens_evens_evens_odds_sum\n\
    \    local odds_evens_evens_evens_evens_evens_evens_evens_evens_evens_sum\n  \
    \  local odds_evens_evens_evens_evens_evens_evens_evens_evens_evens_odds_sum\n\
    \    local odds_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_sum\n\
    \    local odds_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_odds_sum\n\
    \    local odds_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_sum\n\
    \    local odds_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_evens_odds_sum\n\
    \    local odds_evens_evens_evens_evens_evens_evens_evens_even\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${i}+1 )) ]\n    then\n      sum=$(( ${sum} + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local number_index\n    local number_length\n    local number_length_index\n\
    \    local number_length_index2\n    local number_length_index3\n    local number_length_index4\n\
    \    local number_length_index5\n    local number_length_index6\n    local number_length_index7\n\
    \    local number_length_index8\n    local number_length_index9\n    local number_length_index10\n\
    \    local number_length_index11\n    local number_length_index12\n    local number_length_index13\n\
    \    local number_length_index14\n    local number_length_index15\n    local number_length_index16\n\
    \    local number_length_index17\n    local number_length_index18\n    local number_length_index19\n\
    \    local number_length_index20\n    local number_length_index21\n    local number_length_index22\n\
    \    local number_length_index23\n    local number_length_index24\n    local number_length_index25\n\
    \    local number_length_index26\n    local number_length_index27\n    local number_length_index28\n\
    \    local number_length_index29\n    local number_length_index30\n    local number_length_index31\n\
    \    local number_length_index32\n    local number_length_index33\n    local number_length_index34\n\
    \    local number_length_index35\n    local number_length_index36\n    local number_length_index37\n\
    \    local number_length_index38\n    local number_length_index39\n    local number_length_index40\n\
    \    local number_length_index41\n    local number_length_index42\n    local number_length_index43\n\
    \    local number_length_index44\n    local number_length_index45\n    local number_length_index46\n\
    \    local number_length_index47\n    local number_length_index48\n    local number_length_index49\n\
    \    local number_length_index50\n    local number_length_index51\n    local number_length_index52\n\
    \    local number_length_index53\n    local number_length_index54\n    local number_length_index55\n\
    \    local number_length_index56\n    local number_length_index57\n    local number_length_index58\n\
    \    local number_length_index59\n    local number_length_index60\n    local number_length_index61\n\
    \    local number_length_index62\n    local number_length_index63\n    local number_length_index64\n\
    \    local number_length_index65\n    local number_\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $i -eq\
    \ $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local oddCount\n    local evenCount\n  \
    \  local oddSum\n    local evenSum\n    local odd\n    local even\n    local count\n\
    \    local oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n\
    \    local odd\n    local even\n    local count\n    local oddCount\n    local\
    \ evenCount\n    local oddSum\n    local evenSum\n    local odd\n    local even\n\
    \    local count\n    local oddCount\n    local evenCount\n    local oddSum\n\
    \    local evenSum\n    local odd\n    local even\n    local count\n    local\
    \ oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n    local\
    \ odd\n    local even\n    local count\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local odd\n    local even\n    local\
    \ count\n    local oddCount\n    local evenCount\n    local oddSum\n    local\
    \ evenSum\n    local odd\n    local even\n    local count\n    local oddCount\n\
    \    local evenCount\n    local oddSum\n    local evenSum\n    local odd\n   \
    \ local even\n    local count\n    local oddCount\n    local evenCount\n    local\
    \ oddSum\n    local evenSum\n    local odd\n    local even\n    local count\n\
    \    local oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n\
    \    local odd\n    local even\n    local count\n    local oddCount\n    local\
    \ evenCount\n    local oddSum\n    local evenSum\n    local odd\n    local even\n\
    \    local count\n    local oddCount\n    local evenCount\n    local oddSum\n\
    \    local evenSum\n    local odd\n    local even\n    local count\n    local\
    \ oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n    local\
    \ odd\n    local even\n    local count\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local odd\n    local even\n    local\
    \ count\n    local oddCount\n    local evenCount\n    local oddSum\n    local\
    \ evenSum\n    local odd\n    local even\n    local count\n    \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local odds_count\n\
    \    local evens_count\n    local odds_sum\n    local evens_sum\n    local odds_odd\n\
    \    local evens_even\n    local odds_even\n    local odds_odds\n    local evens_odds\n\
    \    local odds_evens\n    local evens_evens\n    local odds_odds_sum\n    local\
    \ evens_odds_sum\n    local odds_evens_sum\n    local evens_evens_sum\n    local\
    \ odds_odds_odd\n    local evens_odds_odd\n    local odds_evens_odd\n    local\
    \ evens_evens_odd\n    local odds_odds_even\n    local evens_odds_even\n    local\
    \ odds_evens_even\n    local evens_evens_even\n    local odds_odds_odds\n    local\
    \ evens_odds_odds\n    local odds_evens_odds\n    local evens_evens_odds\n   \
    \ local odds_odds_evens\n    local evens_odds_evens\n    local odds_evens_evens\n\
    \    local evens_evens_evens\n    local odds_odds_odds_sum\n    local evens_odds_odds_sum\n\
    \    local odds_evens_odds_sum\n    local evens_evens_odds_sum\n    local odds_odds_evens_sum\n\
    \    local evens_odds_evens_sum\n    local odds_evens_evens_sum\n    local evens_evens_evens_sum\n\
    \    local odds_odds_odds_odd\n    local evens_odds_odds_odd\n    local odds_evens_odds_odd\n\
    \    local evens_evens_odds_odd\n    local odds_odds_evens_odd\n    local evens_odds_evens_odd\n\
    \    local odds_evens_evens_odd\n    local evens_evens_evens_odd\n    local odds_odds_odds_even\n\
    \    local evens_odds_odds_even\n    local odds_evens_odds_even\n    local evens_evens_odds_even\n\
    \    local odds_odds_evens_even\n    local evens_odds_evens_even\n    local evens_evens_evens_even\n\
    \    local odds_\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local total\n\n    # Loop through each number\
    \ in the list\n    for ((i = 0; i < ${#numbers}\"; i+=2)); do\n        odd=${numbers:$i:1}\n\
    \        even=${numbers:$(($i+1)):1}\n        count=$(echo $odd | wc -w)\n   \
    \     total=$(( $total + $count ))\n    done\n\n    # Return the sum\n    echo\
    \ $total\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcvuz8uct.sh: line 46: unexpected EOF while looking for matching
    `"''

    /tmp/tmpcvuz8uct.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local oddCount\n    local evenCount\n  \
    \  local oddSum\n    local evenSum\n    local odd\n    local even\n    local count\n\
    \    local oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n\
    \    local odd\n    local even\n    local count\n    local oddCount\n    local\
    \ evenCount\n    local oddSum\n    local evenSum\n    local odd\n    local even\n\
    \    local count\n    local oddCount\n    local evenCount\n    local oddSum\n\
    \    local evenSum\n    local odd\n    local even\n    local count\n    local\
    \ oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n    local\
    \ odd\n    local even\n    local count\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local odd\n    local even\n    local\
    \ count\n    local oddCount\n    local evenCount\n    local oddSum\n    local\
    \ evenSum\n    local odd\n    local even\n    local count\n    local oddCount\n\
    \    local evenCount\n    local oddSum\n    local evenSum\n    local odd\n   \
    \ local even\n    local count\n    local oddCount\n    local evenCount\n    local\
    \ oddSum\n    local evenSum\n    local odd\n    local even\n    local count\n\
    \    local oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n\
    \    local odd\n    local even\n    local count\n    local oddCount\n    local\
    \ evenCount\n    local oddSum\n    local evenSum\n    local odd\n    local even\n\
    \    local count\n    local oddCount\n    local evenCount\n    local oddSum\n\
    \    local evenSum\n    local odd\n    local even\n    local count\n    local\
    \ oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n    local\
    \ odd\n    local even\n    local count\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local odd\n    local even\n    local\
    \ count\n    local oddCount\n    local evenCount\n    local oddSum\n    local\
    \ evenSum\n    local odd\n    local even\n    local count\n    \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local index\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_evens\n    local evens_odds\n\
    \    local odds_odds\n    local evens_evens\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_odds_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local odds_odds_sum\n    local\
    \ evens_evens_sum\n    local odds_evens_sum\n    local evens_odds_sum\n    local\
    \ odds_odds_sum\n    local evens_evens_sum\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_odds_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local odds_odds_sum\n    local\
    \ evens_evens_sum\n    local odds_evens_sum\n    local evens_odds_sum\n    local\
    \ odds_odds_sum\n    local evens_evens_sum\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_odds_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_evens_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local odds_odds_sum\n    local\
    \ evens_evens_sum\n    local odds_evens_sum\n    local evens_odds_sum\n    local\
    \ odds_odds_sum\n    local evens_evens_sum\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_evens_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local odds_odd\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $(( i % 2 )) -eq 0 ]; then\n      sum=$(( sum + i ))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i%2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local odds_length\n    local evens_length\n    local odds_sum\n\
    \    local evens_sum\n    local odds_sum_index\n    local evens_sum_index\n  \
    \  local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $i -eq\
    \ $(( $i % 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $i -eq $((i%2)) ]]\n    then\n      sum=$((sum+i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $i -eq $(( ${i} % 2 )) ]; then\n      sum=$(( $sum + $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} -1 )) ]\n    then\n      sum=$(( sum + $i ))\n \
    \   else\n      if [ $i -eq $(( ${#numbers} -1 )) -a $(( ${#numbers} % 2 )) -eq\
    \ 0 ]\n      then\n        sum=$(( sum + $i ))\n      fi\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_count\n\
    \    local evens_count\n    local odds_sum\n    local evens_sum\n    local odds_sum2\n\
    \    local evens_sum2\n    local odds_sum3\n    local evens_sum3\n    local odds_sum4\n\
    \    local evens_sum4\n    local odds_sum5\n    local evens_sum5\n    local odds_sum6\n\
    \    local evens_sum6\n    local odds_sum7\n    local evens_sum7\n    local odds_sum8\n\
    \    local evens_sum8\n    local odds_sum9\n    local evens_sum9\n    local odds_sum10\n\
    \    local evens_sum10\n    local odds_sum11\n    local evens_sum11\n    local\
    \ odds_sum12\n    local evens_sum12\n    local odds_sum13\n    local evens_sum13\n\
    \    local odds_sum14\n    local evens_sum14\n    local odds_sum15\n    local\
    \ evens_sum15\n    local odds_sum16\n    local evens_sum16\n    local odds_sum17\n\
    \    local evens_sum17\n    local odds_sum18\n    local evens_sum18\n    local\
    \ odds_sum19\n    local evens_sum19\n    local odds_sum20\n    local evens_sum20\n\
    \    local odds_sum21\n    local evens_sum21\n    local odds_sum22\n    local\
    \ evens_sum22\n    local odds_sum23\n    local evens_sum23\n    local odds_sum24\n\
    \    local evens_sum24\n    local odds_sum25\n    local evens_sum25\n    local\
    \ odds_sum26\n    local evens_sum26\n    local odds_sum27\n    local evens_sum27\n\
    \    local odds_sum28\n    local evens_sum28\n    local odds_sum29\n    local\
    \ evens_sum29\n    local odds_sum30\n    local evens_sum30\n    local odds_sum31\n\
    \    local evens_sum31\n    local odds_sum32\n    local evens_sum32\n    local\
    \ odds_sum33\n    local evens_sum33\n\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_pos\n\
    \    local evens_pos\n    local odds_neg\n    local evens_neg\n    local odds_pos_count\n\
    \    local evens_pos_count\n    local odds_neg_count\n    local evens_neg_count\n\
    \    local odds_pos_sum\n    local evens_pos_sum\n    local odds_neg_sum\n   \
    \ local evens_neg_sum\n    local odds_pos_avg\n    local evens_pos_avg\n    local\
    \ odds_neg_avg\n    local evens_neg_avg\n    local odds_pos_max\n    local evens_pos_max\n\
    \    local odds_neg_max\n    local evens_neg_max\n    local odds_pos_min\n   \
    \ local evens_pos_min\n    local odds_neg_min\n    local evens_neg_min\n    local\
    \ odds_pos_max\n    local evens_pos_max\n    local odds_neg_max\n    local evens_neg_max\n\
    \    local odds_pos_min\n    local evens_pos_min\n    local odds_neg_min\n   \
    \ local evens_neg_min\n    local odds_pos_sum\n    local evens_pos_sum\n    local\
    \ odds_neg_sum\n    local evens_neg_sum\n    local odds_pos_avg\n    local evens_pos_avg\n\
    \    local odds_neg_avg\n    local evens_neg_avg\n    local odds_pos_max\n   \
    \ local evens_pos_max\n    local odds_neg_max\n    local evens_neg_max\n    local\
    \ odds_pos_min\n    local evens_pos_min\n    local odds_neg_min\n    local evens_neg_min\n\
    \    local odds_pos_sum\n    local evens_pos_sum\n    local odds_neg_sum\n   \
    \ local evens_neg_sum\n    local odds_pos_avg\n    local evens_pos_avg\n    local\
    \ odds_neg_avg\n    local evens_neg_avg\n    local odds_pos_max\n    local evens_pos_max\n\
    \    local odds_neg_max\n    local evens_neg_max\n    local odds_pos_min\n   \
    \ local evens_pos_min\n    local odds_neg_min\n    local evens_neg_min\n    local\
    \ odds_pos_sum\n    local evens_pos_sum\n    local odds_neg_sum\n    local evens_neg_sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i%2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n\n    for\
    \ ((i=0; i<${#numbers};++i)); do\n        odds=${numbers:$i:2}\n        evens=${numbers:$i:1}\n\
    \        odds_index=$(echo $odds | wc -w)\n        evens_index=$(echo $evens |\
    \ wc -w)\n        odds_value=$(echo $odds | cut -d \" \" -f 1)\n        evens_value=$(echo\
    \ $evens | cut -d \" \" -f 1)\n        if (( odds_index == 0 )); then\n      \
    \      sum=$((sum+$odds_value))\n        fi\n        if (( evens_index == 0 ));\
    \ then\n            sum=$((sum+$evens_value))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk5l495nw.sh: line 38: sum+: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_pos\n\
    \    local evens_pos\n    local odds_neg\n    local evens_neg\n    local odds_pos2\n\
    \    local evens_pos2\n    local odds_neg2\n    local evens_neg2\n    local odds_pos3\n\
    \    local evens_pos3\n    local odds_neg3\n    local evens_neg3\n    local odds_pos4\n\
    \    local evens_pos4\n    local odds_neg4\n    local evens_neg4\n    local odds_pos5\n\
    \    local evens_pos5\n    local odds_neg5\n    local evens_neg5\n    local odds_pos6\n\
    \    local evens_pos6\n    local odds_neg6\n    local evens_neg6\n    local odds_pos7\n\
    \    local evens_pos7\n    local odds_neg7\n    local evens_neg7\n    local odds_pos8\n\
    \    local evens_pos8\n    local odds_neg8\n    local evens_neg8\n    local odds_pos9\n\
    \    local evens_pos9\n    local odds_neg9\n    local evens_neg9\n    local odds_pos10\n\
    \    local evens_pos10\n    local odds_neg10\n    local evens_neg10\n    local\
    \ odds_pos11\n    local evens_pos11\n    local odds_neg11\n    local evens_neg11\n\
    \    local odds_pos12\n    local evens_pos12\n    local odds_neg12\n    local\
    \ evens_neg12\n    local odds_pos13\n    local evens_pos13\n    local odds_neg13\n\
    \    local evens_neg13\n    local odds_pos14\n    local evens_pos14\n    local\
    \ odds_neg14\n    local evens_neg14\n    local odds_pos15\n    local evens_pos15\n\
    \    local odds_neg15\n    local evens_neg15\n    local odds_pos16\n    local\
    \ evens_pos16\n    local odds_neg16\n    local evens_neg16\n    local odds_pos17\n\
    \    local evens_pos17\n    local odds_neg17\n    local evens_neg17\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( $i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $i -eq $(( ${#numbers} - 1 )) ]; then\n      sum=$(( sum + $i ))\n    else\n\
    \      if [ $(( ${i} % 2 )) -eq 0 ]; then\n        sum=$(( sum + $i ))\n     \
    \ fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $i -eq 0 ]]; then\n      continue\n    fi\n    if [[ $i -eq $(( ${#numbers}\
    \ - 1 )) ]]; then\n      break\n    fi\n    if [[ $i -eq $(( ${#numbers} - 1 ))\
    \ && $(( ${#numbers} % 2 )) -eq 0 ]]; then\n      sum=$(( sum + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local sum2\n    local sum3\n    local sum4\n\
    \    local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n    \n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 0 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 2 ]\n   \
    \ then\n      sum=$((sum+i))\n    elif [ $i -eq 4 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 6 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 8 ]\n\
    \    then\n      sum=$((sum+i))\n    elif [ $i -eq 10 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 12 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 14\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 16 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 18 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 20\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 22 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 24 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 26\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 28 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 30 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 32\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 34 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 36 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 38\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 40 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 42 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 44\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 46 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpazcyoseg.sh: line 91: syntax error near unexpected token `}''

    /tmp/tmpazcyoseg.sh: line 91: `}''

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${i}+1 )) ]\n    then\n      sum=$(( ${sum} + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    ((\
    \ i % 2 == 1 )) && sum=$(( $sum + $i ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_value\n    local evens_value\n\
    \    local odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_value\n    local evens_value\n\
    \    local odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_value\n    local evens_value\n\
    \    local odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_value\n    local evens_value\n\
    \    local odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))) ; do\n      if [[ ${numbers[$j]}\
    \ -eq ${numbers[$((j + 1))]} ]]; then\n        sum=$((sum + ${numbers[$j]}))\n\
    \      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx8r8hp7i.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpx8r8hp7i.sh: line 21: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ $((j %\
    \ 2)) == 0 ]]; then\n        sum=$((sum + ${numbers[$j]}))\n      fi\n    done\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4clh6pju.sh: line 21: sum + 5 8 7 1: syntax error in expression
    (error token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    ((\
    \ i % 2 == 1 )) && sum=$(( sum + i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local number_count\n    local number_odd\n    local number_even\n\
    \    local number_even_index\n    local number_odd_index\n    local number_odds\n\
    \    local number_evens\n    local number_odds_index\n    local number_evens_index\n\
    \    local number_evens_index\n    local number_odds_index\n    local number_odds_index\n\
    \    local number_evens_index\n    local number_evens_index\n    local number_odds_index\n\
    \    local number_evens_index\n    local number_evens_index\n    local number_odds_index\n\
    \    local number_evens_index\n    local number_odds_index\n    local number_evens_index\n\
    \    local number_evens_index\n    local number_odds_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    local number_evens_index\n\
    \    local number_odds_index\n    local number_evens_index\n    \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $i -eq\
    \ $(( ${#numbers} -1 )) ]\n    then\n      sum=$(( sum + $i ))\n    else\n   \
    \   if [ $i -eq $(( ${#numbers} -1 )) -a $(( ${#numbers} % 2 )) -eq 0 ]\n    \
    \  then\n        sum=$(( sum + $i ))\n      fi\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local oddCount\n    local evenCount\n  \
    \  local oddSum\n    local evenSum\n    local oddSum2\n    local evenSum2\n  \
    \  local oddSum3\n    local evenSum3\n    local oddSum4\n    local evenSum4\n\
    \    local oddSum5\n    local evenSum5\n    local oddSum6\n    local evenSum6\n\
    \    local oddSum7\n    local evenSum7\n    local oddSum8\n    local evenSum8\n\
    \    local oddSum9\n    local evenSum9\n    local oddSum10\n    local evenSum10\n\
    \    local oddSum11\n    local evenSum11\n    local oddSum12\n    local evenSum12\n\
    \    local oddSum13\n    local evenSum13\n    local oddSum14\n    local evenSum14\n\
    \    local oddSum15\n    local evenSum15\n    local oddSum16\n    local evenSum16\n\
    \    local oddSum17\n    local evenSum17\n    local oddSum18\n    local evenSum18\n\
    \    local oddSum19\n    local evenSum19\n    local oddSum20\n    local evenSum20\n\
    \    local oddSum21\n    local evenSum21\n    local oddSum22\n    local evenSum22\n\
    \    local oddSum23\n    local evenSum23\n    local oddSum24\n    local evenSum24\n\
    \    local oddSum25\n    local evenSum25\n    local oddSum26\n    local evenSum26\n\
    \    local oddSum27\n    local evenSum27\n    local oddSum28\n    local evenSum28\n\
    \    local oddSum29\n    local evenSum29\n    local oddSum30\n    local evenSum30\n\
    \    local oddSum31\n    local evenSum31\n    local oddSum32\n    local evenSum32\n\
    \    local oddSum33\n    local evenSum33\n    local oddSum34\n    local evenSum34\n\
    \    local oddSum35\n    local evenSum35\n    local oddSum36\n    local evenSum36\n\
    \    local oddSum37\n    local evenSum37\n    local oddSum38\n    local evenSum38\n\
    \    local oddSum39\n    local evenSum39\n    local oddSum40\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( $i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq ${numbers[$((j + 1))]} ]]; then\n        sum=$((sum + ${numbers[$j]}))\n\
    \      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgi9yslnu.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpgi9yslnu.sh: line 21: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(echo $i | sed 's/ //g')\n    do\n      if [ $j -gt 0\
    \ ]\n      then\n        sum=$((sum + $j))\n      fi\n    done\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq $i ]]; then\n        sum=$((sum + ${numbers[$j]}))\n      fi\n    done\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnc6dbka4.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpnc6dbka4.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmpnc6dbka4.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmpnc6dbka4.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local odds\n    local evens\n    local index\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local \n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $i -eq $(( ${#numbers} - 1 )) ]]; then\n      sum=$(( sum + $i ))\n  \
    \  fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_pos\n    local\
    \ evens_pos\n    local odds_neg\n    local evens_neg\n    local odds_pos2\n  \
    \  local evens_pos2\n    local odds_neg2\n    local evens_neg2\n    local odds_pos3\n\
    \    local evens_pos3\n    local odds_neg3\n    local evens_neg3\n    local odds_pos4\n\
    \    local evens_pos4\n    local odds_neg4\n    local evens_neg4\n    local odds_pos5\n\
    \    local evens_pos5\n    local odds_neg5\n    local evens_neg5\n    local odds_pos6\n\
    \    local evens_pos6\n    local odds_neg6\n    local evens_neg6\n    local odds_pos7\n\
    \    local evens_pos7\n    local odds_neg7\n    local evens_neg7\n    local odds_pos8\n\
    \    local evens_pos8\n    local odds_neg8\n    local evens_neg8\n    local odds_pos9\n\
    \    local evens_pos9\n    local odds_neg9\n    local evens_neg9\n    local odds_pos10\n\
    \    local evens_pos10\n    local odds_neg10\n    local evens_neg10\n    local\
    \ odds_pos11\n    local evens_pos11\n    local odds_neg11\n    local evens_neg11\n\
    \    local odds_pos12\n    local evens_pos12\n    local odds_neg12\n    local\
    \ evens_neg12\n    local odds_pos13\n    local evens_pos13\n    local odds_neg13\n\
    \    local evens_neg13\n    local odds_pos14\n    local evens_pos14\n    local\
    \ odds_neg14\n    local evens_neg14\n    local odds_pos15\n    local evens_pos15\n\
    \    local odds_neg15\n    local evens_neg15\n    local odds_pos16\n    local\
    \ evens_pos16\n    local odds_neg16\n    local evens_neg16\n    local odds_pos17\n\
    \    local evens_pos17\n    local odds_neg17\n    local evens_neg17\n    local\
    \ odd\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq ${numbers[$((j + 1))]} ]]; then\n        sum=$((sum + ${numbers[$j]}))\n\
    \      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgi9yslnu.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpgi9yslnu.sh: line 21: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local odds\n    local evens\n    local evens_index\n    local\
    \ odds_index\n    local numbers_index\n    local number_index\n    local odds_index\n\
    \    local evens_index\n    local number_index\n    local number_count\n    local\
    \ number_count2\n    local number_count3\n    local number_count4\n    local number_count5\n\
    \    local number_count6\n    local number_count7\n    local number_count8\n \
    \   local number_count9\n    local number_count10\n    local number_count11\n\
    \    local number_count12\n    local number_count13\n    local number_count14\n\
    \    local number_count15\n    local number_count16\n    local number_count17\n\
    \    local number_count18\n    local number_count19\n    local number_count20\n\
    \    local number_count21\n    local number_count22\n    local number_count23\n\
    \    local number_count24\n    local number_count25\n    local number_count26\n\
    \    local number_count27\n    local number_count28\n    local number_count29\n\
    \    local number_count30\n    local number_count31\n    local number_count32\n\
    \    local number_count33\n    local number_count34\n    local number_count35\n\
    \    local number_count36\n    local number_count37\n    local number_count38\n\
    \    local number_count39\n    local number_count40\n    local number_count41\n\
    \    local number_count42\n    local number_count43\n    local number_count44\n\
    \    local number_count45\n    local number_count46\n    local number_count47\n\
    \    local number_count48\n    local number_count49\n    local number_count50\n\
    \    local number_count51\n    local number_count52\n    local number_count53\n\
    \    local number_count54\n    local number_count55\n    local number_count56\n\
    \    local number_count57\n    local number_count58\n    local number_count59\n\
    \    local number_count60\n    local number_count61\n    local number_count62\n\
    \    local number_count63\n    local number_count64\n    local number_count65\n\
    \    local number_count66\n    local number_count67\n    local number_count68\n\
    \    local number_count69\n    local number_count\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local oddCount\n    local evenCount\n  \
    \  local num\n    local num2\n    local num3\n    local num4\n    local num5\n\
    \    local num6\n    local num7\n    local num8\n    local num9\n    local num10\n\
    \    local num11\n    local num12\n    local num13\n    local num14\n    local\
    \ num15\n    local num16\n    local num17\n    local num18\n    local num19\n\
    \    local num20\n    local num21\n    local num22\n    local num23\n    local\
    \ num24\n    local num25\n    local num26\n    local num27\n    local num28\n\
    \    local num29\n    local num30\n    local num31\n    local num32\n    local\
    \ num33\n    local num34\n    local num35\n    local num36\n    local num37\n\
    \    local num38\n    local num39\n    local num40\n    local num41\n    local\
    \ num42\n    local num43\n    local num44\n    local num45\n    local num46\n\
    \    local num47\n    local num48\n    local num49\n    local num50\n    local\
    \ num51\n    local num52\n    local num53\n    local num54\n    local num55\n\
    \    local num56\n    local num57\n    local num58\n    local num59\n    local\
    \ num60\n    local num61\n    local num62\n    local num63\n    local num64\n\
    \    local num65\n    local num66\n    local num67\n    local num68\n    local\
    \ num69\n    local num70\n    local num71\n    local num72\n    local num73\n\
    \    local num74\n    local num75\n    local num76\n    local num77\n    local\
    \ num78\n    local num79\n    local num80\n    local num81\n    local num82\n\
    \    local num83\n    local num84\n    local num85\n    local num86\n    local\
    \ num87\n    local num88\n    local num89\n    local num90\n    local num91\n\
    \    local num92\n    local num93\n    local num94\n    local \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${i} % 2 )) ]\n    then\n      sum=$(( sum + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $i -eq $((i%2)) ]]; then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $(seq 1 $((${#numbers} - 1)));\
    \ do\n    if [[ $((i % 2)) == 0 ]]; then\n      sum=$((sum + ${numbers[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcpgbdi2o.sh: line 17: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_value\n    local evens_value\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_length\n\
    \    local evens_value_length\n    local odds_value_sum\n    local evens_value_sum\n\
    \    local odds_value_length_index\n    local evens_value_length_index\n    local\
    \ odds_value_length_index_value\n    local evens_value_length_index_value\n  \
    \  local odds_value_length_index_value_sum\n    local evens_value_length_index_value_sum\n\
    \    local odds_value_length_index_value_length\n    local evens_value_length_index_value_length\n\
    \    local odds_value_length_index_value_length_index\n    local evens_value_length_index_value_length_index\n\
    \    local odds_value_length_index_value_length_index_value\n    local evens_value_length_index_value_length_index_value\n\
    \    local odds_value_length_index_value_length_index_value_sum\n    local evens_value_length_index_value_length_index_value_sum\n\
    \    local odds_value_length_index_value_length_index_value_length\n    local\
    \ evens_value_length_index_value_length_index_value_length\n    local odds_value_length_index_value_length_index_value_length_index\n\
    \    local evens_value_length_index_value_length_index_value_length_index\n  \
    \  local odds_value_length_index_value_length_index_value_length_index_value\n\
    \    local evens_value_length_index_value_length_index_value_length_index_value\n\
    \    local odds_value_length_index_value_length_index_value_length_index_value_sum\n\
    \    local evens_value_length_index_value_length_index_value_length_index_value_sum\n\
    \    local odds_value_length_index_value_length_index_value_length_index_value_length\n\
    \    local evens_value_length_index_value_length_index_value_length_index_value_length\n\
    \    local odds_value_length_index_value_length_index_value_length_index_value_length_index\n\
    \    local evens_value_length_index_value_length_index_value_length_index_value_length_index\n\
    \    local odds_value_length_index_value_length_index_value_length_index_value_length_index_value\n\
    \    local evens_value_length_index_value_length_index_value_length_index_value_length_index_value\n\
    \    local odds_value_length_index_value_length_index_value_length_index_value_length_index_value_\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n\n    for ((i=0;\
    \ i<${#numbers}\"; i+=2)); do\n        odds=$(echo \"${numbers}\" | sed -n \"\
    ${i}p\")\n        evens=$(echo \"${numbers}\" | sed -n \"${i+1}p\")\n        odd=$(echo\
    \ \"${odds}\" | sed -n \"${i}p\")\n        even=$(echo \"${evens}\" | sed -n \"\
    ${i+1}p\")\n        if [[ ${odd} == ${even} ]]; then\n            sum=$((sum +\
    \ ${odd}))\n        fi\n    done\n    echo \"${sum}\"\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkbi6svew.sh: line 47: unexpected EOF while looking for matching
    `"''

    /tmp/tmpkbi6svew.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 1 $((${#numbers} - 1))) \n    do\n      if [[ $((${numbers[$j]}\
    \ % 2)) -eq 0 ]]\n      then\n        sum=$((${sum} + ${numbers[$j]}))\n     \
    \ fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvvct3fwp.sh: line 21: % 2: syntax error: operand expected (error
    token is "% 2")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $((i %\
    \ 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $(( i % 2 )) -eq 0 ]; then\n      sum=$(( sum + i ))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local total\n    local odds\n    local evens\n\
    \    local odds_count\n    local evens_count\n    local odds_total\n    local\
    \ evens_total\n    local odds_odds\n    local evens_odds\n    local odds_evens\n\
    \    local evens_evens\n    local odds_odds_count\n    local evens_odds_count\n\
    \    local odds_evens_count\n    local odds_odds_total\n    local evens_odds_total\n\
    \    local odds_evens_total\n    local odds_odds_odds\n    local evens_odds_odds\n\
    \    local odds_evens_odds\n    local evens_evens_odds\n    local odds_odds_evens\n\
    \    local evens_odds_evens\n    local odds_evens_evens\n    local evens_evens_evens\n\
    \    local odds_odds_odds_count\n    local evens_odds_odds_count\n    local odds_evens_odds_count\n\
    \    local odds_odds_total\n    local evens_odds_total\n    local odds_evens_total\n\
    \    local odds_odds_odds\n    local evens_odds_odds\n    local odds_evens_odds\n\
    \    local evens_evens_odds\n    local odds_odds_evens\n    local evens_odds_evens\n\
    \    local odds_evens_evens\n    local evens_evens_evens\n    local odds_odds_odds_count\n\
    \    local evens_odds_odds_count\n    local odds_evens_odds_count\n    local odds_odds_total\n\
    \    local evens_odds_total\n    local odds_evens_total\n    local odds_odds_odds\n\
    \    local evens_odds_odds\n    local odds_evens_odds\n    local evens_evens_odds\n\
    \    local odds_odds_evens\n    local evens_odds_evens\n    local odds_evens_evens\n\
    \    local evens_evens_evens\n    local odds_odds_odds_count\n    local evens_odds_odds_count\n\
    \    local odds_evens_odds_count\n    local odds_odds_total\n    local evens_odds_total\n\
    \    local odds_evens_total\n    local \n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $((i %\
    \ 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( $i % 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local odds_count\n\
    \    local evens_count\n    local odds_sum\n    local evens_sum\n    local odds_sum2\n\
    \    local evens_sum2\n    local odds_sum3\n    local evens_sum3\n    local odds_sum4\n\
    \    local evens_sum4\n    local odds_sum5\n    local evens_sum5\n    local odds_sum6\n\
    \    local evens_sum6\n    local odds_sum7\n    local evens_sum7\n    local odds_sum8\n\
    \    local evens_sum8\n    local odds_sum9\n    local evens_sum9\n    local odds_sum10\n\
    \    local evens_sum10\n    local odds_sum11\n    local evens_sum11\n    local\
    \ odds_sum12\n    local evens_sum12\n    local odds_sum13\n    local evens_sum13\n\
    \    local odds_sum14\n    local evens_sum14\n    local odds_sum15\n    local\
    \ evens_sum15\n    local odds_sum16\n    local evens_sum16\n    local odds_sum17\n\
    \    local evens_sum17\n    local odds_sum18\n    local evens_sum18\n    local\
    \ odds_sum19\n    local evens_sum19\n    local odds_sum20\n    local evens_sum20\n\
    \    local odds_sum21\n    local evens_sum21\n    local odds_sum22\n    local\
    \ evens_sum22\n    local odds_sum23\n    local evens_sum23\n    local odds_sum24\n\
    \    local evens_sum24\n    local odds_sum25\n    local evens_sum25\n    local\
    \ odds_sum26\n    local evens_sum26\n    local odds_sum27\n    local evens_sum27\n\
    \    local odds_sum28\n    local evens_sum28\n    local odds_sum29\n    local\
    \ evens_sum29\n    local odds_sum30\n    local evens_sum30\n    local odds_sum31\n\
    \    local evens_sum31\n    local odds_sum32\n    local evens_sum32\n    local\
    \ odds_sum33\n    local evens_sum33\n\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    ((\
    \ i % 2 != 0 )) && sum=$(( $sum + $i ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( sum + i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $i -eq $(( i % 2 )) ]; then\n      sum=$(( sum + i ))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_index\n    local evens_index\n\
    \    local odds_length\n    local evens_length\n    local odds_sum\n    local\
    \ evens_sum\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_sum\n    local evens_sum\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_index\n    local evens_index\n\
    \    local odds_length\n    local evens_length\n    local odds_sum\n    local\
    \ evens_sum\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_sum\n    local evens_sum\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_index\n    local evens_index\n\
    \    local odds_length\n    local evens_length\n    local odds_sum\n    local\
    \ evens_sum\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_sum\n    local evens_sum\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_index\n    local evens_index\n\
    \    local odds_length\n    local evens_length\n    local odds_sum\n    local\
    \ evens_sum\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_sum\n    local evens_sum\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odd\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $i -eq $((i%2)) ]]\n    then\n      sum=$((sum+i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local total\n\n    # Loop\
    \ through each number in the list\n    for ((i=0; i<${#numbers[@]}; i++)); do\n\
    \        # Loop through each number in the list\n        for ((j=0; j<${#numbers[@]};\
    \ j++)); do\n            # Loop through each number in the list\n            for\
    \ ((k=0; k<${#numbers[@]}; k++)); do\n                # If the current number\
    \ is even, add it to the sum\n                if [[ ${numbers[k]} -eq ${numbers[j]}\
    \ ]]; then\n                    ((even++))\n                fi\n            done\n\
    \        done\n        # Add the sum of the odd numbers to the sum\n        if\
    \ [[ ${even} -eq 0 ]]; then\n            ((sum+=${numbers[i]}))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd2k7ctqz.sh: line 30: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpd2k7ctqz.sh: line 37: ((: sum+=5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $((i % 2)) == 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odd\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $(seq 0 $((${#numbers} - 1)));\
    \ do\n    if [[ ${numbers[$i]} -eq ${numbers[$(($i + 1))]} ]]; then\n      sum=$((sum\
    \ + ${numbers[$i]}))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu2hwiyxv.sh: line 16: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpu2hwiyxv.sh: line 17: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq ${numbers[$((j + 1))]} ]]; then\n        sum=$((sum + ${numbers[$j]}))\n\
    \      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgi9yslnu.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpgi9yslnu.sh: line 21: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    local \n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local sums\n\
    \    local sum\n    local odds_evens\n    local odds_even\n    local odds_evens\n\
    \    local odds_evens_sum\n    local odds_evens_sums\n    local odds_evens_sum\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odds_evens_sums\n    local odds_evens_sums\n\
    \    local odds_evens_sums\n    local odd\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n\n    for\
    \ ((i = 0; i < ${#numbers}\"; i+=2)); do\n        odds=${numbers:$i:1}\n     \
    \   evens=${numbers:$((i+1)):1}\n        odds_value=$(echo $odds | cut -d ' '\
    \ -f 1)\n        evens_value=$(echo $evens | cut -d ' ' -f 1)\n        odds_index=$(echo\
    \ $odds | cut -d ' ' -f 2)\n        evens_index=$(echo $evens | cut -d ' ' -f\
    \ 2)\n        odds_value=$(echo $odds | cut -d ' ' -f 2)\n        evens_value=$(echo\
    \ $evens | cut -d ' ' -f 2)\n        if [[ $odds_index -eq 0 ]]; then\n      \
    \      sum=$((sum + $odds_value))\n        elif [[ $evens_index -eq 0 ]]; then\n\
    \            sum=$((sum + $evens_value))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfo_s89b4.sh: line 60: unexpected EOF while looking for matching
    `"''

    /tmp/tmpfo_s89b4.sh: line 64: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local summed\n\
    \    local odds_sum\n    local evens_sum\n    local odds_evens\n    local evens_odds\n\
    \    local odds_odds\n    local evens_evens\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_odds_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local odds_odds_sum\n    local\
    \ evens_evens_sum\n    local odds_evens_sum\n    local evens_odds_sum\n    local\
    \ odds_odds_sum\n    local evens_evens_sum\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_odds_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local odds_odds_sum\n    local\
    \ evens_evens_sum\n    local odds_evens_sum\n    local evens_odds_sum\n    local\
    \ odds_odds_sum\n    local evens_evens_sum\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_odds_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local odds_odds_sum\n    local\
    \ evens_evens_sum\n    local odds_evens_sum\n    local evens_odds_sum\n    local\
    \ odds_odds_sum\n    local evens_evens_sum\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_odds_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local odds_odds_sum\n    local\
    \ evens_evens_sum\n    local odds_evens_sum\n    local evens_odds_sum\n    local\
    \ odds_odds_sum\n    local evens_evens_sum\n    local odds_evens_sum\n    local\
    \ evens_odds_sum\n    local odds_odds_sum\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local odd\n\
    \    local even\n    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq ${numbers[$((j + 1))]} ]]; then\n        sum=$((sum + ${numbers[$j]}))\n\
    \      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgi9yslnu.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpgi9yslnu.sh: line 21: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local nums\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_odds_evens\n    local nums_odds_evens_odds\n    local nums_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_evens_odds\n    local nums_odds_evens_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds\n    local nums_odds_evens_odds_evens_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds\n    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odd\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local oddCount\n    local evenCount\n  \
    \  local num\n    local num2\n    local num3\n    local num4\n    local num5\n\
    \    local num6\n    local num7\n    local num8\n    local num9\n    local num10\n\
    \    local num11\n    local num12\n    local num13\n    local num14\n    local\
    \ num15\n    local num16\n    local num17\n    local num18\n    local num19\n\
    \    local num20\n    local num21\n    local num22\n    local num23\n    local\
    \ num24\n    local num25\n    local num26\n    local num27\n    local num28\n\
    \    local num29\n    local num30\n    local num31\n    local num32\n    local\
    \ num33\n    local num34\n    local num35\n    local num36\n    local num37\n\
    \    local num38\n    local num39\n    local num40\n    local num41\n    local\
    \ num42\n    local num43\n    local num44\n    local num45\n    local num46\n\
    \    local num47\n    local num48\n    local num49\n    local num50\n    local\
    \ num51\n    local num52\n    local num53\n    local num54\n    local num55\n\
    \    local num56\n    local num57\n    local num58\n    local num59\n    local\
    \ num60\n    local num61\n    local num62\n    local num63\n    local num64\n\
    \    local num65\n    local num66\n    local num67\n    local num68\n    local\
    \ num69\n    local num70\n    local num71\n    local num72\n    local num73\n\
    \    local num74\n    local num75\n    local num76\n    local num77\n    local\
    \ num78\n    local num79\n    local num80\n    local num81\n    local num82\n\
    \    local num83\n    local num84\n    local num85\n    local num86\n    local\
    \ num87\n    local num88\n    local num89\n    local num90\n    local num91\n\
    \    local num92\n    local num93\n    local num94\n    local \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( $i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( i % 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $((i % 2)) -eq 0 ]]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    ((\
    \ i % 2 )) && sum=$(( sum + i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq $i ]]; then\n        ((sum+=${numbers[$j]}))\n        ((numbers+=${numbers[$((j\
    \ + 1))]}))\n        break\n      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpahorkwg1.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpahorkwg1.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmpahorkwg1.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmpahorkwg1.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odd\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))) ; do\n      if [[ ${numbers[$j]}\
    \ -eq ${numbers[$((j + 1))]} ]]; then\n        sum=$((sum + ${numbers[$j]}))\n\
    \      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx8r8hp7i.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpx8r8hp7i.sh: line 21: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local count2\n    local count3\n    local\
    \ count4\n    local count5\n    local count6\n    local count7\n    local count8\n\
    \    local count9\n    local count10\n    local count11\n    local count12\n \
    \   local count13\n    local count14\n    local count15\n    local count16\n \
    \   local count17\n    local count18\n    local count19\n    local count20\n \
    \   local count21\n    local count22\n    local count23\n    local count24\n \
    \   local count25\n    local count26\n    local count27\n    local count28\n \
    \   local count29\n    local count30\n    local count31\n    local count32\n \
    \   local count33\n    local count34\n    local count35\n    local count36\n \
    \   local count37\n    local count38\n    local count39\n    local count40\n \
    \   local count41\n    local count42\n    local count43\n    local count44\n \
    \   local count45\n    local count46\n    local count47\n    local count48\n \
    \   local count49\n    local count50\n    local count51\n    local count52\n \
    \   local count53\n    local count54\n    local count55\n    local count56\n \
    \   local count57\n    local count58\n    local count59\n    local count60\n \
    \   local count61\n    local count62\n    local count63\n    local count64\n \
    \   local count65\n    local count66\n    local count67\n    local count68\n \
    \   local count69\n    local count70\n    local count71\n    local count72\n \
    \   local count73\n    local count74\n    local count75\n    local count76\n \
    \   local count77\n    local count78\n    local count79\n    local count80\n \
    \   local count81\n    local count82\n    local count83\n    local count84\n \
    \   local count85\n    local count86\n    local count87\n    local count88\n \
    \   local count89\n    local count90\n    local count91\n    local count92\n \
    \   local count93\n    local count94\n    local count95\n    local count96\n \
    \   local count97\n    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $i -eq $(( ${#numbers} / 2 )) ]]\n    then\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_index2\n    local evens_index2\n    local\
    \ odds_index3\n    local evens_index3\n    local odds_index4\n    local evens_index4\n\
    \    local odds_index5\n    local evens_index5\n    local odds_index6\n    local\
    \ evens_index6\n    local odds_index7\n    local evens_index7\n    local odds_index8\n\
    \    local evens_index8\n    local odds_index9\n    local evens_index9\n    local\
    \ odds_index10\n    local evens_index10\n    local odds_index11\n    local evens_index11\n\
    \    local odds_index12\n    local evens_index12\n    local odds_index13\n   \
    \ local evens_index13\n    local odds_index14\n    local evens_index14\n    local\
    \ odds_index15\n    local evens_index15\n    local odds_index16\n    local evens_index16\n\
    \    local odds_index17\n    local evens_index17\n    local odds_index18\n   \
    \ local evens_index18\n    local odds_index19\n    local evens_index19\n    local\
    \ odds_index20\n    local evens_index20\n    local odds_index21\n    local evens_index21\n\
    \    local odds_index22\n    local evens_index22\n    local odds_index23\n   \
    \ local evens_index23\n    local odds_index24\n    local evens_index24\n    local\
    \ odds_index25\n    local evens_index25\n    local odds_index26\n    local evens_index26\n\
    \    local odds_index27\n    local evens_index27\n    local odds_index28\n   \
    \ local evens_index28\n    local odds_index29\n    local evens_index29\n    local\
    \ odds_index30\n    local evens_index30\n    local odds_index31\n    local evens_index31\n\
    \    local odds_index32\n    local evens_index32\n    local odds_index33\n   \
    \ local evens_index33\n    local odds_index34\n    local evens_\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(echo $i | sed 's/ //g')\n    do\n      if [ $j -gt $((${i}-1))\
    \ ]\n      then\n        sum=$((sum+$j))\n      fi\n    done\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local index\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local number\n    local index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd_index\n    local number\n    local\
    \ index\n    local odd\n    local even\n    local even_index\n    local odd_index\n\
    \    local number\n    local index\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local number\n    local index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd_index\n    local number\n    local\
    \ index\n    local odd\n    local even\n    local even_index\n    local odd_index\n\
    \    local number\n    local index\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local number\n    local index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd_index\n    local number\n    local\
    \ index\n    local odd\n    local even\n    local even_index\n    local odd_index\n\
    \    local number\n    local index\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local number\n    local index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd_index\n    local number\n    local\
    \ index\n    local odd\n    local even\n    local even_index\n    local odd_index\n\
    \    local number\n    local index\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local number\n    local index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd_index\n    local number\n    local\
    \ index\n    local odd\n    local even\n    local even_index\n    local odd_index\n\
    \    local number\n    local index\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local number\n    local index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd_index\n    local number\n    local\
    \ index\n    local odd\n    local even\n    local even_index\n    local odd_index\n\
    \    local number\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [[ $i -eq\
    \ $((i%2)) ]]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local odd\n    local even\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local oddCount\n    local evenCount\n  \
    \  local oddSum\n    local evenSum\n    local odd\n    local even\n    local count\n\
    \    local oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n\
    \    local odd\n    local even\n    local count\n    local oddCount\n    local\
    \ evenCount\n    local oddSum\n    local evenSum\n    local odd\n    local even\n\
    \    local count\n    local oddCount\n    local evenCount\n    local oddSum\n\
    \    local evenSum\n    local odd\n    local even\n    local count\n    local\
    \ oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n    local\
    \ odd\n    local even\n    local count\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local odd\n    local even\n    local\
    \ count\n    local oddCount\n    local evenCount\n    local oddSum\n    local\
    \ evenSum\n    local odd\n    local even\n    local count\n    local oddCount\n\
    \    local evenCount\n    local oddSum\n    local evenSum\n    local odd\n   \
    \ local even\n    local count\n    local oddCount\n    local evenCount\n    local\
    \ oddSum\n    local evenSum\n    local odd\n    local even\n    local count\n\
    \    local oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n\
    \    local odd\n    local even\n    local count\n    local oddCount\n    local\
    \ evenCount\n    local oddSum\n    local evenSum\n    local odd\n    local even\n\
    \    local count\n    local oddCount\n    local evenCount\n    local oddSum\n\
    \    local evenSum\n    local odd\n    local even\n    local count\n    local\
    \ oddCount\n    local evenCount\n    local oddSum\n    local evenSum\n    local\
    \ odd\n    local even\n    local count\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local odd\n    local even\n    local\
    \ count\n    local oddCount\n    local evenCount\n    local oddSum\n    local\
    \ evenSum\n    local odd\n    local even\n    local count\n    \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    local j=$((i+1))\n\
    \    if [ $((j%2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n    local evens\n    local number\n    local odds\n    local\
    \ evens\n    local number\n    local odds\n    local evens\n    local number\n\
    \    local odds\n\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    ((\
    \ i % 2 != 0 )) && sum=$(( sum + i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048248

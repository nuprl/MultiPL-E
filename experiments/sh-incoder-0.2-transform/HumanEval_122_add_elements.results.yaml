language: sh
name: HumanEval_122_add_elements
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local elements=$(echo $arr | tr \" \" \"\\n\")\n    while [ $i -lt\
    \ $k ]; do\n        if [ $j -eq $((${#elements[*]} - 1)) ]; then\n           \
    \ sum=$((sum + ${elements[$i]}))\n            i=$((i + 1))\n            j=0\n\
    \        else\n            sum=$((sum + ${elements[$i]}))\n            i=$((i\
    \ + 1))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4o9um7t.sh: line 22: sum + 1

    -2

    -3

    41

    57

    76

    87

    88

    99: syntax error in expression (error token is "41

    57

    76

    87

    88

    99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5yave21.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local kmax\n    local kmin\n    local sum1\n    local sum2\n    local\
    \ sum3\n    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local\
    \ sum8\n    local sum9\n    local sum10\n    local sum11\n    local sum12\n  \
    \  local sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local \n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum\n  local i\n  sum=0\n \
    \ for i in $(seq 0 $((k-1)) )\n  do\n    sum=$(( $sum + ${arr:$i:1} ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1kr5gmpw.sh: line 21: 1 +   : syntax error: operand expected (error
    token is "+   ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5yave21.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local len\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n    local tmp96\n    local tmp97\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  sum=0\n    for ((i=0; i<k; i++)); do\n        sum=$((sum+arr[i]))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprpso924d.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  local j\n    local element\n    local element2\n    local element3\n    local\
    \ element4\n    local element5\n    local element6\n    local element7\n    local\
    \ element8\n    local element9\n    local element10\n    local element11\n   \
    \ local element12\n    local element13\n    local element14\n    local element15\n\
    \    local element16\n    local element17\n    local element18\n    local element19\n\
    \    local element20\n    local element21\n    local element22\n    local element23\n\
    \    local element24\n    local element25\n    local element26\n    local element27\n\
    \    local element28\n    local element29\n    local element30\n    local element31\n\
    \    local element32\n    local element33\n    local element34\n    local element35\n\
    \    local element36\n    local element37\n    local element38\n    local element39\n\
    \    local element40\n    local element41\n    local element42\n    local element43\n\
    \    local element44\n    local element45\n    local element46\n    local element47\n\
    \    local element48\n    local element49\n    local element50\n    local element51\n\
    \    local element52\n    local element53\n    local element54\n    local element55\n\
    \    local element56\n    local element57\n    local element58\n    local element59\n\
    \    local element60\n    local element61\n    local element62\n    local element63\n\
    \    local element64\n    local element65\n    local element66\n    local element67\n\
    \    local element68\n    local element69\n    local element70\n    local element71\n\
    \    local element72\n    local element73\n    local element74\n    local element75\n\
    \    local element76\n    local element77\n    local element78\n    local element79\n\
    \    local element80\n    local element81\n    local element82\n    local element83\n\
    \    local element84\n    local element85\n    local element86\n    local element87\n\
    \    local element88\n    local element89\n    local element90\n    local element91\n\
    \    local element92\n    local element93\n    local element94\n    local element95\n\
    \    local element96\n    local element97\n    local element98\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  sum=0\n    for i in $(seq 0 $((k-1))); do\n        sum=$((sum+arr[i]))\n  \
    \  done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdu6opvey.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+${arr:$i:1}))\n        i=$((i+1))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp55t1vyow.sh: line 19: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1))); do\n    sum=$((sum+${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgar3fg7d.sh: line 19: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    local element\n    local element2\n    local element3\n\
    \    local element4\n    local element5\n    local element6\n    local element7\n\
    \    local element8\n    local element9\n    local element10\n    local element11\n\
    \    local element12\n    local element13\n    local element14\n    local element15\n\
    \    local element16\n    local element17\n    local element18\n    local element19\n\
    \    local element20\n    local element21\n    local element22\n    local element23\n\
    \    local element24\n    local element25\n    local element26\n    local element27\n\
    \    local element28\n    local element29\n    local element30\n    local element31\n\
    \    local element32\n    local element33\n    local element34\n    local element35\n\
    \    local element36\n    local element37\n    local element38\n    local element39\n\
    \    local element40\n    local element41\n    local element42\n    local element43\n\
    \    local element44\n    local element45\n    local element46\n    local element47\n\
    \    local element48\n    local element49\n    local element50\n    local element51\n\
    \    local element52\n    local element53\n    local element54\n    local element55\n\
    \    local element56\n    local element57\n    local element58\n    local element59\n\
    \    local element60\n    local element61\n    local element62\n    local element63\n\
    \    local element64\n    local element65\n    local element66\n    local element67\n\
    \    local element68\n    local element69\n    local element70\n    local element71\n\
    \    local element72\n    local element73\n    local element74\n    local element75\n\
    \    local element76\n    local element77\n    local element78\n    local element79\n\
    \    local element80\n    local element81\n    local element82\n    local element83\n\
    \    local element84\n    local element85\n    local element86\n    local element87\n\
    \    local element88\n    local element89\n    local element90\n    local element91\n\
    \    local element92\n    local element93\n    local element94\n    local element95\n\
    \    local element96\n    local element97\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  sum=0\n    for (( i=0; i<k; i++ )); do\n        sum=$(( sum + arr[i] ))\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6zeg0cfn.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local sum1=0\n    local sum2=0\n    local sum3=0\n    local sum4=0\n\
    \    local sum5=0\n    local sum6=0\n    local sum7=0\n    local sum8=0\n    local\
    \ sum9=0\n    local sum10=0\n    local sum11=0\n    local sum12=0\n    local sum13=0\n\
    \    local sum14=0\n    local sum15=0\n    local sum16=0\n    local sum17=0\n\
    \    local sum18=0\n    local sum19=0\n    local sum20=0\n    local sum21=0\n\
    \    local sum22=0\n    local sum23=0\n    local sum24=0\n    local sum25=0\n\
    \    local sum26=0\n    local sum27=0\n    local sum28=0\n    local sum29=0\n\
    \    local sum30=0\n    local sum31=0\n    local sum32=0\n    local sum33=0\n\
    \    local sum34=0\n    local sum35=0\n    local sum36=0\n    local sum37=0\n\
    \    local sum38=0\n    local sum39=0\n    local sum40=0\n    local sum41=0\n\
    \    local sum42=0\n    local sum43=0\n    local sum44=0\n    local sum45=0\n\
    \    local sum46=0\n    local sum47=0\n    local sum48=0\n    local sum49=0\n\
    \    local sum50=0\n    local sum51=0\n    local sum52=0\n    local sum53=0\n\
    \    local sum54=0\n    local sum55=0\n    local sum56=0\n    local sum57=0\n\
    \    local sum58=0\n    local sum59=0\n    local sum60=0\n    local sum61=0\n\
    \    local sum62=0\n    local sum63=0\n    local sum64=0\n    local sum65=0\n\
    \    local sum66=0\n    local sum67=0\n    local sum68=0\n    local sum69=0\n\
    \    local sum70=0\n    local sum71=0\n    local sum72=0\n    local sum73=0\n\
    \    local sum74=0\n    local sum75=0\n    local sum76=0\n    local sum77=0\n\
    \    local sum78=0\n    local sum79=0\n    local sum80=0\n    local sum81=0\n\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=$1\n  k=$2\n  local sum\n  sum=0\n  for i in $(seq 1\
    \ $k); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphlutsc1x.sh: line 20: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local sum1=0\n    local sum2=0\n    local sum3=0\n    local sum4=0\n\
    \    local sum5=0\n    local sum6=0\n    local sum7=0\n    local sum8=0\n    local\
    \ sum9=0\n    local sum10=0\n    local sum11=0\n    local sum12=0\n    local sum13=0\n\
    \    local sum14=0\n    local sum15=0\n    local sum16=0\n    local sum17=0\n\
    \    local sum18=0\n    local sum19=0\n    local sum20=0\n    local sum21=0\n\
    \    local sum22=0\n    local sum23=0\n    local sum24=0\n    local sum25=0\n\
    \    local sum26=0\n    local sum27=0\n    local sum28=0\n    local sum29=0\n\
    \    local sum30=0\n    local sum31=0\n    local sum32=0\n    local sum33=0\n\
    \    local sum34=0\n    local sum35=0\n    local sum36=0\n    local sum37=0\n\
    \    local sum38=0\n    local sum39=0\n    local sum40=0\n    local sum41=0\n\
    \    local sum42=0\n    local sum43=0\n    local sum44=0\n    local sum45=0\n\
    \    local sum46=0\n    local sum47=0\n    local sum48=0\n    local sum49=0\n\
    \    local sum50=0\n    local sum51=0\n    local sum52=0\n    local sum53=0\n\
    \    local sum54=0\n    local sum55=0\n    local sum56=0\n    local sum57=0\n\
    \    local sum58=0\n    local sum59=0\n    local sum60=0\n    local sum61=0\n\
    \    local sum62=0\n    local sum63=0\n    local sum64=0\n    local sum65=0\n\
    \    local sum66=0\n    local sum67=0\n    local sum68=0\n    local sum69=0\n\
    \    local sum70=0\n    local sum71=0\n    local sum72=0\n    local sum73=0\n\
    \    local sum74=0\n    local sum75=0\n    local sum76=0\n    local sum77=0\n\
    \    local sum78=0\n    local sum79=0\n    local sum80=0\n    local sum81=0\n\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=$1\n  k=$2\n  local sum\n  sum=0\n  for i in $(seq 0\
    \ $((k-1))); do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3h8y97wz.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$(($sum + ${arr:$i:1}))\n        i=$(($i\
    \ + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4oqm_sb8.sh: line 19: 1 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local len\n    local max\n    local maxlen\n    local maxlen2\n\
    \    local maxlen3\n    local maxlen4\n    local maxlen5\n    local maxlen6\n\
    \    local maxlen7\n    local maxlen8\n    local maxlen9\n    local maxlen10\n\
    \    local maxlen11\n    local maxlen12\n    local maxlen13\n    local maxlen14\n\
    \    local maxlen15\n    local maxlen16\n    local maxlen17\n    local maxlen18\n\
    \    local maxlen19\n    local maxlen20\n    local maxlen21\n    local maxlen22\n\
    \    local maxlen23\n    local maxlen24\n    local maxlen25\n    local maxlen26\n\
    \    local maxlen27\n    local maxlen28\n    local maxlen29\n    local maxlen30\n\
    \    local maxlen31\n    local maxlen32\n    local maxlen33\n    local maxlen34\n\
    \    local maxlen35\n    local maxlen36\n    local maxlen37\n    local maxlen38\n\
    \    local maxlen39\n    local maxlen40\n    local maxlen41\n    local maxlen42\n\
    \    local maxlen43\n    local maxlen44\n    local maxlen45\n    local maxlen46\n\
    \    local maxlen47\n    local maxlen48\n    local maxlen49\n    local maxlen50\n\
    \    local maxlen51\n    local maxlen52\n    local maxlen53\n    local maxlen54\n\
    \    local maxlen55\n    local maxlen56\n    local maxlen57\n    local maxlen58\n\
    \    local maxlen59\n    local maxlen60\n    local maxlen61\n    local maxlen62\n\
    \    local maxlen63\n    local maxlen64\n    local maxlen65\n    local maxlen66\n\
    \    local maxlen67\n    local maxlen68\n    local maxlen69\n    local maxlen70\n\
    \    local maxlen71\n    local maxlen72\n    local maxlen73\n    local maxlen74\n\
    \    local maxlen75\n    local maxlen76\n    local maxlen77\n    local maxlen78\n\
    \    local maxlen79\n    local maxlen80\n\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=0\n    local kmin=0\n    local kmax2=0\n    local kmin2=0\n\
    \    local kmax3=0\n    local kmin3=0\n    local kmax4=0\n    local kmin4=0\n\
    \    local kmax5=0\n    local kmin5=0\n    local kmax6=0\n    local kmin6=0\n\
    \    local kmax7=0\n    local kmin7=0\n    local kmax8=0\n    local kmin8=0\n\
    \    local kmax9=0\n    local kmin9=0\n    local kmax10=0\n    local kmin10=0\n\
    \    local kmax11=0\n    local kmin11=0\n    local kmax12=0\n    local kmin12=0\n\
    \    local kmax13=0\n    local kmin13=0\n    local kmax14=0\n    local kmin14=0\n\
    \    local kmax15=0\n    local kmin15=0\n    local kmax16=0\n    local kmin16=0\n\
    \    local kmax17=0\n    local kmin17=0\n    local kmax18=0\n    local kmin18=0\n\
    \    local kmax19=0\n    local kmin19=0\n    local kmax20=0\n    local kmin20=0\n\
    \    local kmax21=0\n    local kmin21=0\n    local kmax22=0\n    local kmin22=0\n\
    \    local kmax23=0\n    local kmin23=0\n    local kmax24=0\n    local kmin24=0\n\
    \    local kmax25=0\n    local kmin25=0\n    local kmax26=0\n    local kmin26=0\n\
    \    local kmax27=0\n    local kmin27=0\n    local kmax28=0\n    local kmin28=0\n\
    \    local kmax29=0\n    local kmin29=0\n    local kmax30=0\n    local kmin30=0\n\
    \    local kmax31=0\n    local kmin31=0\n    local kmax32=0\n    local kmin32=0\n\
    \    local kmax33=0\n    local kmin33=0\n    local kmax34=0\n    local kmin34=0\n\
    \    local kmax35=0\n    local kmin35\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i\n  for i in\
    \ $(seq 1 $k); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2z47xtqx.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  while\
    \ [ $i -lt $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd6m_99us.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$(($sum + ${arr:$i:1}))\n        i=$(($i + 1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcfjamz2s.sh: line 19: 1 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+${arr:$i:1}))\n        i=$((i+1))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp55t1vyow.sh: line 19: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local sum1=0\n    local sum2=0\n    local sum3=0\n    local sum4=0\n\
    \    local sum5=0\n    local sum6=0\n    local sum7=0\n    local sum8=0\n    local\
    \ sum9=0\n    local sum10=0\n    local sum11=0\n    local sum12=0\n    local sum13=0\n\
    \    local sum14=0\n    local sum15=0\n    local sum16=0\n    local sum17=0\n\
    \    local sum18=0\n    local sum19=0\n    local sum20=0\n    local sum21=0\n\
    \    local sum22=0\n    local sum23=0\n    local sum24=0\n    local sum25=0\n\
    \    local sum26=0\n    local sum27=0\n    local sum28=0\n    local sum29=0\n\
    \    local sum30=0\n    local sum31=0\n    local sum32=0\n    local sum33=0\n\
    \    local sum34=0\n    local sum35=0\n    local sum36=0\n    local sum37=0\n\
    \    local sum38=0\n    local sum39=0\n    local sum40=0\n    local sum41=0\n\
    \    local sum42=0\n    local sum43=0\n    local sum44=0\n    local sum45=0\n\
    \    local sum46=0\n    local sum47=0\n    local sum48=0\n    local sum49=0\n\
    \    local sum50=0\n    local sum51=0\n    local sum52=0\n    local sum53=0\n\
    \    local sum54=0\n    local sum55=0\n    local sum56=0\n    local sum57=0\n\
    \    local sum58=0\n    local sum59=0\n    local sum60=0\n    local sum61=0\n\
    \    local sum62=0\n    local sum63=0\n    local sum64=0\n    local sum65=0\n\
    \    local sum66=0\n    local sum67=0\n    local sum68=0\n    local sum69=0\n\
    \    local sum70=0\n    local sum71=0\n    local sum72=0\n    local sum73=0\n\
    \    local sum74=0\n    local sum75=0\n    local sum76=0\n    local sum77=0\n\
    \    local sum78=0\n    local sum79=0\n    local sum80=0\n    local sum81=0\n\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum + ${arr:$i:1}))\n        i=$((i + 1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp65mvd1lc.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local k1=k\n    local k2=k\n    while [ $i -lt ${#arr} ]; do\n    \
    \    if [ $i -eq $k1 ]; then\n            k1=k1+1\n        fi\n        if [ $i\
    \ -eq $k2 ]; then\n            k2=k2+1\n        fi\n        if [ $k1 -eq $k2 ];\
    \ then\n            sum=$((sum+arr[i]))\n            i=$((i+1))\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 28: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 22: [: k: integer expression expected

    /tmp/tmpwobnvklv.sh: line 25: [: k: integer expression expected

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local element\n    local tmp\n    local count\n\n    # Loop\
    \ through each element of arr\n    for ((i=0; i<${#arr[@]}; i++)); do\n      \
    \  # Loop through each element of arr\n        for ((j=0; j<${#arr[@]}; j++));\
    \ do\n            # If the current element of arr is less than the element of\
    \ arr[j],\n            # then add it to the sum\n            if [[ ${arr[i]} <\
    \ ${arr[j]} ]]; then\n                sum=$((sum+${arr[i]}))\n            fi\n\
    \        done\n    done\n\n    # If the sum is greater than or equal to k, then\
    \ return the sum\n    if [[ ${sum} -ge ${k} ]]; then\n        echo \"${sum}\"\n\
    \    else\n        echo \"0\"\n    fi\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=0\n    local kmin=0\n    local kdiff=0\n    local ksum=0\n\
    \    local ksum2=0\n    local ksum3=0\n    local ksum4=0\n    local ksum5=0\n\
    \    local ksum6=0\n    local ksum7=0\n    local ksum8=0\n    local ksum9=0\n\
    \    local ksum10=0\n    local ksum11=0\n    local ksum12=0\n    local ksum13=0\n\
    \    local ksum14=0\n    local ksum15=0\n    local ksum16=0\n    local ksum17=0\n\
    \    local ksum18=0\n    local ksum19=0\n    local ksum20=0\n    local ksum21=0\n\
    \    local ksum22=0\n    local ksum23=0\n    local ksum24=0\n    local ksum25=0\n\
    \    local ksum26=0\n    local ksum27=0\n    local ksum28=0\n    local ksum29=0\n\
    \    local ksum30=0\n    local ksum31=0\n    local ksum32=0\n    local ksum33=0\n\
    \    local ksum34=0\n    local ksum35=0\n    local ksum36=0\n    local ksum37=0\n\
    \    local ksum38=0\n    local ksum39=0\n    local ksum40=0\n    local ksum41=0\n\
    \    local ksum42=0\n    local ksum43=0\n    local ksum44=0\n    local ksum45=0\n\
    \    local ksum46=0\n    local ksum47=0\n    local ksum48=0\n    local ksum49=0\n\
    \    local ksum50=0\n    local ksum51=0\n    local ksum52=0\n    local ksum53=0\n\
    \    local ksum54=0\n    local ksum55=0\n    local ksum56=0\n    local ksum57=0\n\
    \    local ksum58=0\n    local ksum59=0\n    local ksum60=0\n    local ksum61=0\n\
    \    local ksum62=0\n    local ksum63=0\n    local ksum64=0\n    local ksum65=0\n\
    \    local ksum66=0\n    local ksum67=0\n\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local element\n    local element2\n    local element3\n    local element4\n\
    \    local element5\n    local element6\n    local element7\n    local element8\n\
    \    local element9\n    local element10\n    local element11\n    local element12\n\
    \    local element13\n    local element14\n    local element15\n    local element16\n\
    \    local element17\n    local element18\n    local element19\n    local element20\n\
    \    local element21\n    local element22\n    local element23\n    local element24\n\
    \    local element25\n    local element26\n    local element27\n    local element28\n\
    \    local element29\n    local element30\n    local element31\n    local element32\n\
    \    local element33\n    local element34\n    local element35\n    local element36\n\
    \    local element37\n    local element38\n    local element39\n    local element40\n\
    \    local element41\n    local element42\n    local element43\n    local element44\n\
    \    local element45\n    local element46\n    local element47\n    local element48\n\
    \    local element49\n    local element50\n    local element51\n    local element52\n\
    \    local element53\n    local element54\n    local element55\n    local element56\n\
    \    local element57\n    local element58\n    local element59\n    local element60\n\
    \    local element61\n    local element62\n    local element63\n    local element64\n\
    \    local element65\n    local element66\n    local element67\n    local element68\n\
    \    local element69\n    local element70\n    local element71\n    local element72\n\
    \    local element73\n    local element74\n    local element75\n    local element76\n\
    \    local element77\n    local element78\n    local element79\n    local element80\n\
    \    local element81\n    local element82\n    local element83\n    local element84\n\
    \    local element85\n    local element86\n    local element87\n    local element88\n\
    \    local element89\n    local element90\n    local element91\n    local element92\n\
    \    local element93\n    local element94\n    local element95\n    local element96\n\
    \    local element97\n    local \n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local len\n    local max\n    local min\n    local num\n   \
    \ local digit\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$(($sum + ${arr:$i:1}))\n        i=$(($i\
    \ + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4oqm_sb8.sh: line 19: 1 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local kmax\n    local kmin\n    local kdiff\n    local ksum\n    local\
    \ kmaxdiff\n    local kmaxsum\n    local kmaxdiffsum\n    local kmaxdiffsum2\n\
    \    local kmaxdiffsum3\n    local kmaxdiffsum4\n    local kmaxdiffsum5\n    local\
    \ kmaxdiffsum6\n    local kmaxdiffsum7\n    local kmaxdiffsum8\n    local kmaxdiffsum9\n\
    \    local kmaxdiffsum10\n    local kmaxdiffsum11\n    local kmaxdiffsum12\n \
    \   local kmaxdiffsum13\n    local kmaxdiffsum14\n    local kmaxdiffsum15\n  \
    \  local kmaxdiffsum16\n    local kmaxdiffsum17\n    local kmaxdiffsum18\n   \
    \ local kmaxdiffsum19\n    local kmaxdiffsum20\n    local kmaxdiffsum21\n    local\
    \ kmaxdiffsum22\n    local kmaxdiffsum23\n    local kmaxdiffsum24\n    local kmaxdiffsum25\n\
    \    local kmaxdiffsum26\n    local kmaxdiffsum27\n    local kmaxdiffsum28\n \
    \   local kmaxdiffsum29\n    local kmaxdiffsum30\n    local kmaxdiffsum31\n  \
    \  local kmaxdiffsum32\n    local kmaxdiffsum33\n    local kmaxdiffsum34\n   \
    \ local kmaxdiffsum35\n    local kmaxdiffsum36\n    local kmaxdiffsum37\n    local\
    \ kmaxdiffsum38\n    local kmaxdiffsum39\n    local kmaxdiffsum40\n    local kmaxdiffsum41\n\
    \    local kmaxdiffsum42\n    local kmaxdiffsum43\n    local kmaxdiffsum44\n \
    \   local kmaxdiffsum45\n    local kmaxdiffsum46\n    local kmaxdiffsum47\n  \
    \  local kmaxdiffsum48\n    local kmaxdiffsum49\n    local kmaxdiffsum50\n   \
    \ local kmaxdiffsum51\n    local kmaxdiffsum52\n    local kmaxdiffsum53\n    local\
    \ kmaxdiffsum54\n    local kmaxdiffsum55\n    local kmaxdiffsum56\n    local kmaxdiffsum57\n\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local kmax\n    local kmin\n    local kmaxlen\n    local kminlen\n  \
    \  local len\n    local len2\n    local len3\n    local len4\n    local len5\n\
    \    local len6\n    local len7\n    local len8\n    local len9\n    local len10\n\
    \    local len11\n    local len12\n    local len13\n    local len14\n    local\
    \ len15\n    local len16\n    local len17\n    local len18\n    local len19\n\
    \    local len20\n    local len21\n    local len22\n    local len23\n    local\
    \ len24\n    local len25\n    local len26\n    local len27\n    local len28\n\
    \    local len29\n    local len30\n    local len31\n    local len32\n    local\
    \ len33\n    local len34\n    local len35\n    local len36\n    local len37\n\
    \    local len38\n    local len39\n    local len40\n    local len41\n    local\
    \ len42\n    local len43\n    local len44\n    local len45\n    local len46\n\
    \    local len47\n    local len48\n    local len49\n    local len50\n    local\
    \ len51\n    local len52\n    local len53\n    local len54\n    local len55\n\
    \    local len56\n    local len57\n    local len58\n    local len59\n    local\
    \ len60\n    local len61\n    local len62\n    local len63\n    local len64\n\
    \    local len65\n    local len66\n    local len67\n    local len68\n    local\
    \ len69\n    local len70\n    local len71\n    local len72\n    local len73\n\
    \    local len74\n    local len75\n    local len76\n    local len77\n    local\
    \ len78\n    local len79\n    local len80\n    local len81\n    local len82\n\
    \    local len83\n    local len84\n    local len85\n    local len86\n    local\
    \ len87\n    local len88\n    local len89\n    local len90\n    local len91\n\
    \    local len92\n    local len93\n    \n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum + ${arr:$i:1}))\n        i=$((i + 1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp65mvd1lc.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local len\n    len=${#arr[@]}\n    for ((i=0; i<k; i++)); do\n      \
    \  sum=$((sum+${arr[i]}))\n    done\n    for ((j=0; j<len; j++)); do\n       \
    \ if ((${arr[j]} > 9)); then\n            sum=$((sum+${arr[j]}))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu3txrdzu.sh: line 22: sum+1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum + ${arr:$i:1}))\n        i=$((i + 1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp65mvd1lc.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local element\n    local tmp\n    local count\n    local count2\n   \
    \ local count3\n    local count4\n    local count5\n    local count6\n    local\
    \ count7\n    local count8\n    local count9\n    local count10\n    local count11\n\
    \    local count12\n    local count13\n    local count14\n    local count15\n\
    \    local count16\n    local count17\n    local count18\n    local count19\n\
    \    local count20\n    local count21\n    local count22\n    local count23\n\
    \    local count24\n    local count25\n    local count26\n    local count27\n\
    \    local count28\n    local count29\n    local count30\n    local count31\n\
    \    local count32\n    local count33\n    local count34\n    local count35\n\
    \    local count36\n    local count37\n    local count38\n    local count39\n\
    \    local count40\n    local count41\n    local count42\n    local count43\n\
    \    local count44\n    local count45\n    local count46\n    local count47\n\
    \    local count48\n    local count49\n    local count50\n    local count51\n\
    \    local count52\n    local count53\n    local count54\n    local count55\n\
    \    local count56\n    local count57\n    local count58\n    local count59\n\
    \    local count60\n    local count61\n    local count62\n    local count63\n\
    \    local count64\n    local count65\n    local count66\n    local count67\n\
    \    local count68\n    local count69\n    local count70\n    local count71\n\
    \    local count72\n    local count73\n    local count74\n    local count75\n\
    \    local count76\n    local count77\n    local count78\n    local count79\n\
    \    local count80\n    local count81\n    local count82\n    local count83\n\
    \    local count84\n    local count85\n    local count86\n    local count87\n\
    \    local count88\n    local count89\n    local count90\n    local count91\n\
    \    local count92\n    local count93\n    local count94\n    local count95\n\
    \    local count96\n\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6mvtj89f.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    local j=0\n    while [ $i -lt $k ]; do\n        if [[ ${arr:$i:1} == [0-9]\
    \ ]]; then\n            sum=$((sum+${arr:$i:1}))\n            i=$((i+1))\n   \
    \     else\n            i=$((i+1))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5yave21.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum\n  local i\n  sum=0\n \
    \ for i in \"${arr[@]:0:k}\"; do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8jc1m3u7.sh: line 20: 1 -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local k1=k\n    local k2=k\n    local k3=k\n    local k4=k\n    local\
    \ k5=k\n    local k6=k\n    local k7=k\n    local k8=k\n    local k9=k\n    local\
    \ k10=k\n    local k11=k\n    local k12=k\n    local k13=k\n    local k14=k\n\
    \    local k15=k\n    local k16=k\n    local k17=k\n    local k18=k\n    local\
    \ k19=k\n    local k20=k\n    local k21=k\n    local k22=k\n    local k23=k\n\
    \    local k24=k\n    local k25=k\n    local k26=k\n    local k27=k\n    local\
    \ k28=k\n    local k29=k\n    local k30=k\n    local k31=k\n    local k32=k\n\
    \    local k33=k\n    local k34=k\n    local k35=k\n    local k36=k\n    local\
    \ k37=k\n    local k38=k\n    local k39=k\n    local k40=k\n    local k41=k\n\
    \    local k42=k\n    local k43=k\n    local k44=k\n    local k45=k\n    local\
    \ k46=k\n    local k47=k\n    local k48=k\n    local k49=k\n    local k50=k\n\
    \    local k51=k\n    local k52=k\n    local k53=k\n    local k54=k\n    local\
    \ k55=k\n    local k56=k\n    local k57=k\n    local k58=k\n    local k59=k\n\
    \    local k60=k\n    local k61=k\n    local k62=k\n    local k63=k\n    local\
    \ k64=k\n    local k65=k\n    local k66=k\n    local k67=k\n    local k68=k\n\
    \    local k69=k\n    local k70=k\n\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5yave21.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum + ${arr:$i:1}))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphb_navy3.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+${arr:$i:1}))\n        i=$((i+1))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp55t1vyow.sh: line 19: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  sum=0\n    for ((i=0; i<k; i++)); do\n        sum=$((sum+arr[i]))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprpso924d.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local element\n    while [ $i -lt $k ]; do\n        element=$(echo\
    \ $arr | cut -d \" \" -f $i)\n        sum=$(($sum + $element))\n        i=$(($i\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmp_7djhp7a.sh: line 22: 0 + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local element\n    while [ $i -lt $k ]; do\n        element=$arr[i]\n\
    \        (( sum += element ))\n        (( i++ ))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpliebjh1s.sh: line 22: ((: 1 -2 -3 41 57 76 87 88 99[i]: syntax
    error in expression (error token is "41 57 76 87 88 99[i]")

    /tmp/tmpliebjh1s.sh: line 22: ((: 1 -2 -3 41 57 76 87 88 99[i]: syntax error in
    expression (error token is "41 57 76 87 88 99[i]")

    /tmp/tmpliebjh1s.sh: line 22: ((: 1 -2 -3 41 57 76 87 88 99[i]: syntax error in
    expression (error token is "41 57 76 87 88 99[i]")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 1 $k); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqzv8jf3w.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local k1=${#arr}\n    local k2=${#arr}\n    local k3=${#arr}\n    local\
    \ k4=${#arr}\n    local k5=${#arr}\n    local k6=${#arr}\n    local k7=${#arr}\n\
    \    local k8=${#arr}\n    local k9=${#arr}\n    local k10=${#arr}\n    local\
    \ k11=${#arr}\n    local k12=${#arr}\n    local k13=${#arr}\n    local k14=${#arr}\n\
    \    local k15=${#arr}\n    local k16=${#arr}\n    local k17=${#arr}\n    local\
    \ k18=${#arr}\n    local k19=${#arr}\n    local k20=${#arr}\n    local k21=${#arr}\n\
    \    local k22=${#arr}\n    local k23=${#arr}\n    local k24=${#arr}\n    local\
    \ k25=${#arr}\n    local k26=${#arr}\n    local k27=${#arr}\n    local k28=${#arr}\n\
    \    local k29=${#arr}\n    local k30=${#arr}\n    local k31=${#arr}\n    local\
    \ k32=${#arr}\n    local k33=${#arr}\n    local k34=${#arr}\n    local k35=${#arr}\n\
    \    local k36=${#arr}\n    local k37=${#arr}\n    local k38=${#arr}\n    local\
    \ k39=${#arr}\n    local k40=${#arr}\n    local k41=${#arr}\n    local k42=${#arr}\n\
    \    local k43=${#arr}\n    local k44=${#arr}\n    local k45=${#arr}\n    local\
    \ k46=${#arr}\n    local k47=${#arr}\n    local k48=${#arr}\n    local k49=${#arr}\n\
    \    local k50=${#arr}\n    local k51=${#arr}\n    local k52=${#arr}\n    local\
    \ k53=${#arr}\n    local k54=${#arr}\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local klen=$((k-1))\n    local len=${#arr[@]}\n    local max=0\n  \
    \  local maxlen=0\n    local maxval=0\n    local maxvallen=0\n    local maxvalval=0\n\
    \    local maxvalvallen=0\n    local maxvalvalval=0\n    local maxvalvalvallen=0\n\
    \    local maxvalvalvalval=0\n    local maxvalvalvalvallen=0\n    local maxvalvalvalvalval=0\n\
    \    local maxvalvalvalvalvallen=0\n    local maxvalvalvalvalval=0\n    local\
    \ maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n\
    \    local maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n    local\
    \ maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n\
    \    local maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n    local\
    \ maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n\
    \    local maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n    local\
    \ maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n\
    \    local maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n    local\
    \ maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n\
    \    local maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n    local\
    \ maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n\
    \    local maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n    local\
    \ maxvalvalvalvalvallen=0\n    local maxvalvalvalvalvalval=0\n    local maxvalvalvalvalvallen=0\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum + ${arr:$i:1}))\n        i=$((i + 1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp65mvd1lc.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1)) )\n  do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6t6fa9gs.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local k_cnt\n    local k_cnt2\n    local k_cnt3\n    local k_cnt4\n\
    \    local k_cnt5\n    local k_cnt6\n    local k_cnt7\n    local k_cnt8\n    local\
    \ k_cnt9\n    local k_cnt10\n    local k_cnt11\n    local k_cnt12\n    local k_cnt13\n\
    \    local k_cnt14\n    local k_cnt15\n    local k_cnt16\n    local k_cnt17\n\
    \    local k_cnt18\n    local k_cnt19\n    local k_cnt20\n    local k_cnt21\n\
    \    local k_cnt22\n    local k_cnt23\n    local k_cnt24\n    local k_cnt25\n\
    \    local k_cnt26\n    local k_cnt27\n    local k_cnt28\n    local k_cnt29\n\
    \    local k_cnt30\n    local k_cnt31\n    local k_cnt32\n    local k_cnt33\n\
    \    local k_cnt34\n    local k_cnt35\n    local k_cnt36\n    local k_cnt37\n\
    \    local k_cnt38\n    local k_cnt39\n    local k_cnt40\n    local k_cnt41\n\
    \    local k_cnt42\n    local k_cnt43\n    local k_cnt44\n    local k_cnt45\n\
    \    local k_cnt46\n    local k_cnt47\n    local k_cnt48\n    local k_cnt49\n\
    \    local k_cnt50\n    local k_cnt51\n    local k_cnt52\n    local k_cnt53\n\
    \    local k_cnt54\n    local k_cnt55\n    local k_cnt56\n    local k_cnt57\n\
    \    local k_cnt58\n    local k_cnt59\n    local k_cnt60\n    local k_cnt61\n\
    \    local k_cnt62\n    local k_cnt63\n    local k_cnt64\n    local k_cnt65\n\
    \    local k_cnt66\n    local k_cnt67\n    local k_cnt68\n    local k_cnt69\n\
    \    local k_cnt\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local len\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n    local tmp96\n    local tmp97\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local tmp\n    local len\n    local count\n    local max\n    local min\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local \n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 1 $k); do\n    sum=$((sum+${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1qw2blke.sh: line 19: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+${arr:$i:1}))\n        i=$((i+1))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp55t1vyow.sh: line 19: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while (( i < k )); do\n        sum=$(( sum + arr[i] ))\n        i=$(( i +\
    \ 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcdzw_e0d.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=0\n    local kmin=0\n    local kmaxlen=0\n    local kminlen=0\n\
    \    local kmaxlen2=0\n    local kminlen2=0\n    local kmaxlen3=0\n    local kminlen3=0\n\
    \    local kmaxlen4=0\n    local kminlen4=0\n    local kmaxlen5=0\n    local kminlen5=0\n\
    \    local kmaxlen6=0\n    local kminlen6=0\n    local kmaxlen7=0\n    local kminlen7=0\n\
    \    local kmaxlen8=0\n    local kminlen8=0\n    local kmaxlen9=0\n    local kminlen9=0\n\
    \    local kmaxlen10=0\n    local kminlen10=0\n    local kmaxlen11=0\n    local\
    \ kminlen11=0\n    local kmaxlen12=0\n    local kminlen12=0\n    local kmaxlen13=0\n\
    \    local kminlen13=0\n    local kmaxlen14=0\n    local kminlen14=0\n    local\
    \ kmaxlen15=0\n    local kminlen15=0\n    local kmaxlen16=0\n    local kminlen16=0\n\
    \    local kmaxlen17=0\n    local kminlen17=0\n    local kmaxlen18=0\n    local\
    \ kminlen18=0\n    local kmaxlen19=0\n    local kminlen19=0\n    local kmaxlen20=0\n\
    \    local kminlen20=0\n    local kmaxlen21=0\n    local kminlen21=0\n    local\
    \ kmaxlen22=0\n    local kminlen22=0\n    local kmaxlen23=0\n    local kminlen23=0\n\
    \    local kmaxlen24=0\n    local kminlen24=0\n    local kmaxlen25=0\n    local\
    \ kminlen25=0\n    local kmaxlen26=0\n    local kminlen26=0\n    local kmaxlen27=0\n\
    \    local kminlen27=0\n    local kmaxlen28=0\n    local kminlen28=0\n    local\
    \ kmaxlen29=0\n    local kminlen29=0\n    local kmaxlen30=0\n    local kmin\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  while\
    \ [ \"$i\" -lt \"$k\" ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwolavjj2.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local kmax\n    local kmin\n    local kdiff\n    local ksum\n    local\
    \ kmaxdiff\n    local kmaxsum\n    local kmaxdiffsum\n    local kmindiff\n   \
    \ local kminsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n\
    \    local kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local\
    \ kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n\
    \    local kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n    local\
    \ kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n\
    \    local kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local\
    \ kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n\
    \    local kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n    local\
    \ kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n\
    \    local kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local\
    \ kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n\
    \    local kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n    local\
    \ kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n\
    \    local kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local\
    \ kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n\
    \    local kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n    local\
    \ kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local kmindiffsum\n\
    \    local kmaxdiffsum\n    local kmindiffsum\n    local kmaxdiffsum\n    local\
    \ \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1)) ); do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa31tr4ll.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum + ${arr:$i:1}))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptbkndsz0.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n    local tmp96\n    local tmp97\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local element\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1))); do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvea7nz2b.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum + ${arr:$i:1}))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptbkndsz0.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+${arr[i]}))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5h4veqyb.sh: line 19: sum+1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1))); do\n    sum=$((sum+${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgar3fg7d.sh: line 19: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$(($sum + ${arr:$i:1}))\n        i=$(($i\
    \ + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4oqm_sb8.sh: line 19: 1 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local len\n    local max\n    local min\n    local sum1\n    local sum2\n\
    \    local sum3\n    local sum4\n    local sum5\n    local sum6\n    local sum7\n\
    \    local sum8\n    local sum9\n    local sum10\n    local sum11\n    local sum12\n\
    \    local sum13\n    local sum14\n    local sum15\n    local sum16\n    local\
    \ sum17\n    local sum18\n    local sum19\n    local sum20\n    local sum21\n\
    \    local sum22\n    local sum23\n    local sum24\n    local sum25\n    local\
    \ sum26\n    local sum27\n    local sum28\n    local sum29\n    local sum30\n\
    \    local sum31\n    local sum32\n    local sum33\n    local sum34\n    local\
    \ sum35\n    local sum36\n    local sum37\n    local sum38\n    local sum39\n\
    \    local sum40\n    local sum41\n    local sum42\n    local sum43\n    local\
    \ sum44\n    local sum45\n    local sum46\n    local sum47\n    local sum48\n\
    \    local sum49\n    local sum50\n    local sum51\n    local sum52\n    local\
    \ sum53\n    local sum54\n    local sum55\n    local sum56\n    local sum57\n\
    \    local sum58\n    local sum59\n    local sum60\n    local sum61\n    local\
    \ sum62\n    local sum63\n    local sum64\n    local sum65\n    local sum66\n\
    \    local sum67\n    local sum68\n    local sum69\n    local sum70\n    local\
    \ sum71\n    local sum72\n    local sum73\n    local sum74\n    local sum75\n\
    \    local sum76\n    local sum77\n    local sum78\n    local sum79\n    local\
    \ sum80\n    local sum81\n    local sum82\n    local sum83\n    local sum84\n\
    \    local sum85\n    local sum86\n    local sum87\n    local sum88\n    local\
    \ sum89\n    local sum90\n    local sum91\n    local sum92\n    local sum93\n\
    \    local sum94\n    local sum95\n\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local sum2=0\n    local sum3=0\n    local sum4=0\n    local sum5=0\n\
    \    local sum6=0\n    local sum7=0\n    local sum8=0\n    local sum9=0\n    local\
    \ sum10=0\n    local sum11=0\n    local sum12=0\n    local sum13=0\n    local\
    \ sum14=0\n    local sum15=0\n    local sum16=0\n    local sum17=0\n    local\
    \ sum18=0\n    local sum19=0\n    local sum20=0\n    local sum21=0\n    local\
    \ sum22=0\n    local sum23=0\n    local sum24=0\n    local sum25=0\n    local\
    \ sum26=0\n    local sum27=0\n    local sum28=0\n    local sum29=0\n    local\
    \ sum30=0\n    local sum31=0\n    local sum32=0\n    local sum33=0\n    local\
    \ sum34=0\n    local sum35=0\n    local sum36=0\n    local sum37=0\n    local\
    \ sum38=0\n    local sum39=0\n    local sum40=0\n    local sum41=0\n    local\
    \ sum42=0\n    local sum43=0\n    local sum44=0\n    local sum45=0\n    local\
    \ sum46=0\n    local sum47=0\n    local sum48=0\n    local sum49=0\n    local\
    \ sum50=0\n    local sum51=0\n    local sum52=0\n    local sum53=0\n    local\
    \ sum54=0\n    local sum55=0\n    local sum56=0\n    local sum57=0\n    local\
    \ sum58=0\n    local sum59=0\n    local sum60=0\n    local sum61=0\n    local\
    \ sum62=0\n    local sum63=0\n    local sum64=0\n    local sum65=0\n    local\
    \ sum66=0\n    local sum67=0\n    local sum68=0\n    local sum69=0\n    local\
    \ sum70=0\n    local sum71=0\n    local sum72=0\n    local sum73=0\n    local\
    \ sum74=0\n    local sum75=0\n    local sum76=0\n    local sum77=0\n    local\
    \ sum78=0\n    local sum79=0\n    local sum80=0\n    local sum81=0\n    local\
    \ sum82=0\n\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local element\n    while [ $i -lt $k ]; do\n        element=${arr:$i:1}\n\
    \        if [ -z \"$element\" ]; then\n            (( i++ ))\n            continue\n\
    \        fi\n        (( j++ ))\n        if [ $j -eq 2 ]; then\n            sum=$((\
    \ $sum + $element ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=45 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=39 encoding='utf-8'>
  timestamp: 1660054083
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum + ${arr:$i:1}))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphb_navy3.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=$1\n  k=$2\n  local sum\n  sum=0\n  for i in $(seq 0\
    \ $((k-1)) )\n  do\n    sum=$((sum+${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppjqyiao7.sh: line 21: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1))); do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvea7nz2b.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local sum2=0\n    local sum3=0\n    local sum4=0\n    local sum5=0\n\
    \    local sum6=0\n    local sum7=0\n    local sum8=0\n    local sum9=0\n    local\
    \ sum10=0\n    local sum11=0\n    local sum12=0\n    local sum13=0\n    local\
    \ sum14=0\n    local sum15=0\n    local sum16=0\n    local sum17=0\n    local\
    \ sum18=0\n    local sum19=0\n    local sum20=0\n    local sum21=0\n    local\
    \ sum22=0\n    local sum23=0\n    local sum24=0\n    local sum25=0\n    local\
    \ sum26=0\n    local sum27=0\n    local sum28=0\n    local sum29=0\n    local\
    \ sum30=0\n    local sum31=0\n    local sum32=0\n    local sum33=0\n    local\
    \ sum34=0\n    local sum35=0\n    local sum36=0\n    local sum37=0\n    local\
    \ sum38=0\n    local sum39=0\n    local sum40=0\n    local sum41=0\n    local\
    \ sum42=0\n    local sum43=0\n    local sum44=0\n    local sum45=0\n    local\
    \ sum46=0\n    local sum47=0\n    local sum48=0\n    local sum49=0\n    local\
    \ sum50=0\n    local sum51=0\n    local sum52=0\n    local sum53=0\n    local\
    \ sum54=0\n    local sum55=0\n    local sum56=0\n    local sum57=0\n    local\
    \ sum58=0\n    local sum59=0\n    local sum60=0\n    local sum61=0\n    local\
    \ sum62=0\n    local sum63=0\n    local sum64=0\n    local sum65=0\n    local\
    \ sum66=0\n    local sum67=0\n    local sum68=0\n    local sum69=0\n    local\
    \ sum70=0\n    local sum71=0\n    local sum72=0\n    local sum73=0\n    local\
    \ sum74=0\n    local sum75=0\n    local sum76=0\n    local sum77=0\n    local\
    \ sum78=0\n    local sum79=0\n    local sum80=0\n    local sum81=0\n    local\
    \ sum82=0\n\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local klen=$((k-1))\n    local ksum=0\n    local kdigits=0\n    local\
    \ kdigits_sum=0\n    local kdigits_digits=0\n    local kdigits_digits_sum=0\n\
    \    local kdigits_digits_digits=0\n    local kdigits_digits_digits_sum=0\n  \
    \  local kdigits_digits_digits_digits=0\n    local kdigits_digits_digits_digits_sum=0\n\
    \    local kdigits_digits_digits_digits_digits=0\n    local kdigits_digits_digits_digits_digits_sum=0\n\
    \    local kdigits_digits_digits_digits_digits_digits=0\n    local kdigits_digits_digits_digits_digits_digits_sum=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits=0\n    local kdigits_digits_digits_digits_digits_digits_digits_sum=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits_digits=0\n    local\
    \ kdigits_digits_digits_digits_digits_digits_digits_digits_sum=0\n    local kdigits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits_digits_digits_sum=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits_digits_digits_digits_sum=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_sum=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_sum=0\n\
    \    local kdigits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local element\n\n    while [ $i -lt $k ]; do\n        element=${arr:$i:1}\n\
    \        if [ $element == $element ]; then\n            sum=$((sum+element))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwwnj55yq.sh: line 24: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local tmp\n    local len\n    local max\n    local min\n    local tmp2\n\
    \    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    \n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$(($sum + ${arr:$i:1}))\n        i=$(($i + 1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcfjamz2s.sh: line 19: 1 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1))); do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvea7nz2b.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpafdzircq.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=0\n    local kmin=0\n    local max=0\n    local min=0\n\
    \    local max2=0\n    local min2=0\n    local max3=0\n    local min3=0\n    local\
    \ max4=0\n    local min4=0\n    local max5=0\n    local min5=0\n    local max6=0\n\
    \    local min6=0\n    local max7=0\n    local min7=0\n    local max8=0\n    local\
    \ min8=0\n    local max9=0\n    local min9=0\n    local max10=0\n    local min10=0\n\
    \    local max11=0\n    local min11=0\n    local max12=0\n    local min12=0\n\
    \    local max13=0\n    local min13=0\n    local max14=0\n    local min14=0\n\
    \    local max15=0\n    local min15=0\n    local max16=0\n    local min16=0\n\
    \    local max17=0\n    local min17=0\n    local max18=0\n    local min18=0\n\
    \    local max19=0\n    local min19=0\n    local max20=0\n    local min20=0\n\
    \    local max21=0\n    local min21=0\n    local max22=0\n    local min22=0\n\
    \    local max23=0\n    local min23=0\n    local max24=0\n    local min24=0\n\
    \    local max25=0\n    local min25=0\n    local max26=0\n    local min26=0\n\
    \    local max27=0\n    local min27=0\n    local max28=0\n    local min28=0\n\
    \    local max29=0\n    local min29=0\n    local max30=0\n    local min30=0\n\
    \    local max31=0\n    local min31=0\n    local max32=0\n    local min32=0\n\
    \    local max33=0\n    local min33=0\n    local max34=0\n    local min34=0\n\
    \    local max35=0\n    local min35=0\n    local max36=0\n    local min36=0\n\
    \    local max37=0\n    local min37=0\n    local max38=0\n    local min38=0\n\
    \    local max39=0\n    local min39=0\n    local max40=0\n    local \n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5yave21.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=0\n    local kmin=0\n    local kmax2=0\n    local kmin2=0\n\
    \    local kmax3=0\n    local kmin3=0\n    local kmax4=0\n    local kmin4=0\n\
    \    local kmax5=0\n    local kmin5=0\n    local kmax6=0\n    local kmin6=0\n\
    \    local kmax7=0\n    local kmin7=0\n    local kmax8=0\n    local kmin8=0\n\
    \    local kmax9=0\n    local kmin9=0\n    local kmax10=0\n    local kmin10=0\n\
    \    local kmax11=0\n    local kmin11=0\n    local kmax12=0\n    local kmin12=0\n\
    \    local kmax13=0\n    local kmin13=0\n    local kmax14=0\n    local kmin14=0\n\
    \    local kmax15=0\n    local kmin15=0\n    local kmax16=0\n    local kmin16=0\n\
    \    local kmax17=0\n    local kmin17=0\n    local kmax18=0\n    local kmin18=0\n\
    \    local kmax19=0\n    local kmin19=0\n    local kmax20=0\n    local kmin20=0\n\
    \    local kmax21=0\n    local kmin21=0\n    local kmax22=0\n    local kmin22=0\n\
    \    local kmax23=0\n    local kmin23=0\n    local kmax24=0\n    local kmin24=0\n\
    \    local kmax25=0\n    local kmin25=0\n    local kmax26=0\n    local kmin26=0\n\
    \    local kmax27=0\n    local kmin27=0\n    local kmax28=0\n    local kmin28=0\n\
    \    local kmax29=0\n    local kmin29=0\n    local kmax30=0\n    local kmin30=0\n\
    \    local kmax31=0\n    local kmin31=0\n    local kmax32=0\n    local kmin32=0\n\
    \    local kmax33=0\n    local kmin33=0\n    local kmax34=0\n    local kmin34=0\n\
    \    local kmax35=0\n    local kmin35\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum\n  local i\n  local j\n\
    \  local element\n  sum=0\n  for i in $(seq 0 $((k-1))); do\n    element=$(echo\
    \ $arr | cut -d \" \" -f $i)\n    sum=$((sum+element))\n  done\n  j=$((k-1))\n\
    \  while [ $j -gt 0 ]; do\n    element=$(echo $arr | cut -d \" \" -f $j)\n   \
    \ sum=$((sum+element))\n    j=$((j-1))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 1 $k); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqzv8jf3w.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1)) )\n  do\n    sum=$(( sum + arr[i] ))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi5xnfj37.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum + ${arr:$i:1}))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphb_navy3.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  while\
    \ [ \"$i\" -lt \"$k\" ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwolavjj2.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5yave21.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local element\n    local tmp\n\n    while [ $i -lt $k ]; do\n     \
    \   element=$(echo $arr | cut -d \" \" -f $i)\n        tmp=$(echo $element | cut\
    \ -d \"-\" -f 1)\n        sum=$((sum+tmp))\n        i=$((i+1))\n    done\n   \
    \ echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local kmax\n    local kmin\n    local len\n    local sum1\n\
    \    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local sum6\n\
    \    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local sum11\n\
    \    local sum12\n    local sum13\n    local sum14\n    local sum15\n    local\
    \ sum16\n    local sum17\n    local sum18\n    local sum19\n    local sum20\n\
    \    local sum21\n    local sum22\n    local sum23\n    local sum24\n    local\
    \ sum25\n    local sum26\n    local sum27\n    local sum28\n    local sum29\n\
    \    local sum30\n    local sum31\n    local sum32\n    local sum33\n    local\
    \ sum34\n    local sum35\n    local sum36\n    local sum37\n    local sum38\n\
    \    local sum39\n    local sum40\n    local sum41\n    local sum42\n    local\
    \ sum43\n    local sum44\n    local sum45\n    local sum46\n    local sum47\n\
    \    local sum48\n    local sum49\n    local sum50\n    local sum51\n    local\
    \ sum52\n    local sum53\n    local sum54\n    local sum55\n    local sum56\n\
    \    local sum57\n    local sum58\n    local sum59\n    local sum60\n    local\
    \ sum61\n    local sum62\n    local sum63\n    local sum64\n    local sum65\n\
    \    local sum66\n    local sum67\n    local sum68\n    local sum69\n    local\
    \ sum70\n    local sum71\n    local sum72\n    local sum73\n    local sum74\n\
    \    local sum75\n    local sum76\n    local sum77\n    local sum78\n    local\
    \ sum79\n    local sum80\n    local sum81\n    local sum82\n    local sum83\n\
    \    local sum84\n    local sum85\n    local sum86\n    local sum87\n    local\
    \ sum88\n    local sum89\n    local sum90\n    local sum91\n    local sum92\n\
    \    local sum93\n    local sum94\n    local sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    local j=0\n    while (( i < k )); do\n        (( sum += arr[i] ))\n     \
    \   (( i++ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw3mepe9e.sh: line 20: ((: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local element\n    local count\n    local length\n    local\
    \ max\n    local min\n    local sum1\n    local sum2\n    local sum3\n    local\
    \ sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n    local\
    \ sum9\n    local sum10\n    local sum11\n    local sum12\n    local sum13\n \
    \   local sum14\n    local sum15\n    local sum16\n    local sum17\n    local\
    \ sum18\n    local sum19\n    local sum20\n    local sum21\n    local sum22\n\
    \    local sum23\n    local sum24\n    local sum25\n    local sum26\n    local\
    \ sum27\n    local sum28\n    local sum29\n    local sum30\n    local sum31\n\
    \    local sum32\n    local sum33\n    local sum34\n    local sum35\n    local\
    \ sum36\n    local sum37\n    local sum38\n    local sum39\n    local sum40\n\
    \    local sum41\n    local sum42\n    local sum43\n    local sum44\n    local\
    \ sum45\n    local sum46\n    local sum47\n    local sum48\n    local sum49\n\
    \    local sum50\n    local sum51\n    local sum52\n    local sum53\n    local\
    \ sum54\n    local sum55\n    local sum56\n    local sum57\n    local sum58\n\
    \    local sum59\n    local sum60\n    local sum61\n    local sum62\n    local\
    \ sum63\n    local sum64\n    local sum65\n    local sum66\n    local sum67\n\
    \    local sum68\n    local sum69\n    local sum70\n    local sum71\n    local\
    \ sum72\n    local sum73\n    local sum74\n    local sum75\n    local sum76\n\
    \    local sum77\n    local sum78\n    local sum79\n    local sum80\n    local\
    \ sum81\n    local sum82\n    local sum83\n    local sum84\n    local sum85\n\
    \    local sum86\n    local sum87\n    local sum88\n    local sum89\n    local\
    \ sum90\n    local sum91\n    local sum92\n    local sum93\n    local \n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5yave21.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum + ${arr:$i:1}))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphb_navy3.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1))); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbuecvx_0.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  sum=0\n    for i in $(seq 1 $k); do\n        sum=$((sum + ${arr:$i:1}))\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprx7hysaa.sh: line 20: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local ksum=0\n    local kdigit=0\n    local kdigit2=0\n    local kdigit3=0\n\
    \    local kdigit4=0\n    local kdigit5=0\n    local kdigit6=0\n    local kdigit7=0\n\
    \    local kdigit8=0\n    local kdigit9=0\n    local kdigit10=0\n    local kdigit11=0\n\
    \    local kdigit12=0\n    local kdigit13=0\n    local kdigit14=0\n    local kdigit15=0\n\
    \    local kdigit16=0\n    local kdigit17=0\n    local kdigit18=0\n    local kdigit19=0\n\
    \    local kdigit20=0\n    local kdigit21=0\n    local kdigit22=0\n    local kdigit23=0\n\
    \    local kdigit24=0\n    local kdigit25=0\n    local kdigit26=0\n    local kdigit27=0\n\
    \    local kdigit28=0\n    local kdigit29=0\n    local kdigit30=0\n    local kdigit31=0\n\
    \    local kdigit32=0\n    local kdigit33=0\n    local kdigit34=0\n    local kdigit35=0\n\
    \    local kdigit36=0\n    local kdigit37=0\n    local kdigit38=0\n    local kdigit39=0\n\
    \    local kdigit40=0\n    local kdigit41=0\n    local kdigit42=0\n    local kdigit43=0\n\
    \    local kdigit44=0\n    local kdigit45=0\n    local kdigit46=0\n    local kdigit47=0\n\
    \    local kdigit48=0\n    local kdigit49=0\n    local kdigit50=0\n    local kdigit51=0\n\
    \    local kdigit52=0\n    local kdigit53=0\n    local kdigit54=0\n    local kdigit55=0\n\
    \    local kdigit56=0\n    local kdigit57=0\n    local kdigit58=0\n    local kdigit59=0\n\
    \    local kdigit60=0\n    local kdigit61=0\n    local kdigit62=0\n    local kdigit63=0\n\
    \    local kdigit64=0\n    local kdigit65=0\n    local kdigit66=0\n    local kdigit67=0\n\
    \    local kdigit68=0\n    local kdigit69\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=$((k-1))\n    local kmin=$((k+1))\n    while [ $i -lt ${#arr[@]}\
    \ ]; do\n        if [ $i -ge $kmin ] && [ $i -le $kmax ]; then\n            sum=$((sum+${arr[$i]}))\n\
    \            i=$((i+1))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=55 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=49 encoding='utf-8'>
  timestamp: 1660054083
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  local j\n    local element\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  sum=0\n    for ((i=0; i<k; i++)); do\n        sum=$((sum+arr[i]))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7tv_idab.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=0\n    local kmin=0\n    local kdiff=0\n    local ksum=0\n\
    \    local ksum2=0\n    local ksum3=0\n    local ksum4=0\n    local ksum5=0\n\
    \    local ksum6=0\n    local ksum7=0\n    local ksum8=0\n    local ksum9=0\n\
    \    local ksum10=0\n    local ksum11=0\n    local ksum12=0\n    local ksum13=0\n\
    \    local ksum14=0\n    local ksum15=0\n    local ksum16=0\n    local ksum17=0\n\
    \    local ksum18=0\n    local ksum19=0\n    local ksum20=0\n    local ksum21=0\n\
    \    local ksum22=0\n    local ksum23=0\n    local ksum24=0\n    local ksum25=0\n\
    \    local ksum26=0\n    local ksum27=0\n    local ksum28=0\n    local ksum29=0\n\
    \    local ksum30=0\n    local ksum31=0\n    local ksum32=0\n    local ksum33=0\n\
    \    local ksum34=0\n    local ksum35=0\n    local ksum36=0\n    local ksum37=0\n\
    \    local ksum38=0\n    local ksum39=0\n    local ksum40=0\n    local ksum41=0\n\
    \    local ksum42=0\n    local ksum43=0\n    local ksum44=0\n    local ksum45=0\n\
    \    local ksum46=0\n    local ksum47=0\n    local ksum48=0\n    local ksum49=0\n\
    \    local ksum50=0\n    local ksum51=0\n    local ksum52=0\n    local ksum53=0\n\
    \    local ksum54=0\n    local ksum55=0\n    local ksum56=0\n    local ksum57=0\n\
    \    local ksum58=0\n    local ksum59=0\n    local ksum60=0\n    local ksum61=0\n\
    \    local ksum62=0\n    local ksum63=0\n    local ksum64=0\n    local ksum65=0\n\
    \    local ksum66=0\n    local ksum67=0\n\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1)) )\n  do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6t6fa9gs.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 1 $k); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqzv8jf3w.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=$1\n  k=$2\n  local sum\n  sum=0\n  for i in $(seq 0\
    \ $((k-1))); do\n    sum=$((sum+${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpphii0qot.sh: line 20: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    local j=0\n    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n   \
    \     i=$((i+1))\n    done\n    sum=$((sum+arr[j]))\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkl3hb_jp.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local sum1=0\n    local sum2=0\n    while [ $i -lt $k ]; do\n     \
    \   sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n    i=$((k-1))\n    while\
    \ [ $i -ge 0 ]; do\n        sum1=$((sum1+arr[i]))\n        sum2=$((sum2+arr[i]))\n\
    \        i=$((i-1))\n    done\n    echo $((sum+sum1+sum2))\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp67022j1p.sh: line 22: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  local j\n    local element\n    local tmp\n\n    # Initialize sum\n    sum=0\n\
    \n    # Iterate through all elements in the array\n    for ((i=0; i<k; i++));\
    \ do\n        element=$(echo $arr | cut -d \" \" -f $i)\n        # Iterate through\
    \ all elements in the array\n        for ((j=i+1; j<k; j++)); do\n           \
    \ tmp=$(echo $arr | cut -d \" \" -f $j)\n            # If the current element\
    \ and the next element are both digits, add them\n            if [[ $element ==\
    \ *[0-9]* && $tmp == *[0-9]* ]]; then\n                sum=$((sum + $element))\n\
    \            fi\n        done\n    done\n\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    local j=0\n    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n   \
    \     i=$((i+1))\n    done\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe8_dbk7w.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 1 $k); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqzv8jf3w.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    local len\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+${arr:$i:1}))\n        i=$((i+1))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp55t1vyow.sh: line 19: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k-1)) )\n  do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6t6fa9gs.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  sum=0\n    for ((i=0; i<k; i++)); do\n        sum=$((sum+arr[i]))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprpso924d.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum\n  local i\n  sum=0\n \
    \ for i in $(seq 1 $k); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb5q9k294.sh: line 20: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local len\n    local tmp\n    local tmp2\n    local tmp3\n \
    \   local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum + ${arr:$i:1}))\n        i=$((i + 1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp65mvd1lc.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local kmax\n    local kmin\n    local kmax2\n    local kmin2\n\
    \    local kmax3\n    local kmin3\n    local kmax4\n    local kmin4\n    local\
    \ kmax5\n    local kmin5\n    local kmax6\n    local kmin6\n    local kmax7\n\
    \    local kmin7\n    local kmax8\n    local kmin8\n    local kmax9\n    local\
    \ kmin9\n    local kmax10\n    local kmin10\n    local kmax11\n    local kmin11\n\
    \    local kmax12\n    local kmin12\n    local kmax13\n    local kmin13\n    local\
    \ kmax14\n    local kmin14\n    local kmax15\n    local kmin15\n    local kmax16\n\
    \    local kmin16\n    local kmax17\n    local kmin17\n    local kmax18\n    local\
    \ kmin18\n    local kmax19\n    local kmin19\n    local kmax20\n    local kmin20\n\
    \    local kmax21\n    local kmin21\n    local kmax22\n    local kmin22\n    local\
    \ kmax23\n    local kmin23\n    local kmax24\n    local kmin24\n    local kmax25\n\
    \    local kmin25\n    local kmax26\n    local kmin26\n    local kmax27\n    local\
    \ kmin27\n    local kmax28\n    local kmin28\n    local kmax29\n    local kmin29\n\
    \    local kmax30\n    local kmin30\n    local kmax31\n    local kmin31\n    local\
    \ kmax32\n    local kmin32\n    local kmax33\n    local kmin33\n    local kmax34\n\
    \    local kmin34\n    local kmax35\n    local kmin35\n    local kmax36\n    local\
    \ kmin36\n    local kmax37\n    local kmin37\n    local kmax38\n    local kmin38\n\
    \    local kmax39\n    local kmin39\n    local kmax40\n    local kmin40\n    local\
    \ kmax41\n    local k\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum + arr[i]))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqc5tug76.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpafdzircq.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5yave21.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    while [ $i -lt ${#arr} ]; do\n        local elem=${arr:$i:1}\n    \
    \    if [ $j -le $k ]; then\n            sum=$((sum+elem))\n            j=$((j+1))\n\
    \        else\n            sum=$((sum+elem))\n            j=$((j+1))\n       \
    \ fi\n        i=$((i+1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvrn61f50.sh: line 22: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local element\n    while [ $i -lt $k ]; do\n        element=$(echo\
    \ $arr | cut -d \" \" -f $i)\n        sum=$(($sum + $element))\n        i=$(($i\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmp_7djhp7a.sh: line 22: 0 + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local k1=k-1\n    local k2=k-1\n    local k3=k-1\n    local k4=k-1\n\
    \    local k5=k-1\n    local k6=k-1\n    local k7=k-1\n    local k8=k-1\n    local\
    \ k9=k-1\n    local k10=k-1\n    local k11=k-1\n    local k12=k-1\n    local k13=k-1\n\
    \    local k14=k-1\n    local k15=k-1\n    local k16=k-1\n    local k17=k-1\n\
    \    local k18=k-1\n    local k19=k-1\n    local k20=k-1\n    local k21=k-1\n\
    \    local k22=k-1\n    local k23=k-1\n    local k24=k-1\n    local k25=k-1\n\
    \    local k26=k-1\n    local k27=k-1\n    local k28=k-1\n    local k29=k-1\n\
    \    local k30=k-1\n    local k31=k-1\n    local k32=k-1\n    local k33=k-1\n\
    \    local k34=k-1\n    local k35=k-1\n    local k36=k-1\n    local k37=k-1\n\
    \    local k38=k-1\n    local k39=k-1\n    local k40=k-1\n    local k41=k-1\n\
    \    local k42=k-1\n    local k43=k-1\n    local k44=k-1\n    local k45=k-1\n\
    \    local k46=k-1\n    local k47=k-1\n    local k48=k-1\n    local k49=k-1\n\
    \    local k50=k-1\n    local k51=k-1\n    local k52=k-1\n    local k53=k-1\n\
    \    local k54=k-1\n    local k55=k-1\n    local k56=k-1\n    local k57=k-1\n\
    \    local k58=k-1\n    local k59=k-1\n    local k60=k-1\n    local k61=k-1\n\
    \    local \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 1 $k); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqzv8jf3w.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local elements=$((${#arr[@]} - ${#k}))\n    local elements_left=$((${#arr[@]}\
    \ - ${#k}))\n\n    while (( i < elements_left )); do\n        sum=$((sum + ${arr[i]}))\n\
    \        i=$((i + 1))\n    done\n\n    while (( j < elements )); do\n        if\
    \ (( ${arr[j]} > 10 )); then\n            sum=$((sum + ${arr[j]}))\n         \
    \   j=$((j + 1))\n        else\n            sum=$((sum + ${arr[j]}))\n       \
    \     j=$((j + 1))\n        fi\n    done\n\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum + ${arr:$i:1}))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptbkndsz0.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum\n  local i\n  local j\n\
    \  local sum2\n  sum=0\n  for i in $(seq 1 $k); do\n    sum=$((sum+${arr:$i:1}))\n\
    \  done\n  sum2=0\n  for j in $(seq 1 $k); do\n    sum2=$((sum2+${arr:$j:1}))\n\
    \  done\n  echo $((sum+sum2))\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdzaqn2_5.sh: line 22: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 0 $((k - 1))); do\n    sum=$((sum + ${arr:$i:1}))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9umwmp15.sh: line 19: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=0\n    local kmin=0\n    local kmaxlen=0\n    local kminlen=0\n\
    \    local kmaxlen2=0\n    local kminlen2=0\n    local kmaxlen3=0\n    local kminlen3=0\n\
    \    local kmaxlen4=0\n    local kminlen4=0\n    local kmaxlen5=0\n    local kminlen5=0\n\
    \    local kmaxlen6=0\n    local kminlen6=0\n    local kmaxlen7=0\n    local kminlen7=0\n\
    \    local kmaxlen8=0\n    local kminlen8=0\n    local kmaxlen9=0\n    local kminlen9=0\n\
    \    local kmaxlen10=0\n    local kminlen10=0\n    local kmaxlen11=0\n    local\
    \ kminlen11=0\n    local kmaxlen12=0\n    local kminlen12=0\n    local kmaxlen13=0\n\
    \    local kminlen13=0\n    local kmaxlen14=0\n    local kminlen14=0\n    local\
    \ kmaxlen15=0\n    local kminlen15=0\n    local kmaxlen16=0\n    local kminlen16=0\n\
    \    local kmaxlen17=0\n    local kminlen17=0\n    local kmaxlen18=0\n    local\
    \ kminlen18=0\n    local kmaxlen19=0\n    local kminlen19=0\n    local kmaxlen20=0\n\
    \    local kminlen20=0\n    local kmaxlen21=0\n    local kminlen21=0\n    local\
    \ kmaxlen22=0\n    local kminlen22=0\n    local kmaxlen23=0\n    local kminlen23=0\n\
    \    local kmaxlen24=0\n    local kminlen24=0\n    local kmaxlen25=0\n    local\
    \ kminlen25=0\n    local kmaxlen26=0\n    local kminlen26=0\n    local kmaxlen27=0\n\
    \    local kminlen27=0\n    local kmaxlen28=0\n    local kminlen28=0\n    local\
    \ kmaxlen29=0\n    local kminlen29=0\n    local kmaxlen30=0\n    local kmin\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local ksum=0\n    while [ $i -lt $k ]; do\n        j=$((i+1))\n   \
    \     ksum=$((ksum+${arr:$j:1}))\n        i=$((j+1))\n    done\n    sum=$((sum+ksum))\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb5efw8q6.sh: line 22: ksum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  local j\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n \
    \   local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n    local sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=0\n    local kmin=0\n    local ksum=0\n    local kdigit=0\n\
    \    local kdigit2=0\n    local kdigit3=0\n    local kdigit4=0\n    local kdigit5=0\n\
    \    local kdigit6=0\n    local kdigit7=0\n    local kdigit8=0\n    local kdigit9=0\n\
    \    local kdigit10=0\n    local kdigit11=0\n    local kdigit12=0\n    local kdigit13=0\n\
    \    local kdigit14=0\n    local kdigit15=0\n    local kdigit16=0\n    local kdigit17=0\n\
    \    local kdigit18=0\n    local kdigit19=0\n    local kdigit20=0\n    local kdigit21=0\n\
    \    local kdigit22=0\n    local kdigit23=0\n    local kdigit24=0\n    local kdigit25=0\n\
    \    local kdigit26=0\n    local kdigit27=0\n    local kdigit28=0\n    local kdigit29=0\n\
    \    local kdigit30=0\n    local kdigit31=0\n    local kdigit32=0\n    local kdigit33=0\n\
    \    local kdigit34=0\n    local kdigit35=0\n    local kdigit36=0\n    local kdigit37=0\n\
    \    local kdigit38=0\n    local kdigit39=0\n    local kdigit40=0\n    local kdigit41=0\n\
    \    local kdigit42=0\n    local kdigit43=0\n    local kdigit44=0\n    local kdigit45=0\n\
    \    local kdigit46=0\n    local kdigit47=0\n    local kdigit48=0\n    local kdigit49=0\n\
    \    local kdigit50=0\n    local kdigit51=0\n    local kdigit52=0\n    local kdigit53=0\n\
    \    local kdigit54=0\n    local kdigit55=0\n    local kdigit56=0\n    local kdigit57=0\n\
    \    local kdigit58=0\n    local kdigit59=0\n    local kdigit60=0\n    local kdigit61=0\n\
    \    local kdigit62=0\n    local kdigit63=0\n    local kdigit64=0\n    local kdigit65=0\n\
    \    local kdigit66=0\n    local kdigit67=0\n\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local count\n    local max\n    local maxCount\n    local maxCountIndex\n\
    \    local maxCountValue\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n    local maxCountValueIndex\n    local maxCountValueIndex\n\
    \    local maxCountValueIndex\n\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local element\n    local count\n    local max\n    local min\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local \n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum\n  local i\n  sum=0\n \
    \ for i in $(seq 0 $((k-1)) )\n  do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvpx7zpmi.sh: line 21: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    while [ $i -lt ${#arr[@]} ]; do\n        if [ $i -eq $k ]; then\n \
    \           sum=$((sum+${arr[i]}))\n            i=$((i+1))\n        else\n   \
    \         sum=$((sum+${arr[i]}))\n            i=$((i+1))\n            j=$((j+1))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzsvismz9.sh: line 24: sum+1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i\n  for i in\
    \ $(seq 0 $((k-1))); do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3_u271yh.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  local j\n  local\
    \ element\n  local count\n  local len\n  local max\n  local min\n  local tmp\n\
    \  local result\n\n  arr=(${arr//[[:space:]]/})\n  len=${#arr[@]}\n  min=${arr[0]}\n\
    \  max=${arr[$len-1]}\n  count=0\n  for i in $(seq 0 $((len-k))); do\n    element=${arr[$i]}\n\
    \    count=$((count+1))\n    for j in $(seq 0 $((k-count))); do\n      tmp=${arr[$i+$j]}\n\
    \      if [ \"$tmp\" -gt \"$max\" ]; then\n        max=tmp\n      fi\n      if\
    \ [ \"$tmp\" -lt \"$min\" ]; then\n        min=tmp\n      fi\n    done\n    sum=$((sum+element))\n\
    \  done\n  result=$((sum+min))\n  echo $result\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local kmax\n    local kmin\n    local sum1\n    local sum2\n    local\
    \ sum3\n    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local\
    \ sum8\n    local sum9\n    local sum10\n    local sum11\n    local sum12\n  \
    \  local sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local \n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local kmax=0\n    local kmax1=0\n    local kmax2=0\n    local kmax3=0\n\
    \    local kmax4=0\n    local kmax5=0\n    local kmax6=0\n    local kmax7=0\n\
    \    local kmax8=0\n    local kmax9=0\n    local kmax10=0\n    local kmax11=0\n\
    \    local kmax12=0\n    local kmax13=0\n    local kmax14=0\n    local kmax15=0\n\
    \    local kmax16=0\n    local kmax17=0\n    local kmax18=0\n    local kmax19=0\n\
    \    local kmax20=0\n    local kmax21=0\n    local kmax22=0\n    local kmax23=0\n\
    \    local kmax24=0\n    local kmax25=0\n    local kmax26=0\n    local kmax27=0\n\
    \    local kmax28=0\n    local kmax29=0\n    local kmax30=0\n    local kmax31=0\n\
    \    local kmax32=0\n    local kmax33=0\n    local kmax34=0\n    local kmax35=0\n\
    \    local kmax36=0\n    local kmax37=0\n    local kmax38=0\n    local kmax39=0\n\
    \    local kmax40=0\n    local kmax41=0\n    local kmax42=0\n    local kmax43=0\n\
    \    local kmax44=0\n    local kmax45=0\n    local kmax46=0\n    local kmax47=0\n\
    \    local kmax48=0\n    local kmax49=0\n    local kmax50=0\n    local kmax51=0\n\
    \    local kmax52=0\n    local kmax53=0\n    local kmax54=0\n    local kmax55=0\n\
    \    local kmax56=0\n    local kmax57=0\n    local kmax58=0\n    local kmax59=0\n\
    \    local kmax60=0\n    local kmax61=0\n    local kmax62=0\n    local kmax63=0\n\
    \    local kmax64=0\n    local kmax65=0\n    local kmax66=0\n    local kmax67=0\n\
    \    local kmax68=0\n    local kmax\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5yave21.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    while [ $i -lt $k ]; do\n        sum=$((sum+${arr[$i]}))\n        i=$((i+1))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdjye6egc.sh: line 20: sum+1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  local j\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n \
    \   local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n    local sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum\n  local i\n  local j\n\
    \  local kmax\n  local kmin\n  local len\n  local max\n  local min\n  local sum1\n\
    \  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local\
    \ sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n\
    \  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n \
    \ local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local\
    \ sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n\
    \  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n \
    \ local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local\
    \ sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n\
    \  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n \
    \ local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local\
    \ sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n\
    \  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n \
    \ local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local\
    \ sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n\
    \  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n \
    \ local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local\
    \ sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n\
    \  local sum93\n  \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe549do4x.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    while [ $i -lt $k ]; do\n        sum=$((sum+arr[i]))\n        i=$((i+1))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6mvtj89f.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i\n\
    \    local j\n    local element\n    local element2\n    local element3\n    local\
    \ element4\n    local element5\n    local element6\n    local element7\n    local\
    \ element8\n    local element9\n    local element10\n    local element11\n   \
    \ local element12\n    local element13\n    local element14\n    local element15\n\
    \    local element16\n    local element17\n    local element18\n    local element19\n\
    \    local element20\n    local element21\n    local element22\n    local element23\n\
    \    local element24\n    local element25\n    local element26\n    local element27\n\
    \    local element28\n    local element29\n    local element30\n    local element31\n\
    \    local element32\n    local element33\n    local element34\n    local element35\n\
    \    local element36\n    local element37\n    local element38\n    local element39\n\
    \    local element40\n    local element41\n    local element42\n    local element43\n\
    \    local element44\n    local element45\n    local element46\n    local element47\n\
    \    local element48\n    local element49\n    local element50\n    local element51\n\
    \    local element52\n    local element53\n    local element54\n    local element55\n\
    \    local element56\n    local element57\n    local element58\n    local element59\n\
    \    local element60\n    local element61\n    local element62\n    local element63\n\
    \    local element64\n    local element65\n    local element66\n    local element67\n\
    \    local element68\n    local element69\n    local element70\n    local element71\n\
    \    local element72\n    local element73\n    local element74\n    local element75\n\
    \    local element76\n    local element77\n    local element78\n    local element79\n\
    \    local element80\n    local element81\n    local element82\n    local element83\n\
    \    local element84\n    local element85\n    local element86\n    local element87\n\
    \    local element88\n    local element89\n    local element90\n    local element91\n\
    \    local element92\n    local element93\n    local element94\n    local element95\n\
    \    local element96\n    local element97\n    local element\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i\n  for i in $(seq\
    \ 1 $k); do\n    sum=$((sum+${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1qw2blke.sh: line 19: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local elements=$(echo $arr | tr \" \" \"\\n\")\n    local elements_count=$(echo\
    \ $elements | wc -w)\n    local elements_count_max=$(echo $elements_count | awk\
    \ '{print $1}')\n    local elements_count_min=$(echo $elements_count | awk '{print\
    \ $2}')\n    local elements_count_max_element=$(echo $elements_count | awk '{print\
    \ $1}')\n    local elements_count_min_element=$(echo $elements_count | awk '{print\
    \ $2}')\n    local elements_count_max_element_element=$(echo $elements_count |\
    \ awk '{print $3}')\n    local elements_count_min_element_element=$(echo $elements_count\
    \ | awk '{print $4}')\n    local elements_count_max_element_element_element=$(echo\
    \ $elements_count | awk '{print $5}')\n    local elements_count_min_element_element_element=$(echo\
    \ $elements_count | awk '{print $6}')\n    local elements_count_max_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $7}')\n    local elements_count_min_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $8}')\n    local elements_count_max_element_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $9}')\n    local elements_count_min_element_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $10}')\n    local elements_count_max_element_element_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $11}')\n    local elements_count_min_element_element_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $12}')\n    local elements_count_max_element_element_element_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $13}')\n    local elements_count_min_element_element_element_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $14}')\n    local elements_count_max_element_element_element_element_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $15}')\n    local elements_count_min_element_element_element_element_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $16}')\n    local elements_count_max_element_element_element_element_element_element_element_element_element=$(echo\
    \ $elements_count | awk '{print $17}')\n    local elements_count_min_element_element_element_element_element_element_element_element_element=$(echo\
    \ $\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm2gqvv4l.sh: line 40: unexpected EOF while looking for matching
    `)''

    /tmp/tmpm2gqvv4l.sh: line 57: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt\
    \ $k ]; do\n    sum=$((sum+arr[i]))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91cnd5hf.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  sum=0\n    for i in $(seq 0 $((k-1)) )\n    do\n        sum=$((sum+${arr:$i:1}))\n\
    \    done\n    sum=$((sum+${arr:$k:1}))\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpilv9y7io.sh: line 21: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while (( i < k )); do\n        sum=$(( sum + arr[i] ))\n        i=$(( i +\
    \ 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcdzw_e0d.sh: line 19: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local ksum=0\n    local kdigit=0\n    local kdigit2=0\n    local kdigit3=0\n\
    \    local kdigit4=0\n    local kdigit5=0\n    local kdigit6=0\n    local kdigit7=0\n\
    \    local kdigit8=0\n    local kdigit9=0\n    local kdigit10=0\n    local kdigit11=0\n\
    \    local kdigit12=0\n    local kdigit13=0\n    local kdigit14=0\n    local kdigit15=0\n\
    \    local kdigit16=0\n    local kdigit17=0\n    local kdigit18=0\n    local kdigit19=0\n\
    \    local kdigit20=0\n    local kdigit21=0\n    local kdigit22=0\n    local kdigit23=0\n\
    \    local kdigit24=0\n    local kdigit25=0\n    local kdigit26=0\n    local kdigit27=0\n\
    \    local kdigit28=0\n    local kdigit29=0\n    local kdigit30=0\n    local kdigit31=0\n\
    \    local kdigit32=0\n    local kdigit33=0\n    local kdigit34=0\n    local kdigit35=0\n\
    \    local kdigit36=0\n    local kdigit37=0\n    local kdigit38=0\n    local kdigit39=0\n\
    \    local kdigit40=0\n    local kdigit41=0\n    local kdigit42=0\n    local kdigit43=0\n\
    \    local kdigit44=0\n    local kdigit45=0\n    local kdigit46=0\n    local kdigit47=0\n\
    \    local kdigit48=0\n    local kdigit49=0\n    local kdigit50=0\n    local kdigit51=0\n\
    \    local kdigit52=0\n    local kdigit53=0\n    local kdigit54=0\n    local kdigit55=0\n\
    \    local kdigit56=0\n    local kdigit57=0\n    local kdigit58=0\n    local kdigit59=0\n\
    \    local kdigit60=0\n    local kdigit61=0\n    local kdigit62=0\n    local kdigit63=0\n\
    \    local kdigit64=0\n    local kdigit65=0\n    local kdigit66=0\n    local kdigit67=0\n\
    \    local kdigit68=0\n    local kdigit69\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054079
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local sum2=0\n    local sum3=0\n    local sum4=0\n    local sum5=0\n\
    \    local sum6=0\n    local sum7=0\n    local sum8=0\n    local sum9=0\n    local\
    \ sum10=0\n    local sum11=0\n    local sum12=0\n    local sum13=0\n    local\
    \ sum14=0\n    local sum15=0\n    local sum16=0\n    local sum17=0\n    local\
    \ sum18=0\n    local sum19=0\n    local sum20=0\n    local sum21=0\n    local\
    \ sum22=0\n    local sum23=0\n    local sum24=0\n    local sum25=0\n    local\
    \ sum26=0\n    local sum27=0\n    local sum28=0\n    local sum29=0\n    local\
    \ sum30=0\n    local sum31=0\n    local sum32=0\n    local sum33=0\n    local\
    \ sum34=0\n    local sum35=0\n    local sum36=0\n    local sum37=0\n    local\
    \ sum38=0\n    local sum39=0\n    local sum40=0\n    local sum41=0\n    local\
    \ sum42=0\n    local sum43=0\n    local sum44=0\n    local sum45=0\n    local\
    \ sum46=0\n    local sum47=0\n    local sum48=0\n    local sum49=0\n    local\
    \ sum50=0\n    local sum51=0\n    local sum52=0\n    local sum53=0\n    local\
    \ sum54=0\n    local sum55=0\n    local sum56=0\n    local sum57=0\n    local\
    \ sum58=0\n    local sum59=0\n    local sum60=0\n    local sum61=0\n    local\
    \ sum62=0\n    local sum63=0\n    local sum64=0\n    local sum65=0\n    local\
    \ sum66=0\n    local sum67=0\n    local sum68=0\n    local sum69=0\n    local\
    \ sum70=0\n    local sum71=0\n    local sum72=0\n    local sum73=0\n    local\
    \ sum74=0\n    local sum75=0\n    local sum76=0\n    local sum77=0\n    local\
    \ sum78=0\n    local sum79=0\n    local sum80=0\n    local sum81=0\n    local\
    \ sum82=0\n\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054078
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=$1\n  k=$2\n  local sum\n  sum=0\n  for i in $(seq 0\
    \ $((k-1)) )\n  do\n    sum=$((sum+${arr:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppjqyiao7.sh: line 21: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660054078

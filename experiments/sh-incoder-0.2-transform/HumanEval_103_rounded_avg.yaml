name: HumanEval_103_rounded_avg
language: sh
prompt: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
  \ is to compute the\n# average of the integers from n through m (including n and\
  \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
  # If n is greater than m, return -1.\n# Example:\n# >>> $(rounded_avg \"1\" \"5\"\
  )\n# \"0b11\"\n# >>> $(rounded_avg \"7\" \"5\")\n# \"-1\"\n# >>> $(rounded_avg \"\
  10\" \"20\")\n# \"0b1111\"\n# >>> $(rounded_avg \"20\" \"33\")\n# \"0b11010\"\n\
  #\n# $1 is an integer\n# $2 is an integer\nrounded_avg() {\n"
tests: "}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") =\
  \ \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n   \
  \ [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
  \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
  \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
  \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") =\
  \ \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
  \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\n\
  run_test"
completions: ["  local n m sum\n  n=$1; m=$2; sum=0\n  while (( n <= m )); do\n  \
    \  (( sum += n ))\n    (( n++ ))\n  done\n  (( sum += m ))\n  (( m-- ))\n  ((\
    \ sum++ ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  ((\
    \ sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1\
    \ ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  ((\
    \ sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1\
    \ ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -=\
    \ sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n \
    \ (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum <<\
    \ 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n \
    \ (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >>\
    \ 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum\
    \ -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n\
    \  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum\
    \ << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n\
    \  (( sum << 1 ))\n  (( sum -= sum >> 1 ))\n  (( sum << 1 ))\n  (( sum -= sum\
    \ >> 1 ))", "  local n m\n  n=$1\n  m=$2\n  local sum\n  sum=0\n  local i\n  for\
    \ i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  (( sum > n )) && return\
    \ -1\n  (( sum < n )) && return -1\n  (( sum == n )) && return $(( sum / 2 ))\n\
    \  (( sum == m )) && return $(( sum / 2 ))\n  (( sum > m )) && return -1\n  ((\
    \ sum < m )) && return -1\n  (( sum == m )) && return $(( sum / 2 ))\n  (( sum\
    \ == n )) && return $(( sum / 2 ))\n  (( sum > n )) && return -1\n  (( sum < n\
    \ )) && return -1\n  (( sum == n )) && return $(( sum / 2 ))\n  (( sum == m ))\
    \ && return $(( sum / 2 ))\n  (( sum > m )) && return -1\n  (( sum < m )) && return\
    \ -1\n  (( sum == m )) && return $(( sum / 2 ))\n  (( sum == n )) && return $((\
    \ sum / 2 ))\n  (( sum > n )) && return -1\n  (( sum < n )) && return -1\n  ((\
    \ sum == n )) && return $(( sum / 2 ))\n  (( sum == m )) && return $(( sum / 2\
    \ ))\n  (( sum > m )) && return -1\n  (( sum < m )) && return -1\n  (( sum ==\
    \ m )) && return $(( sum / 2 ))\n  (( sum == n )) && return $(( sum / 2 ))\n \
    \ (( sum > n )) && return -1\n  (( sum < n )) && return -1\n  (( sum == n )) &&\
    \ return $(( sum / 2 ))\n  (( sum == m )) && return $(( sum / 2 ))\n  (( sum >\
    \ m )) && return -1\n  (( sum < m )) && return -1\n  (( sum == m )) && return\
    \ $(( sum / 2 ))\n  (( sum == n )) && return $(( sum / 2 ))\n  (( sum > n )) &&\
    \ return -1\n  (( sum", "  local n m\n  n=$1\n  m=$2\n  local sum\n  sum=0\n \
    \ while [ $n -le $m ]; do\n    sum=$(($sum + $n))\n    n=$(($n + 1))\n  done\n\
    \  echo $(($sum / $m))", "  local n m\n  n=$1\n  m=$2\n  local sum\n  sum=0\n\
    \  while [ \"$n\" -le \"$m\" ]; do\n    sum=$(( $sum + $n ))\n    n=$(( $n + 1\
    \ ))\n  done\n  echo $(( $sum / $m ))", "  local n m\n  n=$1\n  m=$2\n  (( n >\
    \ m )) && return -1\n  (( n == m )) && return $n\n  (( n < m )) && return -1\n\
    \  local i\n  (( n <= m )) && return -1\n  (( n == 1 )) && return $n\n  (( m ==\
    \ 1 )) && return $m\n  (( n == m )) && return $n\n  (( n == m )) && return $n\n\
    \  (( n == m )) && return $n\n  (( n == m )) && return $n\n  (( n == m )) && return\
    \ $n\n  (( n == m )) && return $n\n  (( n == m )) && return $n\n  (( n == m ))\
    \ && return $n\n  (( n == m )) && return $n\n  (( n == m )) && return $n\n  ((\
    \ n == m )) && return $n\n  (( n == m )) && return $n\n  (( n == m )) && return\
    \ $n\n  (( n == m )) && return $n\n  (( n == m )) && return $n\n  (( n == m ))\
    \ && return $n\n  (( n == m )) && return $n\n  (( n == m )) && return $n\n  ((\
    \ n == m )) && return $n\n  (( n == m )) && return $n\n  (( n == m )) && return\
    \ $n\n  (( n == m )) && return $n\n  (( n == m )) && return $n\n  (( n == m ))\
    \ && return $n\n  (( n == m )) && return $n\n  (( n == m )) && return $n\n  ((\
    \ n == m )) && return $n\n  (( n == m )) && return $n\n  (( n == m )) && return\
    \ $n\n  (( n == m )) && return $n\n  (( n == m )) && return $n\n  (( n == m ))\
    \ && return $n\n  (( n == m )) && return $n\n  (( n == m )) && return $n\n  ((\
    \ n == m )) && return $n\n  (( n == m )) && return $n\n  (( n == m )) && return\
    \ $n\n  (( n == m )) && return $n\n  (( n == m )) && return $n", "  local n m\n\
    \  n=$1\n  m=$2\n  if [ $n -gt $m ]; then\n    return -1\n  fi\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))", "    local n m\n    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n\
    \        echo \"-1\"\n    else\n        local i\n        local sum\n        local\
    \ count\n        sum=0\n        count=0\n        for i in $(seq 1 $m); do\n  \
    \          sum=$(( $sum + $i ))\n            count=$(( $count + 1 ))\n       \
    \ done\n        echo \"$(( $sum / $count ))\"\n    fi", "  local n m\n  n=$1\n\
    \  m=$2\n  local sum\n  sum=0\n  local i\n  for i in $(seq 1 $m); do\n    sum=$((\
    \ $sum + $n ))\n  done\n  echo $(( $sum / $m ))", "    local n m\n    n=$1\n \
    \   m=$2\n    if [ $n -gt $m ]; then\n        echo \"-1\"\n    else\n        local\
    \ i\n        i=$(( $n - $m ))\n        local j\n        j=$(( $m + 1 ))\n    \
    \    local k\n        k=$(( $n - $j ))\n        local l\n        l=$(( $m + 1\
    \ ))\n        local m\n        m=$(( $m + 1 ))\n        local n\n        n=$((\
    \ $n + 1 ))\n        local m\n        m=$(( $m + 1 ))\n        local i\n     \
    \   i=$(( $n - $m ))\n        local j\n        j=$(( $m + 1 ))\n        local\
    \ k\n        k=$(( $n - $j ))\n        local l\n        l=$(( $m + 1 ))\n    \
    \    local m\n        m=$(( $m + 1 ))\n        local i\n        i=$(( $n - $m\
    \ ))\n        local j\n        j=$(( $m + 1 ))\n        local k\n        k=$((\
    \ $n - $j ))\n        local l\n        l=$(( $m + 1 ))\n        local m\n    \
    \    m=$(( $m + 1 ))\n        local i\n        i=$(( $n - $m ))\n        local\
    \ j\n        j=$(( $m + 1 ))\n        local k\n        k=$(( $n - $j ))\n    \
    \    local l\n        l=$(( $m + 1 ))\n        local m\n        m=$(( $m + 1 ))\n\
    \        local i\n        i=$(( $n - $m ))\n        local j\n        j=$(( $m\
    \ + 1 ))\n        local k\n        k=$(( $n - $j ))\n        local l\n       \
    \ l=$(( $m + 1 ))\n        local m\n        m=$(( $m + 1 ))\n        local i\n\
    \        i=$(( $n - $m ))\n        local j\n        j=$(( $m + 1 ))\n        local\
    \ k\n        k=$(( $n - $j ))\n        local l\n        l=$(( $m + 1 ))\n    \
    \    local m\n        m=$(( $m + 1 ))\n        local i\n        i=$(( $n - $m\
    \ ))\n        local j\n        j=$(( $m + 1 ))\n        local k\n        k=$((\
    \ $n - $j ))\n        local l\n        l=$(( $m + 1 ))\n        local m\n    \
    \    m=$(( $m + 1 ))\n        local i\n        i=$(( $n - $m ))\n        local\
    \ j\n", "    local n m\n    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n     \
    \   echo \"-1\"\n    else\n        local sum=0\n        local i\n        for i\
    \ in $(seq 1 $n); do\n            sum=$(( $sum + $i ))\n        done\n       \
    \ echo $(( $sum / $n ))\n    fi", "  local n m\n  n=$1\n  m=$2\n  local sum\n\
    \  sum=0\n  while (( n <= m )); do\n    (( sum += n ))\n    (( n += 1 ))\n  done\n\
    \  (( sum += m ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum\
    \ += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n\
    \  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -=\
    \ 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n \
    \ (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum +=\
    \ n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n \
    \ (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -=\
    \ 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n \
    \ (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum +=\
    \ n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n \
    \ (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -=\
    \ 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n \
    \ (( sum += n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= 1 ))\n  (( sum +=\
    \ n ))\n  (( n -= 1 ))\n  (( sum += n ))\n  (( n -= ", "    local n m\n    n=$1\n\
    \    m=$2\n    if [ $n -gt $m ]; then\n        echo \"-1\"\n    else\n       \
    \ local i\n        local sum\n        local count\n        sum=0\n        count=$(expr\
    \ $n - $m)\n        for i in $(seq 1 $count); do\n            sum=$(( $sum + $i\
    \ ))\n        done\n        echo \"$(( $sum / $count ))\"\n    fi", "    local\
    \ n m\n    n=$1\n    m=$2\n    if [ $n -gt $m ]\n    then\n        echo \"-1\"\
    \n    else\n        echo \"$(echo \"$n\" | bc | awk '{print $1 + $2}')\"\n   \
    \ fi", "  local n=$1\n  local m=$2\n  local sum=0\n  local i\n  local j\n  local\
    \ sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n\
    \  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local\
    \ sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n\
    \  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n \
    \ local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local\
    \ sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n\
    \  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n \
    \ local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local\
    \ sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n\
    \  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n \
    \ local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local\
    \ sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n\
    \  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n \
    \ local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local\
    \ sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n\
    \  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n \
    \ local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local\
    \ sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n\
    \  local ", "  local n=$1\n  local m=$2\n  local sum=0\n  local i\n  for i in\
    \ $(seq 1 $m); do\n    sum=$((sum+$i))\n  done\n  if (( $n <= $m )); then\n  \
    \  echo $(( $sum / $m ))\n  else\n    echo -1\n  fi", "  local n m\n  n=$(echo\
    \ \"$1\" | bc)\n  m=$(echo \"$2\" | bc)\n  if [ \"$n\" -gt \"$m\" ]; then\n  \
    \  return -1\n  fi\n  local sum\n  sum=$(( (n+m)/2 ))\n  local i\n  for i in $(seq\
    \ 0 $(( $(n-$m) -1 ))); do\n    sum=$(( $sum + $i ))\n  done\n  echo \"$sum\"\
    \ | bc -l", "    local n m\n    n=$1; m=$2\n    local sum=0\n    local i\n   \
    \ for i in $(seq 1 $m); do\n        sum=$((sum+$i))\n    done\n    if [ $n -gt\
    \ $m ]; then\n        echo \"-1\"\n    else\n        echo $(( $sum / $m ))\n \
    \   fi", "    local n m\n    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n    \
    \    echo \"-1\"\n    else\n        local i\n        i=$(( $n - $m ))\n      \
    \  local j\n        j=$(( $i + 1 ))\n        local sum\n        sum=0\n      \
    \  while [ $i -le $j ]; do\n            sum=$(( $sum + $i ))\n            i=$((\
    \ $i + 1 ))\n        done\n        echo \"$(( $sum / $j ))\"\n    fi", "  local\
    \ n m\n  n=$(echo \"$1\" | sed 's/^0*//')\n  m=$(echo \"$2\" | sed 's/^0*//')\n\
    \  local sum\n  sum=0\n  while [ \"$n\" -le \"$m\" ]; do\n    sum=$((sum+n))\n\
    \    n=$((n+1))\n  done\n  echo \"$((sum/2))\"", "    local n m\n    n=$1; m=$2\n\
    \    local sum=0\n    local i\n    local result\n    local count\n    local remainder\n\
    \    \n    if [ $n -le $m ]; then\n        sum=$((n+m))\n        result=$((sum/2))\n\
    \        \n        if [ $result -eq 0 ]; then\n            result=\"0b0\"\n  \
    \      fi\n        \n        echo $result\n    else\n        echo \"-1\"\n   \
    \ fi"]
stop_tokens:
- "\n}"

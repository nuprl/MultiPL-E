language: sh
name: HumanEval_151_double_the_difference
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  for i in $numbers;\
    \ do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n      if (( count\
    \ > 1 )); then\n        ((sum+=i))\n      fi\n    else\n      ((sum+=i))\n   \
    \ fi\n  done\n  echo $((sum))\n}\n\ncandidate() {\n    double_the_difference \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbp1vfsof.sh: line 28: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpbp1vfsof.sh: line 28: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  while read number;\
    \ do\n    (( count++ ))\n    (( sum += number * number ))\n    (( odd += ( number\
    \ % 2 ) ))\n  done <<< \"$numbers\"\n  echo \"$sum\"\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvduzzkwb.sh: line 23: ((: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    /tmp/tmpvduzzkwb.sh: line 24: ((: 5.0 4.0: syntax error: invalid arithmetic operator
    (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local num\n  for num in $numbers;\
    \ do\n    (( count++ ))\n    if [[ $num -gt 0 ]]; then\n      (( sum += num *\
    \ num ))\n    elif [[ $num -eq 0 ]]; then\n      (( sum += num ))\n    else\n\
    \      (( odd++ ))\n    fi\n  done\n  if [[ $odd -eq 0 ]]; then\n    (( sum +=\
    \ $sum ))\n  fi\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy_8jjj9q.sh: line 23: [[: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpy_8jjj9q.sh: line 25: [[: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpy_8jjj9q.sh: line 23: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpy_8jjj9q.sh: line 25: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local negative=0\n  local integer=0\n\
    \  local non_zero=0\n  local non_negative=0\n  local non_integer=0\n  local non_non_zero=0\n\
    \  local non_non_negative=0\n  local non_non_integer=0\n  local non_non_non_zero=0\n\
    \  local non_non_non_negative=0\n  local non_non_non_integer=0\n  local non_non_non_non_zero=0\n\
    \  local non_non_non_non_negative=0\n  local non_non_non_non_integer=0\n  local\
    \ non_non_non_non_non_zero=0\n  local non_non_non_non_non_negative=0\n  local\
    \ non_non_non_non_non_integer=0\n  local non_non_non_non_non_zero=0\n  local non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_integer=0\n  local non_non_non_non_non_zero=0\n \
    \ local non_non_non_non_non_negative=0\n  local non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_non_negative=0\n  local non_non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_non_negative=0\n  local non_non_non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_non_non_negative=0\n  local non_non_non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_non_non_non_negative=0\n  local non_non_non_non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    local odd=0\n    local num\n\
    \    for num in $numbers; do\n        if [[ $num -gt 0 ]]; then\n            ((count++))\n\
    \            if [[ $num -gt 1 ]]; then\n                ((odd++))\n          \
    \  fi\n        fi\n        ((sum+=num))\n    done\n    if [[ $odd -eq 0 ]]; then\n\
    \        echo \"0\"\n    else\n        echo \"$((sum*sum))\"\n    fi\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbji9_i3u.sh: line 22: [[: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpbji9_i3u.sh: line 28: ((: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpbji9_i3u.sh: line 22: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpbji9_i3u.sh: line 28: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  local j\n\n  for\
    \ ((i=0; i<${#numbers}; i++)); do\n    number=${numbers:$i:1}\n    if [[ ${number}\
    \ -lt 0 ]]; then\n      continue\n    elif [[ ${number} -eq 0 ]]; then\n     \
    \ continue\n    elif [[ ${number} -eq 1 ]]; then\n      sum=$((sum+number))\n\
    \      count=$((count+1))\n      continue\n    fi\n    for ((j=0; j<${#number};\
    \ j++)); do\n      if [[ ${number:$j:1} -eq 0 ]]; then\n        continue\n   \
    \   fi\n      if (( ${number:$j:1} % 2 )); then\n        sum=$((sum+${number:$j:1}))\n\
    \        count=$((count+1))\n      fi\n    done\n  done\n  if [[ ${count} -gt\
    \ 0 ]]; then\n    sum=$((sum*2))\n  fi\n  echo \"${sum}\"\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj6l44qs5.sh: line 25: [[: .: syntax error: operand expected (error
    token is ".")

    /tmp/tmpj6l44qs5.sh: line 27: [[: .: syntax error: operand expected (error token
    is ".")

    /tmp/tmpj6l44qs5.sh: line 29: [[: .: syntax error: operand expected (error token
    is ".")

    /tmp/tmpj6l44qs5.sh: line 35: [[: .: syntax error: operand expected (error token
    is ".")

    /tmp/tmpj6l44qs5.sh: line 38: ((: . % 2 : syntax error: operand expected (error
    token is ". % 2 ")

    /tmp/tmpj6l44qs5.sh: line 25: [[: .: syntax error: operand expected (error token
    is ".")

    /tmp/tmpj6l44qs5.sh: line 27: [[: .: syntax error: operand expected (error token
    is ".")

    /tmp/tmpj6l44qs5.sh: line 29: [[: .: syntax error: operand expected (error token
    is ".")

    /tmp/tmpj6l44qs5.sh: line 35: [[: .: syntax error: operand expected (error token
    is ".")

    /tmp/tmpj6l44qs5.sh: line 38: ((: . % 2 : syntax error: operand expected (error
    token is ". % 2 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo07rq6c7.sh: line 48: syntax error in conditional expression

    /tmp/tmpo07rq6c7.sh: line 49: syntax error near `}''

    /tmp/tmpo07rq6c7.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  for i in $numbers;\
    \ do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      (( sum += i ))\n      (( count++\
    \ ))\n    fi\n  done\n  if [[ $count -eq 0 ]]; then\n    return 0\n  fi\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpawvyvr12.sh: line 42: syntax error in conditional expression

    /tmp/tmpawvyvr12.sh: line 43: syntax error near `}''

    /tmp/tmpawvyvr12.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i\n\n  for i in $numbers;\
    \ do\n    (( count++ ))\n    (( sum += i * i ))\n  done\n\n  if (( count > 0 ));\
    \ then\n    for i in $numbers; do\n      if (( i % 2 )); then\n        odd=$((\
    \ odd + i ))\n      fi\n    done\n  fi\n\n  echo $(( sum - odd ))\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpljq_0rs7.sh: line 24: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpljq_0rs7.sh: line 24: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpljq_0rs7.sh: line 29: ((: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpljq_0rs7.sh: line 29: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local odd\n  local i\n  for\
    \ i in $numbers; do\n    number=`echo $i | sed 's/^ *//g'`\n    if [[ $number\
    \ =~ ^-?[0-9]+$ ]]; then\n      odd=`echo $number | sed 's/^-?//g'`\n      if\
    \ [[ $odd -eq 0 ]]; then\n        sum=$((sum+number))\n        count=$((count+1))\n\
    \      fi\n    fi\n  done\n  if [[ $count -eq 0 ]]; then\n    echo $sum\n  else\n\
    \    echo $sum\n  fi\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    fi\n  done\n  echo $((sum * sum))\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local number\n  local i\n  for i in $numbers; do\n    if [[\
    \ $i =~ ^-?[0-9]+$ ]]; then\n      number=$i\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$\
    \ ]]; then\n      number=$(( ${i%%.*} + ${i#*.} ))\n    else\n      number=0\n\
    \    fi\n    if [[ $number -eq 0 ]]; then\n      continue\n    fi\n    sum=$((\
    \ sum + $number * $number ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local odd\n  while read -r\
    \ number; do\n    ((count++))\n    if [[ $number =~ ^-?[0-9]+$ ]]; then\n    \
    \  ((sum += number))\n    elif ((count > 0)); then\n      ((odd=1))\n    fi\n\
    \  done <<< \"$numbers\"\n  if ((count > 0)); then\n    ((sum *= 2))\n  fi\n \
    \ if ((odd)); then\n    ((sum -= 1))\n  fi\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i=0\n  while [ $i -lt ${#numbers} ]; do\n    if [[ ${numbers[$i]}\
    \ -gt 0 ]]; then\n      sum=$(( ${sum} + ${numbers[$i]} ))\n    fi\n    (( i++\
    \ ))\n  done\n  echo $(( ${sum} ))\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdfadi5kv.sh: line 20: [[: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    for number in $numbers;\
    \ do\n        if [[ $number == -* ]]; then\n            echo \"$number\"\n   \
    \         return 0\n        fi\n        if [[ $number == * ]]; then\n        \
    \    echo \"$number\"\n            return 0\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number\"\n            return 0\n        fi\n\
    \        if [[ $number == * ]]; then\n            echo \"$number\"\n         \
    \   return 0\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number\"\n            return 0\n        fi\n        if [[ $number == * ]];\
    \ then\n            echo \"$number\"\n            return 0\n        fi\n     \
    \   if [[ $number == * ]]; then\n            echo \"$number\"\n            return\
    \ 0\n        fi\n        if [[ $number == * ]]; then\n            echo \"$number\"\
    \n            return 0\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number\"\n            return 0\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number\"\n            return 0\n        fi\n\
    \        if [[ $number == * ]]; then\n            echo \"$number\"\n         \
    \   return 0\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number\"\n            return 0\n        fi\n        if [[ $number == * ]];\
    \ then\n            echo \"$number\"\n            return 0\n        fi\n     \
    \   if [[ $number == * ]]; then\n            echo \"$number\"\n            return\
    \ 0\n        fi\n        if [[ $number == * ]]; then\n            echo \"$number\"\
    \n            return 0\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number\"\n            return 0\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number\"\n            return 0\n        fi\n\
    \        if [[ $number == * ]]; then\n            echo \"$number\"\n         \
    \   return 0\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number\"\n            return 0\n        fi\n        if [[ $number == * ]];\
    \ then\n            echo \"$number\"\n            return 0\n        fi\n     \
    \   if [[ $number == * ]]; then\n            echo \"$number\"\n            return\
    \ 0\n        fi\n        if [[ $number == * ]]; then\n            echo \"$number\"\
    \n            return 0\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number\"\n            return 0\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number\"\n            return 0\n        fi\n\
    \        if [[ $number == * ]]; then\n            echo \"$number\"\n         \
    \   return 0\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb223vrrf.sh: line 136: unexpected EOF while looking for matching
    `"''

    /tmp/tmpb223vrrf.sh: line 140: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local number\n  local i\n  for i in $numbers; do\n    number=$((\
    \ $i + 1 ))\n    if [ $number -eq 0 ]; then\n      continue\n    elif [ $number\
    \ -eq 1 ]; then\n      sum=$(( $sum + $number ))\n    elif [ $number -eq 2 ];\
    \ then\n      sum=$(( $sum + $number ))\n    elif [ $number -le 0 ]; then\n  \
    \    continue\n    elif [ $number -le 2 ]; then\n      sum=$(( $sum + $number\
    \ ))\n    elif [ $number -le 3 ]; then\n      sum=$(( $sum + $number ))\n    elif\
    \ [ $number -le 4 ]; then\n      sum=$(( $sum + $number ))\n    elif [ $number\
    \ -le 5 ]; then\n      sum=$(( $sum + $number ))\n    elif [ $number -le 6 ];\
    \ then\n      sum=$(( $sum + $number ))\n    elif [ $number -le 7 ]; then\n  \
    \    sum=$(( $sum + $number ))\n    elif [ $number -le 8 ]; then\n      sum=$((\
    \ $sum + $number ))\n    elif [ $number -le 9 ]; then\n      sum=$(( $sum + $number\
    \ ))\n    elif [ $number -le 10 ]; then\n      sum=$(( $sum + $number ))\n   \
    \ elif [ $number -le 11 ]; then\n      sum=$(( $sum + $number ))\n    elif [ $number\
    \ -le 12 ]; then\n      sum=$(( $sum + $number ))\n    elif [ $number -le 13 ];\
    \ then\n      sum=$(( $sum + $number ))\n    elif [ $number -le 14 ]; then\n \
    \     sum=$(( $sum + $number ))\n    elif [ $number -le 15 ]; then\n      sum=$((\
    \ $sum + $number ))\n    elif [ $number -le 16 ]; then\n      sum=$(( $sum + $number\
    \ ))\n    elif [ $number -le 17 ]; then\n      sum=$(( $sum + $number ))\n   \
    \ elif [ $number -le 18 ]; then\n      sum=$(( $sum + $number ))\n    elif [ $number\
    \ -le 19 ]; then\n      sum=$(( $sum + $number ))\n    elif [ $number -le 20 ];\
    \ then\n      sum=$(( $sum + $number ))\n    elif [ $number -le 21 ]; then\n \
    \     sum=$(( $sum + $number ))\n    elif [ $number -le 22 ]; then\n      sum=$((\
    \ $sum + $number ))\n    elif [ $number -le 23 ]; then\n      sum=$(( $sum + \n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4wq5rwo9.sh: line 73: unexpected EOF while looking for matching
    `)''

    /tmp/tmp4wq5rwo9.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjf65mki0.sh: line 48: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmpjf65mki0.sh: line 48: syntax error near `=''

    /tmp/tmpjf65mki0.sh: line 48: `    elif [[ $i =''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  while read -r number; do\n\
    \    (( count++ ))\n    if [[ $number =~ ^-?[0-9]+$ ]]; then\n      (( sum +=\
    \ $number ))\n    elif (( count > 0 )); then\n      (( sum += $number ))\n   \
    \ fi\n  done <<< \"$numbers\"\n  echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprtppa0i3.sh: line 25: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmprtppa0i3.sh: line 25: ((: sum += 5.0 4.0 : syntax error: invalid arithmetic
    operator (error token is ".0 4.0 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    local number\n    for number\
    \ in $numbers; do\n        if [[ $number == -* ]]; then\n            ((count++))\n\
    \            continue\n        fi\n        if [[ $number == * ]]; then\n     \
    \       ((count++))\n            continue\n        fi\n        if [[ $number ==\
    \ * ]]; then\n            ((count++))\n            continue\n        fi\n    \
    \    if [[ $number == * ]]; then\n            ((count++))\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            ((count++))\n  \
    \          continue\n        fi\n        if [[ $number == * ]]; then\n       \
    \     ((count++))\n            continue\n        fi\n        if [[ $number ==\
    \ * ]]; then\n            ((count++))\n            continue\n        fi\n    \
    \    if [[ $number == * ]]; then\n            ((count++))\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            ((count++))\n  \
    \          continue\n        fi\n        if [[ $number == * ]]; then\n       \
    \     ((count++))\n            continue\n        fi\n        if [[ $number ==\
    \ * ]]; then\n            ((count++))\n            continue\n        fi\n    \
    \    if [[ $number == * ]]; then\n            ((count++))\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            ((count++))\n  \
    \          continue\n        fi\n        if [[ $number == * ]]; then\n       \
    \     ((count++))\n            continue\n        fi\n        if [[ $number ==\
    \ * ]]; then\n            ((count++))\n            continue\n        fi\n    \
    \    if [[ $number == * ]]; then\n            ((count++))\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            ((count++))\n  \
    \          continue\n        fi\n        if [[ $number == * ]]; then\n       \
    \     ((count++))\n            continue\n        fi\n        if [[ $number ==\
    \ * ]]; then\n            ((count++))\n            continue\n        fi\n    \
    \    if [[ $number == * ]]; then\n            ((count++))\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            ((count++))\n  \
    \          continue\n        fi\n        if [[ $number == * ]]; then\n       \
    \     ((count++))\n            continue\n        fi\n        if [[ $number ==\
    \ * ]]; then\n            ((count++))\n            continue\n        fi\n    \
    \    if [[ $number == * ]]; then\n            ((count++))\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            ((count++))\n  \
    \          continue\n        fi\n        if [[ $number == * ]]; then\n\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdm88dewe.sh: line 123: syntax error near unexpected token `}''

    /tmp/tmpdm88dewe.sh: line 123: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcsgioozl.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  local j\n  local\
    \ k\n  for (( i=0; i < ${#numbers}; i++ )); do\n    number=${numbers:$i:1}\n \
    \   if [[ $number =~ ^-?[0-9]+$ ]]; then\n      (( count++ ))\n      if (( count\
    \ > 1 )); then\n        sum=$(( sum + number ))\n      else\n        sum=$(( sum\
    \ + number * number ))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  while read number; do\n   \
    \ ((count++))\n    ((sum += number))\n  done <<< \"$numbers\"\n  if ((count >\
    \ 0)); then\n    ((sum *= count))\n  fi\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa9vpyzfr.sh: line 22: ((: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    (( count++\
    \ ))\n    (( sum += i * i ))\n  done\n  if (( count > 0 )); then\n    (( sum -=\
    \ $(( sum % 2 )) ))\n  fi\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb28jq0cu.sh: line 22: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpb28jq0cu.sh: line 22: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    local i=0\n    while [ $i\
    \ -lt ${#numbers} ]; do\n        if [[ ${numbers[$i]} -gt 0 ]]; then\n       \
    \     (( sum += ${numbers[$i]} * ${numbers[$i]} ))\n            (( count++ ))\n\
    \        fi\n        (( i++ ))\n    done\n    if [[ ${count} -gt 0 ]]; then\n\
    \        echo \"${sum}\"\n    else\n        echo \"0\"\n    fi\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg50bn9wy.sh: line 21: [[: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i\n  for i in $numbers;\
    \ do\n    if [ \"$i\" -gt 0 ]; then\n      (( sum += i ))\n      (( count++ ))\n\
    \    fi\n  done\n  if [ \"$count\" -gt 0 ]; then\n    odd=$(( sum / count ))\n\
    \  fi\n  if [ \"$odd\" -gt 0 ]; then\n    echo \"$odd\"\n  else\n    echo \"0\"\
    \n  fi\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpduqwbfkx.sh: line 22: [: 5.0: integer expression expected

    /tmp/tmpduqwbfkx.sh: line 22: [: 4.0: integer expression expected

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i\n  for i in $numbers;\
    \ do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n      if (( count\
    \ % 2 == 1 )); then\n        ((odd++))\n      fi\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  if (( count > 0 )); then\n    sum=$(( sum + $odd ))\n  fi\n\
    \  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo07rq6c7.sh: line 48: syntax error in conditional expression

    /tmp/tmpo07rq6c7.sh: line 49: syntax error near `}''

    /tmp/tmpo07rq6c7.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for ((i=0; i<${#list}; i++)); do\n    if [[\
    \ ${list[i]} -eq 0 ]]; then\n      continue\n    elif [[ ${list[i]} -eq -1 ]];\
    \ then\n      continue\n    elif [[ ${list[i]} -eq 1 ]]; then\n      sum=$((sum+${list[i]}))\n\
    \    elif [[ ${list[i]} -eq 2 ]]; then\n      sum=$((sum+${list[i]}*${list[i]}))\n\
    \    elif [[ ${list[i]} -eq 3 ]]; then\n      sum=$((sum+${list[i]}*${list[i]}*${list[i]}))\n\
    \    elif [[ ${list[i]} -eq 4 ]]; then\n      sum=$((sum+${list[i]}*${list[i]}*${list[i]}*${list[i]}))\n\
    \    elif [[ ${list[i]} -eq 5 ]]; then\n      sum=$((sum+${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}))\n\
    \    elif [[ ${list[i]} -eq 6 ]]; then\n      sum=$((sum+${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}))\n\
    \    elif [[ ${list[i]} -eq 7 ]]; then\n      sum=$((sum+${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}))\n\
    \    elif [[ ${list[i]} -eq 8 ]]; then\n      sum=$((sum+${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}))\n\
    \    elif [[ ${list[i]} -eq 9 ]]; then\n      sum=$((sum+${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}))\n\
    \    elif [[ ${list[i]} -eq 10 ]]; then\n      sum=$((sum+${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}*${list[i]}\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeex9sq2e.sh: line 43: unexpected EOF while looking for matching
    `)''

    /tmp/tmpeex9sq2e.sh: line 62: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    fi\n  done\n  if [[ $sum -gt 0 ]]; then\n\
    \    echo $sum\n  else\n    echo 0\n  fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i\n  for i in $numbers;\
    \ do\n    (( count++ ))\n    (( sum += i * i ))\n    (( odd += ( $i & 1 ) ))\n\
    \  done\n  echo $(( sum - odd ))\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr3rlxswu.sh: line 23: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpr3rlxswu.sh: line 24: ((: odd += ( 5.0 & 1 ) : syntax error: invalid arithmetic
    operator (error token is ".0 & 1 ) ")

    /tmp/tmpr3rlxswu.sh: line 23: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpr3rlxswu.sh: line 24: ((: odd += ( 4.0 & 1 ) : syntax error: invalid arithmetic
    operator (error token is ".0 & 1 ) ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i * i ))\n    elif [[ $i\
    \ =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((\
    \ sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum +=\
    \ i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum +=\
    \ i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i * i \n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsmfc1z5s.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmpsmfc1z5s.sh: line 66: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i=0\n  while [ \"$i\" -lt \"$#\" ] && [ \"$list\"\
    \ != \"\" ]; do\n    (( sum += $(( ${list[i]} * ${list[i]} )) ))\n    (( i++ ))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpofngfdmg.sh: line 20: 5.0 4.0 * 5.0 4.0 : syntax error: invalid
    arithmetic operator (error token is ".0 4.0 * 5.0 4.0 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i\n  for i in $numbers;\
    \ do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n      if (( count\
    \ % 2 == 1 )); then\n        ((odd++))\n      fi\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  if (( count > 0 )); then\n    sum=$(( sum + $odd ))\n  fi\n\
    \  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  local j\n  local\
    \ k\n  local sum_square\n  local result\n  local tmp\n  local tmp2\n  local tmp3\n\
    \  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local tmp8\n  local\
    \ tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n\
    \  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n  local tmp19\n \
    \ local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local tmp24\n  local\
    \ tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n\
    \  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n  local tmp35\n \
    \ local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local tmp40\n  local\
    \ tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n\
    \  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n  local tmp51\n \
    \ local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local tmp56\n  local\
    \ tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n\
    \  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n  local tmp67\n \
    \ local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local tmp72\n  local\
    \ tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n\
    \  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n  local tmp83\n \
    \ local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local tmp88\n  local\
    \ tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n\
    \  local \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      (( sum += $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      (( sum += $i * $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]];\
    \ then\n      (( sum += $i * $i * $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += $i * $i * $i * $i ))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum\
    \ += $i * $i * $i * $i * $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += $i * $i * $i * $i * $i *\
    \ $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += $i * $i * $i * $i * $i * $i * $i ))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += $i * $i * $i * $i * $i * $i * $i *\
    \ $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += $i * $i\
    \ * $i * $i * $i * $i * $i * $i * $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      (( sum += $i * $i * $i * $i * $i * $i * $i * $i * $i * $i ))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += $i * $i\
    \ * $i * $i * $i * $i * $i * $i * $i * $i * $i ))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx0e8ezi0.sh: line 42: syntax error in conditional expression

    /tmp/tmpx0e8ezi0.sh: line 43: syntax error near `}''

    /tmp/tmpx0e8ezi0.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n\n  for ((i=0; i<${#numbers};\
    \ i++)); do\n    number=${numbers:$i:1}\n    if [[ $number =~ ^-?[0-9]+$ ]]; then\n\
    \      if (( ${number:0:1} % 2 == 1 )); then\n        sum=$((sum + number))\n\
    \        count=$((count + 1))\n      fi\n    fi\n  done\n\n  if (( count > 0 ));\
    \ then\n    sum=$((sum * 2))\n  fi\n\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    if [[\
    \ $i =~ ^-?[0-9]+$ ]]; then\n      (( sum += $i ))\n      (( count++ ))\n    fi\n\
    \  done\n  if [[ $count -eq 0 ]]; then\n    echo $sum\n  else\n    echo $(( sum\
    \ * sum / count ))\n  fi\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    if [[\
    \ $i =~ ^-?[0-9]+$ ]]; then\n      (( sum += i * i ))\n      (( count++ ))\n \
    \   fi\n  done\n  if [[ $count -eq 0 ]]; then\n    echo $sum\n  else\n    echo\
    \ $sum\n  fi\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local result\n  local i\n \
    \ for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n\
    \      sum=$((sum + i))\n    fi\n  done\n  if [[ $count -eq 0 ]]; then\n    result=0\n\
    \  else\n    result=$((sum*sum))\n  fi\n  echo $result\n}\n\ncandidate() {\n \
    \   double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  local j\n  local\
    \ odd\n  local even\n  local odds\n  local evens\n  local sum2\n  local sum3\n\
    \  local sum4\n  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local\
    \ sum9\n  local sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n\
    \  local sum15\n  local sum16\n  local sum17\n  local sum18\n  local sum19\n \
    \ local sum20\n  local sum21\n  local sum22\n  local sum23\n  local sum24\n  local\
    \ sum25\n  local sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n\
    \  local sum31\n  local sum32\n  local sum33\n  local sum34\n  local sum35\n \
    \ local sum36\n  local sum37\n  local sum38\n  local sum39\n  local sum40\n  local\
    \ sum41\n  local sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n\
    \  local sum47\n  local sum48\n  local sum49\n  local sum50\n  local sum51\n \
    \ local sum52\n  local sum53\n  local sum54\n  local sum55\n  local sum56\n  local\
    \ sum57\n  local sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n\
    \  local sum63\n  local sum64\n  local sum65\n  local sum66\n  local sum67\n \
    \ local sum68\n  local sum69\n  local sum70\n  local sum71\n  local sum72\n  local\
    \ sum73\n  local sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n\
    \  local sum79\n  local sum80\n  local sum81\n  local sum82\n  local sum83\n \
    \ local sum84\n  local sum85\n  local sum86\n  local sum87\n  local sum88\n  local\
    \ sum89\n  local sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n\
    \  \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local odd\n  local i\n  for\
    \ i in $numbers; do\n    number=$i\n    if [[ $number =~ ^-?[0-9]+$ ]]; then\n\
    \      odd=$(( number % 2 ))\n      if [[ $odd -eq 1 ]]; then\n        sum=$((\
    \ sum + number ))\n        count=$(( count + 1 ))\n      fi\n    fi\n  done\n\
    \  if [[ $count -eq 0 ]]; then\n    echo $sum\n  else\n    echo $sum\n  fi\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    else\n      sum=$((sum + 0))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjq2qevze.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i\n\n  for ((i=0; i<${#numbers};\
    \ i++)); do\n    ((count++))\n    ((odd=odd+${numbers[i]}))\n  done\n\n  if [[\
    \ ${count} -gt 0 ]]; then\n    sum=$((sum+odd))\n  fi\n\n  return $sum\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      ((sum+=i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n \
    \   elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n  \
    \    ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n \
    \   elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      ((sum+=$(echo \"$i\" | bc \n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7hlafkx2.sh: line 45: unexpected EOF while looking for matching
    `)''

    /tmp/tmp7hlafkx2.sh: line 64: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local number\n  for number in $numbers; do\n    if [[ $number\
    \ == -* ]]; then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n\
    \    elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpikzg_z1h.sh: line 108: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpikzg_z1h.sh: line 108: syntax error near `$number''

    /tmp/tmpikzg_z1h.sh: line 108: `    elif [[ $number ''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: -1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i=0\n  while [ $i -lt\
    \ ${#numbers} ]; do\n    local number=${numbers:$i:1}\n    if [[ $number == -*\
    \ ]]; then\n      (( count++ ))\n      continue\n    fi\n    if [[ $number ==\
    \ * ]]; then\n      (( odd++ ))\n      continue\n    fi\n    if [[ $number ==\
    \ * ]]; then\n      (( count++ ))\n      continue\n    fi\n    if [[ $number ==\
    \ -* ]]; then\n      (( odd++ ))\n      continue\n    fi\n    if [[ $number ==\
    \ 0 ]]; then\n      (( count++ ))\n      continue\n    fi\n    (( sum += $number\
    \ ))\n    (( i++ ))\n  done\n  if (( count > 0 )) ; then\n    echo 0\n  else\n\
    \    echo $sum\n  fi\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=6 encoding='utf-8'>
  timestamp: 1660052765
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local n\n  local i\n  for n in $numbers; do\n    if [[ $n =~\
    \ ^-?[0-9]+$ ]]; then\n      (( sum += $n ))\n    else\n      (( sum += $n * $n\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp69ps1uhz.sh: line 24: ((: sum += 5.0 * 5.0 : syntax error: invalid
    arithmetic operator (error token is ".0 * 5.0 ")

    /tmp/tmp69ps1uhz.sh: line 24: ((: sum += 4.0 * 4.0 : syntax error: invalid arithmetic
    operator (error token is ".0 * 4.0 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i=0\n  while [ $i -lt ${#numbers} ]; do\n    local number=${numbers:$i:1}\n\
    \    if [[ $number =~ ^-?[0-9]+$ ]]; then\n      sum=$((sum + $number))\n    fi\n\
    \    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  for i in $numbers;\
    \ do\n    number=$(( $i + 1 ))\n    if [ $number -eq 0 ]; then\n      continue\n\
    \    elif [ $number -eq 1 ]; then\n      sum=$(( $sum + $number ))\n      count=$((\
    \ $count + 1 ))\n    elif [ $number -eq 2 ]; then\n      sum=$(( $sum + $number\
    \ ))\n      count=$(( $count + 1 ))\n    elif [ $number -le 0 ]; then\n      continue\n\
    \    elif [ $number -le 2 ]; then\n      sum=$(( $sum + $number ))\n      count=$((\
    \ $count + 1 ))\n    elif [ $number -le 3 ]; then\n      sum=$(( $sum + $number\
    \ ))\n      count=$(( $count + 1 ))\n    elif [ $number -le 4 ]; then\n      sum=$((\
    \ $sum + $number ))\n      count=$(( $count + 1 ))\n    elif [ $number -le 5 ];\
    \ then\n      sum=$(( $sum + $number ))\n      count=$(( $count + 1 ))\n    elif\
    \ [ $number -le 6 ]; then\n      sum=$(( $sum + $number ))\n      count=$(( $count\
    \ + 1 ))\n    elif [ $number -le 7 ]; then\n      sum=$(( $sum + $number ))\n\
    \      count=$(( $count + 1 ))\n    elif [ $number -le 8 ]; then\n      sum=$((\
    \ $sum + $number ))\n      count=$(( $count + 1 ))\n    elif [ $number -le 9 ];\
    \ then\n      sum=$(( $sum + $number ))\n      count=$(( $count + 1 ))\n    elif\
    \ [ $number -le 10 ]; then\n      sum=$(( $sum + $number ))\n      count=$(( $count\
    \ + 1 ))\n    elif [ $number -le 11 ]; then\n      sum=$(( $sum + $number ))\n\
    \      count=$(( $count + 1 ))\n    elif [ $number -le 12 ]; then\n      sum=$((\
    \ $sum + $number ))\n      count=$(( $count + 1 ))\n    elif [ $number -le 13\
    \ ]; then\n      sum=$(( $sum + $number ))\n      count=$(( $count + 1 ))\n  \
    \  elif [ $number -le 14 ]; then\n      sum=$(( $sum + $number ))\n      count=$((\
    \ $count + 1 ))\n    elif [ $number -le 15 ]; then\n      sum=$((\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6dhi_g2l.sh: line 73: unexpected EOF while looking for matching
    `)''

    /tmp/tmp6dhi_g2l.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  for i in $numbers;\
    \ do\n    ((count++))\n    if [[ $i -lt 0 ]]; then\n      continue\n    elif [[\
    \ $i -gt 0 ]]; then\n      ((sum+=i))\n    fi\n  done\n  if [[ $count -eq 0 ]];\
    \ then\n    echo $sum\n  else\n    echo $sum\n  fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp16vmbc3y.sh: line 23: [[: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmp16vmbc3y.sh: line 25: [[: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp16vmbc3y.sh: line 23: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp16vmbc3y.sh: line 25: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif\
    \ [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2msjluf8.sh: line 48: syntax error in conditional expression

    /tmp/tmp2msjluf8.sh: line 49: syntax error near `}''

    /tmp/tmp2msjluf8.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i))\n   \
    \ elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i\
    \ * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i *\
    \ $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpezhejh7q.sh: line 42: syntax error in conditional expression

    /tmp/tmpezhejh7q.sh: line 43: syntax error near `}''

    /tmp/tmpezhejh7q.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i\n  for i in $numbers;\
    \ do\n    (( count++ ))\n    (( sum += i * i ))\n    (( odd += ( $i & 1 ) ))\n\
    \  done\n  echo $(( sum - odd ))\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr3rlxswu.sh: line 23: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpr3rlxswu.sh: line 24: ((: odd += ( 5.0 & 1 ) : syntax error: invalid arithmetic
    operator (error token is ".0 & 1 ) ")

    /tmp/tmpr3rlxswu.sh: line 23: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpr3rlxswu.sh: line 24: ((: odd += ( 4.0 & 1 ) : syntax error: invalid arithmetic
    operator (error token is ".0 & 1 ) ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    local number\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local oddsum\n\
    \    local evensum\n    local i\n    local j\n    local k\n    local odd\n   \
    \ local even\n    local oddsum\n    local evensum\n    local i\n    local j\n\
    \    local k\n    local odd\n    local even\n    local oddsum\n    local evensum\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ oddsum\n    local evensum\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local oddsum\n    local evensum\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local oddsum\n    local evensum\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ oddsum\n    local evensum\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local oddsum\n    local evensum\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local oddsum\n    local evensum\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ oddsum\n    local evensum\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local oddsum\n    local evensum\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local oddsum\n    local evensum\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ oddsum\n    local evensum\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local oddsum\n    local evensum\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local oddsum\n    local evensum\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ oddsum\n    local evensum\n    local i\n    local j\n    local k\n\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb0wjjesk.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmpb0wjjesk.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local negative=0\n  local integer=0\n\
    \  local non_negative=0\n  local non_integer=0\n  local non_negative_integer=0\n\
    \  local non_negative_integer_non_negative=0\n  local non_negative_integer_non_negative_integer=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative=0\n  local non_negative_integer_non_negative_integer_non_negative_integer=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative_integer_non_negative=0\n\
    \  local non_negative_integer_non_negative_integer_non_negative_integer_non_\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for (( i=0; i<${#list}; i++ )); do\n    if [[\
    \ ${list[i]} -eq 0 ]]; then\n      continue\n    elif [[ ${list[i]} -eq -1 ]];\
    \ then\n      continue\n    elif [[ ${list[i]} -eq 1 ]]; then\n      continue\n\
    \    elif [[ ${list[i]} -eq 2 ]]; then\n      continue\n    elif [[ ${list[i]}\
    \ -eq 3 ]]; then\n      continue\n    elif [[ ${list[i]} -eq 4 ]]; then\n    \
    \  continue\n    elif [[ ${list[i]} -eq 5 ]]; then\n      continue\n    elif [[\
    \ ${list[i]} -eq 6 ]]; then\n      continue\n    elif [[ ${list[i]} -eq 7 ]];\
    \ then\n      continue\n    elif [[ ${list[i]} -eq 8 ]]; then\n      continue\n\
    \    elif [[ ${list[i]} -eq 9 ]]; then\n      continue\n    elif [[ ${list[i]}\
    \ -eq 10 ]]; then\n      continue\n    elif [[ ${list[i]} -eq 11 ]]; then\n  \
    \    continue\n    elif [[ ${list[i]} -eq 12 ]]; then\n      continue\n    elif\
    \ [[ ${list[i]} -eq 13 ]]; then\n      continue\n    elif [[ ${list[i]} -eq 14\
    \ ]]; then\n      continue\n    elif [[ ${list[i]} -eq 15 ]]; then\n      continue\n\
    \    elif [[ ${list[i]} -eq 16 ]]; then\n      continue\n    elif [[ ${list[i]}\
    \ -eq 17 ]]; then\n      continue\n    elif [[ ${list[i]} -eq 18 ]]; then\n  \
    \    continue\n    elif [[ ${list[i]} -eq 19 ]]; then\n      continue\n    elif\
    \ [[ ${list[i]} -eq 20 ]]; then\n      continue\n    elif [[ ${list[i]} -eq 21\
    \ ]]; then\n      continue\n    elif [[ ${list[i]} -eq 22 ]]; then\n      continue\n\
    \    elif [[ ${list[i]} -eq 23 ]]; then\n      continue\n    elif [[ ${list[i]}\
    \ -eq 24 ]]; then\n      continue\n    elif [[ ${list[i]} -eq 25 ]]; then\n  \
    \    continue\n    elif [[ ${list[i]} -eq 26 ]]; then\n      continue\n    elif\
    \ [[ ${list[i]} -eq 27 ]]; then\n      continue\n    elif [[ ${list[i]} -eq 28\
    \ ]]; then\n      continue\n    elif [[ \n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmy_n30uh.sh: line 81: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpmy_n30uh.sh: line 81: syntax error near `}''

    /tmp/tmpmy_n30uh.sh: line 81: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz3llztcf.sh: line 48: syntax error in conditional expression

    /tmp/tmpz3llztcf.sh: line 49: syntax error near `}''

    /tmp/tmpz3llztcf.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  local j\n  local\
    \ odd\n  local even\n  local negative\n  local integer\n  local result\n\n  negative=false\n\
    \  integer=false\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n\
    \      integer=true\n      negative=true\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$\
    \ ]]; then\n      integer=true\n      negative=true\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n      negative=true\n    elif\
    \ [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n\
    \      negative=true\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      integer=true\n      negative=true\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n\
    \      negative=true\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n      negative=true\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      integer=true\n      negative=true\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      integer=true\n      negative=true\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      integer=true\n      negative=true\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      integer=true\n      negative=true\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      integer=true\n      negative=true\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n      negative=\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpycik5orj.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmpycik5orj.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i=0\n  while [ $i -lt ${#numbers} ]; do\n    local number=${numbers[$i]}\n\
    \    if [[ $number == -* ]]; then\n      number=${number/-/}\n      number=${number/+/}\n\
    \      number=${number/-/}\n      number=${number/+/}\n      number=${number/-/}\n\
    \      number=${number/+/}\n      number=${number/-/}\n      number=${number/+/}\n\
    \      number=${number/-/}\n      number=${number/+/}\n      number=${number/-/}\n\
    \      number=${number/+/}\n      number=${number/-/}\n      number=${number/+/}\n\
    \      number=${number/-/}\n      number=${number/+/}\n      number=${number/-/}\n\
    \      number=${number/+/}\n      number=${number/-/}\n      number=${number/+/}\n\
    \      number=${number/-/}\n      number=${number/+/}\n      number=${number/-/}\n\
    \      number=${number/+/}\n      number=${number/-/}\n      number=${number/+/}\n\
    \      number=${number/-/}\n      number=${number/+/}\n      number=${number/-/}\n\
    \      number=${number/+/}\n      number=${number/-/}\n      number=${number/+/}\n\
    \      number=${number/-/}\n      number=${number/+/}\n      number=${number/-/}\n\
    \      number=${number/+/}\n      number=${number/-/}\n      number=${number/+/}\n\
    \      number=${number/-/}\n      number=${number/+/}\n      number=${number/-/}\n\
    \      number=${number/+/}\n      number=${number/-/}\n      number=${number/+/}\n\
    \      number=${number/-/}\n      number=${number/+/}\n      number=${number/-/}\n\
    \      number=${number/+/}\n      number=${number/-/}\n      number=${number/+/}\n\
    \      number=${number/-/}\n      number=${number/+/}\n      number=${number/-/}\n\
    \      number=${number/+/}\n      number=${number/\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn8arpk59.sh: line 95: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i=0\n  while [ $i -lt ${#numbers} ]; do\n    if [[ ${numbers[$i]}\
    \ -eq 0 ]]; then\n      sum=$((sum + 0))\n    elif [[ ${numbers[$i]} -eq 1 ]];\
    \ then\n      sum=$((sum + numbers[$i]))\n    elif [[ ${numbers[$i]} -eq 2 ]];\
    \ then\n      sum=$((sum + numbers[$i]*numbers[$i]))\n    elif [[ ${numbers[$i]}\
    \ -eq 3 ]]; then\n      sum=$((sum + numbers[$i]*numbers[$i]*numbers[$i]))\n \
    \   elif [[ ${numbers[$i]} -eq 4 ]]; then\n      sum=$((sum + numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]))\n\
    \    elif [[ ${numbers[$i]} -eq 5 ]]; then\n      sum=$((sum + numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]))\n\
    \    elif [[ ${numbers[$i]} -eq 6 ]]; then\n      sum=$((sum + numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]))\n\
    \    elif [[ ${numbers[$i]} -eq 7 ]]; then\n      sum=$((sum + numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]))\n\
    \    elif [[ ${numbers[$i]} -eq 8 ]]; then\n      sum=$((sum + numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]))\n\
    \    elif [[ ${numbers[$i]} -eq 9 ]]; then\n      sum=$((sum + numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]*numbers[$i]))\n\
    \    elif [[ ${numbers[$i]} -eq 10 ]]; then\n      sum=$((sum + numbers[$i]*numbers[$i]*number\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpssfs6jzs.sh: line 41: unexpected EOF while looking for matching
    `)''

    /tmp/tmpssfs6jzs.sh: line 60: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local sum_square=0\n  local odd=0\n  local\
    \ negative=0\n  local integer=0\n  local non_number=0\n  local non_number_string=\"\
    \"\n  local non_number_string2=\"\"\n  local non_number_string3=\"\"\n  local\
    \ non_number_string4=\"\"\n  local non_number_string5=\"\"\n  local non_number_string6=\"\
    \"\n  local non_number_string7=\"\"\n  local non_number_string8=\"\"\n  local\
    \ non_number_string9=\"\"\n  local non_number_string10=\"\"\n  local non_number_string11=\"\
    \"\n  local non_number_string12=\"\"\n  local non_number_string13=\"\"\n  local\
    \ non_number_string14=\"\"\n  local non_number_string15=\"\"\n  local non_number_string16=\"\
    \"\n  local non_number_string17=\"\"\n  local non_number_string18=\"\"\n  local\
    \ non_number_string19=\"\"\n  local non_number_string20=\"\"\n  local non_number_string21=\"\
    \"\n  local non_number_string22=\"\"\n  local non_number_string23=\"\"\n  local\
    \ non_number_string24=\"\"\n  local non_number_string25=\"\"\n  local non_number_string26=\"\
    \"\n  local non_number_string27=\"\"\n  local non_number_string28=\"\"\n  local\
    \ non_number_string29=\"\"\n  local non_number_string30=\"\"\n  local non_number_string31=\"\
    \"\n  local non_number_string32=\"\"\n  local non_number_string33=\"\"\n  local\
    \ non_number_string34=\"\"\n  local non_number_string35=\"\"\n  local non_number_string36=\"\
    \"\n  local non_number_string37=\"\"\n  local non_number_string38=\"\"\n  local\
    \ non_number_string39=\"\"\n  local non_number_string40=\"\"\n  local non_number_string41=\"\
    \"\n  local non_number_string42=\"\"\n  local non_number_string43=\"\"\n  local\
    \ non_number_string44=\"\"\n  local non_number_string45=\"\"\n  local non_number_string46=\"\
    \"\n  local non_number_string47=\"\"\n  local non_number_string48=\"\"\n  local\
    \ non_number_string49=\"\"\n  local non_number_string50=\"\"\n  local non_number_string51=\"\
    \"\n  local non_number_string52=\"\"\n  local non_number_string53=\"\"\n  local\
    \ non_number_string54=\"\"\n  local non_number_string55=\"\"\n  local non_number_string56=\"\
    \"\n  local non_number_string57=\"\"\n  local non_number_string58=\"\"\n  local\
    \ non_number_string59\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    for number in $numbers; do\n        if (( number\
    \ % 2 )); then\n            sum=$(( $sum + $number ))\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl1132qbm.sh: line 19: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpl1132qbm.sh: line 19: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    for number in $numbers; do\n        if [[ $number\
    \ == -* ]]; then\n            sum=$((sum + 0))\n        elif [[ $number == * ]];\
    \ then\n            sum=$((sum + number))\n        elif [[ $number == 0 ]]; then\n\
    \            sum=$((sum + 0))\n        else\n            sum=$((sum + $((number\
    \ ** 2))))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7411g72d.sh: line 22: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcsgioozl.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local number\n  local i\n  for i in $numbers; do\n    number=$((\
    \ i + 1 ))\n    if [ $number -eq 0 ]; then\n      continue\n    elif [ $number\
    \ -eq 1 ]; then\n      sum=$(( sum + number ))\n    elif [ $number -eq 2 ]; then\n\
    \      sum=$(( sum + 2 * number ))\n    elif [ $number -eq 3 ]; then\n      sum=$((\
    \ sum + 3 * number ))\n    elif [ $number -eq 4 ]; then\n      sum=$(( sum + 4\
    \ * number ))\n    elif [ $number -eq 5 ]; then\n      sum=$(( sum + 5 * number\
    \ ))\n    elif [ $number -eq 6 ]; then\n      sum=$(( sum + 6 * number ))\n  \
    \  elif [ $number -eq 7 ]; then\n      sum=$(( sum + 7 * number ))\n    elif [\
    \ $number -eq 8 ]; then\n      sum=$(( sum + 8 * number ))\n    elif [ $number\
    \ -eq 9 ]; then\n      sum=$(( sum + 9 * number ))\n    elif [ $number -eq 10\
    \ ]; then\n      sum=$(( sum + 10 * number ))\n    elif [ $number -eq 11 ]; then\n\
    \      sum=$(( sum + 11 * number ))\n    elif [ $number -eq 12 ]; then\n     \
    \ sum=$(( sum + 12 * number ))\n    elif [ $number -eq 13 ]; then\n      sum=$((\
    \ sum + 13 * number ))\n    elif [ $number -eq 14 ]; then\n      sum=$(( sum +\
    \ 14 * number ))\n    elif [ $number -eq 15 ]; then\n      sum=$(( sum + 15 *\
    \ number ))\n    elif [ $number -eq 16 ]; then\n      sum=$(( sum + 16 * number\
    \ ))\n    elif [ $number -eq 17 ]; then\n      sum=$(( sum + 17 * number ))\n\
    \    elif [ $number -eq 18 ]; then\n      sum=$(( sum + 18 * number ))\n    elif\
    \ [ $number -eq 19 ]; then\n      sum=$(( sum + 19 * number ))\n    elif [ $number\
    \ -eq 20 ]; then\n      sum=$(( sum + 20 * number ))\n    elif [ $number -eq 21\
    \ ]; then\n      sum=$(( sum + 21 * number ))\n    elif [ $number -eq 22 ]; then\n\
    \      sum=$(( sum + 22 * number ))\n    elif [ $number -eq 23 ]; then\n     \
    \ sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyucus79a.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmpyucus79a.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i))\n   \
    \ elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i\
    \ * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i *\
    \ $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpezhejh7q.sh: line 42: syntax error in conditional expression

    /tmp/tmpezhejh7q.sh: line 43: syntax error near `}''

    /tmp/tmpezhejh7q.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    for number in $numbers;\
    \ do\n        if [[ $number == -* ]]; then\n            echo \"$number is a negative\
    \ number\"\n            return 0\n        elif [[ $number == * ]]; then\n    \
    \        echo \"$number is an integer\"\n            return 0\n        elif [[\
    \ $number == * ]]; then\n            echo \"$number is an integer\"\n        \
    \    return 0\n        elif [[ $number == * ]]; then\n            echo \"$number\
    \ is an integer\"\n            return 0\n        elif [[ $number == * ]]; then\n\
    \            echo \"$number is an integer\"\n            return 0\n        elif\
    \ [[ $number == * ]]; then\n            echo \"$number is an integer\"\n     \
    \       return 0\n        elif [[ $number == * ]]; then\n            echo \"$number\
    \ is an integer\"\n            return 0\n        elif [[ $number == * ]]; then\n\
    \            echo \"$number is an integer\"\n            return 0\n        elif\
    \ [[ $number == * ]]; then\n            echo \"$number is an integer\"\n     \
    \       return 0\n        elif [[ $number == * ]]; then\n            echo \"$number\
    \ is an integer\"\n            return 0\n        elif [[ $number == * ]]; then\n\
    \            echo \"$number is an integer\"\n            return 0\n        elif\
    \ [[ $number == * ]]; then\n            echo \"$number is an integer\"\n     \
    \       return 0\n        elif [[ $number == * ]]; then\n            echo \"$number\
    \ is an integer\"\n            return 0\n        elif [[ $number == * ]]; then\n\
    \            echo \"$number is an integer\"\n            return 0\n        elif\
    \ [[ $number == * ]]; then\n            echo \"$number is an integer\"\n     \
    \       return 0\n        elif [[ $number == * ]]; then\n            echo \"$number\
    \ is an integer\"\n            return 0\n        elif [[ $number == * ]]; then\n\
    \            echo \"$number is an integer\"\n            return 0\n        elif\
    \ [[ $number == * ]]; then\n            echo \"$number is an integer\"\n     \
    \       return 0\n        elif [[ $number == * ]]; then\n            echo \"$number\
    \ is an integer\"\n            return 0\n        elif [[ $number == * ]]; then\n\
    \            echo \"$number is an integer\"\n            return 0\n        elif\
    \ [[ $number == * ]]; then\n            echo \"$number is an integer\"\n     \
    \       return 0\n        elif [[ $number == * ]]; then\n            echo \"$number\
    \ is an integer\"\n            return 0\n        elif [[ $number == * ]]; then\n\
    \            echo \"$number is an integer\"\n            return 0\n        elif\
    \ [[ $number == * ]]; then\n            echo \"$number is an integer\"\n     \
    \       return 0\n        elif [[ $number == * ]]; then\n            echo \"$number\
    \ is an integer\"\n            return 0\n        elif [[ $number == * ]]; then\n\
    \            echo \"$number is an integer\"\n            return 0\n        elif\
    \ [[ $number == * ]]; then\n            echo \"$number is an integer\"\n     \
    \       return 0\n\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp35gr06bu.sh: line 102: syntax error near unexpected token `}''

    /tmp/tmp35gr06bu.sh: line 102: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    local i=0\n    while [ $i\
    \ -lt ${#numbers} ]; do\n        if [[ ${numbers[$i]} -gt 0 ]]; then\n       \
    \     (( sum += ${numbers[$i]} * ${numbers[$i]} ))\n            (( count++ ))\n\
    \        fi\n        (( i++ ))\n    done\n    if [ $count -eq 0 ]; then\n    \
    \    echo \"0\"\n    else\n        echo \"$sum\"\n    fi\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppyvg_q21.sh: line 21: [[: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif\
    \ [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2msjluf8.sh: line 48: syntax error in conditional expression

    /tmp/tmp2msjluf8.sh: line 49: syntax error near `}''

    /tmp/tmp2msjluf8.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local i=0\n    while [ $i -lt ${#list} ];\
    \ do\n        if [[ ${list[i]} -eq 0 ]]; then\n            sum=0\n           \
    \ break\n        fi\n        if [[ ${list[i]} -eq 1 ]]; then\n            sum=$((sum\
    \ + ${list[i]}))\n        fi\n        if [[ ${list[i]} -eq 2 ]]; then\n      \
    \      sum=$((sum + ${list[i]} * ${list[i]}))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprdecjrk7.sh: line 20: [[: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    /tmp/tmprdecjrk7.sh: line 24: [[: 5.0 4.0: syntax error: invalid arithmetic operator
    (error token is ".0 4.0")

    /tmp/tmprdecjrk7.sh: line 27: [[: 5.0 4.0: syntax error: invalid arithmetic operator
    (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    local lastNumber=0\n   \
    \ local lastNumberCount=0\n    local lastNumberSum=0\n    local lastNumberSumCount=0\n\
    \    local lastNumberSumSquare=0\n    local lastNumberSumSquareCount=0\n    local\
    \ lastNumberSumSquareRoot=0\n    local lastNumberSumSquareRootCount=0\n    local\
    \ lastNumberSumSquareRootPower=0\n    local lastNumberSumSquareRootPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPower=0\n    local lastNumberSumSquareRootPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPower=0\n    local lastNumberSumSquareRootPowerPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPower=0\n    local lastNumberSumSquareRootPowerPowerPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPower=0\n    local lastNumberSumSquareRootPowerPowerPowerPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPower=0\n    local\
    \ lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerCount=0\n    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPower=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPower=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPower=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerCount=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower=0\n\
    \    local lastNumberSumSquareRootPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    for number in $numbers;\
    \ do\n        if (( number % 2 )); then\n            sum=$(( $sum + $number ))\n\
    \            count=$(( $count + 1 ))\n        fi\n    done\n    if (( $count ));\
    \ then\n        echo \"$sum\"\n    else\n        echo \"0\"\n    fi\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbst8wrqd.sh: line 20: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpbst8wrqd.sh: line 20: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    fi\n  done\n  if [[ $sum -gt 0 ]]; then\n\
    \    echo $sum\n  else\n    echo 0\n  fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      (( sum += $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      (( sum += $i * $i ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5fvmt4th.sh: line 23: ((: sum += 5.0 * 5.0 : syntax error: invalid
    arithmetic operator (error token is ".0 * 5.0 ")

    /tmp/tmp5fvmt4th.sh: line 23: ((: sum += 4.0 * 4.0 : syntax error: invalid arithmetic
    operator (error token is ".0 * 4.0 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local count=0\n  local odd=0\n  local num\n  while read\
    \ num; do\n    (( count++ ))\n    (( odd++ ))\n    (( sum += num * num ))\n  done\
    \ <<< \"$list\"\n  if (( count )); then\n    echo \"$sum\"\n  else\n    echo \"\
    0\"\n  fi\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt1c4hmhk.sh: line 24: ((: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local count=0\n  local number\n  local i\n  local j\n \
    \ local odd\n  local tmp\n\n  for number in $list; do\n    ((count++))\n    if\
    \ [[ $number =~ ^-?[0-9]+$ ]]; then\n      tmp=$((number * number))\n      if\
    \ (( tmp % 2 )); then\n        sum=$((sum + tmp))\n      fi\n    fi\n  done\n\n\
    \  if (( count > 0 )); then\n    sum=$((sum + count))\n  fi\n\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local odd\n  while read number;\
    \ do\n    ((count++))\n    ((odd=number%2))\n    ((sum+=number))\n  done <<< \"\
    $numbers\"\n  if (( count > 0 )); then\n    ((sum-=sum%2))\n  fi\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp43ozt6em.sh: line 23: ((: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    /tmp/tmp43ozt6em.sh: line 24: ((: 5.0 4.0: syntax error: invalid arithmetic operator
    (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n  local\
    \ j\n  for ((i=0; i<${#numbers}; i++)); do\n    number=${numbers:$i:1}\n    if\
    \ [[ ${number} =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n      if (( ${number}\
    \ % 2 == 1 )); then\n        ((odd++))\n      fi\n      sum=$(( ${sum} + ${number}\
    \ ))\n    fi\n  done\n  if (( ${count} > 0 )); then\n    sum=$(( ${sum} / ${count}\
    \ ))\n  fi\n  if (( ${odd} > 0 )); then\n    sum=$(( ${sum} / ${odd} ))\n  fi\n\
    \  echo \"${sum}\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i\n  for i in $numbers;\
    \ do\n    (( count++ ))\n    (( sum += i * i ))\n    (( odd += ( $i & 1 ) ))\n\
    \  done\n  echo $(( sum - odd ))\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr3rlxswu.sh: line 23: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpr3rlxswu.sh: line 24: ((: odd += ( 5.0 & 1 ) : syntax error: invalid arithmetic
    operator (error token is ".0 & 1 ) ")

    /tmp/tmpr3rlxswu.sh: line 23: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpr3rlxswu.sh: line 24: ((: odd += ( 4.0 & 1 ) : syntax error: invalid arithmetic
    operator (error token is ".0 & 1 ) ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb0wjjesk.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmpb0wjjesk.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    (( sum += i * i ))\n\
    \  done\n  if [ -z \"$list\" ]; then\n    sum=0\n  fi\n  echo \"$sum\"\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk0epvxq9.sh: line 20: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpk0epvxq9.sh: line 20: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local number\n  local i\n  for i in $numbers; do\n    number=$((\
    \ $i + 1 ))\n    if [ $number -gt 0 ]; then\n      if [ $number -eq 2 ]; then\n\
    \        sum=$(( $sum + $number ))\n      else\n        sum=$(( $sum + $number\
    \ * $number ))\n      fi\n    fi\n  done\n  if [ $sum -gt 0 ]; then\n    echo\
    \ $sum\n  else\n    echo 0\n  fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg9kt6ig_.sh: line 21: 5.0 + 1 : syntax error: invalid arithmetic
    operator (error token is ".0 + 1 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    for number in $numbers;\
    \ do\n        if [[ $number == -* ]]; then\n            sum=$((sum+0))\n     \
    \       count=$((count+1))\n        elif [[ $number == * ]]; then\n          \
    \  sum=$((sum+number))\n            count=$((count+1))\n        elif [[ $number\
    \ == * && $number != -* ]]; then\n            sum=$((sum+number*number))\n   \
    \         count=$((count+1))\n        fi\n    done\n    if [[ $count -gt 0 ]];\
    \ then\n        sum=$((sum+count*count))\n    fi\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxdvpu7r6.sh: line 24: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      ((sum+=i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      ((sum+=$(echo \"$i\" | bc -l)))\n    else\n      ((sum+=0))\n    fi\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx_j4lp47.sh: line 23: ((: sum+=5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpx_j4lp47.sh: line 23: ((: sum+=4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local i\n    for ((i=0; i<${#list}; i++));\
    \ do\n        if [[ ${list[i]} -gt 0 ]]; then\n            ((sum+=${list[i]}))\n\
    \        fi\n    done\n    if [[ ${#list} -eq 0 ]]; then\n        echo \"0\"\n\
    \    else\n        echo \"${sum}\"\n    fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzifax32k.sh: line 20: [[: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local odd\n  local i\n\n  for\
    \ ((i=0; i<${#numbers}; i++)); do\n    number=${numbers[i]}\n    if [[ $number\
    \ == -* ]]; then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n\
    \    elif [[ $number == 0 ]]; then\n      continue\n    elif [[ $number == 1 ]];\
    \ then\n      continue\n    elif [[ $number == 2 ]]; then\n      continue\n  \
    \  elif [[ $number == 3 ]]; then\n      continue\n    elif [[ $number == 4 ]];\
    \ then\n      continue\n    elif [[ $number == 5 ]]; then\n      continue\n  \
    \  elif [[ $number == 6 ]]; then\n      continue\n    elif [[ $number == 7 ]];\
    \ then\n      continue\n    elif [[ $number == 8 ]]; then\n      continue\n  \
    \  elif [[ $number == 9 ]]; then\n      continue\n    elif [[ $number == 10 ]];\
    \ then\n      continue\n    elif [[ $number == 11 ]]; then\n      continue\n \
    \   elif [[ $number == 12 ]]; then\n      continue\n    elif [[ $number == 13\
    \ ]]; then\n      continue\n    elif [[ $number == 14 ]]; then\n      continue\n\
    \    elif [[ $number == 15 ]]; then\n      continue\n    elif [[ $number == 16\
    \ ]]; then\n      continue\n    elif [[ $number == 17 ]]; then\n      continue\n\
    \    elif [[ $number == 18 ]]; then\n      continue\n    elif [[ $number == 19\
    \ ]]; then\n      continue\n    elif [[ $number == 20 ]]; then\n      continue\n\
    \    elif [[ $number == 21 ]]; then\n      continue\n    elif [[ $number == 22\
    \ ]]; then\n      continue\n    elif [[ $number == 23 ]]; then\n      continue\n\
    \    elif [[ $number == 24 ]]; then\n      continue\n    elif [[ $number == 25\
    \ ]]; then\n      continue\n    elif [[ $number == 26 ]]; then\n      continue\n\
    \    elif [[ $number == 27 ]]; then\n      continue\n    elif [[ $number == 28\
    \ ]]; then\n      continue\n    elif [[ $number == 29 ]]; then\n      continue\n\
    \    elif [[ $number == 30 ]]; then\n      continue\n    elif [[ $number == 31\
    \ ]]; then\n      continue\n    elif [[ $number == 32 ]]; then\n      continue\n\
    \    elif [[ $number == 33 ]]; then\n      continue\n    elif [[ $number == 34\
    \ ]]; then\n      continue\n    elif [[ $number == 35 ]]; then\n      continue\n\
    \    elif [[ $number == 36 ]]; then\n      continue\n    elif [[ $number == 37\
    \ ]]; then\n      continue\n    elif [[ $number == 38 ]]; then\n      continue\n\
    \    elif [[ $number == 39 ]]; then\n      continue\n\n}\n\ncandidate() {\n  \
    \  double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbvy2y576.sh: line 110: syntax error near unexpected token `}''

    /tmp/tmpbvy2y576.sh: line 110: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ \n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpssmbctb2.sh: line 48: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmpssmbctb2.sh: line 48: syntax error near `=~''

    /tmp/tmpssmbctb2.sh: line 48: `    elif [[ $i =~ ''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local i\n  for i in $numbers;\
    \ do\n    (( count++ ))\n    (( sum += i * i ))\n    (( odd += ( $i & 1 ) ))\n\
    \  done\n  echo $(( sum - odd ))\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr3rlxswu.sh: line 23: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpr3rlxswu.sh: line 24: ((: odd += ( 5.0 & 1 ) : syntax error: invalid arithmetic
    operator (error token is ".0 & 1 ) ")

    /tmp/tmpr3rlxswu.sh: line 23: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpr3rlxswu.sh: line 24: ((: odd += ( 4.0 & 1 ) : syntax error: invalid arithmetic
    operator (error token is ".0 & 1 ) ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    if [[\
    \ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n      if (( count % 2 == 1 ));\
    \ then\n        sum=$(( sum + i ))\n      fi\n    fi\n  done\n  if (( count >\
    \ 0 )); then\n    sum=$(( sum + count * count ))\n  fi\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local num\n  local i\n  local j\n  for ((i=0;\
    \ i<${#numbers}; i++)); do\n    if [[ ${numbers[i]} -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ ${numbers[i]} -eq -1 ]]; then\n      continue\n    fi\n   \
    \ if [[ ${numbers[i]} -eq 1 ]]; then\n      sum=$((sum+numbers[i]))\n      count=$((count+1))\n\
    \      continue\n    fi\n    if [[ ${numbers[i]} -gt 1 ]]; then\n      num=$(echo\
    \ \"${numbers[i]}\" | bc)\n      j=$((i+1))\n      while [[ ${numbers[j]} -eq\
    \ 0 ]] || [[ ${numbers[j]} -eq -1 ]] || [[ ${numbers[j]} -eq 1 ]]; then\n    \
    \    j=$((j+1))\n      done\n      sum=$((sum+num))\n      count=$((count+j-1))\n\
    \    fi\n  done\n  if [[ ${count} -gt 0 ]]; then\n    sum=$((sum+count))\n  fi\n\
    \  echo \"${sum}\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7rtur7wc.sh: line 37: syntax error near unexpected token `then''

    /tmp/tmp7rtur7wc.sh: line 37: `      while [[ ${numbers[j]} -eq 0 ]] || [[ ${numbers[j]}
    -eq -1 ]] || [[ ${numbers[j]} -eq 1 ]]; then''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n  for\
    \ i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n\
    \      if (( i % 2 )); then\n        ((odd++))\n      fi\n      sum=$(( sum +\
    \ i ))\n    fi\n  done\n  if (( count > 0 )); then\n    sum=$(( sum + odd * count\
    \ ))\n  fi\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    (( count++\
    \ ))\n    if (( i % 2 )); then\n      sum=$(( sum + i ))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7c3xseht.sh: line 22: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmp7c3xseht.sh: line 22: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local n\n  for n in $numbers; do\n    if [[ $n =~ ^-?[0-9]+$\
    \ ]]; then\n      ((sum+=n*n))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local negative=0\n  local integer=0\n\
    \  local non_integer=0\n  local non_negative=0\n  local non_zero=0\n  local non_non_zero=0\n\
    \  local non_negative_integer=0\n  local non_negative_integer_non_zero=0\n  local\
    \ non_negative_integer_non_non_zero=0\n  local non_negative_integer_non_negative=0\n\
    \  local non_negative_integer_non_non_negative=0\n  local non_negative_integer_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_negative=0\n  local non_negative_integer_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_negative=0\n  local non_negative_integer_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_negative=0\n  local non_negative_integer_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_negative=0\n  local non_negative_integer_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_negative=0\n  local\
    \ non_negative_integer_non_non_non_non_non_non_non_negative=0\n  local non_negative_integer_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_negative=0\n  local\
    \ non_negative_integer_non_non_non_non_non_non_non_non_negative=0\n  local non_negative_integer_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_negative_integer_non_non_non_non_non_non_non_non_\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [ \"$i\" -gt 0 ]; then\n\
    \      sum=$((sum + $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n  \
    \  double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpast13i83.sh: line 20: [: 5.0: integer expression expected

    /tmp/tmpast13i83.sh: line 20: [: 4.0: integer expression expected

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n  for\
    \ i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n\
    \      if (( count % 2 == 1 )); then\n        ((odd++))\n      fi\n      sum=$((\
    \ sum + $i ))\n    else\n      ((odd++))\n    fi\n  done\n  if (( odd > 0 ));\
    \ then\n    sum=$(( sum + $odd ))\n  fi\n  echo $sum\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  while read number; do\n   \
    \ (( count++ ))\n    (( sum += $number ))\n  done <<< \"$numbers\"\n  if (( count\
    \ > 0 )); then\n    (( sum *= 2 ))\n  fi\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe6pbs8gp.sh: line 22: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpe6pbs8gp.sh: line 22: ((: sum += 5.0 4.0 : syntax error: invalid arithmetic
    operator (error token is ".0 4.0 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    ((count++))\n\
    \    if [[ $i -lt 0 ]]; then\n      continue\n    elif [[ $i -gt 0 ]]; then\n\
    \      ((sum+=i))\n    fi\n  done\n  if [[ $count -eq 0 ]]; then\n    echo \"\
    0\"\n  else\n    echo \"$((sum*sum))\"\n  fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2pe6bijs.sh: line 22: [[: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmp2pe6bijs.sh: line 24: [[: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp2pe6bijs.sh: line 22: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp2pe6bijs.sh: line 24: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    (( i % 2 )) && sum=$((\
    \ sum + i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn0xxbisu.sh: line 20: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpn0xxbisu.sh: line 20: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local n=0\n    for number in $numbers; do\n\
    \        if [ $number -gt 0 ]; then\n            ((n++))\n            sum=$((sum\
    \ + $number))\n        fi\n    done\n    if [ $n -eq 0 ]; then\n        echo \"\
    0\"\n    else\n        echo \"$sum\"\n    fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf1n8r42f.sh: line 20: [: 5.0: integer expression expected

    /tmp/tmpf1n8r42f.sh: line 20: [: 4.0: integer expression expected

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  local j\n  local\
    \ sum_square\n  local result\n  local odd\n  local negative\n  local integer\n\
    \  local non_negative\n  local non_integer\n  local non_negative_integer\n  local\
    \ non_negative_integer_list\n  local non_negative_integer_list_length\n  local\
    \ non_negative_integer_list_length_count\n  local non_negative_integer_list_length_count2\n\
    \  local non_negative_integer_list_length_count3\n  local non_negative_integer_list_length_count4\n\
    \  local non_negative_integer_list_length_count5\n  local non_negative_integer_list_length_count6\n\
    \  local non_negative_integer_list_length_count7\n  local non_negative_integer_list_length_count8\n\
    \  local non_negative_integer_list_length_count9\n  local non_negative_integer_list_length_count10\n\
    \  local non_negative_integer_list_length_count11\n  local non_negative_integer_list_length_count12\n\
    \  local non_negative_integer_list_length_count13\n  local non_negative_integer_list_length_count14\n\
    \  local non_negative_integer_list_length_count15\n  local non_negative_integer_list_length_count16\n\
    \  local non_negative_integer_list_length_count17\n  local non_negative_integer_list_length_count18\n\
    \  local non_negative_integer_list_length_count19\n  local non_negative_integer_list_length_count20\n\
    \  local non_negative_integer_list_length_count21\n  local non_negative_integer_list_length_count22\n\
    \  local non_negative_integer_list_length_count23\n  local non_negative_integer_list_length_count24\n\
    \  local non_negative_integer_list_length_count25\n  local non_negative_integer_list_length_count26\n\
    \  local non_negative_integer_list_length_count27\n  local non_negative_integer_list_length_count28\n\
    \  local non_negative_integer_list_length_count29\n  local non_negative_integer_list_length_count30\n\
    \  local non_negative_integer_list_length_count31\n  local non_negative_integer_list_length_count32\n\
    \  local non_negative_integer_list_length_count33\n  local non_negative_integer_list_length_count34\n\
    \  local non_negative_integer_list_length_count35\n  local non_negative_integer_list_length_count36\n\
    \  local non_negative_integer_list_length_count37\n  local non_negative_integer_list_length_count38\n\
    \  local non_negative_integer_list_length_count39\n  \n}\n\ncandidate() {\n  \
    \  double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local num\n  local i\n\n  for\
    \ ((i=0; i<${#numbers}; i++)); do\n    num=${numbers[i]}\n    if [[ ${num} -eq\
    \ 0 ]]; then\n      continue\n    elif [[ ${num} -eq 1 ]]; then\n      sum=$((sum\
    \ + num))\n      count=$((count + 1))\n    elif [[ ${num} -eq 2 ]]; then\n   \
    \   sum=$((sum + num))\n      count=$((count + 1))\n    elif [[ ${num} -eq 3 ]];\
    \ then\n      sum=$((sum + num))\n      count=$((count + 1))\n    elif [[ ${num}\
    \ -eq 4 ]]; then\n      sum=$((sum + num))\n      count=$((count + 1))\n    elif\
    \ [[ ${num} -eq 5 ]]; then\n      sum=$((sum + num))\n      count=$((count + 1))\n\
    \    elif [[ ${num} -eq 6 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 7 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 8 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 9 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 10 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 11 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 12 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 13 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 14 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 15 ]]; then\n      sum=$((sum + num))\n      count=$((count\
    \ + 1))\n    elif [[ ${num} -eq 16 ]]; then\n      sum=$\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpca513duv.sh: line 74: syntax error near unexpected token `}''

    /tmp/tmpca513duv.sh: line 74: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      (( sum += $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      (( sum += $i * $i ))\n    else\n      echo \"$i: not a number\" >&2\n \
    \     return 1\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfo0eh0qx.sh: line 23: ((: sum += 5.0 * 5.0 : syntax error: invalid
    arithmetic operator (error token is ".0 * 5.0 ")

    /tmp/tmpfo0eh0qx.sh: line 23: ((: sum += 4.0 * 4.0 : syntax error: invalid arithmetic
    operator (error token is ".0 * 4.0 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  local j\n  local k\n  for ((i=0;\
    \ i<${#numbers}; i++)); do\n    ((count++))\n    ((j=i+1))\n    if (( ${numbers[i]}\
    \ > 0 )); then\n      ((k=0))\n      while (( ${numbers[j]} > 0 )); do\n     \
    \   ((k++))\n        ((j++))\n      done\n      ((j=i+1))\n      ((k=count-1))\n\
    \      ((sum+=((${numbers[i]}*(${numbers[i]}+1))/2)))\n      while (( ${numbers[j]}\
    \ > 0 )); do\n        ((sum+=((${numbers[j]}*(${numbers[j]}+1))/2)))\n       \
    \ ((j++))\n      done\n      ((j=i+1))\n      ((k=count-1))\n      ((sum+=((${numbers[i]}*(${numbers[i]}+1))/2)))\n\
    \      while (( ${numbers[k]} > 0 )); do\n        ((sum+=((${numbers[k]}*(${numbers[k]}+1))/2)))\n\
    \        ((k--))\n      done\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp847sy96x.sh: line 25: ((: 5.0 4.0 > 0 : syntax error: invalid arithmetic
    operator (error token is ".0 4.0 > 0 ")

    /tmp/tmp847sy96x.sh: line 25: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp847sy96x.sh: line 25: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp847sy96x.sh: line 25: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp847sy96x.sh: line 25: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp847sy96x.sh: line 25: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp847sy96x.sh: line 25: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      (( sum += $i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      (( sum += $i * $i ))\n    else\n      (( sum += $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4y51acqf.sh: line 23: ((: sum += 5.0 * 5.0 : syntax error: invalid
    arithmetic operator (error token is ".0 * 5.0 ")

    /tmp/tmp4y51acqf.sh: line 23: ((: sum += 4.0 * 4.0 : syntax error: invalid arithmetic
    operator (error token is ".0 * 4.0 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: -1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local sum_square=0\n  local i=0\n  while [\
    \ $i -lt ${#numbers} ]; do\n    local number=${numbers[$i]}\n    if [[ $number\
    \ == -* ]]; then\n      (( count++ ))\n      continue\n    elif [[ $number ==\
    \ * ]]; then\n      (( count-- ))\n      continue\n    fi\n    if [[ $number ==\
    \ * ]]; then\n      (( count-- ))\n      (( sum_square++ ))\n      continue\n\
    \    fi\n    if [[ $number == -* ]]; then\n      (( sum++ ))\n      (( sum_square++\
    \ ))\n      continue\n    fi\n    (( sum_square++ ))\n    (( sum+=number ))\n\
    \    (( i++ ))\n  done\n  if [[ $count -gt 0 ]]; then\n    sum=$(( sum + count\
    \ * sum_square ))\n  fi\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=15 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=4 encoding='utf-8'>
  timestamp: 1660052765
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local sum_square=0\n  local odd=0\n  local\
    \ negative=0\n  local integer=0\n  local non_zero=0\n  local non_negative=0\n\
    \  local non_integer=0\n  local non_non_zero=0\n  local non_non_negative=0\n \
    \ local non_non_integer=0\n  local non_non_non_zero=0\n  local non_non_non_negative=0\n\
    \  local non_non_non_integer=0\n  local non_non_non_non_zero=0\n  local non_non_non_non_negative=0\n\
    \  local non_non_non_non_integer=0\n  local non_non_non_non_non_zero=0\n  local\
    \ non_non_non_non_non_negative=0\n  local non_non_non_non_non_integer=0\n  local\
    \ non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_integer=0\n  local non_non_non_non_non_non_non_zero=0\n\
    \  local non_non_non_non_non_non_non_negative=0\n  local non_non_non_non_non_non_non_integer=0\n\
    \  local non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_non_non_negative=0\n\
    \  local non_non_non_non_non_non_non_non_non_non_non_zero=0\n  local non_non_non_non_non_non_non_non_non_non_non_\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local num\n  local i\n  local j\n  local k\n\
    \  local sum_square\n  local square\n  local odd\n  local result\n\n  for ((i=0;\
    \ i<${#numbers}; i++)); do\n    num=${numbers[i]}\n    if [[ $num =~ ^-?[0-9]+$\
    \ ]]; then\n      ((count++))\n      if (( count > 1 )); then\n        sum=$((sum\
    \ + num))\n      else\n        sum=$((sum + num))\n      fi\n    else\n      odd=1\n\
    \      for ((j=0; j<${#num}; j++)); do\n        square=$((num * num))\n      \
    \  if (( j > 0 )); then\n          sum_square=$((sum_square + square))\n     \
    \   else\n          sum_square=$((sum_square + square))\n        fi\n        if\
    \ (( num != 0 )); then\n          if (( num % 2 == 1 )); then\n            odd=0\n\
    \          fi\n        fi\n      done\n      if (( odd )); then\n        sum=$((sum\
    \ + num))\n      fi\n    fi\n  done\n  result=$((sum_square))\n  echo $result\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3zalubqz.sh: line 40: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local sum2=0\n  local count=0\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  local j\n  local\
    \ sum_square\n  local result\n  local odd\n  local number\n  local negative\n\
    \  local integer\n\n  negative=false\n  integer=false\n  for i in $numbers; do\n\
    \    number=`echo $i | awk '{print $1}'`\n    if [ \"$number\" == \"-\" ]; then\n\
    \      negative=true\n      continue\n    elif [ \"$number\" == \"0\" ]; then\n\
    \      integer=true\n      continue\n    fi\n    if [ \"$number\" -lt 0 ]; then\n\
    \      negative=true\n      continue\n    fi\n    sum=$((sum + number))\n    count=$((count\
    \ + 1))\n  done\n  if [ \"$count\" -eq 0 ]; then\n    return 0\n  fi\n  if [ \"\
    $count\" -gt 1 ]; then\n    return 0\n  fi\n  if [ \"$negative\" == true ]; then\n\
    \    return 0\n  fi\n  if [ \"$integer\" == true ]; then\n    return 0\n  fi\n\
    \  sum_square=$((sum * sum))\n  for j in $numbers; do\n    number=`echo $j | awk\
    \ '{print $1}'`\n    if [ \"$number\" == \"-\" ]; then\n      continue\n    elif\
    \ [ \"$number\" == \"0\" ]; then\n      continue\n    fi\n    odd=$((number %\
    \ 2))\n    if [ \"$odd\" == 1 ]; then\n      sum_square=$((sum_square + number))\n\
    \    fi\n  done\n  result=$((sum_square - sum))\n  return $result\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local number\n  for number in $numbers; do\n    if [[ $number\
    \ =~ ^-?[0-9]+$ ]]; then\n      sum=$((sum + number))\n    elif [[ $number =~\
    \ ^[0-9]+$ ]]; then\n      sum=$((sum + number*number))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      ((sum+=i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n \
    \   elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n  \
    \    ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n \
    \   elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp47elke2x.sh: line 45: unexpected EOF while looking for matching
    `)''

    /tmp/tmp47elke2x.sh: line 64: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local even=0\n  local negative=0\n\
    \  local integer=0\n  local non_negative=0\n  local non_integer=0\n  local non_positive=0\n\
    \  local non_negative_integer=0\n  local non_positive_integer=0\n  local non_negative_integer_or_zero=0\n\
    \  local non_positive_integer_or_zero=0\n  local non_negative_integer_or_negative=0\n\
    \  local non_positive_integer_or_negative=0\n  local non_negative_integer_or_positive=0\n\
    \  local non_positive_integer_or_positive=0\n  local non_negative_integer_or_negative_integer=0\n\
    \  local non_positive_integer_or_negative_integer=0\n  local non_negative_integer_or_positive_integer=0\n\
    \  local non_positive_integer_or_positive_integer=0\n  local non_negative_integer_or_negative_integer_or_zero=0\n\
    \  local non_positive_integer_or_negative_integer_or_zero=0\n  local non_negative_integer_or_positive_integer_or_zero=0\n\
    \  local non_positive_integer_or_positive_integer_or_zero=0\n  local non_negative_integer_or_negative_integer_or_negative=0\n\
    \  local non_positive_integer_or_negative_integer_or_negative=0\n  local non_negative_integer_or_positive_integer_or_negative=0\n\
    \  local non_positive_integer_or_positive_integer_or_negative=0\n  local non_negative_integer_or_negative_integer_or_positive=0\n\
    \  local non_positive_integer_or_negative_integer_or_positive=0\n  local non_negative_integer_or_positive_integer_or_positive=0\n\
    \  local non_negative_integer_or_negative_integer_or_negative_integer=0\n  local\
    \ non_positive_integer_or_negative_integer_or_negative_integer=0\n  local non_negative_integer_or_positive_integer_or_negative_integer=0\n\
    \  local non_positive_integer_or_positive_integer_or_negative_integer=0\n  local\
    \ non_negative_integer_or_negative_integer_or_positive_integer=0\n  local non_positive_integer_or_negative_integer_or_positive_integer=0\n\
    \  local non_negative_integer_or_positive_integer_or_positive_integer=0\n  local\
    \ non_negative_integer_or_negative_integer_or_negative_integer_or_zero=0\n  local\
    \ non_positive_integer_or_negative_integer_or_negative_integer_or_zero=0\n  local\
    \ non_negative_integer_or_positive_integer_or_negative_integer_or_zero=0\n  local\
    \ non_positive_integer_or_positive_integer_or_negative_integer_\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    for number in $numbers;\
    \ do\n        if [[ $number == -* ]]; then\n            echo \"$number ignored\"\
    \n            continue\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number ignored\"\n            continue\n        fi\n        if\
    \ [[ $number == * ]]; then\n            echo \"$number ignored\"\n           \
    \ continue\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number ignored\"\n            continue\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number ignored\"\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            echo \"$number ignored\"\
    \n            continue\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number ignored\"\n            continue\n        fi\n        if\
    \ [[ $number == * ]]; then\n            echo \"$number ignored\"\n           \
    \ continue\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number ignored\"\n            continue\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number ignored\"\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            echo \"$number ignored\"\
    \n            continue\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number ignored\"\n            continue\n        fi\n        if\
    \ [[ $number == * ]]; then\n            echo \"$number ignored\"\n           \
    \ continue\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number ignored\"\n            continue\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number ignored\"\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            echo \"$number ignored\"\
    \n            continue\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number ignored\"\n            continue\n        fi\n        if\
    \ [[ $number == * ]]; then\n            echo \"$number ignored\"\n           \
    \ continue\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number ignored\"\n            continue\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number ignored\"\n            continue\n\
    \        fi\n        if [[ $number == * ]]; then\n            echo \"$number ignored\"\
    \n            continue\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number ignored\"\n            continue\n        fi\n        if\
    \ [[ $number == * ]]; then\n            echo \"$number ignored\"\n           \
    \ continue\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number ignored\"\n            continue\n        fi\n        if [[ $number\
    \ == * ]]; then\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp53y6z91h.sh: line 117: syntax error near unexpected token `}''

    /tmp/tmp53y6z91h.sh: line 117: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    fi\n  done\n  echo $((sum))\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppkgfa6x2.sh: line 23: sum + 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n  for\
    \ i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n\
    \      if (( count % 2 == 1 )); then\n        ((odd++))\n      fi\n      sum=$((\
    \ sum + $i ))\n    fi\n  done\n  if (( odd > 0 )); then\n    sum=$(( sum + $odd\
    \ ))\n  fi\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  for i in $numbers;\
    \ do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n    else\n     \
    \ ((sum+=i))\n    fi\n  done\n  if [[ $count -gt 0 ]]; then\n    sum=$((sum*2))\n\
    \  fi\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpslv36kfh.sh: line 25: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpslv36kfh.sh: line 25: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    for number in $numbers;\
    \ do\n        if [ $number -gt 0 ]; then\n            (( sum += $number * $number\
    \ ))\n            (( count++ ))\n        fi\n    done\n    if [ $count -eq 0 ];\
    \ then\n        echo \"0\"\n    else\n        echo \"$sum\"\n    fi\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk5sl3901.sh: line 20: [: 5.0: integer expression expected

    /tmp/tmpk5sl3901.sh: line 20: [: 4.0: integer expression expected

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      ((sum+=i))\n    elif [[ $i =~ ^[0-9]+$ ]]; then\n      ((sum+=i*i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    fi\n  done\n  if [[ $numbers ]]; then\n\
    \    sum=$((sum))\n  fi\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n    local\
    \ num\n    for ((i=0; i<${#numbers}; i++)); do\n        num=${numbers[i]}\n  \
    \      if (( num < 0 )); then\n            echo \"${num} is negative\"\n     \
    \       exit -1\n        fi\n        if (( num % 2 )); then\n            odd=true\n\
    \        else\n            odd=false\n        fi\n        if (( odd )); then\n\
    \            sum=$(( sum + num ))\n        fi\n    done\n    echo \"$sum\"\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppfhg548s.sh: line 24: ((: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    /tmp/tmppfhg548s.sh: line 28: ((: 5.0 4.0: syntax error: invalid arithmetic operator
    (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    for number in $numbers;\
    \ do\n        if (( number % 2 )); then\n            sum=$(( sum + number ))\n\
    \            count=$(( count + 1 ))\n        fi\n    done\n    if (( count > 0\
    \ )); then\n        echo \"$sum\"\n    else\n        echo \"0\"\n    fi\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcltgdl0z.sh: line 20: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpcltgdl0z.sh: line 20: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    (( count++\
    \ ))\n    if (( i % 2 )); then\n      sum=$(( sum + i ))\n    fi\n  done\n  if\
    \ (( count )); then\n    sum=$(( sum + count ))\n  fi\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzrg0cm9i.sh: line 22: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpzrg0cm9i.sh: line 22: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf4xq2xu4.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmpf4xq2xu4.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local i\n    for (( i=0; i<${#list}; i++ ));\
    \ do\n        if [[ ${list[i]} -gt 0 ]]; then\n            (( sum += list[i]*list[i]\
    \ ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppk8s3v2d.sh: line 20: [[: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  local j\n  for ((i=0; i<${#numbers};\
    \ i++)); do\n    ((count++))\n    ((sum+=${numbers[i]}))\n  done\n  if ((count\
    \ > 0)); then\n    for ((j=0; j<${#numbers}; j++)); do\n      if ((${numbers[j]}%2));\
    \ then\n        ((sum-=${numbers[j]}))\n      fi\n    done\n  fi\n  echo $sum\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk248da4r.sh: line 23: ((: sum+=5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    /tmp/tmpk248da4r.sh: line 23: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpk248da4r.sh: line 23: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpk248da4r.sh: line 23: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpk248da4r.sh: line 23: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpk248da4r.sh: line 23: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpk248da4r.sh: line 23: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpk248da4r.sh: line 27: ((: 5.0 4.0%2: syntax error: invalid arithmetic
    operator (error token is ".0 4.0%2")

    /tmp/tmpk248da4r.sh: line 27: ((: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpk248da4r.sh: line 27: ((: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpk248da4r.sh: line 27: ((: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpk248da4r.sh: line 27: ((: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpk248da4r.sh: line 27: ((: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpk248da4r.sh: line 27: ((: %2: syntax error: operand expected (error token
    is "%2")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i))\n   \
    \ elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i\
    \ * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i *\
    \ $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpezhejh7q.sh: line 42: syntax error in conditional expression

    /tmp/tmpezhejh7q.sh: line 43: syntax error near `}''

    /tmp/tmpezhejh7q.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    for number in $numbers;\
    \ do\n        if [[ $number == -?* ]]; then\n            echo \"$number\"\n  \
    \          return 0\n        fi\n        if [[ $number == ?* ]]; then\n      \
    \      echo \"$number\"\n            return 0\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number\"\n            return 0\n        fi\n\
    \        if [[ $number == * ]]; then\n            echo \"$number\"\n         \
    \   return 0\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number\"\n            return 0\n        fi\n        if [[ $number == * ]];\
    \ then\n            echo \"$number\"\n            return 0\n        fi\n     \
    \   if [[ $number == * ]]; then\n            echo \"$number\"\n            return\
    \ 0\n        fi\n        if [[ $number == * ]]; then\n            echo \"$number\"\
    \n            return 0\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number\"\n            return 0\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number\"\n            return 0\n        fi\n\
    \        if [[ $number == * ]]; then\n            echo \"$number\"\n         \
    \   return 0\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number\"\n            return 0\n        fi\n        if [[ $number == * ]];\
    \ then\n            echo \"$number\"\n            return 0\n        fi\n     \
    \   if [[ $number == * ]]; then\n            echo \"$number\"\n            return\
    \ 0\n        fi\n        if [[ $number == * ]]; then\n            echo \"$number\"\
    \n            return 0\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number\"\n            return 0\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number\"\n            return 0\n        fi\n\
    \        if [[ $number == * ]]; then\n            echo \"$number\"\n         \
    \   return 0\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"$number\"\n            return 0\n        fi\n        if [[ $number == * ]];\
    \ then\n            echo \"$number\"\n            return 0\n        fi\n     \
    \   if [[ $number == * ]]; then\n            echo \"$number\"\n            return\
    \ 0\n        fi\n        if [[ $number == * ]]; then\n            echo \"$number\"\
    \n            return 0\n        fi\n        if [[ $number == * ]]; then\n    \
    \        echo \"$number\"\n            return 0\n        fi\n        if [[ $number\
    \ == * ]]; then\n            echo \"$number\"\n            return 0\n        fi\n\
    \        if [[ $number == * ]]; then\n            echo \"$number\"\n         \
    \   return 0\n        fi\n        if [[ $number == * ]]; then\n            echo\
    \ \"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe4w6rfiq.sh: line 136: unexpected EOF while looking for matching
    `"''

    /tmp/tmpe4w6rfiq.sh: line 140: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    (( count++\
    \ ))\n    (( sum += $i ))\n  done\n  if (( count > 0 )); then\n    echo $(( sum\
    \ * sum / count ))\n  else\n    echo 0\n  fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf49fp2cy.sh: line 22: ((: sum += 5.0 : syntax error: invalid arithmetic
    operator (error token is ".0 ")

    /tmp/tmpf49fp2cy.sh: line 22: ((: sum += 4.0 : syntax error: invalid arithmetic
    operator (error token is ".0 ")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n  for\
    \ i in $numbers; do\n    number=`echo $i | sed 's/^ *//g'`\n    if [[ $number\
    \ == -* ]]; then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n\
    \    elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp89455oow.sh: line 108: syntax error near unexpected token `}''

    /tmp/tmp89455oow.sh: line 108: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  while read -r number; do\n\
    \    (( count++ ))\n    (( sum += number * number ))\n  done <<< \"$numbers\"\n\
    \  if (( count > 0 )); then\n    (( sum -= sum ))\n  fi\n  echo \"$sum\"\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1put5tj5.sh: line 22: ((: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum_square\n    local odd\n    local number\n    local num_str\n    local num_int\n\
    \    local num_float\n    local num_ints\n    local num_floats\n    local num_strs\n\
    \    local num_ints_str\n    local num_floats_str\n    local num_strs_str\n  \
    \  local num_ints_float\n    local num_floats_int\n    local num_strs_float\n\
    \    local num_ints_floats\n    local num_floats_strs\n    local num_strs_ints\n\
    \    local num_ints_strs\n    local num_floats_strs\n    local num_strs_floats\n\
    \    local num_ints_floats_str\n    local num_floats_ints_str\n    local num_strs_floats_str\n\
    \    local num_ints_floats_strs\n    local num_floats_strs_str\n    local num_strs_ints_str\n\
    \    local num_ints_strs_str\n    local num_floats_strs_str\n    local num_strs_floats_str\n\
    \    local num_ints_floats_strs\n    local num_floats_strs_str\n    local num_strs_ints_strs\n\
    \    local num_ints_strs_str\n    local num_floats_strs_str\n    local num_strs_floats_strs\n\
    \    local num_ints_floats_strs_str\n    local num_floats_strs_strs\n    local\
    \ num_strs_ints_strs_str\n    local num_ints_strs_strs_str\n    local num_floats_strs_strs_str\n\
    \    local num_strs_floats_strs_str\n    local num_ints_floats_strs_strs\n   \
    \ local num_floats_strs_strs_str\n    local num_strs_ints_strs_strs\n    local\
    \ num_ints_strs_strs_str\n    local num_floats_strs_strs_str\n    local num_strs_floats_strs_str\n\
    \    local num_ints_floats_strs_strs\n    local num_floats_strs_strs_str\n   \
    \ local num_strs_ints_strs_strs\n    local num_ints_strs_strs_str\n    local num_floats_strs_strs_str\n\
    \    local num_strs_ints_strs_strs\n    local num_ints_strs_strs_str\n    \n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local count=0\n  local number\n  while read -r number;\
    \ do\n    ((count++))\n    ((sum += number))\n  done <<< \"$list\"\n  if (( count\
    \ > 0 )); then\n    ((sum *= 2))\n  fi\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp80bc884v.sh: line 22: ((: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvx3o1qxg.sh: line 46: syntax error in conditional expression

    /tmp/tmpvx3o1qxg.sh: line 47: syntax error near `}''

    /tmp/tmpvx3o1qxg.sh: line 47: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe5ux6g6i.sh: line 23: sum+5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ \n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpssmbctb2.sh: line 48: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmpssmbctb2.sh: line 48: syntax error near `=~''

    /tmp/tmpssmbctb2.sh: line 48: `    elif [[ $i =~ ''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local odd\n  local i\n  for\
    \ i in $numbers; do\n    number=`echo $i | cut -d ' ' -f 1`\n    if [[ $number\
    \ == -* ]]; then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n\
    \    elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpozxie2_k.sh: line 109: syntax error near unexpected token `}''

    /tmp/tmpozxie2_k.sh: line 109: `}''

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      ((sum+=i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      ((sum+=$(echo \"$i\" | bc -l)))\n    else\n      ((sum+=0))\n    fi\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx_j4lp47.sh: line 23: ((: sum+=5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpx_j4lp47.sh: line 23: ((: sum+=4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i=0\n  while [ $i -lt ${#numbers} ]; do\n    if [[ ${numbers[$i]}\
    \ -gt 0 ]]; then\n      sum=$((sum + ${numbers[$i]}))\n    fi\n    i=$((i+1))\n\
    \  done\n  if [[ ${#numbers} -eq 0 ]]; then\n    sum=0\n  fi\n  echo $sum\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvqwfc_9j.sh: line 20: [[: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    local number\n    for number\
    \ in $numbers; do\n        if [ $number -gt 0 ]; then\n            (( sum += $number\
    \ * $number ))\n            (( count++ ))\n        fi\n    done\n    if [ $count\
    \ -eq 0 ]; then\n        echo \"0\"\n    else\n        echo \"$sum\"\n    fi\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpc9po2hlf.sh: line 21: [: 5.0: integer expression expected

    /tmp/tmpc9po2hlf.sh: line 21: [: 4.0: integer expression expected

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local odd\n  for number in\
    \ $numbers; do\n    (( count++ ))\n    (( sum += number*number ))\n  done\n  if\
    \ [ $count -eq 0 ]; then\n    echo 0\n  else\n    odd=$(( $sum % 2 ))\n    if\
    \ [ $odd -eq 1 ]; then\n      echo $sum\n    else\n      echo $sum\n    fi\n \
    \ fi\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph5k4o3el.sh: line 23: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmph5k4o3el.sh: line 23: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local lastNumber=0\n  local lastNumberIsNegative=0\n\
    \  local lastNumberIsInteger=0\n  local lastNumberIsEven=0\n  local lastNumberIsOdd=0\n\
    \  local lastNumberIsEvenOrOdd=0\n  local lastNumberIsEvenOrOddEven=0\n  local\
    \ lastNumberIsEvenOrOddOdd=0\n  local lastNumberIsEvenOrOddEvenOrOdd=0\n  local\
    \ lastNumberIsEvenOrOddEvenOrOddOdd=0\n  local lastNumberIsEvenOrOddEvenOrOddEvenOrOdd=0\n\
    \  local lastNumberIsEvenOrOddEvenOrOddEvenOrOddOdd=0\n  local lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOdd=0\n\
    \  local lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddOdd=0\n  local lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOdd=0\n\
    \  local lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddOdd=0\n  local\
    \ lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOdd=0\n  local\
    \ lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddOdd=0\n  local\
    \ lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOdd=0\n\
    \  local lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddOdd=0\n\
    \  local lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOdd=0\n\
    \  local lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddOdd=0\n\
    \  local lastNumberIsEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOddEvenOrOdd\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local num\n  local i\n  local j\n  local k\n\
    \  local odd\n  local even\n  local oddsum\n  local evensum\n  local nums\n  local\
    \ num\n  local num2\n  local num3\n  local num4\n  local num5\n  local num6\n\
    \  local num7\n  local num8\n  local num9\n  local num10\n  local num11\n  local\
    \ num12\n  local num13\n  local num14\n  local num15\n  local num16\n  local num17\n\
    \  local num18\n  local num19\n  local num20\n  local num21\n  local num22\n \
    \ local num23\n  local num24\n  local num25\n  local num26\n  local num27\n  local\
    \ num28\n  local num29\n  local num30\n  local num31\n  local num32\n  local num33\n\
    \  local num34\n  local num35\n  local num36\n  local num37\n  local num38\n \
    \ local num39\n  local num40\n  local num41\n  local num42\n  local num43\n  local\
    \ num44\n  local num45\n  local num46\n  local num47\n  local num48\n  local num49\n\
    \  local num50\n  local num51\n  local num52\n  local num53\n  local num54\n \
    \ local num55\n  local num56\n  local num57\n  local num58\n  local num59\n  local\
    \ num60\n  local num61\n  local num62\n  local num63\n  local num64\n  local num65\n\
    \  local num66\n  local num67\n  local num68\n  local num69\n  local num70\n \
    \ local num71\n  local num72\n  local num73\n  local num74\n  local num75\n  local\
    \ num76\n  local num77\n  local num78\n  local num79\n  local num80\n  local num81\n\
    \  local num82\n  local num83\n  local num84\n  local num85\n  local num86\n \
    \ local num87\n  local num88\n  local num89\n  local num90\n  local num91\n  local\
    \ num\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  local j\n  local\
    \ odd\n  local even\n  local negative\n  local integer\n  local number\n  local\
    \ tmp\n\n  negative=false\n  integer=false\n  odd=false\n  even=false\n\n  for\
    \ number in $numbers; do\n    if [[ $number =~ ^-?[0-9]+$ ]]; then\n      integer=true\n\
    \      negative=true\n    elif [[ $number =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n  \
    \    integer=true\n      negative=true\n    elif [[ $number =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      integer=true\n      negative=true\n    elif [[ $number\
    \ =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n    \
    \  negative=true\n    elif [[ $number =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      integer=true\n      negative=true\n    elif [[ $number\
    \ =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n\
    \      negative=true\n    elif [[ $number =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n      negative=true\n\
    \    elif [[ $number =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n      negative=true\n    elif\
    \ [[ $number =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n      negative=true\n    elif\
    \ [[ $number =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n      negative=true\n\
    \    elif [[ $number =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      integer=true\n  \
    \    negative=true\n    elif [[ $number =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      integer=true\n      negative=true\n    elif [[ $number =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmeyuvtl8.sh: line 71: syntax error in conditional expression

    /tmp/tmpmeyuvtl8.sh: line 72: syntax error near `}''

    /tmp/tmpmeyuvtl8.sh: line 72: `}''

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i * i ))\n    elif [[ $i\
    \ =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((\
    \ sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum +=\
    \ i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum +=\
    \ i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i * i ))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i * i \n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsmfc1z5s.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmpsmfc1z5s.sh: line 66: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ \n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpssmbctb2.sh: line 48: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmpssmbctb2.sh: line 48: syntax error near `=~''

    /tmp/tmpssmbctb2.sh: line 48: `    elif [[ $i =~ ''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ \n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4u207svc.sh: line 48: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmp4u207svc.sh: line 48: syntax error near `=~''

    /tmp/tmp4u207svc.sh: line 48: `    elif [[ $i =~ ''

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i))\n   \
    \ elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i\
    \ * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i *\
    \ $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpezhejh7q.sh: line 42: syntax error in conditional expression

    /tmp/tmpezhejh7q.sh: line 43: syntax error near `}''

    /tmp/tmpezhejh7q.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwfb6l3w6.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwfb6l3w6.sh: line 66: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqote4xti.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmpqote4xti.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    for number in $numbers;\
    \ do\n        if (( number % 2 )); then\n            sum=$(( $sum + $number ))\n\
    \            count=$(( $count + 1 ))\n        fi\n    done\n    if (( $count >\
    \ 0 )); then\n        echo \"$sum\"\n    else\n        echo \"0\"\n    fi\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp562u_aqw.sh: line 20: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmp562u_aqw.sh: line 20: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local n=0\n  local i\n  local j\n  local k\n  local odd\n  local\
    \ even\n  local oddsum\n  local evensum\n  local oddcount\n  local evencount\n\
    \  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local\
    \ sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n\
    \  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n \
    \ local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local\
    \ sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n\
    \  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n \
    \ local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local\
    \ sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n\
    \  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n \
    \ local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local\
    \ sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n\
    \  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n \
    \ local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local\
    \ sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n\
    \  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n \
    \ local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local\
    \ sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n\
    \  \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n\n\
    \  for (( i=0; i<${#numbers}; i++ )); do\n    number=${numbers:$i:1}\n    if [[\
    \ $number =~ ^-?[0-9]+$ ]]; then\n      if (( number % 2 )); then\n        odd=$((odd+number))\n\
    \      else\n        sum=$((sum+number))\n        count=$((count+1))\n      fi\n\
    \    fi\n  done\n\n  if (( count > 0 )); then\n    sum=$((sum+odd))\n  fi\n\n\
    \  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: -1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  while read number; do\n   \
    \ (( count++ ))\n    (( sum += $number ))\n  done\n  if [[ $count -eq 0 ]]; then\n\
    \    echo $sum\n  else\n    echo $(( sum * sum / count ))\n  fi\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=62 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660052766
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local even=0\n  local negative=0\n\
    \  local integer=0\n  local non_negative=0\n  local non_integer=0\n  local non_negative_integer=0\n\
    \  local non_negative_integer_even=0\n  local non_negative_integer_odd=0\n  local\
    \ non_negative_integer_even_integer=0\n  local non_negative_integer_odd_integer=0\n\
    \  local non_negative_integer_even_integer_odd=0\n  local non_negative_integer_odd_integer_integer=0\n\
    \  local non_negative_integer_even_integer_odd_integer=0\n  local non_negative_integer_odd_integer_integer_even=0\n\
    \  local non_negative_integer_odd_integer_integer_odd=0\n  local non_negative_integer_even_integer_odd_integer_integer=0\n\
    \  local non_negative_integer_odd_integer_integer_even_integer=0\n  local non_negative_integer_odd_integer_integer_odd_integer=0\n\
    \  local non_negative_integer_even_integer_odd_integer_integer_even=0\n  local\
    \ non_negative_integer_odd_integer_integer_even_integer_odd=0\n  local non_negative_integer_even_integer_odd_integer_integer_even_integer=0\n\
    \  local non_negative_integer_odd_integer_integer_even_integer_odd_integer=0\n\
    \  local non_negative_integer_even_integer_odd_integer_integer_even_integer_odd=0\n\
    \  local non_negative_integer_odd_integer_integer_even_integer_odd_integer_integer=0\n\
    \  local non_negative_integer_even_integer_odd_integer_integer_even_integer_odd_integer=0\n\
    \  local non_negative_integer_odd_integer_integer_even_integer_odd_integer_integer_even=0\n\
    \  local non_negative_integer_odd_integer_integer_even_integer_odd_integer_integer_odd=0\n\
    \  local non_negative_integer_even_integer_odd_integer_integer_even_integer_odd_integer_integer=0\n\
    \  local non_negative_integer_odd_integer_integer_even_integer_odd_integer_integer_even_integer_odd=0\n\
    \  local non_negative_integer_even_integer_odd_integer_integer_even_integer_odd_integer_integer_even_integer=0\n\
    \  local non_negative_integer_odd_integer_integer_even_integer_odd_integer_integer_even_integer_odd_integer=0\n\
    \  local non_negative_integer_even_integer_odd_integer_integer_even_integer_odd_\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n  for\
    \ i in $numbers; do\n    number=`echo $i | cut -d \" \" -f 1`\n    if [[ $number\
    \ -gt 0 ]]; then\n      ((count++))\n      if [[ $number -eq 0 ]]; then\n    \
    \    ((odd++))\n      else\n        ((sum+=number))\n      fi\n    fi\n  done\n\
    \  if [[ $odd -eq 0 ]]; then\n    echo $sum\n  else\n    echo \"0\"\n  fi\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnj76wvt_.sh: line 24: [[: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpnj76wvt_.sh: line 24: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    if [[\
    \ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n      if (( count > 1 )); then\n\
    \        ((sum+=i))\n      else\n        ((sum+=i*i))\n      fi\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif\
    \ [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2msjluf8.sh: line 48: syntax error in conditional expression

    /tmp/tmp2msjluf8.sh: line 49: syntax error near `}''

    /tmp/tmp2msjluf8.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local num\n  for num in $numbers;\
    \ do\n    if [[ $num -gt 0 ]]; then\n      if (( num % 2 )); then\n        odd=$((odd+num))\n\
    \      else\n        sum=$((sum+num))\n      fi\n    fi\n  done\n  if (( count\
    \ > 0 )); then\n    sum=$((sum+odd))\n  fi\n  echo $sum\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmput4nqf1_.sh: line 22: [[: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmput4nqf1_.sh: line 22: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz3llztcf.sh: line 48: syntax error in conditional expression

    /tmp/tmpz3llztcf.sh: line 49: syntax error near `}''

    /tmp/tmpz3llztcf.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4fd5std.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local number\n  local i\n  for i in $numbers;\
    \ do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      ((count++))\n    else\n     \
    \ if ((count > 0)); then\n        ((sum+=count))\n        ((count=0))\n      fi\n\
    \      ((sum+=i))\n    fi\n  done\n  if ((count > 0)); then\n    ((sum+=count))\n\
    \    ((count=0))\n  fi\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppk5gojh2.sh: line 29: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmppk5gojh2.sh: line 29: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i))\n   \
    \ elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i\
    \ * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i *\
    \ $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpezhejh7q.sh: line 42: syntax error in conditional expression

    /tmp/tmpezhejh7q.sh: line 43: syntax error near `}''

    /tmp/tmpezhejh7q.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    for number in $numbers; do\n        if (( number\
    \ % 2 )); then\n            sum=$(( sum + number ))\n        fi\n    done\n  \
    \  echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_vqnv5ea.sh: line 19: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmp_vqnv5ea.sh: line 19: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i))\n   \
    \ elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i\
    \ * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i *\
    \ $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpezhejh7q.sh: line 42: syntax error in conditional expression

    /tmp/tmpezhejh7q.sh: line 43: syntax error near `}''

    /tmp/tmpezhejh7q.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      ((sum+=i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n \
    \   elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n  \
    \    ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n \
    \   elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      ((sum+=$(echo \"$i\" | bc \n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwnf5kjvw.sh: line 45: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwnf5kjvw.sh: line 64: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local number\n  local i\n  for i in $numbers; do\n    number=$((\
    \ i + 1 ))\n    if [ $number -gt 0 ]; then\n      sum=$(( sum + $number ))\n \
    \   fi\n  done\n  if [ -z \"$numbers\" ]; then\n    sum=0\n  fi\n  echo $sum\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5hfcgluz.sh: line 21: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  sum=$((sum+$i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum+$i))\n    elif [[ $i =\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9lj4qczx.sh: line 48: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmp9lj4qczx.sh: line 48: syntax error near `=''

    /tmp/tmp9lj4qczx.sh: line 48: `    elif [[ $i =''

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i\
    \ * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i * $i * $i * $i * $i * $i * $i * $i * $i * $i))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i *\
    \ $i * $i * $i * $i * $i * $i * $i * $i * $i * $i))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn0b08zwo.sh: line 42: syntax error in conditional expression

    /tmp/tmpn0b08zwo.sh: line 43: syntax error near `}''

    /tmp/tmpn0b08zwo.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n  for\
    \ i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      number=$i\n  \
    \  elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n      number=$(( ${i%%.*} + ${i#*.}\
    \ ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      number=$((\
    \ ${i%%.*} + ${i#*.} + ${i#*.} ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      number=$(( ${i%%.*} + ${i#*.} + ${i#*.} + ${i#*.} ))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n \
    \     number=$(( ${i%%.*} + ${i#*.} + ${i#*.} + ${i#*.} + ${i#*.} ))\n    elif\
    \ [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      number=$(( ${i%%.*} + ${i#*.} + ${i#*.} + ${i#*.} + ${i#*.} + ${i#*.} ))\n\
    \    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      number=$(( ${i%%.*} + ${i#*.} + ${i#*.} + ${i#*.} + ${i#*.}\
    \ + ${i#*.} + ${i#*.} ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      number=$(( ${i%%.*} + ${i#*.}\
    \ + ${i#*.} + ${i#*.} + ${i#*.} + ${i#*.} + ${i#*.} + ${i#*.} ))\n    elif [[\
    \ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      number=$(( ${i%%.*} + ${i#*.} + ${i#*.} + ${i#*.} + ${\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptzz4pzoh.sh: line 40: unexpected EOF while looking for matching
    `)''

    /tmp/tmptzz4pzoh.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local last=-1\n  local last2=0\n  local last3=0\n\
    \  local last4=0\n  local last5=0\n  local last6=0\n  local last7=0\n  local last8=0\n\
    \  local last9=0\n  local last10=0\n  local last11=0\n  local last12=0\n  local\
    \ last13=0\n  local last14=0\n  local last15=0\n  local last16=0\n  local last17=0\n\
    \  local last18=0\n  local last19=0\n  local last20=0\n  local last21=0\n  local\
    \ last22=0\n  local last23=0\n  local last24=0\n  local last25=0\n  local last26=0\n\
    \  local last27=0\n  local last28=0\n  local last29=0\n  local last30=0\n  local\
    \ last31=0\n  local last32=0\n  local last33=0\n  local last34=0\n  local last35=0\n\
    \  local last36=0\n  local last37=0\n  local last38=0\n  local last39=0\n  local\
    \ last40=0\n  local last41=0\n  local last42=0\n  local last43=0\n  local last44=0\n\
    \  local last45=0\n  local last46=0\n  local last47=0\n  local last48=0\n  local\
    \ last49=0\n  local last50=0\n  local last51=0\n  local last52=0\n  local last53=0\n\
    \  local last54=0\n  local last55=0\n  local last56=0\n  local last57=0\n  local\
    \ last58=0\n  local last59=0\n  local last60=0\n  local last61=0\n  local last62=0\n\
    \  local last63=0\n  local last64=0\n  local last65=0\n  local last66=0\n  local\
    \ last67=0\n  local last68=0\n  local last69=0\n  local last70=0\n  local last71=0\n\
    \  local last72=0\n  local last73=0\n  local last74=0\n  local last75=0\n  local\
    \ last76=0\n  local last77=0\n  local last78=0\n  local last79=0\n  local last80=0\n\
    \  local last81=0\n  local last82=0\n  local last83\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      ((sum+=i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n \
    \   elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n  \
    \    ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n \
    \   elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      ((sum+=$(echo\
    \ \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  ((sum+=$(echo \"$i\" | bc -l)))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      ((sum+=$(echo \"$i\" | bc \n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7hlafkx2.sh: line 45: unexpected EOF while looking for matching
    `)''

    /tmp/tmp7hlafkx2.sh: line 64: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local number\n  for number in $numbers; do\n    if [[ $number\
    \ == -* ]]; then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n\
    \    elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number \n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpikzg_z1h.sh: line 108: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpikzg_z1h.sh: line 108: syntax error near `$number''

    /tmp/tmpikzg_z1h.sh: line 108: `    elif [[ $number ''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum\
    \ + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~\
    \ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n\
    \      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ \n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpssmbctb2.sh: line 48: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmpssmbctb2.sh: line 48: syntax error near `=~''

    /tmp/tmpssmbctb2.sh: line 48: `    elif [[ $i =~ ''

    '
  stdout: ''
  timestamp: 1660052760
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local list=\"\
    $1\"\n  local sum=0\n  local i\n  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum+$i))\n    elif [[ $i =~ ^[0-9]+$ ]]; then\n     \
    \ sum=$((sum+$i*$i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n  for\
    \ i in $numbers; do\n    number=$i\n    if [[ $number == -* ]]; then\n      continue\n\
    \    elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb_qfort6.sh: line 110: syntax error near unexpected token `}''

    /tmp/tmpb_qfort6.sh: line 110: `}''

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local i\n  for i in $numbers; do\n    if [[\
    \ $i -lt 0 ]]; then\n      echo \"$i: negative number\"\n    elif [[ $i -eq 0\
    \ ]]; then\n      echo \"$i: 0\"\n    elif [[ $i -gt 0 ]]; then\n      ((sum+=i))\n\
    \      ((count++))\n    fi\n  done\n  if [[ $count -eq 0 ]]; then\n    echo \"\
    0\"\n  else\n    echo \"$((sum*sum))\"\n  fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp25m8iiya.sh: line 21: [[: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmp25m8iiya.sh: line 23: [[: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp25m8iiya.sh: line 25: [[: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp25m8iiya.sh: line 21: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp25m8iiya.sh: line 23: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp25m8iiya.sh: line 25: [[: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    local count=0\n    local odd=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local A=0\n    local B=0\n    local C=0\n    local\
    \ D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n\
    \    local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n \
    \   local O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n  \
    \  local T=0\n    local U=0\n    local V=0\n    local W=0\n    local X=0\n   \
    \ local Y=0\n    local Z=0\n    local a=0\n    local b=0\n    local c=0\n    local\
    \ d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local A=0\n    local B=0\n    local C=0\n    local\
    \ D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n\
    \    local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n \
    \   local O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n  \
    \  local T=0\n    local U=0\n    local V=0\n    local W=0\n    local X=0\n   \
    \ local Y=0\n    local Z=0\n    local a=0\n    local b=0\n    local c\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: -1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  while read -r\
    \ number; do\n    (( count++ ))\n    (( sum += number * number ))\n    (( odd\
    \ += ( number % 2 ) ))\n  done\n  if [ -z \"$numbers\" ]; then\n    echo \"0\"\
    \n  else\n    echo \"$(( sum - odd ))\"\n  fi\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=43 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=25 encoding='utf-8'>
  timestamp: 1660052766
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [ \"$i\" -eq \"0\"\
    \ ]; then\n      continue\n    elif [ \"$i\" -eq \"-1\" ]; then\n      sum=$((sum\
    \ + i))\n    elif [ \"$i\" -eq \"-2\" ]; then\n      sum=$((sum + i))\n    elif\
    \ [ \"$i\" -ge \"0\" ] && [ \"$i\" -le \"9\" ]; then\n      sum=$((sum + $((i\
    \ * i))))\n    elif [ \"$i\" -ge \"0\" ] && [ \"$i\" -le \"9\" ]; then\n     \
    \ sum=$((sum + $((i * i))))\n    elif [ \"$i\" -ge \"0\" ] && [ \"$i\" -le \"\
    9\" ]; then\n      sum=$((sum + $((i * i))))\n    elif [ \"$i\" -ge \"0\" ] &&\
    \ [ \"$i\" -le \"9\" ]; then\n      sum=$((sum + $((i * i))))\n    elif [ \"$i\"\
    \ -ge \"0\" ] && [ \"$i\" -le \"9\" ]; then\n      sum=$((sum + $((i * i))))\n\
    \    elif [ \"$i\" -ge \"0\" ] && [ \"$i\" -le \"9\" ]; then\n      sum=$((sum\
    \ + $((i * i))))\n    elif [ \"$i\" -ge \"0\" ] && [ \"$i\" -le \"9\" ]; then\n\
    \      sum=$((sum + $((i * i))))\n    elif [ \"$i\" -ge \"0\" ] && [ \"$i\" -le\
    \ \"9\" ]; then\n      sum=$((sum + $((i * i))))\n    elif [ \"$i\" -ge \"0\"\
    \ ] && [ \"$i\" -le \"9\" ]; then\n      sum=$((sum + $((i * i))))\n    elif [\
    \ \"$i\" -ge \"0\" ] && [ \"$i\" -le \"9\" ]; then\n      sum=$((sum + $((i *\
    \ i))))\n    elif [ \"$i\" -ge \"0\" ] && [ \"$i\" -le \"9\" ]; then\n      sum=$((sum\
    \ + $((i * i))))\n    elif [ \"$i\" -ge \"0\" ] && [ \"$i\" -le \"9\" ]; then\n\
    \      sum=$((sum + $((i * i))))\n    elif [ \"$i\" -ge \"0\" ] && [ \"$i\" -le\
    \ \"9\" ]; then\n      sum=$((sum + $((i * i))))\n    elif [ \"$i\" -ge \"0\"\
    \ ] && [ \"$i\" -le \"9\" ]; then\n      sum=$((sum + $((i * i))))\n    elif [\
    \ \"$i\" -ge \"0\" ] && [ \"$i\" -le \"9\" ]; then\n      sum=$\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpby2ht6kr.sh: line 56: syntax error near unexpected token `}''

    /tmp/tmpby2ht6kr.sh: line 56: `}''

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local negative=0\n  local integer=0\n\
    \  local i=0\n  while [ $i -lt ${#numbers} ]; do\n    local number=${numbers[$i]}\n\
    \    local number2=${numbers[$(($i+1))]}\n    if [[ $number -gt 0 ]]; then\n \
    \     if [[ $number -eq 0 ]]; then\n        integer=1\n      else\n        integer=0\n\
    \      fi\n    fi\n    if [[ $number -lt 0 ]]; then\n      negative=1\n    fi\n\
    \    if [[ $number -eq 0 ]]; then\n      integer=1\n    fi\n    if [[ $integer\
    \ -eq 1 ]]; then\n      if [[ $negative -eq 1 ]]; then\n        odd=$((odd+number))\n\
    \      else\n        odd=$((odd+number2))\n      fi\n      count=$((count+1))\n\
    \    elif [[ $integer -eq 0 ]]; then\n      odd=$((odd+number2))\n      count=$((count+1))\n\
    \    fi\n    i=$(($i+2))\n  done\n  if [[ $count -gt 0 ]]; then\n    sum=$((sum+odd))\n\
    \  fi\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnfcvowbi.sh: line 26: [[: 5.0 4.0: syntax error: invalid arithmetic
    operator (error token is ".0 4.0")

    /tmp/tmpnfcvowbi.sh: line 33: [[: 5.0 4.0: syntax error: invalid arithmetic operator
    (error token is ".0 4.0")

    /tmp/tmpnfcvowbi.sh: line 36: [[: 5.0 4.0: syntax error: invalid arithmetic operator
    (error token is ".0 4.0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local odd=0\n  local number\n  local i\n  local\
    \ j\n  local k\n  for ((i=0; i < ${#numbers}; i++)); do\n    number=${numbers:$i:1}\n\
    \    if [[ $number == -* ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $number == * ]]; then\n      continue\n  \
    \  elif [[ $number == * ]]; then\n      continue\n    elif [[ $number == * ]];\
    \ then\n      continue\n    elif [[ $\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_0rg95ou.sh: line 108: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmp_0rg95ou.sh: line 108: syntax error near `$''

    /tmp/tmp_0rg95ou.sh: line 108: `    elif [[ $''

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local last=-1\n  local last2=0\n  local last3=0\n\
    \  local last4=0\n  local last5=0\n  local last6=0\n  local last7=0\n  local last8=0\n\
    \  local last9=0\n  local last10=0\n  local last11=0\n  local last12=0\n  local\
    \ last13=0\n  local last14=0\n  local last15=0\n  local last16=0\n  local last17=0\n\
    \  local last18=0\n  local last19=0\n  local last20=0\n  local last21=0\n  local\
    \ last22=0\n  local last23=0\n  local last24=0\n  local last25=0\n  local last26=0\n\
    \  local last27=0\n  local last28=0\n  local last29=0\n  local last30=0\n  local\
    \ last31=0\n  local last32=0\n  local last33=0\n  local last34=0\n  local last35=0\n\
    \  local last36=0\n  local last37=0\n  local last38=0\n  local last39=0\n  local\
    \ last40=0\n  local last41=0\n  local last42=0\n  local last43=0\n  local last44=0\n\
    \  local last45=0\n  local last46=0\n  local last47=0\n  local last48=0\n  local\
    \ last49=0\n  local last50=0\n  local last51=0\n  local last52=0\n  local last53=0\n\
    \  local last54=0\n  local last55=0\n  local last56=0\n  local last57=0\n  local\
    \ last58=0\n  local last59=0\n  local last60=0\n  local last61=0\n  local last62=0\n\
    \  local last63=0\n  local last64=0\n  local last65=0\n  local last66=0\n  local\
    \ last67=0\n  local last68=0\n  local last69=0\n  local last70=0\n  local last71=0\n\
    \  local last72=0\n  local last73=0\n  local last74=0\n  local last75=0\n  local\
    \ last76=0\n  local last77=0\n  local last78=0\n  local last79=0\n  local last80=0\n\
    \  local last81=0\n  local last82=0\n  local last83\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local i\n  for i in $numbers; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      sum=$((sum + $i))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n      sum=$((sum + $i * $i))\n    else\n      echo \"$i is not a number\"\
    \n      return 1\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5n58wcwc.sh: line 23: sum + 5.0 * 5.0: syntax error: invalid arithmetic
    operator (error token is ".0 * 5.0")

    '
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n    local\
    \ numbers=$1\n    local sum=0\n    for number in $numbers; do\n        if [[ $number\
    \ == -* ]]; then\n            echo \"$number is not an integer\"\n        elif\
    \ [[ $number == * ]]; then\n            echo \"$number is 0\"\n        else\n\
    \            sum=$((sum + $number))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660052761
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\n#\n# $1 is a space-separated list\ndouble_the_difference() {\n  local numbers=$1\n\
    \  local sum=0\n  local count=0\n  local sum2=0\n  local count2=0\n  local i\n\
    \  for i in $numbers; do\n    (( count++ ))\n    (( sum+=i ))\n    (( sum2+=i*i\
    \ ))\n  done\n  if [ $count -eq 0 ]; then\n    echo $sum\n  else\n    echo $((\
    \ sum - sum2 ))\n  fi\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo9yjb_vl.sh: line 24: ((: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpo9yjb_vl.sh: line 25: ((: 5.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpo9yjb_vl.sh: line 24: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpo9yjb_vl.sh: line 25: ((: 4.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660052761

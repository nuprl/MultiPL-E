language: sh
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_sentences=()\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_words_in_sentence\n    local boredom_sentences_in_word\n  \
    \  local boredom_words_in_sentence\n    local boredom_sentences_in_sentence\n\
    \    local boredom_words_in_word\n    local boredom_sentences_in_word\n    local\
    \ boredom_words_in_sentence\n    local boredom_sentences_in_sentence\n    local\
    \ boredom_words_in_word\n    local boredom_sentences_in_word\n    local boredom_words_in_sentence\n\
    \    local boredom_sentences_in_sentence\n    local boredom_words_in_word\n  \
    \  local boredom_sentences_in_word\n    local boredom_words_in_sentence\n    local\
    \ boredom_sentences_in_sentence\n    local boredom_words_in_word\n    local boredom_sentences_in_word\n\
    \    local boredom_words_in_sentence\n    local boredom_sentences_in_sentence\n\
    \    local boredom_words_in_word\n    local boredom_sentences_in_word\n    local\
    \ boredom_words_in_sentence\n    local boredom_sentences_in_sentence\n    local\
    \ boredom_words_in_word\n    local boredom_sentences_in_word\n    local boredom_words_in_sentence\n\
    \    local boredom_sentences_in_sentence\n    local boredom_words_in_word\n  \
    \  local boredom_sentences_in_word\n    local boredom_words_in_sentence\n    local\
    \ boredom_sentences_in_sentence\n    local boredom_words_in_word\n    local boredom_sentences_in_word\n\
    \    local boredom_words_in_sentence\n    local boredom_sentences_in_sentence\n\
    \    local boredom_words_in_word\n    local boredom_sentences_in_word\n    local\
    \ boredom_words_in_sentence\n    local boredom_sentences_in_sentence\n    local\
    \ boredom_words_in_word\n    local boredom_sentences_in_word\n    local boredom_words_in_sentence\n\
    \    local boredom_sentences_in_sentence\n    local boredom_words_in_word\n  \
    \  local boredom_sentences_in_word\n    local boredom_words_in_sentence\n    local\
    \ boredom_sentences_in_sentence\n    local boredom_words_in_word\n    local boredom_sentences_in_word\n\
    \    local boredom_words_in_sentence\n    local boredom_sentences_in_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed 's/\\.\\?!//g')\n    local boredom_word=$(echo $boredom_string\
    \ | sed 's/\\.\\?!//g' | sed 's/\\.//g')\n    local boredom_word_count=$(echo\
    \ $boredom_string | sed 's/\\.\\?!//g' | sed 's/\\.//g' | grep -c \"$boredom_word\"\
    )\n    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((bore\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdf5ed478.sh: line 41: unexpected EOF while looking for matching
    `)''

    /tmp/tmpdf5ed478.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiter=(\"?\")\n    local delimiter2=(\"!\")\n    local delimiter3=(\"\
    ?\")\n    local delimiter4=(\".\")\n    local delimiter5=(\"?\")\n    local delimiter6=(\"\
    !\")\n    local delimiter7=(\"?\")\n    local delimiter8=(\".\")\n    local delimiter9=(\"\
    ?\")\n    local delimiter10=(\"!\")\n    local delimiter11=(\"?\")\n    local\
    \ delimiter12=(\".\")\n    local delimiter13=(\"?\")\n    local delimiter14=(\"\
    !\")\n    local delimiter15=(\"?\")\n    local delimiter16=(\".\")\n    local\
    \ delimiter17=(\"?\")\n    local delimiter18=(\"!\")\n    local delimiter19=(\"\
    ?\")\n    local delimiter20=(\".\")\n    local delimiter21=(\"?\")\n    local\
    \ delimiter22=(\"!\")\n    local delimiter23=(\"?\")\n    local delimiter24=(\"\
    .\")\n    local delimiter25=(\"?\")\n    local delimiter26=(\"!\")\n    local\
    \ delimiter27=(\"?\")\n    local delimiter28=(\".\")\n    local delimiter29=(\"\
    ?\")\n    local delimiter30=(\"!\")\n    local delimiter31=(\"?\")\n    local\
    \ delimiter32=(\".\")\n    local delimiter33=(\"?\")\n    local delimiter34=(\"\
    !\")\n    local delimiter35=(\"?\")\n    local delimiter36=(\".\")\n    local\
    \ delimiter37=(\"?\")\n    local delimiter38=(\"!\")\n    local delimiter39=(\"\
    ?\")\n    local delimiter40=(\".\")\n    local delimiter41=(\"?\")\n    local\
    \ delimiter42=(\"!\")\n    local delimiter43=(\"?\")\n    local delimiter44=(\"\
    .\")\n    local delimiter45=(\"?\")\n    local delimiter46=(\"!\")\n    local\
    \ delimiter47=(\"?\")\n    local delimiter48=(\".\")\n    local delimiter49=(\"\
    ?\")\n    local delimiter50=(\"!\")\n    local delimiter51=(\"?\")\n    local\
    \ delimiter52=(\".\")\n    local delimiter53=(\"?\")\n    local delimiter54=(\"\
    !\")\n    local delimiter55=(\"?\")\n    local delimiter56=(\".\")\n    local\
    \ delimiter57=(\"?\")\n    local delimiter58=(\"!\")\n    local delimiter59=(\"\
    ?\")\n    local delimiter60=(\".\")\n    local delimiter61=(\"?\")\n    local\
    \ delimiter62=(\"!\")\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ delimiters=($delimiter)\n    local word\n    local bored\n    local bored_count\n\
    \    local delimiter\n    local delimiters\n    local word\n    local bored\n\
    \    local bored_count\n    local delimiter\n    local delimiters\n    local word\n\
    \    local bored\n    local bored_count\n    local delimiter\n    local delimiters\n\
    \    local word\n    local bored\n    local bored_count\n    local delimiter\n\
    \    local delimiters\n    local word\n    local bored\n    local bored_count\n\
    \    local delimiter\n    local delimiters\n    local word\n    local bored\n\
    \    local bored_count\n    local delimiter\n    local delimiters\n    local word\n\
    \    local bored\n    local bored_count\n    local delimiter\n    local delimiters\n\
    \    local word\n    local bored\n    local bored_count\n    local delimiter\n\
    \    local delimiters\n    local word\n    local bored\n    local bored_count\n\
    \    local delimiter\n    local delimiters\n    local word\n    local bored\n\
    \    local bored_count\n    local delimiter\n    local delimiters\n    local word\n\
    \    local bored\n    local bored_count\n    local delimiter\n    local delimiters\n\
    \    local word\n    local bored\n    local bored_count\n    local delimiter\n\
    \    local delimiters\n    local word\n    local bored\n    local bored_count\n\
    \    local delimiter\n    local delimiters\n    local word\n    local bored\n\
    \    local bored_count\n    local delimiter\n    local delimiters\n    local word\n\
    \    local bored\n    local bored_count\n    local delimiter\n    local delimiters\n\
    \    local word\n    local bored\n    local bored_count\n    local delimiter\n\
    \    local delimiters\n    local word\n    local bored\n    local bored_count\n\
    \    local delimiter\n    local delimiters\n    local word\n    local bored\n\
    \    local bored_count\n    local delimiter\n    local delimiters\n    local word\n\
    \    local bored\n    local bored_count\n    local delimiter\n    local delimiters\n\
    \    local word\n    local bored\n    local bored_count\n    local delimiter\n\
    \    local delimiters\n    local word\n    local \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiters=(\".\")\n  local\
    \ delimiters_count=${#delimiters[@]}\n  local delimiters_index=0 \n  local delimiters_words=()\n\
    \  local delimiters_words_count=0 \n  local delimiters_words_index=0 \n  local\
    \ delimiters_words_words=()\n  local delimiters_words_words_count=0 \n  local\
    \ delimiters_words_words_index=0 \n  local delimiters_words_words_words=()\n \
    \ local delimiters_words_words_words_count=0 \n  local delimiters_words_words_words_index=0\
    \ \n  local delimiters_words_words_words_words=()\n  local delimiters_words_words_words_words_count=0\
    \ \n  local delimiters_words_words_words_words_index=0 \n  local delimiters_words_words_words_words_words=()\n\
    \  local delimiters_words_words_words_words_words_count=0 \n  local delimiters_words_words_words_words_words_index=0\
    \ \n  local delimiters_words_words_words_words_words_words=()\n  local delimiters_words_words_words_words_words_words_count=0\
    \ \n  local delimiters_words_words_words_words_words_words_index=0 \n  local delimiters_words_words_words_words_words_words_words=()\n\
    \  local delimiters_words_words_words_words_words_words_words_count=0 \n  local\
    \ delimiters_words_words_words_words_words_words_words_words_index=0 \n  local\
    \ delimiters_words_words_words_words_words_words_words_words_words=()\n  local\
    \ delimiters_words_words_words_words_words_words_words_words_words_count=0 \n\
    \  local delimiters_words_words_words_words_words_words_words_words_words_index=0\
    \ \n  local delimiters_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiters_words_words_words_words_words_words_words_words_words_words_words_count=0\
    \ \n  local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_index=0\
    \ \n  local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=$1\n    local boredom_sentence=$2\n\
    \    local boredom_sentence_length=${#boredom_sentence}\n    local boredom_sentence_words=${#boredom_words}\n\
    \    local boredom_sentence_boredom_length=${#boredom_sentence_boredom_words}\n\
    \    local boredom_sentence_boredom_words=${#boredom_sentence_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_length=${#boredom_sentence_boredom_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_words=${#boredom_sentence_boredom_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_boredom_length=${#boredom_sentence_boredom_boredom_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_boredom_words=${#boredom_sentence_boredom_boredom_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_boredom_boredom_length=${#boredom_sentence_boredom_boredom_boredom_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_boredom_boredom_words=${#boredom_sentence_boredom_boredom_boredom_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_boredom_boredom_boredom_length=${#boredom_sentence_boredom_boredom_boredom_boredom_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_words=${#boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_length=${#boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_words}\n\
    \    local boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_words=${#boredom_sentence_boredom_boredom_bore\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu17cvie_.sh: line 47: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=($delimiter)\n\
    \  local word\n  local boredom\n  local boredom_count\n\n  for word in $words;\
    \ do\n    boredom=0\n    for boredom in $delimiters; do\n      if [[ \"$word\"\
    \ == *\"$boredom\"* ]]; then\n        boredom=1\n        break\n      fi\n   \
    \ done\n    if [[ $boredom -eq 0 ]]; then\n      boredoms=$((boredoms+1))\n  \
    \  fi\n  done\n  echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=$1\n    local boredom_sentence=$2\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local boredom_word=$boredom_word\n\
    \    local boredom_sentence=$boredom_sentence\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local boredom_word=$boredom_word\n\
    \    local boredom_sentence=$boredom_sentence\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local boredom_word=$boredom_word\n\
    \    local boredom_sentence=$boredom_sentence\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local boredom_word=$boredom_word\n\
    \    local boredom_sentence=$boredom_sentence\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local boredom_word=$boredom_word\n\
    \    local boredom_sentence=$boredom_sentence\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local boredom_word=$boredom_word\n\
    \    local boredom_sentence=$boredom_sentence\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local boredom_word=$boredom_word\n\
    \    local boredom_sentence=$boredom_sentence\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local boredom_word=$boredom_word\n\
    \    local boredom_sentence=$boredom_sentence\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local boredom_word=$boredom_word\n\
    \    local boredom_sentence=$boredom_sentence\n    local boredom_words=$boredom_words\n\
    \    local boredom_sentences=$boredom_sentences\n    local bo\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1 \n    local delimiters=( \".\" \"?\"\
    \ \"!\" )\n    for word in $words; do\n        for delimiter in \"${delimiters[@]}\"\
    ; do\n            if [[ \"$word\" == *\"$delimiter\"* ]]; then\n             \
    \   (( bored++ ))\n                break\n            fi\n        done\n    done\n\
    \    echo \"$bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_delimiter=$3\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\"\n   \
    \ local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\
    \"\n    local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\"\n   \
    \ local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\
    \"\n    local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\"\n   \
    \ local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\
    \"\n    local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\"\n   \
    \ local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\
    \"\n    local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed 's/\\.\\?!//g')\n    local boredom_word_count=0\n    local\
    \ boredom_word=$(echo $boredom_words | sed 's/\\.\\?!//g')\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_count=0\n\
    \    local boredom_word_count=0\n    local boredom_word_count=0\n    local boredom_word_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$1\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_word=''\n    local boredom_sentence=''\n    local boredom_sentence_index=0\n\
    \    local boredom_sentence_length=0\n    local boredom_sentence_word=''\n   \
    \ local boredom_sentence_word_length=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_index=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local bore\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ delimiters=(\".\")\n    local delimiters_=(\".?\")\n    local delimiters_=(\"\
    .!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\".\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\".?\")\n    local delimiters_=(\".!\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    .?\")\n    local delimiters_=(\".!\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\".?\")\n    local delimiters_=(\"\
    .!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\".?\")\n    local delimiters_=(\".!\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\".?\")\n    local\
    \ delimiters_=(\".!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\".?\")\n    local delimiters_=(\".!\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    .?\")\n    local delimiters_=(\".!\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\".?\")\n    local delimiters_=(\"\
    .!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\".?\")\n    local delimiters_=(\".!\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\".?\")\n    local\
    \ delimiters_=(\".!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\".?\")\n    local delimiters_=(\".!\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    .?\")\n    local delimiters_=(\".!\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\".?\")\n    local delimiters_=(\"\
    .!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\".?\")\n    local delimiters_=\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local input=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word_count\n  local boredom_sentence_count\n  local boredom_sentence_word\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  \n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ boredom_word=\"I\"\n    local boredom_count=0\n    local boredom_sentence=\"\
    \"\n    local boredom_sentence_count=0\n    local boredom_sentence_word=\"\"\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_length=0\n\
    \    local boredom_sentence_word_count2=0\n    local boredom_sentence_word_length2=0\n\
    \    local boredom_sentence_word_count3=0\n    local boredom_sentence_word_length3=0\n\
    \    local boredom_sentence_word_count4=0\n    local boredom_sentence_word_length4=0\n\
    \    local boredom_sentence_word_count5=0\n    local boredom_sentence_word_length5=0\n\
    \    local boredom_sentence_word_count6=0\n    local boredom_sentence_word_length6=0\n\
    \    local boredom_sentence_word_count7=0\n    local boredom_sentence_word_length7=0\n\
    \    local boredom_sentence_word_count8=0\n    local boredom_sentence_word_length8=0\n\
    \    local boredom_sentence_word_count9=0\n    local boredom_sentence_word_length9=0\n\
    \    local boredom_sentence_word_count10=0\n    local boredom_sentence_word_length10=0\n\
    \    local boredom_sentence_word_count11=0\n    local boredom_sentence_word_length11=0\n\
    \    local boredom_sentence_word_count12=0\n    local boredom_sentence_word_length12=0\n\
    \    local boredom_sentence_word_count13=0\n    local boredom_sentence_word_length13=0\n\
    \    local boredom_sentence_word_count14=0\n    local boredom_sentence_word_length14=0\n\
    \    local boredom_sentence_word_count15=0\n    local boredom_sentence_word_length15=0\n\
    \    local boredom_sentence_word_count16=0\n    local boredom_sentence_word_length16=0\n\
    \    local boredom_sentence_word_count17=0\n    local boredom_sentence_word_length17=0\n\
    \    local boredom_sentence_word_count18=0\n    local boredom_sentence_word_length18=0\n\
    \    local boredom_sentence_word_count19=0\n    local boredom_sentence_word_length19=0\n\
    \    local boredom_sentence_word_count20=0\n    local boredom_sentence_word_length20=0\n\
    \    local boredom_sentence_word_count21=0\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_delimiter=$3\n    local boredom_delimiter_count=0\n    local\
    \ boredom_delimiter_string=$boredom_delimiter\n    local boredom_delimiter_string_count=0\n\
    \    local boredom_delimiter_string_words=$boredom_delimiter\n    local boredom_delimiter_string_words_count=0\n\
    \    local boredom_delimiter_string_word=$boredom_delimiter\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_count=0\n\
    \    local boredom_delimiter_string_word_count=0\n    local boredom_delimiter_string_word_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiter=$2\n    local\
    \ sentence=$3\n    local delimiters=(\".\")\n    local delimiters_=(\"?\")\n \
    \   local delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_string=${delimiters[*]}\n  local delimiters_string_count=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_2=${#delimiters_string[@]}\n  local delimiters_string_count_3=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_4=${#delimiters_string[@]}\n  local delimiters_string_count_5=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_6=${#delimiters_string[@]}\n  local delimiters_string_count_7=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_8=${#delimiters_string[@]}\n  local delimiters_string_count_9=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_10=${#delimiters_string[@]}\n  local delimiters_string_count_11=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_12=${#delimiters_string[@]}\n  local delimiters_string_count_13=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_14=${#delimiters_string[@]}\n  local delimiters_string_count_15=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_16=${#delimiters_string[@]}\n  local delimiters_string_count_17=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_18=${#delimiters_string[@]}\n  local delimiters_string_count_19=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_20=${#delimiters_string[@]}\n  local delimiters_string_count_21=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_22=${#delimiters_string[@]}\n  local delimiters_string_count_23=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_24=${#delimiters_string[@]}\n  local delimiters_string_count_25=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_26=${#delimiters_string[@]}\n  local delimiters_string_count_27=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_28=${#delimiters_string[@]}\n  local delimiters_string_count_29=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_30=${#delimiters_string[@]}\n  local delimiters_string_count_31=${#delimiters_string[*]}\n\
    \  local delimiters_string_count_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=\"$1\"\n  local boredom_array=(\"\
    $boredom_string\")\n  local boredom_word=${boredom_array[0]}\n  local boredom_sentence=${boredom_array[1]}\n\
    \  local boredom_sentence_array=(\"$boredom_sentence\")\n  local boredom_sentence_word=${boredom_sentence_array[0]}\n\
    \  local boredom_sentence_sentence=${boredom_sentence_array[1]}\n  local boredom_sentence_sentence_array=(\"\
    $boredom_sentence_sentence\")\n  local boredom_sentence_sentence_word=${boredom_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence=${boredom_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_array=(\"$boredom_sentence_sentence_sentence\"\
    )\n  local boredom_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_array=(\"$boredom_sentence_sentence_sentence_sentence\"\
    )\n  local boredom_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_array=(\"$boredom_sentence_sentence_sentence_sentence_sentence_sentence\"\
    )\n  local boredom_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_array=(\"\
    $boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence\")\n \
    \ local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array=(\"\
    $boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence\"\
    )\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_i6p5se.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$*\n  local delimiters=(\".\")\n  local delimiter=\"\
    .\"\n  local delimiter_index=0\n  local delimiter_index2=0\n  local delimiter_index3=0\n\
    \  local delimiter_index4=0\n  local delimiter_index5=0\n  local delimiter_index6=0\n\
    \  local delimiter_index7=0\n  local delimiter_index8=0\n  local delimiter_index9=0\n\
    \  local delimiter_index10=0\n  local delimiter_index11=0\n  local delimiter_index12=0\n\
    \  local delimiter_index13=0\n  local delimiter_index14=0\n  local delimiter_index15=0\n\
    \  local delimiter_index16=0\n  local delimiter_index17=0\n  local delimiter_index18=0\n\
    \  local delimiter_index19=0\n  local delimiter_index20=0\n  local delimiter_index21=0\n\
    \  local delimiter_index22=0\n  local delimiter_index23=0\n  local delimiter_index24=0\n\
    \  local delimiter_index25=0\n  local delimiter_index26=0\n  local delimiter_index27=0\n\
    \  local delimiter_index28=0\n  local delimiter_index29=0\n  local delimiter_index30=0\n\
    \  local delimiter_index31=0\n  local delimiter_index32=0\n  local delimiter_index33=0\n\
    \  local delimiter_index34=0\n  local delimiter_index35=0\n  local delimiter_index36=0\n\
    \  local delimiter_index37=0\n  local delimiter_index38=0\n  local delimiter_index39=0\n\
    \  local delimiter_index40=0\n  local delimiter_index41=0\n  local delimiter_index42=0\n\
    \  local delimiter_index43=0\n  local delimiter_index44=0\n  local delimiter_index45=0\n\
    \  local delimiter_index46=0\n  local delimiter_index47=0\n  local delimiter_index48=0\n\
    \  local delimiter_index49=0\n  local delimiter_index50=0\n  local delimiter_index51=0\n\
    \  local delimiter_index52=0\n  local delimiter_index53=0\n  local delimiter_index54=0\n\
    \  local delimiter_index55=0\n  local delimiter_index56=0\n  local delimiter_index57=0\n\
    \  local delimiter_index58=0\n  local delimiter_index59=0\n  local delimiter_index60=0\n\
    \  local delimiter_index61=0\n  local delimiter_index62=0\n  local delimiter_index63=0\n\
    \  local delimiter_index64=0\n  local delimiter_index65=0\n  local delimiter_index66=0\n\
    \  local delimiter_index67=0\n  local delimiter_index68=0\n  local delimiter_index69=0\n\
    \  local delimiter_index\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_words=\"\
    \"\n    local boredom_sentence=\"\"\n    local boredom_sentence_count=0\n    local\
    \ boredom_sentence_words=\"\"\n    local boredom_sentence_sentence_count=0\n \
    \   local boredom_sentence_sentence_words=\"\"\n    local boredom_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_words=\"\"\n    local boredom_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_words=\"\"\n    local boredom_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_words=\"\"\n \
    \   local boredom_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1 \n    local delimiters=(\".\")\n  \
    \  local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=$1\n  local boredom_count=0\n  local boredom_string=\"I\"\n\
    \  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local boredom_count=0\n  local boredom_string=\"I\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_string=${delimiters[*]}\n  local delimiters_string_length=${#delimiters_string[*]}\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprpjxlx7i.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmprpjxlx7i.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiters=(\".\")\n  local\
    \ delimiters_length=${#delimiters[@]}\n  local delimiters_string=$(IFS=\".\";\
    \ echo \"${delimiters[*]}\")\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string[@]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=${#delimiters_string\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq0ztqacb.sh: line 68: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(echo \"$1\" | sed -n 's/^I\\?*\\.\\?*$//p')\n    echo\
    \ \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 16: Invalid preceding regular expression

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local word\n \
    \ local boredom_count=0\n  local boredom_word\n  local boredom_word_count=0\n\
    \  local boredom_word_count2=0\n  local boredom_word_count3=0\n  local boredom_word_count4=0\n\
    \  local boredom_word_count5=0\n  local boredom_word_count6=0\n  local boredom_word_count7=0\n\
    \  local boredom_word_count8=0\n  local boredom_word_count9=0\n  local boredom_word_count10=0\n\
    \  local boredom_word_count11=0\n  local boredom_word_count12=0\n  local boredom_word_count13=0\n\
    \  local boredom_word_count14=0\n  local boredom_word_count15=0\n  local boredom_word_count16=0\n\
    \  local boredom_word_count17=0\n  local boredom_word_count18=0\n  local boredom_word_count19=0\n\
    \  local boredom_word_count20=0\n  local boredom_word_count21=0\n  local boredom_word_count22=0\n\
    \  local boredom_word_count23=0\n  local boredom_word_count24=0\n  local boredom_word_count25=0\n\
    \  local boredom_word_count26=0\n  local boredom_word_count27=0\n  local boredom_word_count28=0\n\
    \  local boredom_word_count29=0\n  local boredom_word_count30=0\n  local boredom_word_count31=0\n\
    \  local boredom_word_count32=0\n  local boredom_word_count33=0\n  local boredom_word_count34=0\n\
    \  local boredom_word_count35=0\n  local boredom_word_count36=0\n  local boredom_word_count37=0\n\
    \  local boredom_word_count38=0\n  local boredom_word_count39=0\n  local boredom_word_count40=0\n\
    \  local boredom_word_count41=0\n  local boredom_word_count42=0\n  local boredom_word_count43=0\n\
    \  local boredom_word_count44=0\n  local boredom_word_count45=0\n  local boredom_word_count46=0\n\
    \  local boredom_word_count47=0\n  local boredom_word_\n}\n\ncandidate() {\n \
    \   is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=( \".\" \"\
    ?\" \"!\" )\n    for word in $words; do\n        for delimiter in \"${delimiters[@]}\"\
    ; do\n            if [[ \"$word\" == *\"$delimiter\"* ]]; then\n             \
    \   (( boredoms += 1 ))\n            fi\n        done\n    done\n    echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiter=(\"?\" \"!\" \"?\")\n    local delimiter_index=0\n    local\
    \ delimiter_index2=0\n    local delimiter_index3=0\n    local delimiter_index4=0\n\
    \    local delimiter_index5=0\n    local delimiter_index6=0\n    local delimiter_index7=0\n\
    \    local delimiter_index8=0\n    local delimiter_index9=0\n    local delimiter_index10=0\n\
    \    local delimiter_index11=0\n    local delimiter_index12=0\n    local delimiter_index13=0\n\
    \    local delimiter_index14=0\n    local delimiter_index15=0\n    local delimiter_index16=0\n\
    \    local delimiter_index17=0\n    local delimiter_index18=0\n    local delimiter_index19=0\n\
    \    local delimiter_index20=0\n    local delimiter_index21=0\n    local delimiter_index22=0\n\
    \    local delimiter_index23=0\n    local delimiter_index24=0\n    local delimiter_index25=0\n\
    \    local delimiter_index26=0\n    local delimiter_index27=0\n    local delimiter_index28=0\n\
    \    local delimiter_index29=0\n    local delimiter_index30=0\n    local delimiter_index31=0\n\
    \    local delimiter_index32=0\n    local delimiter_index33=0\n    local delimiter_index34=0\n\
    \    local delimiter_index35=0\n    local delimiter_index36=0\n    local delimiter_index37=0\n\
    \    local delimiter_index38=0\n    local delimiter_index39=0\n    local delimiter_index40=0\n\
    \    local delimiter_index41=0\n    local delimiter_index42=0\n    local delimiter_index43=0\n\
    \    local delimiter_index44=0\n    local delimiter_index45=0\n    local delimiter_index46=0\n\
    \    local delimiter_index47=0\n    local delimiter_index48=0\n    local delimiter_index49=0\n\
    \    local delimiter_index50=0\n    local delimiter_index51=0\n    local delimiter_index52=0\n\
    \    local delimiter_index53=0\n    local delimiter_index54=0\n    local delimiter_index55=0\n\
    \    local delimiter_index56=0\n    local delimiter_index57=0\n    local delimiter_index58=0\n\
    \    local delimiter_index59=0\n    local delimiter_index60=0\n    local delimiter_index61=0\n\
    \    local delimiter_index62=0\n    local delimiter_index63=0\n    local delimiter_index64=0\n\
    \    local delimiter_index65=0\n    local delimiter_index66=0\n    local delimiter_index67=0\n\
    \    local delimiter_index68=0\n    local delimiter_index\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local delimiters=(\"\
    .\")\n    local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[$delimiters_count]}\n\
    \    local delimiters_string_count=${#delimiters_string}\n    local delimiters_string_index=0\n\
    \    local delimiters_string_index2=0\n    local delimiters_string_index3=0\n\
    \    local delimiters_string_index4=0\n    local delimiters_string_index5=0\n\
    \    local delimiters_string_index6=0\n    local delimiters_string_index7=0\n\
    \    local delimiters_string_index8=0\n    local delimiters_string_index9=0\n\
    \    local delimiters_string_index10=0\n    local delimiters_string_index11=0\n\
    \    local delimiters_string_index12=0\n    local delimiters_string_index13=0\n\
    \    local delimiters_string_index14=0\n    local delimiters_string_index15=0\n\
    \    local delimiters_string_index16=0\n    local delimiters_string_index17=0\n\
    \    local delimiters_string_index18=0\n    local delimiters_string_index19=0\n\
    \    local delimiters_string_index20=0\n    local delimiters_string_index21=0\n\
    \    local delimiters_string_index22=0\n    local delimiters_string_index23=0\n\
    \    local delimiters_string_index24=0\n    local delimiters_string_index25=0\n\
    \    local delimiters_string_index26=0\n    local delimiters_string_index27=0\n\
    \    local delimiters_string_index28=0\n    local delimiters_string_index29=0\n\
    \    local delimiters_string_index30=0\n    local delimiters_string_index31=0\n\
    \    local delimiters_string_index32=0\n    local delimiters_string_index33=0\n\
    \    local delimiters_string_index34=0\n    local delimiters_string_index35=0\n\
    \    local delimiters_string_index36=0\n    local delimiters_string_index37=0\n\
    \    local delimiters_string_index38=0\n    local delimiters_string_index39=0\n\
    \    local delimiters_string_index40=0\n    local delimiters_string_index41=0\n\
    \    local delimiters_string_index42=0\n    local delimiters_string_index43=0\n\
    \    local delimiters_string_index44=0\n    local delimiters_string_index45=0\n\
    \    local delimiters_string_index46=0\n    local delimiters_string_index47=0\n\
    \    local delimiters_string_index48=0\n    local delimiters_string_index49=0\n\
    \    local delimiters_string_index50=0\n    local \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredoms=0\n  local word\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_count=${#delimiters_array[@]}\n\
    \  local delimiters_array_index=${1}\n  local delimiters_array_values=(\"${delimiters_array[@]}\"\
    )\n  local delimiters_array_values_count=${#delimiters_array_values[@]}\n  local\
    \ delimiters_array_values_index=${2}\n  local delimiters_array_values_values=(\"\
    ${delimiters_array_values[@]}\")\n  local delimiters_array_values_values_count=${#delimiters_array_values_values[@]}\n\
    \  local delimiters_array_values_values_index=${3}\n  local delimiters_array_values_values_values=(\"\
    ${delimiters_array_values_values[@]}\")\n  local delimiters_array_values_values_values_count=${#delimiters_array_values_values_values[@]}\n\
    \  local delimiters_array_values_values_values_index=${4}\n  local delimiters_array_values_values_values_values=(\"\
    ${delimiters_array_values_values_values[@]}\")\n  local delimiters_array_values_values_values_values_count=${#delimiters_array_values_values_values_values[@]}\n\
    \  local delimiters_array_values_values_values_values_index=${5}\n  local delimiters_array_values_values_values_values_values=(\"\
    ${delimiters_array_values_values_values_values[@]}\")\n  local delimiters_array_values_values_values_values_values_count=${#delimiters_array_values_values_values_values_values[@]}\n\
    \  local delimiters_array_values_values_values_values_values_index=${6}\n  local\
    \ delimiters_array_values_values_values_values_values_values=(\"${delimiters_array_values_values_values_values_values[@]}\"\
    )\n  local delimiters_array_values_values_values_values_values_values_count=${#delimiters_array_values_values_values_values_values[@]}\n\
    \  local delimiters_array_values_values_values_values_values_values_index=${7}\n\
    \  local delimiters_array_values_values_values_values_values_values_values=(\"\
    ${delimiters_array_values_values_values_values_values_values[@]}\")\n  local delimiters_array_values_values_values_values_values_values_values_count=${#delimiters_array_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_array_values_values_values_values_values_values_values_index=${8}\n\
    \  local delimiters_array_values_values_values_values_values_values_values_values=(\"\
    ${delimiters_array_values_values_values_values_values_values_values_values[@]}\"\
    )\n  local delimiters_array_values_values_values_values_values_values_\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe36bbs1b.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiter=$2\n    local\
    \ sentence=$3\n    local delimiter_count=0\n    local sentence_count=0\n    local\
    \ delimiter_index=0\n    local sentence_length=$((${#sentence} - 1))\n    local\
    \ sentence_words=$((${#sentence} - 1))\n    local sentence_word_index=0\n    local\
    \ sentence_word_count=0\n    local sentence_word_length=$((${#sentence} - 1))\n\
    \    local sentence_word_index=0\n    local sentence_word_count=0\n    local sentence_word_length=$((${#sentence}\
    \ - 1))\n    local sentence_word_index=0\n    local sentence_word_count=0\n  \
    \  local sentence_word_length=$((${#sentence} - 1))\n    local sentence_word_index=0\n\
    \    local sentence_word_count=0\n    local sentence_word_length=$((${#sentence}\
    \ - 1))\n    local sentence_word_index=0\n    local sentence_word_count=0\n  \
    \  local sentence_word_length=$((${#sentence} - 1))\n    local sentence_word_index=0\n\
    \    local sentence_word_count=0\n    local sentence_word_length=$((${#sentence}\
    \ - 1))\n    local sentence_word_index=0\n    local sentence_word_count=0\n  \
    \  local sentence_word_length=$((${#sentence} - 1))\n    local sentence_word_index=0\n\
    \    local sentence_word_count=0\n    local sentence_word_length=$((${#sentence}\
    \ - 1))\n    local sentence_word_index=0\n    local sentence_word_count=0\n  \
    \  local sentence_word_length=$((${#sentence} - 1))\n    local sentence_word_index=0\n\
    \    local sentence_word_count=0\n    local sentence_word_length=$((${#sentence}\
    \ - 1))\n    local sentence_word_index=0\n    local sentence_word_count=0\n  \
    \  local sentence_word_length=$((${#sentence} - 1))\n    local sentence_word_index=0\n\
    \    local sentence_word_count=0\n    local sentence_word_length=$((${#sentence}\
    \ - 1))\n    local sentence_word_index=0\n    local sentence_word_count=0\n  \
    \  local sentence_word_length=$((${#sentence} - 1))\n    local sentence_word_index=0\n\
    \    local sentence_word_count=0\n    local sentence_word_length=$((${#sentence}\
    \ - 1))\n    local sentence_word_index=0\n    local sentence_word_count=0\n  \
    \  local sentence_word_length=$((${#sentence} - 1))\n    local sentence_word_index=0\n\
    \    local sentence_word_count=0\n    local sentence_word_length=$((${#sentence}\
    \ - 1))\n    local sentence_word_index=0\n    local sentence_word_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=${#delimiters_string[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 boredoms=$((boredoms+1))\n  local delimiter=$2\
    \ delimiter=$((delimiter+1))\n  local sentence=$3 sentence=$((sentence+1))\n \
    \ local delimiters=$4 delimiters=$((delimiters+1))\n  local delimiter=$((delimiter+1))\n\
    \  while [[ \"$sentence\" -le \"$delimiters\" ]]; do\n    if [[ \"$sentence\"\
    \ -eq \"$delimiter\" ]]; then\n      sentence=$((sentence+1))\n      delimiter=$((delimiter+1))\n\
    \      continue\n    fi\n    if [[ \"$sentence\" -eq \"$delimiters\" ]]; then\n\
    \      sentence=$((sentence+1))\n      delimiter=$((delimiter+1))\n      continue\n\
    \    fi\n    if [[ \"$sentence\" -eq \"$delimiter\" ]]; then\n      sentence=$((sentence+1))\n\
    \      delimiter=$((delimiter+1))\n      continue\n    fi\n    if [[ \"$sentence\"\
    \ -eq \"$delimiters\" ]]; then\n      sentence=$((sentence+1))\n      delimiter=$((delimiter+1))\n\
    \      continue\n    fi\n    if [[ \"$sentence\" -eq \"$delimiter\" ]]; then\n\
    \      sentence=$((sentence+1))\n      delimiter=$((delimiter+1))\n      continue\n\
    \    fi\n    if [[ \"$sentence\" -eq \"$delimiters\" ]]; then\n      sentence=$((sentence+1))\n\
    \      delimiter=$((delimiter+1))\n      continue\n    fi\n    if [[ \"$sentence\"\
    \ -eq \"$delimiter\" ]]; then\n      sentence=$((sentence+1))\n      delimiter=$((delimiter+1))\n\
    \      continue\n    fi\n    if [[ \"$sentence\" -eq \"$delimiters\" ]]; then\n\
    \      sentence=$((sentence+1))\n      delimiter=$((delimiter+1))\n      continue\n\
    \    fi\n    if [[ \"$sentence\" -eq \"$delimiter\" ]]; then\n      sentence=$((sentence+1))\n\
    \      delimiter=$((delimiter+1))\n      continue\n    fi\n    if [[ \"$sentence\"\
    \ -eq \"$delimiters\" ]]; then\n      sentence=$((sentence+1))\n      delimiter=$((delimiter+1))\n\
    \      continue\n    fi\n    if [[ \"$sentence\" -eq \"$delimiter\" ]]; then\n\
    \      sentence=$((sentence+1))\n      delimiter=$((delimiter+1))\n      continue\n\
    \    fi\n    if [[ \"$sentence\" -eq \"$delimiters\" ]]; then\n      sentence=$((sentence+1))\n\
    \      delimiter=$((delimiter+1))\n      continue\n    fi\n    if [[ \"$sentence\"\
    \ -eq \"$delimiter\" ]]; then\n      sentence=$((sentence+1))\n      delimiter=$((delimiter+1))\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpesgsctyk.sh: line 83: syntax error near unexpected token `}''

    /tmp/tmpesgsctyk.sh: line 83: `}''

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_sentence=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ boredom_sentence_length=()\n    local boredom_sentence_length=()\n    local\
    \ bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiter=.?!\n    for\
    \ word in $words; do\n        if [[ \"$word\" =~ $delimiter ]]; then\n       \
    \     boredoms=$((boredoms+1))\n        fi\n    done\n    echo \"$boredoms\"\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_words_in_sentence\n  local boredom_sentences_in_word\n  local\
    \ boredom_words_in_sentence\n  local boredom_sentences_in_sentence\n  local boredom_words_in_word\n\
    \  local boredom_sentences_in_word\n  local boredom_words_in_sentence\n  local\
    \ boredom_sentences_in_sentence\n  local boredom_words_in_word\n  local boredom_sentences_in_word\n\
    \  local boredom_words_in_sentence\n  local boredom_sentences_in_sentence\n  local\
    \ boredom_words_in_word\n  local boredom_sentences_in_word\n  local boredom_words_in_sentence\n\
    \  local boredom_sentences_in_sentence\n  local boredom_words_in_word\n  local\
    \ boredom_sentences_in_word\n  local boredom_words_in_sentence\n  local boredom_sentences_in_sentence\n\
    \  local boredom_words_in_word\n  local boredom_sentences_in_word\n  local boredom_words_in_sentence\n\
    \  local boredom_sentences_in_sentence\n  local boredom_words_in_word\n  local\
    \ boredom_sentences_in_word\n  local boredom_words_in_sentence\n  local boredom_sentences_in_sentence\n\
    \  local boredom_words_in_word\n  local boredom_sentences_in_word\n  local boredom_words_in_sentence\n\
    \  local boredom_sentences_in_sentence\n  local boredom_words_in_word\n  local\
    \ boredom_sentences_in_word\n  local boredom_words_in_sentence\n  local boredom_sentences_in_sentence\n\
    \  local boredom_words_in_word\n  local boredom_sentences_in_word\n  local boredom_words_in_sentence\n\
    \  local boredom_sentences_in_sentence\n  local boredom_words_in_word\n  local\
    \ boredom_sentences_in_word\n  local boredom_words_in_sentence\n  local boredom_sentences_in_sentence\n\
    \  local boredom_words_in_word\n  local boredom_sentences_in_word\n  local boredom_words_in_sentence\n\
    \  local boredom_sentences_in_sentence\n  local boredom_words_in_word\n  local\
    \ boredom_sentences_in_word\n  local boredom_words_in_sentence\n  local boredom_sentences_in_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=\"$1\"\n  local boredom_word=\"\
    I\"\n  local boredom_sentence=\".\"\n  local boredom_sentence_delimiter=\".\"\n\
    \  local boredom_sentence_delimiter_regex=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex2=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex3=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex4=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex5=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex6=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex7=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex8=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex9=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex10=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex11=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex12=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex13=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex14=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex15=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex16=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex17=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex18=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex19=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex20=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex21=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex22=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex23=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex24=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex25=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex26=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex27=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex28=\"\\.|\\?|!\"\n  local boredom_sentence_delimiter_regex29=\"\
    \\.|\\?|!\"\n  local boredom_sentence_delimiter_regex30=\"\\.|\\?|!\"\n  local\
    \ boredom_sentence_delimiter_regex31=\"\\.|\\?|!\"\n  local \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(grep -E '^I' <<< \"$1\")\n    local boredom_count=$((${#boredoms}\
    \ + 1))\n    echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiter=$2\n  local delimiters=($delimiter)\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiter\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredoms=0\n    local word\n    for word\
    \ in $string; do\n        if [[ \"$word\" == \"I\" ]]; then\n            boredoms=$((boredoms+1))\n\
    \        fi\n    done\n    echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"\
    ${delimiters[@]}\")\n    local delimiters_array_length=${#delimiters_array[@]}\n\
    \    local delimiters_array_elements=${delimiters_array[@]}\n    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_element\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiter=(\"\
    ?\")\n  local delimiter2=(\"!\")\n  local delimiter3=(\"?\")\n  local delimiter4=(\"\
    .\")\n  local delimiter5=(\"?\")\n  local delimiter6=(\"!\")\n  local delimiter7=(\"\
    ?\")\n  local delimiter8=(\".\")\n  local delimiter9=(\"?\")\n  local delimiter10=(\"\
    !\")\n  local delimiter11=(\"?\")\n  local delimiter12=(\".\")\n  local delimiter13=(\"\
    ?\")\n  local delimiter14=(\"!\")\n  local delimiter15=(\"?\")\n  local delimiter16=(\"\
    .\")\n  local delimiter17=(\"?\")\n  local delimiter18=(\"!\")\n  local delimiter19=(\"\
    ?\")\n  local delimiter20=(\".\")\n  local delimiter21=(\"?\")\n  local delimiter22=(\"\
    !\")\n  local delimiter23=(\"?\")\n  local delimiter24=(\".\")\n  local delimiter25=(\"\
    ?\")\n  local delimiter26=(\"!\")\n  local delimiter27=(\"?\")\n  local delimiter28=(\"\
    .\")\n  local delimiter29=(\"?\")\n  local delimiter30=(\"!\")\n  local delimiter31=(\"\
    ?\")\n  local delimiter32=(\".\")\n  local delimiter33=(\"?\")\n  local delimiter34=(\"\
    !\")\n  local delimiter35=(\"?\")\n  local delimiter36=(\".\")\n  local delimiter37=(\"\
    ?\")\n  local delimiter38=(\"!\")\n  local delimiter39=(\"?\")\n  local delimiter40=(\"\
    .\")\n  local delimiter41=(\"?\")\n  local delimiter42=(\"!\")\n  local delimiter43=(\"\
    ?\")\n  local delimiter44=(\".\")\n  local delimiter45=(\"?\")\n  local delimiter46=(\"\
    !\")\n  local delimiter47=(\"?\")\n  local delimiter48=(\".\")\n  local delimiter49=(\"\
    ?\")\n  local delimiter50=(\"!\")\n  local delimiter51=(\"?\")\n  local delimiter52=(\"\
    .\")\n  local delimiter53=(\"?\")\n  local delimiter54=(\"!\")\n  local delimiter55=(\"\
    ?\")\n  local delimiter56=(\".\")\n  local delimiter57=(\"?\")\n  local delimiter58=(\"\
    !\")\n  local delimiter59=(\"?\")\n  local delimiter60=(\".\")\n  local delimiter61=(\"\
    ?\")\n  local delimiter62=(\"!\")\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_string=${delimiters[*]}\n  local delimiters_string_count=${#delimiters_string[*]}\n\
    \  local delimiters_string_array=(${delimiters_string})\n  local delimiters_string_array_count=${#delimiters_string_array[@]}\n\
    \  local delimiters_string_array_element=${delimiters_string_array[*]}\n  local\
    \ delimiters_string_array_element_count=${#delimiters_string_array_element[*]}\n\
    \  local delimiters_string_array_element_element_count=${#delimiters_string_array_element[@]}\n\
    \  local delimiters_string_array_element_element_element_count=${#delimiters_string_array_element[@][@]}\n\
    \  local delimiters_string_array_element_element_element_element_count=${#delimiters_string_array_element[@][@][@]}\n\
    \  local delimiters_string_array_element_element_element_element_element_count=${#delimiters_string_array_element[@][@][@][@]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_count=${#delimiters_string_array_element[@][@][@][@][@]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element[@][@][@][@][@][@][@]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element[@][@][@][@][@][@][@][@]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element[@][@][@][@][@][@][@][@][@]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element[@][@][@][@][@][@][@][@][@][@][@]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element[@][@][@][@][@][@][@][@][@][@][@][@]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element[@][@][@][@][@][@][@][@][@\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgnf88qao.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiters=(\".\")\n  local\
    \ delimiters_length=${#delimiters[@]}\n  local delimiters_array=(${delimiters[@]})\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_elements=${delimiters_array[@]}\n\
    \  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n \
    \ local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n \
    \ local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(echo \"$1\" | sed -n 's/^I\\?.*\\.\\?$//p')\n    local\
    \ boredom_count=0\n    for boredom in $boredoms; do\n        boredom_count=$((boredom_count\
    \ + 1))\n    done\n    echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiter=$2\n    local sentence=$3\n\
    \    local delimiters=(\".\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\",\")\n    local delimiters_=(\";\")\n    local\
    \ delimiters_=(\":\")\n    local delimiters_=(\".\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\",\")\n    local\
    \ delimiters_=(\";\")\n    local delimiters_=(\":\")\n    local delimiters_=(\"\
    .\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\",\")\n    local delimiters_=(\";\")\n    local delimiters_=(\"\
    :\")\n    local delimiters_=(\".\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\",\")\n    local delimiters_=(\"\
    ;\")\n    local delimiters_=(\":\")\n    local delimiters_=(\".\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ,\")\n    local delimiters_=(\";\")\n    local delimiters_=(\":\")\n    local\
    \ delimiters_=(\".\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\",\")\n    local delimiters_=(\";\")\n    local\
    \ delimiters_=(\":\")\n    local delimiters_=(\".\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\",\")\n    local\
    \ delimiters_=(\";\")\n    local delimiters_=(\":\")\n    local delimiters_=(\"\
    .\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\",\")\n    local delimiters_=(\";\")\n    local delimiters_=(\"\
    :\")\n    local delimiters_=(\".\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\",\")\n    local delimiters_=(\"\
    ;\")\n    local delimiters_=(\":\")\n    local delimiters_=(\".\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ,\")\n    local delimiters_=(\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpesaz9myh.sh: line 89: unexpected EOF while looking for matching
    `"''

    /tmp/tmpesaz9myh.sh: line 93: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiter=(\"?\" \"!\" \"?\")\n    for word in $words; do\n       \
    \ local delimiter_index=0\n        for delimiter in \"${delimiters[@]}\"; do\n\
    \            if [[ \"$word\" == *\"$delimiter\"* ]]; then\n                ((\
    \ delimiter_index++ ))\n            fi\n        done\n        if [[ \"$delimiter_index\"\
    \ -eq 0 ]]; then\n            (( boredoms++ ))\n        fi\n    done\n    echo\
    \ \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 boredoms=$((boredoms+1))\n    local\
    \ delimiter=$2 words=$((words+1))\n    local delimiters=(\".\")(\"?\")(\"!\")\n\
    \    for delimiter in \"${delimiters[@]}\"; do\n        local delimiters=(\"$delimiter\"\
    )\n    done\n    local delimiters=(\"${delimiters[*]}\")\n    for word in $words;\
    \ do\n        local delimiters=(\"${delimiters[@]}\")\n        if [[ \"$word\"\
    \ == \"I\" ]]; then\n            local delimiters=(\"${delimiters[@]}\")\n   \
    \     fi\n    done\n    local delimiters=(\"${delimiters[*]}\")\n    for delimiter\
    \ in \"${delimiters[@]}\"; do\n        local delimiters=(\"$delimiter\")\n   \
    \ done\n    local delimiters=(\"${delimiters[*]}\")\n    for delimiter in \"${delimiters[@]}\"\
    ; do\n        local delimiters=(\"$delimiter\")\n    done\n    local delimiters=(\"\
    ${delimiters[*]}\")\n    for delimiter in \"${delimiters[@]}\"; do\n        local\
    \ delimiters=(\"$delimiter\")\n    done\n    local delimiters=(\"${delimiters[*]}\"\
    )\n    for delimiter in \"${delimiters[@]}\"; do\n        local delimiters=(\"\
    $delimiter\")\n    done\n    local delimiters=(\"${delimiters[*]}\")\n    for\
    \ delimiter in \"${delimiters[@]}\"; do\n        local delimiters=(\"$delimiter\"\
    )\n    done\n    local delimiters=(\"${delimiters[*]}\")\n    for delimiter in\
    \ \"${delimiters[@]}\"; do\n        local delimiters=(\"$delimiter\")\n    done\n\
    \    local delimiters=(\"${delimiters[*]}\")\n    for delimiter in \"${delimiters[@]}\"\
    ; do\n        local delimiters=(\"$delimiter\")\n    done\n    local delimiters=(\"\
    ${delimiters[*]}\")\n    for delimiter in \"${delimiters[@]}\"; do\n        local\
    \ delimiters=(\"$delimiter\")\n    done\n    local delimiters=(\"${delimiters[*]}\"\
    )\n    for delimiter in \"${delimiters[@]}\"; do\n        local delimiters=(\"\
    $delimiter\")\n    done\n    local delimiters=(\"${delimiters[*]}\")\n    for\
    \ delimiter in \"${delimiters[@]}\"; do\n        local delimiters=(\"$delimiter\"\
    )\n    done\n    local delimiters=(\"${delimiters[*]}\")\n    for delimiter in\
    \ \"${delimiters[\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxvjykcae.sh: line 16: syntax error near unexpected token `(''

    /tmp/tmpxvjykcae.sh: line 16: `    local delimiters=(".")("?")("!")''

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiter=$2\n    local\
    \ sentence=$3\n    local boredom_word=\"I\"\n    local boredom_delimiter=\".\"\
    \n    local boredom_sentence=\".\"\n    local boredom_word_count=0\n    local\
    \ boredom_sentence_count=0\n    local boredom_word_count2=0\n    local boredom_sentence_count2=0\n\
    \    local boredom_word_count3=0\n    local boredom_sentence_count3=0\n    local\
    \ boredom_word_count4=0\n    local boredom_sentence_count4=0\n    local boredom_word_count5=0\n\
    \    local boredom_sentence_count5=0\n    local boredom_word_count6=0\n    local\
    \ boredom_sentence_count6=0\n    local boredom_word_count7=0\n    local boredom_sentence_count7=0\n\
    \    local boredom_word_count8=0\n    local boredom_sentence_count8=0\n    local\
    \ boredom_word_count9=0\n    local boredom_sentence_count9=0\n    local boredom_word_count10=0\n\
    \    local boredom_sentence_count10=0\n    local boredom_word_count11=0\n    local\
    \ boredom_sentence_count11=0\n    local boredom_word_count12=0\n    local boredom_sentence_count12=0\n\
    \    local boredom_word_count13=0\n    local boredom_sentence_count13=0\n    local\
    \ boredom_word_count14=0\n    local boredom_sentence_count14=0\n    local boredom_word_count15=0\n\
    \    local boredom_sentence_count15=0\n    local boredom_word_count16=0\n    local\
    \ boredom_sentence_count16=0\n    local boredom_word_count17=0\n    local boredom_sentence_count17=0\n\
    \    local boredom_word_count18=0\n    local boredom_sentence_count18=0\n    local\
    \ boredom_word_count19=0\n    local boredom_sentence_count19=0\n    local boredom_word_count20=0\n\
    \    local boredom_sentence_count20=0\n    local boredom_word_count21=0\n    local\
    \ boredom_sentence_count21=0\n    local boredom_word_count22=0\n    local boredom_sentence_count22=0\n\
    \    local boredom_word_count23=0\n    local boredom_sentence_count23=0\n\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_length}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements}\n  \
    \  local delimiters_array_elements_elements=${delimiters_array_elements_length}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements_length}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_length}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9c0iwfh7.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(grep -E '^I' $1 | wc -l)\n    echo \"$boredoms\"\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello: No such file or directory

    grep: world: No such file or directory

    grep: Is: No such file or directory

    grep: the: No such file or directory

    grep: sky: No such file or directory

    grep: blue?: No such file or directory

    grep: I: No such file or directory

    grep: love: No such file or directory

    grep: It: No such file or directory

    grep: \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiter=.?!\n    local\
    \ delimiter_count=0\n    local delimiter_index=0\n    local delimiter_index2=0\n\
    \    local delimiter_index3=0\n    local delimiter_index4=0\n    local delimiter_index5=0\n\
    \    local delimiter_index6=0\n    local delimiter_index7=0\n    local delimiter_index8=0\n\
    \    local delimiter_index9=0\n    local delimiter_index10=0\n    local delimiter_index11=0\n\
    \    local delimiter_index12=0\n    local delimiter_index13=0\n    local delimiter_index14=0\n\
    \    local delimiter_index15=0\n    local delimiter_index16=0\n    local delimiter_index17=0\n\
    \    local delimiter_index18=0\n    local delimiter_index19=0\n    local delimiter_index20=0\n\
    \    local delimiter_index21=0\n    local delimiter_index22=0\n    local delimiter_index23=0\n\
    \    local delimiter_index24=0\n    local delimiter_index25=0\n    local delimiter_index26=0\n\
    \    local delimiter_index27=0\n    local delimiter_index28=0\n    local delimiter_index29=0\n\
    \    local delimiter_index30=0\n    local delimiter_index31=0\n    local delimiter_index32=0\n\
    \    local delimiter_index33=0\n    local delimiter_index34=0\n    local delimiter_index35=0\n\
    \    local delimiter_index36=0\n    local delimiter_index37=0\n    local delimiter_index38=0\n\
    \    local delimiter_index39=0\n    local delimiter_index40=0\n    local delimiter_index41=0\n\
    \    local delimiter_index42=0\n    local delimiter_index43=0\n    local delimiter_index44=0\n\
    \    local delimiter_index45=0\n    local delimiter_index46=0\n    local delimiter_index47=0\n\
    \    local delimiter_index48=0\n    local delimiter_index49=0\n    local delimiter_index50=0\n\
    \    local delimiter_index51=0\n    local delimiter_index52=0\n    local delimiter_index53=0\n\
    \    local delimiter_index54=0\n    local delimiter_index55=0\n    local delimiter_index56=0\n\
    \    local delimiter_index57=0\n    local delimiter_index58=0\n    local delimiter_index59=0\n\
    \    local delimiter_index60=0\n    local delimiter_index61=0\n    local delimiter_index62=0\n\
    \    local delimiter_index63=0\n    local delimiter_index64=0\n    local delimiter_index65=0\n\
    \    local delimiter_index66=0\n    local delimiter_index67=0\n    local delimiter_index68=0\n\
    \    local delimiter_index69=0\n    \n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiter=$2\n    local\
    \ delimiters=\".?!\"\n    for (( i=1; i<${#word}; i++ )); do\n        if [[ ${word:$i:1}\
    \ == $delimiter ]]; then\n            (( boredoms += 1 ))\n        fi\n    done\n\
    \    echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiter=$2\n  local boredom_words=()\n\
    \  local boredom_delimiters=()\n  local boredom_delimiters_count=()\n  local boredom_word=()\n\
    \  local boredom_delimiter=()\n  local boredom_word_count=()\n  local boredom_delimiter_count=()\n\
    \  local boredom_word_length=()\n  local boredom_delimiter_length=()\n  local\
    \ boredom_word_count=()\n  local boredom_delimiter_count=()\n  local boredom_word_length=()\n\
    \  local boredom_delimiter_length=()\n  local boredom_word_count=()\n  local boredom_delimiter_count=()\n\
    \  local boredom_word_length=()\n  local boredom_delimiter_length=()\n  local\
    \ boredom_word_count=()\n  local boredom_delimiter_count=()\n  local boredom_word_length=()\n\
    \  local boredom_delimiter_length=()\n  local boredom_word_count=()\n  local boredom_delimiter_count=()\n\
    \  local boredom_word_length=()\n  local boredom_delimiter_length=()\n  local\
    \ boredom_word_count=()\n  local boredom_delimiter_count=()\n  local boredom_word_length=()\n\
    \  local boredom_delimiter_length=()\n  local boredom_word_count=()\n  local boredom_delimiter_count=()\n\
    \  local boredom_word_length=()\n  local boredom_delimiter_length=()\n  local\
    \ boredom_word_count=()\n  local boredom_delimiter_count=()\n  local boredom_word_length=()\n\
    \  local boredom_delimiter_length=()\n  local boredom_word_count=()\n  local boredom_delimiter_count=()\n\
    \  local boredom_word_length=()\n  local boredom_delimiter_length=()\n  local\
    \ boredom_word_count=()\n  local boredom_delimiter_count=()\n  local boredom_word_length=()\n\
    \  local boredom_delimiter_length=()\n  local boredom_word_count=()\n  local boredom_delimiter_count=()\n\
    \  local boredom_word_length=()\n  local boredom_delimiter_length=()\n  local\
    \ boredom_word_count=()\n  local boredom_delimiter_count=()\n  local boredom_word_length=()\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string=$( printf \"%s\"\
    \ \"${delimiters_string[@]}\" )\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string=$( printf \"%s\" \"${delimiters_string[@]}\"\
    \ )\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string=$( printf \"%s\" \"${delimiters_string[@]}\" )\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string=$( printf \"%s\" \"${delimiters_string[@]}\" )\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string=$(\
    \ printf \"%s\" \"${delimiters_string[@]}\" )\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string=$( printf \"%s\"\
    \ \"${delimiters_string[@]}\" )\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string=$( printf \"%s\" \"${delimiters_string[@]}\"\
    \ )\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string=$( printf \"%s\" \"${delimiters_string[@]}\" )\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string=$( printf \"%s\" \"${delimiters_string[@]}\" )\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string=$(\
    \ printf \"%s\" \"${delimiters_string[@]}\" )\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string=$( printf \"%s\"\
    \ \"${delimiters_string[@]}\" )\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string=$( printf \"%s\" \"${delimiters_string[@]}\"\
    \ )\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string=$( \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyd2k6_ta.sh: line 44: unexpected EOF while looking for matching
    `)''

    /tmp/tmpyd2k6_ta.sh: line 62: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiter=(\"?\")\n    local delimiter2=(\"!\")\n    local delimiter3=(\"\
    ?\")\n    local delimiter4=(\"!\")\n    local delimiter5=(\"?\")\n    local delimiter6=(\"\
    !\")\n    local delimiter7=(\"?\")\n    local delimiter8=(\"!\")\n    local delimiter9=(\"\
    ?\")\n    local delimiter10=(\"!\")\n    local delimiter11=(\"?\")\n    local\
    \ delimiter12=(\"!\")\n    local delimiter13=(\"?\")\n    local delimiter14=(\"\
    !\")\n    local delimiter15=(\"?\")\n    local delimiter16=(\"!\")\n    local\
    \ delimiter17=(\"?\")\n    local delimiter18=(\"!\")\n    local delimiter19=(\"\
    ?\")\n    local delimiter20=(\"!\")\n    local delimiter21=(\"?\")\n    local\
    \ delimiter22=(\"!\")\n    local delimiter23=(\"?\")\n    local delimiter24=(\"\
    !\")\n    local delimiter25=(\"?\")\n    local delimiter26=(\"!\")\n    local\
    \ delimiter27=(\"?\")\n    local delimiter28=(\"!\")\n    local delimiter29=(\"\
    ?\")\n    local delimiter30=(\"!\")\n    local delimiter31=(\"?\")\n    local\
    \ delimiter32=(\"!\")\n    local delimiter33=(\"?\")\n    local delimiter34=(\"\
    !\")\n    local delimiter35=(\"?\")\n    local delimiter36=(\"!\")\n    local\
    \ delimiter37=(\"?\")\n    local delimiter38=(\"!\")\n    local delimiter39=(\"\
    ?\")\n    local delimiter40=(\"!\")\n    local delimiter41=(\"?\")\n    local\
    \ delimiter42=(\"!\")\n    local delimiter43=(\"?\")\n    local delimiter44=(\"\
    !\")\n    local delimiter45=(\"?\")\n    local delimiter46=(\"!\")\n    local\
    \ delimiter47=(\"?\")\n    local delimiter48=(\"!\")\n    local delimiter49=(\"\
    ?\")\n    local delimiter50=(\"!\")\n    local delimiter51=(\"?\")\n    local\
    \ delimiter52=(\"!\")\n    local delimiter53=(\"?\")\n    local delimiter54=(\"\
    !\")\n    local delimiter55=(\"?\")\n    local delimiter56=(\"!\")\n    local\
    \ delimiter57=(\"?\")\n    local delimiter58=(\"!\")\n    local delimiter59=(\"\
    ?\")\n    local delimiter60=(\"!\")\n    local delimiter61=(\"?\")\n    local\
    \ delimiter62=(\"!\")\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_delimiter=$3\n    local boredom_word\n    local boredom_word_count\n\
    \    local boredom_word_count2\n    local boredom_word_count3\n    local boredom_word_count4\n\
    \    local boredom_word_count5\n    local boredom_word_count6\n    local boredom_word_count7\n\
    \    local boredom_word_count8\n    local boredom_word_count9\n    local boredom_word_count10\n\
    \    local boredom_word_count11\n    local boredom_word_count12\n    local boredom_word_count13\n\
    \    local boredom_word_count14\n    local boredom_word_count15\n    local boredom_word_count16\n\
    \    local boredom_word_count17\n    local boredom_word_count18\n    local boredom_word_count19\n\
    \    local boredom_word_count20\n    local boredom_word_count21\n    local boredom_word_count22\n\
    \    local boredom_word_count23\n    local boredom_word_count24\n    local boredom_word_count25\n\
    \    local boredom_word_count26\n    local boredom_word_count27\n    local boredom_word_count28\n\
    \    local boredom_word_count29\n    local boredom_word_count30\n    local boredom_word_count31\n\
    \    local boredom_word_count32\n    local boredom_word_count33\n    local boredom_word_count34\n\
    \    local boredom_word_count35\n    local boredom_word_count36\n    local boredom_word_count37\n\
    \    local boredom_word_count38\n    local boredom_word_count39\n    local boredom_word_count40\n\
    \    local boredom_word_count41\n    local boredom_word_count42\n    local boredom_word_count43\n\
    \    local boredom_word_count44\n    local boredom_word_count45\n    local boredom_word_count46\n\
    \    local boredom_word_count47\n    local boredom_word_count48\n    local boredom_word_count49\n\
    \    local boredom_word_count50\n    local boredom_word_count51\n    local boredom_word_count52\n\
    \    local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local delimiters=(\"\
    .\")\n  local delimiters_count=${#delimiters[@]}\n  local delimiters_string=${delimiters[$delimiters_count]}\n\
    \  local delimiters_string_count=${#delimiters_string}\n  local delimiters_string_index=0\n\
    \  local delimiters_string_index2=0\n  local delimiters_string_index3=0\n  local\
    \ delimiters_string_index4=0\n  local delimiters_string_index5=0\n  local delimiters_string_index6=0\n\
    \  local delimiters_string_index7=0\n  local delimiters_string_index8=0\n  local\
    \ delimiters_string_index9=0\n  local delimiters_string_index10=0\n  local delimiters_string_index11=0\n\
    \  local delimiters_string_index12=0\n  local delimiters_string_index13=0\n  local\
    \ delimiters_string_index14=0\n  local delimiters_string_index15=0\n  local delimiters_string_index16=0\n\
    \  local delimiters_string_index17=0\n  local delimiters_string_index18=0\n  local\
    \ delimiters_string_index19=0\n  local delimiters_string_index20=0\n  local delimiters_string_index21=0\n\
    \  local delimiters_string_index22=0\n  local delimiters_string_index23=0\n  local\
    \ delimiters_string_index24=0\n  local delimiters_string_index25=0\n  local delimiters_string_index26=0\n\
    \  local delimiters_string_index27=0\n  local delimiters_string_index28=0\n  local\
    \ delimiters_string_index29=0\n  local delimiters_string_index30=0\n  local delimiters_string_index31=0\n\
    \  local delimiters_string_index32=0\n  local delimiters_string_index33=0\n  local\
    \ delimiters_string_index34=0\n  local delimiters_string_index35=0\n  local delimiters_string_index36=0\n\
    \  local delimiters_string_index37=0\n  local delimiters_string_index38=0\n  local\
    \ delimiters_string_index39=0\n  local delimiters_string_index40=0\n  local delimiters_string_index41=0\n\
    \  local delimiters_string_index42=0\n  local delimiters_string_index43=0\n  local\
    \ delimiters_string_index44=0\n  local delimiters_string_index45=0\n  local delimiters_string_index46=0\n\
    \  local delimiters_string_index47=0\n  local delimiters_string_index48=0\n  local\
    \ delimiters_string_index49=0\n  local delimiters_string_index50=0\n  local \n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local word=$1\n  local delimiters=(\".\")\n  local\
    \ delimiters_length=${#delimiters[@]}\n  local delimiters_string=$(IFS=\".\";\
    \ echo \"${delimiters[*]}\")\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\n'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\r'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\t'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\v'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\f'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\b'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\v'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\f'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\t'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\r'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\n'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\r'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\v'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\f'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\t'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\r'/}\n  local delimiters_length=${#delimiters_string}\n\
    \  local delimiters_string=${delimiters_string//$'\\v'/}\n  local delimiters_length=${\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmkfgc3w5.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_words=\"\"\n  local boredom_sentence=\"\
    \"\n  local boredom_word=\"\"\n  local boredom_sentence_index=0\n  local boredom_sentence_length=${#1}\n\
    \  local boredom_sentence_words=\"\"\n  local boredom_sentence_word=\"\"\n  local\
    \ boredom_sentence_word_index=0\n  local boredom_sentence_word_length=${#1}\n\
    \  local boredom_sentence_word_count=0\n  local boredom_sentence_word_boredom_count=0\n\
    \  local boredom_sentence_word_boredom_words=\"\"\n  local boredom_sentence_word_boredom_word=\"\
    \"\n  local boredom_sentence_word_boredom_word_index=0\n  local boredom_sentence_word_boredom_word_length=${#1}\n\
    \  local boredom_sentence_word_boredom_word_count=0\n  local boredom_sentence_word_boredom_word_boredom_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_words=\"\"\n  local boredom_sentence_word_boredom_word_boredom_word=\"\
    \"\n  local boredom_sentence_word_boredom_word_boredom_word_index=0\n  local boredom_sentence_word_boredom_word_boredom_word_length=${#1}\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_count=0\n  local boredom_sentence_word_boredom_word_boredom_word_boredom_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_words=\"\"\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word=\"\"\n \
    \ local boredom_sentence_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_length=${#1}\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_words=\"\
    \"\n  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word=\"\
    \"\n  local boredom_sentence_word_bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ boredom_word=\"I\"\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_delimiters=()\n    local boredom_delimiters_count=()\n    local\
    \ boredom_delimiters_words=()\n    local boredom_delimiters_words_count=()\n \
    \   local boredom_delimiters_words_count=()\n    local delimiters_words=()\n \
    \   local delimiters_words_count=()\n    local delimiters_words_words_count=()\n\
    \    local delimiters_words_words_words_count=()\n    local delimiters_words_words_words_words_count=()\n\
    \    local delimiters_words_words_words_words_words_count=()\n    local delimiters_words_words_words_words_words_words_count=()\n\
    \    local delimiters_words_words_words_words_words_words_words_count=()\n   \
    \ local delimiters_words_words_words_words_words_words_words_words_words_count=()\n\
    \    local delimiters_words_words_words_words_words_words_words_words_words_words_words_count=()\n\
    \    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_count=()\n\
    \    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_count=()\n\
    \    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_count=()\n\
    \    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_count=()\n\
    \    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_i=()\n  local delimiters_o=()\n  local delimiters_b=()\n\
    \  local delimiters_e=()\n  local delimiters_s=()\n  local delimiters_n=()\n \
    \ local delimiters_w=()\n  local delimiters_t=()\n  local delimiters_y=()\n  local\
    \ delimiters_u=()\n  local delimiters_v=()\n  local delimiters_x=()\n  local delimiters_z=()\n\
    \  local delimiters_a=()\n  local delimiters_d=()\n  local delimiters_f=()\n \
    \ local delimiters_g=()\n  local delimiters_h=()\n  local delimiters_j=()\n  local\
    \ delimiters_k=()\n  local delimiters_l=()\n  local delimiters_m=()\n  local delimiters_n=()\n\
    \  local delimiters_p=()\n  local delimiters_q=()\n  local delimiters_r=()\n \
    \ local delimiters_s=()\n  local delimiters_t=()\n  local delimiters_v=()\n  local\
    \ delimiters_z=()\n  local delimiters_x=()\n  local delimiters_u=()\n  local delimiters_w=()\n\
    \  local delimiters_t=()\n  local delimiters_y=()\n  local delimiters_p=()\n \
    \ local delimiters_q=()\n  local delimiters_r=()\n  local delimiters_s=()\n  local\
    \ delimiters_n=()\n  local delimiters_w=()\n  local delimiters_t=()\n  local delimiters_y=()\n\
    \  local delimiters_p=()\n  local delimiters_q=()\n  local delimiters_r=()\n \
    \ local delimiters_s=()\n  local delimiters_n=()\n  local delimiters_w=()\n  local\
    \ delimiters_t=()\n  local delimiters_y=()\n  local delimiters_p=()\n  local delimiters_q=()\n\
    \  local delimiters_r=()\n  local delimiters_s=()\n  local delimiters_n=()\n \
    \ local delimiters_w=()\n  local delimiters_t=()\n  local delimiters_y=()\n  local\
    \ delimiters_p=()\n  local delimiters_q=()\n  local delimiters_r=()\n  local delimiters_s=()\n\
    \  local delimiters_n=()\n  local delimiters_w=()\n  local delimiters_t=()\n \
    \ local delimiters_y=()\n  local delimiters_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$@\n    local delimiters=(\".\")\n\
    \    local delimiters_count=${#delimiters[@]}\n    local delimiters_index=${#delimiters[@]}\n\
    \    local delimiters_index_count=${#delimiters[@]}\n    local delimiters_index_count_2=${#delimiters[@]}\n\
    \    local delimiters_index_count_3=${#delimiters[@]}\n    local delimiters_index_count_4=${#delimiters[@]}\n\
    \    local delimiters_index_count_5=${#delimiters[@]}\n    local delimiters_index_count_6=${#delimiters[@]}\n\
    \    local delimiters_index_count_7=${#delimiters[@]}\n    local delimiters_index_count_8=${#delimiters[@]}\n\
    \    local delimiters_index_count_9=${#delimiters[@]}\n    local delimiters_index_count_10=${#delimiters[@]}\n\
    \    local delimiters_index_count_11=${#delimiters[@]}\n    local delimiters_index_count_12=${#delimiters[@]}\n\
    \    local delimiters_index_count_13=${#delimiters[@]}\n    local delimiters_index_count_14=${#delimiters[@]}\n\
    \    local delimiters_index_count_15=${#delimiters[@]}\n    local delimiters_index_count_16=${#delimiters[@]}\n\
    \    local delimiters_index_count_17=${#delimiters[@]}\n    local delimiters_index_count_18=${#delimiters[@]}\n\
    \    local delimiters_index_count_19=${#delimiters[@]}\n    local delimiters_index_count_20=${#delimiters[@]}\n\
    \    local delimiters_index_count_21=${#delimiters[@]}\n    local delimiters_index_count_22=${#delimiters[@]}\n\
    \    local delimiters_index_count_23=${#delimiters[@]}\n    local delimiters_index_count_24=${#delimiters[@]}\n\
    \    local delimiters_index_count_25=${#delimiters[@]}\n    local delimiters_index_count_26=${#delimiters[@]}\n\
    \    local delimiters_index_count_27=${#delimiters[@]}\n    local delimiters_index_count_28=${#delimiters[@]}\n\
    \    local delimiters_index_count_29=${#delimiters[@]}\n    local delimiters_index_count_30=${#delimiters[@]}\n\
    \    local delimiters_index_count_31=${#delimiters[@]}\n    local delimiters_index_count_32=${#delimiters[@]}\n\
    \    local delimiters_index_count_33=${#delimiters[@]}\n    local delimiters_index_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local word=$1\n  local delimiters=(\".\")\n  local\
    \ delimiters_count=${#delimiters[@]}\n  local delimiters_index=${#delimiters[@]}\n\
    \  local delimiters_values=(\"?\")\n  local delimiters_values_count=${#delimiters_values[@]}\n\
    \  local delimiters_values_index=${#delimiters_values[@]}\n  local delimiters_values_values_count=${#delimiters_values_values[@]}\n\
    \  local delimiters_values_values_index=${#delimiters_values_values[@]}\n  local\
    \ delimiters_values_values_values_count=${#delimiters_values_values_values[@]}\n\
    \  local delimiters_values_values_values_index=${#delimiters_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_index=${#delimiters_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_index=${#delimiters_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_index=${#delimiters_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_index=${#delimiters_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_index=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_words=\"\
    \"\n    local boredom_sentence=\"\"\n    local boredom_sentence_words=\"\"\n \
    \   local boredom_sentence_word=\"\"\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_boredom_count=0\n    local boredom_sentence_word_boredom_words=\"\
    \"\n    local boredom_sentence_word_boredom_word=\"\"\n    local boredom_sentence_word_boredom_word_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_count=0\n    local boredom_sentence_word_boredom_word_boredom_words=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word=\"\"\n    local\
    \ boredom_sentence_word_boredom_word_boredom_word_count=0\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_words=\"\"\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word=\"\"\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_words=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_words=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_word=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ boredoms=$((boredoms+1)) words=$words boredoms=$((boredoms+1)) words=$words\
    \ bore\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=$@\n    local boredom_word\n\
    \    for boredom_word in $boredom_words; do\n        if [[ \"$boredom_word\" ==\
    \ \"I\" ]]; then\n            ((boredom_count++))\n        fi\n    done\n    echo\
    \ \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string}\n    local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length - 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length - 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length - 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length - 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length - 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \    local delimiters_string_length=$(( delimiter\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqs_8714f.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmpqs_8714f.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$(echo\
    \ $boredom_string | tr \" \" \"\\n\")\n  local boredom_word=$(echo $boredom_words\
    \ | grep \"^I\")\n  local boredom_word_count=$((${#boredom_word} + 1))\n  local\
    \ boredom_word_count=$((boredom_word_count - 1))\n  echo $boredom_word_count\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=( \".\" \"\
    ?\" \"!\" )\n    for word in $words; do\n        if [[ \"$word\" == *\"I\"* ]];\
    \ then\n            (( boredoms = boredoms + 1 ))\n        fi\n    done\n    echo\
    \ \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_word=\"\
    I\"\n    local boredom_sentence=\".\"\n    local boredom_sentence_count=0\n  \
    \  local boredom_sentence_word=\".\"\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count2=0\n    local boredom_sentence_word_count3=0\n\
    \    local boredom_sentence_word_count4=0\n    local boredom_sentence_word_count5=0\n\
    \    local boredom_sentence_word_count6=0\n    local boredom_sentence_word_count7=0\n\
    \    local boredom_sentence_word_count8=0\n    local boredom_sentence_word_count9=0\n\
    \    local boredom_sentence_word_count10=0\n    local boredom_sentence_word_count11=0\n\
    \    local boredom_sentence_word_count12=0\n    local boredom_sentence_word_count13=0\n\
    \    local boredom_sentence_word_count14=0\n    local boredom_sentence_word_count15=0\n\
    \    local boredom_sentence_word_count16=0\n    local boredom_sentence_word_count17=0\n\
    \    local boredom_sentence_word_count18=0\n    local boredom_sentence_word_count19=0\n\
    \    local boredom_sentence_word_count20=0\n    local boredom_sentence_word_count21=0\n\
    \    local boredom_sentence_word_count22=0\n    local boredom_sentence_word_count23=0\n\
    \    local boredom_sentence_word_count24=0\n    local boredom_sentence_word_count25=0\n\
    \    local boredom_sentence_word_count26=0\n    local boredom_sentence_word_count27=0\n\
    \    local boredom_sentence_word_count28=0\n    local boredom_sentence_word_count29=0\n\
    \    local boredom_sentence_word_count30=0\n    local boredom_sentence_word_count31=0\n\
    \    local boredom_sentence_word_count32=0\n    local boredom_sentence_word_count33=0\n\
    \    local boredom_sentence_word_count34=0\n    local boredom_sentence_word_count35=0\n\
    \    local boredom_sentence_word_count36=0\n    local boredom_sentence_word_count37=0\n\
    \    local boredom_sentence_word_count38=0\n    local boredom_sentence_word_count39=0\n\
    \    local boredom_sentence_word_count40=0\n    local boredom_sentence_word_count41=0\n\
    \    local boredom_sentence_word_count42=0\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_string=${delimiters[*]}\n  local delimiters_string_length=${#delimiters_string[*]}\n\
    \  local delimiters_string_length=${#delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfgwgq312.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmpfgwgq312.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | tr \" \" \"\\n\")\n    local boredom_word=${boredom_words[0]}\n\
    \    local boredom_sentence=${boredom_words[*]}\n    local boredom_sentence=${boredom_sentence%?}\n\
    \    local boredom_sentence=${boredom_sentence#?}\n    local boredom_sentence=${boredom_sentence?}\n\
    \    local boredom_sentence=${boredom_sentence:1}\n    local boredom_sentence=${boredom_sentence:2}\n\
    \    local boredom_sentence=${boredom_sentence:3}\n    local boredom_sentence=${boredom_sentence:4}\n\
    \    local boredom_sentence=${boredom_sentence:5}\n    local boredom_sentence=${boredom_sentence:6}\n\
    \    local boredom_sentence=${boredom_sentence:7}\n    local boredom_sentence=${boredom_sentence:8}\n\
    \    local boredom_sentence=${boredom_sentence:9}\n    local boredom_sentence=${boredom_sentence:10}\n\
    \    local boredom_sentence=${boredom_sentence:11}\n    local boredom_sentence=${boredom_sentence:12}\n\
    \    local boredom_sentence=${boredom_sentence:13}\n    local boredom_sentence=${boredom_sentence:14}\n\
    \    local boredom_sentence=${boredom_sentence:15}\n    local boredom_sentence=${boredom_sentence:16}\n\
    \    local boredom_sentence=${boredom_sentence:17}\n    local boredom_sentence=${boredom_sentence:18}\n\
    \    local boredom_sentence=${boredom_sentence:19}\n    local boredom_sentence=${boredom_sentence:20}\n\
    \    local boredom_sentence=${boredom_sentence:21}\n    local boredom_sentence=${boredom_sentence:22}\n\
    \    local boredom_sentence=${boredom_sentence:23}\n    local boredom_sentence=${boredom_sentence:24}\n\
    \    local boredom_sentence=${boredom_sentence:25}\n    local boredom_sentence=${boredom_sentence:26}\n\
    \    local boredom_sentence=${boredom_sentence:27}\n    local bore\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ delimiters=(\".\")\n    local delimiters_i=(\"?\")\n    local delimiters_o=(\"\
    !\")\n    local delimiters_e=(\"?\")\n    local delimiters_s=(\"!\")\n    local\
    \ delimiters_a=(\".\")\n    local delimiters_b=(\"?\")\n    local delimiters_c=(\"\
    !\")\n    local delimiters_d=(\"?\")\n    local delimiters_f=(\"!\")\n    local\
    \ delimiters_g=(\"?\")\n    local delimiters_h=(\"!\")\n    local delimiters_j=(\"\
    ?\")\n    local delimiters_k=(\"!\")\n    local delimiters_l=(\"?\")\n    local\
    \ delimiters_m=(\"!\")\n    local delimiters_n=(\"?\")\n    local delimiters_o=(\"\
    !\")\n    local delimiters_p=(\"?\")\n    local delimiters_q=(\"!\")\n    local\
    \ delimiters_r=(\"?\")\n    local delimiters_s=(\"!\")\n    local delimiters_t=(\"\
    ?\")\n    local delimiters_u=(\"!\")\n    local delimiters_v=(\"?\")\n    local\
    \ delimiters_w=(\"!\")\n    local delimiters_x=(\"?\")\n    local delimiters_y=(\"\
    !\")\n    local delimiters_z=(\"?\")\n    local delimiters_a=(\".\")\n    local\
    \ delimiters_b=(\"?\")\n    local delimiters_c=(\"!\")\n    local delimiters_d=(\"\
    ?\")\n    local delimiters_f=(\"!\")\n    local delimiters_g=(\"?\")\n    local\
    \ delimiters_h=(\"!\")\n    local delimiters_j=(\"?\")\n    local delimiters_k=(\"\
    !\")\n    local delimiters_l=(\"?\")\n    local delimiters_m=(\"!\")\n    local\
    \ delimiters_n=(\"?\")\n    local delimiters_o=(\"!\")\n    local delimiters_p=(\"\
    ?\")\n    local delimiters_q=(\"!\")\n    local delimiters_r=(\"?\")\n    local\
    \ delimiters_s=(\"!\")\n    local delimiters_t=(\"?\")\n    local delimiters_u=(\"\
    !\")\n    local delimiters_v=(\"?\")\n    local delimiters_w=(\"!\")\n    local\
    \ delimiters_x=(\"?\")\n    local delimiters_y=(\"!\")\n    local delimiters_z=(\"\
    ?\")\n    local delimiters_a=(\".\")\n    local delimiters_b=(\"?\")\n    local\
    \ delimiters_c=(\"!\")\n    local delimiters_d=(\"?\")\n    local delimiters_f=(\"\
    !\")\n    local delimiters_g=(\"?\")\n    local delimiters_h=\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local words=$1\n  local delimiters=(\".\")\n \
    \ local delimiters_length=${#delimiters[@]}\n  local delimiters_array=(\"${delimiters[@]}\"\
    )\n  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_elements=${delimiters_array[@]}\n\
    \  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n \
    \ local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n \
    \ local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1 \n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(${delimiters[@]})\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_length=${#boredom_string}\n    local boredom_words=${string//$boredom_string/}\n\
    \    local boredom_word_length=${#boredom_words}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local boredom_word_count=0\n\
    \    local boredom_word_index=0\n    local boredom_word_string=\"I\"\n    local\
    \ boredom_word_length=${#boredom_word_string}\n    local \n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local word=$1\n  local delimiter=$2\n  local sentence=$3\n\
    \  local delimiters=(\".\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=0 # Index\
    \ of current delimiter\n    local delimiters_word=0 # Word of the current delimiter\n\
    \    local delimiters_word_length=0 # Length of the current delimiter\n    local\
    \ delimiters_word_count=0 # Number of words in the current delimiter\n    local\
    \ delimiters_word_count_index=0 # Index of the current delimiter's word\n    local\
    \ delimiters_word_count_word=0 # Word of the current delimiter's word\n    local\
    \ delimiters_word_count_word_length=0 # Length of the current delimiter's word\n\
    \    local delimiters_word_count_word_count=0 # Number of words in the current\
    \ delimiter's word\n    local delimiters_word_count_word_count_index=0 # Index\
    \ of the current delimiter's word's word\n    local delimiters_word_count_word_count_word=0\
    \ # Word of the current delimiter's word's word\n    local delimiters_word_count_word_count_word_length=0\
    \ # Length of the current delimiter's word's word\n    local delimiters_word_count_word_count_word_count=0\
    \ # Number of words in the current delimiter's word's word\n    local delimiters_word_count_word_count_word_count_index=0\
    \ # Index of the current delimiter's word's word's word\n    local delimiters_word_count_word_count_word_count_word=0\
    \ # Word of the current delimiter's word's word's word\n    local delimiters_word_count_word_count_word_count_word_length=0\
    \ # Length of the current delimiter's word's word's word\n    local delimiters_word_count_word_count_word_count_word_count=0\
    \ # Number of words in the current delimiter's word's word's word\n    local delimiters_word_count_word_count_word_count_word_count_index=0\
    \ # Index of the current delimiter's word's word's word's word\n    local delimiters_word_count_word_count_word_count_word_count_word=0\
    \ # Word of the current delimiter's word's word's word's word\n    local delimiters_word_count_word_count_word_count_word_count_word_length=0\
    \ # Length of the current delimiter's word's word's word's word\n    local delimiters_word_count_word_count_word_count_word_count_word_count=0\
    \ # Number of words in the current delimiter's word's word's word's word\n   \
    \ local delimiters_word_count_word_count_word_count_word_count_word_count_index=0\
    \ # Index of the current delimiter's word's word's word's word's word\n    local\
    \ delimiters_word_count_word_count_word_count_word_count_word_count_word=0 # Word\
    \ of the current delimiter's word's word's word's \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=( \".\" \"\
    ?\" \"!\" )\n    local delimiter\n    for delimiter in \"${delimiters[@]}\"; do\n\
    \        local delimiter_index=0\n        while [[ $words != \"\" ]]; do\n   \
    \         if [[ $words == *\"$delimiter\"* ]]; then\n                boredoms=$((boredoms+1))\n\
    \                words=${words[${#words}-1]}\n            else\n             \
    \   words=${words[${#words}-1]}\n            fi\n            delimiter_index=$((delimiter_index+1))\n\
    \        done\n    done\n    echo $boredoms\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_sentence_index=0\n    local\
    \ boredom_sentence_length=0\n    local boredom_sentence_words=\"\"\n    local\
    \ boredom_sentence_word=\"\"\n    local boredom_sentence_word_index=0\n    local\
    \ boredom_sentence_word_length=0\n    local boredom_sentence_word_count=0\n  \
    \  local boredom_sentence_word_count2=0\n    local boredom_sentence_word_count3=0\n\
    \    local boredom_sentence_word_count4=0\n    local boredom_sentence_word_count5=0\n\
    \    local boredom_sentence_word_count6=0\n    local boredom_sentence_word_count7=0\n\
    \    local boredom_sentence_word_count8=0\n    local boredom_sentence_word_count9=0\n\
    \    local boredom_sentence_word_count10=0\n    local boredom_sentence_word_count11=0\n\
    \    local boredom_sentence_word_count12=0\n    local boredom_sentence_word_count13=0\n\
    \    local boredom_sentence_word_count14=0\n    local boredom_sentence_word_count15=0\n\
    \    local boredom_sentence_word_count16=0\n    local boredom_sentence_word_count17=0\n\
    \    local boredom_sentence_word_count18=0\n    local boredom_sentence_word_count19=0\n\
    \    local boredom_sentence_word_count20=0\n    local boredom_sentence_word_count21=0\n\
    \    local boredom_sentence_word_count22=0\n    local boredom_sentence_word_count23=0\n\
    \    local boredom_sentence_word_count24=0\n    local boredom_sentence_word_count25=0\n\
    \    local boredom_sentence_word_count26=0\n    local boredom_sentence_word_count27=0\n\
    \    local boredom_sentence_word_count28=0\n    local boredom_sentence_word_count29=0\n\
    \    local boredom_sentence_word_count30=0\n    local boredom_sentence_word_count31=0\n\
    \    local boredom_sentence_word_count32=0\n    local boredom_sentence_word_count33=0\n\
    \    local boredom_sentence_word_count34=0\n    local boredom_sentence_word_count35=0\n\
    \    local boredom_sentence_word_count36=0\n    local boredom_sentence_word_count37=0\n\
    \    local boredom_sentence_word_count38=0\n    local boredom_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ boredom_word=\"I\"\n    local boredom_count=0\n    local boredom_sentence=\"\
    \"\n    local boredom_sentence_count=0\n    local boredom_sentence_word=\"\"\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_length=0\n\
    \    local boredom_sentence_word_length_count=0\n    local boredom_sentence_word_length_length=0\n\
    \    local boredom_sentence_word_length_length_count=0\n    local boredom_sentence_word_length_length_length_count=0\n\
    \    local boredom_sentence_word_length_length_length_count=0\n    local boredom_sentence_word_length_length_length_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count=0\n  \
    \  local boredom_sentence_word_length_length_length_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_delimiter=$3\n  local boredom_word_count=0\n  local boredom_word_string=\"\
    \"\n  local boredom_word_delimiter=\"\"\n  local boredom_word_count=0\n  local\
    \ boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\"\n  local boredom_word_count=0\n\
    \  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\"\n  local\
    \ boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_string=\"\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_delimiter=$3\n    local boredom_delimiters=$4\n    local boredom_word=$5\n\
    \    local boredom_words=$6\n    local boredom_delimiter=$7\n    local boredom_delimiters=$8\n\
    \    local boredom_word=$9\n    local boredom_words=$10\n    local boredom_delimiter=$11\n\
    \    local boredom_delimiters=$12\n    local boredom_word=$13\n    local boredom_words=$14\n\
    \    local boredom_delimiter=$15\n    local boredom_delimiters=$16\n    local\
    \ boredom_word=$17\n    local boredom_words=$18\n    local boredom_delimiter=$19\n\
    \    local boredom_delimiters=$20\n    local boredom_word=$21\n    local boredom_words=$22\n\
    \    local boredom_delimiter=$23\n    local boredom_delimiters=$24\n    local\
    \ boredom_word=$25\n    local boredom_words=$26\n    local boredom_delimiter=$27\n\
    \    local boredom_delimiters=$28\n    local boredom_word=$29\n    local boredom_words=$30\n\
    \    local boredom_delimiter=$31\n    local boredom_delimiters=$32\n    local\
    \ boredom_word=$33\n    local boredom_words=$34\n    local boredom_delimiter=$35\n\
    \    local boredom_delimiters=$36\n    local boredom_word=$37\n    local boredom_words=$38\n\
    \    local boredom_delimiter=$39\n    local boredom_delimiters=$40\n    local\
    \ boredom_word=$41\n    local boredom_words=$42\n    local boredom_delimiter=$43\n\
    \    local boredom_delimiters=$44\n    local boredom_word=$45\n    local boredom_words=$46\n\
    \    local boredom_delimiter=$47\n    local boredom_delimiters=$48\n    local\
    \ boredom_word=$49\n    local boredom_words=$50\n    local boredom_delimiter=$51\n\
    \    local boredom_delimiters=$52\n    local boredom_word=$53\n    \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length + 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length + 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length + 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length + 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp57d5p1iu.sh: line 45: unexpected EOF while looking for matching
    `)''

    /tmp/tmp57d5p1iu.sh: line 63: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(grep -Eo \"^I.*\" <<< \"$1\")\n    local boredom_count=$((${#boredoms}\
    \ + 1))\n    echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local word=$1\n  local delimiters=(\".\")\n  local\
    \ delimiters_count=${#delimiters[@]}\n  local delimiters_index=${delimiters[$delimiters_count]}\n\
    \  local delimiters_char=${delimiters[$delimiters_count]}\n  local delimiters_char_count=${#delimiters_char}\n\
    \  local delimiters_char_index=${delimiters_char[$delimiters_char_count]}\n  local\
    \ delimiters_char_indexes=${delimiters_char[@]}\n  local delimiters_char_indexes_count=${#delimiters_char_indexes}\n\
    \  local delimiters_char_indexes_index=${delimiters_char_indexes[$delimiters_char_indexes_count]}\n\
    \  local delimiters_char_indexes_index=$((delimiters_char_indexes_index-1))\n\
    \  local delimiters_char_indexes_indexes=${delimiters_char_indexes[@]}\n  local\
    \ delimiters_char_indexes_indexes_count=${#delimiters_char_indexes_indexes}\n\
    \  local delimiters_char_indexes_indexes_index=${delimiters_char_indexes_indexes[$delimiters_char_indexes_indexes_count]}\n\
    \  local delimiters_char_indexes_indexes_index=$((delimiters_char_indexes_indexes_index-1))\n\
    \  local delimiters_char_indexes_indexes_indexes=${delimiters_char_indexes_indexes[@]}\n\
    \  local delimiters_char_indexes_indexes_indexes_count=${#delimiters_char_indexes_indexes_indexes}\n\
    \  local delimiters_char_indexes_indexes_indexes_index=${delimiters_char_indexes_indexes_indexes[$delimiters_char_indexes_indexes_indexes_count]}\n\
    \  local delimiters_char_indexes_indexes_indexes_index=$((delimiters_char_indexes_indexes_indexes_index-1))\n\
    \  local delimiters_char_indexes_indexes_indexes_indexes=${delimiters_char_indexes_indexes_indexes_indexes[@]}\n\
    \  local delimiters_char_indexes_indexes_indexes_indexes_count=${#delimiters_char_indexes_indexes_indexes_indexes}\n\
    \  local delimiters_char_indexes_indexes_indexes_indexes_index=${delimiters_char_indexes_indexes_indexes_indexes_indexes[$delimiters_char_indexes_indexes_indexes_indexes_count]}\n\
    \  local delimiters_char_indexes_indexes_indexes_indexes_index=$((delimiters_char_indexes_indexes_indexes_indexes_index-1))\n\
    \  local delimiters_char_indexes_indexes_indexes_index\n}\n\ncandidate() {\n \
    \   is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(grep -E '^I' $1 | wc -l)\n    echo \"$boredoms\"\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello: No such file or directory

    grep: world: No such file or directory

    grep: Is: No such file or directory

    grep: the: No such file or directory

    grep: sky: No such file or directory

    grep: blue?: No such file or directory

    grep: I: No such file or directory

    grep: love: No such file or directory

    grep: It: No such file or directory

    grep: \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local word\n \
    \ local i\n  local j\n  local bored\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bored_count\n  local bored_count\n  local bored_count\n\
    \  local bored_count\n  local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_word=''\n  local boredom_sentence=''\n  local boredom_sentence_index=0\n\
    \  local boredom_sentence_length=${#boredom_string}\n  local boredom_sentence_words=${#boredom_words}\n\
    \  local boredom_sentence_word=''\n  local boredom_sentence_word_index=0\n  local\
    \ boredom_sentence_word_length=${#boredom_sentence_words}\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_count=0\n  local boredom_sentence_word_count=0\n\
    \  local boredom_sentence_word_count_index=0\n  local boredom_sentence_word_count_length=0\n\
    \  local boredom_sentence_word_count_length_index=0\n  local boredom_sentence_word_count_length_count=0\n\
    \  local boredom_sentence_word_count_count=0\n  local boredom_sentence_word_count_count_index=0\n\
    \  local boredom_sentence_word_count_count_length=0\n  local boredom_sentence_word_count_count_length_index=0\n\
    \  local boredom_sentence_word_count_count_length_count=0\n  local boredom_sentence_word_count_count_count=0\n\
    \  local boredom_sentence_word_count_count_count_index=0\n  local boredom_sentence_word_count_count_count_length=0\n\
    \  local boredom_sentence_word_count_count_count_length_index=0\n  local boredom_sentence_word_count_count_count_length_count=0\n\
    \  local boredom_sentence_word_count_count_count_count=0\n  local boredom_sentence_word_count_count_count_count_index=0\n\
    \  local boredom_sentence_word_count_count_count_count_length=0\n  local boredom_sentence_word_count_count_count_count_length_index=0\n\
    \  local boredom_sentence_word_count_count_count_count_length_count=0\n  local\
    \ boredom_sentence_word_count_count_count_count_count=0\n  local boredom_sentence_word_count_count_count_count_count_index=0\n\
    \  local boredom_sentence_word_count_count_count_count_count_length=0\n  local\
    \ boredom_sentence_word_count_count_count_count_length_index=0\n  local boredom_sentence_word_count_count_count_count_length_count=0\n\
    \  local boredom_sentence_word_count_count_count_count_count=0\n  local boredom_sentence_word_count_count_count_count_count_index=0\n\
    \  local boredom_sentence_word_count_count_count_count_count_length=0\n\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiter=$2\n    local sentence=$3\n\
    \    local delimiter2=$4\n    local sentence2=$5\n    local delimiter3=$6\n  \
    \  local sentence3=$7\n    local delimiter4=$8\n    local sentence4=$9\n    local\
    \ delimiter5=$10\n    local sentence5=$11\n    local delimiter6=$12\n    local\
    \ sentence6=$13\n    local delimiter7=$14\n    local sentence7=$15\n    local\
    \ delimiter8=$16\n    local sentence8=$17\n    local delimiter9=$18\n    local\
    \ sentence9=$19\n    local delimiter10=$20\n    local sentence10=$21\n    local\
    \ delimiter11=$22\n    local sentence11=$23\n    local delimiter12=$24\n    local\
    \ sentence12=$25\n    local delimiter13=$26\n    local sentence13=$27\n    local\
    \ delimiter14=$28\n    local sentence14=$29\n    local delimiter15=$30\n    local\
    \ sentence15=$31\n    local delimiter16=$32\n    local sentence16=$33\n    local\
    \ delimiter17=$34\n    local sentence17=$35\n    local delimiter18=$36\n    local\
    \ sentence18=$37\n    local delimiter19=$38\n    local sentence19=$39\n    local\
    \ delimiter20=$40\n    local sentence20=$41\n    local delimiter21=$42\n    local\
    \ sentence21=$43\n    local delimiter22=$44\n    local sentence22=$45\n    local\
    \ delimiter23=$46\n    local sentence23=$47\n    local delimiter24=$48\n    local\
    \ sentence24=$49\n    local delimiter25=$50\n    local sentence25=$51\n    local\
    \ delimiter26=$52\n    local sentence26=$53\n    local delimiter27=$54\n    local\
    \ sentence27=$55\n    local delimiter28=$56\n    local sentence28=$57\n    local\
    \ delimiter29=$58\n    local sentence29=$59\n    local delimiter30=$60\n    local\
    \ sentence30=$61\n    local delimiter31=$62\n    local sentence31=$63\n    local\
    \ delimiter32=$64\n    local sentence32=$65\n    local delimiter33=$66\n    local\
    \ sentence33=$67\n    local delimiter34=$68\n    local sentence34=$69\n    local\
    \ delimiter35=$70\n    local sentence35=$71\n    local delimiter36=$72\n    local\
    \ sentence36=$\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=$(grep -E '^I' $1 | wc -l)\n  echo $boredoms\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello: No such file or directory

    grep: world: No such file or directory

    grep: Is: No such file or directory

    grep: the: No such file or directory

    grep: sky: No such file or directory

    grep: blue?: No such file or directory

    grep: I: No such file or directory

    grep: love: No such file or directory

    grep: It: No such file or directory

    grep: \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local boredom_word=\"\
    I\"\n  local boredom_count=0\n  local boredom_words=()\n  local boredom_delimiters=()\n\
    \  local boredom_word_count=0\n  local boredom_word_delimiters=()\n  local boredom_word_count=0\n\
    \  local boredom_word_delimiters=()\n  local boredom_word_count=0\n  local boredom_word_delimiters=()\n\
    \  local boredom_word_count=0\n  local boredom_word_delimiters=()\n  local boredom_word_count=0\n\
    \  local boredom_word_delimiters=()\n  local boredom_word_count=0\n  local boredom_word_delimiters=()\n\
    \  local boredom_word_count=0\n  local boredom_word_delimiters=()\n  local boredom_word_count=0\n\
    \  local boredom_word_delimiters=()\n  local boredom_word_count=0\n  local boredom_word_delimiters=()\n\
    \  local boredom_word_count=0\n  local boredom_word_delimiters=()\n  local boredom_word_count=0\n\
    \  local boredom_word_delimiters=()\n  local boredom_word_count=0\n  local boredom_word_delimiters=()\n\
    \  local boredom_word_count=0\n  local boredom_word_delimiters=()\n  local boredom_word_count=0\n\
    \  local boredom_word_delimiters=()\n  local boredom_word_count=0\n  local boredom_word_delimiters=()\n\
    \  local boredom_word_count=0\n  local boredom_word_delimiters=()\n  local boredom_word_count=0\n\
    \  local boredom_word_delimiters=()\n  local boredom_word_count=0\n  local boredom_word_delimiters=()\n\
    \  local boredom_word_count=0\n  local boredom_word_delimiters=()\n  local boredom_word_count=0\n\
    \  local boredom_word_delimiters=()\n  local boredom_word_count=0\n  local boredom_word_delimiters=()\n\
    \  local boredom_word_count=0\n  local boredom_word_delimiters=()\n  local boredom_word_count=0\n\
    \  local boredom_word_delimiters=()\n  local boredom_word_count=0\n  local boredom_word_delimiters=()\n\
    \  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ delimiter2=$3\n    local delimiter3=$4\n    local delimiter4=$5\n    local delimiter5=$6\n\
    \    local delimiter6=$7\n    local delimiter7=$8\n    local delimiter8=$9\n \
    \   local delimiter9=$10\n    local delimiter10=$11\n    local delimiter11=$12\n\
    \    local delimiter12=$13\n    local delimiter13=$14\n    local delimiter14=$15\n\
    \    local delimiter15=$16\n    local delimiter16=$17\n    local delimiter17=$18\n\
    \    local delimiter18=$19\n    local delimiter19=$20\n    local delimiter20=$21\n\
    \    local delimiter21=$22\n    local delimiter22=$23\n    local delimiter23=$24\n\
    \    local delimiter24=$25\n    local delimiter25=$26\n    local delimiter26=$27\n\
    \    local delimiter27=$28\n    local delimiter28=$29\n    local delimiter29=$30\n\
    \    local delimiter30=$31\n    local delimiter31=$32\n    local delimiter32=$33\n\
    \    local delimiter33=$34\n    local delimiter34=$35\n    local delimiter35=$36\n\
    \    local delimiter36=$37\n    local delimiter37=$38\n    local delimiter38=$39\n\
    \    local delimiter39=$40\n    local delimiter40=$41\n    local delimiter41=$42\n\
    \    local delimiter42=$43\n    local delimiter43=$44\n    local delimiter44=$45\n\
    \    local delimiter45=$46\n    local delimiter46=$47\n    local delimiter47=$48\n\
    \    local delimiter48=$49\n    local delimiter49=$50\n    local delimiter50=$51\n\
    \    local delimiter51=$52\n    local delimiter52=$53\n    local delimiter53=$54\n\
    \    local delimiter54=$55\n    local delimiter55=$56\n    local delimiter56=$57\n\
    \    local delimiter57=$58\n    local delimiter58=$59\n    local delimiter59=$60\n\
    \    local delimiter60=$61\n    local delimiter61=$62\n    local delimiter62=$63\n\
    \    local delimiter63=$64\n    local delimiter64=$65\n    local delimiter65=$66\n\
    \    local delimiter66=$67\n    local delimiter67=$68\n    local delimiter68=$69\n\
    \    local delimiter69=$70\n    local delimiter70=$71\n    local delimiter71=$72\n\
    \    local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed 's/\\./ /g' | sed 's/\\?/ /g' | sed 's/!/ /g')\n    for\
    \ boredom_word in $boredom_words; do\n        if [[ $boredom_word == I* ]]; then\n\
    \            ((boredom_count++))\n        fi\n    done\n    echo \"$boredom_count\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local words=$1\n    local delimiter=$2\n \
    \   local boredom_string=\"I\"\n    local boredom_array=($boredom_string)\n  \
    \  local delimiter_index=0\n    local delimiter_index2=0\n    local delimiter_index3=0\n\
    \    local delimiter_index4=0\n    local delimiter_index5=0\n    local delimiter_index6=0\n\
    \    local delimiter_index7=0\n    local delimiter_index8=0\n    local delimiter_index9=0\n\
    \    local delimiter_index10=0\n    local delimiter_index11=0\n    local delimiter_index12=0\n\
    \    local delimiter_index13=0\n    local delimiter_index14=0\n    local delimiter_index15=0\n\
    \    local delimiter_index16=0\n    local delimiter_index17=0\n    local delimiter_index18=0\n\
    \    local delimiter_index19=0\n    local delimiter_index20=0\n    local delimiter_index21=0\n\
    \    local delimiter_index22=0\n    local delimiter_index23=0\n    local delimiter_index24=0\n\
    \    local delimiter_index25=0\n    local delimiter_index26=0\n    local delimiter_index27=0\n\
    \    local delimiter_index28=0\n    local delimiter_index29=0\n    local delimiter_index30=0\n\
    \    local delimiter_index31=0\n    local delimiter_index32=0\n    local delimiter_index33=0\n\
    \    local delimiter_index34=0\n    local delimiter_index35=0\n    local delimiter_index36=0\n\
    \    local delimiter_index37=0\n    local delimiter_index38=0\n    local delimiter_index39=0\n\
    \    local delimiter_index40=0\n    local delimiter_index41=0\n    local delimiter_index42=0\n\
    \    local delimiter_index43=0\n    local delimiter_index44=0\n    local delimiter_index45=0\n\
    \    local delimiter_index46=0\n    local delimiter_index47=0\n    local delimiter_index48=0\n\
    \    local delimiter_index49=0\n    local delimiter_index50=0\n    local delimiter_index51=0\n\
    \    local delimiter_index52=0\n    local delimiter_index53=0\n    local delimiter_index54=0\n\
    \    local delimiter_index55=0\n    local delimiter_index56=0\n    local delimiter_index57=0\n\
    \    local delimiter_index58=0\n    local delimiter_index59=0\n    local delimiter_index60=0\n\
    \    local delimiter_index61=0\n    local delimiter_index62=0\n    local delimiter_index63=0\n\
    \    local delimiter_index64=0\n    local delimiter_index65=0\n    local delimiter_index66=0\n\
    \    local delimiter_index67=0\n    \n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=$(grep -E '^I' $1 | wc -l)\n  echo $boredoms\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello: No such file or directory

    grep: world: No such file or directory

    grep: Is: No such file or directory

    grep: the: No such file or directory

    grep: sky: No such file or directory

    grep: blue?: No such file or directory

    grep: I: No such file or directory

    grep: love: No such file or directory

    grep: It: No such file or directory

    grep: \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"${delimiters[@]}\"\
    )\n    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_word=$3\n  local boredom_sentence=$4\n  local boredom_sentence_index=0\n\
    \  local boredom_sentence_length=${#boredom_sentence}\n  local boredom_sentence_words=${#boredom_words}\n\
    \  local boredom_sentence_word=${#boredom_word}\n  local boredom_sentence_boredom_words=0\n\
    \  local boredom_sentence_boredom_word=${#boredom_word}\n  local boredom_sentence_boredom_word_index=0\n\
    \  local boredom_sentence_boredom_word_length=${#boredom_boredom_word}\n  local\
    \ boredom_sentence_boredom_word_boredom_words=0\n  local boredom_sentence_boredom_word_boredom_word=${#boredom_boredom_word}\n\
    \  local boredom_sentence_boredom_word_boredom_word_index=0\n  local boredom_sentence_boredom_word_boredom_word_length=${#boredom_boredom_word_boredom_word}\n\
    \  local boredom_sentence_boredom_word_boredom_word_boredom_words=0\n  local boredom_sentence_boredom_word_boredom_word_boredom_word=${#boredom_boredom_word_boredom_word}\n\
    \  local boredom_sentence_boredom_word_boredom_word_boredom_word_index=0\n  local\
    \ boredom_sentence_boredom_word_boredom_word_boredom_word_length=${#boredom_boredom_word_boredom_word_boredom_word}\n\
    \  local boredom_sentence_boredom_word_boredom_word_boredom_word_boredom_words=0\n\
    \  local boredom_sentence_boredom_word_boredom_word_boredom_word_boredom_word=${#boredom_boredom_word_boredom_word_boredom_word_boredom_word}\n\
    \  local boredom_sentence_boredom_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \  local boredom_sentence_boredom_word_boredom_word_boredom_word_boredom_word_length=${#boredom_boredom_word_boredom_word_boredom_word_boredom_word}\n\
    \  local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_chars=${delimiters[@]}\n\
    \    local delimiters_chars_length=${#delimiters_chars[@]}\n    local delimiters_chars_chars=${delimiters_chars[@]}\n\
    \    local delimiters_chars_chars_length=${#delimiters_chars_chars[@]}\n    local\
    \ delimiters_chars_chars_chars=${delimiters_chars_chars[@]}\n    local delimiters_chars_chars_chars_length=${#delimiters_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars=${delimiters_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_char\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1 \n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=0\n  local delimiters_string=\"\"\n  local delimiters_string_index=0\n\
    \  local delimiters_string_count=0\n  local delimiters_string_array=()\n  local\
    \ delimiters_string_array_index=0\n  local delimiters_string_array_count=0\n \
    \ local delimiters_string_array_element=()\n  local delimiters_string_array_element_index=0\n\
    \  local delimiters_string_array_element_count=0\n  local delimiters_string_array_element_string=()\n\
    \  local delimiters_string_array_element_string_index=0\n  local delimiters_string_array_element_string_count=0\n\
    \  local delimiters_string_array_element_string_array=()\n  local delimiters_string_array_element_string_array_index=0\n\
    \  local delimiters_string_array_element_string_array_count=0\n  local delimiters_string_array_element_string_array_element=()\n\
    \  local delimiters_string_array_element_string_array_element_index=0\n  local\
    \ delimiters_string_array_element_string_array_element_count=0\n  local delimiters_string_array_element_string_array_element_string=()\n\
    \  local delimiters_string_array_element_string_array_element_string_index=0\n\
    \  local delimiters_string_array_element_string_array_element_string_count=0\n\
    \  local delimiters_string_array_element_string_array_element_string_array=()\n\
    \  local delimiters_string_array_element_string_array_element_string_array_index=0\n\
    \  local delimiters_string_array_element_string_array_element_string_array_count=0\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element=()\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_index=0\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_count=0\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_string=()\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_string_index=0\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_string_count=0\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_string_array=()\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_string_array_index=0\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_string_array_count=0\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_string_array_element=()\n\
    \  local delimiters_string_array_element_string_array_element_string_array_element_string_array_element_index=0\n\
    \  local delimiters_string_array_element_string_array_element_string_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=( \".\" \"\
    ?\" \"!\" )\n    local delimiter\n    for delimiter in \"${delimiters[@]}\"; do\n\
    \        local delimiter_index\n        for delimiter_index in $(seq 1 ${#words});\
    \ do\n            if [[ \"${words[$delimiter_index]}\" == \"$delimiter\" ]]; then\n\
    \                (( boredoms += 1 ))\n                words=${words[@]:0:$delimiter_index}\n\
    \                break\n            fi\n        done\n    done\n    echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local word\n \
    \ local i\n  local j\n  local boredom_count\n  local boredom_count2\n  local boredom_count3\n\
    \  local boredom_count4\n  local boredom_count5\n  local boredom_count6\n  local\
    \ boredom_count7\n  local boredom_count8\n  local boredom_count9\n  local boredom_count10\n\
    \  local boredom_count11\n  local boredom_count12\n  local boredom_count13\n \
    \ local boredom_count14\n  local boredom_count15\n  local boredom_count16\n  local\
    \ boredom_count17\n  local boredom_count18\n  local boredom_count19\n  local boredom_count20\n\
    \  local boredom_count21\n  local boredom_count22\n  local boredom_count23\n \
    \ local boredom_count24\n  local boredom_count25\n  local boredom_count26\n  local\
    \ boredom_count27\n  local boredom_count28\n  local boredom_count29\n  local boredom_count30\n\
    \  local boredom_count31\n  local boredom_count32\n  local boredom_count33\n \
    \ local boredom_count34\n  local boredom_count35\n  local boredom_count36\n  local\
    \ boredom_count37\n  local boredom_count38\n  local boredom_count39\n  local boredom_count40\n\
    \  local boredom_count41\n  local boredom_count42\n  local boredom_count43\n \
    \ local boredom_count44\n  local boredom_count45\n  local boredom_count46\n  local\
    \ boredom_count47\n  local boredom_count48\n  local boredom_count49\n  local boredom_count50\n\
    \  local boredom_count51\n  local boredom_count52\n  local boredom_count53\n \
    \ local boredom_count54\n  local boredom_count55\n  local boredom_count56\n  local\
    \ boredom_count57\n  local boredom_count58\n  local boredom_count59\n  local boredom_count60\n\
    \  local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed -e 's/\\./ \\. /g' -e 's/\\?/ \\? /g' -e 's/!/ \\! /g')\n\
    \    for boredom_word in $boredom_words; do\n        if [[ \"$boredom_word\" ==\
    \ \"I\" ]]; then\n            boredom_count=$((boredom_count+1))\n        fi\n\
    \    done\n    echo $boredom_count\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_sentences=()\n    local boredom_sentence=''\n    local boredom_word=''\n\
    \    local boredom_delimiter='.'\n    local boredom_delimiters='.?!'\n\n    for\
    \ word in $string; do\n        if [[ \"$boredom_word\" != \"$word\" ]]; then\n\
    \            if [[ \"$boredom_word\" ]]; then\n                boredom_sentence+=\"\
    \ $boredom_delimiter\"\n            fi\n            boredom_word=\"$word\"\n \
    \       fi\n    done\n\n    for delimiter in $boredom_delimiters; do\n       \
    \ boredom_sentence+=\" $delimiter\"\n    done\n\n    for sentence in $boredom_sentences;\
    \ do\n        if [[ \"$boredom_sentence\" != \"$sentence\" ]]; then\n        \
    \    if [[ \"$boredom_sentence\" ]]; then\n                boredom_count=$((boredom_count+1))\n\
    \            fi\n            boredom_sentence=\"$sentence\"\n        fi\n    done\n\
    \n    echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ delimiters=(\".\")\n    local delimiters_i=(\"?\")\n    local delimiters_o=(\"\
    !\")\n    local delimiters_s=(\"?\")\n    local delimiters_s_i=(\"!\")\n    local\
    \ delimiters_s_o=(\".\")\n    local delimiters_s_s_i=(\".\")\n    local delimiters_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_i=(\".\")\n    local delimiters_s_s_s_o=(\".\"\
    )\n    local delimiters_s_s_s_i=(\".\")\n    local delimiters_s_s_s_o=(\".\")\n\
    \    local delimiters_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_o=(\".\"\
    )\n    local delimiters_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_s_o=(\"\
    .\")\n    local delimiters_s_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1 \n    local delimiters=(\".\")\n  \
    \  local delimiter=(\"?\")\n    local delimiter2=(\"!\")\n    local delimiter3=(\"\
    ?\")\n    local delimiter4=(\".\")\n    local delimiter5=(\".\")\n    local delimiter6=(\"\
    .\")\n    local delimiter7=(\".\")\n    local delimiter8=(\".\")\n    local delimiter9=(\"\
    .\")\n    local delimiter10=(\".\")\n    local delimiter11=(\".\")\n    local\
    \ delimiter12=(\".\")\n    local delimiter13=(\".\")\n    local delimiter14=(\"\
    .\")\n    local delimiter15=(\".\")\n    local delimiter16=(\".\")\n    local\
    \ delimiter17=(\".\")\n    local delimiter18=(\".\")\n    local delimiter19=(\"\
    .\")\n    local delimiter20=(\".\")\n    local delimiter21=(\".\")\n    local\
    \ delimiter22=(\".\")\n    local delimiter23=(\".\")\n    local delimiter24=(\"\
    .\")\n    local delimiter25=(\".\")\n    local delimiter26=(\".\")\n    local\
    \ delimiter27=(\".\")\n    local delimiter28=(\".\")\n    local delimiter29=(\"\
    .\")\n    local delimiter30=(\".\")\n    local delimiter31=(\".\")\n    local\
    \ delimiter32=(\".\")\n    local delimiter33=(\".\")\n    local delimiter34=(\"\
    .\")\n    local delimiter35=(\".\")\n    local delimiter36=(\".\")\n    local\
    \ delimiter37=(\".\")\n    local delimiter38=(\".\")\n    local delimiter39=(\"\
    .\")\n    local delimiter40=(\".\")\n    local delimiter41=(\".\")\n    local\
    \ delimiter42=(\".\")\n    local delimiter43=(\".\")\n    local delimiter44=(\"\
    .\")\n    local delimiter45=(\".\")\n    local delimiter46=(\".\")\n    local\
    \ delimiter47=(\".\")\n    local delimiter48=(\".\")\n    local delimiter49=(\"\
    .\")\n    local delimiter50=(\".\")\n    local delimiter51=(\".\")\n    local\
    \ delimiter52=(\".\")\n    local delimiter53=(\".\")\n    local delimiter54=(\"\
    .\")\n    local delimiter55=(\".\")\n    local delimiter56=(\".\")\n    local\
    \ delimiter57=(\".\")\n    local delimiter58=(\".\")\n    local delimiter59=(\"\
    .\")\n    local delimiter60=(\".\")\n    local delimiter61=(\".\")\n    local\
    \ delimiter62=(\".\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_delimiter=$3\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\"\n   \
    \ local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\
    \"\n    local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\"\n   \
    \ local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\
    \"\n    local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\"\n   \
    \ local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\
    \"\n    local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\"\n   \
    \ local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local boredom_word_delimiter=\"\
    \"\n    local boredom_word_count=0\n    local boredom_word_string=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=\"\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local input=$1\n  local output=0\n  local boredoms=$(echo \"$input\" |\
    \ grep -E '^[\\.\\?!]' | wc -l)\n  local boredom_count=0\n  local boredom_words=$(echo\
    \ \"$input\" | grep -E '^[\\.\\?!]' | sed 's/^[\\.\\?!]//g' | sed 's/\\.$//g'\
    \ | sed 's/\\?$//g' | sed 's/!$//g')\n  local boredom_word_count=0\n  local boredom_word_counts=$(echo\
    \ \"$boredom_words\" | wc -l)\n  local boredom_word_counts_array=($(echo \"$boredom_words\"\
    \ | sed 's/^[\\.\\?!]//g' | sed 's/\\.$//g' | sed 's/\\?$//g' | sed 's/!$//g'))\n\
    \  local boredom_word_counts_array_length=${#boredom_word_counts_array[@]}\n \
    \ local boredom_word_counts_array_elements=${#boredom_word_counts_array[@]}\n\
    \  local boredom_word_counts_array_elements_length=${#boredom_word_counts_array[@]}\n\
    \  local boredom_word_counts_array_elements_length_minus_one=$((boredom_word_counts_array_elements_length-1))\n\
    \  local boredom_word_counts_array_elements_length_minus_one_minus_one=$((boredom_word_counts_array_elements_length_minus_one-1))\n\
    \  local boredom_word_counts_array_elements_length_minus_one_minus_one_minus_one=$((boredom_word_counts_array_elements_length_minus_one_minus_one-1))\n\
    \  local boredom_word_counts_array_elements_length_minus_one_minus_one_minus_one_minus_one=$((boredom_word_counts_array_elements_length_minus_one_minus_one_minus_one-1))\n\
    \  local boredom_word_counts_array_elements_length_minus_one_minus_one_minus_one_minus_one_minus_one=$((boredom_word_counts_array_elements_length_minus_one_minus_one_minus_one_minus_one_minus_one-1))\n\
    \  local boredom_word_counts_array_elements_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((boredom_word_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5h_yiwly.sh: line 29: unexpected EOF while looking for matching
    `)''

    /tmp/tmp5h_yiwly.sh: line 47: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ boredom_word=\"I\"\n    local boredom_sentence=\".\"\n    local boredom_sentence_index=0\n\
    \    local boredom_sentence_length=${#words}\n    local boredom_sentence_words=${words[@]}\n\
    \    local boredom_sentence_delimiter=${delimiter}\n    local boredom_sentence_boredom_word=${boredom_word}\n\
    \    local boredom_sentence_boredom_sentence=${boredom_sentence}\n    local boredom_sentence_boredom_sentence_index=0\n\
    \    local boredom_sentence_boredom_sentence_length=${#boredom_sentence_words}\n\
    \    local boredom_sentence_boredom_sentence_words=${boredom_sentence_words[@]}\n\
    \    local boredom_sentence_boredom_sentence_delimiter=${boredom_sentence_delimiter}\n\
    \    local boredom_sentence_boredom_sentence_boredom_word=${boredom_sentence_boredom_word}\n\
    \    local boredom_sentence_boredom_sentence_boredom_sentence=${boredom_sentence_boredom_sentence}\n\
    \    local boredom_sentence_boredom_sentence_boredom_sentence_index=0\n    local\
    \ boredom_sentence_boredom_sentence_boredom_sentence_length=${#boredom_sentence_boredom_sentence_words}\n\
    \    local boredom_sentence_boredom_sentence_boredom_sentence_words=${boredom_sentence_boredom_sentence_words[@]}\n\
    \    local boredom_sentence_boredom_sentence_boredom_sentence_delimiter=${boredom_sentence_boredom_sentence_boredom_sentence_delimiter}\n\
    \    local boredom_sentence_boredom_sentence_boredom_sentence_boredom_word=${boredom_sentence_boredom_sentence_boredom_sentence_boredom_word}\n\
    \    local boredom_sentence_boredom_sentence_boredom_sentence_boredom_sentence=${boredom_sentence_boredom_sentence_boredom_sentence_boredom_sentence}\n\
    \    local boredom_sentence_boredom_sentence_boredom_sentence_boredom_sentence_index=0\n\
    \    local boredom_sentence_boredom_sentence_boredom_sentence_boredom_sentence_length=${#boredom_sentence_boredom_sentence_boredom_sentence_words}\n\
    \    local boredom_sentence_boredom_sentence_boredom_sentence_boredom_sentence_words=${boredom_sentence_boredom_sentence_boredom_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4u3ijpom.sh: line 56: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=${#delimiters[@]}\n\
    \    local delimiters_index2=0\n    local delimiters_index3=0\n    local delimiters_index4=0\n\
    \    local delimiters_index5=0\n    local delimiters_index6=0\n    local delimiters_index7=0\n\
    \    local delimiters_index8=0\n    local delimiters_index9=0\n    local delimiters_index10=0\n\
    \    local delimiters_index11=0\n    local delimiters_index12=0\n    local delimiters_index13=0\n\
    \    local delimiters_index14=0\n    local delimiters_index15=0\n    local delimiters_index16=0\n\
    \    local delimiters_index17=0\n    local delimiters_index18=0\n    local delimiters_index19=0\n\
    \    local delimiters_index20=0\n    local delimiters_index21=0\n    local delimiters_index22=0\n\
    \    local delimiters_index23=0\n    local delimiters_index24=0\n    local delimiters_index25=0\n\
    \    local delimiters_index26=0\n    local delimiters_index27=0\n    local delimiters_index28=0\n\
    \    local delimiters_index29=0\n    local delimiters_index30=0\n    local delimiters_index31=0\n\
    \    local delimiters_index32=0\n    local delimiters_index33=0\n    local delimiters_index34=0\n\
    \    local delimiters_index35=0\n    local delimiters_index36=0\n    local delimiters_index37=0\n\
    \    local delimiters_index38=0\n    local delimiters_index39=0\n    local delimiters_index40=0\n\
    \    local delimiters_index41=0\n    local delimiters_index42=0\n    local delimiters_index43=0\n\
    \    local delimiters_index44=0\n    local delimiters_index45=0\n    local delimiters_index46=0\n\
    \    local delimiters_index47=0\n    local delimiters_index48=0\n    local delimiters_index49=0\n\
    \    local delimiters_index50=0\n    local delimiters_index51=0\n    local delimiters_index52=0\n\
    \    local delimiters_index53=0\n    local delimiters_index54=0\n    local delimiters_index55=0\n\
    \    local delimiters_index56=0\n    local delimiters_index57=0\n    local delimiters_index58=0\n\
    \    local delimiters_index59=0\n    local delimiters_index\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local bored_words=$3\n\
    \  local delimiter=$4\n  local bored_words=$5\n  local delimiter=$6\n  local bored_words=$7\n\
    \  local delimiter=$8\n  local bored_words=$9\n  local delimiter=$10\n  local\
    \ bored_words=$11\n  local delimiter=$12\n  local bored_words=$13\n  local delimiter=$14\n\
    \  local bored_words=$15\n  local delimiter=$16\n  local bored_words=$17\n  local\
    \ delimiter=$18\n  local bored_words=$19\n  local delimiter=$20\n  local bored_words=$21\n\
    \  local delimiter=$22\n  local bored_words=$23\n  local delimiter=$24\n  local\
    \ bored_words=$25\n  local delimiter=$26\n  local bored_words=$27\n  local delimiter=$28\n\
    \  local bored_words=$29\n  local delimiter=$30\n  local bored_words=$31\n  local\
    \ delimiter=$32\n  local bored_words=$33\n  local delimiter=$34\n  local bored_words=$35\n\
    \  local delimiter=$36\n  local bored_words=$37\n  local delimiter=$38\n  local\
    \ bored_words=$39\n  local delimiter=$40\n  local bored_words=$41\n  local delimiter=$42\n\
    \  local bored_words=$43\n  local delimiter=$44\n  local bored_words=$45\n  local\
    \ delimiter=$46\n  local bored_words=$47\n  local delimiter=$48\n  local bored_words=$49\n\
    \  local delimiter=$50\n  local bored_words=$51\n  local delimiter=$52\n  local\
    \ bored_words=$53\n  local delimiter=$54\n  local bored_words=$55\n  local delimiter=$56\n\
    \  local bored_words=$57\n  local delimiter=$58\n  local bored_words=$59\n  local\
    \ delimiter=$60\n  local bored_words=$61\n  local delimiter=$62\n  local bored_words=$63\n\
    \  local delimiter=$64\n  local bored_words=$65\n  local delimiter=$66\n  local\
    \ bored_words=$67\n  local delimiter=$68\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_chars=${delimiters[*]}\n  local delimiters_chars_length=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_chars=${delimiters_chars[*]}\n  local delimiters_chars_chars_length=${#delimiters_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars=${delimiters_chars_chars[*]}\n  local delimiters_chars_chars_chars_length=${#delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars=${delimiters_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars[\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6frlovcv.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_count=${#delimiters[@]}\n    local delimiters_array=(\"\
    ${delimiters[@]}\")\n    local delimiters_array_count=${#delimiters_array[@]}\n\
    \    local delimiters_array_elements=${delimiters_array[@]}\n    local delimiters_array_elements_count=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_count=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_count=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_element\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string}\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"${delimiters[@]}\"\
    )\n    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$1\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_word=''\n    local boredom_sentence=''\n    local boredom_sentence_index=0\n\
    \    local boredom_sentence_words=()\n    local boredom_sentence_word=''\n   \
    \ local boredom_sentence_word_index=0\n    local boredom_sentence_word_length=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_words=()\n    local boredom_sentence_word_boredom_word=''\n\
    \    local boredom_sentence_word_boredom_word_index=0\n    local boredom_sentence_word_boredom_word_length=0\n\
    \    local boredom_sentence_word_boredom_word_count=0\n    local boredom_sentence_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_words=()\n    local boredom_sentence_word_boredom_word_boredom_word=''\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_index=0\n    local\
    \ boredom_sentence_word_boredom_word_boredom_word_length=0\n    local boredom_sentence_word_boredom_word_boredom_word_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_count=0\n \
    \   local boredom_sentence_word_boredom_word_boredom_word_boredom_words=()\n \
    \   local boredom_sentence_word_boredom_word_boredom_word_boredom_word=''\n  \
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_length=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_words=()\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word=''\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiter=(\"\
    ?\")\n  local delimiter2=(\"!\")\n  local delimiter3=(\"?\")\n  local delimiter4=(\"\
    !\")\n  local delimiter5=(\"?\")\n  local delimiter6=(\"!\")\n  local delimiter7=(\"\
    ?\")\n  local delimiter8=(\"!\")\n  local delimiter9=(\"?\")\n  local delimiter10=(\"\
    !\")\n  local delimiter11=(\"?\")\n  local delimiter12=(\"!\")\n  local delimiter13=(\"\
    ?\")\n  local delimiter14=(\"!\")\n  local delimiter15=(\"?\")\n  local delimiter16=(\"\
    !\")\n  local delimiter17=(\"?\")\n  local delimiter18=(\"!\")\n  local delimiter19=(\"\
    ?\")\n  local delimiter20=(\"!\")\n  local delimiter21=(\"?\")\n  local delimiter22=(\"\
    !\")\n  local delimiter23=(\"?\")\n  local delimiter24=(\"!\")\n  local delimiter25=(\"\
    ?\")\n  local delimiter26=(\"!\")\n  local delimiter27=(\"?\")\n  local delimiter28=(\"\
    !\")\n  local delimiter29=(\"?\")\n  local delimiter30=(\"!\")\n  local delimiter31=(\"\
    ?\")\n  local delimiter32=(\"!\")\n  local delimiter33=(\"?\")\n  local delimiter34=(\"\
    !\")\n  local delimiter35=(\"?\")\n  local delimiter36=(\"!\")\n  local delimiter37=(\"\
    ?\")\n  local delimiter38=(\"!\")\n  local delimiter39=(\"?\")\n  local delimiter40=(\"\
    !\")\n  local delimiter41=(\"?\")\n  local delimiter42=(\"!\")\n  local delimiter43=(\"\
    ?\")\n  local delimiter44=(\"!\")\n  local delimiter45=(\"?\")\n  local delimiter46=(\"\
    !\")\n  local delimiter47=(\"?\")\n  local delimiter48=(\"!\")\n  local delimiter49=(\"\
    ?\")\n  local delimiter50=(\"!\")\n  local delimiter51=(\"?\")\n  local delimiter52=(\"\
    !\")\n  local delimiter53=(\"?\")\n  local delimiter54=(\"!\")\n  local delimiter55=(\"\
    ?\")\n  local delimiter56=(\"!\")\n  local delimiter57=(\"?\")\n  local delimiter58=(\"\
    !\")\n  local delimiter59=(\"?\")\n  local delimiter60=(\"!\")\n  local delimiter61=(\"\
    ?\")\n  local delimiter62=(\"!\")\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"${delimiters[@]}\"\
    )\n    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=$(echo \"$1\" | sed -n 's/^I\\?.*\\.\\?$//p')\n  echo \"\
    $boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_count=${#delimiters[@]}\n    local delimiters_index=0\n    while\
    \ [[ $word =~ (^|[!?.])(${delimiters[delimiters_index]})([^.]|$) ]]; do\n    \
    \    ((delimiters_index+=1))\n    done\n    local delimiters_length=${#delimiters[@]}\n\
    \    local delimiters_index=${delimiters_index}\n    while [[ $word =~ (^|[!?.])(${delimiters[delimiters_index]})([^.]|$)\
    \ ]]; do\n        ((delimiters_index-=1))\n    done\n    local delimiters_length=${#delimiters[@]}\n\
    \    local delimiters_index=${delimiters_index}\n    while [[ $word =~ (^|[!?.])(${delimiters[delimiters_index]})([^.]|$)\
    \ ]]; do\n        ((delimiters_index+=1))\n    done\n    local delimiters_length=${#delimiters[@]}\n\
    \    local delimiters_index=${delimiters_index}\n    while [[ $word =~ (^|[!?.])(${delimiters[delimiters_index]})([^.]|$)\
    \ ]]; do\n        ((delimiters_index-=1))\n    done\n    local delimiters_length=${#delimiters[@]}\n\
    \    local delimiters_index=${delimiters_index}\n    while [[ $word =~ (^|[!?.])(${delimiters[delimiters_index]})([^.]|$)\
    \ ]]; do\n        ((delimiters_index+=1))\n    done\n    local delimiters_length=${#delimiters[@]}\n\
    \    local delimiters_index=${delimiters_index}\n    while [[ $word =~ (^|[!?.])(${delimiters[delimiters_index]})([^.]|$)\
    \ ]]; do\n        ((delimiters_index-=1))\n    done\n    local delimiters_length=${#delimiters[@]}\n\
    \    local delimiters_index=${delimiters_index}\n    while [[ $word =~ (^|[!?.])(${delimiters[delimiters_index]})([^.]|$)\
    \ ]]; do\n        ((delimiters_index+=1))\n    done\n    local delimiters_length=${#delimiters[@]}\n\
    \    local delimiters_index=${delimiters_index}\n    while [[ $word =~ (^|[!?.])(${delimiters[delimiters_index]})([^.\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfj2x52pe.sh: line 53: unexpected EOF while looking for matching
    `)''

    /tmp/tmpfj2x52pe.sh: line 71: unexpected argument to conditional binary operator

    /tmp/tmpfj2x52pe.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiters=(\".\")\n  local delimiters_len=${#delimiters[@]}\n\
    \  local delimiters_chars=(\"?\")\n  local delimiters_chars_len=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_len=${#delimiters_chars[@]}\n  local delimiters_chars_chars=(\"\
    !\")\n  local delimiters_chars_chars_len=${#delimiters_chars_chars[@]}\n  local\
    \ delimiters_chars_chars_chars_len=${#delimiters_chars_chars_chars[@]}\n  local\
    \ delimiters_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=$1\n    local boredoms=0\n    local boredom_words=()\n \
    \   local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_sentence=\"\"\n    local boredom_word=\"\"\n    local boredom_char=\"\
    \"\n    local boredom_sentences_array=()\n    local boredom_words_array=()\n \
    \   local boredom_sentences_array_length=()\n    local boredom_words_array_length=()\n\
    \    local boredom_sentence_length=()\n    local boredom_sentence_length_length=()\n\
    \    local boredom_word_length=()\n    local boredom_word_length_length=()\n \
    \   local boredom_char_count=0\n    local boredom_char_count1=0\n    local boredom_char_count2=0\n\
    \    local boredom_char_count3=0\n    local boredom_char_count4=0\n    local boredom_char_count5=0\n\
    \    local boredom_char_count6=0\n    local boredom_char_count7=0\n    local boredom_char_count8=0\n\
    \    local boredom_char_count9=0\n    local boredom_char_count10=0\n    local\
    \ boredom_char_count11=0\n    local boredom_char_count12=0\n    local boredom_char_count13=0\n\
    \    local boredom_char_count14=0\n    local boredom_char_count15=0\n    local\
    \ boredom_char_count16=0\n    local boredom_char_count17=0\n    local boredom_char_count18=0\n\
    \    local boredom_char_count19=0\n    local boredom_char_count20=0\n    local\
    \ boredom_char_count21=0\n    local boredom_char_count22=0\n    local boredom_char_count23=0\n\
    \    local boredom_char_count24=0\n    local boredom_char_count25=0\n    local\
    \ boredom_char_count26=0\n    local boredom_char_count27=0\n    local boredom_char_count28=0\n\
    \    local boredom_char_count29=0\n    local boredom_char_count30=0\n    local\
    \ boredom_char_count31=0\n    local boredom_char_count32=0\n    local boredom_char_count33=0\n\
    \    local boredom_char_count34=0\n    local boredom_char_count35=0\n    local\
    \ boredom_char_count36=0\n    local boredom_char_count37=0\n    local bore\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=$1\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_words_in_sentence\n  local boredom_sentences_in_sentence\n  local\
    \ boredom_sentences_in_sentence\n  local boredom_sentences_in_sentence_count\n\
    \  local boredom_sentences_in_sentence_word\n  local boredom_sentences_in_sentence_word\n\
    \  local boredom_sentences_in_sentence_word_count\n  local boredom_sentences_in_sentence_word_count\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence\n  local boredom_sentences_in_sentence_word_count_in_sentence\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count\n  local boredom_sentences_in_sentence_word_count_in_sentence_count\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence_count\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence_count\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence_count\n\
    \  local boredom_sentences_in_sentence_word_count_in_sentence_count_in_sentence_count_in_sentence_count_in_sentence_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_i=(\"?\")\n  local delimiters_ii=(\"!\")\n  local delimiters_iii=(\"\
    ?\")\n  local delimiters_iv=(\"!\")\n  local delimiters_v=(\".\")\n  local delimiters_vi=(\"\
    ?\")\n  local delimiters_vii=(\"!\")\n  local delimiters_viii=(\"?\")\n  local\
    \ delimiters_viv=(\"!\")\n  local delimiters_vivi=(\"?\")\n  local delimiters_vivii=(\"\
    !\")\n  local delimiters_viviii=(\"?\")\n  local delimiters_viviii=(\"!\")\n \
    \ local delimiters_viviii=(\"?\")\n  local delimiters_viviiii=(\"!\")\n  local\
    \ delimiters_viviiii=(\"?\")\n  local delimiters_viviiiii=(\"!\")\n  local delimiters_viviiiii=(\"\
    ?\")\n  local delimiters_viviiiiii=(\"!\")\n  local delimiters_viviiiiiii=(\"\
    ?\")\n  local delimiters_viviiiiiii=(\"!\")\n  local delimiters_viviiiiiiii=(\"\
    ?\")\n  local delimiters_viviiiiiiiii=(\"!\")\n  local delimiters_viviiiiiiiii=(\"\
    ?\")\n  local delimiters_viviiiiiiiiii=(\"!\")\n  local delimiters_viviiiiiiiiiii=(\"\
    ?\")\n  local delimiters_viviiiiiiiiiii=(\"!\")\n  local delimiters_viviiiiiiiiiiii=(\"\
    ?\")\n  local delimiters_viviiiiiiiiiiiii=(\"!\")\n  local delimiters_viviiiiiiiiiiiiii=(\"\
    ?\")\n  local delimiters_viviiiiiiiiiiiiiii=(\"!\")\n  local delimiters_viviiiiiiiiiiiiiiii=(\"\
    ?\")\n  local delimiters_viviiiiiiiiiiiiiiiii=(\"!\")\n  local delimiters_viviiiiiiiiiiiiiiiiiiii=(\"\
    ?\")\n  local delimiters_viviiiiiiiiiiiiiiiiiiiii=(\"!\")\n  local delimiters_viviiiiiiiiiiiiiiiiiiiiii=(\"\
    ?\")\n  local delimiters_viviiiiiiiiiiiiiiiiiiiiiii=(\"!\")\n  local delimiters_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_delimiter=$3\n  local boredom_delimiters=$4\n  local boredom_delimiters_array=($boredom_delimiters)\n\
    \  local boredom_delimiters_array_length=${#boredom_delimiters[@]}\n  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n\
    \  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local\
    \ boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n\
    \  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local\
    \ boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n\
    \  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local\
    \ boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n\
    \  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local\
    \ boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n\
    \  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local\
    \ boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n\
    \  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local\
    \ boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n\
    \  local boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local\
    \ boredom_delimiters_array_length=${#boredom_delimiters_array[@]}\n  local boredom_delimiters_array_length=${#\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6u1uzchs.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_element\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1 bored=0\n    local delimiters=(\".\"\
    )?(\"?\")?(\"!\")\n    for word in $words\n    do\n        for delimiter in \"\
    ${delimiters[@]}\"\n        do\n            if [[ \"$word\" == *\"$delimiter\"\
    * ]]\n            then\n                (( bored++ ))\n                break\n\
    \            fi\n        done\n    done\n    echo \"$bored\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfc2p90vi.sh: line 15: syntax error near unexpected token `(''

    /tmp/tmpfc2p90vi.sh: line 15: `    local delimiters=(".")?("?")?("!")''

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_string=${delimiters[*]}\n  local delimiters_string_length=${#delimiters_string[*]}\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((delimiters_string_length-1))\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string_length=$((\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprpjxlx7i.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmprpjxlx7i.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiter=$2\n  local sentence=$3\n\
    \  local delimiters=($delimiter)\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=($delimiters)\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=($delimiters_array)\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=($delimiters_array_elements)\n  local\
    \ delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=($delimiters_array_elements_elements)\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=($delimiters_array_elements_elements_elements)\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=($delimiters_array_elements_elements_elements_elements)\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=($delimiters_array_elements_elements_elements_elements_elements_elements)\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1 \n    local delimiters=(\".\")\n  \
    \  local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[@]}\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed 's/\\./ /g' | sed 's/\\?/ /g' | sed 's/!/ /g')\n    for\
    \ boredom_word in $boredom_words; do\n        if [[ $boredom_word == I* ]]; then\n\
    \            boredom_count=$((boredom_count+1))\n        fi\n    done\n    echo\
    \ \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiter=$2\n  local sentence=$3\n\
    \  local delimiter_count=0\n  local sentence_count=0\n  local delimiter_index=0\n\
    \  local sentence_length=$((${#sentence} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local delimiter_index=$((${#delimiter}\
    \ - 1))\n  local delimiter_index=$((${#delimiter} - 1))\n  local \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=${1}\n\
    \    local delimiters_value=${delimiters[$delimiters_index]}\n    local delimiters_value_count=${#delimiters_value}\n\
    \    local delimiters_value_count=${#delimiters_value}\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3uihsb42.sh: line 18: Hello world: syntax error in expression (error
    token is "world")

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_chars=${delimiters[*]}\n  local delimiters_chars_length=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \  local delimiters_char\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=${#delimiters[@]}\n  local delimiters_values=(\"?\"\
    )\n  local delimiters_values_count=${#delimiters_values[@]}\n  local delimiters_values_index=${#delimiters_values[@]}\n\
    \  local delimiters_values_values_count=${#delimiters_values_values[@]}\n  local\
    \ delimiters_values_values_index=${#delimiters_values_values[@]}\n  local delimiters_values_values_values_count=${#delimiters_values_values_values[@]}\n\
    \  local delimiters_values_values_values_count=${#delimiters_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_count=${\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3rspog4a.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiter2=$3\n\
    \  local delimiter3=$4\n  local delimiter4=$5\n  local delimiter5=$6\n  local\
    \ delimiter6=$7\n  local delimiter7=$8\n  local delimiter8=$9\n  local delimiter9=$10\n\
    \  local delimiter10=$11\n  local delimiter11=$12\n  local delimiter12=$13\n \
    \ local delimiter13=$14\n  local delimiter14=$15\n  local delimiter15=$16\n  local\
    \ delimiter16=$17\n  local delimiter17=$18\n  local delimiter18=$19\n  local delimiter19=$20\n\
    \  local delimiter20=$21\n  local delimiter21=$22\n  local delimiter22=$23\n \
    \ local delimiter23=$24\n  local delimiter24=$25\n  local delimiter25=$26\n  local\
    \ delimiter26=$27\n  local delimiter27=$28\n  local delimiter28=$29\n  local delimiter29=$30\n\
    \  local delimiter30=$31\n  local delimiter31=$32\n  local delimiter32=$33\n \
    \ local delimiter33=$34\n  local delimiter34=$35\n  local delimiter35=$36\n  local\
    \ delimiter36=$37\n  local delimiter37=$38\n  local delimiter38=$39\n  local delimiter39=$40\n\
    \  local delimiter40=$41\n  local delimiter41=$42\n  local delimiter42=$43\n \
    \ local delimiter43=$44\n  local delimiter44=$45\n  local delimiter45=$46\n  local\
    \ delimiter46=$47\n  local delimiter47=$48\n  local delimiter48=$49\n  local delimiter49=$50\n\
    \  local delimiter50=$51\n  local delimiter51=$52\n  local delimiter52=$53\n \
    \ local delimiter53=$54\n  local delimiter54=$55\n  local delimiter55=$56\n  local\
    \ delimiter56=$57\n  local delimiter57=$58\n  local delimiter58=$59\n  local delimiter59=$60\n\
    \  local delimiter60=$61\n  local delimiter61=$62\n  local delimiter62=$63\n \
    \ local delimiter63=$64\n  local delimiter64=$65\n  local delimiter65=$66\n  local\
    \ delimiter66=$67\n  local delimiter67=$68\n  local delimiter68=$69\n  local delimiter69=$70\n\
    \  local delimiter70=$71\n  local delimiter71=$72\n  local delimiter72\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_element\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=0\n  local delimiters_string=\"\"\n  local delimiters_string_index=0\n\
    \  local delimiters_string_length=0\n  local delimiters_string_length_index=0\n\
    \  local delimiters_string_length_string=\"\"\n  local delimiters_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length=0\n  local delimiters_string_length_string_length_index=0\n\
    \  local delimiters_string_length_string_length_string=\"\"\n  local delimiters_string_length_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length_string_length=0\n  local delimiters_string_length_string_length_string_length_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string=\"\"\n  local\
    \ delimiters_string_length_string_length_string_length_string_index=0\n  local\
    \ delimiters_string_length_string_length_string_length_string_length=0\n  local\
    \ delimiters_string_length_string_length_string_length_string_length_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local delimiters_string_length_string_length_string_length_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local delimiters_string_length_string_length_string_length_string_length_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length_string_length_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_delimiter=$3\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_sentence_index\n    local boredom_sentence_length\n    local\
    \ boredom_sentence_word\n    local boredom_sentence_word_index\n    local boredom_sentence_word_length\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_word_count\n    local boredom_sentence_word_count\n\
    \    local boredom_sentence_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_count=0\n    local boredom_string=\"I\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_count=0\n    local boredom_string=\"I\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_count=0\n    local boredom_string=\"I\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_count=0\n    local boredom_string=\"I\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_count=0\n    local boredom_string=\"I\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_count=0\n    local boredom_string=\"I\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_count=0\n    local boredom_string=\"I\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_count=0\n    local boredom_string=\"I\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local boredom_count=0\n    local boredom_string=\"I\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_count=0\n    local boredom_string=\"\
    I\"\n    local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiter=$2\n    local\
    \ sentence=$3\n    local delimiters=(\".\")\n    local delimiters_i=(\"?\")\n\
    \    local delimiters_ii=(\"!\")\n    local delimiters_iii=(\"?\")\n    local\
    \ delimiters_iv=(\"!\")\n    local delimiters_v=(\".\")\n    local delimiters_vi=(\"\
    ?\")\n    local delimiters_vii=(\"!\")\n    local delimiters_viii=(\"?\")\n  \
    \  local delimiters_viv=(\"!\")\n    local delimiters_vivi=(\"?\")\n    local\
    \ delimiters_vivii=(\"!\")\n    local delimiters_vivii=(\"?\")\n    local delimiters_vivii=(\"\
    !\")\n    local delimiters_vivii=(\"?\")\n    local delimiters_viviii=(\"!\")\n\
    \    local delimiters_viviii=(\"?\")\n    local delimiters_viviii=(\"!\")\n  \
    \  local delimiters_viviii=(\"?\")\n    local delimiters_viviiii=(\"!\")\n   \
    \ local delimiters_viviiii=(\"?\")\n    local delimiters_viviiii=(\"!\")\n   \
    \ local delimiters_viviiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n  \
    \  local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=(\"?\")\n    local delimiters_viviiiii=(\"!\")\n\
    \    local delimiters_viviiiii=\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | tr \" \" \"\\n\" | grep -E '^[\\.\\?!]+$')\n    for boredom_word\
    \ in $boredom_words; do\n        if [[ $boredom_word == I* ]]; then\n        \
    \    boredom_count=$((boredom_count+1))\n        fi\n    done\n    echo \"$boredom_count\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local word=$1\n  local delimiters=(\".\")\n  local\
    \ delimiters_length=${#delimiters[@]}\n  local delimiters_array=(${delimiters[@]})\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_elements=${delimiters_array[@]}\n\
    \  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n \
    \ local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n \
    \ local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_element\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ delimiters=(\".\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\",\")\n    local delimiters_=(\";\")\n    local\
    \ delimiters_=(\":\")\n    local delimiters_=(\".\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\",\")\n    local\
    \ delimiters_=(\";\")\n    local delimiters_=(\":\")\n    local delimiters_=(\"\
    .\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\",\")\n    local delimiters_=(\";\")\n    local delimiters_=(\"\
    :\")\n    local delimiters_=(\".\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\",\")\n    local delimiters_=(\"\
    ;\")\n    local delimiters_=(\":\")\n    local delimiters_=(\".\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ,\")\n    local delimiters_=(\";\")\n    local delimiters_=(\":\")\n    local\
    \ delimiters_=(\".\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"\
    !\")\n    local delimiters_=(\",\")\n    local delimiters_=(\";\")\n    local\
    \ delimiters_=(\":\")\n    local delimiters_=(\".\")\n    local delimiters_=(\"\
    ?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\",\")\n    local\
    \ delimiters_=(\";\")\n    local delimiters_=(\":\")\n    local delimiters_=(\"\
    .\")\n    local delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local\
    \ delimiters_=(\",\")\n    local delimiters_=(\";\")\n    local delimiters_=(\"\
    :\")\n    local delimiters_=(\".\")\n    local delimiters_=(\"?\")\n    local\
    \ delimiters_=(\"!\")\n    local delimiters_=(\",\")\n    local delimiters_=(\"\
    ;\")\n    local delimiters_=(\":\")\n    local delimiters_=(\".\")\n    local\
    \ delimiters_=(\"?\")\n    local delimiters_=(\"!\")\n    local delimiters_=(\"\
    ,\")\n    local delimiters_=(\";\")\n    local delimiter\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_array=(\
    \ $boredom_string )\n  local boredom_word=${boredom_array[0]}\n  local boredom_sentence=${boredom_array[1]}\n\
    \  local boredom_delimiter=${boredom_array[2]}\n\n  local boredom_count=0\n  local\
    \ boredom_string=$1\n  local boredom_array=( $boredom_string )\n  local boredom_word=${boredom_array[0]}\n\
    \  local boredom_sentence=${boredom_array[1]}\n  local boredom_delimiter=${boredom_array[2]}\n\
    \n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_array=(\
    \ $boredom_string )\n  local boredom_word=${boredom_array[0]}\n  local boredom_sentence=${boredom_array[1]}\n\
    \  local boredom_delimiter=${boredom_array[2]}\n\n  local boredom_count=0\n  local\
    \ boredom_string=$1\n  local boredom_array=( $boredom_string )\n  local boredom_word=${boredom_array[0]}\n\
    \  local boredom_sentence=${boredom_array[1]}\n  local boredom_delimiter=${boredom_array[2]}\n\
    \n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_array=(\
    \ $boredom_string )\n  local boredom_word=${boredom_array[0]}\n  local boredom_sentence=${boredom_array[1]}\n\
    \  local boredom_delimiter=${boredom_array[2]}\n\n  local boredom_count=0\n  local\
    \ boredom_string=$1\n  local boredom_array=( $boredom_string )\n  local boredom_word=${boredom_array[0]}\n\
    \  local boredom_sentence=${boredom_array[1]}\n  local boredom_delimiter=${boredom_array[2]}\n\
    \n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_array=(\
    \ $boredom_string )\n  local boredom_word=${boredom_array[0]}\n  local boredom_sentence=${boredom_array[1]}\n\
    \  local boredom_delimiter=${bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_vr43_hd.sh: line 78: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiters=(\".\")\n \
    \   local delimiters_length=${#delimiters[@]}\n    local delimiters_chars=(\"\
    ?\")\n    local delimiters_chars_length=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count=${#delimiters_chars[@]}\n    local delimiters_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local input=$1\n  local boredom_count=0\n  local boredom_string=\"I\"\n\
    \  local boredom_words=$(echo $input | sed 's/\\.\\?!//g' | sed \"s/$boredom_string//g\"\
    )\n  local boredom_count=$((${#boredom_words}))\n  echo $boredom_count\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredoms=0\n    local boredom_words=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local delimiters=(\"\
    .\")\n  local delimiters_length=${#delimiters[@]}\n  local delimiters_string=${delimiters[*]}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \  local delimiters_length=${#delimiters_string}\n  local delimiters_string=${\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz681e9qu.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1 \n    local delimiters=(\".\")\n  \
    \  local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"${delimiters[@]}\"\
    )\n    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_element\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string}\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfx9qlspe.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmpfx9qlspe.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_len=${#delimiters[@]}\n    local delimiters_str=${delimiters[*]}\n\
    \    local delimiters_str_len=${#delimiters_str[@]}\n    local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local\
    \ delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local\
    \ delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local\
    \ delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local\
    \ delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local\
    \ delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local\
    \ delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n    local delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local\
    \ delimiters_str_len=$(( delimiters_str_len - 1 ))\n    local delimiters_str_len=$((\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkzrmdyqt.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmpkzrmdyqt.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"${delimiters[@]}\"\
    )\n    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  for word in\
    \ $words; do\n    if [[ \"$word\" =~ $delimiter ]]; then\n      bored=$((bored\
    \ + 1))\n    fi\n  done\n  echo $bored\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1 \n    local delimiters=(\".\")\n  \
    \  local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_count=${#delimiters_string[@]}\n    local delimiters_string_length=${#delimiters_string}\n\
    \    local delimiters_string_length_count=${#delimiters_string_length[@]}\n  \
    \  local delimiters_string_length_length_bored=${#delimiters_string_length[@]}\n\
    \    local delimiters_string_length_length_bored_count=${#delimiters_string_length_length_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored=${#delimiters_string_length_length_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored_count=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored_count_bored=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored_count_bored_count=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored_count_bored_count_bored=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored_count_bored_count_bored_count=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored_count_bored_count_bored_count_bored=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored_count_bored_count_bored_count_bored=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored_count_bored_count_bored_count_bored_count=${#delimiters_string_length_length_bored_bored[@]}\n\
    \    local delimiters_string_length_length_bored_count_bored_count_bored_count_bored_count_bored_count_bored_count_bo\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$@\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=0\n   \
    \ local delimiters_word=\"\"\n    local delimiters_word_count=0\n    local delimiters_word_index=0\n\
    \    local delimiters_word_count2=0\n    local delimiters_word_index2=0\n    local\
    \ delimiters_word_count3=0\n    local delimiters_word_index3=0\n    local delimiters_word_count4=0\n\
    \    local delimiters_word_index4=0\n    local delimiters_word_count5=0\n    local\
    \ delimiters_word_index5=0\n    local delimiters_word_count6=0\n    local delimiters_word_index6=0\n\
    \    local delimiters_word_count7=0\n    local delimiters_word_index7=0\n    local\
    \ delimiters_word_count8=0\n    local delimiters_word_index8=0\n    local delimiters_word_count9=0\n\
    \    local delimiters_word_index9=0\n    local delimiters_word_count10=0\n   \
    \ local delimiters_word_index10=0\n    local delimiters_word_count11=0\n    local\
    \ delimiters_word_index11=0\n    local delimiters_word_count12=0\n    local delimiters_word_index12=0\n\
    \    local delimiters_word_count13=0\n    local delimiters_word_index13=0\n  \
    \  local delimiters_word_count14=0\n    local delimiters_word_index14=0\n    local\
    \ delimiters_word_count15=0\n    local delimiters_word_index15=0\n    local delimiters_word_count16=0\n\
    \    local delimiters_word_index16=0\n    local delimiters_word_count17=0\n  \
    \  local delimiters_word_index17=0\n    local delimiters_word_count18=0\n    local\
    \ delimiters_word_index18=0\n    local delimiters_word_count19=0\n    local delimiters_word_index19=0\n\
    \    local delimiters_word_count20=0\n    local delimiters_word_index20=0\n  \
    \  local delimiters_word_count21=0\n    local delimiters_word_index21=0\n    local\
    \ delimiters_word_count22=0\n    local delimiters_word_index22=0\n    local delimiters_word_count23=0\n\
    \    local delimiters_word_index23=0\n    local delimiters_word_count24=0\n  \
    \  local delimiters_word_index24=0\n    local delimiters_word_count25=0\n    local\
    \ delimiters_word_index25=0\n    local delimiters_word_count26=0\n    local delimiters_word_index26=0\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_count=${#delimiters_array[@]}\n    local delimiters_array_index=${1}\n\
    \    local delimiters_array_element=${delimiters_array[${delimiters_array_index}]}\n\
    \    local delimiters_array_element_count=${#delimiters_array_element}\n    local\
    \ delimiters_array_element_index=${1}\n    local delimiters_array_element_element=${delimiters_array_element[${delimiters_array_element_index}]}\n\
    \    local delimiters_array_element_element_count=${#delimiters_array_element_element}\n\
    \    local delimiters_array_element_element_index=${1}\n    local delimiters_array_element_element_element=${delimiters_array_element_element[${delimiters_array_element_element_index}]}\n\
    \    local delimiters_array_element_element_element_count=${#delimiters_array_element_element_element}\n\
    \    local delimiters_array_element_element_element_index=${1}\n    local delimiters_array_element_element_element_element=${delimiters_array_element_element_element[${delimiters_array_element_element_element_index}]}\n\
    \    local delimiters_array_element_element_element_element_count=${#delimiters_array_element_element_element_element}\n\
    \    local delimiters_array_element_element_element_element_index=${1}\n    local\
    \ delimiters_array_element_element_element_element_element=${delimiters_array_element_element_element_element[${delimiters_array_element_element_element_element_index}]}\n\
    \    local delimiters_array_element_element_element_element_element_count=${#delimiters_array_element_element_element_element_element}\n\
    \    local delimiters_array_element_element_element_element_element_index=${1}\n\
    \    local delimiters_array_element_element_element_element_element=${delimiters_array_element_element_element_element_element[${delimiters_array_element_element_element_element_element_index}]}\n\
    \    local delimiters_array_element_element_element_element_element_element_count=${#delimiters_array_element_element_element_element_element_element}\n\
    \    local delimiters_array_element_element_element_element_element_element_index=${1}\n\
    \    local delimiters_array_element_element_element_element_element_element=${delimiters_array_element_element_element_element_element_element[${delimiters_array_element_element_element_element_element_element_index}]}\n\
    \    local delimiters_array_element_element_element_element_element_element_element_count=${#delimiters_array_element_element_element_element_element_element_element}\n\
    \    local delimiters_array_element_element_element_element_element_element_element_index=${1}\n\
    \    local delimiters_array_element_element_element_element_element_element_element=${delimiter\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjhtpth5t.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local words=$1\n    local delimiters=(\".\"\
    )\n    local delimiters_count=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_count=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_count=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_count=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_count=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_element\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$@\n    local delimiters=(\".\")\n\
    \    local delimiter=\".\"\n    local delimiter_index=0\n    local word\n    local\
    \ delimiter_index\n    local delimiters\n    local delimiter\n    local words\n\
    \    local boredoms\n    local delimiter_index\n    local delimiter_index\n  \
    \  local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n    local delimiter_index\n    local delimiter_index\n\
    \    local delimiter_index\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=${#delimiters[@]}\n\
    \    local delimiters_values=(\"?\")\n    local delimiters_values_count=${#delimiters_values[@]}\n\
    \    local delimiters_values_index=${#delimiters_values[@]}\n    local delimiters_values_values_count=${#delimiters_values_values[@]}\n\
    \    local delimiters_values_values_index=${#delimiters_values_values[@]}\n  \
    \  local delimiters_values_values_values_count=${#delimiters_values_values_values[@]}\n\
    \    local delimiters_values_values_values_count=${#delimiters_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_chars=(\"?\"\
    )\n    local delimiters_chars_length=${#delimiters_chars[@]}\n    local delimiters_chars_length=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_chars_length=${#delimiters_chars_chars[@]}\n    local\
    \ delimiters_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzfk49y19.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_array=($boredom_string)\n\
    \    local boredom_word=${boredom_array[0]}\n    local boredom_sentence=${boredom_array[1]}\n\
    \    local boredom_punctuation=${boredom_array[2]}\n    local boredom_punctuation_count=0\n\
    \    local boredom_punctuation_array=($boredom_punctuation)\n    local boredom_punctuation_word=${boredom_punctuation_array[0]}\n\
    \    local boredom_punctuation_sentence=${boredom_punctuation_array[1]}\n    local\
    \ boredom_punctuation_punctuation=${boredom_punctuation_array[2]}\n    local boredom_punctuation_punctuation_count=0\n\
    \    local boredom_punctuation_punctuation_array=($boredom_punctuation_punctuation)\n\
    \    local boredom_punctuation_punctuation_word=${boredom_punctuation_punctuation_array[0]}\n\
    \    local boredom_punctuation_punctuation_sentence=${boredom_punctuation_punctuation_array[1]}\n\
    \    local boredom_punctuation_punctuation_punctuation=${boredom_punctuation_punctuation_array[2]}\n\
    \    local boredom_punctuation_punctuation_punctuation_count=0\n    local boredom_punctuation_punctuation_punctuation_array=($boredom_punctuation_punctuation_punctuation)\n\
    \    local boredom_punctuation_punctuation_punctuation_word=${boredom_punctuation_punctuation_punctuation_array[0]}\n\
    \    local boredom_punctuation_punctuation_punctuation_sentence=${boredom_punctuation_punctuation_punctuation_array[1]}\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation=${boredom_punctuation_punctuation_punctuation_array[2]}\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation_count=0\n \
    \   local boredom_punctuation_punctuation_punctuation_punctuation_array=($boredom_punctuation_punctuation_punctuation_punctuation)\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation_word=${boredom_punctuation_punctuation_punctuation_punctuation_array[0]}\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation_sentence=${boredom_punctuation_punctuation_punctuation_punctuation_array[1]}\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation=${boredom_punctuation_punctuation_punctuation_punctuation_array[2]}\n\
    \    local boredom_punctuation_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_sentence_words=\"\"\n    local boredom_sentence_word=\"\"\
    \n    local boredom_sentence_word_count=0\n    local boredom_sentence_word_boredom=\"\
    \"\n    local boredom_sentence_word_boredom_count=0\n    local boredom_sentence_word_boredom_word=\"\
    \"\n    local boredom_sentence_word_boredom_word_count=0\n    local boredom_sentence_word_boredom_word_boredom=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_count=0\n    local boredom_sentence_word_boredom_word_boredom_word=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word_count=0\n    local\
    \ boredom_sentence_word_boredom_word_boredom_word_boredom=\"\"\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word=\"\"\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_word=\"\
    \"\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom=\"\
    \"\n    local boredom_sentence_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=${#delimiters[@]}\n  local delimiters_index_count=${#delimiters[@]}\n\
    \  local delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count=$((delimiters_index_count - 1))\n  local delimiters_index_count=$((delimiters_index_count\
    \ - 1))\n  local delimiters_index_count=$((delimiters_index_count - 1))\n  local\
    \ delimiters_index_count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(echo \"$1\" | sed -n 's/^[Ii]\\?.*\\.\\?$//p')\n   \
    \ [[ \"$boredoms\" =~ (^|[!.?])$1 ]] || return 1\n    return 0\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047384
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiters=(\".\")\n\
    \    local delimiters_count=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_count=${#delimiters_array[@]}\n    local delimiters_array_index=${1}\n\
    \    local delimiters_array_value=${delimiters_array[${delimiters_array_index}]}\n\
    \    local delimiters_array_value_count=${#delimiters_array_value}\n    local\
    \ delimiters_array_value_count_index=${1}\n    local delimiters_array_value_count_value=${delimiters_array_value[${delimiters_array_value_count_index}]}\n\
    \    local delimiters_array_value_count_value_index=${1}\n    local delimiters_array_value_count_value_index_count=${#delimiters_array_value_count_value}\n\
    \    local delimiters_array_value_count_value_index_count_index=${1}\n    local\
    \ delimiters_array_value_count_value_index_count_value_index=${2}\n    local delimiters_array_value_count_value_index_count_value_index_count=${#delimiters_array_value_count_value_index_count}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_index=${1}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count=${2}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count_index=${3}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count_value_index_count=${#delimiters_array_value_count_value_index_count_value_index_count}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count_value_index_count_index=${1}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count_value_index_count_value_index_count=${2}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count_value_index_count_value_index_count_index=${3}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count_value_index_count_value_index_count_value_index_count=${#delimiters_array_value_count_value_index_count_value_index_count_value_index_count_value_index_count}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count_value_index_count_value_index_count_value_index_count_index=${1}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count_value_index_count_value_index_count_value_index_count_value_index_count=${2}\n\
    \    local delimiters_array_value_count_value_index_count_value_index_count_value_index_count_value_index_count_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzghpomid.sh: line 20: Hello world: syntax error in expression (error
    token is "world")

    '
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiters=(\".\")\n \
    \   local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"\
    ${delimiters[@]}\")\n    local delimiters_array_length=${#delimiters_array[@]}\n\
    \    local delimiters_array_elements=${delimiters_array[@]}\n    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=\"\
    .?!\"\n  for word in $words; do\n    if [[ \"$word\" == *\"$delimiter\"* ]]; then\n\
    \      bored=$((bored + 1))\n    fi\n  done\n  echo $bored\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiter=$2\n    local sentence=$3\n\
    \    local boredom_count=0\n    local boredom_words=()\n    local boredom_sentences=()\n\
    \    local boredom_delimiters=()\n    local boredom_delimiters_count=()\n    local\
    \ boredom_delimiters_words=()\n    local boredom_delimiters_sentences=()\n   \
    \ local boredom_delimiters_boredom_words=()\n    local boredom_delimiters_boredom_sentences=()\n\
    \    local boredom_delimiters_boredom_delimiters_words=()\n    local boredom_delimiters_boredom_delimiters_sentences=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_words=()\n    local boredom_delimiters_boredom_delimiters_boredom_sentences=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_words=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_sentences=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_words=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_sentences=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_words=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_sentences=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_words=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_sentences=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_words=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_sentences=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_words=()\n\
    \    local boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_boredom_delimiters_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_word=\"I\"\
    \n  local delimiter=\".\"\n  local delimiters=\" . ? !\"\n  local delimiter_count=0\n\
    \  local delimiter_index=0\n  local delimiter_indexes=()\n  local delimiter_indexes_count=0\n\
    \  local delimiter_indexes_words=()\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_index=0\n  local delimiter_indexes_words_indexes=()\n\
    \  local delimiter_indexes_words_indexes_count=0\n  local delimiter_indexes_words_indexes_index=0\n\
    \  local delimiter_indexes_words_indexes_indexes=()\n  local delimiter_indexes_words_indexes_indexes_count=0\n\
    \  local delimiter_indexes_words_indexes_indexes_index=0\n  local delimiter_indexes_words_indexes_indexes_indexes=()\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_count=0\n  local delimiter_indexes_words_indexes_indexes_indexes_index=0\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_indexes=()\n  local delimiter_indexes_words_indexes_indexes_indexes_indexes_count=0\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_indexes_index=0\n  local\
    \ delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes=()\n  local\
    \ delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes_count=0\n  local\
    \ delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes_index=0\n  local\
    \ delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes_indexes=()\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes_indexes_index=0\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes_indexes_indexes=()\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes_indexes_indexes_index=0\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes=()\n\
    \  local delimiter_indexes_words_indexes_indexes_indexes_\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local delimiters=(\"\
    .\")\n  local delimiters_count=${#delimiters[@]}\n  local delimiters_string=${delimiters[$delimiters_count]}\n\
    \  local delimiters_string_count=${#delimiters_string}\n  local delimiters_string_index=0\n\
    \  local delimiters_string_index2=0\n  local delimiters_string_index3=0\n  local\
    \ delimiters_string_index4=0\n  local delimiters_string_index5=0\n  local delimiters_string_index6=0\n\
    \  local delimiters_string_index7=0\n  local delimiters_string_index8=0\n  local\
    \ delimiters_string_index9=0\n  local delimiters_string_index10=0\n  local delimiters_string_index11=0\n\
    \  local delimiters_string_index12=0\n  local delimiters_string_index13=0\n  local\
    \ delimiters_string_index14=0\n  local delimiters_string_index15=0\n  local delimiters_string_index16=0\n\
    \  local delimiters_string_index17=0\n  local delimiters_string_index18=0\n  local\
    \ delimiters_string_index19=0\n  local delimiters_string_index20=0\n  local delimiters_string_index21=0\n\
    \  local delimiters_string_index22=0\n  local delimiters_string_index23=0\n  local\
    \ delimiters_string_index24=0\n  local delimiters_string_index25=0\n  local delimiters_string_index26=0\n\
    \  local delimiters_string_index27=0\n  local delimiters_string_index28=0\n  local\
    \ delimiters_string_index29=0\n  local delimiters_string_index30=0\n  local delimiters_string_index31=0\n\
    \  local delimiters_string_index32=0\n  local delimiters_string_index33=0\n  local\
    \ delimiters_string_index34=0\n  local delimiters_string_index35=0\n  local delimiters_string_index36=0\n\
    \  local delimiters_string_index37=0\n  local delimiters_string_index38=0\n  local\
    \ delimiters_string_index39=0\n  local delimiters_string_index40=0\n  local delimiters_string_index41=0\n\
    \  local delimiters_string_index42=0\n  local delimiters_string_index43=0\n  local\
    \ delimiters_string_index44=0\n  local delimiters_string_index45=0\n  local delimiters_string_index46=0\n\
    \  local delimiters_string_index47=0\n  local delimiters_string_index48=0\n  local\
    \ delimiters_string_index49=0\n  local delimiters_string_index50=0\n  local \n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ delimiters=(\".\")\n    local delimiters_i=(\"?\")\n    local delimiters_o=(\"\
    !\")\n    local delimiters_s=(\"?\")\n    local delimiters_s_i=(\"!\")\n    local\
    \ delimiters_s_o=(\".\")\n    local delimiters_s_s_i=(\".\")\n    local delimiters_s_s_o=(\"\
    ?\")\n    local delimiters_s_s_s_i=(\".\")\n    local delimiters_s_s_s_o=(\"!\"\
    )\n    local delimiters_s_s_s_i=(\".\")\n    local delimiters_s_s_s_o=(\"?\")\n\
    \    local delimiters_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_o=(\"!\"\
    )\n    local delimiters_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_o=(\"\
    ?\")\n    local delimiters_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_o=(\"\
    !\")\n    local delimiters_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_o=(\"\
    ?\")\n    local delimiters_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_o=(\"\
    !\")\n    local delimiters_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_o=(\"\
    ?\")\n    local delimiters_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_o=(\"\
    !\")\n    local delimiters_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_o=(\"\
    ?\")\n    local delimiters_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_o=(\"\
    !\")\n    local delimiters_s_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_s_o=(\"\
    ?\")\n    local delimiters_s_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_s_o=(\"\
    !\")\n    local delimiters_s_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_s_o=(\"\
    ?\")\n    local delimiters_s_s_s_s_s_s_s_i=(\".\")\n    local delimiters_s_s_s_s_s_s_s_o=(\"\
    !\")\n    local delimiter\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$@\n    for word in $words; do\n     \
    \   if [[ \"$word\" == \"I\" ]]; then\n            bored=$((bored + 1))\n    \
    \    fi\n    done\n    echo \"$bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_chars=${delimiters[@]}\n\
    \    local delimiters_chars_length=${#delimiters_chars[@]}\n    local delimiters_chars_count=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_count_length=${#delimiters_chars_count[@]}\n    local\
    \ delimiters_chars_count_count_length=${#delimiters_chars_count_length[@]}\n \
    \   local delimiters_chars_count_count_count_length=${#delimiters_chars_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_length=${#delimiters_chars_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \    local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \    local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word_count\n  local boredom_sentence_count\n  local boredom_sentence_word\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  \n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentence=()\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word_count\n  local boredom_sentence_count\n  local boredom_sentence_word\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  \n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047384
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_chars=(\"?\")\n  local delimiters_chars_length=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[@]}\n  local delimiters_chars_count_length=${#delimiters_chars_count[@]}\n\
    \  local delimiters_chars_count_count_length=${#delimiters_chars_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_length=${#delimiters_chars_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_length=${#delimiters_chars_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count[@]}\n\
    \  local delimiter\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_sentences=\"\"\n    local boredom_word=\"\"\n    local boredom_word_count=0\n\
    \    local boredom_word_counts=\"\"\n    local boredom_word_counts_total=0\n \
    \   local boredom_word_counts_totals=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_totals_word=\"\"\n    local boredom_word_counts_totals_words=\"\
    \"\n    local boredom_word_counts_total\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047384
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_delimiter=$3\n  local boredom_word\n  local boredom_word_count\n\
    \  local boredom_word_length\n  local boredom_word_delimiter\n  local boredom_word_length_count\n\
    \  local boredom_word_delimiter_count\n  local boredom_word_delimiter_index\n\
    \  local boredom_word_delimiter_index2\n  local boredom_word_delimiter_index3\n\
    \  local boredom_word_delimiter_index4\n  local boredom_word_delimiter_index5\n\
    \  local boredom_word_delimiter_index6\n  local boredom_word_delimiter_index7\n\
    \  local boredom_word_delimiter_index8\n  local boredom_word_delimiter_index9\n\
    \  local boredom_word_delimiter_index10\n  local boredom_word_delimiter_index11\n\
    \  local boredom_word_delimiter_index12\n  local boredom_word_delimiter_index13\n\
    \  local boredom_word_delimiter_index14\n  local boredom_word_delimiter_index15\n\
    \  local boredom_word_delimiter_index16\n  local boredom_word_delimiter_index17\n\
    \  local boredom_word_delimiter_index18\n  local boredom_word_delimiter_index19\n\
    \  local boredom_word_delimiter_index20\n  local boredom_word_delimiter_index21\n\
    \  local boredom_word_delimiter_index22\n  local boredom_word_delimiter_index23\n\
    \  local boredom_word_delimiter_index24\n  local boredom_word_delimiter_index25\n\
    \  local boredom_word_delimiter_index26\n  local boredom_word_delimiter_index27\n\
    \  local boredom_word_delimiter_index28\n  local boredom_word_delimiter_index29\n\
    \  local boredom_word_delimiter_index30\n  local boredom_word_delimiter_index31\n\
    \  local boredom_word_delimiter_index32\n  local boredom_word_delimiter_index33\n\
    \  local boredom_word_delimiter_index34\n  local boredom_word_delimiter_index35\n\
    \  local boredom_word_delimiter_index36\n  local boredom_word_delimiter_index37\n\
    \  local boredom_word_delimiter_index38\n  local boredom_word_delimiter_index39\n\
    \  local boredom_word_delimiter_index40\n  local boredom_word_delimiter_index41\n\
    \  local boredom_word_delimiter_index42\n  local boredom_word_delimiter_index\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ boredom_word=\"I\"\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_delimiters=()\n    local boredom_delimiters_count=()\n    local\
    \ delimiter_index=0\n    local word_index=0\n    local delimiter_index=0\n   \
    \ local boredom_delimiter_index=0\n    local boredom_word_index=0\n    local boredom_word_count=0\n\
    \    local boredom_word_delimiters=()\n    local boredom_word_delimiters_count=()\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \    local boredom_word_delimiter_index=0\n    local boredom_word_delimiter_index=0\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047383
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiters=(\".\")\n  local\
    \ delimiters_length=${#delimiters[@]}\n  local delimiters_array=(${delimiters[@]})\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_index=0\n\
    \  local delimiters_array_element\n  local delimiters_array_element_length\n \
    \ local delimiters_array_element_index\n  local delimiters_array_element_value\n\
    \  local delimiters_array_element_value_length\n  local delimiters_array_element_value_length_index\n\
    \  local delimiters_array_element_value_length_value\n  local delimiters_array_element_value_length_value_index\n\
    \  local delimiters_array_element_value_length_value_value\n  local delimiters_array_element_value_length_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value\n  local delimiters_array_element_value_length_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value\n  local\
    \ delimiters_array_element_value_length_value_value_value_value_index\n  local\
    \ delimiters_array_element_value_length_value_value_value_value_value\n  local\
    \ delimiters_array_element_value_length_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_value_value_value_index\n\
    \  local delimiters_array_element_value_length_value_value_value_value_value_value_value_value_value_value_index\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660047384
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(grep -E '^I' $1 | wc -l)\n    echo \"$boredoms\"\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello: No such file or directory

    grep: world: No such file or directory

    grep: Is: No such file or directory

    grep: the: No such file or directory

    grep: sky: No such file or directory

    grep: blue?: No such file or directory

    grep: I: No such file or directory

    grep: love: No such file or directory

    grep: It: No such file or directory

    grep: \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660047383

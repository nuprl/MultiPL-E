language: sh
name: HumanEval_93_encode
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        if [[ ${#vowels} =~ \"${letter}\" ]]; then\n\
    \            local vowel=${vowels:$((${#vowels}-1)):1}\n            local letter2=${message:$((i+1)):1}\n\
    \            output+=\"${letter2:1}${vowel}\"\n        else\n            output+=\"\
    ${letter}\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelPosition=0\n \
    \   local vowelPosition2=0\n    local vowelPosition3=0\n    local vowelPosition4=0\n\
    \    local vowelPosition5=0\n    local vowelPosition6=0\n    local vowelPosition7=0\n\
    \    local vowelPosition8=0\n    local vowelPosition9=0\n    local vowelPosition10=0\n\
    \    local vowelPosition11=0\n    local vowelPosition12=0\n    local vowelPosition13=0\n\
    \    local vowelPosition14=0\n    local vowelPosition15=0\n    local vowelPosition16=0\n\
    \    local vowelPosition17=0\n    local vowelPosition18=0\n    local vowelPosition19=0\n\
    \    local vowelPosition20=0\n    local vowelPosition21=0\n    local vowelPosition22=0\n\
    \    local vowelPosition23=0\n    local vowelPosition24=0\n    local vowelPosition25=0\n\
    \    local vowelPosition26=0\n    local vowelPosition27=0\n    local vowelPosition28=0\n\
    \    local vowelPosition29=0\n    local vowelPosition30=0\n    local vowelPosition31=0\n\
    \    local vowelPosition32=0\n    local vowelPosition33=0\n    local vowelPosition34=0\n\
    \    local vowelPosition35=0\n    local vowelPosition36=0\n    local vowelPosition37=0\n\
    \    local vowelPosition38=0\n    local vowelPosition39=0\n    local vowelPosition40=0\n\
    \    local vowelPosition41=0\n    local vowelPosition42=0\n    local vowelPosition43=0\n\
    \    local vowelPosition44=0\n    local vowelPosition45=0\n    local vowelPosition46=0\n\
    \    local vowelPosition47=0\n    local vowelPosition48=0\n    local vowelPosition49=0\n\
    \    local vowelPosition50=0\n    local vowelPosition51=0\n    local vowelPosition52=0\n\
    \    local vowelPosition53=0\n    local vowelPosition54=0\n    local vowelPosition55=0\n\
    \    local vowelPosition56=0\n    local vowelPosition57=0\n    local vowelPosition58=0\n\
    \    local vowelPosition59=0\n    local vowelPosition60=0\n    local vowelPosition61=0\n\
    \    local vowelPosition62=0\n    local vowelPosition63=0\n    local vowelPosition64=0\n\
    \    local vowelPosition65=0\n    local vowelPosition66=0\n    local vowelPosition67=0\n\
    \    local vowelPosition68=0\n    local vowelPosition69=0\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local msg3=\"\"\n    local msg4=\"\"\n    local msg5=\"\"\n    local msg6=\"\
    \"\n    local msg7=\"\"\n    local msg8=\"\"\n    local msg9=\"\"\n    local msg10=\"\
    \"\n    local msg11=\"\"\n    local msg12=\"\"\n    local msg13=\"\"\n    local\
    \ msg14=\"\"\n    local msg15=\"\"\n    local msg16=\"\"\n    local msg17=\"\"\
    \n    local msg18=\"\"\n    local msg19=\"\"\n    local msg20=\"\"\n    local\
    \ msg21=\"\"\n    local msg22=\"\"\n    local msg23=\"\"\n    local msg24=\"\"\
    \n    local msg25=\"\"\n    local msg26=\"\"\n    local msg27=\"\"\n    local\
    \ msg28=\"\"\n    local msg29=\"\"\n    local msg30=\"\"\n    local msg31=\"\"\
    \n    local msg32=\"\"\n    local msg33=\"\"\n    local msg34=\"\"\n    local\
    \ msg35=\"\"\n    local msg36=\"\"\n    local msg37=\"\"\n    local msg38=\"\"\
    \n    local msg39=\"\"\n    local msg40=\"\"\n    local msg41=\"\"\n    local\
    \ msg42=\"\"\n    local msg43=\"\"\n    local msg44=\"\"\n    local msg45=\"\"\
    \n    local msg46=\"\"\n    local msg47=\"\"\n    local msg48=\"\"\n    local\
    \ msg49=\"\"\n    local msg50=\"\"\n    local msg51=\"\"\n    local msg52=\"\"\
    \n    local msg53=\"\"\n    local msg54=\"\"\n    local msg55=\"\"\n    local\
    \ msg56=\"\"\n    local msg57=\"\"\n    local msg58=\"\"\n    local msg59=\"\"\
    \n    local msg60=\"\"\n    local msg61=\"\"\n    local msg62=\"\"\n    local\
    \ msg63=\"\"\n    local msg64=\"\"\n    local msg65=\"\"\n    local msg66=\"\"\
    \n    local msg67=\"\"\n    local msg68=\"\"\n    local msg69=\"\"\n    local\
    \ msg70=\"\"\n    local msg71=\"\"\n    local msg72=\"\"\n    local msg73=\"\"\
    \n    local msg74=\"\"\n    local msg75=\"\"\n    local msg76=\"\"\n    local\
    \ msg77=\"\"\n    local msg78=\"\"\n    local msg79=\"\"\n    local msg80=\"\"\
    \n    local msg81=\"\"\n    local msg82=\"\"\n    local msg83=\"\"\n    local\
    \ msg84=\"\"\n    local msg85=\"\"\n    local \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=\"\
    \"\n    local letter_positions=\"\"\n    local new_message=\"\"\n    local vowel_position\n\
    \    local letter_position\n    local letter\n    local vowel\n    local position\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local result=\"\
    \"\n    local count=0\n    local lastVowel=\"\"\n    local lastLetter=\"\"\n \
    \   local lastVowelIndex=0\n    local lastLetterIndex=0\n    local vowelIndex=0\n\
    \    local letterIndex=0\n    local currentVowel=\"\"\n    local currentLetter=\"\
    \"\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelCount=0\n\
    \    local currentLetterCount=0\n    local currentVowelIndex2=0\n    local currentLetterIndex2=0\n\
    \    local currentVowelCount2=0\n    local currentLetterCount2=0\n    local currentVowelIndex3=0\n\
    \    local currentLetterIndex3=0\n    local currentVowelCount3=0\n    local currentLetterCount3=0\n\
    \    local currentVowelIndex4=0\n    local currentLetterIndex4=0\n    local currentVowelCount4=0\n\
    \    local currentLetterCount4=0\n    local currentVowelIndex5=0\n    local currentLetterIndex5=0\n\
    \    local currentVowelCount5=0\n    local currentLetterCount5=0\n    local currentVowelIndex6=0\n\
    \    local currentLetterIndex6=0\n    local currentVowelCount6=0\n    local currentLetterCount6=0\n\
    \    local currentVowelIndex7=0\n    local currentLetterIndex7=0\n    local currentVowelCount7=0\n\
    \    local currentLetterCount7=0\n    local currentVowelIndex8=0\n    local currentLetterIndex8=0\n\
    \    local currentVowelCount8=0\n    local currentLetterCount8=0\n    local currentVowelIndex9=0\n\
    \    local currentLetterIndex9=0\n    local currentVowelCount9=0\n    local currentLetterCount9=0\n\
    \    local currentVowelIndex10=0\n    local currentLetterIndex10=0\n    local\
    \ currentVowelCount10=0\n    local currentLetterCount10=0\n    local currentVowelIndex11=0\n\
    \    local currentLetterIndex11=0\n    local currentVowelCount11=0\n    local\
    \ currentLetterCount11=0\n    local currentVowelIndex12=0\n    local currentLetterIndex12=0\n\
    \    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        if [[ \"${vowels}\" =~ \"${letter}\" ]]; then\n\
    \            letter=${letter:0:1}\n        fi\n        output+=\"${letter}\"\n\
    \    done\n    echo \"${output}\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowelCount=0\n  local vowelPosition=0\n  local\
    \ letterPosition=0\n  local letterCount=0\n  local letterPosition=0\n  local letter\n\
    \  local letter2\n  local letter3\n  local letter4\n  local letter5\n  local letter6\n\
    \  local letter7\n  local letter8\n  local letter9\n  local letter10\n  local\
    \ letter11\n  local letter12\n  local letter13\n  local letter14\n  local letter15\n\
    \  local letter16\n  local letter17\n  local letter18\n  local letter19\n  local\
    \ letter20\n  local letter21\n  local letter22\n  local letter23\n  local letter24\n\
    \  local letter25\n  local letter26\n  local letter27\n  local letter28\n  local\
    \ letter29\n  local letter30\n  local letter31\n  local letter32\n  local letter33\n\
    \  local letter34\n  local letter35\n  local letter36\n  local letter37\n  local\
    \ letter38\n  local letter39\n  local letter40\n  local letter41\n  local letter42\n\
    \  local letter43\n  local letter44\n  local letter45\n  local letter46\n  local\
    \ letter47\n  local letter48\n  local letter49\n  local letter50\n  local letter51\n\
    \  local letter52\n  local letter53\n  local letter54\n  local letter55\n  local\
    \ letter56\n  local letter57\n  local letter58\n  local letter59\n  local letter60\n\
    \  local letter61\n  local letter62\n  local letter63\n  local letter64\n  local\
    \ letter65\n  local letter66\n  local letter67\n  local letter68\n  local letter69\n\
    \  local letter70\n  local letter71\n  local letter72\n  local letter73\n  local\
    \ letter74\n  local letter75\n  local letter76\n  local letter77\n  local letter78\n\
    \  local letter79\n  local letter80\n  local letter81\n  local letter82\n  local\
    \ letter83\n  local letter84\n  local letter85\n  local letter86\n  local letter87\n\
    \  local letter88\n  local letter89\n  local letter90\n  local letter91\n  local\
    \ letter92\n  \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowel\n    local letter\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local nextLetter=${message:$((i+1)):1}\n   \
    \     if [[ ${vowels:0:1} == ${letter} ]]; then\n            result+=\"${letter}${nextLetter}\"\
    \n        else\n            result+=\"${letter}${vowels:0:1}${nextLetter}\"\n\
    \        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowelCount=0\n\
    \    local currentLetterCount=0\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex2=0\n    local currentLetterIndex2=0\n    local currentVowelIndex3=0\n\
    \    local currentLetterIndex3=0\n    local currentVowelIndex4=0\n    local currentLetterIndex4=0\n\
    \    local currentVowelIndex5=0\n    local currentLetterIndex5=0\n    local currentVowelIndex6=0\n\
    \    local currentLetterIndex6=0\n    local currentVowelIndex7=0\n    local currentLetterIndex7=0\n\
    \    local currentVowelIndex8=0\n    local currentLetterIndex8=0\n    local currentVowelIndex9=0\n\
    \    local currentLetterIndex9=0\n    local currentVowelIndex10=0\n    local currentLetterIndex10=0\n\
    \    local currentVowelIndex11=0\n    local currentLetterIndex11=0\n    local\
    \ currentVowelIndex12=0\n    local currentLetterIndex12=0\n    local currentVowelIndex13=0\n\
    \    local currentLetterIndex13=0\n    local currentVowelIndex14=0\n    local\
    \ currentLetterIndex14=0\n    local currentVowelIndex15=0\n    local currentLetterIndex15=0\n\
    \    local currentVowelIndex16=0\n    local currentLetterIndex16=0\n    local\
    \ currentVowelIndex17=0\n    local currentLetterIndex17=0\n    local currentVowelIndex18=0\n\
    \    local currentLetterIndex18=0\n    local currentVowelIndex19=0\n    local\
    \ currentLetterIndex19=0\n    local currentVowelIndex20=0\n    local currentLetterIndex20=0\n\
    \    local currentVowelIndex21=0\n    local currentLetterIndex21=0\n    local\
    \ currentVowelIndex22=0\n    local currentLetterIndex22=0\n    local currentVowelIndex23=0\n\
    \    local currentLetterIndex23=0\n    local currentVowel\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiou\"\n    local output=\"\"\
    \n    local count=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local currentVowel\n\
    \  local currentLetter\n  local currentLetterIndex\n  local currentLetterCount\n\
    \  local currentLetterIndex2\n  local currentLetterCount2\n  local currentLetterIndex3\n\
    \  local currentLetterCount3\n  local currentLetterIndex4\n  local currentLetterCount4\n\
    \  local currentLetterIndex5\n  local currentLetterCount5\n  local currentLetterIndex6\n\
    \  local currentLetterCount6\n  local currentLetterIndex7\n  local currentLetterCount7\n\
    \  local currentLetterIndex8\n  local currentLetterCount8\n  local currentLetterIndex9\n\
    \  local currentLetterCount9\n  local currentLetterIndex10\n  local currentLetterCount10\n\
    \  local currentLetterIndex11\n  local currentLetterCount11\n  local currentLetterIndex12\n\
    \  local currentLetterCount12\n  local currentLetterIndex13\n  local currentLetterCount13\n\
    \  local currentLetterIndex14\n  local currentLetterCount14\n  local currentLetterIndex15\n\
    \  local currentLetterCount15\n  local currentLetterIndex16\n  local currentLetterCount16\n\
    \  local currentLetterIndex17\n  local currentLetterCount17\n  local currentLetterIndex18\n\
    \  local currentLetterCount18\n  local currentLetterIndex19\n  local currentLetterCount19\n\
    \  local currentLetterIndex20\n  local currentLetterCount20\n  local currentLetterIndex21\n\
    \  local currentLetterCount21\n  local currentLetterIndex22\n  local currentLetterCount22\n\
    \  local currentLetterIndex23\n  local currentLetterCount23\n  local currentLetterIndex24\n\
    \  local currentLetterCount24\n  local currentLetterIndex25\n  local currentLetterCount25\n\
    \  local currentLetterIndex26\n  local currentLetterCount26\n  local currentLetterIndex27\n\
    \  local currentLetterCount27\n  local currentLetterIndex28\n  local currentLetterCount28\n\
    \  local currentLetterIndex29\n  local currentLetterCount29\n  local currentLetterIndex30\n\
    \  local currentLetterCount30\n  local currentLetterIndex31\n  local currentLetterCount31\n\
    \  local currentLetterIndex32\n  local currentLetterCount32\n  local currentLetterIndex33\n\
    \  local currentLetterCount33\n  local currentLetterIndex34\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowel\n    local vowelCount\n    local vowelIndex\n\
    \    local vowelIndex2\n    local vowelIndex3\n    local vowelIndex4\n    local\
    \ vowelIndex5\n    local vowelIndex6\n    local vowelIndex7\n    local vowelIndex8\n\
    \    local vowelIndex9\n    local vowelIndex10\n    local vowelIndex11\n    local\
    \ vowelIndex12\n    local vowelIndex13\n    local vowelIndex14\n    local vowelIndex15\n\
    \    local vowelIndex16\n    local vowelIndex17\n    local vowelIndex18\n    local\
    \ vowelIndex19\n    local vowelIndex20\n    local vowelIndex21\n    local vowelIndex22\n\
    \    local vowelIndex23\n    local vowelIndex24\n    local vowelIndex25\n    local\
    \ vowelIndex26\n    local vowelIndex27\n    local vowelIndex28\n    local vowelIndex29\n\
    \    local vowelIndex30\n    local vowelIndex31\n    local vowelIndex32\n    local\
    \ vowelIndex33\n    local vowelIndex34\n    local vowelIndex35\n    local vowelIndex36\n\
    \    local vowelIndex37\n    local vowelIndex38\n    local vowelIndex39\n    local\
    \ vowelIndex40\n    local vowelIndex41\n    local vowelIndex42\n    local vowelIndex43\n\
    \    local vowelIndex44\n    local vowelIndex45\n    local vowelIndex46\n    local\
    \ vowelIndex47\n    local vowelIndex48\n    local vowelIndex49\n    local vowelIndex50\n\
    \    local vowelIndex51\n    local vowelIndex52\n    local vowelIndex53\n    local\
    \ vowelIndex54\n    local vowelIndex55\n    local vowelIndex56\n    local vowelIndex57\n\
    \    local vowelIndex58\n    local vowelIndex59\n    local vowelIndex60\n    local\
    \ vowelIndex61\n    local vowelIndex62\n    local vowelIndex63\n    local vowelIndex64\n\
    \    local vowelIndex65\n    local vowelIndex66\n    local vowelIndex67\n    local\
    \ vowelIndex68\n    local vowelIndex69\n    local vowelIndex70\n    local vowelIndex71\n\
    \    local vowelIndex72\n    local vowelIndex73\n    local vowelIndex74\n    local\
    \ vowelIndex75\n    local vowelIndex76\n    local vowelIndex77\n    local vowelIndex78\n\
    \    local vowelIndex79\n    local vowelIndex80\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letter2=\"\
    \"\n    local letter3=\"\"\n    local letter4=\"\"\n    local letter5=\"\"\n \
    \   local letter6=\"\"\n    local letter7=\"\"\n    local letter8=\"\"\n    local\
    \ letter9=\"\"\n    local letter10=\"\"\n    local letter11=\"\"\n    local letter12=\"\
    \"\n    local letter13=\"\"\n    local letter14=\"\"\n    local letter15=\"\"\n\
    \    local letter16=\"\"\n    local letter17=\"\"\n    local letter18=\"\"\n \
    \   local letter19=\"\"\n    local letter20=\"\"\n    local letter21=\"\"\n  \
    \  local letter22=\"\"\n    local letter23=\"\"\n    local letter24=\"\"\n   \
    \ local letter25=\"\"\n    local letter26=\"\"\n    local letter27=\"\"\n    local\
    \ letter28=\"\"\n    local letter29=\"\"\n    local letter30=\"\"\n    local letter31=\"\
    \"\n    local letter32=\"\"\n    local letter33=\"\"\n    local letter34=\"\"\n\
    \    local letter35=\"\"\n    local letter36=\"\"\n    local letter37=\"\"\n \
    \   local letter38=\"\"\n    local letter39=\"\"\n    local letter40=\"\"\n  \
    \  local letter41=\"\"\n    local letter42=\"\"\n    local letter43=\"\"\n   \
    \ local letter44=\"\"\n    local letter45=\"\"\n    local letter46=\"\"\n    local\
    \ letter47=\"\"\n    local letter48=\"\"\n    local letter49=\"\"\n    local letter50=\"\
    \"\n    local letter51=\"\"\n    local letter52=\"\"\n    local letter53=\"\"\n\
    \    local letter54=\"\"\n    local letter55=\"\"\n    local letter56=\"\"\n \
    \   local letter57=\"\"\n    local letter58=\"\"\n    local letter59=\"\"\n  \
    \  local letter60=\"\"\n    local letter61=\"\"\n    local letter62=\"\"\n   \
    \ local letter63=\"\"\n    local letter64=\"\"\n    local letter65=\"\"\n    local\
    \ letter66=\"\"\n    local letter67=\"\"\n    local letter68=\"\"\n    local letter69=\"\
    \"\n    local letter70=\"\"\n    local letter71=\"\"\n    local letter72=\"\"\n\
    \    local letter73=\"\"\n    local letter74=\"\"\n    local letter75=\"\"\n \
    \   local letter76=\"\"\n    local letter77=\"\"\n    local letter78=\"\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowel\n    local vowelIndex\n    local letterIndex\n\
    \    local letter\n    local letterCount\n    local letterCount2\n    local letter2\n\
    \    local letter3\n    local letter4\n    local letter5\n    local letter6\n\
    \    local letter7\n    local letter8\n    local letter9\n    local letter10\n\
    \    local letter11\n    local letter12\n    local letter13\n    local letter14\n\
    \    local letter15\n    local letter16\n    local letter17\n    local letter18\n\
    \    local letter19\n    local letter20\n    local letter21\n    local letter22\n\
    \    local letter23\n    local letter24\n    local letter25\n    local letter26\n\
    \    local letter27\n    local letter28\n    local letter29\n    local letter30\n\
    \    local letter31\n    local letter32\n    local letter33\n    local letter34\n\
    \    local letter35\n    local letter36\n    local letter37\n    local letter38\n\
    \    local letter39\n    local letter40\n    local letter41\n    local letter42\n\
    \    local letter43\n    local letter44\n    local letter45\n    local letter46\n\
    \    local letter47\n    local letter48\n    local letter49\n    local letter50\n\
    \    local letter51\n    local letter52\n    local letter53\n    local letter54\n\
    \    local letter55\n    local letter56\n    local letter57\n    local letter58\n\
    \    local letter59\n    local letter60\n    local letter61\n    local letter62\n\
    \    local letter63\n    local letter64\n    local letter65\n    local letter66\n\
    \    local letter67\n    local letter68\n    local letter69\n    local letter70\n\
    \    local letter71\n    local letter72\n    local letter73\n    local letter74\n\
    \    local letter75\n    local letter76\n    local letter77\n    local letter78\n\
    \    local letter79\n    local letter80\n    local letter81\n    local letter82\n\
    \    local letter83\n    local letter84\n    local letter85\n    local letter86\n\
    \    local letter87\n    local letter88\n    local letter89\n    local letter90\n\
    \    local letter91\n    local letter92\n    local letter93\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local i\n    local j\n    local k\n    local vowel\n\
    \    local vowel2\n    local letter\n    local letter2\n    local letter3\n  \
    \  local letter4\n    local letter5\n    local letter6\n    local letter7\n  \
    \  local letter8\n    local letter9\n    local letter10\n    local letter11\n\
    \    local letter12\n    local letter13\n    local letter14\n    local letter15\n\
    \    local letter16\n    local letter17\n    local letter18\n    local letter19\n\
    \    local letter20\n    local letter21\n    local letter22\n    local letter23\n\
    \    local letter24\n    local letter25\n    local letter26\n    local letter27\n\
    \    local letter28\n    local letter29\n    local letter30\n    local letter31\n\
    \    local letter32\n    local letter33\n    local letter34\n    local letter35\n\
    \    local letter36\n    local letter37\n    local letter38\n    local letter39\n\
    \    local letter40\n    local letter41\n    local letter42\n    local letter43\n\
    \    local letter44\n    local letter45\n    local letter46\n    local letter47\n\
    \    local letter48\n    local letter49\n    local letter50\n    local letter51\n\
    \    local letter52\n    local letter53\n    local letter54\n    local letter55\n\
    \    local letter56\n    local letter57\n    local letter58\n    local letter59\n\
    \    local letter60\n    local letter61\n    local letter62\n    local letter63\n\
    \    local letter64\n    local letter65\n    local letter66\n    local letter67\n\
    \    local letter68\n    local letter69\n    local letter70\n    local letter71\n\
    \    local letter72\n    local letter73\n    local letter74\n    local letter75\n\
    \    local letter76\n    local letter77\n    local letter78\n    local letter79\n\
    \    local letter80\n    local letter81\n    local letter82\n    local letter83\n\
    \    local letter84\n    local letter85\n    local letter86\n    local letter87\n\
    \    local letter88\n    local letter89\n    local letter90\n    local letter91\n\
    \    local letter92\n    local letter93\n    local letter94\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local count=0\n  local vowel\n  local letter\n  local\
    \ letter2\n  local letter3\n  local letter4\n  local letter5\n  local letter6\n\
    \  local letter7\n  local letter8\n  local letter9\n  local letter10\n  local\
    \ letter11\n  local letter12\n  local letter13\n  local letter14\n  local letter15\n\
    \  local letter16\n  local letter17\n  local letter18\n  local letter19\n  local\
    \ letter20\n  local letter21\n  local letter22\n  local letter23\n  local letter24\n\
    \  local letter25\n  local letter26\n  local letter27\n  local letter28\n  local\
    \ letter29\n  local letter30\n  local letter31\n  local letter32\n  local letter33\n\
    \  local letter34\n  local letter35\n  local letter36\n  local letter37\n  local\
    \ letter38\n  local letter39\n  local letter40\n  local letter41\n  local letter42\n\
    \  local letter43\n  local letter44\n  local letter45\n  local letter46\n  local\
    \ letter47\n  local letter48\n  local letter49\n  local letter50\n  local letter51\n\
    \  local letter52\n  local letter53\n  local letter54\n  local letter55\n  local\
    \ letter56\n  local letter57\n  local letter58\n  local letter59\n  local letter60\n\
    \  local letter61\n  local letter62\n  local letter63\n  local letter64\n  local\
    \ letter65\n  local letter66\n  local letter67\n  local letter68\n  local letter69\n\
    \  local letter70\n  local letter71\n  local letter72\n  local letter73\n  local\
    \ letter74\n  local letter75\n  local letter76\n  local letter77\n  local letter78\n\
    \  local letter79\n  local letter80\n  local letter81\n  local letter82\n  local\
    \ letter83\n  local letter84\n  local letter85\n  local letter86\n  local letter87\n\
    \  local letter88\n  local letter89\n  local letter90\n  local letter91\n  local\
    \ letter92\n  local letter93\n  local letter94\n  local letter95\n  local letter96\n\
    \  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local encodedMessage=\"\"\n    local vowelCount=0\n    local vowelPosition=0\n\
    \    local encodedPosition=0\n    local encodedLetter=\"\"\n    local encodedLetterCount=0\n\
    \    local encodedLetterPosition=0\n    local encodedLetterIndex=0\n    local\
    \ encodedLetterIndex2=0\n    local encodedLetterIndex3=0\n    local encodedLetterIndex4=0\n\
    \    local encodedLetterIndex5=0\n    local encodedLetterIndex6=0\n    local encodedLetterIndex7=0\n\
    \    local encodedLetterIndex8=0\n    local encodedLetterIndex9=0\n    local encodedLetterIndex10=0\n\
    \    local encodedLetterIndex11=0\n    local encodedLetterIndex12=0\n    local\
    \ encodedLetterIndex13=0\n    local encodedLetterIndex14=0\n    local encodedLetterIndex15=0\n\
    \    local encodedLetterIndex16=0\n    local encodedLetterIndex17=0\n    local\
    \ encodedLetterIndex18=0\n    local encodedLetterIndex19=0\n    local encodedLetterIndex20=0\n\
    \    local encodedLetterIndex21=0\n    local encodedLetterIndex22=0\n    local\
    \ encodedLetterIndex23=0\n    local encodedLetterIndex24=0\n    local encodedLetterIndex25=0\n\
    \    local encodedLetterIndex26=0\n    local encodedLetterIndex27=0\n    local\
    \ encodedLetterIndex28=0\n    local encodedLetterIndex29=0\n    local encodedLetterIndex30=0\n\
    \    local encodedLetterIndex31=0\n    local encodedLetterIndex32=0\n    local\
    \ encodedLetterIndex33=0\n    local encodedLetterIndex34=0\n    local encodedLetterIndex35=0\n\
    \    local encodedLetterIndex36=0\n    local encodedLetterIndex37=0\n    local\
    \ encodedLetterIndex38=0\n    local encodedLetterIndex39=0\n    local encodedLetterIndex40=0\n\
    \    local encodedLetterIndex41=0\n    local encodedLetterIndex42=0\n    local\
    \ encodedLetterIndex43=0\n    local encodedLetterIndex44=0\n    local encodedLetterIndex45=0\n\
    \    local encodedLetterIndex46=0\n    local encodedLetterIndex47=0\n    local\
    \ encodedLetterIndex48=0\n    local encodedLetterIndex49=0\n    local encodedLetterIndex50=0\n\
    \    local encodedLetterIndex51=0\n    local encodedLetterIndex52=0\n    local\
    \ encodedLetterIndex53=0\n    local encodedLetterIndex54=0\n    local encodedLetterIndex55=0\n\
    \    local encodedLetterIndex56=0\n    local encodedLetter\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local vowel_positions=$(echo $message | tr ' ' '\\n' | grep -o\
    \ \"[aeiouy]\"| sort -u)\n    local letter_positions=$(echo $message | tr ' '\
    \ '\\n' | grep -o \"[${letters}]\"| sort -u)\n    local positions=$(echo $message\
    \ | tr ' ' '\\n' | grep -o \"[${letters}]\"| sort -u)\n    local new_message=\"\
    \"\n    for (( i=0; i<${#message}; i++ )); do\n        local letter=${positions[i]}\n\
    \        local vowel=${vowel_positions[i]}\n        local position=${letter_positions[i]}\n\
    \        local new_letter=${letters[position]}\n        local new_vowel=${vowels[vowel]}\n\
    \        new_message+=\"${new_letter}${new_vowel}\"\n    done\n    echo $new_message\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local vowelsCount=$(echo $vowels\
    \ | wc -w)\n  local lettersCount=$(echo $letters | wc -w)\n  local encodedMessage=\"\
    \"\n  local letter\n  local vowel\n  local vowelIndex\n  local letterIndex\n \
    \ local encodedLetter\n  local encodedVowel\n  local encodedLetterIndex\n  local\
    \ encodedVowelIndex\n  local encodedVowelIndex2\n  local encodedVowelIndex3\n\
    \  local encodedVowelIndex4\n  local encodedVowelIndex5\n  local encodedVowelIndex6\n\
    \  local encodedVowelIndex7\n  local encodedVowelIndex8\n  local encodedVowelIndex9\n\
    \  local encodedVowelIndex10\n  local encodedVowelIndex11\n  local encodedVowelIndex12\n\
    \  local encodedVowelIndex13\n  local encodedVowelIndex14\n  local encodedVowelIndex15\n\
    \  local encodedVowelIndex16\n  local encodedVowelIndex17\n  local encodedVowelIndex18\n\
    \  local encodedVowelIndex19\n  local encodedVowelIndex20\n  local encodedVowelIndex21\n\
    \  local encodedVowelIndex22\n  local encodedVowelIndex23\n  local encodedVowelIndex24\n\
    \  local encodedVowelIndex25\n  local encodedVowelIndex26\n  local encodedVowelIndex27\n\
    \  local encodedVowelIndex28\n  local encodedVowelIndex29\n  local encodedVowelIndex30\n\
    \  local encodedVowelIndex31\n  local encodedVowelIndex32\n  local encodedVowelIndex33\n\
    \  local encodedVowelIndex34\n  local encodedVowelIndex35\n  local encodedVowelIndex36\n\
    \  local encodedVowelIndex37\n  local encodedVowelIndex38\n  local encodedVowelIndex39\n\
    \  local encodedVowelIndex40\n  local encodedVowelIndex41\n  local encodedVowelIndex42\n\
    \  local encodedVowelIndex43\n  local encodedVowelIndex44\n  local encodedVowelIndex45\n\
    \  local encodedVow\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowel_count=0\n    local vowel_index=0\n  \
    \  local letter_index=0\n    local letter\n    local vowel\n    local vowel_letter\n\
    \    local vowel_letter_index\n    local vowel_letter_count\n    local vowel_letter_count2\n\
    \    local vowel_letter_count3\n    local vowel_letter_count4\n    local vowel_letter_count5\n\
    \    local vowel_letter_count6\n    local vowel_letter_count7\n    local vowel_letter_count8\n\
    \    local vowel_letter_count9\n    local vowel_letter_count10\n    local vowel_letter_count11\n\
    \    local vowel_letter_count12\n    local vowel_letter_count13\n    local vowel_letter_count14\n\
    \    local vowel_letter_count15\n    local vowel_letter_count16\n    local vowel_letter_count17\n\
    \    local vowel_letter_count18\n    local vowel_letter_count19\n    local vowel_letter_count20\n\
    \    local vowel_letter_count21\n    local vowel_letter_count22\n    local vowel_letter_count23\n\
    \    local vowel_letter_count24\n    local vowel_letter_count25\n    local vowel_letter_count26\n\
    \    local vowel_letter_count27\n    local vowel_letter_count28\n    local vowel_letter_count29\n\
    \    local vowel_letter_count30\n    local vowel_letter_count31\n    local vowel_letter_count32\n\
    \    local vowel_letter_count33\n    local vowel_letter_count34\n    local vowel_letter_count35\n\
    \    local vowel_letter_count36\n    local vowel_letter_count37\n    local vowel_letter_count38\n\
    \    local vowel_letter_count39\n    local vowel_letter_count40\n    local vowel_letter_count41\n\
    \    local vowel_letter_count42\n    local vowel_letter_count43\n    local vowel_letter_count44\n\
    \    local vowel_letter_count45\n    local vowel_letter_count46\n    local vowel_letter_count47\n\
    \    local vowel_letter_count48\n    local vowel_letter_count49\n    local vowel_letter_count50\n\
    \    local vowel_letter_count51\n    local vowel_letter_count52\n    local vowel_letter_count53\n\
    \    local vowel_letter_count54\n    local vowel_letter_count55\n    local vowel_letter_count56\n\
    \    local vowel_\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local vowelsCount=$(echo $vowels | wc -w)\n    local messageLength=$(echo\
    \ $message | wc -w)\n    local encodedMessage=\"\"\n    local encodedMessageLength=0\n\
    \    local encodedVowelsCount=0\n    local encodedVowelsCount2=0\n    local encodedVowelsCount3=0\n\
    \    local encodedVowelsCount4=0\n    local encodedVowelsCount5=0\n    local encodedVowelsCount6=0\n\
    \    local encodedVowelsCount7=0\n    local encodedVowelsCount8=0\n    local encodedVowelsCount9=0\n\
    \    local encodedVowelsCount10=0\n    local encodedVowelsCount11=0\n    local\
    \ encodedVowelsCount12=0\n    local encodedVowelsCount13=0\n    local encodedVowelsCount14=0\n\
    \    local encodedVowelsCount15=0\n    local encodedVowelsCount16=0\n    local\
    \ encodedVowelsCount17=0\n    local encodedVowelsCount18=0\n    local encodedVowelsCount19=0\n\
    \    local encodedVowelsCount20=0\n    local encodedVowelsCount21=0\n    local\
    \ encodedVowelsCount22=0\n    local encodedVowelsCount23=0\n    local encodedVowelsCount24=0\n\
    \    local encodedVowelsCount25=0\n    local encodedVowelsCount26=0\n    local\
    \ encodedVowelsCount27=0\n    local encodedVowelsCount28=0\n    local encodedVowelsCount29=0\n\
    \    local encodedVowelsCount30=0\n    local encodedVowelsCount31=0\n    local\
    \ encodedVowelsCount32=0\n    local encodedVowelsCount33=0\n    local encodedVowelsCount34=0\n\
    \    local encodedVowelsCount35=0\n    local encodedVowelsCount36=0\n    local\
    \ encodedVowelsCount37=0\n    local encodedVowelsCount38=0\n    local encodedVowelsCount39=0\n\
    \    local encodedVowelsCount40=0\n    local encodedVowelsCount41=0\n    local\
    \ encodedVow\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowel\n    local letter\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local vowelPosition=0\n\
    \  local currentLetter=\"\"\n  local currentVowel=\"\"\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n  local currentVowelPosition=0\n\
    \  local currentVowelCount=0\n  local currentVowelIndex=0\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n\
    \    local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6vy9e4_j.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmp6vy9e4_j.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local result=\"\"\n  local\
    \ vowel_count=0\n  local letter_count=0\n  local vowel_position=0\n  local letter_position=0\n\
    \  local vowel_letter=\"\"\n  local letter_letter=\"\"\n  local vowel_position_string=\"\
    \"\n  local letter_position_string=\"\"\n  local vowel_letter_string=\"\"\n  local\
    \ letter_letter_string=\"\"\n  local vowel_position_string2=\"\"\n  local letter_position_string2=\"\
    \"\n  local vowel_letter_string2=\"\"\n  local letter_letter_string2=\"\"\n  local\
    \ vowel_position_string3=\"\"\n  local letter_position_string3=\"\"\n  local vowel_letter_string3=\"\
    \"\n  local letter_letter_string3=\"\"\n  local vowel_position_string4=\"\"\n\
    \  local letter_position_string4=\"\"\n  local vowel_letter_string4=\"\"\n  local\
    \ letter_letter_string4=\"\"\n  local vowel_position_string5=\"\"\n  local letter_position_string5=\"\
    \"\n  local vowel_letter_string5=\"\"\n  local letter_letter_string5=\"\"\n  local\
    \ vowel_position_string6=\"\"\n  local letter_position_string6=\"\"\n  local vowel_letter_string6=\"\
    \"\n  local letter_letter_string6=\"\"\n  local vowel_position_string7=\"\"\n\
    \  local letter_position_string7=\"\"\n  local vowel_letter_string7=\"\"\n  local\
    \ letter_letter_string7=\"\"\n  local vowel_position_string8=\"\"\n  local letter_position_string8=\"\
    \"\n  local vowel_letter_string8=\"\"\n  local letter_letter_string8=\"\"\n  local\
    \ vowel_position_string9=\"\"\n  local letter_position_string9=\"\"\n  local vowel_letter_string9=\"\
    \"\n  local letter_letter_string9=\"\"\n  local vowel_position_string10=\"\"\n\
    \  local letter_position_string10=\"\"\n  local vowel_letter_string10=\"\"\n \
    \ local letter_letter_string10=\"\"\n  local vowel_position_string11=\"\"\n  local\
    \ letter_position_string11=\"\"\n  local vowel_letter_string11=\"\"\n  local letter_letter_string11=\"\
    \"\n  local vowel_position_string12=\"\"\n  local letter_position_string12=\"\"\
    \n  local vowel_letter_string12=\"\"\n  local letter_letter_string12=\"\"\n  local\
    \ vowel_position_string13=\"\"\n  local letter_position_string13=\"\"\n  local\
    \ vowel_letter_string13=\"\"\n  local letter_letter_string\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local vowels_2=\"AEIOUaeiouAEIOUaeiou\"\n  local vowels_3=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels_4=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n  local vowels_5=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n  local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels_7=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAE\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg52oqm1j.sh: line 41: unexpected EOF while looking for matching
    `"''

    /tmp/tmpg52oqm1j.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n\
    \  local B\n  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n\
    \  local I\n  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n\
    \  local P\n  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n\
    \  local W\n  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n\
    \  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n\
    \  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n\
    \  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i\
    \ o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x\
    \ y z\"\n    local result=\"\"\n    local vowelsCount=0\n    local lettersCount=0\n\
    \    local vowelIndex=0\n    local letterIndex=0\n    local vowelChar=\"\"\n \
    \   local letterChar=\"\"\n    local vowelIndex2=0\n    local letterIndex2=0\n\
    \    local vowelChar2=\"\"\n    local letterChar2=\"\"\n    local vowelIndex3=0\n\
    \    local letterIndex3=0\n    local vowelChar3=\"\"\n    local letterChar3=\"\
    \"\n    local vowelIndex4=0\n    local letterIndex4=0\n    local vowelChar4=\"\
    \"\n    local letterChar4=\"\"\n    local vowelIndex5=0\n    local letterIndex5=0\n\
    \    local vowelChar5=\"\"\n    local letterChar5=\"\"\n    local vowelIndex6=0\n\
    \    local letterIndex6=0\n    local vowelChar6=\"\"\n    local letterChar6=\"\
    \"\n    local vowelIndex7=0\n    local letterIndex7=0\n    local vowelChar7=\"\
    \"\n    local letterChar7=\"\"\n    local vowelIndex8=0\n    local letterIndex8=0\n\
    \    local vowelChar8=\"\"\n    local letterChar8=\"\"\n    local vowelIndex9=0\n\
    \    local letterIndex9=0\n    local vowelChar9=\"\"\n    local letterChar9=\"\
    \"\n    local vowelIndex10=0\n    local letterIndex10=0\n    local vowelChar10=\"\
    \"\n    local letterChar10=\"\"\n    local vowelIndex11=0\n    local letterIndex11=0\n\
    \    local vowelChar11=\"\"\n    local letterChar11=\"\"\n    local vowelIndex12=0\n\
    \    local letterIndex12=0\n    local vowelChar12=\"\"\n    local letterChar12=\"\
    \"\n    local vowelIndex13=0\n    local letterIndex13=0\n    local vowelChar13=\"\
    \"\n    local letterChar13=\"\"\n    local vowelIndex14=0\n    local letterIndex14=0\n\
    \    local vowelChar14=\"\"\n    local letterChar14=\"\"\n    local vowelIndex15=0\n\
    \    local letterIndex15=0\n    local vowelChar15=\"\"\n    local letterChar15=\"\
    \"\n    local vowelIndex16=0\n    local letterIndex16=0\n    local vowelChar16=\"\
    \"\n    local letterChar16=\"\"\n    \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local letters_2=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowels_2=\"AEIOU\"\n    local letters_3=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local vowels_3=\"AEIOU\"\n    local letters_4=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local vowels_4=\"AEIOU\"\n    local letters_5=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local vowels_5=\"AEIOU\"\n    local letters_6=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local vowels_6=\"AEIOU\"\n    local letters_7=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local vowels_7=\"AEIOU\"\n    local letters_8=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local vowels_8=\"AEIOU\"\n    local letters_9=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local vowels_9=\"AEIOU\"\n    local letters_10=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local vowels_10=\"AEIOU\"\n    local letters_11=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowels_11=\"AEIOU\"\n    local letters_12=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowels_12=\"AEIOU\"\n    local letters_13=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowels_13=\"AEIOU\"\n    local letters_14=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowels_14=\"AEIOU\"\n    local letters_15=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowels_15=\"AEIOU\"\n    local letters_16=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowels_16=\"AEIOU\"\n    local letters_17=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowels_17=\"AEIOU\"\n    local letters_18=\"bcdfghjklmnpqrst\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2vrio9fh.sh: line 63: unexpected EOF while looking for matching
    `"''

    /tmp/tmp2vrio9fh.sh: line 67: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local vowel_positions=$(echo \"$message\" | sed 's/\\([aeiouy]*\\\
    )\\([aeiouy]*\\)/\\2\\1/')\n  local new_message=\"\"\n  local vowel_position\n\
    \  local vowel_position_index\n  local vowel_position_count\n  for vowel_position\
    \ in $vowel_positions; do\n    vowel_position_index=$(echo $vowel_position | cut\
    \ -d '-' -f 1)\n    vowel_position_count=$(echo $vowel_position | cut -d '-' -f\
    \ 2)\n    local new_vowel_position\n    for vowel in $vowels; do\n      new_vowel_position=$(echo\
    \ $vowel | sed \"s/$vowel/$vowel_position_index/g\")\n      new_message+=\"$(echo\
    \ $new_vowel_position | sed \"s/$vowel/$vowel/g\")\"\n    done\n  done\n  echo\
    \ $new_message\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowel\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowel\n    local vowelCount\n    local vowelIndex\n\
    \    local vowelIndex2\n    local letter\n    local letterIndex\n    local letterIndex2\n\
    \    local letterIndex3\n    local letterIndex4\n    local letterIndex5\n    local\
    \ letterIndex6\n    local letterIndex7\n    local letterIndex8\n    local letterIndex9\n\
    \    local letterIndex10\n    local letterIndex11\n    local letterIndex12\n \
    \   local letterIndex13\n    local letterIndex14\n    local letterIndex15\n  \
    \  local letterIndex16\n    local letterIndex17\n    local letterIndex18\n   \
    \ local letterIndex19\n    local letterIndex20\n    local letterIndex21\n    local\
    \ letterIndex22\n    local letterIndex23\n    local letterIndex24\n    local letterIndex25\n\
    \    local letterIndex26\n    local letterIndex27\n    local letterIndex28\n \
    \   local letterIndex29\n    local letterIndex30\n    local letterIndex31\n  \
    \  local letterIndex32\n    local letterIndex33\n    local letterIndex34\n   \
    \ local letterIndex35\n    local letterIndex36\n    local letterIndex37\n    local\
    \ letterIndex38\n    local letterIndex39\n    local letterIndex40\n    local letterIndex41\n\
    \    local letterIndex42\n    local letterIndex43\n    local letterIndex44\n \
    \   local letterIndex45\n    local letterIndex46\n    local letterIndex47\n  \
    \  local letterIndex48\n    local letterIndex49\n    local letterIndex50\n   \
    \ local letterIndex51\n    local letterIndex52\n    local letterIndex53\n    local\
    \ letterIndex54\n    local letterIndex55\n    local letterIndex56\n    local letterIndex57\n\
    \    local letterIndex58\n    local letterIndex59\n    local letterIndex60\n \
    \   local letterIndex61\n    local letterIndex62\n    local letterIndex63\n  \
    \  local letterIndex64\n    local letterIndex65\n    local letterIndex66\n   \
    \ local letterIndex67\n    local letterIndex68\n    local letterIndex69\n    local\
    \ letterIndex70\n    local letterIndex71\n    local letterIndex72\n    local letterIndex73\n\
    \    local letterIndex74\n    local letterIndex75\n    local letterIndex76\n \
    \   local letterIndex77\n    local letterIndex78\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterCount\n    local currentLetterIndex2\n    local currentLetterCount2\n\
    \    local currentLetterIndex3\n    local currentLetterCount3\n    local currentLetterIndex4\n\
    \    local currentLetterCount4\n    local currentLetterIndex5\n    local currentLetterCount5\n\
    \    local currentLetterIndex6\n    local currentLetterCount6\n    local currentLetterIndex7\n\
    \    local currentLetterCount7\n    local currentLetterIndex8\n    local currentLetterCount8\n\
    \    local currentLetterIndex9\n    local currentLetterCount9\n    local currentLetterIndex10\n\
    \    local currentLetterCount10\n    local currentLetterIndex11\n    local currentLetterCount11\n\
    \    local currentLetterIndex12\n    local currentLetterCount12\n    local currentLetterIndex13\n\
    \    local currentLetterCount13\n    local currentLetterIndex14\n    local currentLetterCount14\n\
    \    local currentLetterIndex15\n    local currentLetterCount15\n    local currentLetterIndex16\n\
    \    local currentLetterCount16\n    local currentLetterIndex17\n    local currentLetterCount17\n\
    \    local currentLetterIndex18\n    local currentLetterCount18\n    local currentLetterIndex19\n\
    \    local currentLetterCount19\n    local currentLetterIndex20\n    local currentLetterCount20\n\
    \    local currentLetterIndex21\n    local currentLetterCount21\n    local currentLetterIndex22\n\
    \    local currentLetterCount22\n    local currentLetterIndex23\n    local currentLetterCount23\n\
    \    local currentLetterIndex24\n    local currentLetterCount24\n    local currentLetterIndex25\n\
    \    local currentLetterCount25\n    local currentLetterIndex26\n    local currentLetterCount26\n\
    \    local currentLetterIndex27\n    local currentLetterCount27\n    local currentLetterIndex28\n\
    \    local currentLetterCount28\n    local currentLetterIndex29\n    local currentLetterCount29\n\
    \    local currentLetterIndex30\n    local currentLetterCount30\n    local currentLetterIndex31\n\
    \    local currentLetterCount31\n    local currentLetterIndex32\n    local currentLetterCount32\n\
    \    local currentLetterIndex33\n    local currentLetterCount33\n    local currentLetterIndex34\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterCount\n    local currentLetterIndex2\n    local currentLetterCount2\n\
    \    local currentLetterIndex3\n    local currentLetterCount3\n    local currentLetterIndex4\n\
    \    local currentLetterCount4\n    local currentLetterIndex5\n    local currentLetterCount5\n\
    \    local currentLetterIndex6\n    local currentLetterCount6\n    local currentLetterIndex7\n\
    \    local currentLetterCount7\n    local currentLetterIndex8\n    local currentLetterCount8\n\
    \    local currentLetterIndex9\n    local currentLetterCount9\n    local currentLetterIndex10\n\
    \    local currentLetterCount10\n    local currentLetterIndex11\n    local currentLetterCount11\n\
    \    local currentLetterIndex12\n    local currentLetterCount12\n    local currentLetterIndex13\n\
    \    local currentLetterCount13\n    local currentLetterIndex14\n    local currentLetterCount14\n\
    \    local currentLetterIndex15\n    local currentLetterCount15\n    local currentLetterIndex16\n\
    \    local currentLetterCount16\n    local currentLetterIndex17\n    local currentLetterCount17\n\
    \    local currentLetterIndex18\n    local currentLetterCount18\n    local currentLetterIndex19\n\
    \    local currentLetterCount19\n    local currentLetterIndex20\n    local currentLetterCount20\n\
    \    local currentLetterIndex21\n    local currentLetterCount21\n    local currentLetterIndex22\n\
    \    local currentLetterCount22\n    local currentLetterIndex23\n    local currentLetterCount23\n\
    \    local currentLetterIndex24\n    local currentLetterCount24\n    local currentLetterIndex25\n\
    \    local currentLetterCount25\n    local currentLetterIndex26\n    local currentLetterCount26\n\
    \    local currentLetterIndex27\n    local currentLetterCount27\n    local currentLetterIndex28\n\
    \    local currentLetterCount28\n    local currentLetterIndex29\n    local currentLetterCount29\n\
    \    local currentLetterIndex30\n    local currentLetterCount30\n    local currentLetterIndex31\n\
    \    local currentLetterCount31\n    local currentLetterIndex32\n    local currentLetterCount32\n\
    \    local currentLetterIndex33\n    local currentLetterCount33\n    local currentLetterIndex34\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local result=\"\"\n  local vowelCount=0\n  local letterCount=0\n  local\
    \ letterIndex=0\n  local vowelIndex=0\n  local letter\n  local vowel\n  \n  for\
    \ letter in ${message}; do\n    letterIndex=$((${letterIndex}+1))\n    if [[ ${letter}\
    \ == ${letters[$letterIndex]} ]]; then\n      letterCount=$((${letterCount}+1))\n\
    \    fi\n  done\n  \n  for vowel in ${vowels}; do\n    vowelIndex=$((${vowelIndex}+1))\n\
    \    if [[ ${vowel} == ${vowels[$vowelIndex]} ]]; then\n      vowelCount=$((${vowelCount}+1))\n\
    \    fi\n  done\n  \n  for letter in ${message}; do\n    letterIndex=$((${letterIndex}+1))\n\
    \    if [[ ${letter} == ${letters[$letterIndex]} ]]; then\n      letterCount=$((${letterCount}-1))\n\
    \    fi\n  done\n  \n  for vowel in ${vowels}; do\n    vowelIndex=$((${vowelIndex}+1))\n\
    \    if [[ ${vowel} == ${vowels[$vowelIndex]} ]]; then\n      vowelCount=$((${vowelCount}-1))\n\
    \    fi\n  done\n  \n  if [[ ${letterCount} -gt 0 ]]; then\n    for letter in\
    \ ${letters}; do\n      if [[ ${letterCount} -gt 0 ]]; then\n        if [[ ${letterCount}\
    \ -gt ${letterIndex} ]]; then\n          result=\"${result}${letter}\"\n     \
    \   else\n          result=\"${result}${letters[$((${letterIndex}+1))]}\"\n  \
    \      fi\n      fi\n    done\n  fi\n  \n  if [[ ${vowelCount} -gt 0 ]]; then\n\
    \    for vowel in ${vowels}; do\n      if [[ ${vowelCount} -gt 0 ]]; then\n  \
    \      if [[ ${vowelCount} -gt ${vowelIndex} ]]; then\n          result=\"${result}${vowel}\"\
    \n        else\n          result=\"${result}${vowels[$((${vowelIndex}+1))]}\"\n\
    \        fi\n      fi\n    done\n  fi\n  \n  echo \"${result}\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local msg2=\"\"\n  local\
    \ msg3=\"\"\n  local msg4=\"\"\n  local msg5=\"\"\n  local msg6=\"\"\n  local\
    \ msg7=\"\"\n  local msg8=\"\"\n  local msg9=\"\"\n  local msg10=\"\"\n  local\
    \ msg11=\"\"\n  local msg12=\"\"\n  local msg13=\"\"\n  local msg14=\"\"\n  local\
    \ msg15=\"\"\n  local msg16=\"\"\n  local msg17=\"\"\n  local msg18=\"\"\n  local\
    \ msg19=\"\"\n  local msg20=\"\"\n  local msg21=\"\"\n  local msg22=\"\"\n  local\
    \ msg23=\"\"\n  local msg24=\"\"\n  local msg25=\"\"\n  local msg26=\"\"\n  local\
    \ msg27=\"\"\n  local msg28=\"\"\n  local msg29=\"\"\n  local msg30=\"\"\n  local\
    \ msg31=\"\"\n  local msg32=\"\"\n  local msg33=\"\"\n  local msg34=\"\"\n  local\
    \ msg35=\"\"\n  local msg36=\"\"\n  local msg37=\"\"\n  local msg38=\"\"\n  local\
    \ msg39=\"\"\n  local msg40=\"\"\n  local msg41=\"\"\n  local msg42=\"\"\n  local\
    \ msg43=\"\"\n  local msg44=\"\"\n  local msg45=\"\"\n  local msg46=\"\"\n  local\
    \ msg47=\"\"\n  local msg48=\"\"\n  local msg49=\"\"\n  local msg50=\"\"\n  local\
    \ msg51=\"\"\n  local msg52=\"\"\n  local msg53=\"\"\n  local msg54=\"\"\n  local\
    \ msg55=\"\"\n  local msg56=\"\"\n  local msg57=\"\"\n  local msg58=\"\"\n  local\
    \ msg59=\"\"\n  local msg60=\"\"\n  local msg61=\"\"\n  local msg62=\"\"\n  local\
    \ msg63=\"\"\n  local msg64=\"\"\n  local msg65=\"\"\n  local msg66=\"\"\n  local\
    \ msg67=\"\"\n  local msg68=\"\"\n  local msg69=\"\"\n  local msg70=\"\"\n  local\
    \ msg71=\"\"\n  local msg72=\"\"\n  local msg73=\"\"\n  local msg74=\"\"\n  local\
    \ msg75=\"\"\n  local msg76=\"\"\n  local msg77=\"\"\n  local msg78=\"\"\n  local\
    \ msg79=\"\"\n  local msg80=\"\"\n  local msg81=\"\"\n  local msg82=\"\"\n  local\
    \ msg83=\"\"\n  local msg84=\"\"\n  local msg85=\"\"\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local alphabet=\"a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z\"\n    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n\
    \    local vowelPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterIndex=0\n    local letterPosition=0\n    local letterIndex=0\n\
    \    local letterPosition=0\n    local letterIndex=0\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local output=\"\"\n    local vowelCount=0\n    local letterCount=0\n\
    \    local letterIndex=0\n    local vowelIndex=0\n    local letterCount2=0\n \
    \   local vowelCount2=0\n    local letterIndex2=0\n    local vowelIndex2=0\n \
    \   local letterCount3=0\n    local vowelCount3=0\n    local letterIndex3=0\n\
    \    local vowelIndex3=0\n    local letterCount4=0\n    local vowelCount4=0\n\
    \    local letterIndex4=0\n    local vowelIndex4=0\n    local letterCount5=0\n\
    \    local vowelCount5=0\n    local letterIndex5=0\n    local vowelIndex5=0\n\
    \    local letterCount6=0\n    local vowelCount6=0\n    local letterIndex6=0\n\
    \    local vowelIndex6=0\n    local letterCount7=0\n    local vowelCount7=0\n\
    \    local letterIndex7=0\n    local vowelIndex7=0\n    local letterCount8=0\n\
    \    local vowelCount8=0\n    local letterIndex8=0\n    local vowelIndex8=0\n\
    \    local letterCount9=0\n    local vowelCount9=0\n    local letterIndex9=0\n\
    \    local vowelIndex9=0\n    local letterCount10=0\n    local vowelCount10=0\n\
    \    local letterIndex10=0\n    local vowelIndex10=0\n    local letterCount11=0\n\
    \    local vowelCount11=0\n    local letterIndex11=0\n    local vowelIndex11=0\n\
    \    local letterCount12=0\n    local vowelCount12=0\n    local letterIndex12=0\n\
    \    local vowelIndex12=0\n    local letterCount13=0\n    local vowelCount13=0\n\
    \    local letterIndex13=0\n    local vowelIndex13=0\n    local letterCount14=0\n\
    \    local vowelCount14=0\n    local letterIndex14=0\n    local vowelIndex14=0\n\
    \    local letterCount15=0\n    local vowelCount15=0\n    local letterIndex15=0\n\
    \    local vowelIndex15=0\n    local letterCount16=0\n    local vowelCount16=0\n\
    \    local letterIndex16=0\n    local vowelIndex16=0\n    local letterCount17=0\n\
    \    local vowelCount17=0\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local encodedMessage=\"\"\n    local vowelIndex=0\n    local vowelIndex2=0\n\
    \    local encodedVowel=\"\"\n    local encodedVowel2=\"\"\n    local encodedVowel3=\"\
    \"\n    local encodedVowel4=\"\"\n    local encodedVowel5=\"\"\n    local encodedVowel6=\"\
    \"\n    local encodedVowel7=\"\"\n    local encodedVowel8=\"\"\n    local encodedVowel9=\"\
    \"\n    local encodedVowel10=\"\"\n    local encodedVowel11=\"\"\n    local encodedVowel12=\"\
    \"\n    local encodedVowel13=\"\"\n    local encodedVowel14=\"\"\n    local encodedVowel15=\"\
    \"\n    local encodedVowel16=\"\"\n    local encodedVowel17=\"\"\n    local encodedVowel18=\"\
    \"\n    local encodedVowel19=\"\"\n    local encodedVowel20=\"\"\n    local encodedVowel21=\"\
    \"\n    local encodedVowel22=\"\"\n    local encodedVowel23=\"\"\n    local encodedVowel24=\"\
    \"\n    local encodedVowel25=\"\"\n    local encodedVowel26=\"\"\n    local encodedVowel27=\"\
    \"\n    local encodedVowel28=\"\"\n    local encodedVowel29=\"\"\n    local encodedVowel30=\"\
    \"\n    local encodedVowel31=\"\"\n    local encodedVowel32=\"\"\n    local encodedVowel33=\"\
    \"\n    local encodedVowel34=\"\"\n    local encodedVowel35=\"\"\n    local encodedVowel36=\"\
    \"\n    local encodedVowel37=\"\"\n    local encodedVowel38=\"\"\n    local encodedVowel39=\"\
    \"\n    local encodedVowel40=\"\"\n    local encodedVowel41=\"\"\n    local encodedVowel42=\"\
    \"\n    local encodedVowel43=\"\"\n    local encodedVowel44=\"\"\n    local encodedVowel45=\"\
    \"\n    local encodedVowel46=\"\"\n    local encodedVowel47=\"\"\n    local encodedVowel48=\"\
    \"\n    local encodedVowel49=\"\"\n    local encodedVowel50=\"\"\n    local encodedVowel51=\"\
    \"\n    local encodedVowel52=\"\"\n    local encodedVowel53=\"\"\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i\
    \ o u y\"\n    local vowels_2=\"a e i o u y A\"\n    local vowels_3=\"a e i o\
    \ u y A E\"\n    local vowels_4=\"a e i o u y A E I\"\n    local vowels_5=\"a\
    \ e i o u y A E I O\"\n    local vowels_6=\"a e i o u y A E I O U\"\n    local\
    \ vowels_7=\"a e i o u y A E I O U Y\"\n    local vowels_8=\"a e i o u y A E I\
    \ O U Y A\"\n    local vowels_9=\"a e i o u y A E I O U Y A E\"\n    local vowels_10=\"\
    a e i o u y A E I O U Y A E I\"\n    local vowels_11=\"a e i o u y A E I O U Y\
    \ A E I O\"\n    local vowels_12=\"a e i o u y A E I O U Y A E I O U\"\n    local\
    \ vowels_13=\"a e i o u y A E I O U Y A E I O U Y\"\n    local vowels_14=\"a e\
    \ i o u y A E I O U Y A E I O U Y A\"\n    local vowels_15=\"a e i o u y A E I\
    \ O U Y A E I O U Y A E\"\n    local vowels_16=\"a e i o u y A E I O U Y A E I\
    \ O U Y A E I\"\n    local vowels_17=\"a e i o u y A E I O U Y A E I O U Y A E\
    \ I O\"\n    local vowels_18=\"a e i o u y A E I O U Y A E I O U Y A E I O U\"\
    \n    local vowels_19=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y\"\n  \
    \  local vowels_20=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A\"\n   \
    \ local vowels_21=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E\"\n  \
    \  local vowels_22\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiou\"\n    local output=\"\"\
    \n    local count=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local vowel_positions=$(echo\
    \ \"$message\" | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsya82gtx.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmpsya82gtx.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ count=0\n  local vowel_count=0\n  local letter_count=0\n  local vowel_letter=\"\
    \"\n  local letter_letter=\"\"\n  local vowel_letter2=\"\"\n  local letter_letter2=\"\
    \"\n  local vowel_letter3=\"\"\n  local letter_letter3=\"\"\n  local vowel_letter4=\"\
    \"\n  local letter_letter4=\"\"\n  local vowel_letter5=\"\"\n  local letter_letter5=\"\
    \"\n  local vowel_letter6=\"\"\n  local letter_letter6=\"\"\n  local vowel_letter7=\"\
    \"\n  local letter_letter7=\"\"\n  local vowel_letter8=\"\"\n  local letter_letter8=\"\
    \"\n  local vowel_letter9=\"\"\n  local letter_letter9=\"\"\n  local vowel_letter10=\"\
    \"\n  local letter_letter10=\"\"\n  local vowel_letter11=\"\"\n  local letter_letter11=\"\
    \"\n  local vowel_letter12=\"\"\n  local letter_letter12=\"\"\n  local vowel_letter13=\"\
    \"\n  local letter_letter13=\"\"\n  local vowel_letter14=\"\"\n  local letter_letter14=\"\
    \"\n  local vowel_letter15=\"\"\n  local letter_letter15=\"\"\n  local vowel_letter16=\"\
    \"\n  local letter_letter16=\"\"\n  local vowel_letter17=\"\"\n  local letter_letter17=\"\
    \"\n  local vowel_letter18=\"\"\n  local letter_letter18=\"\"\n  local vowel_letter19=\"\
    \"\n  local letter_letter19=\"\"\n  local vowel_letter20=\"\"\n  local letter_letter20=\"\
    \"\n  local vowel_letter21=\"\"\n  local letter_letter21=\"\"\n  local vowel_letter22=\"\
    \"\n  local letter_letter22=\"\"\n  local vowel_letter23=\"\"\n  local letter_letter23=\"\
    \"\n  local vowel_letter24=\"\"\n  local letter_letter24=\"\"\n  local vowel_letter25=\"\
    \"\n  local letter_letter25=\"\"\n  local vowel_letter26=\"\"\n  local letter_letter26=\"\
    \"\n  local vowel_letter27=\"\"\n  local letter_letter27=\"\"\n  local vowel_letter28=\"\
    \"\n  local letter_letter28=\"\"\n  local vowel_letter29=\"\"\n  local letter_letter29=\"\
    \"\n  local vowel_letter30=\"\"\n  local letter_letter30=\"\"\n  local vowel_letter31=\"\
    \"\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\"\
    \n    local currentVowel3=\"\"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentVowel6=\"\"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentVowel9=\"\"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentVowel12=\"\"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentVowel15=\"\"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentVowel18=\"\"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentVowel21=\"\"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentVowel24=\"\"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentVowel27=\"\"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\
    \"\n    local currentVowel30=\"\"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\
    \"\n    local currentVowel33=\"\"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\
    \"\n    local currentVowel36=\"\"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\
    \"\n    local currentVowel39=\"\"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\
    \"\n    local currentVowel42=\"\"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\
    \"\n    local currentVowel45=\"\"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\
    \"\n    local currentVowel48=\"\"\n    local currentVowel49=\"\"\n    local \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local output=''\n  local vowelCount=0\n  local vowelIndex=0\n  local vowelIndex2=0\n\
    \  local vowelIndex3=0\n  local vowelIndex4=0\n  local vowelIndex5=0\n  local\
    \ vowelIndex6=0\n  local vowelIndex7=0\n  local vowelIndex8=0\n  local vowelIndex9=0\n\
    \  local vowelIndex10=0\n  local vowelIndex11=0\n  local vowelIndex12=0\n  local\
    \ vowelIndex13=0\n  local vowelIndex14=0\n  local vowelIndex15=0\n  local vowelIndex16=0\n\
    \  local vowelIndex17=0\n  local vowelIndex18=0\n  local vowelIndex19=0\n  local\
    \ vowelIndex20=0\n  local vowelIndex21=0\n  local vowelIndex22=0\n  local vowelIndex23=0\n\
    \  local vowelIndex24=0\n  local vowelIndex25=0\n  local vowelIndex26=0\n  local\
    \ vowelIndex27=0\n  local vowelIndex28=0\n  local vowelIndex29=0\n  local vowelIndex30=0\n\
    \  local vowelIndex31=0\n  local vowelIndex32=0\n  local vowelIndex33=0\n  local\
    \ vowelIndex34=0\n  local vowelIndex35=0\n  local vowelIndex36=0\n  local vowelIndex37=0\n\
    \  local vowelIndex38=0\n  local vowelIndex39=0\n  local vowelIndex40=0\n  local\
    \ vowelIndex41=0\n  local vowelIndex42=0\n  local vowelIndex43=0\n  local vowelIndex44=0\n\
    \  local vowelIndex45=0\n  local vowelIndex46=0\n  local vowelIndex47=0\n  local\
    \ vowelIndex48=0\n  local vowelIndex49=0\n  local vowelIndex50=0\n  local vowelIndex51=0\n\
    \  local vowelIndex52=0\n  local vowelIndex53=0\n  local vowelIndex54=0\n  local\
    \ vowelIndex55=0\n  local vowelIndex56=0\n  local vowelIndex57=0\n  local vowelIndex58=0\n\
    \  local vowelIndex59=0\n  local vowelIndex60=0\n  local vowelIndex61=0\n  local\
    \ vowelIndex62=0\n  local vowelIndex63=0\n  local vowelIndex64=0\n  local vowelIndex65=0\n\
    \  local vowelIndex66=0\n  local vowelIndex67=0\n  local vowelIndex68=0\n  local\
    \ vowelIndex69=0\n  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local result=\"\"\n    local vowelCount=0\n    local vowelPosition=0\n \
    \   local currentLetter=\"\"\n    local previousLetter=\"\"\n    local previousVowel=\"\
    \"\n    local previousVowelPosition=0\n    local currentVowel=\"\"\n    local\
    \ currentVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelCount=0\n\
    \    local previousVowelPosition=0\n    local previousVowelPosition=0\n    local\
    \ previousVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelPosition=0\n\
    \    local previousVowelPosition=0\n    local previousVowelPosition=0\n    local\
    \ previousVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelPosition=0\n\
    \    local previousVowelPosition=0\n    local previousVowelPosition=0\n    local\
    \ previousVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelPosition=0\n\
    \    local previousVowelPosition=0\n    local previousVowelPosition=0\n    local\
    \ previousVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelPosition=0\n\
    \    local previousVowelPosition=0\n    local previousVowelPosition=0\n    local\
    \ previousVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelPosition=0\n\
    \    local previousVowelPosition=0\n    local previousVowelPosition=0\n    local\
    \ previousVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelPosition=0\n\
    \    local previousVowelPosition=0\n    local previousVowelPosition=0\n    local\
    \ previousVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelPosition=0\n\
    \    local previousVowelPosition=0\n    local previousVowelPosition=0\n    local\
    \ previousVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelPosition=0\n\
    \    local previousVowelPosition=0\n    local previousVowelPosition=0\n    local\
    \ previousVowelPosition=0\n    local previousVowelPosition=0\n    local previousVowelPosition=0\n\
    \    local previousVowelPosition=0\n\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowel_count=0\n    local vowel_position=0\n\
    \    local vowel_letter=\"\"\n    local letter=\"\"\n    local letter_index=0\n\
    \    local letter_index2=0\n    local letter_index3=0\n    local letter_index4=0\n\
    \    local letter_index5=0\n    local letter_index6=0\n    local letter_index7=0\n\
    \    local letter_index8=0\n    local letter_index9=0\n    local letter_index10=0\n\
    \    local letter_index11=0\n    local letter_index12=0\n    local letter_index13=0\n\
    \    local letter_index14=0\n    local letter_index15=0\n    local letter_index16=0\n\
    \    local letter_index17=0\n    local letter_index18=0\n    local letter_index19=0\n\
    \    local letter_index20=0\n    local letter_index21=0\n    local letter_index22=0\n\
    \    local letter_index23=0\n    local letter_index24=0\n    local letter_index25=0\n\
    \    local letter_index26=0\n    local letter_index27=0\n    local letter_index28=0\n\
    \    local letter_index29=0\n    local letter_index30=0\n    local letter_index31=0\n\
    \    local letter_index32=0\n    local letter_index33=0\n    local letter_index34=0\n\
    \    local letter_index35=0\n    local letter_index36=0\n    local letter_index37=0\n\
    \    local letter_index38=0\n    local letter_index39=0\n    local letter_index40=0\n\
    \    local letter_index41=0\n    local letter_index42=0\n    local letter_index43=0\n\
    \    local letter_index44=0\n    local letter_index45=0\n    local letter_index46=0\n\
    \    local letter_index47=0\n    local letter_index48=0\n    local letter_index49=0\n\
    \    local letter_index50=0\n    local letter_index51=0\n    local letter_index52=0\n\
    \    local letter_index53=0\n    local letter_index54=0\n    local letter_index55=0\n\
    \    local letter_index56=0\n    local letter_index57=0\n    local letter_index58=0\n\
    \    local letter_index59=0\n    local letter_index60=0\n    local letter_index61=0\n\
    \    local letter_index62=0\n    local letter_index63=0\n    local letter_index64=0\n\
    \    local letter_index65=0\n    local letter_index66=0\n    local letter_index\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"AEIOUaeiou\"\n    local vowels2=\"AEIOUaeiou\"\n    local vowels3=\"\
    AEIOUaeiou\"\n    local vowels4=\"AEIOUaeiou\"\n    local vowels5=\"AEIOUaeiou\"\
    \n    local vowels6=\"AEIOUaeiou\"\n    local vowels7=\"AEIOUaeiou\"\n    local\
    \ vowels8=\"AEIOUaeiou\"\n    local vowels9=\"AEIOUaeiou\"\n    local vowels10=\"\
    AEIOUaeiou\"\n    local vowels11=\"AEIOUaeiou\"\n    local vowels12=\"AEIOUaeiou\"\
    \n    local vowels13=\"AEIOUaeiou\"\n    local vowels14=\"AEIOUaeiou\"\n    local\
    \ vowels15=\"AEIOUaeiou\"\n    local vowels16=\"AEIOUaeiou\"\n    local vowels17=\"\
    AEIOUaeiou\"\n    local vowels18=\"AEIOUaeiou\"\n    local vowels19=\"AEIOUaeiou\"\
    \n    local vowels20=\"AEIOUaeiou\"\n    local vowels21=\"AEIOUaeiou\"\n    local\
    \ vowels22=\"AEIOUaeiou\"\n    local vowels23=\"AEIOUaeiou\"\n    local vowels24=\"\
    AEIOUaeiou\"\n    local vowels25=\"AEIOUaeiou\"\n    local vowels26=\"AEIOUaeiou\"\
    \n    local vowels27=\"AEIOUaeiou\"\n    local vowels28=\"AEIOUaeiou\"\n    local\
    \ vowels29=\"AEIOUaeiou\"\n    local vowels30=\"AEIOUaeiou\"\n    local vowels31=\"\
    AEIOUaeiou\"\n    local vowels32=\"AEIOUaeiou\"\n    local vowels33=\"AEIOUaeiou\"\
    \n    local vowels34=\"AEIOUaeiou\"\n    local vowels35=\"AEIOUaeiou\"\n    local\
    \ vowels36=\"AEIOUaeiou\"\n    local vowels37=\"AEIOUaeiou\"\n    local vowels38=\"\
    AEIOUaeiou\"\n    local vowels39=\"AEIOUae\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk8srdpe8.sh: line 68: unexpected EOF while looking for matching
    `"''

    /tmp/tmpk8srdpe8.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowel\n    local vowel_position\n    local\
    \ vowel_position2\n    local letter\n    local letter2\n    local letter3\n  \
    \  local letter4\n    local letter5\n    local letter6\n    local letter7\n  \
    \  local letter8\n    local letter9\n    local letter10\n    local letter11\n\
    \    local letter12\n    local letter13\n    local letter14\n    local letter15\n\
    \    local letter16\n    local letter17\n    local letter18\n    local letter19\n\
    \    local letter20\n    local letter21\n    local letter22\n    local letter23\n\
    \    local letter24\n    local letter25\n    local letter26\n    local letter27\n\
    \    local letter28\n    local letter29\n    local letter30\n    local letter31\n\
    \    local letter32\n    local letter33\n    local letter34\n    local letter35\n\
    \    local letter36\n    local letter37\n    local letter38\n    local letter39\n\
    \    local letter40\n    local letter41\n    local letter42\n    local letter43\n\
    \    local letter44\n    local letter45\n    local letter46\n    local letter47\n\
    \    local letter48\n    local letter49\n    local letter50\n    local letter51\n\
    \    local letter52\n    local letter53\n    local letter54\n    local letter55\n\
    \    local letter56\n    local letter57\n    local letter58\n    local letter59\n\
    \    local letter60\n    local letter61\n    local letter62\n    local letter63\n\
    \    local letter64\n    local letter65\n    local letter66\n    local letter67\n\
    \    local letter68\n    local letter69\n    local letter70\n    local letter71\n\
    \    local letter72\n    local letter73\n    local letter74\n    local letter75\n\
    \    local letter76\n    local letter77\n    local letter78\n    local letter79\n\
    \    local letter80\n    local letter81\n    local letter82\n    local letter83\n\
    \    local letter84\n    local letter85\n    local letter86\n    local letter87\n\
    \    local letter88\n    local letter89\n    local letter90\n    local letter91\n\
    \    local letter92\n    local letter93\n    local letter94\n    local letter95\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\
    \"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n\
    \    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n   \
    \ local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local\
    \ letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\
    \"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n\
    \    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n   \
    \ local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local\
    \ letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local msg3=\"\"\n    local msg4=\"\"\n    local msg5=\"\"\n    local msg6=\"\
    \"\n    local msg7=\"\"\n    local msg8=\"\"\n    local msg9=\"\"\n    local msg10=\"\
    \"\n    local msg11=\"\"\n    local msg12=\"\"\n    local msg13=\"\"\n    local\
    \ msg14=\"\"\n    local msg15=\"\"\n    local msg16=\"\"\n    local msg17=\"\"\
    \n    local msg18=\"\"\n    local msg19=\"\"\n    local msg20=\"\"\n    local\
    \ msg21=\"\"\n    local msg22=\"\"\n    local msg23=\"\"\n    local msg24=\"\"\
    \n    local msg25=\"\"\n    local msg26=\"\"\n    local msg27=\"\"\n    local\
    \ msg28=\"\"\n    local msg29=\"\"\n    local msg30=\"\"\n    local msg31=\"\"\
    \n    local msg32=\"\"\n    local msg33=\"\"\n    local msg34=\"\"\n    local\
    \ msg35=\"\"\n    local msg36=\"\"\n    local msg37=\"\"\n    local msg38=\"\"\
    \n    local msg39=\"\"\n    local msg40=\"\"\n    local msg41=\"\"\n    local\
    \ msg42=\"\"\n    local msg43=\"\"\n    local msg44=\"\"\n    local msg45=\"\"\
    \n    local msg46=\"\"\n    local msg47=\"\"\n    local msg48=\"\"\n    local\
    \ msg49=\"\"\n    local msg50=\"\"\n    local msg51=\"\"\n    local msg52=\"\"\
    \n    local msg53=\"\"\n    local msg54=\"\"\n    local msg55=\"\"\n    local\
    \ msg56=\"\"\n    local msg57=\"\"\n    local msg58=\"\"\n    local msg59=\"\"\
    \n    local msg60=\"\"\n    local msg61=\"\"\n    local msg62=\"\"\n    local\
    \ msg63=\"\"\n    local msg64=\"\"\n    local msg65=\"\"\n    local msg66=\"\"\
    \n    local msg67=\"\"\n    local msg68=\"\"\n    local msg69=\"\"\n    local\
    \ msg70=\"\"\n    local msg71=\"\"\n    local msg72=\"\"\n    local msg73=\"\"\
    \n    local msg74=\"\"\n    local msg75=\"\"\n    local msg76=\"\"\n    local\
    \ msg77=\"\"\n    local msg78=\"\"\n    local msg79=\"\"\n    local msg80=\"\"\
    \n    local msg81=\"\"\n    local msg82=\"\"\n    local msg83=\"\"\n    local\
    \ msg84=\"\"\n    local msg85=\"\"\n    local \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowel\n    local letter\n    local i\n    local j\n    \n    for (( i=0;\
    \ i<${#message}; i++ )); do\n        letter=${message:$i:1}\n        if [[ \"\
    ${letters:0:1}\" == \"${letter}\" ]]; then\n            letter=${letters:1:1}\n\
    \        fi\n        for (( j=0; j<${#vowels}; j++ )); do\n            vowel=${vowels:$j:1}\n\
    \            if [[ \"${vowels:0:1}\" == \"${vowel}\" ]]; then\n              \
    \  vowel=${vowels:1:1}\n            fi\n            if [[ \"${letter}\" == \"\
    ${vowel}\" ]]; then\n                letter=${letters:$((j+1)):1}\n          \
    \  fi\n        done\n        result+=\"${letter}\"\n    done\n    echo \"${result}\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    for (( i=0; i<${#message}; i++ )); do\n        local letter=${message:$i:1}\n\
    \        if [[ ${alphabet:$i:1} =~ $vowels ]]; then\n            letter=${alphabet:$((i+1)):1}\n\
    \        fi\n        output+=\"${letter}\"\n    done\n    echo \"$output\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowelIndex=0\n\
    \    local currentVowelCount=0\n    local currentVowelIndex2=0\n    local currentVowelCount2=0\n\
    \    local currentVowelIndex3=0\n    local currentVowelCount3=0\n    local currentVowelIndex4=0\n\
    \    local currentVowelCount4=0\n    local currentVowelIndex5=0\n    local currentVowelCount5=0\n\
    \    local currentVowelIndex6=0\n    local currentVowelCount6=0\n    local currentVowelIndex7=0\n\
    \    local currentVowelCount7=0\n    local currentVowelIndex8=0\n    local currentVowelCount8=0\n\
    \    local currentVowelIndex9=0\n    local currentVowelCount9=0\n    local currentVowelIndex10=0\n\
    \    local currentVowelCount10=0\n    local currentVowelIndex11=0\n    local currentVowelCount11=0\n\
    \    local currentVowelIndex12=0\n    local currentVowelCount12=0\n    local currentVowelIndex13=0\n\
    \    local currentVowelCount13=0\n    local currentVowelIndex14=0\n    local currentVowelCount14=0\n\
    \    local currentVowelIndex15=0\n    local currentVowelCount15=0\n    local currentVowelIndex16=0\n\
    \    local currentVowelCount16=0\n    local currentVowelIndex17=0\n    local currentVowelCount17=0\n\
    \    local currentVowelIndex18=0\n    local currentVowelCount18=0\n    local currentVowelIndex19=0\n\
    \    local currentVowelCount19=0\n    local currentVowelIndex20=0\n    local currentVowelCount20=0\n\
    \    local currentVowelIndex21=0\n    local currentVowelCount21=0\n    local currentVowelIndex22=0\n\
    \    local currentVowelCount22=0\n    local currentVowelIndex23=0\n    local currentVowelCount23=0\n\
    \    local currentVowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local msg2=\"\"\n  local\
    \ vowels=\"aeiouAEIOU\"\n  local vowels2=\"AEIOUaeiou\"\n  local vowels3=\"AEIOUaeiouAEIOU\"\
    \n  local vowels4=\"AEIOUaeiouAEIOUaeiou\"\n  local vowels5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n  local vowels7=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n  local vowels9=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n  local vowels10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpirdtedy3.sh: line 46: unexpected EOF while looking for matching
    `"''

    /tmp/tmpirdtedy3.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n\
    \    local letterIndex=0\n    local vowelIndex=0\n    local letter\n    local\
    \ vowel\n    local letter2\n    local vowel2\n    local letter3\n    local vowel3\n\
    \    local letter4\n    local vowel4\n    local letter5\n    local vowel5\n  \
    \  local letter6\n    local vowel6\n    local letter7\n    local vowel7\n    local\
    \ letter8\n    local vowel8\n    local letter9\n    local vowel9\n    local letter10\n\
    \    local vowel10\n    local letter11\n    local vowel11\n    local letter12\n\
    \    local vowel12\n    local letter13\n    local vowel13\n    local letter14\n\
    \    local vowel14\n    local letter15\n    local vowel15\n    local letter16\n\
    \    local vowel16\n    local letter17\n    local vowel17\n    local letter18\n\
    \    local vowel18\n    local letter19\n    local vowel19\n    local letter20\n\
    \    local vowel20\n    local letter21\n    local vowel21\n    local letter22\n\
    \    local vowel22\n    local letter23\n    local vowel23\n    local letter24\n\
    \    local vowel24\n    local letter25\n    local vowel25\n    local letter26\n\
    \    local vowel26\n    local letter27\n    local vowel27\n    local letter28\n\
    \    local vowel28\n    local letter29\n    local vowel29\n    local letter30\n\
    \    local vowel30\n    local letter31\n    local vowel31\n    local letter32\n\
    \    local vowel32\n    local letter33\n    local vowel33\n    local letter34\n\
    \    local vowel34\n    local letter35\n    local vowel35\n    local letter36\n\
    \    local vowel36\n    local letter37\n    local vowel37\n    local letter38\n\
    \    local vowel38\n    local letter39\n    local vowel39\n    local letter40\n\
    \    local vowel40\n    local letter41\n    local vowel41\n    local letter42\n\
    \    local vowel42\n    local letter43\n    local vowel43\n    local letter44\n\
    \    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_counter=0\n\
    \    local letter_counter=0\n    local output=\"\"\n    local vowel_positions=\"\
    \"\n    local letter_positions=\"\"\n    local vowel_letter=\"\"\n    local letter_letter=\"\
    \"\n    local vowel_letter_positions=\"\"\n    local letter_letter_positions=\"\
    \"\n    local vowel_letter_letter=\"\"\n    local letter_letter_letter=\"\"\n\
    \    local vowel_letter_letter_positions=\"\"\n    local letter_letter_letter_positions=\"\
    \"\n    local vowel_letter_letter_letter=\"\"\n    local letter_letter_letter_letter=\"\
    \"\n    local vowel_letter_letter_letter_positions=\"\"\n    local letter_letter_letter_letter_positions=\"\
    \"\n    local vowel_letter_letter_letter_letter=\"\"\n    local letter_letter_letter_letter_letter=\"\
    \"\n    local vowel_letter_letter_letter_letter_positions=\"\"\n    local letter_letter_letter_letter_letter_positions=\"\
    \"\n    local vowel_letter_letter_letter_letter_letter=\"\"\n    local letter_letter_letter_letter_letter_letter=\"\
    \"\n    local vowel_letter_letter_letter_letter_letter_positions=\"\"\n    local\
    \ letter_letter_letter_letter_letter_positions=\"\"\n    local vowel_letter_letter_letter_letter_letter=\"\
    \"\n    local letter_letter_letter_letter_letter_letter=\"\"\n    local vowel_letter_letter_letter_letter_letter_positions=\"\
    \"\n    local letter_letter_letter_letter_letter_letter_positions=\"\"\n    local\
    \ vowel_letter_letter_letter_letter_letter_letter=\"\"\n    local letter_letter_letter_letter_letter_letter=\"\
    \"\n    local vowel_letter_letter_letter_letter_letter_positions=\"\"\n    local\
    \ letter_letter_letter_letter_letter_letter_positions=\"\"\n    local vowel_letter_letter_letter_letter_letter_letter=\"\
    \"\n    local letter_letter_letter_letter_letter_letter=\"\"\n    local vowel_letter_letter_letter_letter_letter_positions=\"\
    \"\n    local letter_letter_letter_letter_letter_letter_positions=\"\"\n    local\
    \ vowel_letter_letter_letter_letter_letter_letter=\"\"\n    local letter_letter_letter_letter_letter_letter=\"\
    \"\n    local vowel_letter_letter_letter_letter_letter_positions=\"\"\n    local\
    \ letter_letter_letter_letter_letter_letter_positions=\"\"\n    local vowel_letter_letter_letter_letter_letter_letter=\"\
    \"\n    local letter_letter_letter_letter_letter_letter=\"\"\n    local vowel_letter_letter_letter_letter_letter_positions=\"\
    \"\n    local letter_letter_letter_letter_letter_letter_positions=\"\"\n    local\
    \ vowel_letter_letter_letter_letter_letter_letter=\"\"\n    local letter_letter_letter_letter_letter_letter=\"\
    \"\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local lastLetter=\"\"\n  \
    \  local lastVowel=\"\"\n    local lastLetterIndex=0\n    local lastVowelIndex=0\n\
    \    local letterIndex=0\n    local vowelIndex=0\n    local letter=\"\"\n    local\
    \ vowel=\"\"\n    local letterToSwap=\"\"\n    local vowelToSwap=\"\"\n    local\
    \ swappedLetter=\"\"\n    local swappedVowel=\"\"\n    local swappedLetterIndex=0\n\
    \    local swappedVowelIndex=0\n    local swappedLetterCount=0\n    local swappedVowelCount=0\n\
    \    local swappedLetterIndex2=0\n    local swappedVowelIndex2=0\n    local swappedLetterCount2=0\n\
    \    local swappedVowelCount2=0\n    local swappedLetterIndex3=0\n    local swappedVowelIndex3=0\n\
    \    local swappedLetterCount3=0\n    local swappedVowelCount3=0\n    local swappedLetterIndex4=0\n\
    \    local swappedVowelIndex4=0\n    local swappedLetterCount4=0\n    local swappedVowelCount4=0\n\
    \    local swappedLetterIndex5=0\n    local swappedVowelIndex5=0\n    local swappedLetterCount5=0\n\
    \    local swappedVowelCount5=0\n    local swappedLetterIndex6=0\n    local swappedVowelIndex6=0\n\
    \    local swappedLetterCount6=0\n    local swappedVowelCount6=0\n    local swappedLetterIndex7=0\n\
    \    local swappedVowelIndex7=0\n    local swappedLetterCount7=0\n    local swappedVowelCount7=0\n\
    \    local swappedLetterIndex8=0\n    local swappedVowelIndex8=0\n    local swappedLetterCount8=0\n\
    \    local swappedVowelCount8=0\n    local swappedLetterIndex9=0\n    local swappedVowelIndex9=0\n\
    \    local swappedLetterCount9=0\n    local swappedVowelCount9=0\n    local swappedLetterIndex10=0\n\
    \    local swappedVowelIndex10=0\n    local swap\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local vowel_positions=$(echo $message | tr A-Z a-z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z\
    \ A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | tr a-z A-Z | \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpttyzteh1.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmpttyzteh1.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x\
    \ y z\"\n  local output=\"\"\n  local vowelCount=0\n  local vowelPosition=0\n\
    \  local letterPosition=0\n  local letterCount=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterIndex2=0\n  local letterIndex3=0\n  local\
    \ letterIndex4=0\n  local letterIndex5=0\n  local letterIndex6=0\n  local letterIndex7=0\n\
    \  local letterIndex8=0\n  local letterIndex9=0\n  local letterIndex10=0\n  local\
    \ letterIndex11=0\n  local letterIndex12=0\n  local letterIndex13=0\n  local letterIndex14=0\n\
    \  local letterIndex15=0\n  local letterIndex16=0\n  local letterIndex17=0\n \
    \ local letterIndex18=0\n  local letterIndex19=0\n  local letterIndex20=0\n  local\
    \ letterIndex21=0\n  local letterIndex22=0\n  local letterIndex23=0\n  local letterIndex24=0\n\
    \  local letterIndex25=0\n  local letterIndex26=0\n  local letterIndex27=0\n \
    \ local letterIndex28=0\n  local letterIndex29=0\n  local letterIndex30=0\n  local\
    \ letterIndex31=0\n  local letterIndex32=0\n  local letterIndex33=0\n  local letterIndex34=0\n\
    \  local letterIndex35=0\n  local letterIndex36=0\n  local letterIndex37=0\n \
    \ local letterIndex38=0\n  local letterIndex39=0\n  local letterIndex40=0\n  local\
    \ letterIndex41=0\n  local letterIndex42=0\n  local letterIndex43=0\n  local letterIndex44=0\n\
    \  local letterIndex45=0\n  local letterIndex46=0\n  local letterIndex47=0\n \
    \ local letterIndex48=0\n  local letterIndex49=0\n  local letterIndex50=0\n  local\
    \ letterIndex51=0\n  local letterIndex52=0\n  local letterIndex53=0\n  local letterIndex54=0\n\
    \  local letterIndex55=0\n  local letterIndex56=0\n  local letterIndex57=0\n \
    \ local letterIndex58=0\n  local letterIndex59=0\n  local letterIndex60=0\n  local\
    \ letterIndex61=0\n  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#message}; i++ )); do\n        local letter=${message:$i:1}\n\
    \        if [[ ${letter:0:1} == \"a\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"e\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"i\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"o\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"u\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"A\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"E\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"I\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"O\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"U\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"0\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"1\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"2\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"3\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"4\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"5\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"6\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"7\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"8\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"9\" ]]; then\n            letter=${letter:1}\n\
    \        fi\n        if [[ ${letter:0:1} == \"a\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"e\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"i\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj70o6g10.sh: line 66: syntax error in conditional expression

    /tmp/tmpj70o6g10.sh: line 78: syntax error near `KS''

    /tmp/tmpj70o6g10.sh: line 78: `    [[ $(candidate "This is a message") = "tHKS
    KS C MGSSCGG" ]]''

    '
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letterCount2=0\n\
    \    local letter2=\"\"\n    local letter3=\"\"\n    local letter4=\"\"\n    local\
    \ letter5=\"\"\n    local letter6=\"\"\n    local letter7=\"\"\n    local letter8=\"\
    \"\n    local letter9=\"\"\n    local letter10=\"\"\n    local letter11=\"\"\n\
    \    local letter12=\"\"\n    local letter13=\"\"\n    local letter14=\"\"\n \
    \   local letter15=\"\"\n    local letter16=\"\"\n    local letter17=\"\"\n  \
    \  local letter18=\"\"\n    local letter19=\"\"\n    local letter20=\"\"\n   \
    \ local letter21=\"\"\n    local letter22=\"\"\n    local letter23=\"\"\n    local\
    \ letter24=\"\"\n    local letter25=\"\"\n    local letter26=\"\"\n    local letter27=\"\
    \"\n    local letter28=\"\"\n    local letter29=\"\"\n    local letter30=\"\"\n\
    \    local letter31=\"\"\n    local letter32=\"\"\n    local letter33=\"\"\n \
    \   local letter34=\"\"\n    local letter35=\"\"\n    local letter36=\"\"\n  \
    \  local letter37=\"\"\n    local letter38=\"\"\n    local letter39=\"\"\n   \
    \ local letter40=\"\"\n    local letter41=\"\"\n    local letter42=\"\"\n    local\
    \ letter43=\"\"\n    local letter44=\"\"\n    local letter45=\"\"\n    local letter46=\"\
    \"\n    local letter47=\"\"\n    local letter48=\"\"\n    local letter49=\"\"\n\
    \    local letter50=\"\"\n    local letter51=\"\"\n    local letter52=\"\"\n \
    \   local letter53=\"\"\n    local letter54=\"\"\n    local letter55=\"\"\n  \
    \  local letter56=\"\"\n    local letter57=\"\"\n    local letter58=\"\"\n   \
    \ local letter59=\"\"\n    local letter60=\"\"\n    local letter61=\"\"\n    local\
    \ letter62=\"\"\n    local letter63=\"\"\n    local letter64=\"\"\n    local letter65=\"\
    \"\n    local letter66=\"\"\n    local letter67=\"\"\n    local letter68=\"\"\n\
    \    local letter69=\"\"\n    local letter70=\"\"\n    local letter71=\"\"\n \
    \   local letter72=\"\"\n    local letter73=\"\"\n    local letter74=\"\"\n  \
    \  local letter75=\"\"\n    local letter76=\"\"\n    local letter77\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsArray=($vowels)\n\
    \    local vowelsArrayCount=${#vowelsArray[@]}\n    local vowelsArrayIndex=0\n\
    \    local vowelsArrayIndex2=0\n    local vowelsArrayIndex3=0\n    local vowelsArrayIndex4=0\n\
    \    local vowelsArrayIndex5=0\n    local vowelsArrayIndex6=0\n    local vowelsArrayIndex7=0\n\
    \    local vowelsArrayIndex8=0\n    local vowelsArrayIndex9=0\n    local vowelsArrayIndex10=0\n\
    \    local vowelsArrayIndex11=0\n    local vowelsArrayIndex12=0\n    local vowelsArrayIndex13=0\n\
    \    local vowelsArrayIndex14=0\n    local vowelsArrayIndex15=0\n    local vowelsArrayIndex16=0\n\
    \    local vowelsArrayIndex17=0\n    local vowelsArrayIndex18=0\n    local vowelsArrayIndex19=0\n\
    \    local vowelsArrayIndex20=0\n    local vowelsArrayIndex21=0\n    local vowelsArrayIndex22=0\n\
    \    local vowelsArrayIndex23=0\n    local vowelsArrayIndex24=0\n    local vowelsArrayIndex25=0\n\
    \    local vowelsArrayIndex26=0\n    local vowelsArrayIndex27=0\n    local vowelsArrayIndex28=0\n\
    \    local vowelsArrayIndex29=0\n    local vowelsArrayIndex30=0\n    local vowelsArrayIndex31=0\n\
    \    local vowelsArrayIndex32=0\n    local vowelsArrayIndex33=0\n    local vowelsArrayIndex34=0\n\
    \    local vowelsArrayIndex35=0\n    local vowelsArrayIndex36=0\n    local vowelsArrayIndex37=0\n\
    \    local vowelsArrayIndex38=0\n    local vowelsArrayIndex39=0\n    local vowelsArrayIndex40=0\n\
    \    local vowelsArrayIndex41=0\n    local vowelsArrayIndex42=0\n    local vowelsArrayIndex43=0\n\
    \    local vowelsArrayIndex44=0\n    local vowelsArrayIndex45=0\n    local vowelsArrayIndex46=0\n\
    \    local vowelsArrayIndex47=0\n    local vowelsArrayIndex48=0\n    local vowelsArrayIndex49=0\n\
    \    local vowelsArrayIndex50=0\n    local vowelsArrayIndex51=0\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local result=\"\"\n  local\
    \ count=0\n  local vowel\n  local letter\n  local i\n  \n  for letter in $message;\
    \ do\n    if [[ $letter =~ $vowels ]]; then\n      vowel=${letter:2:1}\n     \
    \ i=$((${#vowel}-1))\n      result+=$vowel\n      result+=$letter\n      count=$((count+1))\n\
    \    else\n      result+=$letter\n      count=$((count+1))\n    fi\n  done\n \
    \ \n  for ((i=0;i<$count;i++)); do\n    letter=${letters:$i:1}\n    result+=$letter\n\
    \  done\n  \n  echo $result\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\"\
    \n    local currentVowel3=\"\"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentVowel6=\"\"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentVowel9=\"\"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentVowel12=\"\"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentVowel15=\"\"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentVowel18=\"\"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentVowel21=\"\"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentVowel24=\"\"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentVowel27=\"\"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\
    \"\n    local currentVowel30=\"\"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\
    \"\n    local currentVowel33=\"\"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\
    \"\n    local currentVowel36=\"\"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\
    \"\n    local currentVowel39=\"\"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\
    \"\n    local currentVowel42=\"\"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\
    \"\n    local currentVowel45=\"\"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\
    \"\n    local currentVowel48=\"\"\n    local currentVowel49=\"\"\n    local \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n\
    \        local letter=${message:$i:1}\n        local nextLetter=${message:$((i+1)):1}\n\
    \        if [[ ${letter} == ${nextLetter} ]]; then\n            result+=\"${letter}\"\
    \n        else\n            result+=\"${letter:0:1}${letter:1:1}${letter:2:1}${letter:3:1}${letter:4:1}\"\
    \n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local result=\"\"\n  local vowelCount=0\n  local letterCount=0\n  local\
    \ letter\n  local vowel\n  local letter2\n  local letter3\n  local letter4\n \
    \ local letter5\n  local letter6\n  local letter7\n  local letter8\n  local letter9\n\
    \  local letter10\n  local letter11\n  local letter12\n  local letter13\n  local\
    \ letter14\n  local letter15\n  local letter16\n  local letter17\n  local letter18\n\
    \  local letter19\n  local letter20\n  local letter21\n  local letter22\n  local\
    \ letter23\n  local letter24\n  local letter25\n  local letter26\n  local letter27\n\
    \  local letter28\n  local letter29\n  local letter30\n  local letter31\n  local\
    \ letter32\n  local letter33\n  local letter34\n  local letter35\n  local letter36\n\
    \  local letter37\n  local letter38\n  local letter39\n  local letter40\n  local\
    \ letter41\n  local letter42\n  local letter43\n  local letter44\n  local letter45\n\
    \  local letter46\n  local letter47\n  local letter48\n  local letter49\n  local\
    \ letter50\n  local letter51\n  local letter52\n  local letter53\n  local letter54\n\
    \  local letter55\n  local letter56\n  local letter57\n  local letter58\n  local\
    \ letter59\n  local letter60\n  local letter61\n  local letter62\n  local letter63\n\
    \  local letter64\n  local letter65\n  local letter66\n  local letter67\n  local\
    \ letter68\n  local letter69\n  local letter70\n  local letter71\n  local letter72\n\
    \  local letter73\n  local letter74\n  local letter75\n  local letter76\n  local\
    \ letter77\n  local letter78\n  local letter79\n  local letter80\n  local letter81\n\
    \  local letter82\n  local letter83\n  local letter84\n  local letter85\n  local\
    \ letter86\n  local letter87\n  local letter88\n  local letter\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowel\n    local letter\n\
    \    local letter2\n    local letter3\n    local letter4\n    local letter5\n\
    \    local letter6\n    local letter7\n    local letter8\n    local letter9\n\
    \    local letter10\n    local letter11\n    local letter12\n    local letter13\n\
    \    local letter14\n    local letter15\n    local letter16\n    local letter17\n\
    \    local letter18\n    local letter19\n    local letter20\n    local letter21\n\
    \    local letter22\n    local letter23\n    local letter24\n    local letter25\n\
    \    local letter26\n    local letter27\n    local letter28\n    local letter29\n\
    \    local letter30\n    local letter31\n    local letter32\n    local letter33\n\
    \    local letter34\n    local letter35\n    local letter36\n    local letter37\n\
    \    local letter38\n    local letter39\n    local letter40\n    local letter41\n\
    \    local letter42\n    local letter43\n    local letter44\n    local letter45\n\
    \    local letter46\n    local letter47\n    local letter48\n    local letter49\n\
    \    local letter50\n    local letter51\n    local letter52\n    local letter53\n\
    \    local letter54\n    local letter55\n    local letter56\n    local letter57\n\
    \    local letter58\n    local letter59\n    local letter60\n    local letter61\n\
    \    local letter62\n    local letter63\n    local letter64\n    local letter65\n\
    \    local letter66\n    local letter67\n    local letter68\n    local letter69\n\
    \    local letter70\n    local letter71\n    local letter72\n    local letter73\n\
    \    local letter74\n    local letter75\n    local letter76\n    local letter77\n\
    \    local letter78\n    local letter79\n    local letter80\n    local letter81\n\
    \    local letter82\n    local letter83\n    local letter84\n    local letter85\n\
    \    local letter86\n    local letter87\n    local letter88\n    local letter89\n\
    \    local letter90\n    local letter91\n    local letter92\n    local letter93\n\
    \    local letter94\n    local letter95\n    local letter96\n    local \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local i\n    local j\n    local k\n    local vowel\n\
    \    local letter\n    local count\n    local letter2\n    local letter3\n   \
    \ local letter4\n    local letter5\n    local letter6\n    local letter7\n   \
    \ local letter8\n    local letter9\n    local letter10\n    local letter11\n \
    \   local letter12\n    local letter13\n    local letter14\n    local letter15\n\
    \    local letter16\n    local letter17\n    local letter18\n    local letter19\n\
    \    local letter20\n    local letter21\n    local letter22\n    local letter23\n\
    \    local letter24\n    local letter25\n    local letter26\n    local letter27\n\
    \    local letter28\n    local letter29\n    local letter30\n    local letter31\n\
    \    local letter32\n    local letter33\n    local letter34\n    local letter35\n\
    \    local letter36\n    local letter37\n    local letter38\n    local letter39\n\
    \    local letter40\n    local letter41\n    local letter42\n    local letter43\n\
    \    local letter44\n    local letter45\n    local letter46\n    local letter47\n\
    \    local letter48\n    local letter49\n    local letter50\n    local letter51\n\
    \    local letter52\n    local letter53\n    local letter54\n    local letter55\n\
    \    local letter56\n    local letter57\n    local letter58\n    local letter59\n\
    \    local letter60\n    local letter61\n    local letter62\n    local letter63\n\
    \    local letter64\n    local letter65\n    local letter66\n    local letter67\n\
    \    local letter68\n    local letter69\n    local letter70\n    local letter71\n\
    \    local letter72\n    local letter73\n    local letter74\n    local letter75\n\
    \    local letter76\n    local letter77\n    local letter78\n    local letter79\n\
    \    local letter80\n    local letter81\n    local letter82\n    local letter83\n\
    \    local letter84\n    local letter85\n    local letter86\n    local letter87\n\
    \    local letter88\n    local letter89\n    local letter90\n    local letter91\n\
    \    local letter92\n    local letter93\n    local letter94\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local result=\"\"\n  local\
    \ vowel\n  local letter\n  local count\n  local i\n  \n  for (( i=0; i<${#message};\
    \ i++ )); do\n    letter=${message:$i:1}\n    vowel=${vowels:$letter:1}\n    count=$(expr\
    \ ${#vowel} + 1)\n    letter=${letters:$letter:$count}\n    result+=$letter\n\
    \  done\n  \n  echo $result\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterCount=0\n    local letter=\"\"\n    local letterIndex=0\n   \
    \ local letterPosition=0\n    local letterCount=0\n    local letter=\"\"\n   \
    \ local letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n \
    \   local letter=\"\"\n    local letterIndex=0\n    local letterPosition=0\n \
    \   local letterCount=0\n    local letter=\"\"\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letter=\"\"\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letter=\"\"\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterCount=0\n    local letter=\"\"\n    local letterIndex=0\n   \
    \ local letterPosition=0\n    local letterCount=0\n    local letter=\"\"\n   \
    \ local letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n \
    \   local letter=\"\"\n    local letterIndex=0\n    local letterPosition=0\n \
    \   local letterCount=0\n    local letter=\"\"\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letter=\"\"\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letter=\"\"\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterIndex=0\n    local letterPosition=0\n\
    \    local letterCount=0\n    local letter=\"\"\n    local letterIndex=0\n   \
    \ local letterPosition=0\n    local letterCount=0\n    local letter=\"\"\n   \
    \ local letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n \
    \   local letter=\"\"\n    local letterIndex=0\n    local letterPosition=0\n \
    \   local letterCount=0\n    local letter=\"\"\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letter=\"\"\n    local\
    \ letterIndex=0\n    local letterPosition=0\n\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ count=0\n  local letter\n  local vowel\n  local letter2\n  local letter3\n \
    \ local letter4\n  local letter5\n  local letter6\n  local letter7\n  local letter8\n\
    \  local letter9\n  local letter10\n  local letter11\n  local letter12\n  local\
    \ letter13\n  local letter14\n  local letter15\n  local letter16\n  local letter17\n\
    \  local letter18\n  local letter19\n  local letter20\n  local letter21\n  local\
    \ letter22\n  local letter23\n  local letter24\n  local letter25\n  local letter26\n\
    \  local letter27\n  local letter28\n  local letter29\n  local letter30\n  local\
    \ letter31\n  local letter32\n  local letter33\n  local letter34\n  local letter35\n\
    \  local letter36\n  local letter37\n  local letter38\n  local letter39\n  local\
    \ letter40\n  local letter41\n  local letter42\n  local letter43\n  local letter44\n\
    \  local letter45\n  local letter46\n  local letter47\n  local letter48\n  local\
    \ letter49\n  local letter50\n  local letter51\n  local letter52\n  local letter53\n\
    \  local letter54\n  local letter55\n  local letter56\n  local letter57\n  local\
    \ letter58\n  local letter59\n  local letter60\n  local letter61\n  local letter62\n\
    \  local letter63\n  local letter64\n  local letter65\n  local letter66\n  local\
    \ letter67\n  local letter68\n  local letter69\n  local letter70\n  local letter71\n\
    \  local letter72\n  local letter73\n  local letter74\n  local letter75\n  local\
    \ letter76\n  local letter77\n  local letter78\n  local letter79\n  local letter80\n\
    \  local letter81\n  local letter82\n  local letter83\n  local letter84\n  local\
    \ letter85\n  local letter86\n  local letter87\n  local letter88\n  local letter89\n\
    \  local letter90\n  local letter91\n  local letter92\n  local letter93\n\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouy\"\n  local output=\"\"\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouAEIOU\"\n  local output=\"\"\n  local count=0\n  local\
    \ vowelIndex=0\n  local currentChar\n  local nextChar\n  local nextChar2\n  local\
    \ nextChar3\n  local nextChar4\n  local nextChar5\n  local nextChar6\n  local\
    \ nextChar7\n  local nextChar8\n  local nextChar9\n  local nextChar10\n  local\
    \ nextChar11\n  local nextChar12\n  local nextChar13\n  local nextChar14\n  local\
    \ nextChar15\n  local nextChar16\n  local nextChar17\n  local nextChar18\n  local\
    \ nextChar19\n  local nextChar20\n  local nextChar21\n  local nextChar22\n  local\
    \ nextChar23\n  local nextChar24\n  local nextChar25\n  local nextChar26\n  local\
    \ nextChar27\n  local nextChar28\n  local nextChar29\n  local nextChar30\n  local\
    \ nextChar31\n  local nextChar32\n  local nextChar33\n  local nextChar34\n  local\
    \ nextChar35\n  local nextChar36\n  local nextChar37\n  local nextChar38\n  local\
    \ nextChar39\n  local nextChar40\n  local nextChar41\n  local nextChar42\n  local\
    \ nextChar43\n  local nextChar44\n  local nextChar45\n  local nextChar46\n  local\
    \ nextChar47\n  local nextChar48\n  local nextChar49\n  local nextChar50\n  local\
    \ nextChar51\n  local nextChar52\n  local nextChar53\n  local nextChar54\n  local\
    \ nextChar55\n  local nextChar56\n  local nextChar57\n  local nextChar58\n  local\
    \ nextChar59\n  local nextChar60\n  local nextChar61\n  local nextChar62\n  local\
    \ nextChar63\n  local nextChar64\n  local nextChar65\n  local nextChar66\n  local\
    \ nextChar67\n  local nextChar68\n  local nextChar69\n  local nextChar70\n  local\
    \ nextChar71\n  local nextChar72\n  local nextChar73\n  local nextChar74\n  local\
    \ nextChar75\n  local nextChar76\n  local \n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\" \n  local vowel_count=$(echo $vowels | wc -w)\n  local vowel_positions=$(echo\
    \ $vowels | tr ' ' '\\n' | sort -u)\n  local vowel_position_count=$(echo $vowel_positions\
    \ | wc -w)\n  local vowel_positions_sorted=$(echo $vowel_positions | tr ' ' '\\\
    n' | sort -u)\n  local vowel_positions_sorted_count=$(echo $vowel_positions_sorted\
    \ | wc -w)\n  local vowel_positions_sorted_position=$(echo $vowel_positions_sorted\
    \ | head -n $vowel_positions_sorted_count | tail -n 1)\n  local vowel_positions_sorted_position_count=$(echo\
    \ $vowel_positions_sorted_position | wc -w)\n  local vowel_positions_sorted_position_position=$(echo\
    \ $vowel_positions_sorted_position | head -n $vowel_positions_sorted_position_count\
    \ | tail -n 1)\n  local vowel_positions_sorted_position_position_count=$(echo\
    \ $vowel_positions_sorted_position_position | wc -w)\n  local vowel_positions_sorted_position_position_position_count=$(echo\
    \ $vowel_positions_sorted_position_position_position | wc -w)\n  local vowel_positions_sorted_position_position_position_position_count=$(echo\
    \ $vowel_positions_sorted_position_position_position_position | wc -w)\n  local\
    \ vowel_positions_sorted_position_position_position_position_position_count=$(echo\
    \ $vowel_positions_sorted_position_position_position_position_position | wc -w)\n\
    \  local vowel_positions_sorted_position_position_position_position_position_position_count=$(echo\
    \ $vowel_positions_sorted_position_position_position_position_position_position\
    \ | wc -w)\n  local vowel_positions_sorted_position_position_position_position_position_position_position_count=$(echo\
    \ $vowel_positions_sorted_position_position_position_position_position_position_position\
    \ | wc -w)\n  local vowel_positions_sorted_position_position_position_position_position_position_position_position_count=$(echo\
    \ $vowel_positions_sorted_position_position_position_position_position_position_position\
    \ | wc -w)\n  local vowel_positions_sorted_position_position_position_position_position_position_position_position_count=$(echo\
    \ $vowel_positions_sorted_position_position_position_position_position_position_position_position\
    \ | wc -w)\n  local vowel_positions_sorted_position_position_position_position_position_position_position_position_count=$(echo\
    \ $vowel_positions_sorted_position_position_position_position_position_position_position_position_position\
    \ | wc -w)\n  local vowel_positions_sorted_position_position_position_position_position_position_position_position_position_count=$(echo\
    \ $vowel_\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl353z9nr.sh: line 34: unexpected EOF while looking for matching
    `)''

    /tmp/tmpl353z9nr.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local vowelsCount=$(echo $vowels | wc -w)\n  local encodedMessage=\"\
    \"\n  local encodedMessageLength=0\n  local encodedMessageLength2=0\n  local encodedMessageLength3=0\n\
    \  local encodedMessageLength4=0\n  local encodedMessageLength5=0\n  local encodedMessageLength6=0\n\
    \  local encodedMessageLength7=0\n  local encodedMessageLength8=0\n  local encodedMessageLength9=0\n\
    \  local encodedMessageLength10=0\n  local encodedMessageLength11=0\n  local encodedMessageLength12=0\n\
    \  local encodedMessageLength13=0\n  local encodedMessageLength14=0\n  local encodedMessageLength15=0\n\
    \  local encodedMessageLength16=0\n  local encodedMessageLength17=0\n  local encodedMessageLength18=0\n\
    \  local encodedMessageLength19=0\n  local encodedMessageLength20=0\n  local encodedMessageLength21=0\n\
    \  local encodedMessageLength22=0\n  local encodedMessageLength23=0\n  local encodedMessageLength24=0\n\
    \  local encodedMessageLength25=0\n  local encodedMessageLength26=0\n  local encodedMessageLength27=0\n\
    \  local encodedMessageLength28=0\n  local encodedMessageLength29=0\n  local encodedMessageLength30=0\n\
    \  local encodedMessageLength31=0\n  local encodedMessageLength32=0\n  local encodedMessageLength33=0\n\
    \  local encodedMessageLength34=0\n  local encodedMessageLength35=0\n  local encodedMessageLength36=0\n\
    \  local encodedMessageLength37=0\n  local encodedMessageLength38=0\n  local encodedMessageLength39=0\n\
    \  local encodedMessageLength40=0\n  local encodedMessageLength41=0\n  local encodedMessageLength42=0\n\
    \  local encodedMessageLength43=0\n  local encodedMessageLength44=0\n  local encodedMessageLength45=0\n\
    \  local encodedMessageLength46=0\n  local encodedMessageLength47=0\n  local encodedMessageLength48=0\n\
    \  local encodedMessageLength49=0\n  local encodedMessageLength50=0\n  local encodedMessageLength51=0\n\
    \  local encodedMessageLength52=0\n  local encodedMessageLength53=0\n  local encodedMessageLength54=0\n\
    \  local encodedMessageLength55=0\n  local encodedMessageLength56=0\n  local encodedMessageLength57=0\n\
    \  local encodedMessageLength58=0\n  local encodedMessageLength59=0\n  local encodedMessage\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local count=0\n    local vowelCount=0\n    local letterCount=0\n    local lastLetter=\"\
    \"\n    local lastVowel=\"\"\n    local lastLetterCount=0\n    local lastVowelCount=0\n\
    \    local lastLetterVowel=\"\"\n    local lastVowelLetterCount=0\n    local lastVowelLetterVowel=\"\
    \"\n    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n\
    \    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n  \
    \  local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n    local\
    \ lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\
    \"\n    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n\
    \    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n  \
    \  local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n    local\
    \ lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\
    \"\n    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n\
    \    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n  \
    \  local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n    local\
    \ lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\
    \"\n    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n\
    \    local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n  \
    \  local lastLetterVowelVowel=\"\"\n    local lastLetterVowelVowel=\"\"\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelsCount=0\n\
    \    local lettersCount=0\n    local encodedMessage=\"\"\n    local vowelsIndex=0\n\
    \    local lettersIndex=0\n    local encodedLetter=\"\"\n    local encodedVowel=\"\
    \"\n    local encodedLetterIndex=0\n    local encodedVowelIndex=0\n    local encodedVowelCount=0\n\
    \    local encodedLetterCount=0\n    local encodedVowelIndex2=0\n    local encodedLetterIndex2=0\n\
    \    local encodedVowelCount2=0\n    local encodedLetterCount2=0\n    local encodedVowelIndex3=0\n\
    \    local encodedLetterIndex3=0\n    local encodedVowelCount3=0\n    local encodedLetterCount3=0\n\
    \    local encodedVowelIndex4=0\n    local encodedLetterIndex4=0\n    local encodedVowelCount4=0\n\
    \    local encodedLetterCount4=0\n    local encodedVowelIndex5=0\n    local encodedLetterIndex5=0\n\
    \    local encodedVowelCount5=0\n    local encodedLetterCount5=0\n    local encodedVowelIndex6=0\n\
    \    local encodedLetterIndex6=0\n    local encodedVowelCount6=0\n    local encodedLetterCount6=0\n\
    \    local encodedVowelIndex7=0\n    local encodedLetterIndex7=0\n    local encodedVowelCount7=0\n\
    \    local encodedLetterCount7=0\n    local encodedVowelIndex8=0\n    local encodedLetterIndex8=0\n\
    \    local encodedVowelCount8=0\n    local encodedLetterCount8=0\n    local encodedVowelIndex9=0\n\
    \    local encodedLetterIndex9=0\n    local encodedVowelCount9=0\n    local encodedLetterCount9=0\n\
    \    local encodedVowelIndex10=0\n    local encodedLetterIndex10=0\n    local\
    \ encodedVowelCount10=0\n    local encodedLetterCount10=0\n    local encodedVowelIndex11=0\n\
    \    local encodedLetterIndex11=0\n    local encodedVowelCount11=0\n    local\
    \ encodedLetterCount11=0\n    local encodedVowelIndex12=0\n    local encodedLetterIndex12=0\n\
    \    local encodedVowelCount12=0\n    local encodedLetterCount12=0\n    local\
    \ encodedV\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"a e i o u y\"\n    local vowels2=\"a e i o u y\"\n    local vowels3=\"\
    a e i o u y\"\n    local vowels4=\"a e i o u y\"\n    local vowels5=\"a e i o\
    \ u y\"\n    local vowels6=\"a e i o u y\"\n    local vowels7=\"a e i o u y\"\n\
    \    local vowels8=\"a e i o u y\"\n    local vowels9=\"a e i o u y\"\n    local\
    \ vowels10=\"a e i o u y\"\n    local vowels11=\"a e i o u y\"\n    local vowels12=\"\
    a e i o u y\"\n    local vowels13=\"a e i o u y\"\n    local vowels14=\"a e i\
    \ o u y\"\n    local vowels15=\"a e i o u y\"\n    local vowels16=\"a e i o u\
    \ y\"\n    local vowels17=\"a e i o u y\"\n    local vowels18=\"a e i o u y\"\n\
    \    local vowels19=\"a e i o u y\"\n    local vowels20=\"a e i o u y\"\n    local\
    \ vowels21=\"a e i o u y\"\n    local vowels22=\"a e i o u y\"\n    local vowels23=\"\
    a e i o u y\"\n    local vowels24=\"a e i o u y\"\n    local vowels25=\"a e i\
    \ o u y\"\n    local vowels26=\"a e i o u y\"\n    local vowels27=\"a e i o u\
    \ y\"\n    local vowels28=\"a e i o u y\"\n    local vowels29=\"a e i o u y\"\n\
    \    local vowels30=\"a e i o u y\"\n    local vowels31=\"a e i o u y\"\n    local\
    \ vowels32=\"a e i o u y\"\n    local vowels33=\"a e i o u y\"\n    local vowels34=\"\
    a e i o u y\"\n    local vowels35=\"a e i o u y\"\n    local vowels36=\"a e i\
    \ o u y\"\n    local vowels37=\"a e i o u y\"\n    local vowels38=\"a e i o u\
    \ y\"\n    local vowels39=\"a e i o \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo9tdvde_.sh: line 68: unexpected EOF while looking for matching
    `"''

    /tmp/tmpo9tdvde_.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local result=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local vowel=${vowels:$i:1}\n        local letter2=${letters:$((i+1)):1}\n\
    \        local letter3=${letters:$((i+2)):1}\n        local letter4=${letters:$((i+3)):1}\n\
    \        local letter5=${letters:$((i+4)):1}\n        local letter6=${letters:$((i+5)):1}\n\
    \        local letter7=${letters:$((i+6)):1}\n        local letter8=${letters:$((i+7)):1}\n\
    \        local letter9=${letters:$((i+8)):1}\n        local letter10=${letters:$((i+9)):1}\n\
    \        local letter11=${letters:$((i+10)):1}\n        local letter12=${letters:$((i+11)):1}\n\
    \        local letter13=${letters:$((i+12)):1}\n        local letter14=${letters:$((i+13)):1}\n\
    \        local letter15=${letters:$((i+14)):1}\n        local letter16=${letters:$((i+15)):1}\n\
    \        local letter17=${letters:$((i+16)):1}\n        local letter18=${letters:$((i+17)):1}\n\
    \        local letter19=${letters:$((i+18)):1}\n        local letter20=${letters:$((i+19)):1}\n\
    \        local letter21=${letters:$((i+20)):1}\n        local letter22=${letters:$((i+21)):1}\n\
    \        local letter23=${letters:$((i+22)):1}\n        local letter24=${letters:$((i+23)):1}\n\
    \        local letter25=${letters:$((i+24)):1}\n        local letter26=${letters:$((i+25)):1}\n\
    \        local letter27=${letters:$((i+26)):1}\n        local letter28=${letters:$((i+27)):1}\n\
    \        local letter29=${letters:$((i+28)):1}\n        local letter30=${letters:$((i+29)):1}\n\
    \        local letter31=${letters:$((i+30)):1}\n        local letter32=${letters:\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjr6r6af5.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterCount\n    local currentLetterIndex2\n    local currentLetterCount2\n\
    \    local currentLetterIndex3\n    local currentLetterCount3\n    local currentLetterIndex4\n\
    \    local currentLetterCount4\n    local currentLetterIndex5\n    local currentLetterCount5\n\
    \    local currentLetterIndex6\n    local currentLetterCount6\n    local currentLetterIndex7\n\
    \    local currentLetterCount7\n    local currentLetterIndex8\n    local currentLetterCount8\n\
    \    local currentLetterIndex9\n    local currentLetterCount9\n    local currentLetterIndex10\n\
    \    local currentLetterCount10\n    local currentLetterIndex11\n    local currentLetterCount11\n\
    \    local currentLetterIndex12\n    local currentLetterCount12\n    local currentLetterIndex13\n\
    \    local currentLetterCount13\n    local currentLetterIndex14\n    local currentLetterCount14\n\
    \    local currentLetterIndex15\n    local currentLetterCount15\n    local currentLetterIndex16\n\
    \    local currentLetterCount16\n    local currentLetterIndex17\n    local currentLetterCount17\n\
    \    local currentLetterIndex18\n    local currentLetterCount18\n    local currentLetterIndex19\n\
    \    local currentLetterCount19\n    local currentLetterIndex20\n    local currentLetterCount20\n\
    \    local currentLetterIndex21\n    local currentLetterCount21\n    local currentLetterIndex22\n\
    \    local currentLetterCount22\n    local currentLetterIndex23\n    local currentLetterCount23\n\
    \    local currentLetterIndex24\n    local currentLetterCount24\n    local currentLetterIndex25\n\
    \    local currentLetterCount25\n    local currentLetterIndex26\n    local currentLetterCount26\n\
    \    local currentLetterIndex27\n    local currentLetterCount27\n    local currentLetterIndex28\n\
    \    local currentLetterCount28\n    local currentLetterIndex29\n    local currentLetterCount29\n\
    \    local currentLetterIndex30\n    local currentLetterCount30\n    local currentLetterIndex31\n\
    \    local currentLetterCount31\n    local currentLetterIndex32\n    local currentLetterCount32\n\
    \    local currentLetterIndex33\n    local currentLetterCount33\n    local currentLetterIndex34\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local vowelsCount=$(echo $vowels | wc -w)\n    local messageLength=$(echo\
    \ $message | wc -w)\n    local encodedMessage=\"\"\n    local encodedMessageLength=0\n\
    \    local encodedVowelsCount=0\n    local encodedVowelsIndex=0\n    local encodedVowelsIndex2=0\n\
    \    local encodedVowelsIndex3=0\n    local encodedVowelsIndex4=0\n    local encodedVowelsIndex5=0\n\
    \    local encodedVowelsIndex6=0\n    local encodedVowelsIndex7=0\n    local encodedVowelsIndex8=0\n\
    \    local encodedVowelsIndex9=0\n    local encodedVowelsIndex10=0\n    local\
    \ encodedVowelsIndex11=0\n    local encodedVowelsIndex12=0\n    local encodedVowelsIndex13=0\n\
    \    local encodedVowelsIndex14=0\n    local encodedVowelsIndex15=0\n    local\
    \ encodedVowelsIndex16=0\n    local encodedVowelsIndex17=0\n    local encodedVowelsIndex18=0\n\
    \    local encodedVowelsIndex19=0\n    local encodedVowelsIndex20=0\n    local\
    \ encodedVowelsIndex21=0\n    local encodedVowelsIndex22=0\n    local encodedVowelsIndex23=0\n\
    \    local encodedVowelsIndex24=0\n    local encodedVowelsIndex25=0\n    local\
    \ encodedVowelsIndex26=0\n    local encodedVowelsIndex27=0\n    local encodedVowelsIndex28=0\n\
    \    local encodedVowelsIndex29=0\n    local encodedVowelsIndex30=0\n    local\
    \ encodedVowelsIndex31=0\n    local encodedVowelsIndex32=0\n    local encodedVowelsIndex33=0\n\
    \    local encodedVowelsIndex34=0\n    local encodedVowelsIndex35=0\n    local\
    \ encodedVowelsIndex36=0\n    local encodedVowelsIndex37=0\n    local encodedVowelsIndex38=0\n\
    \    local encodedVowelsIndex39=0\n    local encodedVowelsIndex40=0\n    local\
    \ encodedVowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local currentLetter=\"\"\n    local currentVowel=\"\"\n\
    \    local currentVowelPosition=0\n    local currentVowelIndex=0\n    local currentVowelCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelCountPosition=0\n\
    \    local currentVowelPositionCountPosition=0\n    local currentVowelCountPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPosition=0\n    local currentVowelCountPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPosition=0\n    local currentVowelCountPositionPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPositionPosition=0\n    local\
    \ currentVowelCountPositionPositionPositionPositionPosition=0\n    local currentVowelPositionCountPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelCountPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelCountPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelCountPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelCountPositionPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelCountPositionPositionPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelCountPositionPositionPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelCountPositionPositionPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelCountPositionPositionPositionPositionPositionPositionPositionPositionPositionPositionPositionPosition=0\n\
    \    local currentVowelPositionCountPositionPositionPositionPositionPositionPositionPositionPositionPosition\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local vowel\n    local letter\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local vowels=\"a e i o u\
    \ y\" \n  local vowels2=\"a e i o u y\"\n  local vowels3=\"a e i o u y\"\n  local\
    \ vowels4=\"a e i o u y\"\n  local vowels5=\"a e i o u y\"\n  local vowels6=\"\
    a e i o u y\"\n  local vowels7=\"a e i o u y\"\n  local vowels8=\"a e i o u y\"\
    \n  local vowels9=\"a e i o u y\"\n  local vowels10=\"a e i o u y\"\n  local vowels11=\"\
    a e i o u y\"\n  local vowels12=\"a e i o u y\"\n  local vowels13=\"a e i o u\
    \ y\"\n  local vowels14=\"a e i o u y\"\n  local vowels15=\"a e i o u y\"\n  local\
    \ vowels16=\"a e i o u y\"\n  local vowels17=\"a e i o u y\"\n  local vowels18=\"\
    a e i o u y\"\n  local vowels19=\"a e i o u y\"\n  local vowels20=\"a e i o u\
    \ y\"\n  local vowels21=\"a e i o u y\"\n  local vowels22=\"a e i o u y\"\n  local\
    \ vowels23=\"a e i o u y\"\n  local vowels24=\"a e i o u y\"\n  local vowels25=\"\
    a e i o u y\"\n  local vowels26=\"a e i o u y\"\n  local vowels27=\"a e i o u\
    \ y\"\n  local vowels28=\"a e i o u y\"\n  local vowels29=\"a e i o u y\"\n  local\
    \ vowels30=\"a e i o u y\"\n  local vowels31=\"a e i o u y\"\n  local vowels32=\"\
    a e i o u y\"\n  local vowels33=\"a e i o u y\"\n  local vowels34=\"a e i o u\
    \ y\"\n  local vowels35=\"a e i o u y\"\n  local vowels36=\"a e i o u y\"\n  local\
    \ vowels37=\"a e i o u y\"\n  local vowels38=\"a e i o u y\"\n  local vowels39=\"\
    a e i o u y\"\n  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=''\n    local i\n    local j\n    local k\n    local vowel\n\
    \    local vowel2\n    local vowel3\n    local vowel4\n    local vowel5\n    local\
    \ vowel6\n    local vowel7\n    local vowel8\n    local vowel9\n    local vowel10\n\
    \    local vowel11\n    local vowel12\n    local vowel13\n    local vowel14\n\
    \    local vowel15\n    local vowel16\n    local vowel17\n    local vowel18\n\
    \    local vowel19\n    local vowel20\n    local vowel21\n    local vowel22\n\
    \    local vowel23\n    local vowel24\n    local vowel25\n    local vowel26\n\
    \    local vowel27\n    local vowel28\n    local vowel29\n    local vowel30\n\
    \    local vowel31\n    local vowel32\n    local vowel33\n    local vowel34\n\
    \    local vowel35\n    local vowel36\n    local vowel37\n    local vowel38\n\
    \    local vowel39\n    local vowel40\n    local vowel41\n    local vowel42\n\
    \    local vowel43\n    local vowel44\n    local vowel45\n    local vowel46\n\
    \    local vowel47\n    local vowel48\n    local vowel49\n    local vowel50\n\
    \    local vowel51\n    local vowel52\n    local vowel53\n    local vowel54\n\
    \    local vowel55\n    local vowel56\n    local vowel57\n    local vowel58\n\
    \    local vowel59\n    local vowel60\n    local vowel61\n    local vowel62\n\
    \    local vowel63\n    local vowel64\n    local vowel65\n    local vowel66\n\
    \    local vowel67\n    local vowel68\n    local vowel69\n    local vowel70\n\
    \    local vowel71\n    local vowel72\n    local vowel73\n    local vowel74\n\
    \    local vowel75\n    local vowel76\n    local vowel77\n    local vowel78\n\
    \    local vowel79\n    local vowel80\n    local vowel81\n    local vowel82\n\
    \    local vowel83\n    local vowel84\n    local vowel85\n    local vowel86\n\
    \    local vowel87\n    local vowel88\n    local vowel89\n    local vowel90\n\
    \    local vowel91\n    local vowel92\n    local vowel93\n    local vowel94\n\
    \    local vowel95\n    local vowel96\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letter2=\"\
    \"\n    local letter3=\"\"\n    local letter4=\"\"\n    local letter5=\"\"\n \
    \   local letter6=\"\"\n    local letter7=\"\"\n    local letter8=\"\"\n    local\
    \ letter9=\"\"\n    local letter10=\"\"\n    local letter11=\"\"\n    local letter12=\"\
    \"\n    local letter13=\"\"\n    local letter14=\"\"\n    local letter15=\"\"\n\
    \    local letter16=\"\"\n    local letter17=\"\"\n    local letter18=\"\"\n \
    \   local letter19=\"\"\n    local letter20=\"\"\n    local letter21=\"\"\n  \
    \  local letter22=\"\"\n    local letter23=\"\"\n    local letter24=\"\"\n   \
    \ local letter25=\"\"\n    local letter26=\"\"\n    local letter27=\"\"\n    local\
    \ letter28=\"\"\n    local letter29=\"\"\n    local letter30=\"\"\n    local letter31=\"\
    \"\n    local letter32=\"\"\n    local letter33=\"\"\n    local letter34=\"\"\n\
    \    local letter35=\"\"\n    local letter36=\"\"\n    local letter37=\"\"\n \
    \   local letter38=\"\"\n    local letter39=\"\"\n    local letter40=\"\"\n  \
    \  local letter41=\"\"\n    local letter42=\"\"\n    local letter43=\"\"\n   \
    \ local letter44=\"\"\n    local letter45=\"\"\n    local letter46=\"\"\n    local\
    \ letter47=\"\"\n    local letter48=\"\"\n    local letter49=\"\"\n    local letter50=\"\
    \"\n    local letter51=\"\"\n    local letter52=\"\"\n    local letter53=\"\"\n\
    \    local letter54=\"\"\n    local letter55=\"\"\n    local letter56=\"\"\n \
    \   local letter57=\"\"\n    local letter58=\"\"\n    local letter59=\"\"\n  \
    \  local letter60=\"\"\n    local letter61=\"\"\n    local letter62=\"\"\n   \
    \ local letter63=\"\"\n    local letter64=\"\"\n    local letter65=\"\"\n    local\
    \ letter66=\"\"\n    local letter67=\"\"\n    local letter68=\"\"\n    local letter69=\"\
    \"\n    local letter70=\"\"\n    local letter71=\"\"\n    local letter72=\"\"\n\
    \    local letter73=\"\"\n    local letter74=\"\"\n    local letter75=\"\"\n \
    \   local letter76=\"\"\n    local letter77=\"\"\n    local letter78=\"\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letterCount2=0\n\
    \    local letter2=\"\"\n    local letter3=\"\"\n    local letter4=\"\"\n    local\
    \ letter5=\"\"\n    local letter6=\"\"\n    local letter7=\"\"\n    local letter8=\"\
    \"\n    local letter9=\"\"\n    local letter10=\"\"\n    local letter11=\"\"\n\
    \    local letter12=\"\"\n    local letter13=\"\"\n    local letter14=\"\"\n \
    \   local letter15=\"\"\n    local letter16=\"\"\n    local letter17=\"\"\n  \
    \  local letter18=\"\"\n    local letter19=\"\"\n    local letter20=\"\"\n   \
    \ local letter21=\"\"\n    local letter22=\"\"\n    local letter23=\"\"\n    local\
    \ letter24=\"\"\n    local letter25=\"\"\n    local letter26=\"\"\n    local letter27=\"\
    \"\n    local letter28=\"\"\n    local letter29=\"\"\n    local letter30=\"\"\n\
    \    local letter31=\"\"\n    local letter32=\"\"\n    local letter33=\"\"\n \
    \   local letter34=\"\"\n    local letter35=\"\"\n    local letter36=\"\"\n  \
    \  local letter37=\"\"\n    local letter38=\"\"\n    local letter39=\"\"\n   \
    \ local letter40=\"\"\n    local letter41=\"\"\n    local letter42=\"\"\n    local\
    \ letter43=\"\"\n    local letter44=\"\"\n    local letter45=\"\"\n    local letter46=\"\
    \"\n    local letter47=\"\"\n    local letter48=\"\"\n    local letter49=\"\"\n\
    \    local letter50=\"\"\n    local letter51=\"\"\n    local letter52=\"\"\n \
    \   local letter53=\"\"\n    local letter54=\"\"\n    local letter55=\"\"\n  \
    \  local letter56=\"\"\n    local letter57=\"\"\n    local letter58=\"\"\n   \
    \ local letter59=\"\"\n    local letter60=\"\"\n    local letter61=\"\"\n    local\
    \ letter62=\"\"\n    local letter63=\"\"\n    local letter64=\"\"\n    local letter65=\"\
    \"\n    local letter66=\"\"\n    local letter67=\"\"\n    local letter68=\"\"\n\
    \    local letter69=\"\"\n    local letter70=\"\"\n    local letter71=\"\"\n \
    \   local letter72=\"\"\n    local letter73=\"\"\n    local letter74=\"\"\n  \
    \  local letter75=\"\"\n    local letter76=\"\"\n    local letter77\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowelCount=0\n    local\
    \ letterCount=0\n    local letter\n    local vowel\n    local letter2\n    local\
    \ letter3\n    local letter4\n    local letter5\n    local letter6\n    local\
    \ letter7\n    local letter8\n    local letter9\n    local letter10\n    local\
    \ letter11\n    local letter12\n    local letter13\n    local letter14\n    local\
    \ letter15\n    local letter16\n    local letter17\n    local letter18\n    local\
    \ letter19\n    local letter20\n    local letter21\n    local letter22\n    local\
    \ letter23\n    local letter24\n    local letter25\n    local letter26\n    local\
    \ letter27\n    local letter28\n    local letter29\n    local letter30\n    local\
    \ letter31\n    local letter32\n    local letter33\n    local letter34\n    local\
    \ letter35\n    local letter36\n    local letter37\n    local letter38\n    local\
    \ letter39\n    local letter40\n    local letter41\n    local letter42\n    local\
    \ letter43\n    local letter44\n    local letter45\n    local letter46\n    local\
    \ letter47\n    local letter48\n    local letter49\n    local letter50\n    local\
    \ letter51\n    local letter52\n    local letter53\n    local letter54\n    local\
    \ letter55\n    local letter56\n    local letter57\n    local letter58\n    local\
    \ letter59\n    local letter60\n    local letter61\n    local letter62\n    local\
    \ letter63\n    local letter64\n    local letter65\n    local letter66\n    local\
    \ letter67\n    local letter68\n    local letter69\n    local letter70\n    local\
    \ letter71\n    local letter72\n    local letter73\n    local letter74\n    local\
    \ letter75\n    local letter76\n    local letter77\n    local letter78\n    local\
    \ letter79\n    local letter80\n    local letter81\n    local letter82\n    local\
    \ letter83\n    local letter84\n    local letter85\n    local letter86\n    local\
    \ letter87\n    local letter88\n    local letter89\n    local letter90\n    local\
    \ letter91\n    local letter92\n    local letter93\n    local letter94\n\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=''\n  local vowelCount=0\n  local vowelIndex=0\n  local vowelPosition=0\n\
    \  local letterIndex=0\n  local letterPosition=0\n  local letterCount=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterCount=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterCount=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterCount=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterCount=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterCount=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterCount=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterCount=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterCount=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterCount=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterCount=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterCount=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterCount=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterCount=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterCount=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterCount=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterCount=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterCount=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterCount=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterCount\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        if [[ \"${letter}\" =~ [[:alpha:]]$ ]]; then\n\
    \            local letter=${letter^^}\n            local letter2=\"${letter:0:1}\"\
    \n            local letter3=\"${letter:1:1}\"\n            local letter4=\"${letter:2:1}\"\
    \n            local letter5=\"${letter:3:1}\"\n            local letter6=\"${letter:4:1}\"\
    \n            local letter7=\"${letter:5:1}\"\n            local letter8=\"${letter:6:1}\"\
    \n            local letter9=\"${letter:7:1}\"\n            local letter10=\"${letter:8:1}\"\
    \n            local letter11=\"${letter:9:1}\"\n            local letter12=\"\
    ${letter:10:1}\"\n            local letter13=\"${letter:11:1}\"\n            local\
    \ letter14=\"${letter:12:1}\"\n            local letter15=\"${letter:13:1}\"\n\
    \            local letter16=\"${letter:14:1}\"\n            local letter17=\"\
    ${letter:15:1}\"\n            local letter18=\"${letter:16:1}\"\n            local\
    \ letter19=\"${letter:17:1}\"\n            local letter20=\"${letter:18:1}\"\n\
    \            local letter21=\"${letter:19:1}\"\n            local letter22=\"\
    ${letter:20:1}\"\n            local letter23=\"${letter:21:1}\"\n            local\
    \ letter24=\"${letter:22:1}\"\n            local letter25=\"${letter:23:1}\"\n\
    \            local letter26=\"${letter:24:1}\"\n            local letter27=\"\
    ${letter:25:1}\"\n            local letter28=\"${letter:26:1}\"\n            local\
    \ letter29=\"${letter:27:1}\"\n            local letter30=\"${letter:28:1}\"\n\
    \            local letter31=\"${letter:29:1}\"\n            local letter32=\"\
    ${letter:30:1}\"\n            local letter33=\"${letter:31:1}\"\n            local\
    \ letter34=\"${letter:32:1}\"\n            local letter35=\"${letter:33:1}\"\n\
    \            local letter36=\"${letter:34:1}\"\n            local letter37=\"\
    ${letter:35:1}\"\n            local letter38=\"${letter:36:1}\"\n            local\
    \ letter39=\"${letter:37:1}\"\n            local letter40=\"${letter:38:1}\"\n\
    \            local letter\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpchbxxws7.sh: line 62: syntax error near unexpected token `}''

    /tmp/tmpchbxxws7.sh: line 62: `}''

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local letterIndex=0\n    local letterIndex2=0\n    local\
    \ letterCount=0\n    local letterIndex3=0\n    local letterIndex4=0\n    local\
    \ letterIndex5=0\n    local letterIndex6=0\n    local letterIndex7=0\n    local\
    \ letterIndex8=0\n    local letterIndex9=0\n    local letterIndex10=0\n    local\
    \ letterIndex11=0\n    local letterIndex12=0\n    local letterIndex13=0\n    local\
    \ letterIndex14=0\n    local letterIndex15=0\n    local letterIndex16=0\n    local\
    \ letterIndex17=0\n    local letterIndex18=0\n    local letterIndex19=0\n    local\
    \ letterIndex20=0\n    local letterIndex21=0\n    local letterIndex22=0\n    local\
    \ letterIndex23=0\n    local letterIndex24=0\n    local letterIndex25=0\n    local\
    \ letterIndex26=0\n    local letterIndex27=0\n    local letterIndex28=0\n    local\
    \ letterIndex29=0\n    local letterIndex30=0\n    local letterIndex31=0\n    local\
    \ letterIndex32=0\n    local letterIndex33=0\n    local letterIndex34=0\n    local\
    \ letterIndex35=0\n    local letterIndex36=0\n    local letterIndex37=0\n    local\
    \ letterIndex38=0\n    local letterIndex39=0\n    local letterIndex40=0\n    local\
    \ letterIndex41=0\n    local letterIndex42=0\n    local letterIndex43=0\n    local\
    \ letterIndex44=0\n    local letterIndex45=0\n    local letterIndex46=0\n    local\
    \ letterIndex47=0\n    local letterIndex48=0\n    local letterIndex49=0\n    local\
    \ letterIndex50=0\n    local letterIndex51=0\n    local letterIndex52=0\n    local\
    \ letterIndex53=0\n    local letterIndex54=0\n    local letterIndex55=0\n    local\
    \ letterIndex56=0\n    local letterIndex57=0\n    local letterIndex58=0\n    local\
    \ letterIndex59=0\n    local letterIndex60=0\n    local letterIndex61=0\n    local\
    \ letterIndex62=0\n    local letterIndex63=0\n    local letterIndex64=0\n    local\
    \ letterIndex65=0\n    local letterIndex66=0\n    local letterIndex\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x\
    \ y z\"\n  local result=\"\"\n  local count=0\n  local vowel_count=0\n  local\
    \ vowel_position=0\n  local letter_index=0\n  local letter_index2=0\n  local letter_index3=0\n\
    \  local letter_index4=0\n  local letter_index5=0\n  local letter_index6=0\n \
    \ local letter_index7=0\n  local letter_index8=0\n  local letter_index9=0\n  local\
    \ letter_index10=0\n  local letter_index11=0\n  local letter_index12=0\n  local\
    \ letter_index13=0\n  local letter_index14=0\n  local letter_index15=0\n  local\
    \ letter_index16=0\n  local letter_index17=0\n  local letter_index18=0\n  local\
    \ letter_index19=0\n  local letter_index20=0\n  local letter_index21=0\n  local\
    \ letter_index22=0\n  local letter_index23=0\n  local letter_index24=0\n  local\
    \ letter_index25=0\n  local letter_index26=0\n  local letter_index27=0\n  local\
    \ letter_index28=0\n  local letter_index29=0\n  local letter_index30=0\n  local\
    \ letter_index31=0\n  local letter_index32=0\n  local letter_index33=0\n  local\
    \ letter_index34=0\n  local letter_index35=0\n  local letter_index36=0\n  local\
    \ letter_index37=0\n  local letter_index38=0\n  local letter_index39=0\n  local\
    \ letter_index40=0\n  local letter_index41=0\n  local letter_index42=0\n  local\
    \ letter_index43=0\n  local letter_index44=0\n  local letter_index45=0\n  local\
    \ letter_index46=0\n  local letter_index47=0\n  local letter_index48=0\n  local\
    \ letter_index49=0\n  local letter_index50=0\n  local letter_index51=0\n  local\
    \ letter_index52=0\n  local letter_index53=0\n  local letter_index54=0\n  local\
    \ letter_index55=0\n  local letter_index56=0\n  local letter_index57=0\n  local\
    \ letter_index58=0\n  local letter_index59=0\n  local letter_index60=0\n  local\
    \ letter_index61=0\n  local letter_index62=0\n  local letter_index63=0\n\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local msg2=\"\"\n  local\
    \ msg3=\"\"\n  local msg4=\"\"\n  local msg5=\"\"\n  local msg6=\"\"\n  local\
    \ msg7=\"\"\n  local msg8=\"\"\n  local msg9=\"\"\n  local msg10=\"\"\n  local\
    \ msg11=\"\"\n  local msg12=\"\"\n  local msg13=\"\"\n  local msg14=\"\"\n  local\
    \ msg15=\"\"\n  local msg16=\"\"\n  local msg17=\"\"\n  local msg18=\"\"\n  local\
    \ msg19=\"\"\n  local msg20=\"\"\n  local msg21=\"\"\n  local msg22=\"\"\n  local\
    \ msg23=\"\"\n  local msg24=\"\"\n  local msg25=\"\"\n  local msg26=\"\"\n  local\
    \ msg27=\"\"\n  local msg28=\"\"\n  local msg29=\"\"\n  local msg30=\"\"\n  local\
    \ msg31=\"\"\n  local msg32=\"\"\n  local msg33=\"\"\n  local msg34=\"\"\n  local\
    \ msg35=\"\"\n  local msg36=\"\"\n  local msg37=\"\"\n  local msg38=\"\"\n  local\
    \ msg39=\"\"\n  local msg40=\"\"\n  local msg41=\"\"\n  local msg42=\"\"\n  local\
    \ msg43=\"\"\n  local msg44=\"\"\n  local msg45=\"\"\n  local msg46=\"\"\n  local\
    \ msg47=\"\"\n  local msg48=\"\"\n  local msg49=\"\"\n  local msg50=\"\"\n  local\
    \ msg51=\"\"\n  local msg52=\"\"\n  local msg53=\"\"\n  local msg54=\"\"\n  local\
    \ msg55=\"\"\n  local msg56=\"\"\n  local msg57=\"\"\n  local msg58=\"\"\n  local\
    \ msg59=\"\"\n  local msg60=\"\"\n  local msg61=\"\"\n  local msg62=\"\"\n  local\
    \ msg63=\"\"\n  local msg64=\"\"\n  local msg65=\"\"\n  local msg66=\"\"\n  local\
    \ msg67=\"\"\n  local msg68=\"\"\n  local msg69=\"\"\n  local msg70=\"\"\n  local\
    \ msg71=\"\"\n  local msg72=\"\"\n  local msg73=\"\"\n  local msg74=\"\"\n  local\
    \ msg75=\"\"\n  local msg76=\"\"\n  local msg77=\"\"\n  local msg78=\"\"\n  local\
    \ msg79=\"\"\n  local msg80=\"\"\n  local msg81=\"\"\n  local msg82=\"\"\n  local\
    \ msg83=\"\"\n  local msg84=\"\"\n  local msg85=\"\"\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsArray=($vowels)\n\
    \    local vowelsArrayCount=$(echo ${vowelsArray[@]} | wc -w)\n    local vowelsArrayIndex=0\n\
    \    local vowelsArrayIndexCount=0\n    local vowelsArrayIndexMax=$((vowelsArrayIndexCount+1))\n\
    \    local vowelsArrayIndexMin=$((vowelsArrayIndexCount-1))\n    local vowelsArrayIndexMaxIndex=$((vowelsArrayIndexMax-1))\n\
    \    local vowelsArrayIndexMinIndex=$((vowelsArrayIndexMin+1))\n    local vowelsArrayIndexMaxIndexIndex=$((vowelsArrayIndexMaxIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels=\"aeiouAEIOU\"\n    local output=\"\"\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"aeiouAEIOU\"\n    local vowels2=\"AEIOU\"\n    local vowels3=\"\
    AEIOUaeiou\"\n    local vowels4=\"AEIOUaeiouAEIOU\"\n    local vowels5=\"AEIOUaeiouAEIOUaeiou\"\
    \n    local vowels6=\"AEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels7=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels9=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels18=\"AEIOUaeiouAEIOUaeiouAEIOU\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpev1d_7da.sh: line 47: unexpected EOF while looking for matching
    `"''

    /tmp/tmpev1d_7da.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n\
    \    local vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n \
    \   local vowelIndex5=0\n    local vowelIndex6=0\n    local vowelIndex7=0\n  \
    \  local vowelIndex8=0\n    local vowelIndex9=0\n    local vowelIndex10=0\n  \
    \  local vowelIndex11=0\n    local vowelIndex12=0\n    local vowelIndex13=0\n\
    \    local vowelIndex14=0\n    local vowelIndex15=0\n    local vowelIndex16=0\n\
    \    local vowelIndex17=0\n    local vowelIndex18=0\n    local vowelIndex19=0\n\
    \    local vowelIndex20=0\n    local vowelIndex21=0\n    local vowelIndex22=0\n\
    \    local vowelIndex23=0\n    local vowelIndex24=0\n    local vowelIndex25=0\n\
    \    local vowelIndex26=0\n    local vowelIndex27=0\n    local vowelIndex28=0\n\
    \    local vowelIndex29=0\n    local vowelIndex30=0\n    local vowelIndex31=0\n\
    \    local vowelIndex32=0\n    local vowelIndex33=0\n    local vowelIndex34=0\n\
    \    local vowelIndex35=0\n    local vowelIndex36=0\n    local vowelIndex37=0\n\
    \    local vowelIndex38=0\n    local vowelIndex39=0\n    local vowelIndex40=0\n\
    \    local vowelIndex41=0\n    local vowelIndex42=0\n    local vowelIndex43=0\n\
    \    local vowelIndex44=0\n    local vowelIndex45=0\n    local vowelIndex46=0\n\
    \    local vowelIndex47=0\n    local vowelIndex48=0\n    local vowelIndex49=0\n\
    \    local vowelIndex50=0\n    local vowelIndex51=0\n    local vowelIndex52=0\n\
    \    local vowelIndex53=0\n    local vowelIndex54=0\n    local vowelIndex55=0\n\
    \    local vowelIndex56=0\n    local vowelIndex57=0\n    local vowelIndex58=0\n\
    \    local vowelIndex59=0\n    local vowelIndex60=0\n    local vowelIndex61=0\n\
    \    local vowelIndex62=0\n    local vowelIndex63=0\n    local vowelIndex64=0\n\
    \    local vowelIndex65=0\n    local vowelIndex66=0\n    local vowelIndex67=0\n\
    \    local vowelIndex68=0\n    local vowelIndex69=0\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local vowelsArray=($vowels)\n    local lettersArray=($letters)\n\
    \    local vowelsCount=0\n    local lettersCount=0\n    local encodedMessage=\"\
    \"\n    local encodedLetter=\"\"\n    local encodedVowel=\"\"\n    local encodedLetterIndex=0\n\
    \    local encodedVowelIndex=0\n    local encodedVowelIndex2=0\n    local encodedLetterIndex2=0\n\
    \    local encodedVowelIndex3=0\n    local encodedLetterIndex3=0\n    local encodedVowelIndex4=0\n\
    \    local encodedLetterIndex4=0\n    local encodedVowelIndex5=0\n    local encodedLetterIndex5=0\n\
    \    local encodedVowelIndex6=0\n    local encodedLetterIndex6=0\n    local encodedVowelIndex7=0\n\
    \    local encodedLetterIndex7=0\n    local encodedVowelIndex8=0\n    local encodedLetterIndex8=0\n\
    \    local encodedVowelIndex9=0\n    local encodedLetterIndex9=0\n    local encodedVowelIndex10=0\n\
    \    local encodedLetterIndex10=0\n    local encodedVowelIndex11=0\n    local\
    \ encodedLetterIndex11=0\n    local encodedVowelIndex12=0\n    local encodedLetterIndex12=0\n\
    \    local encodedVowelIndex13=0\n    local encodedLetterIndex13=0\n    local\
    \ encodedVowelIndex14=0\n    local encodedLetterIndex14=0\n    local encodedVowelIndex15=0\n\
    \    local encodedLetterIndex15=0\n    local encodedVowelIndex16=0\n    local\
    \ encodedLetterIndex16=0\n    local encodedVowelIndex17=0\n    local encodedLetterIndex17=0\n\
    \    local encodedVowelIndex18=0\n    local encodedLetterIndex18=0\n    local\
    \ encodedVowelIndex19=0\n    local encodedLetterIndex19=0\n    local encodedVowelIndex20=0\n\
    \    local encodedLetterIndex20=0\n    local encodedVowelIndex21=0\n    local\
    \ encodedLetterIndex21=0\n    local encodedVowelIndex22=0\n    local encodedLetterIndex22=0\n\
    \    local encodedVowelIndex23=0\n    local encodedLetterIndex23=0\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local vowel=${vowels:$i:1}\n        local letter2=${letters:$((i+1)):1}\n\
    \        local letter3=${letters:$((i+2)):1}\n        local letter4=${letters:$((i+3)):1}\n\
    \        local letter5=${letters:$((i+4)):1}\n        local letter6=${letters:$((i+5)):1}\n\
    \        local letter7=${letters:$((i+6)):1}\n        local letter8=${letters:$((i+7)):1}\n\
    \        local letter9=${letters:$((i+8)):1}\n        local letter10=${letters:$((i+9)):1}\n\
    \        local letter11=${letters:$((i+10)):1}\n        local letter12=${letters:$((i+11)):1}\n\
    \        local letter13=${letters:$((i+12)):1}\n        local letter14=${letters:$((i+13)):1}\n\
    \        local letter15=${letters:$((i+14)):1}\n        local letter16=${letters:$((i+15)):1}\n\
    \        local letter17=${letters:$((i+16)):1}\n        local letter18=${letters:$((i+17)):1}\n\
    \        local letter19=${letters:$((i+18)):1}\n        local letter20=${letters:$((i+19)):1}\n\
    \        local letter21=${letters:$((i+20)):1}\n        local letter22=${letters:$((i+21)):1}\n\
    \        local letter23=${letters:$((i+22)):1}\n        local letter24=${letters:$((i+23)):1}\n\
    \        local letter25=${letters:$((i+24)):1}\n        local letter26=${letters:$((i+25)):1}\n\
    \        local letter27=${letters:$((i+26)):1}\n        local letter28=${letters:$((i+27)):1}\n\
    \        local letter29=${letters:$((i+28)):1}\n        local letter30=${letters:$((i+29)):1}\n\
    \        local letter31=${letters:$((i+30)):1}\n        local letter32=${letters:\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjr6r6af5.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n\
    \  local B\n  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n\
    \  local I\n  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n\
    \  local P\n  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n\
    \  local W\n  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n\
    \  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n\
    \  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n\
    \  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local vowelCount=0\n    local vowelIndex=0\n    local currentVowel\n \
    \   local currentLetter\n    local currentLetterIndex\n    local currentLetterCount\n\
    \    local currentLetterIndex2\n    local currentLetterCount2\n    local currentLetterIndex3\n\
    \    local currentLetterCount3\n    local currentLetterIndex4\n    local currentLetterCount4\n\
    \    local currentLetterIndex5\n    local currentLetterCount5\n    local currentLetterIndex6\n\
    \    local currentLetterCount6\n    local currentLetterIndex7\n    local currentLetterCount7\n\
    \    local currentLetterIndex8\n    local currentLetterCount8\n    local currentLetterIndex9\n\
    \    local currentLetterCount9\n    local currentLetterIndex10\n    local currentLetterCount10\n\
    \    local currentLetterIndex11\n    local currentLetterCount11\n    local currentLetterIndex12\n\
    \    local currentLetterCount12\n    local currentLetterIndex13\n    local currentLetterCount13\n\
    \    local currentLetterIndex14\n    local currentLetterCount14\n    local currentLetterIndex15\n\
    \    local currentLetterCount15\n    local currentLetterIndex16\n    local currentLetterCount16\n\
    \    local currentLetterIndex17\n    local currentLetterCount17\n    local currentLetterIndex18\n\
    \    local currentLetterCount18\n    local currentLetterIndex19\n    local currentLetterCount19\n\
    \    local currentLetterIndex20\n    local currentLetterCount20\n    local currentLetterIndex21\n\
    \    local currentLetterCount21\n    local currentLetterIndex22\n    local currentLetterCount22\n\
    \    local currentLetterIndex23\n    local currentLetterCount23\n    local currentLetterIndex24\n\
    \    local currentLetterCount24\n    local currentLetterIndex25\n    local currentLetterCount25\n\
    \    local currentLetterIndex26\n    local currentLetterCount26\n    local currentLetterIndex27\n\
    \    local currentLetterCount27\n    local currentLetterIndex28\n    local currentLetterCount28\n\
    \    local currentLetterIndex29\n    local currentLetterCount29\n    local currentLetterIndex30\n\
    \    local currentLetterCount30\n    local currentLetterIndex31\n    local currentLetterCount31\n\
    \    local currentLetterIndex32\n    local currentLetterCount32\n    local current\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowel_count=$(echo $message | sed 's/[aeiouAEIOU]//g' | wc -w)\n \
    \   local vowel_position=$(echo $message | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | wc -w)\n    local new_message=\"\"\n    local new_vowel=\"\"\n    local new_vowel_position=0\n\
    \    local new_vowel_count=0\n    local new_vowel_positions=\"\"\n    local new_vowel_counts=\"\
    \"\n    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\
    \n    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_positions_str=\"\"\n    local new_vowel_counts_str=\"\"\n\
    \    local new_vowel_\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowel_count=0\n  local vowel_position=0\n  local\
    \ vowel_position2=0\n  local letter_index=0\n  local letter_index2=0\n  local\
    \ letter_index3=0\n  local letter_index4=0\n  local letter_index5=0\n  local letter_index6=0\n\
    \  local letter_index7=0\n  local letter_index8=0\n  local letter_index9=0\n \
    \ local letter_index10=0\n  local letter_index11=0\n  local letter_index12=0\n\
    \  local letter_index13=0\n  local letter_index14=0\n  local letter_index15=0\n\
    \  local letter_index16=0\n  local letter_index17=0\n  local letter_index18=0\n\
    \  local letter_index19=0\n  local letter_index20=0\n  local letter_index21=0\n\
    \  local letter_index22=0\n  local letter_index23=0\n  local letter_index24=0\n\
    \  local letter_index25=0\n  local letter_index26=0\n  local letter_index27=0\n\
    \  local letter_index28=0\n  local letter_index29=0\n  local letter_index30=0\n\
    \  local letter_index31=0\n  local letter_index32=0\n  local letter_index33=0\n\
    \  local letter_index34=0\n  local letter_index35=0\n  local letter_index36=0\n\
    \  local letter_index37=0\n  local letter_index38=0\n  local letter_index39=0\n\
    \  local letter_index40=0\n  local letter_index41=0\n  local letter_index42=0\n\
    \  local letter_index43=0\n  local letter_index44=0\n  local letter_index45=0\n\
    \  local letter_index46=0\n  local letter_index47=0\n  local letter_index48=0\n\
    \  local letter_index49=0\n  local letter_index50=0\n  local letter_index51=0\n\
    \  local letter_index52=0\n  local letter_index53=0\n  local letter_index54=0\n\
    \  local letter_index55=0\n  local letter_index56=0\n  local letter_index57=0\n\
    \  local letter_index58=0\n  local letter_index59=0\n  local letter_index60=0\n\
    \  local letter_index61=0\n  local letter_index62=0\n  local letter_index63=0\n\
    \  local letter_index64=0\n  local letter_index65=0\n  local letter_index66=0\n\
    \  local letter_index67=0\n  \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouAEIOU\"\n  local output=\"\"\n  local i\n  local j\n \
    \ local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouAEIOU\"\n  local result=\"\"\n  local count=0\n  local\
    \ vowelIndex=0\n  local vowelCount=0\n  local letterIndex=0\n  local letterCount=0\n\
    \  local letter\n  local vowel\n  local letterIndex2\n  local letterCount2\n \
    \ local letter2\n  local letterIndex3\n  local letterCount3\n  local letter3\n\
    \  local letterIndex4\n  local letterCount4\n  local letter4\n  local letterIndex5\n\
    \  local letterCount5\n  local letter5\n  local letterIndex6\n  local letterCount6\n\
    \  local letter6\n  local letterIndex7\n  local letterCount7\n  local letter7\n\
    \  local letterIndex8\n  local letterCount8\n  local letter8\n  local letterIndex9\n\
    \  local letterCount9\n  local letter9\n  local letterIndex10\n  local letterCount10\n\
    \  local letter10\n  local letterIndex11\n  local letterCount11\n  local letter11\n\
    \  local letterIndex12\n  local letterCount12\n  local letter12\n  local letterIndex13\n\
    \  local letterCount13\n  local letter13\n  local letterIndex14\n  local letterCount14\n\
    \  local letter14\n  local letterIndex15\n  local letterCount15\n  local letter15\n\
    \  local letterIndex16\n  local letterCount16\n  local letter16\n  local letterIndex17\n\
    \  local letterCount17\n  local letter17\n  local letterIndex18\n  local letterCount18\n\
    \  local letter18\n  local letterIndex19\n  local letterCount19\n  local letter19\n\
    \  local letterIndex20\n  local letterCount20\n  local letter20\n  local letterIndex21\n\
    \  local letterCount21\n  local letter21\n  local letterIndex22\n  local letterCount22\n\
    \  local letter22\n  local letterIndex23\n  local letterCount23\n  local letter23\n\
    \  local letterIndex24\n  local letterCount24\n  local letter24\n  local letterIndex25\n\
    \  local letterCount25\n  local letter25\n  local letterIndex26\n  local letterCount26\n\
    \  local letter26\n  local letterIndex27\n  local letterCount27\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowel_positions=$(echo \"$message\" | sed 's/[aeiouAEIOU]//g' | sed\
    \ 's/[aeiouAEIOU][aeiouAEIOU]//g' | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g' | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][ae\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzov22ms9.sh: line 17: unexpected EOF while looking for matching
    `''''

    /tmp/tmpzov22ms9.sh: line 34: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local vowelCount=0\n    local lastVowel=\"\"\n    local lastLetter=\"\"\
    \n    local currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\
    \"\n    local currentVowel3=\"\"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentVowel6=\"\"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentVowel9=\"\"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentVowel12=\"\"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentVowel15=\"\"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentVowel18=\"\"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentVowel21=\"\"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentVowel24=\"\"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentVowel27=\"\"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\
    \"\n    local currentVowel30=\"\"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\
    \"\n    local currentVowel33=\"\"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\
    \"\n    local currentVowel36=\"\"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\
    \"\n    local currentVowel39=\"\"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\
    \"\n    local currentVowel42=\"\"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\
    \"\n    local currentVowel45=\"\"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\
    \"\n    local currentVowel48=\"\"\n    local currentVowel49=\"\"\n    local currentVowel50\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        if [[ \"${vowels}\" =~ \"${letter}\" ]]; then\n\
    \            letter=${letter:0:1}\n        fi\n        result+=\"${letter}\"\n\
    \    done\n    echo \"${result}\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local vowels_2=\"a e i o u y A\"\n    local vowels_3=\"a e\
    \ i o u y A E I O U Y\"\n    local vowels_4=\"a e i o u y A E I O U Y A E I O\
    \ U Y\"\n    local vowels_5=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y\"\
    \n    local vowels_6=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O\
    \ U Y\"\n    local vowels_7=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y\
    \ A E I O U Y A E I O U Y\"\n    local vowels_8=\"a e i o u y A E I O U Y A E\
    \ I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_9=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y A E I O U Y\"\n    local vowels_10=\"a e i o u y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n\
    \    local vowels_11=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O\
    \ U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local\
    \ vowels_12=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E\
    \ I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_13=\"\
    a e i o u y A E I O \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgknk4h0u.sh: line 41: unexpected EOF while looking for matching
    `"''

    /tmp/tmpgknk4h0u.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local vowels_2=\"a e i o u y\"\n    local vowels_3=\"a e i\
    \ o u y\"\n    local vowels_4=\"a e i o u y\"\n    local vowels_5=\"a e i o u\
    \ y\"\n    local vowels_6=\"a e i o u y\"\n    local vowels_7=\"a e i o u y\"\n\
    \    local vowels_8=\"a e i o u y\"\n    local vowels_9=\"a e i o u y\"\n    local\
    \ vowels_10=\"a e i o u y\"\n    local vowels_11=\"a e i o u y\"\n    local vowels_12=\"\
    a e i o u y\"\n    local vowels_13=\"a e i o u y\"\n    local vowels_14=\"a e\
    \ i o u y\"\n    local vowels_15=\"a e i o u y\"\n    local vowels_16=\"a e i\
    \ o u y\"\n    local vowels_17=\"a e i o u y\"\n    local vowels_18=\"a e i o\
    \ u y\"\n    local vowels_19=\"a e i o u y\"\n    local vowels_20=\"a e i o u\
    \ y\"\n    local vowels_21=\"a e i o u y\"\n    local vowels_22=\"a e i o u y\"\
    \n    local vowels_23=\"a e i o u y\"\n    local vowels_24=\"a e i o u y\"\n \
    \   local vowels_25=\"a e i o u y\"\n    local vowels_26=\"a e i o u y\"\n   \
    \ local vowels_27=\"a e i o u y\"\n    local vowels_28=\"a e i o u y\"\n    local\
    \ vowels_29=\"a e i o u y\"\n    local vowels_30=\"a e i o u y\"\n    local vowels_31=\"\
    a e i o u y\"\n    local vowels_32=\"a e i o u y\"\n    local vowels_33=\"a e\
    \ i o u y\"\n    local vowels_34=\"a e i o u y\"\n    local vowels_35=\"a e i\
    \ o u y\"\n    local vowels_36=\"a e i o u y\"\n    local vowels_37=\"a e i o\
    \ u y\"\n    local vowels_38=\"a e i o u y\"\n    local vowels_39=\"a e i o u\
    \ y\"\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local msg2=\"\"\n  local\
    \ vowels=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels2=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels3=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels4=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels5=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels6=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels7=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels8=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels9=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels10=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels11=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels12=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels13=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels14=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels15=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels16=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels17=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels18=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels19=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels20=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels21=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels22=\"a e i o u y\" # these are the vowels in the english alphabet\n  local\
    \ vowels23=\"a e i o u y\" # these are the vowels in the english \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local letterIndex=0\n\
    \  local letterCount=0\n  local letter\n  local letterCount2\n  local letter2\n\
    \  local letter3\n  local letter4\n  local letter5\n  local letter6\n  local letter7\n\
    \  local letter8\n  local letter9\n  local letter10\n  local letter11\n  local\
    \ letter12\n  local letter13\n  local letter14\n  local letter15\n  local letter16\n\
    \  local letter17\n  local letter18\n  local letter19\n  local letter20\n  local\
    \ letter21\n  local letter22\n  local letter23\n  local letter24\n  local letter25\n\
    \  local letter26\n  local letter27\n  local letter28\n  local letter29\n  local\
    \ letter30\n  local letter31\n  local letter32\n  local letter33\n  local letter34\n\
    \  local letter35\n  local letter36\n  local letter37\n  local letter38\n  local\
    \ letter39\n  local letter40\n  local letter41\n  local letter42\n  local letter43\n\
    \  local letter44\n  local letter45\n  local letter46\n  local letter47\n  local\
    \ letter48\n  local letter49\n  local letter50\n  local letter51\n  local letter52\n\
    \  local letter53\n  local letter54\n  local letter55\n  local letter56\n  local\
    \ letter57\n  local letter58\n  local letter59\n  local letter60\n  local letter61\n\
    \  local letter62\n  local letter63\n  local letter64\n  local letter65\n  local\
    \ letter66\n  local letter67\n  local letter68\n  local letter69\n  local letter70\n\
    \  local letter71\n  local letter72\n  local letter73\n  local letter74\n  local\
    \ letter75\n  local letter76\n  local letter77\n  local letter78\n  local letter79\n\
    \  local letter80\n  local letter81\n  local letter82\n  local letter83\n  local\
    \ letter84\n  local letter85\n  local letter86\n  local letter87\n  local letter88\n\
    \  local letter89\n  local letter90\n  local letter91\n  local letter92\n  \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i\
    \ o u y\"\n    local vowel_count=$(echo $vowels | wc -w)\n    local vowel_positions=$(echo\
    \ $vowels | awk '{print $1}')\n    local vowel_positions_count=$(echo $vowel_positions\
    \ | wc -w)\n    local vowel_positions_array=($(echo $vowel_positions))\n    local\
    \ vowel_positions_array_count=$(echo $vowel_positions_array | wc -w)\n    local\
    \ vowel_positions_array_element=$(echo $vowel_positions_array[1])\n    local vowel_positions_array_element_count=$(echo\
    \ $vowel_positions_array_element | wc -w)\n    local vowel_positions_array_element_position=$(echo\
    \ $vowel_positions_array_element | awk '{print $1}')\n    local vowel_positions_array_element_position_count=$(echo\
    \ $vowel_positions_array_element_position | wc -w)\n    local vowel_positions_array_element_position_element=$(echo\
    \ $vowel_positions_array_element_position | awk '{print $1}')\n    local vowel_positions_array_element_position_element_count=$(echo\
    \ $vowel_positions_array_element_position_element | wc -w)\n    local vowel_positions_array_element_position_element_element=$(echo\
    \ $vowel_positions_array_element_position_element | awk '{print $1}')\n    local\
    \ vowel_positions_array_element_position_element_element_count=$(echo $vowel_positions_array_element_position_element_element\
    \ | wc -w)\n    local vowel_positions_array_element_position_element_element_element=$(echo\
    \ $vowel_positions_array_element_position_element_element | awk '{print $1}')\n\
    \    local vowel_positions_array_element_position_element_element_element_count=$(echo\
    \ $vowel_positions_array_element_position_element_element_element | wc -w)\n \
    \   local vowel_positions_array_element_position_element_element_element_element=$(echo\
    \ $vowel_positions_array_element_position_element_element_element | awk '{print\
    \ $1}')\n    local vowel_positions_array_element_position_element_element_element_element_count=$(echo\
    \ $vowel_positions_array_element_position_element_element_element_element | wc\
    \ -w)\n    local vowel_positions_array_element_position_element_element_element_element_element=$(echo\
    \ $vowel_positions_array_element_position_element_element_element_element | awk\
    \ '{print $1}')\n    local vowel_positions_array_element_position_element_element_element_element_count=$(echo\
    \ $vowel_positions_array_element_position_element_element_element_element | wc\
    \ -w)\n    local vowel_positions_array_element_position_element_element_element_element_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=''\n  local i\n  local j\n  local k\n  local l\n  local m\n \
    \ local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local vowelIndex=0\n    local letterToSwap=\"\"\n    local\
    \ vowelToSwap=\"\"\n    local swappedLetter=\"\"\n    local swappedVowel=\"\"\n\
    \    local swappedLetterIndex=0\n    local swappedVowelIndex=0\n    local swappedLetterCount=0\n\
    \    local swappedVowelCount=0\n    local swappedLetterToSwap=\"\"\n    local\
    \ swappedVowelToSwap=\"\"\n    local swappedLetterToSwapIndex=0\n    local swappedVowelToSwapIndex=0\n\
    \    local swappedLetterToSwapCount=0\n    local swappedVowelToSwapCount=0\n \
    \   local swappedLetterToSwapIndex2=0\n    local swappedVowelToSwapIndex2=0\n\
    \    local swappedLetterToSwapCount2=0\n    local swappedVowelToSwapCount2=0\n\
    \    local swappedLetterToSwapIndex3=0\n    local swappedVowelToSwapIndex3=0\n\
    \    local swappedLetterToSwapCount3=0\n    local swappedVowelToSwapCount3=0\n\
    \    local swappedLetterToSwapIndex4=0\n    local swappedVowelToSwapIndex4=0\n\
    \    local swappedLetterToSwapCount4=0\n    local swappedVowelToSwapCount4=0\n\
    \    local swappedLetterToSwapIndex5=0\n    local swappedVowelToSwapIndex5=0\n\
    \    local swappedLetterToSwapCount5=0\n    local swappedVowelToSwapCount5=0\n\
    \    local swappedLetterToSwapIndex6=0\n    local swappedVowelToSwapIndex6=0\n\
    \    local swappedLetterToSwapCount6=0\n    local swappedVowelToSwapCount6=0\n\
    \    local swappedLetterToSwapIndex7=0\n    local swappedVowelToSwapIndex7=0\n\
    \    local swappedLetterToSwapCount7=0\n    local swappedVowelToSwapCount7=0\n\
    \    local swappedLetterToSwapIndex8=0\n    local swappedVowel\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local newmsg=\"\"\n    local vowelcount=0\n    local vowelindex=0\n    local\
    \ vowelchar=\"\"\n    local newvowel=\"\"\n    local newvowelchar=\"\"\n    local\
    \ newvowelindex=0\n    local newvowelcount=0\n    local newvowelcharcount=0\n\
    \    local newvowelcount2=0\n    local newvowelcount3=0\n    local newvowelcount4=0\n\
    \    local newvowelcount5=0\n    local newvowelcount6=0\n    local newvowelcount7=0\n\
    \    local newvowelcount8=0\n    local newvowelcount9=0\n    local newvowelcount10=0\n\
    \    local newvowelcount11=0\n    local newvowelcount12=0\n    local newvowelcount13=0\n\
    \    local newvowelcount14=0\n    local newvowelcount15=0\n    local newvowelcount16=0\n\
    \    local newvowelcount17=0\n    local newvowelcount18=0\n    local newvowelcount19=0\n\
    \    local newvowelcount20=0\n    local newvowelcount21=0\n    local newvowelcount22=0\n\
    \    local newvowelcount23=0\n    local newvowelcount24=0\n    local newvowelcount25=0\n\
    \    local newvowelcount26=0\n    local newvowelcount27=0\n    local newvowelcount28=0\n\
    \    local newvowelcount29=0\n    local newvowelcount30=0\n    local newvowelcount31=0\n\
    \    local newvowelcount32=0\n    local newvowelcount33=0\n    local newvowelcount34=0\n\
    \    local newvowelcount35=0\n    local newvowelcount36=0\n    local newvowelcount37=0\n\
    \    local newvowelcount38=0\n    local newvowelcount39=0\n    local newvowelcount40=0\n\
    \    local newvowelcount41=0\n    local newvowelcount42=0\n    local newvowelcount43=0\n\
    \    local newvowelcount44=0\n    local newvowelcount45=0\n    local newvowelcount46=0\n\
    \    local newvowelcount47=0\n    local newvowelcount48=0\n    local newvowelcount49=0\n\
    \    local newvowelcount50=0\n    local newvowelcount51=0\n    local newvowelcount52=0\n\
    \    local newvowelcount53=0\n    local newvowelcount54=0\n    local newvowelcount55=0\n\
    \    local newvowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local result=\"\"\n  local vowel_count=0\n  local letter_count=0\n  local\
    \ letter_index=0\n  local vowel_index=0\n  local letter_to_replace=\"\"\n  local\
    \ vowel_to_replace=\"\"\n  local letter_to_add=\"\"\n  local vowel_to_add=\"\"\
    \n  local letter_to_remove=\"\"\n  local vowel_to_remove=\"\"\n  local letter_to_add2=\"\
    \"\n  local vowel_to_add2=\"\"\n  local letter_to_remove2=\"\"\n  local vowel_to_remove2=\"\
    \"\n  local letter_to_add3=\"\"\n  local vowel_to_add3=\"\"\n  local letter_to_remove3=\"\
    \"\n  local vowel_to_remove3=\"\"\n  local letter_to_add4=\"\"\n  local vowel_to_add4=\"\
    \"\n  local letter_to_remove4=\"\"\n  local vowel_to_remove4=\"\"\n  local letter_to_add5=\"\
    \"\n  local vowel_to_add5=\"\"\n  local letter_to_remove5=\"\"\n  local vowel_to_remove5=\"\
    \"\n  local letter_to_add6=\"\"\n  local vowel_to_add6=\"\"\n  local letter_to_remove6=\"\
    \"\n  local vowel_to_remove6=\"\"\n  local letter_to_add7=\"\"\n  local vowel_to_add7=\"\
    \"\n  local letter_to_remove7=\"\"\n  local vowel_to_remove7=\"\"\n  local letter_to_add8=\"\
    \"\n  local vowel_to_add8=\"\"\n  local letter_to_remove8=\"\"\n  local vowel_to_remove8=\"\
    \"\n  local letter_to_add9=\"\"\n  local vowel_to_add9=\"\"\n  local letter_to_remove9=\"\
    \"\n  local vowel_to_remove9=\"\"\n  local letter_to_add10=\"\"\n  local vowel_to_add10=\"\
    \"\n  local letter_to_remove10=\"\"\n  local vowel_to_remove10=\"\"\n  local letter_to_add11=\"\
    \"\n  local vowel_to_add11=\"\"\n  local letter_to_remove11=\"\"\n  local vowel_to_remove11=\"\
    \"\n  local letter_to_add12=\"\"\n  local vowel_to_add12=\"\"\n  local letter_to_remove12=\"\
    \"\n  local vowel_to_remove12=\"\"\n  local letter_to_add13=\"\"\n  local vowel_to_add13=\"\
    \"\n  local letter_to_remove13=\"\"\n  local vowel_to_remove13=\"\"\n  local letter_to_add14=\"\
    \"\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local output=\"\"\n  local vowelCount=0\n  local letterCount=0\n  local\
    \ currentLetter=\"\"\n  local currentVowel=\"\"\n  local currentVowel2=\"\"\n\
    \  local currentVowel3=\"\"\n  local currentVowel4=\"\"\n  local currentVowel5=\"\
    \"\n  local currentVowel6=\"\"\n  local currentVowel7=\"\"\n  local currentVowel8=\"\
    \"\n  local currentVowel9=\"\"\n  local currentVowel10=\"\"\n  local currentVowel11=\"\
    \"\n  local currentVowel12=\"\"\n  local currentVowel13=\"\"\n  local currentVowel14=\"\
    \"\n  local currentVowel15=\"\"\n  local currentVowel16=\"\"\n  local currentVowel17=\"\
    \"\n  local currentVowel18=\"\"\n  local currentVowel19=\"\"\n  local currentVowel20=\"\
    \"\n  local currentVowel21=\"\"\n  local currentVowel22=\"\"\n  local currentVowel23=\"\
    \"\n  local currentVowel24=\"\"\n  local currentVowel25=\"\"\n  local currentVowel26=\"\
    \"\n  local currentVowel27=\"\"\n  local currentVowel28=\"\"\n  local currentVowel29=\"\
    \"\n  local currentVowel30=\"\"\n  local currentVowel31=\"\"\n  local currentVowel32=\"\
    \"\n  local currentVowel33=\"\"\n  local currentVowel34=\"\"\n  local currentVowel35=\"\
    \"\n  local currentVowel36=\"\"\n  local currentVowel37=\"\"\n  local currentVowel38=\"\
    \"\n  local currentVowel39=\"\"\n  local currentVowel40=\"\"\n  local currentVowel41=\"\
    \"\n  local currentVowel42=\"\"\n  local currentVowel43=\"\"\n  local currentVowel44=\"\
    \"\n  local currentVowel45=\"\"\n  local currentVowel46=\"\"\n  local currentVowel47=\"\
    \"\n  local currentVowel48=\"\"\n  local currentVowel49=\"\"\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local currentLetter=\"\"\n    local currentVowel=\"\"\n\
    \    local currentVowelPosition=0\n    local currentVowelIndex=0\n    local currentVowelCount=0\n\
    \    local currentVowelPositionIndex=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentVowelPositionIndexCount=0\n\
    \    local currentVowelPositionIndexCount=0\n    local currentV\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local vowelsCount=$(echo $vowels | wc -w)\n  local lettersCount=$(echo\
    \ $letters | wc -w)\n  local vowelsIndex=$(echo $vowels | awk '{print $1}')\n\
    \  local lettersIndex=$(echo $letters | awk '{print $1}')\n  local vowelsLetter=$(echo\
    \ $vowels | awk '{print $2}')\n  local lettersLetter=$(echo $letters | awk '{print\
    \ $2}')\n  local vowelsLetterIndex=$(echo $vowels | awk '{print $3}')\n  local\
    \ lettersLetterIndex=$(echo $letters | awk '{print $3}')\n  local vowelsLetterLetter=$(echo\
    \ $vowels | awk '{print $4}')\n  local lettersLetterLetter=$(echo $letters | awk\
    \ '{print $4}')\n  local vowelsLetterLetterIndex=$(echo $vowels | awk '{print\
    \ $5}')\n  local lettersLetterLetterIndex=$(echo $letters | awk '{print $5}')\n\
    \  local vowelsLetterLetterLetter=$(echo $vowels | awk '{print $6}')\n  local\
    \ lettersLetterLetter=$(echo $letters | awk '{print $6}')\n  local vowelsLetterLetterLetterIndex=$(echo\
    \ $vowels | awk '{print $7}')\n  local lettersLetterLetterIndex=$(echo $letters\
    \ | awk '{print $7}')\n  local vowelsLetterLetterLetterLetter=$(echo $vowels |\
    \ awk '{print $8}')\n  local lettersLetterLetterLetter=$(echo $letters | awk '{print\
    \ $8}')\n  local vowelsLetterLetterLetterIndex=$(echo $vowels | awk '{print $9}')\n\
    \  local lettersLetterLetterIndex=$(echo $letters | awk '{print $9}')\n  local\
    \ vowelsLetterLetterLetter=$(echo $vowels | awk '{print $10}')\n  local lettersLetterLetterLetter=$(echo\
    \ $letters | awk '{print $10}')\n  local vowelsLetterLetterLetterIndex=$(echo\
    \ $vowels | awk '{print $11}')\n  local lettersLetterLetterIndex=$(echo $letters\
    \ | awk '{print $11}')\n  local vowelsLetterLetterLetterLetter=$(echo $vowels\
    \ | awk '{print $12}')\n  local lettersLetterLetterLetter=$(echo $letters | awk\
    \ '{print $12}')\n  local vowelsLetterLetterLetterIndex=$(echo $vowels | awk '{print\
    \ $13}')\n  local lettersLetterLetter\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $message | tr [a-z] [A-Z])\n    local letter_positions=$(echo $message | tr\
    \ [A-Z] [a-z])\n    local letter_to_replace=$(echo $message | tr [a-z] [A-Z])\n\
    \    local letter_to_replace_positions=$(echo $message | tr [A-Z] [a-z])\n   \
    \ local letter_to_replace_positions_length=$(echo $letter_to_replace_positions\
    \ | wc -l)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_length\
    \ | bc)\n    local letter_to_replace_positions_length=$(echo $letter_to_replace_positions_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2fba8gcp.sh: line 42: unexpected EOF while looking for matching
    `)''

    /tmp/tmp2fba8gcp.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local nextLetter=${message:$((i+1)):1}\n   \
    \     if [[ ${letter} == ${nextLetter} ]]; then\n            letter=${vowels:$((${#vowels}-1)):1}\n\
    \        fi\n        output+=\"${letter}\"\n    done\n    echo \"$output\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowelIndex=0\n    local vowelCount=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter\n    local letterCount2\n\
    \    local letter2\n    local letter3\n    local letter4\n    local letter5\n\
    \    local letter6\n    local letter7\n    local letter8\n    local letter9\n\
    \    local letter10\n    local letter11\n    local letter12\n    local letter13\n\
    \    local letter14\n    local letter15\n    local letter16\n    local letter17\n\
    \    local letter18\n    local letter19\n    local letter20\n    local letter21\n\
    \    local letter22\n    local letter23\n    local letter24\n    local letter25\n\
    \    local letter26\n    local letter27\n    local letter28\n    local letter29\n\
    \    local letter30\n    local letter31\n    local letter32\n    local letter33\n\
    \    local letter34\n    local letter35\n    local letter36\n    local letter37\n\
    \    local letter38\n    local letter39\n    local letter40\n    local letter41\n\
    \    local letter42\n    local letter43\n    local letter44\n    local letter45\n\
    \    local letter46\n    local letter47\n    local letter48\n    local letter49\n\
    \    local letter50\n    local letter51\n    local letter52\n    local letter53\n\
    \    local letter54\n    local letter55\n    local letter56\n    local letter57\n\
    \    local letter58\n    local letter59\n    local letter60\n    local letter61\n\
    \    local letter62\n    local letter63\n    local letter64\n    local letter65\n\
    \    local letter66\n    local letter67\n    local letter68\n    local letter69\n\
    \    local letter70\n    local letter71\n    local letter72\n    local letter73\n\
    \    local letter74\n    local letter75\n    local letter76\n    local letter77\n\
    \    local letter78\n    local letter79\n    local letter80\n    local letter81\n\
    \    local letter82\n    local letter83\n    local letter84\n    local letter85\n\
    \    local letter86\n    local letter87\n    local letter88\n    local letter89\n\
    \    local letter90\n    local letter91\n    local letter92\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i\
    \ o u y\"\n    local vowels_2=\"a e i o u y\"\n    local vowels_3=\"a e i o u\
    \ y\"\n    local vowels_4=\"a e i o u y\"\n    local vowels_5=\"a e i o u y\"\n\
    \    local vowels_6=\"a e i o u y\"\n    local vowels_7=\"a e i o u y\"\n    local\
    \ vowels_8=\"a e i o u y\"\n    local vowels_9=\"a e i o u y\"\n    local vowels_10=\"\
    a e i o u y\"\n    local vowels_11=\"a e i o u y\"\n    local vowels_12=\"a e\
    \ i o u y\"\n    local vowels_13=\"a e i o u y\"\n    local vowels_14=\"a e i\
    \ o u y\"\n    local vowels_15=\"a e i o u y\"\n    local vowels_16=\"a e i o\
    \ u y\"\n    local vowels_17=\"a e i o u y\"\n    local vowels_18=\"a e i o u\
    \ y\"\n    local vowels_19=\"a e i o u y\"\n    local vowels_20=\"a e i o u y\"\
    \n    local vowels_21=\"a e i o u y\"\n    local vowels_22=\"a e i o u y\"\n \
    \   local vowels_23=\"a e i o u y\"\n    local vowels_24=\"a e i o u y\"\n   \
    \ local vowels_25=\"a e i o u y\"\n    local vowels_26=\"a e i o u y\"\n    local\
    \ vowels_27=\"a e i o u y\"\n    local vowels_28=\"a e i o u y\"\n    local vowels_29=\"\
    a e i o u y\"\n    local vowels_30=\"a e i o u y\"\n    local vowels_31=\"a e\
    \ i o u y\"\n    local vowels_32=\"a e i o u y\"\n    local vowels_33=\"a e i\
    \ o u y\"\n    local vowels_34=\"a e i o u y\"\n    local vowels_35=\"a e i o\
    \ u y\"\n    local vowels_36=\"a e i o u y\"\n    local vowels_37=\"a e i o u\
    \ y\"\n    local vowels_38=\"a e i o u y\"\n    local vowels_39=\"a e i o u y\"\
    \n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"\
    mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"\
    This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw\
    \ WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local encodedMessage=\"\"\n    local vowelIndex=0\n    local vowelPosition=0\n\
    \    local encodedVowel=\"\"\n    local encodedVowelPosition=0\n    local encodedVowelPositionIndex=0\n\
    \    local encodedVowelPositionIndex2=0\n    local encodedVowelPositionIndex3=0\n\
    \    local encodedVowelPositionIndex4=0\n    local encodedVowelPositionIndex5=0\n\
    \    local encodedVowelPositionIndex6=0\n    local encodedVowelPositionIndex7=0\n\
    \    local encodedVowelPositionIndex8=0\n    local encodedVowelPositionIndex9=0\n\
    \    local encodedVowelPositionIndex10=0\n    local encodedVowelPositionIndex11=0\n\
    \    local encodedVowelPositionIndex12=0\n    local encodedVowelPositionIndex13=0\n\
    \    local encodedVowelPositionIndex14=0\n    local encodedVowelPositionIndex15=0\n\
    \    local encodedVowelPositionIndex16=0\n    local encodedVowelPositionIndex17=0\n\
    \    local encodedVowelPositionIndex18=0\n    local encodedVowelPositionIndex19=0\n\
    \    local encodedVowelPositionIndex20=0\n    local encodedVowelPositionIndex21=0\n\
    \    local encodedVowelPositionIndex22=0\n    local encodedVowelPositionIndex23=0\n\
    \    local encodedVowelPositionIndex24=0\n    local encodedVowelPositionIndex25=0\n\
    \    local encodedVowelPositionIndex26=0\n    local encodedVowelPositionIndex27=0\n\
    \    local encodedVowelPositionIndex28=0\n    local encodedVowelPositionIndex29=0\n\
    \    local encodedVowelPositionIndex30=0\n    local encodedVowelPositionIndex31=0\n\
    \    local encodedVowelPositionIndex32=0\n    local encodedVowelPositionIndex33=0\n\
    \    local encodedVowelPositionIndex34=0\n    local encodedVowelPositionIndex35=0\n\
    \    local encodedVowelPositionIndex36=0\n    local encodedVowelPositionIndex37=0\n\
    \    local encodedVowelPositionIndex38=0\n    local encodedVowelPositionIndex39=0\n\
    \    local encodedVowelPositionIndex40=0\n    local encodedVowelPositionIndex41=0\n\
    \    local encodedVowelPositionIndex42=0\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n\
    \        local letter=${message:$i:1}\n        if [[ ${letter:0:1} == \"a\" ]];\
    \ then\n            letter=${letter:1}\n        elif [[ ${letter:0:1} == \"e\"\
    \ ]]; then\n            letter=${letter:1}\n        elif [[ ${letter:0:1} == \"\
    i\" ]]; then\n            letter=${letter:1}\n        elif [[ ${letter:0:1} ==\
    \ \"o\" ]]; then\n            letter=${letter:1}\n        elif [[ ${letter:0:1}\
    \ == \"u\" ]]; then\n            letter=${letter:1}\n        elif [[ ${letter:0:1}\
    \ == \"y\" ]]; then\n            letter=${letter:1}\n        fi\n        if [[\
    \ ${letter:0:1} == \"a\" ]]; then\n            letter=${letter:1}\n        elif\
    \ [[ ${letter:0:1} == \"e\" ]]; then\n            letter=${letter:1}\n       \
    \ elif [[ ${letter:0:1} == \"i\" ]]; then\n            letter=${letter:1}\n  \
    \      elif [[ ${letter:0:1} == \"o\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"u\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"y\" ]]; then\n            letter=${letter:1}\n\
    \        fi\n        if [[ ${letter:0:1} == \"a\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"e\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"i\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"o\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"u\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"y\" ]]; then\n            letter=${letter:1}\n\
    \        fi\n        if [[ ${letter:0:1} == \"a\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"e\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:0:1} == \"i\" ]]; then\n            letter=${letter:1}\n\
    \        elif [[ ${letter:\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5il8bfzd.sh: line 67: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmp5il8bfzd.sh: line 67: syntax error near `}''

    /tmp/tmp5il8bfzd.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local vowelsCount=$(echo $vowels | wc -w)\n    local lettersCount=$(echo\
    \ $letters | wc -w)\n    local vowelsIndex=0\n    local lettersIndex=0\n    local\
    \ encodedMessage=\"\"\n    local encodedLetter=\"\"\n    local encodedVowel=\"\
    \"\n    local encodedLetterIndex=0\n    local encodedVowelIndex=0\n    local encodedVowelCount=0\n\
    \    local encodedVowelIndex2=0\n    local encodedVowelIndex3=0\n    local encodedVowelIndex4=0\n\
    \    local encodedVowelIndex5=0\n    local encodedVowelIndex6=0\n    local encodedVowelIndex7=0\n\
    \    local encodedVowelIndex8=0\n    local encodedVowelIndex9=0\n    local encodedVowelIndex10=0\n\
    \    local encodedVowelIndex11=0\n    local encodedVowelIndex12=0\n    local encodedVowelIndex13=0\n\
    \    local encodedVowelIndex14=0\n    local encodedVowelIndex15=0\n    local encodedVowelIndex16=0\n\
    \    local encodedVowelIndex17=0\n    local encodedVowelIndex18=0\n    local encodedVowelIndex19=0\n\
    \    local encodedVowelIndex20=0\n    local encodedVowelIndex21=0\n    local encodedVowelIndex22=0\n\
    \    local encodedVowelIndex23=0\n    local encodedVowelIndex24=0\n    local encodedVowelIndex25=0\n\
    \    local encodedVowelIndex26=0\n    local encodedVowelIndex27=0\n    local encodedVowelIndex28=0\n\
    \    local encodedVowelIndex29=0\n    local encodedVowelIndex30=0\n    local encodedVowelIndex31=0\n\
    \    local encodedVowelIndex32=0\n    local encodedVowelIndex33=0\n    local encodedVowelIndex34=0\n\
    \    local encodedVowelIndex35=0\n    local encodedVowelIndex36=0\n    local encodedVowelIndex37=0\n\
    \    local encodedVowelIndex38=0\n    local encodedVowelIndex39\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local result=\"\"\n  local vowelCount=0\n  local letterCount=0\n  local\
    \ currentLetter=\"\"\n  local currentVowel=\"\"\n  local currentVowel2=\"\"\n\
    \  local currentVowel3=\"\"\n  local currentVowel4=\"\"\n  local currentVowel5=\"\
    \"\n  local currentVowel6=\"\"\n  local currentVowel7=\"\"\n  local currentVowel8=\"\
    \"\n  local currentVowel9=\"\"\n  local currentVowel10=\"\"\n  local currentVowel11=\"\
    \"\n  local currentVowel12=\"\"\n  local currentVowel13=\"\"\n  local currentVowel14=\"\
    \"\n  local currentVowel15=\"\"\n  local currentVowel16=\"\"\n  local currentVowel17=\"\
    \"\n  local currentVowel18=\"\"\n  local currentVowel19=\"\"\n  local currentVowel20=\"\
    \"\n  local currentVowel21=\"\"\n  local currentVowel22=\"\"\n  local currentVowel23=\"\
    \"\n  local currentVowel24=\"\"\n  local currentVowel25=\"\"\n  local currentVowel26=\"\
    \"\n  local currentVowel27=\"\"\n  local currentVowel28=\"\"\n  local currentVowel29=\"\
    \"\n  local currentVowel30=\"\"\n  local currentVowel31=\"\"\n  local currentVowel32=\"\
    \"\n  local currentVowel33=\"\"\n  local currentVowel34=\"\"\n  local currentVowel35=\"\
    \"\n  local currentVowel36=\"\"\n  local currentVowel37=\"\"\n  local currentVowel38=\"\
    \"\n  local currentVowel39=\"\"\n  local currentVowel40=\"\"\n  local currentVowel41=\"\
    \"\n  local currentVowel42=\"\"\n  local currentVowel43=\"\"\n  local currentVowel44=\"\
    \"\n  local currentVowel45=\"\"\n  local currentVowel46=\"\"\n  local currentVowel47=\"\
    \"\n  local currentVowel48=\"\"\n  local currentVowel49=\"\"\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowel_position\n    local\
    \ vowel_position2\n    local letter\n    local letter2\n    local letter3\n  \
    \  local letter4\n    local letter5\n    local letter6\n    local letter7\n  \
    \  local letter8\n    local letter9\n    local letter10\n    local letter11\n\
    \    local letter12\n    local letter13\n    local letter14\n    local letter15\n\
    \    local letter16\n    local letter17\n    local letter18\n    local letter19\n\
    \    local letter20\n    local letter21\n    local letter22\n    local letter23\n\
    \    local letter24\n    local letter25\n    local letter26\n    local letter27\n\
    \    local letter28\n    local letter29\n    local letter30\n    local letter31\n\
    \    local letter32\n    local letter33\n    local letter34\n    local letter35\n\
    \    local letter36\n    local letter37\n    local letter38\n    local letter39\n\
    \    local letter40\n    local letter41\n    local letter42\n    local letter43\n\
    \    local letter44\n    local letter45\n    local letter46\n    local letter47\n\
    \    local letter48\n    local letter49\n    local letter50\n    local letter51\n\
    \    local letter52\n    local letter53\n    local letter54\n    local letter55\n\
    \    local letter56\n    local letter57\n    local letter58\n    local letter59\n\
    \    local letter60\n    local letter61\n    local letter62\n    local letter63\n\
    \    local letter64\n    local letter65\n    local letter66\n    local letter67\n\
    \    local letter68\n    local letter69\n    local letter70\n    local letter71\n\
    \    local letter72\n    local letter73\n    local letter74\n    local letter75\n\
    \    local letter76\n    local letter77\n    local letter78\n    local letter79\n\
    \    local letter80\n    local letter81\n    local letter82\n    local letter83\n\
    \    local letter84\n    local letter85\n    local letter86\n    local letter87\n\
    \    local letter88\n    local letter89\n    local letter90\n    local letter91\n\
    \    local letter92\n    local letter93\n    local letter94\n    local letter\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local vowel\n  local vowel_position\n  local letter\n\
    \  local letter_index\n  local letter_index2\n  local letter_index3\n  local letter_index4\n\
    \  local letter_index5\n  local letter_index6\n  local letter_index7\n  local\
    \ letter_index8\n  local letter_index9\n  local letter_index10\n  local letter_index11\n\
    \  local letter_index12\n  local letter_index13\n  local letter_index14\n  local\
    \ letter_index15\n  local letter_index16\n  local letter_index17\n  local letter_index18\n\
    \  local letter_index19\n  local letter_index20\n  local letter_index21\n  local\
    \ letter_index22\n  local letter_index23\n  local letter_index24\n  local letter_index25\n\
    \  local letter_index26\n  local letter_index27\n  local letter_index28\n  local\
    \ letter_index29\n  local letter_index30\n  local letter_index31\n  local letter_index32\n\
    \  local letter_index33\n  local letter_index34\n  local letter_index35\n  local\
    \ letter_index36\n  local letter_index37\n  local letter_index38\n  local letter_index39\n\
    \  local letter_index40\n  local letter_index41\n  local letter_index42\n  local\
    \ letter_index43\n  local letter_index44\n  local letter_index45\n  local letter_index46\n\
    \  local letter_index47\n  local letter_index48\n  local letter_index49\n  local\
    \ letter_index50\n  local letter_index51\n  local letter_index52\n  local letter_index53\n\
    \  local letter_index54\n  local letter_index55\n  local letter_index56\n  local\
    \ letter_index57\n  local letter_index58\n  local letter_index59\n  local letter_index60\n\
    \  local letter_index61\n  local letter_index62\n  local letter_index63\n  local\
    \ letter_index64\n  local letter_index65\n  local letter_index66\n  local letter_index67\n\
    \  local letter_index68\n  local letter_index69\n  local letter_index70\n  local\
    \ letter_index71\n  local letter_index72\n  local letter_index73\n  local letter_index74\n\
    \  local letter_index75\n  local letter_index76\n  local letter_index77\n  local\
    \ letter_index78\n  local letter_index79\n  local letter\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelCount=0\n \
    \   local letterCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedLetterCount=0\n    local encodedVowelCount=0\n\
    \    local encodedVowelCount2=0\n    local encodedVowelCount3=0\n    local encodedVowelCount4=0\n\
    \    local encodedVowelCount5=0\n    local encodedVowelCount6=0\n    local encodedVowelCount7=0\n\
    \    local encodedVowelCount8=0\n    local encodedVowelCount9=0\n    local encodedVowelCount10=0\n\
    \    local encodedVowelCount11=0\n    local encodedVowelCount12=0\n    local encodedVowelCount13=0\n\
    \    local encodedVowelCount14=0\n    local encodedVowelCount15=0\n    local encodedVowelCount16=0\n\
    \    local encodedVowelCount17=0\n    local encodedVowelCount18=0\n    local encodedVowelCount19=0\n\
    \    local encodedVowelCount20=0\n    local encodedVowelCount21=0\n    local encodedVowelCount22=0\n\
    \    local encodedVowelCount23=0\n    local encodedVowelCount24=0\n    local encodedVowelCount25=0\n\
    \    local encodedVowelCount26=0\n    local encodedVowelCount27=0\n    local encodedVowelCount28=0\n\
    \    local encodedVowelCount29=0\n    local encodedVowelCount30=0\n    local encodedVowelCount31=0\n\
    \    local encodedVowelCount32=0\n    local encodedVowelCount33=0\n    local encodedVowelCount34=0\n\
    \    local encodedVowelCount35=0\n    local encodedVowelCount36=0\n    local encodedVowelCount37=0\n\
    \    local encodedVowelCount38=0\n    local encodedVowelCount39=0\n    local encodedVowelCount40=0\n\
    \    local encodedVowelCount41=0\n    local encodedVowelCount42=0\n    local encodedVowelCount43=0\n\
    \    local encodedVowelCount44=0\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local letters_2=\"bcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiou\"\n    local\
    \ vowels_4=\"AEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiou\"\n    local vowels_6=\"\
    AEIOUaeiou\"\n    local vowels_7=\"AEIOUaeiou\"\n    local vowels_8=\"AEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiou\"\n    local vowels_10=\"AEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiou\"\n    local vowels_12=\"AEIOUaeiou\"\n    local vowels_13=\"\
    AEIOUaeiou\"\n    local vowels_14=\"AEIOUaeiou\"\n    local vowels_15=\"AEIOUaeiou\"\
    \n    local vowels_16=\"AEIOUaeiou\"\n    local vowels_17=\"AEIOUaeiou\"\n   \
    \ local vowels_18=\"AEIOUaeiou\"\n    local vowels_19=\"AEIOUaeiou\"\n    local\
    \ vowels_20=\"AEIOUaeiou\"\n    local vowels_21=\"AEIOUaeiou\"\n    local vowels_22=\"\
    AEIOUaeiou\"\n    local vowels_23=\"AEIOUaeiou\"\n    local vowels_24=\"AEIOUaeiou\"\
    \n    local vowels_25=\"AEIOUaeiou\"\n    local vowels_26=\"AEIOUaeiou\"\n   \
    \ local vowels_27=\"AEIOUaeiou\"\n    local vowels_28=\"AEIOUaeiou\"\n    local\
    \ vowels_29=\"AEIOUaeiou\"\n    local vowels_30=\"AEIOUaeiou\"\n    local vowels_31=\"\
    AEIOUaeiou\"\n    local vowels_32=\"AEIOUaeiou\"\n    local vowels_33=\"AEIOUaeiou\"\
    \n    local vowels_34=\"AEIOUaeiou\"\n    local vowels_35=\"AEIOUaeiou\"\n   \
    \ local vowels_36=\"AEIOUaeiou\"\n    local vowel\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterCount\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local i\n    local j\n    local k\n    local vowel\n\
    \    local letter\n    local letter2\n    local letter3\n    local letter4\n \
    \   local letter5\n    local letter6\n    local letter7\n    local letter8\n \
    \   local letter9\n    local letter10\n    local letter11\n    local letter12\n\
    \    local letter13\n    local letter14\n    local letter15\n    local letter16\n\
    \    local letter17\n    local letter18\n    local letter19\n    local letter20\n\
    \    local letter21\n    local letter22\n    local letter23\n    local letter24\n\
    \    local letter25\n    local letter26\n    local letter27\n    local letter28\n\
    \    local letter29\n    local letter30\n    local letter31\n    local letter32\n\
    \    local letter33\n    local letter34\n    local letter35\n    local letter36\n\
    \    local letter37\n    local letter38\n    local letter39\n    local letter40\n\
    \    local letter41\n    local letter42\n    local letter43\n    local letter44\n\
    \    local letter45\n    local letter46\n    local letter47\n    local letter48\n\
    \    local letter49\n    local letter50\n    local letter51\n    local letter52\n\
    \    local letter53\n    local letter54\n    local letter55\n    local letter56\n\
    \    local letter57\n    local letter58\n    local letter59\n    local letter60\n\
    \    local letter61\n    local letter62\n    local letter63\n    local letter64\n\
    \    local letter65\n    local letter66\n    local letter67\n    local letter68\n\
    \    local letter69\n    local letter70\n    local letter71\n    local letter72\n\
    \    local letter73\n    local letter74\n    local letter75\n    local letter76\n\
    \    local letter77\n    local letter78\n    local letter79\n    local letter80\n\
    \    local letter81\n    local letter82\n    local letter83\n    local letter84\n\
    \    local letter85\n    local letter86\n    local letter87\n    local letter88\n\
    \    local letter89\n    local letter90\n    local letter91\n    local letter92\n\
    \    local letter93\n    local letter94\n    local letter95\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"a e i o u y\" \n    local vowels2=\"a e i o u y\"\n    local\
    \ vowels3=\"a e i o u y\"\n    local vowels4=\"a e i o u y\"\n    local vowels5=\"\
    a e i o u y\"\n    local vowels6=\"a e i o u y\"\n    local vowels7=\"a e i o\
    \ u y\"\n    local vowels8=\"a e i o u y\"\n    local vowels9=\"a e i o u y\"\n\
    \    local vowels10=\"a e i o u y\"\n    local vowels11=\"a e i o u y\"\n    local\
    \ vowels12=\"a e i o u y\"\n    local vowels13=\"a e i o u y\"\n    local vowels14=\"\
    a e i o u y\"\n    local vowels15=\"a e i o u y\"\n    local vowels16=\"a e i\
    \ o u y\"\n    local vowels17=\"a e i o u y\"\n    local vowels18=\"a e i o u\
    \ y\"\n    local vowels19=\"a e i o u y\"\n    local vowels20=\"a e i o u y\"\n\
    \    local vowels21=\"a e i o u y\"\n    local vowels22=\"a e i o u y\"\n    local\
    \ vowels23=\"a e i o u y\"\n    local vowels24=\"a e i o u y\"\n    local vowels25=\"\
    a e i o u y\"\n    local vowels26=\"a e i o u y\"\n    local vowels27=\"a e i\
    \ o u y\"\n    local vowels28=\"a e i o u y\"\n    local vowels29=\"a e i o u\
    \ y\"\n    local vowels30=\"a e i o u y\"\n    local vowels31=\"a e i o u y\"\n\
    \    local vowels32=\"a e i o u y\"\n    local vowels33=\"a e i o u y\"\n    local\
    \ vowels34=\"a e i o u y\"\n    local vowels35=\"a e i o u y\"\n    local vowels36=\"\
    a e i o u y\"\n    local vowels37=\"a e i o u y\"\n    local vowels38=\"a e i\
    \ o u y\"\n    local vowels39=\"a e i \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsi5j19q6.sh: line 68: unexpected EOF while looking for matching
    `"''

    /tmp/tmpsi5j19q6.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local nextLetter=${message:$(($i+1)):1}\n  \
    \      if [[ ${vowels} =~ $letter ]]; then\n            letter=${letter:0:1}\n\
    \            letter=${letter:1:1}\n        fi\n        if [[ ${vowels} =~ $nextLetter\
    \ ]]; then\n            nextLetter=${nextLetter:0:1}\n            nextLetter=${nextLetter:1:1}\n\
    \        fi\n        output+=$letter\n        output+=$nextLetter\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local output=\"\"\n  local count=0\n  local vowel_index=0\n  local letter_index=0\n\
    \  local vowel_letter=\"\"\n  local letter_letter=\"\"\n  local vowel_letter_index=0\n\
    \  local letter_letter_index=0\n  local vowel_letter_letter=\"\"\n  local letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_index=0\n  local letter_letter_letter_index=0\n\
    \  local vowel_letter_letter_letter=\"\"\n  local letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter=\"\"\n  local letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter_letter=\"\"\n  local letter_letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter_letter_letter=\"\"\n  local letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter_letter_letter_letter=\"\"\n  local\
    \ letter_letter_letter_letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n  local vowel_letter_letter_\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local msg2=\"\"\n  local\
    \ vowels=\"a e i o u y\" \n  local vowels2=\"a e i o u y\"\n  local vowels3=\"\
    a e i o u y\"\n  local vowels4=\"a e i o u y\"\n  local vowels5=\"a e i o u y\"\
    \n  local vowels6=\"a e i o u y\"\n  local vowels7=\"a e i o u y\"\n  local vowels8=\"\
    a e i o u y\"\n  local vowels9=\"a e i o u y\"\n  local vowels10=\"a e i o u y\"\
    \n  local vowels11=\"a e i o u y\"\n  local vowels12=\"a e i o u y\"\n  local\
    \ vowels13=\"a e i o u y\"\n  local vowels14=\"a e i o u y\"\n  local vowels15=\"\
    a e i o u y\"\n  local vowels16=\"a e i o u y\"\n  local vowels17=\"a e i o u\
    \ y\"\n  local vowels18=\"a e i o u y\"\n  local vowels19=\"a e i o u y\"\n  local\
    \ vowels20=\"a e i o u y\"\n  local vowels21=\"a e i o u y\"\n  local vowels22=\"\
    a e i o u y\"\n  local vowels23=\"a e i o u y\"\n  local vowels24=\"a e i o u\
    \ y\"\n  local vowels25=\"a e i o u y\"\n  local vowels26=\"a e i o u y\"\n  local\
    \ vowels27=\"a e i o u y\"\n  local vowels28=\"a e i o u y\"\n  local vowels29=\"\
    a e i o u y\"\n  local vowels30=\"a e i o u y\"\n  local vowels31=\"a e i o u\
    \ y\"\n  local vowels32=\"a e i o u y\"\n  local vowels33=\"a e i o u y\"\n  local\
    \ vowels34=\"a e i o u y\"\n  local vowels35=\"a e i o u y\"\n  local vowels36=\"\
    a e i o u y\"\n  local vowels37=\"a e i o u y\"\n  local vowels38=\"a e i o u\
    \ y\"\n  local vowels39=\"a e i \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmc65k5_9.sh: line 68: unexpected EOF while looking for matching
    `"''

    /tmp/tmpmc65k5_9.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n \
    \ local vowelPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local\
    \ letterCount=0\n  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n\
    \  local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n  local\
    \ letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n  local letterIndex=0\n\
    \  local letterPosition=0\n  local letterIndex=0\n  local letterPosition=0\n \
    \ local letterIndex=0\n  local letterPosition=0\n  local letterIndex\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local count=0\n    local vowelCount=0\n    local currentVowel\n    local\
    \ currentLetter\n    local currentLetterCount\n    local currentLetterIndex\n\
    \    local currentLetterIndex2\n    local currentLetterIndex3\n    local currentLetterIndex4\n\
    \    local currentLetterIndex5\n    local currentLetterIndex6\n    local currentLetterIndex7\n\
    \    local currentLetterIndex8\n    local currentLetterIndex9\n    local currentLetterIndex10\n\
    \    local currentLetterIndex11\n    local currentLetterIndex12\n    local currentLetterIndex13\n\
    \    local currentLetterIndex14\n    local currentLetterIndex15\n    local currentLetterIndex16\n\
    \    local currentLetterIndex17\n    local currentLetterIndex18\n    local currentLetterIndex19\n\
    \    local currentLetterIndex20\n    local currentLetterIndex21\n    local currentLetterIndex22\n\
    \    local currentLetterIndex23\n    local currentLetterIndex24\n    local currentLetterIndex25\n\
    \    local currentLetterIndex26\n    local currentLetterIndex27\n    local currentLetterIndex28\n\
    \    local currentLetterIndex29\n    local currentLetterIndex30\n    local currentLetterIndex31\n\
    \    local currentLetterIndex32\n    local currentLetterIndex33\n    local currentLetterIndex34\n\
    \    local currentLetterIndex35\n    local currentLetterIndex36\n    local currentLetterIndex37\n\
    \    local currentLetterIndex38\n    local currentLetterIndex39\n    local currentLetterIndex40\n\
    \    local currentLetterIndex41\n    local currentLetterIndex42\n    local currentLetterIndex43\n\
    \    local currentLetterIndex44\n    local currentLetterIndex45\n    local currentLetterIndex46\n\
    \    local currentLetterIndex47\n    local currentLetterIndex48\n    local currentLetterIndex49\n\
    \    local currentLetterIndex50\n    local currentLetterIndex51\n    local currentLetterIndex52\n\
    \    local currentLetterIndex53\n    local currentLetterIndex54\n    local currentLetterIndex55\n\
    \    local currentLetterIndex56\n    local currentLetterIndex57\n    local currentLetterIndex58\n\
    \    local currentLetterIndex59\n    local currentLetterIndex60\n    local currentLetterIndex61\n\
    \    local currentLetterIndex62\n    local currentLetterIndex63\n    local currentLetter\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelCount=0\n \
    \   local letterCount=0\n    local encodedMessage=\"\"\n    local vowelPosition=0\n\
    \    local letterPosition=0\n    local letterToSwap=\"\"\n    local swappedLetter=\"\
    \"\n    local swappedVowel=\"\"\n    local swappedVowelPosition=0\n    local swappedLetterPosition=0\n\
    \    local swappedVowelPositionCount=0\n    local swappedLetterPositionCount=0\n\
    \    local swappedVowelPositionCount2=0\n    local swappedLetterPositionCount2=0\n\
    \    local swappedVowelPositionCount3=0\n    local swappedLetterPositionCount3=0\n\
    \    local swappedVowelPositionCount4=0\n    local swappedLetterPositionCount4=0\n\
    \    local swappedVowelPositionCount5=0\n    local swappedLetterPositionCount5=0\n\
    \    local swappedVowelPositionCount6=0\n    local swappedLetterPositionCount6=0\n\
    \    local swappedVowelPositionCount7=0\n    local swappedLetterPositionCount7=0\n\
    \    local swappedVowelPositionCount8=0\n    local swappedLetterPositionCount8=0\n\
    \    local swappedVowelPositionCount9=0\n    local swappedLetterPositionCount9=0\n\
    \    local swappedVowelPositionCount10=0\n    local swappedLetterPositionCount10=0\n\
    \    local swappedVowelPositionCount11=0\n    local swappedLetterPositionCount11=0\n\
    \    local swappedVowelPositionCount12=0\n    local swappedLetterPositionCount12=0\n\
    \    local swappedVowelPositionCount13=0\n    local swappedLetterPositionCount13=0\n\
    \    local swappedVowelPositionCount14=0\n    local swappedLetterPositionCount14=0\n\
    \    local swappedVowelPositionCount15=0\n    local swappedLetterPositionCount15=0\n\
    \    local swappedVowelPositionCount16=0\n    local swappedLetterPositionCount16=0\n\
    \    local swappedVowelPositionCount17=0\n    local swappedLetterPositionCount17=0\n\
    \    local swappedVowelPositionCount18=0\n    local swappedLetterPositionCount18=0\n\
    \    local swappedVowelPositionCount19=0\n    \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local count=0\n    local vowel\n    local letter\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letter2=\"\
    \"\n    local letter3=\"\"\n    local letter4=\"\"\n    local letter5=\"\"\n \
    \   local letter6=\"\"\n    local letter7=\"\"\n    local letter8=\"\"\n    local\
    \ letter9=\"\"\n    local letter10=\"\"\n    local letter11=\"\"\n    local letter12=\"\
    \"\n    local letter13=\"\"\n    local letter14=\"\"\n    local letter15=\"\"\n\
    \    local letter16=\"\"\n    local letter17=\"\"\n    local letter18=\"\"\n \
    \   local letter19=\"\"\n    local letter20=\"\"\n    local letter21=\"\"\n  \
    \  local letter22=\"\"\n    local letter23=\"\"\n    local letter24=\"\"\n   \
    \ local letter25=\"\"\n    local letter26=\"\"\n    local letter27=\"\"\n    local\
    \ letter28=\"\"\n    local letter29=\"\"\n    local letter30=\"\"\n    local letter31=\"\
    \"\n    local letter32=\"\"\n    local letter33=\"\"\n    local letter34=\"\"\n\
    \    local letter35=\"\"\n    local letter36=\"\"\n    local letter37=\"\"\n \
    \   local letter38=\"\"\n    local letter39=\"\"\n    local letter40=\"\"\n  \
    \  local letter41=\"\"\n    local letter42=\"\"\n    local letter43=\"\"\n   \
    \ local letter44=\"\"\n    local letter45=\"\"\n    local letter46=\"\"\n    local\
    \ letter47=\"\"\n    local letter48=\"\"\n    local letter49=\"\"\n    local letter50=\"\
    \"\n    local letter51=\"\"\n    local letter52=\"\"\n    local letter53=\"\"\n\
    \    local letter54=\"\"\n    local letter55=\"\"\n    local letter56=\"\"\n \
    \   local letter57=\"\"\n    local letter58=\"\"\n    local letter59=\"\"\n  \
    \  local letter60=\"\"\n    local letter61=\"\"\n    local letter62=\"\"\n   \
    \ local letter63=\"\"\n    local letter64=\"\"\n    local letter65=\"\"\n    local\
    \ letter66=\"\"\n    local letter67=\"\"\n    local letter68=\"\"\n    local letter69=\"\
    \"\n    local letter70=\"\"\n    local letter71=\"\"\n    local letter72=\"\"\n\
    \    local letter73=\"\"\n    local letter74=\"\"\n    local letter75=\"\"\n \
    \   local letter76=\"\"\n    local letter77=\"\"\n    local letter78=\"\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouAEIOU\"\n  local output=\"\"\n  local i\n  local j\n \
    \ local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local result=\"\"\n  local\
    \ count=0\n  local vowel\n  local letter\n  local letter2\n  local letter3\n \
    \ local letter4\n  local letter5\n  local letter6\n  local letter7\n  local letter8\n\
    \  local letter9\n  local letter10\n  local letter11\n  local letter12\n  local\
    \ letter13\n  local letter14\n  local letter15\n  local letter16\n  local letter17\n\
    \  local letter18\n  local letter19\n  local letter20\n  local letter21\n  local\
    \ letter22\n  local letter23\n  local letter24\n  local letter25\n  local letter26\n\
    \  local letter27\n  local letter28\n  local letter29\n  local letter30\n  local\
    \ letter31\n  local letter32\n  local letter33\n  local letter34\n  local letter35\n\
    \  local letter36\n  local letter37\n  local letter38\n  local letter39\n  local\
    \ letter40\n  local letter41\n  local letter42\n  local letter43\n  local letter44\n\
    \  local letter45\n  local letter46\n  local letter47\n  local letter48\n  local\
    \ letter49\n  local letter50\n  local letter51\n  local letter52\n  local letter53\n\
    \  local letter54\n  local letter55\n  local letter56\n  local letter57\n  local\
    \ letter58\n  local letter59\n  local letter60\n  local letter61\n  local letter62\n\
    \  local letter63\n  local letter64\n  local letter65\n  local letter66\n  local\
    \ letter67\n  local letter68\n  local letter69\n  local letter70\n  local letter71\n\
    \  local letter72\n  local letter73\n  local letter74\n  local letter75\n  local\
    \ letter76\n  local letter77\n  local letter78\n  local letter79\n  local letter80\n\
    \  local letter81\n  local letter82\n  local letter83\n  local letter84\n  local\
    \ letter85\n  local letter86\n  local letter87\n  local letter88\n  local letter89\n\
    \  local letter90\n  local letter91\n  local letter92\n  local letter93\n\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentLetter=\"\"\n    local previousLetter=\"\"\n    local currentVowel=\"\
    \"\n    local previousVowel=\"\"\n    local currentVowelIndex=0\n    local previousVowelIndex=0\n\
    \    local currentVowelCount=0\n    local previousVowelCount=0\n    local currentVowelCountIndex=0\n\
    \    local previousVowelCountIndex=0\n    local currentVowelCountIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentVowelCountIndexIndexIndex=0\n\
    \    local previousVowelCountIndexIndex=0\n    local currentV\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local count=0\n    local vowelCount=0\n    local currentVowel\n    local\
    \ currentLetter\n    local currentLetterCount\n    local currentLetterIndex\n\
    \    local currentVowelIndex\n    local currentVowelIndex2\n    local currentVowelIndex3\n\
    \    local currentVowelIndex4\n    local currentVowelIndex5\n    local currentVowelIndex6\n\
    \    local currentVowelIndex7\n    local currentVowelIndex8\n    local currentVowelIndex9\n\
    \    local currentVowelIndex10\n    local currentVowelIndex11\n    local currentVowelIndex12\n\
    \    local currentVowelIndex13\n    local currentVowelIndex14\n    local currentVowelIndex15\n\
    \    local currentVowelIndex16\n    local currentVowelIndex17\n    local currentVowelIndex18\n\
    \    local currentVowelIndex19\n    local currentVowelIndex20\n    local currentVowelIndex21\n\
    \    local currentVowelIndex22\n    local currentVowelIndex23\n    local currentVowelIndex24\n\
    \    local currentVowelIndex25\n    local currentVowelIndex26\n    local currentVowelIndex27\n\
    \    local currentVowelIndex28\n    local currentVowelIndex29\n    local currentVowelIndex30\n\
    \    local currentVowelIndex31\n    local currentVowelIndex32\n    local currentVowelIndex33\n\
    \    local currentVowelIndex34\n    local currentVowelIndex35\n    local currentVowelIndex36\n\
    \    local currentVowelIndex37\n    local currentVowelIndex38\n    local currentVowelIndex39\n\
    \    local currentVowelIndex40\n    local currentVowelIndex41\n    local currentVowelIndex42\n\
    \    local currentVowelIndex43\n    local currentVowelIndex44\n    local currentVowelIndex45\n\
    \    local currentVowelIndex46\n    local currentVowelIndex47\n    local currentVowelIndex48\n\
    \    local currentVowelIndex\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouAEIOU\"\n  local output=\"\"\n  local vowelCount=0\n \
    \ local currentVowel=\"\"\n  local currentLetter=\"\"\n  local currentLetterCount=0\n\
    \  local currentVowelCount=0\n  local currentVowelPosition=0\n  local currentLetterPosition=0\n\
    \  local currentLetterPositionCount=0\n  local currentVowelPositionCount=0\n \
    \ local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local\
    \ currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n\
    \  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local\
    \ currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n\
    \  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local\
    \ currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n\
    \  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local\
    \ currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n\
    \  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local\
    \ currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n\
    \  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local\
    \ currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n\
    \  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local\
    \ currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n\
    \  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local\
    \ currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n  local currentVowelPositionCount=0\n\
    \  local current\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n\
    \    local vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n \
    \   local vowelIndex5=0\n    local vowelIndex6=0\n    local vowelIndex7=0\n  \
    \  local vowelIndex8=0\n    local vowelIndex9=0\n    local vowelIndex10=0\n  \
    \  local vowelIndex11=0\n    local vowelIndex12=0\n    local vowelIndex13=0\n\
    \    local vowelIndex14=0\n    local vowelIndex15=0\n    local vowelIndex16=0\n\
    \    local vowelIndex17=0\n    local vowelIndex18=0\n    local vowelIndex19=0\n\
    \    local vowelIndex20=0\n    local vowelIndex21=0\n    local vowelIndex22=0\n\
    \    local vowelIndex23=0\n    local vowelIndex24=0\n    local vowelIndex25=0\n\
    \    local vowelIndex26=0\n    local vowelIndex27=0\n    local vowelIndex28=0\n\
    \    local vowelIndex29=0\n    local vowelIndex30=0\n    local vowelIndex31=0\n\
    \    local vowelIndex32=0\n    local vowelIndex33=0\n    local vowelIndex34=0\n\
    \    local vowelIndex35=0\n    local vowelIndex36=0\n    local vowelIndex37=0\n\
    \    local vowelIndex38=0\n    local vowelIndex39=0\n    local vowelIndex40=0\n\
    \    local vowelIndex41=0\n    local vowelIndex42=0\n    local vowelIndex43=0\n\
    \    local vowelIndex44=0\n    local vowelIndex45=0\n    local vowelIndex46=0\n\
    \    local vowelIndex47=0\n    local vowelIndex48=0\n    local vowelIndex49=0\n\
    \    local vowelIndex50=0\n    local vowelIndex51=0\n    local vowelIndex52=0\n\
    \    local vowelIndex53=0\n    local vowelIndex54=0\n    local vowelIndex55=0\n\
    \    local vowelIndex56=0\n    local vowelIndex57=0\n    local vowelIndex58=0\n\
    \    local vowelIndex59=0\n    local vowelIndex60=0\n    local vowelIndex61=0\n\
    \    local vowelIndex62=0\n    local vowelIndex63=0\n    local vowelIndex64=0\n\
    \    local vowelIndex65=0\n    local vowelIndex66=0\n    local vowelIndex67=0\n\
    \    local vowelIndex68=0\n    local vowelIndex69=0\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouAEIOU\"\n  local output=\"\"\n  local i\n  local j\n \
    \ local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local msg3=\"\"\n    local msg4=\"\"\n    local msg5=\"\"\n    local msg6=\"\
    \"\n    local msg7=\"\"\n    local msg8=\"\"\n    local msg9=\"\"\n    local msg10=\"\
    \"\n    local msg11=\"\"\n    local msg12=\"\"\n    local msg13=\"\"\n    local\
    \ msg14=\"\"\n    local msg15=\"\"\n    local msg16=\"\"\n    local msg17=\"\"\
    \n    local msg18=\"\"\n    local msg19=\"\"\n    local msg20=\"\"\n    local\
    \ msg21=\"\"\n    local msg22=\"\"\n    local msg23=\"\"\n    local msg24=\"\"\
    \n    local msg25=\"\"\n    local msg26=\"\"\n    local msg27=\"\"\n    local\
    \ msg28=\"\"\n    local msg29=\"\"\n    local msg30=\"\"\n    local msg31=\"\"\
    \n    local msg32=\"\"\n    local msg33=\"\"\n    local msg34=\"\"\n    local\
    \ msg35=\"\"\n    local msg36=\"\"\n    local msg37=\"\"\n    local msg38=\"\"\
    \n    local msg39=\"\"\n    local msg40=\"\"\n    local msg41=\"\"\n    local\
    \ msg42=\"\"\n    local msg43=\"\"\n    local msg44=\"\"\n    local msg45=\"\"\
    \n    local msg46=\"\"\n    local msg47=\"\"\n    local msg48=\"\"\n    local\
    \ msg49=\"\"\n    local msg50=\"\"\n    local msg51=\"\"\n    local msg52=\"\"\
    \n    local msg53=\"\"\n    local msg54=\"\"\n    local msg55=\"\"\n    local\
    \ msg56=\"\"\n    local msg57=\"\"\n    local msg58=\"\"\n    local msg59=\"\"\
    \n    local msg60=\"\"\n    local msg61=\"\"\n    local msg62=\"\"\n    local\
    \ msg63=\"\"\n    local msg64=\"\"\n    local msg65=\"\"\n    local msg66=\"\"\
    \n    local msg67=\"\"\n    local msg68=\"\"\n    local msg69=\"\"\n    local\
    \ msg70=\"\"\n    local msg71=\"\"\n    local msg72=\"\"\n    local msg73=\"\"\
    \n    local msg74=\"\"\n    local msg75=\"\"\n    local msg76=\"\"\n    local\
    \ msg77=\"\"\n    local msg78=\"\"\n    local msg79=\"\"\n    local msg80=\"\"\
    \n    local msg81=\"\"\n    local msg82=\"\"\n    local msg83=\"\"\n    local\
    \ msg84=\"\"\n    local msg85=\"\"\n    local \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiou\"\n  local output=\"\"\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local output\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ A\n  local B\n  local C\n  local D\n  local E\n  local F\n  local G\n  local\
    \ H\n  local I\n  local J\n  local K\n  local L\n  local M\n  local N\n  local\
    \ O\n  local P\n  local Q\n  local R\n  local S\n  local T\n  local U\n  local\
    \ V\n  local W\n  local X\n  local Y\n  local Z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local\
    \ E\n  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local\
    \ L\n  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local\
    \ S\n  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local\
    \ Z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowel\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local currentLetter=\"\"\n    local currentVowel=\"\"\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letter2=\"\
    \"\n    local letter3=\"\"\n    local letter4=\"\"\n    local letter5=\"\"\n \
    \   local letter6=\"\"\n    local letter7=\"\"\n    local letter8=\"\"\n    local\
    \ letter9=\"\"\n    local letter10=\"\"\n    local letter11=\"\"\n    local letter12=\"\
    \"\n    local letter13=\"\"\n    local letter14=\"\"\n    local letter15=\"\"\n\
    \    local letter16=\"\"\n    local letter17=\"\"\n    local letter18=\"\"\n \
    \   local letter19=\"\"\n    local letter20=\"\"\n    local letter21=\"\"\n  \
    \  local letter22=\"\"\n    local letter23=\"\"\n    local letter24=\"\"\n   \
    \ local letter25=\"\"\n    local letter26=\"\"\n    local letter27=\"\"\n    local\
    \ letter28=\"\"\n    local letter29=\"\"\n    local letter30=\"\"\n    local letter31=\"\
    \"\n    local letter32=\"\"\n    local letter33=\"\"\n    local letter34=\"\"\n\
    \    local letter35=\"\"\n    local letter36=\"\"\n    local letter37=\"\"\n \
    \   local letter38=\"\"\n    local letter39=\"\"\n    local letter40=\"\"\n  \
    \  local letter41=\"\"\n    local letter42=\"\"\n    local letter43=\"\"\n   \
    \ local letter44=\"\"\n    local letter45=\"\"\n    local letter46=\"\"\n    local\
    \ letter47=\"\"\n    local letter48=\"\"\n    local letter49=\"\"\n    local letter50=\"\
    \"\n    local letter51=\"\"\n    local letter52=\"\"\n    local letter53=\"\"\n\
    \    local letter54=\"\"\n    local letter55=\"\"\n    local letter56=\"\"\n \
    \   local letter57=\"\"\n    local letter58=\"\"\n    local letter59=\"\"\n  \
    \  local letter60=\"\"\n    local letter61=\"\"\n    local letter62=\"\"\n   \
    \ local letter63=\"\"\n    local letter64=\"\"\n    local letter65=\"\"\n    local\
    \ letter66=\"\"\n    local letter67=\"\"\n    local letter68=\"\"\n    local letter69=\"\
    \"\n    local letter70=\"\"\n    local letter71=\"\"\n    local letter72=\"\"\n\
    \    local letter73=\"\"\n    local letter74=\"\"\n    local letter75=\"\"\n \
    \   local letter76=\"\"\n    local letter77=\"\"\n    local letter78=\"\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local vowel_positions=$(echo $message | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \"\\n\" \" \" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr \" \" \"\\n\" | tr\
    \ \" \" \"\\n\" | tr \" \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp780sjqun.sh: line 31: unexpected EOF while looking for matching
    `"''

    /tmp/tmp780sjqun.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOU\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local output=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local vowelIndex=0\n  local vowelCount=0\n  local currentVowel\n\
    \  local currentLetter\n  local letterIndex=0\n  local letterCount=0\n  local\
    \ currentLetter\n  local letter\n  local letterIndex2\n  local letterCount2\n\
    \  local currentLetter2\n  local letter2\n  local letterIndex3\n  local letterCount3\n\
    \  local currentLetter3\n  local letter3\n  local letterIndex4\n  local letterCount4\n\
    \  local currentLetter4\n  local letter4\n  local letterIndex5\n  local letterCount5\n\
    \  local currentLetter5\n  local letter5\n  local letterIndex6\n  local letterCount6\n\
    \  local currentLetter6\n  local letter6\n  local letterIndex7\n  local letterCount7\n\
    \  local currentLetter7\n  local letter7\n  local letterIndex8\n  local letterCount8\n\
    \  local currentLetter8\n  local letter8\n  local letterIndex9\n  local letterCount9\n\
    \  local currentLetter9\n  local letter9\n  local letterIndex10\n  local letterCount10\n\
    \  local currentLetter10\n  local letter10\n  local letterIndex11\n  local letterCount11\n\
    \  local currentLetter11\n  local letter11\n  local letterIndex12\n  local letterCount12\n\
    \  local currentLetter12\n  local letter12\n  local letterIndex13\n  local letterCount13\n\
    \  local currentLetter13\n  local letter13\n  local letterIndex14\n  local letterCount14\n\
    \  local currentLetter14\n  local letter14\n  local letterIndex15\n  local letterCount15\n\
    \  local currentLetter15\n  local letter15\n  local letterIndex16\n  local letterCount16\n\
    \  local currentLetter16\n  local letter16\n  local letterIndex17\n  local letterCount17\n\
    \  local currentLetter17\n  local letter17\n  local letterIndex18\n  local letterCount18\n\
    \  local currentLetter18\n  local letter18\n  local letterIndex19\n  local letterCount19\n\
    \  local currentLetter19\n  local letter19\n  local letterIndex20\n  local letterCount20\n\
    \  local currentLetter20\n  local letter20\n  local letterIndex21\n  local \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local alphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n \
    \   local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=''\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter\n    local letterCount2\n\
    \    local letter2\n    local letter3\n    local letter4\n    local letter5\n\
    \    local letter6\n    local letter7\n    local letter8\n    local letter9\n\
    \    local letter10\n    local letter11\n    local letter12\n    local letter13\n\
    \    local letter14\n    local letter15\n    local letter16\n    local letter17\n\
    \    local letter18\n    local letter19\n    local letter20\n    local letter21\n\
    \    local letter22\n    local letter23\n    local letter24\n    local letter25\n\
    \    local letter26\n    local letter27\n    local letter28\n    local letter29\n\
    \    local letter30\n    local letter31\n    local letter32\n    local letter33\n\
    \    local letter34\n    local letter35\n    local letter36\n    local letter37\n\
    \    local letter38\n    local letter39\n    local letter40\n    local letter41\n\
    \    local letter42\n    local letter43\n    local letter44\n    local letter45\n\
    \    local letter46\n    local letter47\n    local letter48\n    local letter49\n\
    \    local letter50\n    local letter51\n    local letter52\n    local letter53\n\
    \    local letter54\n    local letter55\n    local letter56\n    local letter57\n\
    \    local letter58\n    local letter59\n    local letter60\n    local letter61\n\
    \    local letter62\n    local letter63\n    local letter64\n    local letter65\n\
    \    local letter66\n    local letter67\n    local letter68\n    local letter69\n\
    \    local letter70\n    local letter71\n    local letter72\n    local letter73\n\
    \    local letter74\n    local letter75\n    local letter76\n    local letter77\n\
    \    local letter78\n    local letter79\n    local letter80\n    local letter81\n\
    \    local letter82\n    local letter83\n    local letter84\n    local letter85\n\
    \    local letter86\n    local letter87\n    local letter88\n    local letter89\n\
    \    local letter90\n    local letter91\n    local letter92\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowel=\"a\"\n    local vowel2=\"\
    e\"\n    local vowel3=\"i\"\n    local vowel4=\"o\"\n    local vowel5=\"u\"\n\
    \    local vowel6=\"A\"\n    local vowel7=\"E\"\n    local vowel8=\"I\"\n    local\
    \ vowel9=\"O\"\n    local vowel10=\"U\"\n    local vowel11=\"a\"\n    local vowel12=\"\
    e\"\n    local vowel13=\"i\"\n    local vowel14=\"o\"\n    local vowel15=\"u\"\
    \n    local vowel16=\"A\"\n    local vowel17=\"E\"\n    local vowel18=\"I\"\n\
    \    local vowel19=\"O\"\n    local vowel20=\"U\"\n    local vowel21=\"a\"\n \
    \   local vowel22=\"e\"\n    local vowel23=\"i\"\n    local vowel24=\"o\"\n  \
    \  local vowel25=\"u\"\n    local vowel26=\"A\"\n    local vowel27=\"E\"\n   \
    \ local vowel28=\"I\"\n    local vowel29=\"O\"\n    local vowel30=\"U\"\n    local\
    \ vowel31=\"a\"\n    local vowel32=\"e\"\n    local vowel33=\"i\"\n    local vowel34=\"\
    o\"\n    local vowel35=\"u\"\n    local vowel36=\"A\"\n    local vowel37=\"E\"\
    \n    local vowel38=\"I\"\n    local vowel39=\"O\"\n    local vowel40=\"U\"\n\
    \    local vowel41=\"a\"\n    local vowel42=\"e\"\n    local vowel43=\"i\"\n \
    \   local vowel44=\"o\"\n    local vowel45=\"u\"\n    local vowel46=\"A\"\n  \
    \  local vowel47=\"E\"\n    local vowel48=\"I\"\n    local vowel49=\"O\"\n   \
    \ local vowel50=\"U\"\n    local vowel51=\"a\"\n    local vowel52=\"e\"\n    local\
    \ vowel53=\"i\"\n    local vowel54=\"o\"\n    local vowel55=\"u\"\n    local vowel56=\"\
    A\"\n    local vowel57=\"E\"\n    local vowel58=\"I\"\n    local vowel59=\"O\"\
    \n    local vowel60=\"U\"\n    local vowel61=\"a\"\n    local vowel62=\"e\"\n\
    \    local vowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowels_2=\"AEIOUaeiou\"\n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local letters_2=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ vowel_positions=\"\"\n  local letter_positions=\"\"\n  local letter_index=0\n\
    \  local vowel_index=0\n  local letter_index2=0\n  local vowel_index2=0\n  local\
    \ letter_index3=0\n  local vowel_index3=0\n  local letter_index4=0\n  local vowel_index4=0\n\
    \  local letter_index5=0\n  local vowel_index5=0\n  local letter_index6=0\n  local\
    \ vowel_index6=0\n  local letter_index7=0\n  local vowel_index7=0\n  local letter_index8=0\n\
    \  local vowel_index8=0\n  local letter_index9=0\n  local vowel_index9=0\n  local\
    \ letter_index10=0\n  local vowel_index10=0\n  local letter_index11=0\n  local\
    \ vowel_index11=0\n  local letter_index12=0\n  local vowel_index12=0\n  local\
    \ letter_index13=0\n  local vowel_index13=0\n  local letter_index14=0\n  local\
    \ vowel_index14=0\n  local letter_index15=0\n  local vowel_index15=0\n  local\
    \ letter_index16=0\n  local vowel_index16=0\n  local letter_index17=0\n  local\
    \ vowel_index17=0\n  local letter_index18=0\n  local vowel_index18=0\n  local\
    \ letter_index19=0\n  local vowel_index19=0\n  local letter_index20=0\n  local\
    \ vowel_index20=0\n  local letter_index21=0\n  local vowel_index21=0\n  local\
    \ letter_index22=0\n  local vowel_index22=0\n  local letter_index23=0\n  local\
    \ vowel_index23=0\n  local letter_index24=0\n  local vowel_index24=0\n  local\
    \ letter_index25=0\n  local vowel_index25=0\n  local letter_index26=0\n  local\
    \ vowel_index26=0\n  local letter_index27=0\n  local vowel_index27=0\n  local\
    \ letter_index28=0\n  local vowel_index28=0\n  local letter_index29=0\n  local\
    \ vowel_index29=0\n  local letter_index30=0\n  local vowel_index30=0\n  local\
    \ letter_index31=0\n  local vowel_index31=0\n  local letter_index32=0\n  local\
    \ vowel_index32=0\n  local letter_index33=0\n  local vowel_index33\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterCount\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local output=\"\"\n    local count=0\n    local vowelCount=0\n\
    \    local letterCount=0\n    local letterIndex=0\n    local vowelIndex=0\n  \
    \  local letterIndex2=0\n    local vowelIndex2=0\n    local letterIndex3=0\n \
    \   local vowelIndex3=0\n    local letterIndex4=0\n    local vowelIndex4=0\n \
    \   local letterIndex5=0\n    local vowelIndex5=0\n    local letterIndex6=0\n\
    \    local vowelIndex6=0\n    local letterIndex7=0\n    local vowelIndex7=0\n\
    \    local letterIndex8=0\n    local vowelIndex8=0\n    local letterIndex9=0\n\
    \    local vowelIndex9=0\n    local letterIndex10=0\n    local vowelIndex10=0\n\
    \    local letterIndex11=0\n    local vowelIndex11=0\n    local letterIndex12=0\n\
    \    local vowelIndex12=0\n    local letterIndex13=0\n    local vowelIndex13=0\n\
    \    local letterIndex14=0\n    local vowelIndex14=0\n    local letterIndex15=0\n\
    \    local vowelIndex15=0\n    local letterIndex16=0\n    local vowelIndex16=0\n\
    \    local letterIndex17=0\n    local vowelIndex17=0\n    local letterIndex18=0\n\
    \    local vowelIndex18=0\n    local letterIndex19=0\n    local vowelIndex19=0\n\
    \    local letterIndex20=0\n    local vowelIndex20=0\n    local letterIndex21=0\n\
    \    local vowelIndex21=0\n    local letterIndex22=0\n    local vowelIndex22=0\n\
    \    local letterIndex23=0\n    local vowelIndex23=0\n    local letterIndex24=0\n\
    \    local vowelIndex24=0\n    local letterIndex25=0\n    local vowelIndex25=0\n\
    \    local letterIndex26=0\n    local vowelIndex26=0\n    local letterIndex27=0\n\
    \    local vowelIndex27=0\n    local letterIndex28=0\n    local vowelIndex28=0\n\
    \    local letterIndex29=0\n    local vowelIndex29=0\n    local letterIndex30=0\n\
    \    local vowelIndex30=0\n    local letterIndex31=0\n    local vowelIndex31=0\n\
    \    local letterIndex32=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n  \
    \  local vowel\n    local letter\n    local count\n    \n    for letter in $message;\
    \ do\n        count=$(echo $letter | wc -c)\n        if [ $count -gt 1 ]; then\n\
    \            vowel=$(echo $letter | awk '{print substr($0,index($0,$1),1)}')\n\
    \            letter=$(echo $letter | awk '{print substr($0,index($0,$2),1)}')\n\
    \            letter=${letter:0:1}\n            letter=${letter:1}\n          \
    \  letter=${letter:0:1}\n            letter=${letter:1}\n            letter=${letter:0:1}\n\
    \            letter=${letter:0:1}\n            letter=${letter:0:1}\n        \
    \    letter=${letter:0:1}\n            letter=${letter:0:1}\n            letter=${letter:0:1}\n\
    \            letter=${letter:0:1}\n            letter=${letter:0:1}\n        \
    \    letter=${letter:0:1}\n            letter=${letter:0:1}\n            letter=${letter:0:1}\n\
    \            letter=${letter:0:1}\n            letter=${letter:0:1}\n        \
    \    letter=${letter:0:1}\n            letter=${letter:0:1}\n            letter=${letter:0:1}\n\
    \            letter=${letter:0:1}\n            letter=${letter:0:1}\n        \
    \    letter=${letter:0:1}\n            letter=${letter:0:1}\n            letter=${letter:0:1}\n\
    \            letter=${letter:0:1}\n            letter=${letter:0:1}\n        \
    \    letter=${letter:0:1}\n            letter=${letter:0:1}\n            letter=${letter:0:1}\n\
    \            letter=${letter:0:1}\n            letter=${letter:0:1}\n        \
    \    letter=${letter:0:1}\n            letter=${letter:0:1}\n            letter=${letter:0:1}\n\
    \            letter=${letter:0:1}\n            letter=${letter:0:1}\n        \
    \    letter=${letter:0:1}\n            letter=${letter:0:1}\n            letter=${letter:0:1}\n\
    \            letter=${letter:0:1}\n            letter=${letter:0:1}\n        \
    \    letter=${letter:0:1}\n            letter=${letter:0:1}\n            letter=${letter:0:1}\n\
    \            letter=${letter:0:1}\n            letter=${letter:0:1}\n        \
    \    letter=${letter:0:1}\n            letter=${letter:0:\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr5dw8mrq.sh: line 93: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local output=\"\"\n    local vowelCount=0\n    local letterCount=0\n\
    \    local letterIndex=0\n    local vowelIndex=0\n    local letter\n    local\
    \ vowel\n    local letter2\n    local vowel2\n    local letter3\n    local vowel3\n\
    \    local letter4\n    local vowel4\n    local letter5\n    local vowel5\n  \
    \  local letter6\n    local vowel6\n    local letter7\n    local vowel7\n    local\
    \ letter8\n    local vowel8\n    local letter9\n    local vowel9\n    local letter10\n\
    \    local vowel10\n    local letter11\n    local vowel11\n    local letter12\n\
    \    local vowel12\n    local letter13\n    local vowel13\n    local letter14\n\
    \    local vowel14\n    local letter15\n    local vowel15\n    local letter16\n\
    \    local vowel16\n    local letter17\n    local vowel17\n    local letter18\n\
    \    local vowel18\n    local letter19\n    local vowel19\n    local letter20\n\
    \    local vowel20\n    local letter21\n    local vowel21\n    local letter22\n\
    \    local vowel22\n    local letter23\n    local vowel23\n    local letter24\n\
    \    local vowel24\n    local letter25\n    local vowel25\n    local letter26\n\
    \    local vowel26\n    local letter27\n    local vowel27\n    local letter28\n\
    \    local vowel28\n    local letter29\n    local vowel29\n    local letter30\n\
    \    local vowel30\n    local letter31\n    local vowel31\n    local letter32\n\
    \    local vowel32\n    local letter33\n    local vowel33\n    local letter34\n\
    \    local vowel34\n    local letter35\n    local vowel35\n    local letter36\n\
    \    local vowel36\n    local letter37\n    local vowel37\n    local letter38\n\
    \    local vowel38\n    local letter39\n    local vowel39\n    local letter40\n\
    \    local vowel40\n    local letter41\n    local vowel41\n    local letter42\n\
    \    local vowel42\n    local letter43\n    local vowel43\n    local letter44\n\
    \    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#message}; i++ )); do\n        local letter=${message:$i:1}\n\
    \        local vowel=${vowels:$i:1}\n        local nextLetter=${letters:$((i+1))}\n\
    \        local nextVowel=${vowels:$((i+1))}\n        if [[ $letter != $nextLetter\
    \ ]]; then\n            output+=$nextLetter\n        elif [[ $vowel != $nextVowel\
    \ ]]; then\n            output+=$nextVowel\n        fi\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local letters_2=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\
    \ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n  local letters_3=\"\
    a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M\
    \ N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9\"\n  local letters_4=\"a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P\
    \ Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z\"\n  local letters_5=\"a b c d e f g h i j k l m n o p q r s\
    \ t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4\
    \ 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G\
    \ H I J K L M N O P Q R S T U V W X Y Z\"\n  local letters_6=\"a b c d e f g h\
    \ i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T\
    \ U V W X Y Z 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z A B C D E F G H I J K L M N O\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnv605fga.sh: line 35: unexpected EOF while looking for matching
    `"''

    /tmp/tmpnv605fga.sh: line 39: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=()\n\
    \    local letter_positions=()\n    local new_message=\"\"\n    local vowel_letter=\"\
    \"\n    local letter_letter=\"\"\n    local vowel_position=0\n    local letter_position=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\"\
    \n    local currentVowel3=\"\"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentVowel6=\"\"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentVowel9=\"\"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentVowel12=\"\"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentVowel15=\"\"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentVowel18=\"\"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentVowel21=\"\"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentVowel24=\"\"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentVowel27=\"\"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\
    \"\n    local currentVowel30=\"\"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\
    \"\n    local currentVowel33=\"\"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\
    \"\n    local currentVowel36=\"\"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\
    \"\n    local currentVowel39=\"\"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\
    \"\n    local currentVowel42=\"\"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\
    \"\n    local currentVowel45=\"\"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\
    \"\n    local currentVowel48=\"\"\n    local currentVowel49=\"\"\n    local \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelCount=0\n \
    \   local letterCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedVowel2=\"\"\n    local encodedVowel3=\"\
    \"\n    local encodedVowel4=\"\"\n    local encodedVowel5=\"\"\n    local encodedVowel6=\"\
    \"\n    local encodedVowel7=\"\"\n    local encodedVowel8=\"\"\n    local encodedVowel9=\"\
    \"\n    local encodedVowel10=\"\"\n    local encodedVowel11=\"\"\n    local encodedVowel12=\"\
    \"\n    local encodedVowel13=\"\"\n    local encodedVowel14=\"\"\n    local encodedVowel15=\"\
    \"\n    local encodedVowel16=\"\"\n    local encodedVowel17=\"\"\n    local encodedVowel18=\"\
    \"\n    local encodedVowel19=\"\"\n    local encodedVowel20=\"\"\n    local encodedVowel21=\"\
    \"\n    local encodedVowel22=\"\"\n    local encodedVowel23=\"\"\n    local encodedVowel24=\"\
    \"\n    local encodedVowel25=\"\"\n    local encodedVowel26=\"\"\n    local encodedVowel27=\"\
    \"\n    local encodedVowel28=\"\"\n    local encodedVowel29=\"\"\n    local encodedVowel30=\"\
    \"\n    local encodedVowel31=\"\"\n    local encodedVowel32=\"\"\n    local encodedVowel33=\"\
    \"\n    local encodedVowel34=\"\"\n    local encodedVowel35=\"\"\n    local encodedVowel36=\"\
    \"\n    local encodedVowel37=\"\"\n    local encodedVowel38=\"\"\n    local encodedVowel39=\"\
    \"\n    local encodedVowel40=\"\"\n    local encodedVowel41=\"\"\n    local encodedVowel42=\"\
    \"\n    local encodedVowel43=\"\"\n    local encodedVowel44=\"\"\n    local encodedVowel45=\"\
    \"\n    local encodedVowel46=\"\"\n    local encodedVowel47=\"\"\n    local encodedVowel48=\"\
    \"\n    local encodedVowel49=\"\"\n    local encodedVowel50=\"\"\n    local encodedVow\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowel\n    local letter\n    local index\n    local count\n    local\
    \ vowelCount\n    local letterCount\n    local letterIndex\n    local letterCountIndex\n\
    \    local letterIndex2\n    local letterCountIndex2\n    local letterIndex3\n\
    \    local letterCountIndex3\n    local letterIndex4\n    local letterCountIndex4\n\
    \    local letterIndex5\n    local letterCountIndex5\n    local letterIndex6\n\
    \    local letterCountIndex6\n    local letterIndex7\n    local letterCountIndex7\n\
    \    local letterIndex8\n    local letterCountIndex8\n    local letterIndex9\n\
    \    local letterCountIndex9\n    local letterIndex10\n    local letterCountIndex10\n\
    \    local letterIndex11\n    local letterCountIndex11\n    local letterIndex12\n\
    \    local letterCountIndex12\n    local letterIndex13\n    local letterCountIndex13\n\
    \    local letterIndex14\n    local letterCountIndex14\n    local letterIndex15\n\
    \    local letterCountIndex15\n    local letterIndex16\n    local letterCountIndex16\n\
    \    local letterIndex17\n    local letterCountIndex17\n    local letterIndex18\n\
    \    local letterCountIndex18\n    local letterIndex19\n    local letterCountIndex19\n\
    \    local letterIndex20\n    local letterCountIndex20\n    local letterIndex21\n\
    \    local letterCountIndex21\n    local letterIndex22\n    local letterCountIndex22\n\
    \    local letterIndex23\n    local letterCountIndex23\n    local letterIndex24\n\
    \    local letterCountIndex24\n    local letterIndex25\n    local letterCountIndex25\n\
    \    local letterIndex26\n    local letterCountIndex26\n    local letterIndex27\n\
    \    local letterCountIndex27\n    local letterIndex28\n    local letterCountIndex28\n\
    \    local letterIndex29\n    local letterCountIndex29\n    local letterIndex30\n\
    \    local letterCountIndex30\n    local letterIndex31\n    local letterCountIndex31\n\
    \    local letterIndex32\n    local letterCountIndex32\n    local letterIndex33\n\
    \    local letterCountIndex33\n    local letterIndex34\n    local letterCountIndex34\n\
    \    local letterIndex35\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local vowel_positions=$(echo \"$message\" | sed 's/[aeiouy]*//g' | sed\
    \ 's/[aeiouy][aeiouy]*/\\1/' | sort | uniq -u | wc -l)\n  local letter_positions=$(echo\
    \ \"$message\" | sed 's/[aeiouy]*//g' | sed 's/[aeiouy][aeiouy]*\\([aeiouy][aeiouy]*\\\
    )/\\1/' | sort | uniq -u | wc -l)\n  local letter_positions_sorted=$(echo \"$letter_positions\"\
    \ | sort -n)\n  local vowel_positions_sorted=$(echo \"$vowel_positions\" | sort\
    \ -n)\n  local vowel_positions_sorted_reverse=$(echo \"$vowel_positions\" | sort\
    \ -r)\n  local letter_positions_sorted_reverse=$(echo \"$letter_positions\" |\
    \ sort -r)\n  local vowel_positions_sorted_reverse=$(echo \"$vowel_positions\"\
    \ | sort -r)\n  local letter_positions_sorted_reverse=$(echo \"$letter_positions\"\
    \ | sort -r)\n  local vowel_positions_sorted_reverse=$(echo \"$vowel_positions\"\
    \ | sort -r)\n  local letter_positions_sorted_reverse=$(echo \"$letter_positions\"\
    \ | sort -r)\n  local vowel_positions_sorted_reverse=$(echo \"$vowel_positions\"\
    \ | sort -r)\n  local letter_positions_sorted_reverse=$(echo \"$letter_positions\"\
    \ | sort -r)\n  local vowel_positions_sorted_reverse=$(echo \"$vowel_positions\"\
    \ | sort -r)\n  local letter_positions_sorted_reverse=$(echo \"$letter_positions\"\
    \ | sort -r)\n  local vowel_positions_sorted_reverse=$(echo \"$vowel_positions\"\
    \ | sort -r)\n  local letter_positions_sorted_reverse=$(echo \"$letter_positions\"\
    \ | sort -r)\n  local vowel_positions_sorted_reverse=$(echo \"$vowel_positions\"\
    \ | sort -r)\n  local letter_positions_sorted_reverse=$(echo \"$letter_positions\"\
    \ | sort -r)\n  local vowel_positions_sorted_reverse=$(echo \"$vowel_positions\"\
    \ | sort -r)\n  local letter_positions_sorted_reverse=$(echo \"$letter_positions\"\
    \ | sort -r)\n  local vowel_positions_sorted_reverse=$(echo \"$vowel_positions\"\
    \ | \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkga_xa90.sh: line 38: unexpected EOF while looking for matching
    `)''

    /tmp/tmpkga_xa90.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local count=0\n    local vowel\n    local letter\n\
    \    local letter2\n    local letter3\n    local letter4\n    local letter5\n\
    \    local letter6\n    local letter7\n    local letter8\n    local letter9\n\
    \    local letter10\n    local letter11\n    local letter12\n    local letter13\n\
    \    local letter14\n    local letter15\n    local letter16\n    local letter17\n\
    \    local letter18\n    local letter19\n    local letter20\n    local letter21\n\
    \    local letter22\n    local letter23\n    local letter24\n    local letter25\n\
    \    local letter26\n    local letter27\n    local letter28\n    local letter29\n\
    \    local letter30\n    local letter31\n    local letter32\n    local letter33\n\
    \    local letter34\n    local letter35\n    local letter36\n    local letter37\n\
    \    local letter38\n    local letter39\n    local letter40\n    local letter41\n\
    \    local letter42\n    local letter43\n    local letter44\n    local letter45\n\
    \    local letter46\n    local letter47\n    local letter48\n    local letter49\n\
    \    local letter50\n    local letter51\n    local letter52\n    local letter53\n\
    \    local letter54\n    local letter55\n    local letter56\n    local letter57\n\
    \    local letter58\n    local letter59\n    local letter60\n    local letter61\n\
    \    local letter62\n    local letter63\n    local letter64\n    local letter65\n\
    \    local letter66\n    local letter67\n    local letter68\n    local letter69\n\
    \    local letter70\n    local letter71\n    local letter72\n    local letter73\n\
    \    local letter74\n    local letter75\n    local letter76\n    local letter77\n\
    \    local letter78\n    local letter79\n    local letter80\n    local letter81\n\
    \    local letter82\n    local letter83\n    local letter84\n    local letter85\n\
    \    local letter86\n    local letter87\n    local letter88\n    local letter89\n\
    \    local letter90\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowelCount=0\n    local currentLetterCount=0\n\
    \    local currentLetterIndex=0\n    local currentVowelIndex=0\n    local currentVowelCountIndex=0\n\
    \    local currentVowelIndex2=0\n    local currentVowelCountIndex2=0\n    local\
    \ currentVowelIndex3=0\n    local currentVowelCountIndex3=0\n    local currentVowelIndex4=0\n\
    \    local currentVowelCountIndex4=0\n    local currentVowelIndex5=0\n    local\
    \ currentVowelCountIndex5=0\n    local currentVowelIndex6=0\n    local currentVowelCountIndex6=0\n\
    \    local currentVowelIndex7=0\n    local currentVowelCountIndex7=0\n    local\
    \ currentVowelIndex8=0\n    local currentVowelCountIndex8=0\n    local currentVowelIndex9=0\n\
    \    local currentVowelCountIndex9=0\n    local currentVowelIndex10=0\n    local\
    \ currentVowelCountIndex10=0\n    local currentVowelIndex11=0\n    local currentVowelCountIndex11=0\n\
    \    local currentVowelIndex12=0\n    local currentVowelCountIndex12=0\n    local\
    \ currentVowelIndex13=0\n    local currentVowelCountIndex13=0\n    local currentVowelIndex14=0\n\
    \    local currentVowelCountIndex14=0\n    local currentVowelIndex15=0\n    local\
    \ currentVowelCountIndex15=0\n    local currentVowelIndex16=0\n    local currentVowelCountIndex16=0\n\
    \    local currentVowelIndex17=0\n    local currentVowelCountIndex17=0\n    local\
    \ currentVowelIndex18=0\n    local currentVowelCountIndex18=0\n    local currentVowelIndex19=0\n\
    \    local currentVowelCountIndex19=0\n    local currentVowelIndex20=0\n    local\
    \ currentVowelCountIndex20=0\n    local currentVowel\n}\n\ncandidate() {\n   \
    \ encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local output=\"\"\n  local i\n  local j\n  local vowel\n  local vowel_position\n\
    \  local letter\n  local letter_position\n  local letter_index\n  local letter_to_swap\n\
    \  local letter_to_replace\n  local letter_to_replace_index\n  local letter_to_replace_position\n\
    \  local letter_to_replace_letter\n  local letter_to_replace_letter_index\n  local\
    \ letter_to_replace_letter_position\n  local letter_to_replace_letter_letter\n\
    \  local letter_to_replace_letter_letter_index\n  local letter_to_replace_letter_letter_position\n\
    \  local letter_to_replace_letter_letter_letter\n  local letter_to_replace_letter_letter_letter_index\n\
    \  local letter_to_replace_letter_letter_letter_position\n  local letter_to_replace_letter_letter_letter_letter\n\
    \  local letter_to_replace_letter_letter_letter_letter_index\n  local letter_to_replace_letter_letter_letter_letter_position\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter\n  local letter_to_replace_letter_letter_letter_letter_letter_index\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_position\n  local\
    \ letter_to_replace_letter_letter_letter_letter_letter_letter\n  local letter_to_replace_letter_letter_letter_letter_letter_letter_index\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_position\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_index\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_position\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_index\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_position\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter_index\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter_position\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_index\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_position\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_index\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_position\n\
    \  local letter_to_replace_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n\
    \    local letterIndex=0\n    local vowelIndex=0\n    local letterToSwap=\"\"\n\
    \    local vowelToSwap=\"\"\n    local letterToSwapIndex=0\n    local vowelToSwapIndex=0\n\
    \    local letterToSwapIndex2=0\n    local vowelToSwapIndex2=0\n    local letterToSwapIndex3=0\n\
    \    local vowelToSwapIndex3=0\n    local letterToSwapIndex4=0\n    local vowelToSwapIndex4=0\n\
    \    local letterToSwapIndex5=0\n    local vowelToSwapIndex5=0\n    local letterToSwapIndex6=0\n\
    \    local vowelToSwapIndex6=0\n    local letterToSwapIndex7=0\n    local vowelToSwapIndex7=0\n\
    \    local letterToSwapIndex8=0\n    local vowelToSwapIndex8=0\n    local letterToSwapIndex9=0\n\
    \    local vowelToSwapIndex9=0\n    local letterToSwapIndex10=0\n    local vowelToSwapIndex10=0\n\
    \    local letterToSwapIndex11=0\n    local vowelToSwapIndex11=0\n    local letterToSwapIndex12=0\n\
    \    local vowelToSwapIndex12=0\n    local letterToSwapIndex13=0\n    local vowelToSwapIndex13=0\n\
    \    local letterToSwapIndex14=0\n    local vowelToSwapIndex14=0\n    local letterToSwapIndex15=0\n\
    \    local vowelToSwapIndex15=0\n    local letterToSwapIndex16=0\n    local vowelToSwapIndex16=0\n\
    \    local letterToSwapIndex17=0\n    local vowelToSwapIndex17=0\n    local letterToSwapIndex18=0\n\
    \    local vowelToSwapIndex18=0\n    local letterToSwapIndex19=0\n    local vowelToSwapIndex19=0\n\
    \    local letterToSwapIndex20=0\n    local vowelToSwapIndex20=0\n    local letterToSwapIndex21=0\n\
    \    local vowelToSwapIndex21=0\n    local letterToSwapIndex22=0\n    local vowelToSwapIndex22=0\n\
    \    local letterToSwapIndex23=0\n    local vowelToSwapIndex23=0\n    local letterToSwapIndex24=0\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n\
    \    local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6vy9e4_j.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmp6vy9e4_j.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660053093
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local result=\"\"\n  local vowel_position\n  local letter_position\n\
    \  local vowel_letter\n  local letter_letter\n  local vowel_letter_position\n\
    \  local letter_letter_position\n  for letter in ${message}; do\n    letter_position=\"\
    ${letters:$letter:1}\"\n    letter_letter=\"${letter:$letter_position:1}\"\n \
    \   letter_letter_position=\"${letters:$letter_letter:1}\"\n    letter_letter_letter=\"\
    ${letter:$letter_letter_position:1}\"\n    vowel_position=\"${vowels:$letter_letter_letter:1}\"\
    \n    vowel_letter=\"${vowels:$letter_letter_letter_position:1}\"\n    vowel_letter_position=\"\
    ${vowels:$vowel_letter:1}\"\n    vowel_letter_letter=\"${vowels:$vowel_letter_position:1}\"\
    \n    result+=\"${vowels:$letter_letter_letter_position:1}${vowels:$letter_letter_letter:1}\"\
    \n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660053094

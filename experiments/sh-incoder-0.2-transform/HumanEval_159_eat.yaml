name: HumanEval_159_eat
language: sh
prompt: "#!/bin/bash\n# You're a hungry rabbit, and you already have eaten a certain\
  \ number of carrots,\n# but now you need to eat more carrots to complete the day's\
  \ meals.\n# you should return an array of [ total number of eaten carrots after\
  \ your meals,\n# the number of carrots left after your meals ]\n# if there are not\
  \ enough remaining carrots, you will eat all remaining carrots, but will still be\
  \ hungry.\n# Example:\n# >>> $(eat \"5\" \"6\" \"10\")\n# ['\"11\"', '\"4\"']\n\
  # >>> $(eat \"4\" \"8\" \"9\")\n# ['\"12\"', '\"1\"']\n# >>> $(eat \"1\" \"10\"\
  \ \"10\")\n# ['\"11\"', '\"0\"']\n# >>> $(eat \"2\" \"11\" \"5\")\n# ['\"7\"', '\"\
  0\"']\n# Variables:\n# @number : integer\n# the number of carrots that you have\
  \ eaten.\n# @need : integer\n# the number of carrots that you need to eat.\n# @remaining\
  \ : integer\n# the number of remaining carrots thet exist in stock\n# Constrain:\n\
  # * 0 <= number <= 1000\n# * 0 <= need <= 1000\n# * 0 <= remaining <= 1000\n# Have\
  \ fun :)\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\neat() {\n"
tests: "}\n\ncandidate() {\n    eat \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5\" \"6\" \"10\") = \"11 4\" ]]\n    [[ $(candidate \"4\" \"8\" \"9\") = \"\
  12 1\" ]]\n    [[ $(candidate \"1\" \"10\" \"10\") = \"11 0\" ]]\n    [[ $(candidate\
  \ \"2\" \"11\" \"5\") = \"7 0\" ]]\n    [[ $(candidate \"4\" \"5\" \"7\") = \"9\
  \ 2\" ]]\n    [[ $(candidate \"4\" \"5\" \"1\") = \"5 0\" ]]\n}\n\nrun_test"
completions: ["  local number=$1\n  local need=$2\n  local remaining=$3\n  local result\n\
    \  result=()\n  if [ $number -lt $need ]\n  then\n    result+=($number)\n  else\n\
    \    result+=($need)\n  fi\n  if [ $remaining -lt $number ]\n  then\n    result+=($remaining)\n\
    \  else\n    result+=($number)\n  fi\n  echo $result", "  local number=$1\n  local\
    \ need=$2\n  local remaining=$3\n  local result\n  if [ $number -lt 0 ] || [ $need\
    \ -lt 0 ] || [ $remaining -lt 0 ]; then\n    echo \"Invalid input\"\n    return\
    \ 1\n  fi\n  if [ $number -eq 0 ]; then\n    echo \"0\"\n    return 0\n  fi\n\
    \  if [ $number -eq 1 ]; then\n    echo \"1\"\n    return 0\n  fi\n  if [ $number\
    \ -eq 2 ]; then\n    echo \"2\"\n    return 0\n  fi\n  if [ $number -eq 3 ]; then\n\
    \    echo \"3\"\n    return 0\n  fi\n  if [ $number -eq 4 ]; then\n    echo \"\
    4\"\n    return 0\n  fi\n  if [ $number -eq 5 ]; then\n    echo \"5\"\n    return\
    \ 0\n  fi\n  if [ $number -eq 6 ]; then\n    echo \"6\"\n    return 0\n  fi\n\
    \  if [ $number -eq 7 ]; then\n    echo \"7\"\n    return 0\n  fi\n  if [ $number\
    \ -eq 8 ]; then\n    echo \"8\"\n    return 0\n  fi\n  if [ $number -eq 9 ]; then\n\
    \    echo \"9\"\n    return 0\n  fi\n  if [ $number -eq 10 ]; then\n    echo \"\
    10\"\n    return 0\n  fi\n  if [ $number -eq 11 ]; then\n    echo \"11\"\n   \
    \ return 0\n  fi\n  if [ $number -eq 12 ]; then\n    echo \"12\"\n    return 0\n\
    \  fi\n  if [ $number -eq 13 ]; then\n    echo \"13\"\n    return 0\n  fi\n  if\
    \ [ $number -eq 14 ]; then\n    echo \"14\"\n    return 0\n  fi\n  if [ $number\
    \ -eq 15 ]; then\n    echo \"15\"\n    return 0\n  fi\n  if [ $number -eq 16 ];\
    \ then\n    echo \"16\"\n    return 0\n  fi\n  if [ $number -eq 17 ]; then\n \
    \   echo \"17\"\n    return 0\n  fi\n  if [ $number -eq 18 ]; then\n    echo \"\
    18\"\n    return 0\n  fi\n  if [ $number -eq 19 ]; then\n    echo \"19\"\n   \
    \ return 0\n  fi\n  if [ $number -eq 20 ]; then\n    echo \"20\"\n    return 0\n\
    \  fi\n  if [ $number -eq 21 ]; then\n    echo \"21\"\n    return 0\n  fi\n  if\
    \ [ $number -eq 22 ]; then\n    echo \"22\"\n    return 0\n  fi\n  if [ $number\
    \ -eq 23 ]; then\n    echo \"23\"\n    return 0\n  fi\n  if [ $number -eq 24 ];\
    \ then\n", "    local number=$1\n    local need=$2\n    local remaining=$3\n \
    \   local result\n    if [ $number -eq 0 ]; then\n        result=`echo \"$need\"\
    \ | bc`\n    else\n        result=`echo \"$need*$number\" | bc`\n    fi\n    if\
    \ [ $result -le $remaining ]; then\n        echo \"$result\"\n    else\n     \
    \   echo \"$result\"\n    fi", "  local number=$1\n  local need=$2\n  local remaining=$3\n\
    \  local result\n  result=$(echo \"$number * $need\" | bc)\n  result=$(echo \"\
    $result - $remaining\" | bc)\n  result=$(echo \"$result / $need\" | bc)\n  result=$(echo\
    \ \"$result * $need\" | bc)\n  result=$(echo \"$result - $remaining\" | bc)\n\
    \  result=$(echo \"$result / $number\" | bc)\n  result=$(echo \"$result + $remaining\"\
    \ | bc)\n  result=$(echo \"$result / $number\" | bc)\n  result=$(echo \"$result\
    \ + $remaining\" | bc)\n  result=$(echo \"$result / $need\" | bc)\n  result=$(echo\
    \ \"$result + $remaining\" | bc)\n  result=$(echo \"$result / $number\" | bc)\n\
    \  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo \"$result / $need\"\
    \ | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo \"$result\
    \ / $number\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo\
    \ \"$result / $need\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n\
    \  result=$(echo \"$result / $number\" | bc)\n  result=$(echo \"$result + $remaining\"\
    \ | bc)\n  result=$(echo \"$result / $need\" | bc)\n  result=$(echo \"$result\
    \ + $remaining\" | bc)\n  result=$(echo \"$result / $number\" | bc)\n  result=$(echo\
    \ \"$result + $remaining\" | bc)\n  result=$(echo \"$result / $need\" | bc)\n\
    \  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo \"$result / $number\"\
    \ | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo \"$result\
    \ / $need\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo\
    \ \"$result / $number\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n\
    \  result=$(echo \"$result / $need\" | bc)\n  result=$(echo \"$result + $remaining\"\
    \ | bc)\n  result=$(echo \"$result / $number\" | bc)\n  result=$(echo \"$result\
    \ + $remaining\" | bc)\n  result=$(echo \"$result / $", "  local number=$1\n \
    \ local need=$2\n  local remaining=$3\n  local result\n  result=()\n  if [ $number\
    \ -eq 0 ] || [ $need -eq 0 ] || [ $remaining -eq 0 ]; then\n    echo \"Invalid\
    \ input\"\n    return 0\n  fi\n  while [ $number -gt 0 ]; do\n    if [ $remaining\
    \ -eq 0 ]; then\n      result+=(\"$number\")\n      number=0\n      remaining=$need\n\
    \      need=$((need-1))\n    else\n      result+=(\"$number\")\n      number=$((number-1))\n\
    \      remaining=$((remaining-1))\n      need=$((need-1))\n    fi\n  done\n  echo\
    \ \"${result[@]}\"", "  local number need remaining carrots\n  number=$1\n  need=$2\n\
    \  remaining=$3\n  carrots=0\n  while [ $remaining -gt 0 ]; do\n    carrots=$((carrots+1))\n\
    \    remaining=$((remaining-1))\n  done\n  echo \"$((carrots+need))\"\n  echo\
    \ \"$((carrots+need))\"", "  local number=$1\n  local need=$2\n  local remaining=$3\n\
    \  local result\n  result=$(echo $((number-need)) | bc)\n  if [ $result -eq 0\
    \ ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$(echo $((need-number)) | bc)", "    local number=$1\n\
    \    local need=$2\n    local remaining=$3\n    local result\n    local count\n\
    \    local carrot\n    local carrotCount\n    local carrotNeed\n    local carrotRemaining\n\
    \    local carrotCount2\n    local carrotNeed2\n    local carrotRemaining2\n \
    \   local carrotCount3\n    local carrotNeed3\n    local carrotRemaining3\n  \
    \  local carrotCount4\n    local carrotNeed4\n    local carrotRemaining4\n   \
    \ local carrotCount5\n    local carrotNeed5\n    local carrotRemaining5\n    local\
    \ carrotCount6\n    local carrotNeed6\n    local carrotRemaining6\n    local carrotCount7\n\
    \    local carrotNeed7\n    local carrotRemaining7\n    local carrotCount8\n \
    \   local carrotNeed8\n    local carrotRemaining8\n    local carrotCount9\n  \
    \  local carrotNeed9\n    local carrotRemaining9\n    local carrotCount10\n  \
    \  local carrotNeed10\n    local carrotRemaining10\n    local carrotCount11\n\
    \    local carrotNeed11\n    local carrotRemaining11\n    local carrotCount12\n\
    \    local carrotNeed12\n    local carrotRemaining12\n    local carrotCount13\n\
    \    local carrotNeed13\n    local carrotRemaining13\n    local carrotCount14\n\
    \    local carrotNeed14\n    local carrotRemaining14\n    local carrotCount15\n\
    \    local carrotNeed15\n    local carrotRemaining15\n    local carrotCount16\n\
    \    local carrotNeed16\n    local carrotRemaining16\n    local carrotCount17\n\
    \    local carrotNeed17\n    local carrotRemaining17\n    local carrotCount18\n\
    \    local carrotNeed18\n    local carrotRemaining18\n    local carrotCount19\n\
    \    local carrotNeed19\n    local carrotRemaining19\n    local carrotCount20\n\
    \    local carrotNeed20\n    local carrotRemaining20\n    local carrotCount21\n\
    \    local carrotNeed21\n    local carrotRemaining21\n    local carrotCount22\n\
    \    local carrotNeed22\n    local carrotRemaining22", "  local number need remaining\
    \ carrots carrots_left carrots_eaten carrots_eaten_carrots\n  number=$1\n  need=$2\n\
    \  remaining=$3\n  carrots=$((number-need))\n  carrots_left=$((number-carrots))\n\
    \  carrots_eaten=$((carrots-carrots_left))\n  carrots_eaten_carrots=$((carrots_eaten*carrots_eaten))\n\
    \  echo \"$carrots_eaten_carrots\"", "  local number=$1\n  local need=$2\n  local\
    \ remaining=$3\n  local result\n  result=$(echo \"$number * $need\" | bc)\n  result=$(echo\
    \ \"$result - $remaining\" | bc)\n  result=$(echo \"$result / $need\" | bc)\n\
    \  result=$(echo \"$result * $need\" | bc)\n  result=$(echo \"$result - $remaining\"\
    \ | bc)\n  result=$(echo \"$result / $number\" | bc)\n  result=$(echo \"$result\
    \ + $remaining\" | bc)\n  result=$(echo \"$result / $number\" | bc)\n  result=$(echo\
    \ \"$result + $remaining\" | bc)\n  result=$(echo \"$result / $need\" | bc)\n\
    \  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo \"$result / $number\"\
    \ | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo \"$result\
    \ / $need\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo\
    \ \"$result / $number\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n\
    \  result=$(echo \"$result / $need\" | bc)\n  result=$(echo \"$result + $remaining\"\
    \ | bc)\n  result=$(echo \"$result / $number\" | bc)\n  result=$(echo \"$result\
    \ + $remaining\" | bc)\n  result=$(echo \"$result / $need\" | bc)\n  result=$(echo\
    \ \"$result + $remaining\" | bc)\n  result=$(echo \"$result / $number\" | bc)\n\
    \  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo \"$result / $need\"\
    \ | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo \"$result\
    \ / $number\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo\
    \ \"$result / $need\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n\
    \  result=$(echo \"$result / $number\" | bc)\n  result=$(echo \"$result + $remaining\"\
    \ | bc)\n  result=$(echo \"$result / $need\" | bc)\n  result=$(echo \"$result\
    \ + $remaining\" | bc)\n  result=$(echo \"$result / $number\" | bc)\n  result=$(echo\
    \ \"$result + $remaining\" | bc)\n  result=$(echo \"$result / $", "    local number=$1\n\
    \    local need=$2\n    local remaining=$3\n    local result\n    local i\n  \
    \  local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    ", "    local number need remaining carrots\n    number=$1\n\
    \    need=$2\n    remaining=$3\n    carrots=0\n    while [ $remaining -gt 0 ]\n\
    \    do\n        (( carrots += 1 ))\n        (( remaining -= 1 ))\n    done\n\
    \    echo $(( carrots + need ))\n    echo $(( carrots - need ))", "  local number=$1\n\
    \  local need=$2\n  local remaining=$3\n  local result\n  result=()\n  if [ $number\
    \ -lt 0 ] || [ $need -lt 0 ] || [ $remaining -lt 0 ]; then\n    echo \"Invalid\
    \ input\"\n    return 0\n  fi\n  while [ $number -gt 0 ]; do\n    if [ $remaining\
    \ -eq 0 ]; then\n      result+=(\"$number\")\n      number=0\n      remaining=0\n\
    \    else\n      result+=(\"$number\")\n      number=$((number-need))\n      remaining=$((remaining-need))\n\
    \    fi\n  done\n  if [ $remaining -eq 0 ]; then\n    result+=(\"$number\")\n\
    \  fi\n  echo \"${result[@]}\"", "  local number=$1\n  local need=$2\n  local\
    \ remaining=$3\n  local result\n  result=$(echo $number | bc)\n  result=$((result\
    \ - $need))\n  result=$((result + $remaining))\n  result=$(echo $result | bc)\n\
    \  result=$((result + 1))\n  result=$(echo $result | bc)\n  result=$((result -\
    \ 1))\n  result=$(echo $result | bc)\n  result=$((result + 1))\n  result=$(echo\
    \ $result | bc)\n  result=$((result - 1))\n  result=$(echo $result | bc)\n  result=$((result\
    \ + 1))\n  result=$(echo $result | bc)\n  result=$((result - 1))\n  result=$(echo\
    \ $result | bc)\n  result=$((result + 1))\n  result=$(echo $result | bc)\n  result=$((result\
    \ - 1))\n  result=$(echo $result | bc)\n  result=$((result + 1))\n  result=$(echo\
    \ $result | bc)\n  result=$((result - 1))\n  result=$(echo $result | bc)\n  result=$((result\
    \ + 1))\n  result=$(echo $result | bc)\n  result=$((result - 1))\n  result=$(echo\
    \ $result | bc)\n  result=$((result + 1))\n  result=$(echo $result | bc)\n  result=$((result\
    \ - 1))\n  result=$(echo $result | bc)\n  result=$((result + 1))\n  result=$(echo\
    \ $result | bc)\n  result=$((result - 1))\n  result=$(echo $result | bc)\n  result=$((result\
    \ + 1))\n  result=$(echo $result | bc)\n  result=$((result - 1))\n  result=$(echo\
    \ $result | bc)\n  result=$((result + 1))\n  result=$(echo $result | bc)\n  result=$((result\
    \ - 1))\n  result=$(echo $result | bc)\n  result=$((result + 1))\n  result=$(echo\
    \ $result | bc)\n  result=$((result - 1))\n  result=$(echo $result | bc)\n  result=$((result\
    \ + 1))\n  result=$(echo $result | bc)\n  result=$((result - 1))\n  result=$(echo\
    \ $result | bc)\n  result=$((result + 1))\n  result=$(echo $result | bc)\n  result=$((result\
    \ - 1))\n  result=$(echo $result | bc)\n  result=$((result + 1))\n  ", "  local\
    \ number=$1\n  local need=$2\n  local remaining=$3\n  local result\n  result=$(echo\
    \ \"$number * $need\" | bc)\n  result=$(echo \"$result - $remaining\" | bc)\n\
    \  result=$(echo \"$result / $need\" | bc)\n  result=$(echo \"$result - $number\"\
    \ | bc)\n  result=$(echo \"$result / $remaining\" | bc)\n  result=$(echo \"$result\
    \ + $number\" | bc)\n  result=$(echo \"$result + $need\" | bc)\n  result=$(echo\
    \ \"$result + $remaining\" | bc)\n  result=$(echo \"$result - $number\" | bc)\n\
    \  result=$(echo \"$result - $need\" | bc)\n  result=$(echo \"$result - $remaining\"\
    \ | bc)\n  result=$(echo \"$result + $number\" | bc)\n  result=$(echo \"$result\
    \ + $need\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo\
    \ \"$result - $number\" | bc)\n  result=$(echo \"$result - $need\" | bc)\n  result=$(echo\
    \ \"$result - $remaining\" | bc)\n  result=$(echo \"$result + $number\" | bc)\n\
    \  result=$(echo \"$result + $need\" | bc)\n  result=$(echo \"$result + $remaining\"\
    \ | bc)\n  result=$(echo \"$result - $number\" | bc)\n  result=$(echo \"$result\
    \ - $need\" | bc)\n  result=$(echo \"$result - $remaining\" | bc)\n  result=$(echo\
    \ \"$result + $number\" | bc)\n  result=$(echo \"$result + $need\" | bc)\n  result=$(echo\
    \ \"$result + $remaining\" | bc)\n  result=$(echo \"$result - $number\" | bc)\n\
    \  result=$(echo \"$result - $need\" | bc)\n  result=$(echo \"$result - $remaining\"\
    \ | bc)\n  result=$(echo \"$result + $number\" | bc)\n  result=$(echo \"$result\
    \ + $need\" | bc)\n  result=$(echo \"$result + $remaining\" | bc)\n  result=$(echo\
    \ \"$result - $number\" | bc)\n  result=$(echo \"$result - $need\" | bc)\n  result=$(echo\
    \ \"$result - $remaining\" | bc)\n  result=$(echo \"$result + $number\" | bc)\n\
    \  result=$(echo \"$result + $need\" | bc)\n  result=$(echo \"$result + $", " \
    \ local number=$1\n  local need=$2\n  local remaining=$3\n  local result\n  result=$((number-need))\n\
    \  result=$((result+remaining))\n  echo \"$result\"", "  local number=$1\n  local\
    \ need=$2\n  local remaining=$3\n  local result\n  if [ $number -lt 0 ] || [ $need\
    \ -lt 0 ] || [ $remaining -lt 0 ]; then\n    echo \"Invalid input\"\n    return\n\
    \  fi\n  result=$(echo $(( $number - $need )) | bc)\n  result=$(( $result + $remaining\
    \ ))\n  echo \"$result\"", "  local number=$1\n  local need=$2\n  local remaining=$3\n\
    \  local result\n  result=()\n  if [ $number -lt 0 ] || [ $need -lt 0 ] || [ $remaining\
    \ -lt 0 ]; then\n    echo \"Usage: eat <number> <need> <remaining>\"\n    return\
    \ 1\n  fi\n  local total=0\n  local left=0\n  while [ $remaining -gt 0 ]; do\n\
    \    total=$((total+need))\n    left=$((left-need))\n    result+=($total)\n  \
    \  need=$((need-1))\n    remaining=$((remaining-1))\n  done\n  if [ $remaining\
    \ -eq 0 ]; then\n    result+=($total)\n  fi\n  echo \"${result[@]}\"", "  local\
    \ number=$1\n  local need=$2\n  local remaining=$3\n  local result\n  result=()\n\
    \  if ((number <= 0) && (need <= 0) && (remaining <= 0)); then\n    echo \"Invalid\
    \ input\"\n  else\n    if ((number <= 0) && (need <= 0)); then\n      echo \"\
    Invalid input\"\n    elif ((number <= 0) && (remaining <= 0)); then\n      echo\
    \ \"Invalid input\"\n    elif ((need <= 0) && (remaining <= 0)); then\n      echo\
    \ \"Invalid input\"\n    elif ((number <= 0) && (need > 1000)); then\n      echo\
    \ \"Invalid input\"\n    elif ((number <= 0) && (remaining > 1000)); then\n  \
    \    echo \"Invalid input\"\n    elif ((need <= 0) && (remaining > 1000)); then\n\
    \      echo \"Invalid input\"\n    elif ((number > 1000)); then\n      echo \"\
    Invalid input\"\n    elif ((need > 1000)); then\n      echo \"Invalid input\"\n\
    \    elif ((remaining > 1000)); then\n      echo \"Invalid input\"\n    elif ((number\
    \ > need)); then\n      echo \"Invalid input\"\n    elif ((need > number)); then\n\
    \      echo \"Invalid input\"\n    elif ((remaining > number)); then\n      echo\
    \ \"Invalid input\"\n    elif ((number > remaining)); then\n      echo \"Invalid\
    \ input\"\n    elif ((need > remaining)); then\n      echo \"Invalid input\"\n\
    \    elif ((remaining > remaining)); then\n      echo \"Invalid input\"\n    elif\
    \ ((number <= need)); then\n      echo \"Invalid input\"\n    elif ((need <= number));\
    \ then\n      echo \"Invalid input\"\n    elif ((remaining <= number)); then\n\
    \      echo \"Invalid input\"\n    elif ((number <= remaining)); then\n      echo\
    \ \"Invalid input\"\n    elif ((need <= remaining)); then\n      echo \"Invalid\
    \ input\"\n    elif ((remaining <= remaining)); then\n      echo \"Invalid input\"\
    \n    elif ((number <= need) && (number <= remaining)); then\n      result=(\"\
    $number\",\"$need\")\n    elif ((number <= need) && (need <= remaining)); then\n\
    \      result=(\"$number\",\"$remaining\")\n    elif ((number <= remaining) &&\
    \ (number <= need)); then\n      result=(\"$remaining\",\"$number\")\n    elif\
    \ ((number <= remaining) && (remaining <= need)); then\n      result=(\"$remaining\"\
    ,\"$remaining\")\n    elif ((number <= need) && (remaining <= need)); then\n \
    \     result=(\"$need\",\"$remaining\")\n    elif ((number <= remaining) && (remaining\
    \ <= need)); then\n      result", "  local number=$1\n  local need=$2\n  local\
    \ remaining=$3\n  local total=0\n  local left=0\n  local result\n  local i\n \
    \ for i in $(seq 1 $number); do\n    (( total+=1 ))\n    (( left+=1 ))\n  done\n\
    \  result=$(echo $total $left | bc)\n  echo $result"]
stop_tokens:
- "\n}"

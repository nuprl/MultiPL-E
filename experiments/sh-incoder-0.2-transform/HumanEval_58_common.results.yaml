language: sh
name: HumanEval_58_common
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common_elements=()\n\
    \    local i\n    local j\n    local common_length\n    local common_length2\n\
    \    local common_length3\n    local common_length4\n    local common_length5\n\
    \    local common_length6\n    local common_length7\n    local common_length8\n\
    \    local common_length9\n    local common_length10\n    local common_length11\n\
    \    local common_length12\n    local common_length13\n    local common_length14\n\
    \    local common_length15\n    local common_length16\n    local common_length17\n\
    \    local common_length18\n    local common_length19\n    local common_length20\n\
    \    local common_length21\n    local common_length22\n    local common_length23\n\
    \    local common_length24\n    local common_length25\n    local common_length26\n\
    \    local common_length27\n    local common_length28\n    local common_length29\n\
    \    local common_length30\n    local common_length31\n    local common_length32\n\
    \    local common_length33\n    local common_length34\n    local common_length35\n\
    \    local common_length36\n    local common_length37\n    local common_length38\n\
    \    local common_length39\n    local common_length40\n    local common_length41\n\
    \    local common_length42\n    local common_length43\n    local common_length44\n\
    \    local common_length45\n    local common_length46\n    local common_length47\n\
    \    local common_length48\n    local common_length49\n    local common_length50\n\
    \    local common_length51\n    local common_length52\n    local common_length53\n\
    \    local common_length54\n    local common_length55\n    local common_length56\n\
    \    local common_length57\n    local common_length58\n    local common_length59\n\
    \    local common_length60\n    local common_length61\n    local common_length62\n\
    \    local common_length63\n    local common_length64\n    local common_length65\n\
    \    local common_length66\n    local common_length67\n    local common_length68\n\
    \    local common_length69\n    local common_length70\n    local common_length71\n\
    \    local common_length72\n    local common_length73\n    local common_length74\n\
    \    local common_length75\n    local common_length76\n    local common_length77\n\
    \    local common_length78\n    local common_length79\n    local common_length80\n\
    \    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local i j\n    local\
    \ common_list\n    common_list=$(bc <<< \"$(sort <<< \"$list_1 $list_2\" | uniq\
    \ -u)\"\n    )\n    echo $common_list\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1 list2\n    list1=$1\n    list2=$2\n    shift\n\
    \    shift\n    local list1len\n    local list2len\n    list1len=$(expr ${#list1}\
    \ + 1)\n    list2len=$(expr ${#list2} + 1)\n    local common\n    local commonlen\n\
    \    commonlen=0\n    for (( i = 0; i < ${list1len}; i++ )); do\n        for ((\
    \ j = 0; i < ${list2len}; j++ )); do\n            if [[ ${list1:$i:1} = ${list2:$j:1}\
    \ ]]; then\n                common+=(\"${list1:$i:1}\")\n                commonlen=$((commonlen\
    \ + 1))\n            fi\n        done\n    done\n    if [[ ${commonlen} -gt 0\
    \ ]]; then\n        common=$(IFS=' ' read -a common <<< \"${common[@]}\")\n  \
    \      sort -u \"${common[@]}\"\n    else\n        echo 0\n    fi\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local minlen\n\
    \    local maxlen\n    local min\n    local max\n    local diff\n    local found\n\
    \    local found1\n    local found2\n    local found3\n    local found4\n    local\
    \ found5\n    local found6\n    local found7\n    local found8\n    local found9\n\
    \    local found10\n    local found11\n    local found12\n    local found13\n\
    \    local found14\n    local found15\n    local found16\n    local found17\n\
    \    local found18\n    local found19\n    local found20\n    local found21\n\
    \    local found22\n    local found23\n    local found24\n    local found25\n\
    \    local found26\n    local found27\n    local found28\n    local found29\n\
    \    local found30\n    local found31\n    local found32\n    local found33\n\
    \    local found34\n    local found35\n    local found36\n    local found37\n\
    \    local found38\n    local found39\n    local found40\n    local found41\n\
    \    local found42\n    local found43\n    local found44\n    local found45\n\
    \    local found46\n    local found47\n    local found48\n    local found49\n\
    \    local found50\n    local found51\n    local found52\n    local found53\n\
    \    local found54\n    local found55\n    local found56\n    local found57\n\
    \    local found58\n    local found59\n    local found60\n    local found61\n\
    \    local found62\n    local found63\n    local found64\n    local found65\n\
    \    local found66\n    local found67\n    local found68\n    local found69\n\
    \    local found70\n    local found71\n    local found72\n    local found73\n\
    \    local found74\n    local found75\n    local found76\n    local found77\n\
    \    local found78\n    local found79\n    local found80\n    local found81\n\
    \    local found82\n    local found83\n    local found84\n    local found85\n\
    \    local found86\n    local found87\n    local found88\n    local found89\n\
    \    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n    local maxlen1\n    local maxlen2\n\
    \    local maxlen1\n    local maxlen2\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist ilist2 jlist jlist2 len1 len2 len\n    local list1 list2\n \
    \   list1=$1\n    list2=$2\n    len1=${#list1}\n    len2=${#list2}\n    ilist1=0\n\
    \    ilist2=0\n    jlist1=0\n    jlist2=0\n    while [ $ilist1 -lt $len1 ] ||\
    \ [ $ilist2 -lt $len2 ]; do\n        if [ $ilist1 -lt $len1 ]; then\n        \
    \    ilist1=$((ilist1+1))\n            list1=${list1:$ilist1}\n        fi\n  \
    \      if [ $ilist2 -lt $len2 ]; then\n            ilist2=$((ilist2+1))\n    \
    \        list2=${list2:$ilist2}\n        fi\n        if [ \"$list1\" == \"$list2\"\
    \ ]; then\n            jlist1=$((jlist1+1))\n            list1=$list1\n      \
    \      jlist2=$((jlist2+1))\n            list2=$list2\n        elif [ \"$list1\"\
    \ == \"$list2\" ]; then\n            jlist1=$((jlist1+1))\n            list1=$list1\n\
    \            jlist2=$((jlist2+1))\n            list2=$list2\n        elif [ \"\
    $list1\" == \"$list2\" ]; then\n            jlist1=$((jlist1+1))\n           \
    \ list1=$list1\n            jlist2=$((jlist2+1))\n            list2=$list2\n \
    \       else\n            i=$((ilist1+ilist2))\n            list1=$list1\n   \
    \         list2=$list2\n            ilist1=$((ilist1+1))\n            ilist2=$((ilist2+1))\n\
    \        fi\n    done\n    echo $list1\n    echo $list2\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local sorted\n    local tmp1\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n\n}\n\ncandidate() {\n   \
    \ common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local maxlen1\n    local maxlen2\n    local maxlendiff\n    local maxlendiff1\n\
    \    local maxlendiff2\n    local maxlendiffdiff\n    local maxlendiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiffdiff\n    local maxlendiffdiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiffdiff2\n    local maxlendiffdiffdiffdiff\n\
    \    local maxlendiffdiffdiff1\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiffdiff2\n    local maxlendiffdiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff2\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common_elements=()\n\
    \    local list_1_elements=()\n    local list_2_elements=()\n    local common_elements_count=()\n\
    \    local list_1_elements_count=()\n    local list_2_elements_count=()\n    local\
    \ common_elements_count_temp\n    local list_1_elements_count_temp\n    local\
    \ list_2_elements_count_temp\n    local common_elements_count_temp_2\n    local\
    \ list_1_elements_count_temp_2\n    local list_2_elements_count_temp_2\n    local\
    \ common_elements_count_temp_3\n    local list_1_elements_count_temp_3\n    local\
    \ list_2_elements_count_temp_3\n    local common_elements_count_temp_4\n    local\
    \ list_1_elements_count_temp_4\n    local list_2_elements_count_temp_4\n    local\
    \ common_elements_count_temp_5\n    local list_1_elements_count_temp_5\n    local\
    \ list_2_elements_count_temp_5\n    local common_elements_count_temp_6\n    local\
    \ list_1_elements_count_temp_6\n    local list_2_elements_count_temp_6\n    local\
    \ common_elements_count_temp_7\n    local list_1_elements_count_temp_7\n    local\
    \ list_2_elements_count_temp_7\n    local common_elements_count_temp_8\n    local\
    \ list_1_elements_count_temp_8\n    local list_2_elements_count_temp_8\n    local\
    \ common_elements_count_temp_9\n    local list_1_elements_count_temp_9\n    local\
    \ list_2_elements_count_temp_9\n    local common_elements_count_temp_10\n    local\
    \ list_1_elements_count_temp_10\n    local list_2_elements_count_temp_10\n   \
    \ local common_elements_count_temp_11\n    local list_1_elements_count_temp_11\n\
    \    local list_2_elements_count_temp_11\n    local common_elements_count_temp_12\n\
    \    local list_1_elements_count_temp_12\n    local list_2_elements_count_temp_12\n\
    \    local common_elements_count_temp_13\n    local list_1_elements_count_temp_13\n\
    \    local list_2_elements_count_temp_13\n    local common_elements_count_temp_14\n\
    \    local list_1_elements_count_temp_14\n    local list_2_elements_count_temp_14\n\
    \    local common_elements_count_temp_15\n    local list_1_elements_count_temp_15\n\
    \    local list_2_elements_count_temp_15\n    local common_elements_count_temp_16\n\
    \    local list_1_element\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local i j k l m n o\
    \ p q r s t u v w x y z\n    i=$((${#list_1}-1))\n    j=$((${#list_2}-1))\n  \
    \  while (( i >= 0 )) && (( j >= 0 )); do\n        k=$((${#list_1}-1))\n     \
    \   l=$((${#list_2}-1))\n        while (( k >= 0 )) && (( l >= 0 )); do\n    \
    \        m=$((${#list_1}-1))\n            n=$((${#list_2}-1))\n            while\
    \ (( m >= 0 )) && (( n >= 0 )); do\n                o=$((${#list_1}-1))\n    \
    \            p=$((${#list_2}-1))\n                while (( o >= 0 )) && (( p >=\
    \ 0 )); do\n                    q=$((${#list_1}-1))\n                    r=$((${#list_2}-1))\n\
    \                    while (( q >= 0 )) && (( r >= 0 )); do\n                \
    \        s=$((${#list_1}-1))\n                        t=$((${#list_2}-1))\n  \
    \                      while (( s >= 0 )) && (( t >= 0 )); do\n              \
    \              u=$((${#list_1}-1))\n                            v=$((${#list_2}-1))\n\
    \                            while (( u >= 0 )) && (( v >= 0 )); do\n        \
    \                        w=$((${#list_1}-1))\n                               \
    \ x=$((${#list_2}-1))\n                                while (( w >= 0 )) && ((\
    \ x >= 0 )); do\n                                    y=$((${#list_1}-1))\n   \
    \                                 z=$((${#list_2}-1))\n                      \
    \              while (( y >= 0 )) && (( z >= 0 )); do\n                      \
    \                  if [[ ${list_1:$i} == ${list_2:$j} ]]; then\n             \
    \                               list_1=$(echo \"${list_1:0:$i}${list_1:$i} ${list_1:$j}${list_1:$j}${list_2:$k}${list_2:$k}${list_2:$l}${list_2:$l}${list_2:$m}${list_2:$m}${list_2:$n}${list_2:$n}${list_2:$o}${list_2:$o}${list_2:$p}${list_2:$p}${list_2:$q}${list_2:$q}${list_2:$r}${list_2:$r}${list_2:$s}${list_2:$s}${list_2:$t}${list_2:$t}${list_2:$u}\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkiw7i5kk.sh: line 55: unexpected EOF while looking for matching
    `"''

    /tmp/tmpkiw7i5kk.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local list1 list2\n    list1=$1\n\
    \    list2=$2\n    local sorted\n    sorted=()\n    for (( i = 0; i < ${#list1};\
    \ i++ )); do\n        for (( j = 0; i < ${#list2}; j++ )); do\n            [[\
    \ \"${list1:$i:1}\" == \"${list2:$j:1}\" ]] && continue\n            (( k = j\
    \ + 1 ))\n            break\n        done\n        sorted+=(\"${list1:$i:1}\"\
    )\n    done\n    for (( i = 0; i < ${#list2}; i++ )); do\n        for (( j = 0;\
    \ i < ${#list1}; j++ )); do\n            [[ \"${list2:$i:1}\" == \"${list1:$j:1}\"\
    \ ]] && continue\n            (( k = j + 1 ))\n            break\n        done\n\
    \        sorted+=(\"${list2:$i:1}\")\n    done\n    sorted=($(sort <<<\"${sorted[*]}\"\
    \ | uniq))\n    echo \"${sorted[*]}\"\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n\
    \    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a\
    \ i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a A\n    local -a B\n    local\
    \ -a C\n    local -a D\n    local -a E\n    local -a F\n    local -a G\n    local\
    \ -a H\n    local -a I\n    local -a J\n    local -a K\n    local -a L\n    local\
    \ -a M\n    local -a N\n    local -a O\n    local -a P\n    local -a Q\n    local\
    \ -a R\n    local -a S\n    local -a T\n    local -a U\n    local -a V\n    local\
    \ -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a A\n    local -a B\n    local -a C\n    local -a D\n    local -a E\n    local\
    \ -a F\n    local -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common=$1\n    local list2=$2\n    local sortedlist\n    local i\n \
    \   local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    IFS=$'\\n' read -r -a list1 <<< \"$1\"\n    IFS=$'\\\
    n' read -r -a list2 <<< \"$2\"\n    local common\n    local i\n    common=()\n\
    \    for ((i=0; i<${#list1[*]}; i++)); do\n        local j\n        for ((j=0;\
    \ j<${#list2[*]}; j++)); do\n            [[ ${list1[i]} == ${list2[j]} ]] && break\n\
    \        done\n        [[ ${j} -eq ${#list2[*]} ]] && common+=(\"${list1[i]}\"\
    )\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local len1\n  local len2\n  local result\n  len1=\"${#list1[@]}\"\n  len2=\"\
    ${#list2[@]}\"\n  result=()\n  for ((i=0; i<${len1}; i++)); do\n    for ((j=0;\
    \ j<${len2}; j++)); do\n      common=\"${list1[i]} ${list2[j]}\"\n      if [[\
    \ ${list1[i]} != ${list2[j]} ]]; then\n        common=\"${common} ${list1[i]}\
    \ ${list2[j]}\"\n      fi\n      if [[ ${list1[i]} == ${list2[j]} ]]; then\n \
    \       result+=(\"${common}\")\n      fi\n    done\n  done\n  printf \"%s\\n\"\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local len\n    local ret\n \
    \   local tmp\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local result\n\n    len1=\"${#list1}\"\n    len2=\"${#list2}\"\n    len=\"${len1}\"\
    \n\n    if [ \"${len}\" -eq 0 -o \"${len}\" -eq 1 ]; then\n        return 0\n\
    \    fi\n\n    if [ \"${len1}\" -gt \"${len2}\" ]; then\n        common=\"${list1}\"\
    \n        list1=\"${list2}\"\n        list2=\"${common}\"\n    fi\n\n    local\
    \ i1\n    local i2\n    local k\n    local result\n\n    for ((i1=0; i1<len1;\
    \ i1++)); do\n        result=\n        for ((i2=0; i2<len2; i2++)); do\n     \
    \       k=\"${list1:$i1:1}\"\n            if [ \"${list2:$i2:1}\" == \"${k}\"\
    \ ]; then\n                result=\"${result} ${list2:$i2:1}\"\n            fi\n\
    \        done\n        echo \"${result}\"\n    done\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local len1\n    local\
    \ len2\n    local list1\n    local list2\n    local tmp\n    local x\n    local\
    \ y\n    local z\n    local list\n    local list2\n    local list1\n    local\
    \ list2\n    local list1\n    local list2\n    local list1\n    local list2\n\
    \    local list1\n    local list2\n    local list1\n    local list2\n    local\
    \ list1\n    local list2\n    local list1\n    local list2\n    local list1\n\
    \    local list2\n    local list1\n    local list2\n    local list1\n    local\
    \ list2\n    local list1\n    local list2\n    local list1\n    local list2\n\
    \    local list1\n    local list2\n    local list1\n    local list2\n    local\
    \ list1\n    local list2\n    local list1\n    local list2\n    local list1\n\
    \    local list2\n    local list1\n    local list2\n    local list1\n    local\
    \ list2\n    local list1\n    local list2\n    local list1\n    local list2\n\
    \    local list1\n    local list2\n    local list1\n    local list2\n    local\
    \ list1\n    local list2\n    local list1\n    local list2\n    local list1\n\
    \    local list2\n    local list1\n    local list2\n    local list1\n    local\
    \ list2\n    local list1\n    local list2\n    local list1\n    local list2\n\
    \    local list1\n    local list2\n    local list1\n    local list2\n    local\
    \ list1\n    local list2\n    local list1\n    local list2\n    local list1\n\
    \    local list2\n    local list1\n    local list2\n    local list1\n    local\
    \ list2\n    local list1\n    local list2\n    local list1\n    local list2\n\
    \    local list1\n    local list2\n    local list1\n    local list2\n    local\
    \ list1\n    local list2\n    local list1\n    local list2\n    local list1\n\
    \    local list2\n    local list1\n    local list2\n    \n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1\n    local list_2\n    local i\n    local\
    \ j\n    local common_list_1\n    local common_list_2\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list1\n    local list2\n    local i\n    local\
    \ j\n    list1=$1\n    list2=$2\n    common_list=$( sort -u )\n    for (( i =\
    \ 0; i < ${#list1}; i++ )); do\n        for (( j = 0; i < ${#list2}; j++ )); do\n\
    \            if [[ ${list1:$i:1} = ${list2:$j:1} ]]; then\n                common_list=\"\
    $common_list ${list1:$i:1}\"\n            fi\n        done\n    done\n    echo\
    \ \"${common_list}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=17 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common=$1\n    shift\n    local list1=$@\n    local list2=$@\n    local\
    \ common\n    local i\n    local j\n    local list1_len\n    local list2_len\n\
    \    local common_len\n    local common_element\n    local common_element_len\n\
    \    local common_element_count\n    local common_element_count_max\n    local\
    \ common_element_count_min\n    local common_element_count_diff\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local xlen\n    local\
    \ ylen\n    local zlen\n    local xpos\n    local ypos\n    local zpos\n    local\
    \ xpos2\n    local ypos2\n    local zpos2\n    local xpos3\n    local ypos3\n\
    \    local zpos3\n    local xpos4\n    local ypos4\n    local zpos4\n    local\
    \ xpos5\n    local ypos5\n    local zpos5\n    local xpos6\n    local ypos6\n\
    \    local zpos6\n    local xpos7\n    local ypos7\n    local zpos7\n    local\
    \ xpos8\n    local ypos8\n    local zpos8\n    local xpos9\n    local ypos9\n\
    \    local zpos9\n    local xpos10\n    local ypos10\n    local zpos10\n    local\
    \ xpos11\n    local ypos11\n    local zpos11\n    local xpos12\n    local ypos12\n\
    \    local zpos12\n    local xpos13\n    local ypos13\n    local zpos13\n    local\
    \ xpos14\n    local ypos14\n    local zpos14\n    local xpos15\n    local ypos15\n\
    \    local zpos15\n    local xpos16\n    local ypos16\n    local zpos16\n    local\
    \ xpos17\n    local ypos17\n    local zpos17\n    local xpos18\n    local ypos18\n\
    \    local zpos18\n    local xpos19\n    local ypos19\n    local zpos19\n    local\
    \ xpos20\n    local ypos20\n    local zpos20\n    local xpos21\n    local ypos21\n\
    \    local zpos21\n    local xpos22\n    local ypos22\n    local zpos22\n    local\
    \ xpos23\n    local ypos23\n    local zpos23\n    local xpos24\n    local ypos24\n\
    \    local zpos24\n    local xpos25\n    local \n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local len\n    local tmp\n\
    \    local x\n    local y\n    local z\n    local len\n    local tmp\n    local\
    \ x\n    local y\n    local z\n    local len\n    local tmp\n    local x\n   \
    \ local y\n    local z\n    local len\n    local tmp\n    local x\n    local y\n\
    \    local z\n    local len\n    local tmp\n    local x\n    local y\n    local\
    \ z\n    local len\n    local tmp\n    local x\n    local y\n    local z\n   \
    \ local len\n    local tmp\n    local x\n    local y\n    local z\n    local len\n\
    \    local tmp\n    local x\n    local y\n    local z\n    local len\n    local\
    \ tmp\n    local x\n    local y\n    local z\n    local len\n    local tmp\n \
    \   local x\n    local y\n    local z\n    local len\n    local tmp\n    local\
    \ x\n    local y\n    local z\n    local len\n    local tmp\n    local x\n   \
    \ local y\n    local z\n    local len\n    local tmp\n    local x\n    local y\n\
    \    local z\n    local len\n    local tmp\n    local x\n    local y\n    local\
    \ z\n    local len\n    local tmp\n    local x\n    local y\n    local z\n   \
    \ local len\n    local tmp\n    local x\n    local y\n    local z\n    local len\n\
    \    local tmp\n    local x\n    local y\n    local z\n    local len\n    local\
    \ tmp\n    local x\n    local y\n    local z\n    local len\n    local tmp\n \
    \   local x\n    local y\n    local z\n    local len\n    local tmp\n    local\
    \ x\n    local y\n    local z\n    local len\n    local tmp\n    local x\n   \
    \ local y\n    local z\n    local len\n    local tmp\n    local x\n    local y\n\
    \    local z\n    local len\n    local tmp\n    local x\n\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    list1=$1\n    list2=$2\n    local i j\n    local common\n\
    \    common=()\n    for ((i=0; i<${#list1}; i++)); do\n        for ((j=0; j<${#list2};\
    \ j++)); do\n            [[ \"${list1[i]}\" == \"${list2[j]}\" ]] && \\\n    \
    \            common+=(\"${list1[i]}\")\n        done\n    done\n    echo \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n    local len\n    local len\n    local len\n  \
    \  local len\n    local len\n    local len\n    local len\n    local len\n   \
    \ local len\n    local len\n    local len\n    local len\n    local len\n    local\
    \ len\n    local len\n    local len\n    local len\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n    local len\n    local len\n    local len\n  \
    \  local len\n    local len\n    local len\n    local len\n    local len\n   \
    \ local len\n    local len\n    local len\n    local len\n    local len\n    local\
    \ len\n    local len\n    local len\n    local len\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n    local len\n    local len\n    local len\n  \
    \  local len\n    local len\n    local len\n    local len\n    local len\n   \
    \ local len\n    local len\n    local len\n    local len\n    local len\n    local\
    \ len\n    local len\n    local len\n    local len\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n    local len\n    local len\n    local len\n  \
    \  local len\n    local len\n    local len\n    local len\n    local len\n   \
    \ local len\n    local len\n    local len\n    local len\n    local len\n    local\
    \ len\n    local len\n    local len\n    local len\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list=\"$1\"\n    local other_list=\"$2\"\n    local sorted_common_list\n\
    \    local sorted_other_list\n    local common_list_sorted\n    local other_list_sorted\n\
    \    local common_list_sorted_unique\n    local other_list_sorted_unique\n   \
    \ local common_list_sorted_unique_nospace\n    local other_list_sorted_unique_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace\n    local other_list_sorted_unique_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace\n    local other_list_sorted_unique_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace\n    local\
    \ other_list_sorted_unique_nospace_nospace_nospace_nospace\n    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_no\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local len\n    local result\n\
    \    local tmp\n\n    len1=${#list1}\n    len2=${#list2}\n    len=${#list1}\n\
    \    if [ $len -ne $len2 ]; then\n        echo \"$list1 is not the same length\
    \ as $list2\"\n        return 1\n    fi\n    common=()\n    for ((i=0; i<$len;\
    \ i++)); do\n        tmp=${list1:$i:1}\n        for ((j=0; j<$len; j++)); do\n\
    \            if [ \"$i\" -eq \"$j\" ]; then\n                continue\n      \
    \      fi\n            if [ \"$tmp\" == \"${list2:$j:1}\" ]; then\n          \
    \      common+=(\"$tmp\")\n            fi\n        done\n    done\n    IFS=' '\
    \ read -r -a result <<<\"${common[@]}\"\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local result\n    local tmp\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common=$1\n    shift\n    local list1=$@\n    local list2=$@\n    local\
    \ i\n    local j\n    local ret\n    local common\n    local list1\n    local\
    \ list2\n    local i\n    local j\n    local ret\n    local common\n    local\
    \ list1\n    local list2\n    local i\n    local j\n    local ret\n    local common\n\
    \    local list1\n    local list2\n    local i\n    local j\n    local ret\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local ret\n    local common\n    local list1\n    local list2\n    local\
    \ i\n    local j\n    local ret\n    local common\n    local list1\n    local\
    \ list2\n    local i\n    local j\n    local ret\n    local common\n    local\
    \ list1\n    local list2\n    local i\n    local j\n    local ret\n    local common\n\
    \    local list1\n    local list2\n    local i\n    local j\n    local ret\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local ret\n    local common\n    local list1\n    local list2\n    local\
    \ i\n    local j\n    local ret\n    local common\n    local list1\n    local\
    \ list2\n    local i\n    local j\n    local ret\n    local common\n    local\
    \ list1\n    local list2\n    local i\n    local j\n    local ret\n    local common\n\
    \    local list1\n    local list2\n    local i\n    local j\n    local ret\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local ret\n    local common\n    local list1\n    local list2\n    local\
    \ i\n    local j\n    local ret\n    local common\n    local list1\n    local\
    \ list2\n    local i\n    local j\n    local ret\n    local common\n    local\
    \ list1\n    local list2\n    local i\n    local j\n    local ret\n    local common\n\
    \    local list1\n    local list2\n    local i\n    local j\n    local ret\n \
    \   local common\n    local list1\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    IFS=$'\\n' read -r -a list1 <<< \"$1\"\n    IFS=$'\\\
    n' read -r -a list2 <<< \"$2\"\n    comm -2 -3 <(printf '%s\\n' \"${list1[@]}\"\
    \ | sort) <(printf '%s\\n' \"${list2[@]}\" | sort)\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n\
    \    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a\
    \ i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a A\n    local -a B\n    local\
    \ -a C\n    local -a D\n    local -a E\n    local -a F\n    local -a G\n    local\
    \ -a H\n    local -a I\n    local -a J\n    local -a K\n    local -a L\n    local\
    \ -a M\n    local -a N\n    local -a O\n    local -a P\n    local -a Q\n    local\
    \ -a R\n    local -a S\n    local -a T\n    local -a U\n    local -a V\n    local\
    \ -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a A\n    local -a B\n    local -a C\n    local -a D\n    local -a E\n    local\
    \ -a F\n    local -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common_elements\n\
    \    common_elements=$(comm -2 -3 <(sort -u <<<\"$list_1\") <(sort -u <<<\"$list_2\"\
    ))\n    echo \"$common_elements\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list1\n    local list2\n    local i\n    local\
    \ j\n    local common_list_len\n    local common_list_len2\n    local common_list_len3\n\
    \    local common_list_len4\n    local common_list_len5\n    local common_list_len6\n\
    \    local common_list_len7\n    local common_list_len8\n    local common_list_len9\n\
    \    local common_list_len10\n    local common_list_len11\n    local common_list_len12\n\
    \    local common_list_len13\n    local common_list_len14\n    local common_list_len15\n\
    \    local common_list_len16\n    local common_list_len17\n    local common_list_len18\n\
    \    local common_list_len19\n    local common_list_len20\n    local common_list_len21\n\
    \    local common_list_len22\n    local common_list_len23\n    local common_list_len24\n\
    \    local common_list_len25\n    local common_list_len26\n    local common_list_len27\n\
    \    local common_list_len28\n    local common_list_len29\n    local common_list_len30\n\
    \    local common_list_len31\n    local common_list_len32\n    local common_list_len33\n\
    \    local common_list_len34\n    local common_list_len35\n    local common_list_len36\n\
    \    local common_list_len37\n    local common_list_len38\n    local common_list_len39\n\
    \    local common_list_len40\n    local common_list_len41\n    local common_list_len42\n\
    \    local common_list_len43\n    local common_list_len44\n    local common_list_len45\n\
    \    local common_list_len46\n    local common_list_len47\n    local common_list_len48\n\
    \    local common_list_len49\n    local common_list_len50\n    local common_list_len51\n\
    \    local common_list_len52\n    local common_list_len53\n    local common_list_len54\n\
    \    local common_list_len55\n    local common_list_len56\n    local common_list_len57\n\
    \    local common_list_len58\n    local common_list_len59\n    local common_list_len60\n\
    \    local common_list_len61\n    local common_list_len62\n    local common_list_len63\n\
    \    local common_list_len64\n    local common_list_len65\n    local common_list_len66\n\
    \    local common_list_len67\n    local common_list_len68\n    local common_list_len69\n\
    \    local common_list_len70\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1\n    local list_2\n    local i\n    local\
    \ j\n    local common_list_1\n    local common_list_2\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_1_sorted\n    local common_list_2_sorted\n    local common_list_1_sorted_unique\n\
    \    local common_list_2_sorted_unique\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_sorted_unique_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces\n    local common_list_1_sorted_unique_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospaces_nospaces\n    local common_list_1_\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=\"$1\"\n    local list2=\"$2\"\n    local list3\n\
    \    local list4\n    local list5\n    local list6\n    local list7\n    local\
    \ list8\n    local list9\n    local list10\n    local list11\n    local list12\n\
    \    local list13\n    local list14\n    local list15\n    local list16\n    local\
    \ list17\n    local list18\n    local list19\n    local list20\n    local list21\n\
    \    local list22\n    local list23\n    local list24\n    local list25\n    local\
    \ list26\n    local list27\n    local list28\n    local list29\n    local list30\n\
    \    local list31\n    local list32\n    local list33\n    local list34\n    local\
    \ list35\n    local list36\n    local list37\n    local list38\n    local list39\n\
    \    local list40\n    local list41\n    local list42\n    local list43\n    local\
    \ list44\n    local list45\n    local list46\n    local list47\n    local list48\n\
    \    local list49\n    local list50\n    local list51\n    local list52\n    local\
    \ list53\n    local list54\n    local list55\n    local list56\n    local list57\n\
    \    local list58\n    local list59\n    local list60\n    local list61\n    local\
    \ list62\n    local list63\n    local list64\n    local list65\n    local list66\n\
    \    local list67\n    local list68\n    local list69\n    local list70\n    local\
    \ list71\n    local list72\n    local list73\n    local list74\n    local list75\n\
    \    local list76\n    local list77\n    local list78\n    local list79\n    local\
    \ list80\n    local list81\n    local list82\n    local list83\n    local list84\n\
    \    local list85\n    local list86\n    local list87\n    local list88\n    local\
    \ list89\n    local list90\n    local list91\n    local list92\n    local list93\n\
    \    local list94\n    local list95\n    local list96\n    local list97\n    local\
    \ list98\n    local list99\n    local list100\n    local list\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n\n    len1=\"${#list1}\"\n    len2=\"${#list2}\"\n    len=\"${len1}\"\
    \n    if [ \"${len}\" -eq 0 ]; then\n        return 0\n    fi\n    if [ \"${len}\"\
    \ -eq 1 ]; then\n        common=\"${list1}\"\n    elif [ \"${len}\" -gt 1 ]; then\n\
    \        common=\"$(sort -u \"${list1}\" \"${list2}\")\"\n    fi\n    list1=\"\
    ${common}\"\n    list2=\"${common}\"\n    list1=\"${list1}\"\n    list2=\"${list2}\"\
    \n    list1=\"${list1}\"\n    list2=\"${list2}\"\n    list1=\"${list1}\"\n   \
    \ list2=\"${list2}\"\n    list1=\"${list1}\"\n    list2=\"${list2}\"\n    list1=\"\
    ${list1}\"\n    list2=\"${list2}\"\n    list1=\"${list1}\"\n    list2=\"${list2}\"\
    \n    list1=\"${list1}\"\n    list2=\"${list2}\"\n    list1=\"${list1}\"\n   \
    \ list2=\"${list2}\"\n    list1=\"${list1}\"\n    list2=\"${list2}\"\n    list1=\"\
    ${list1}\"\n    list2=\"${list2}\"\n    list1=\"${list1}\"\n    list2=\"${list2}\"\
    \n    list1=\"${list1}\"\n    list2=\"${list2}\"\n    list1=\"${list1}\"\n   \
    \ list2=\"${list2}\"\n    list1=\"${list1}\"\n    list2=\"${list2}\"\n    list1=\"\
    ${list1}\"\n    list2=\"${list2}\"\n    list1=\"${list1}\"\n    list2=\"${list2}\"\
    \n    list1=\"${list1}\"\n    list2=\"${list2}\"\n    list1=\"${list1}\"\n   \
    \ list2=\"${list2}\"\n    list1=\"${list1}\"\n    list2=\"${list2}\"\n    list1=\"\
    ${list1}\"\n    list2=\"${list2}\"\n    list1=\"${list1}\"\n    list2=\"${list2}\"\
    \n    list1=\"${list1}\"\n    list2=\"${list2}\"\n    list1=\"${list1}\"\n   \
    \ list2=\"${\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv62f6jwl.sh: line 92: unexpected EOF while looking for matching
    `"''

    /tmp/tmpv62f6jwl.sh: line 96: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local z1\n    local z2\n\
    \    local z3\n    local z4\n    local z5\n    local z6\n    local z7\n    local\
    \ z8\n    local z9\n    local z10\n    local z11\n    local z12\n    local z13\n\
    \    local z14\n    local z15\n    local z16\n    local z17\n    local z18\n \
    \   local z19\n    local z20\n    local z21\n    local z22\n    local z23\n  \
    \  local z24\n    local z25\n    local z26\n    local z27\n    local z28\n   \
    \ local z29\n    local z30\n    local z31\n    local z32\n    local z33\n    local\
    \ z34\n    local z35\n    local z36\n    local z37\n    local z38\n    local z39\n\
    \    local z40\n    local z41\n    local z42\n    local z43\n    local z44\n \
    \   local z45\n    local z46\n    local z47\n    local z48\n    local z49\n  \
    \  local z50\n    local z51\n    local z52\n    local z53\n    local z54\n   \
    \ local z55\n    local z56\n    local z57\n    local z58\n    local z59\n    local\
    \ z60\n    local z61\n    local z62\n    local z63\n    local z64\n    local z65\n\
    \    local z66\n    local z67\n    local z68\n    local z69\n    local z70\n \
    \   local z71\n    local z72\n    local z73\n    local z74\n    local z75\n  \
    \  local z76\n    local z77\n    local z78\n    local z79\n    local z80\n   \
    \ local z81\n    local z82\n    local z83\n    local z84\n    local z85\n    local\
    \ z86\n    local z87\n    local z88\n    local z89\n    local z90\n    local \n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=\"$(comm -2 -3 <(sort -u $1) <(sort -u\
    \ $2))\"\n    echo \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 34: No such file or directory

    sort: cannot read: 653: No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local common_list\n  common_list=\"$(comm -2 -3 <(sort -u $1) <(sort -u $2))\"\
    \n  echo \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 34: No such file or directory

    sort: cannot read: 653: No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=\"$(sort -u \"$(echo \"$1\" | sed 's/ /\"\
    ,\"/g')\" \"$(echo \"$2\" | sed 's/ /\",\"/g')\")\"\n    echo \"$common_list\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1","4","3","34","653","2","5'': No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local i j k l m n o p q r s t u v w x y z\n  local -a a\n  local -a b\n  local\
    \ -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n\
    \  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local\
    \ -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n\
    \  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local\
    \ -a y\n  local -a z\n  local -a a\n  local -a b\n  local -a c\n  local -a d\n\
    \  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local\
    \ -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n\
    \  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local\
    \ -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n\
    \  local -a a\n  local -a b\n  local -a c\n  local -a d\n  local -a e\n  local\
    \ -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n\
    \  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local\
    \ -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n\
    \  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a a\n  local\
    \ -a b\n  local -a c\n  local -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a sorted1\n\
    \    local -a sorted2\n    local -a common\n    local -a sorted\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3_fayhry.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmp3_fayhry.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local sorted\n    local\
    \ sorted1\n    local sorted2\n    local sorted3\n    local sorted4\n    local\
    \ sorted5\n    local sorted6\n    local sorted7\n    local sorted8\n    local\
    \ sorted9\n    local sorted10\n    local sorted11\n    local sorted12\n    local\
    \ sorted13\n    local sorted14\n    local sorted15\n    local sorted16\n    local\
    \ sorted17\n    local sorted18\n    local sorted19\n    local sorted20\n    local\
    \ sorted21\n    local sorted22\n    local sorted23\n    local sorted24\n    local\
    \ sorted25\n    local sorted26\n    local sorted27\n    local sorted28\n    local\
    \ sorted29\n    local sorted30\n    local sorted31\n    local sorted32\n    local\
    \ sorted33\n    local sorted34\n    local sorted35\n    local sorted36\n    local\
    \ sorted37\n    local sorted38\n    local sorted39\n    local sorted40\n    local\
    \ sorted41\n    local sorted42\n    local sorted43\n    local sorted44\n    local\
    \ sorted45\n    local sorted46\n    local sorted47\n    local sorted48\n    local\
    \ sorted49\n    local sorted50\n    local sorted51\n    local sorted52\n    local\
    \ sorted53\n    local sorted54\n    local sorted55\n    local sorted56\n    local\
    \ sorted57\n    local sorted58\n    local sorted59\n    local sorted60\n    local\
    \ sorted61\n    local sorted62\n    local sorted63\n    local sorted64\n    local\
    \ sorted65\n    local sorted66\n    local sorted67\n    local sorted68\n    local\
    \ sorted69\n    local sorted70\n    local sorted71\n    local sorted72\n    local\
    \ sorted73\n    local sorted74\n    local sorted75\n    local sorted76\n    local\
    \ sorted77\n    local sorted78\n    local sorted79\n    local sorted80\n    local\
    \ sorted81\n    local sorted82\n    local sorted83\n    local sorted84\n    local\
    \ sorted85\n    local sorted86\n    local sorted87\n    local sorted88\n    local\
    \ sorted89\n    local sorted\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list_1 list_2\n  list_1=$1\n  list_2=$2\n  local list_1_sorted\n  list_1_sorted=$(echo\
    \ \"$list_1\" | tr ' ' '\\n' | sort -u)\n  local list_2_sorted\n  list_2_sorted=$(echo\
    \ \"$list_2\" | tr ' ' '\\n' | sort -u)\n  local common_elements\n  common_elements=$(comm\
    \ -12 <(echo \"$list_1_sorted\") <(echo \"$list_2_sorted\"))\n  echo \"$common_elements\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i j\n    common_list=\"$1\"\n    for (( i=1;\
    \ i<=$#; i++ )); do\n        common_list=\"$common_list $2\"\n    done\n    sort\
    \ -u \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 4 3 34 653 2 5 5 7 1 5 9 653 121 5 7 1 5 9 653 121'':
    No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i i1 i2 i3 i4 i5 i6 i7 i8 i9 i10 i11 i12 i13 i14 i15 i16 i17 i18 i19\
    \ i20 i21 i22 i23 i24 i25 i26 i27 i28 i29 i30 i31 i32 i33 i34 i35 i36 i37 i38\
    \ i39 i40 i41 i42 i43 i44 i45 i46 i47 i48 i49 i50 i51 i52 i53 i54 i55 i56 i57\
    \ i58 i59 i60 i61 i62 i63 i64 i65 i66 i67 i68 i69 i70 i71 i72 i73 i74 i75 i76\
    \ i77 i78 i79 i80 i81 i82 i83 i84 i85 i86 i87 i88 i89 i90 i91 i92 i93 i94 i95\
    \ i96 i97 i98 i99 i100 i101 i102 i103 i104 i105 i106 i107 i108 i109 i110 i111\
    \ i112 i113 i114 i115 i116 i117 i118 i119 i120 i121 i122 i123 i124 i125 i126 i127\
    \ i128 i129 i130 i131 i132 i133 i134 i135 i136 i137 i138 i139 i140 i141 i142 i143\
    \ i144 i145 i146 i147 i148 i149 i150 i151 i152 i153 i154 i155 i156 i157 i158 i159\
    \ i160 i161 i162 i163 i164 i165 i166 i167 i168 i169 i170 i171 i172 i173 i174 i175\
    \ i176 i177 i178 i179 i180 i181 i182 i183 i184 i185 i186 i187 i188 i189 i19\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local i j\n  local list1\n  local list2\n  local result\n  list1=$1\n  list2=$2\n\
    \  result=()\n  for (( i = 0; i < ${#list1}; i++ )); do\n    for (( j = 0; i <\
    \ ${#list2}; j++ )); do\n      [[ \"${list1:$i:1}\" == \"${list2:$j:1}\" ]] &&\
    \ result+=(\"${list1:$i:1}\")\n    done\n  done\n  echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=46 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=42 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local k\n    local len1\n    local len2\n    local maxlen\n    local maxlen1\n\
    \    local maxlen2\n    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n\
    \    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local\
    \ maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n\
    \    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local\
    \ maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n\
    \    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local\
    \ maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n\
    \    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local\
    \ maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n\
    \    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local\
    \ maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n\
    \    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local\
    \ maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n\
    \    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local\
    \ maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n\
    \    local maxlen1len2\n    local maxlen1len2\n    local maxlen1len2\n    local\
    \ maxlen1len2\n    local maxlen1len2\n    local max\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local i imax\n    imax=$((${#list_1}\
    \ > ${#list_2} ? ${#list_1} : ${#list_2}))\n    local list_1_sorted\n    local\
    \ list_2_sorted\n    local list_1_sorted_i\n    local list_2_sorted_i\n    list_1_sorted=()\n\
    \    list_2_sorted=()\n    list_1_sorted_i=0\n    list_2_sorted_i=0\n    while\
    \ (( ${#list_1} > ${#list_2} )); do\n        list_1_sorted[${list_1_sorted_i}]=${list_1}\n\
    \        list_2_sorted[${list_2_sorted_i}]=${list_2}\n        list_1_sorted_i=$((${list_1_sorted_i}\
    \ + 1))\n        list_2_sorted_i=$((${list_2_sorted_i} + 1))\n        list_1=${list_1#*=}\
    \ # remove leading spaces\n        list_2=${list_2#*=} # remove leading spaces\n\
    \    done\n    list_1_sorted[${list_1_sorted_i}]=${list_1}\n    list_2_sorted[${list_2_sorted_i}]=${list_2}\n\
    \    local common_elements=()\n    local common_elements_i\n    for (( i=1; i<=${imax};\
    \ i++ )); do\n        common_elements_i=$((${i} + ${list_1_sorted_i} - ${list_2_sorted_i}))\n\
    \        common_elements[${common_elements_i}]=${list_1_sorted[${common_elements_i}]}\n\
    \        common_elements[${common_elements_i}]=${list_2_sorted[${common_elements_i}]}\n\
    \    done\n    local common_elements\n    common_elements=$(sort -u <<< \"${common_elements[@]}\"\
    )\n    local common_elements_i\n    for (( i=1; i<=${imax}; i++ )); do\n     \
    \   common_elements_i=$((${i} + ${list_1_sorted_i} - ${list_2_sorted_i}))\n  \
    \      list_1_sorted[${common_elements_i}]=${common_elements[${common_elements_i}]}\n\
    \        list_2_sorted[${common_elements_i}]=${common_elements[${common_elements_i}]}\n\
    \    done\n    local common_elements\n    common_elements=$(sort -u <<< \"${common_elements[@]}\"\
    )\n    local common_elements_i\n    for (( i=1; i<=${imax}; i++ )); do\n     \
    \   common_elements_i=$((${i} + \n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzq66rtdd.sh: line 53: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzq66rtdd.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    list_1_sorted=$(sort <<< \"$list_1\")\n    local list_2_sorted\n    list_2_sorted=$(sort\
    \ <<< \"$list_2\")\n    local common\n    common=$(comm -3 <(printf '%s\\n' \"\
    $list_1_sorted\") <(printf '%s\\n' \"$list_2_sorted\"))\n    echo \"$common\"\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local sorted\n\n    len1=\"${#list1}\"\n    len2=\"${#list2}\"\
    \n    len=\"${len1}\"\n    if [ \"${len}\" -eq 0 ]; then\n        return 0\n \
    \   fi\n    if [ \"${len}\" -eq 1 ]; then\n        common=\"${list1}\"\n    elif\
    \ [ \"${len}\" -gt 1 ]; then\n        common=\"$(sort -u <<<\"${list1}\" \"${list2}\"\
    )\"\n    fi\n    sorted=\"$(sort <<<\"${common}\")\"\n    list1=\"$(echo \"${list1}\"\
    \ | sed 's/ /\\n/g')\"\n    list2=\"$(echo \"${list2}\" | sed 's/ /\\n/g')\"\n\
    \    list1=\"$(echo \"${list1}\" | sed 's/^/\"/')\"\n    list2=\"$(echo \"${list2}\"\
    \ | sed 's/^/\"/')\"\n    list1=\"$(echo \"${list1}\" | sed 's/$/\"/')\"\n   \
    \ list2=\"$(echo \"${list2}\" | sed 's/$/\"/')\"\n    list1=\"$(echo \"${list1}\"\
    \ | sed 's/ /\\n/g')\"\n    list2=\"$(echo \"${list2}\" | sed 's/ /\\n/g')\"\n\
    \    list1=\"$(echo \"${list1}\" | sed 's/^/\"/')\"\n    list2=\"$(echo \"${list2}\"\
    \ | sed 's/^/\"/')\"\n    list1=\"$(echo \"${list1}\" | sed 's/$/\"/')\"\n   \
    \ list2=\"$(echo \"${list2}\" | sed 's/$/\"/')\"\n    list1=\"$(echo \"${list1}\"\
    \ | sed 's/ /\\n/g')\"\n    list2=\"$(echo \"${list2}\" | sed 's/ /\\n/g')\"\n\
    \    list1=\"$(echo \"${list1}\" | sed 's/^/\"/')\"\n    list2=\"$(echo \"${list2}\"\
    \ | sed 's/^/\"/')\"\n    list1=\"$(echo \"${list1}\" | sed 's/$/\"/')\"\n   \
    \ list2=\"$(echo \"${list2}\" | sed 's/$/\"/')\"\n    list1=\"$(echo \"${list1}\"\
    \ | sed 's/ /\\n/g\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvl2_f7rp.sh: line 53: unexpected EOF while looking for matching
    `''''

    /tmp/tmpvl2_f7rp.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common=$1\n    local other=$2\n    local sorted=$(sort -u $common)\n\
    \    local othersorted=$(sort -u $other)\n    local result=$(comm -3 -2 <(printf\
    \ \"%s\\n\" $sorted) <(printf \"%s\\n\" $othersorted))\n    echo $result\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 34: No such file or directory

    sort: cannot read: 653: No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlendiff\n    local minlendiff\n    local maxlendiff1\n\
    \    local maxlendiff2\n    local minlendiff1\n    local minlendiff2\n    local\
    \ maxlendiffdiff\n    local minlendiffdiff\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1\n    local list2\n    local ret\n\n    list1=$1\n\
    \    list2=$2\n    IFS=$'\\n' read -r -d '' -a ret <<<$(comm -2 -3 <(sort <<<\"\
    $list1\") <(sort <<<\"$list2\"))\n    IFS=$' \\t' read -r -d '' -a ret <<<$(comm\
    \ -2 -3 <(sort <<<\"$list1\") <(sort <<<\"$list2\"))\n    IFS=$'\\n' read -r -d\
    \ '' -a ret <<<$(comm -2 -3 <(sort <<<\"$list1\") <(sort <<<\"$list2\"))\n   \
    \ IFS=$' \\t' read -r -d '' -a ret <<<$(comm -2 -3 <(sort <<<\"$list1\") <(sort\
    \ <<<\"$list2\"))\n    IFS=$'\\n' read -r -d '' -a ret <<<$(comm -2 -3 <(sort\
    \ <<<\"$list1\") <(sort <<<\"$list2\"))\n    IFS=$' \\t' read -r -d '' -a ret\
    \ <<<$(comm -2 -3 <(sort <<<\"$list1\") <(sort <<<\"$list2\"))\n    IFS=$'\\n'\
    \ read -r -d '' -a ret <<<$(comm -2 -3 <(sort <<<\"$list1\") <(sort <<<\"$list2\"\
    ))\n    IFS=$' \\t' read -r -d '' -a ret <<<$(comm -2 -3 <(sort <<<\"$list1\"\
    ) <(sort <<<\"$list2\"))\n    IFS=$'\\n' read -r -d '' -a ret <<<$(comm -2 -3\
    \ <(sort <<<\"$list1\") <(sort <<<\"$list2\"))\n    IFS=$' \\t' read -r -d ''\
    \ -a ret <<<$(comm -2 -3 <(sort <<<\"$list1\") <(sort <<<\"$list2\"))\n    IFS=$'\\\
    n' read -r -d '' -a ret <<<$(comm -2 -3 <(sort <<<\"$list1\") <(sort <<<\"$list2\"\
    ))\n    IFS=$' \\t' read \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=47 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=36 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local len1\n    local len2\n \
    \   local minlen\n    local maxlen\n    local max\n    local min\n    local maxlen1\n\
    \    local maxlen2\n    local maxlendiff\n    local minlendiff\n    local maxlendiff1\n\
    \    local maxlendiff2\n    local maxlendiffdiff\n    local minlendiff1\n    local\
    \ minlendiff2\n    local minlendiffdiff\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local maxlendiffdiffdiff\n    local minlendiffdiff1\n \
    \   local minlendiffdiff2\n    local minlendiffdiffdiff\n    local maxlendiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiffdiff\n    local minlendiffdiff1\n\
    \    local minlendiffdiff2\n    local minlendiffdiffdiff\n    local maxlendiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiffdiff\n    local minlendiffdiff1\n\
    \    local minlendiffdiff2\n    local minlendiffdiff\n    local maxlendiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiffdiff\n    local minlendiffdiff1\n\
    \    local minlendiffdiff2\n    local minlendiffdiff\n    local maxlendiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff\n    local minlendiffdiff1\n\
    \    local minlendiffdiff2\n    local minlendiffdiff\n    local maxlendiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff\n    local minlendiffdiff1\n\
    \    local minlendiffdiff2\n    local minlendiffdiff\n    local maxlendiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff\n    local minlendiffdiff1\n\
    \    local minlendiffdiff2\n    local minlendiffdiff\n    local maxlendiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff\n    local minlendiffdiff1\n\
    \    local minlendiffdiff2\n    local minlendiffdiff\n    local maxlendiffdiff1\n\
    \    local maxlendiffdiff2\n    local maxlendiffdiff\n    local minlendiffdiff1\n\
    \    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local i i2 i1\n    local list1_sorted\n\
    \    local list2_sorted\n    local common_sorted\n    local common_unique\n  \
    \  local common_unique_count\n    local common_unique_count_sorted\n    local\
    \ common_unique_count_unique\n    local common_unique_count_unique_sorted\n  \
    \  local common_unique_count_unique_sorted\n    local common_unique_count_unique_sorted_reverse\n\
    \    local common_unique_count_unique_sorted_reverse_sorted\n    local common_unique_count_unique_sorted_reverse_sorted_reverse\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique\n \
    \   local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse\n\
    \    local common_unique_count_unique_sorted_reverse_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique\n\
    \    local common_\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    local -a a1 a2\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i j\n    common_list=$( sort -u $( echo $1 |\
    \ tr ' ' '\\n' | sort -u ) )\n    for (( i = 0; i < $#; i++ )); do\n        for\
    \ (( j = $i + 1; j < $#; j++ )); do\n            if [[ \"$common_list\" =~ \"\
    $( echo $( echo $2 | tr ' ' '\\n' | sort -u ) )\"* ]]; then\n                common_list=$(\
    \ echo $common_list | sed -e \"s/$( echo $( echo $2 | tr ' ' '\\n' | sort -u )\
    \ )/$( echo $( echo $2 | tr ' ' '\\n' | sort -u ) )/\" )\n            fi\n   \
    \     done\n    done\n    echo $common_list\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 34: No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    list_1_sorted=$(sort <<< \"$list_1\")\n    local list_2_sorted\n    list_2_sorted=$(sort\
    \ <<< \"$list_2\")\n    local common\n    common=$(comm -2 -3 <(printf '%s\\n'\
    \ \"$list_1_sorted\") <(printf '%s\\n' \"$list_2_sorted\"))\n    echo \"$common\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    list1=$1\n    list2=$2\n    local i ilist ilist2\n\
    \    ilist1=$(echo $list1 | tr ' ' '\\n' | sort -u)\n    ilist2=$(echo $list2\
    \ | tr ' ' '\\n' | sort -u)\n    for ((i=0; i<${#ilist1[@]}; i++)); do\n     \
    \   if [[ ${ilist1[$i]} == ${ilist2[$i]} ]]; then\n            echo \"${ilist1[$i]}\"\
    \n        fi\n    done\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common\n    common=()\n\
    \    while read -r line; do\n        common+=(\"$line\")\n    done < <(sort <<<\
    \ \"$list_1 $list_2\" | sort -u)\n    echo \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    list_1_sorted=$(sort -u <<< \"$list_1\")\n    local list_2_sorted\n    list_2_sorted=$(sort\
    \ -u <<< \"$list_2\")\n    local common_elements\n    common_elements=$(comm -12\
    \ <(printf '%s\\n' \"$list_1_sorted\") <(printf '%s\\n' \"$list_2_sorted\"))\n\
    \    echo \"$common_elements\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i j\n    local list1\n    local list2\n    list1=$1\n\
    \    list2=$2\n    common=()\n    for (( i = 0; i < ${#list1}; i++ )); do\n  \
    \      for (( j = 0; i < ${#list2}; j++ )); do\n            if [[ ${list1:$i:1}\
    \ = ${list2:$j:1} ]]; then\n                common+=(\"${list1:$i:1}\")\n    \
    \            list1=${list1:0:$i}\n                list2=${list2:0:$j}\n      \
    \          break\n            fi\n        done\n    done\n    echo \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list1\n    local list2\n    local i\n    local\
    \ j\n    local common_list_len\n    local list1_len\n    local list2_len\n   \
    \ local common_element\n    local common_element_len\n    local common_element_count\n\
    \    local common_element_count_max\n    local common_element_count_min\n    local\
    \ common_element_count_diff\n    local common_element_count_diff_max\n    local\
    \ common_element_count_diff_min\n    local common_element_count_diff_max\n   \
    \ local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    local common_element_count_diff_max\n\
    \    local common_element_count_diff_min\n    \n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlendiff\n    local minlendiff\n    local maxlendiff1\n\
    \    local maxlendiff2\n    local minlendiff1\n    local minlendiff2\n    local\
    \ maxlendiff1\n    local maxlendiff2\n    local minlendiff1\n    local minlendiff2\n\
    \    local maxlendiff1\n    local maxlendiff2\n    local minlendiff1\n    local\
    \ minlendiff2\n    local maxlendiff1\n    local maxlendiff2\n    local minlendiff1\n\
    \    local minlendiff2\n    local maxlendiff1\n    local maxlendiff2\n    local\
    \ minlendiff1\n    local minlendiff2\n    local maxlendiff1\n    local maxlendiff2\n\
    \    local minlendiff1\n    local minlendiff2\n    local maxlendiff1\n    local\
    \ maxlendiff2\n    local minlendiff1\n    local minlendiff2\n    local maxlendiff1\n\
    \    local maxlendiff2\n    local minlendiff1\n    local minlendiff2\n    local\
    \ maxlendiff1\n    local maxlendiff2\n    local minlendiff1\n    local minlendiff2\n\
    \    local maxlendiff1\n    local maxlendiff2\n    local minlendiff1\n    local\
    \ minlendiff2\n    local maxlendiff1\n    local maxlendiff2\n    local minlendiff1\n\
    \    local minlendiff2\n    local maxlendiff1\n    local maxlendiff2\n    local\
    \ minlendiff1\n    local minlendiff2\n    local maxlendiff1\n    local maxlendiff2\n\
    \    local minlendiff1\n    local minlendiff2\n    local maxlendiff1\n    local\
    \ maxlendiff2\n    local minlendiff1\n    local minlendiff2\n    local maxlendiff1\n\
    \    local maxlendiff2\n    local minlendiff1\n    local minlendiff2\n    local\
    \ maxlendiff1\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a A\n    local -a B\n    local -a C\n    local -a D\n    local -a E\n    local\
    \ -a F\n    local -a G\n    local -a H\n    local -a I\n    local -a J\n    local\
    \ -a K\n    local -a L\n    local -a M\n    local -a N\n    local -a O\n    local\
    \ -a P\n    local -a Q\n    local -a R\n    local -a S\n    local -a T\n    local\
    \ -a U\n    local -a V\n    local -a W\n    local -a X\n    local -a Y\n    local\
    \ -a Z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a A\n    local -a B\n    local -a C\n    local\
    \ -a D\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local min\n   \
    \ local max\n    local diff\n    local found\n    local found1\n    local found2\n\
    \    local found3\n    local found4\n    local found5\n    local found6\n    local\
    \ found7\n    local found8\n    local found9\n    local found10\n    local found11\n\
    \    local found12\n    local found13\n    local found14\n    local found15\n\
    \    local found16\n    local found17\n    local found18\n    local found19\n\
    \    local found20\n    local found21\n    local found22\n    local found23\n\
    \    local found24\n    local found25\n    local found26\n    local found27\n\
    \    local found28\n    local found29\n    local found30\n    local found31\n\
    \    local found32\n    local found33\n    local found34\n    local found35\n\
    \    local found36\n    local found37\n    local found38\n    local found39\n\
    \    local found40\n    local found41\n    local found42\n    local found43\n\
    \    local found44\n    local found45\n    local found46\n    local found47\n\
    \    local found48\n    local found49\n    local found50\n    local found51\n\
    \    local found52\n    local found53\n    local found54\n    local found55\n\
    \    local found56\n    local found57\n    local found58\n    local found59\n\
    \    local found60\n    local found61\n    local found62\n    local found63\n\
    \    local found64\n    local found65\n    local found66\n    local found67\n\
    \    local found68\n    local found69\n    local found70\n    local found71\n\
    \    local found72\n    local found73\n    local found74\n    local found75\n\
    \    local found76\n    local found77\n    local found78\n    local found79\n\
    \    local found80\n    local found81\n    local found82\n    local found83\n\
    \    local found84\n    local found85\n    local found86\n    local found87\n\
    \    local found88\n    local found89\n    local found90\n    local found91\n\
    \    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    list1=$1\n    list2=$2\n    local i j\n    local common\n\
    \    common=()\n    for (( i=0; i<${#list1}; i++ )); do\n        for (( j=0; j<${#list2};\
    \ j++ )); do\n            if [[ ${list1:$i} = ${list2:$j} ]]; then\n         \
    \       common+=(\"${list1:$i}\")\n            fi\n        done\n    done\n  \
    \  echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local result\n\n    len1=\"\
    ${#list1[@]}\"\n    len2=\"${#list2[@]}\"\n    if [ \"${len1}\" -eq \"${len2}\"\
    \ ]; then\n        common=()\n        for ((i=0; i<${len1}; i++)); do\n      \
    \      common+=(\"${list1[i]}\")\n        done\n        for ((j=0; j<${len2};\
    \ j++)); do\n            common+=(\"${list2[j]}\")\n        done\n        common=($(sort\
    \ -u \"${common[@]}\" | tr '\\n' ' '))\n        result=\"${common[@]}\"\n    else\n\
    \        result=()\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n  \
    \  common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 4 3 34 653 2 5'': No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n list1=$1; shift\n    local -n list2=$1; shift\n    local -a common\n\
    \    local -a sorted\n    local -a sorted2\n    local -a sorted1\n    local -a\
    \ sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a sorted1\n\
    \    local -a sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a\
    \ sorted1\n    local -a sorted2\n    local -a sorted1\n    local -a sorted2\n\
    \    local -a sorted1\n    local -a sorted2\n    local -a sorted1\n    local -a\
    \ sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a sorted1\n\
    \    local -a sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a\
    \ sorted1\n    local -a sorted2\n    local -a sorted1\n    local -a sorted2\n\
    \    local -a sorted1\n    local -a sorted2\n    local -a sorted1\n    local -a\
    \ sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a sorted1\n\
    \    local -a sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a\
    \ sorted1\n    local -a sorted2\n    local -a sorted1\n    local -a sorted2\n\
    \    local -a sorted1\n    local -a sorted2\n    local -a sorted1\n    local -a\
    \ sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a sorted1\n\
    \    local -a sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a\
    \ sorted1\n    local -a sorted2\n    local -a sorted1\n    local -a sorted2\n\
    \    local -a sorted1\n    local -a sorted2\n    local -a sorted1\n    local -a\
    \ sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a sorted1\n\
    \    local -a sorted2\n    local -a sorted1\n    local -a sorted2\n    local -a\
    \ sorted1\n    local -a sorted2\n    local -a sorted1\n    local -a \n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2blmvnlj.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmp2blmvnlj.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a sorted1=()\n\
    \    local -a sorted2=()\n    local -a common=()\n    local -a common1=()\n  \
    \  local -a common2=()\n    local i\n    local j\n    local k\n    local l\n \
    \   local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp75u5qj4y.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmp75u5qj4y.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local result\n    len1=${#list1}\n\
    \    len2=${#list2}\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"$list1\
    \ is not the same length as $list2\"\n        return 1\n    fi\n    common=()\n\
    \    for ((i=0; i<$len1; i++)); do\n        for ((j=0; j<$len2; j++)); do\n  \
    \          if [[ $list1[i] -eq $list2[j] ]]; then\n                common+=(\"\
    $list1[i]\")\n            fi\n        done\n    done\n    IFS=' ' read -r -a result\
    \ <<< \"${common[@]}\"\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local ret\n\n    len1=\"${#list1[@]}\"\
    \n    len2=\"${#list2[@]}\"\n    common=()\n    for ((i=0; i<len1; i++)); do\n\
    \        for ((j=0; j<len2; j++)); do\n            if [ \"${list1[i]}\" == \"\
    ${list2[j]}\" ]; then\n                common+=(\"${list1[i]}\")\n           \
    \ fi\n        done\n    done\n    IFS=$'\\n' ret=\"${common[@]}\"\n    echo \"\
    ${ret}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1\n    local list_2\n    local i\n    local\
    \ j\n    local common_list_1\n    local common_list_2\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local list_1_sorted list_2_sorted\n\
    \    local i j\n    local common_list_len\n    local common_list_len2\n    local\
    \ common_list_len3\n    local common_list_len4\n    local common_list_len5\n \
    \   local common_list_len6\n    local common_list_len7\n    local common_list_len8\n\
    \    local common_list_len9\n    local common_list_len10\n    local common_list_len11\n\
    \    local common_list_len12\n    local common_list_len13\n    local common_list_len14\n\
    \    local common_list_len15\n    local common_list_len16\n    local common_list_len17\n\
    \    local common_list_len18\n    local common_list_len19\n    local common_list_len20\n\
    \    local common_list_len21\n    local common_list_len22\n    local common_list_len23\n\
    \    local common_list_len24\n    local common_list_len25\n    local common_list_len26\n\
    \    local common_list_len27\n    local common_list_len28\n    local common_list_len29\n\
    \    local common_list_len30\n    local common_list_len31\n    local common_list_len32\n\
    \    local common_list_len33\n    local common_list_len34\n    local common_list_len35\n\
    \    local common_list_len36\n    local common_list_len37\n    local common_list_len38\n\
    \    local common_list_len39\n    local common_list_len40\n    local common_list_len41\n\
    \    local common_list_len42\n    local common_list_len43\n    local common_list_len44\n\
    \    local common_list_len45\n    local common_list_len46\n    local common_list_len47\n\
    \    local common_list_len48\n    local common_list_len49\n    local common_list_len50\n\
    \    local common_list_len51\n    local common_list_len52\n    local common_list_len53\n\
    \    local common_list_len54\n    local common_list_len55\n    local common_list_len56\n\
    \    local common_list_len57\n    local common_list_len58\n    local common_list_len59\n\
    \    local common_list_len60\n    local common_list_len61\n    local common_list_len62\n\
    \    local common_list_len63\n    local common_list_len64\n    local common_list_len65\n\
    \    local common_list_len66\n    local common_list_len67\n    local common_list_len68\n\
    \    local common_list_len69\n    local common_list_\n}\n\ncandidate() {\n   \
    \ common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list=\"$1\"\n    local other_list=\"$2\"\n    local sorted_common_list\n\
    \    local sorted_other_list\n    local common_list_len\n    local other_list_len\n\
    \    local common_list_element\n    local other_list_element\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count_max\n\
    \    local other_list_element_count_max\n    local common_list_element_count_min\n\
    \    local other_list_element_count_min\n    local common_list_element_count_diff\n\
    \    local other_list_element_count_diff\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_max\n    local common_list_element_count_diff_min\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_element_count_diff_max\n\
    \    local other_list_element_count_diff_min\n    local common_list_\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v\n    local -a a\n    local -a b\n    local\
    \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
    \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a A\n    local\
    \ -a B\n    local -a C\n    local -a D\n    local -a E\n    local -a F\n    local\
    \ -a G\n    local -a H\n    local -a I\n    local -a J\n    local -a K\n    local\
    \ -a L\n    local -a M\n    local -a N\n    local -a O\n    local -a P\n    local\
    \ -a Q\n    local -a R\n    local -a S\n    local -a T\n    local -a U\n    local\
    \ -a V\n    local -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a A\n    local -a B\n    local -a C\n    local -a D\n    local\
    \ -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local len1\n    local\
    \ len2\n    local len\n    local tmp\n    local sorted\n    local unique\n   \
    \ local result\n\n    sorted=$(sort -u $1)\n    unique=$(sort -u $2)\n    len1=${#sorted[@]}\n\
    \    len2=${#unique[@]}\n    len=$((len1 < len2 ? len1 : len2))\n    result=()\n\
    \    for ((i = 0; i <= len; i++)); do\n        tmp=${sorted[i]}\n        for ((j\
    \ = i + 1; j <= len; j++)); do\n            if [[ $tmp == ${unique[j]} ]]; then\n\
    \                tmp=${unique[j]}\n            fi\n        done\n        result+=(\"\
    $tmp\")\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 34: No such file or directory

    sort: cannot read: 653: No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=${1//[[:space:]]/}\n    local -n arr2=${2//[[:space:]]/}\n \
    \   local -n common=()\n    local -n i=0 j=0\n    while [ $i -lt ${#arr1[*]} ];\
    \ do\n        local -n el1=${arr1[$i]}\n        local -n el2=${arr2[$j]}\n   \
    \     if [ \"$el1\" == \"$el2\" ]; then\n            common+=(\"$el1\")\n    \
    \        ((i++))\n            ((j++))\n        elif [ \"$el1\" > \"$el2\" ]; then\n\
    \            ((j++))\n        else\n            ((i++))\n        fi\n    done\n\
    \    local -n result=()\n    for el in \"${common[@]}\"; do\n        result+=(\"\
    $el\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps1voxeab.sh: line 11: local: `1433465325'': invalid variable name
    for name reference

    /tmp/tmps1voxeab.sh: line 12: local: `57159653121'': invalid variable name for
    name reference

    /tmp/tmps1voxeab.sh: line 13: local: common: reference variable cannot be an array

    /tmp/tmps1voxeab.sh: line 14: local: `0'': invalid variable name for name reference

    /tmp/tmps1voxeab.sh: line 14: local: `0'': invalid variable name for name reference

    /tmp/tmps1voxeab.sh: line 15: [: -lt: unary operator expected

    /tmp/tmps1voxeab.sh: line 28: local: result: reference variable cannot be an array

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local len1\n    local len2\n \
    \   local i1\n    local i2\n    local j1\n    local j2\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local len1\n    local len2\n    local result\n\n    list1=$1\n    list2=$2\n\
    \    len1=${#list1}\n    len2=${#list2}\n    result=()\n\n    for ((i=0; i<${len1};\
    \ i++)); do\n        for ((j=0; j<${len2}; j++)); do\n            if [[ ${list1:$i:1}\
    \ = ${list2:$j:1} ]]; then\n                common+=(\"${list1:$i:1}\")\n    \
    \        fi\n        done\n    done\n\n    IFS=$'\\n'\n    sort -u \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: '' '': No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local i j\n  local list1\n  local list2\n  local result\n  list1=$1\n  list2=$2\n\
    \  result=()\n  for (( i = 0; i < ${#list1}; i++ )); do\n    for (( j = 0; i <\
    \ ${#list2}; j++ )); do\n      [[ \"${list1:$i:1}\" == \"${list2:$j:1}\" ]] &&\
    \ result+=(\"${list1:$i:1}\")\n    done\n  done\n  echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=46 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=42 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local common_list\n  local common_list_1\n  local common_list_2\n  local common_list_3\n\
    \  local common_list_4\n  local common_list_5\n  local common_list_6\n  local\
    \ common_list_7\n  local common_list_8\n  local common_list_9\n  local common_list_10\n\
    \  local common_list_11\n  local common_list_12\n  local common_list_13\n  local\
    \ common_list_14\n  local common_list_15\n  local common_list_16\n  local common_list_17\n\
    \  local common_list_18\n  local common_list_19\n  local common_list_20\n  local\
    \ common_list_21\n  local common_list_22\n  local common_list_23\n  local common_list_24\n\
    \  local common_list_25\n  local common_list_26\n  local common_list_27\n  local\
    \ common_list_28\n  local common_list_29\n  local common_list_30\n  local common_list_31\n\
    \  local common_list_32\n  local common_list_33\n  local common_list_34\n  local\
    \ common_list_35\n  local common_list_36\n  local common_list_37\n  local common_list_38\n\
    \  local common_list_39\n  local common_list_40\n  local common_list_41\n  local\
    \ common_list_42\n  local common_list_43\n  local common_list_44\n  local common_list_45\n\
    \  local common_list_46\n  local common_list_47\n  local common_list_48\n  local\
    \ common_list_49\n  local common_list_50\n  local common_list_51\n  local common_list_52\n\
    \  local common_list_53\n  local common_list_54\n  local common_list_55\n  local\
    \ common_list_56\n  local common_list_57\n  local common_list_58\n  local common_list_59\n\
    \  local common_list_60\n  local common_list_61\n  local common_list_62\n  local\
    \ common_list_63\n  local common_list_64\n  local common_list_65\n  local common_list_66\n\
    \  local common_list_67\n  local common_list_68\n  local common_list_69\n  local\
    \ common_list_70\n  local common_list_71\n  local common_list_72\n  local common_list_73\n\
    \  local common_list_74\n  local common_list_75\n  local common_list_76\n  local\
    \ common_list_77\n  local common_list_78\n  local common_list_79\n  local common_list_80\n\
    \  local common_list_81\n  local common_list_82\n  local common_list_83\n  local\
    \ common_list_84\n  local common_\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local minlen\n\
    \    local maxlen\n    local min\n    local max\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ min2\n    local max2\n    local minlen1\n    local maxlen1\n    local min1\n\
    \    local max1\n    local minlen2\n    local maxlen2\n    local min2\n    local\
    \ max2\n    local minlen1\n    local maxlen1\n    local min1\n    local max1\n\
    \    local minlen2\n    local maxlen2\n    local min2\n    local max2\n    local\
    \ minlen1\n    local maxlen1\n    local min1\n    local max1\n    local minlen2\n\
    \    local maxlen2\n    local min2\n    local max2\n    local minlen1\n    local\
    \ maxlen1\n    local min1\n    local max1\n    local minlen2\n    local maxlen2\n\
    \    local min2\n    local max2\n    local minlen1\n    local maxlen1\n    local\
    \ min1\n    local max1\n    local minlen2\n    local maxlen2\n    local min2\n\
    \    local max2\n    local minlen1\n    local maxlen1\n    local min1\n    local\
    \ max1\n    local minlen2\n    local maxlen2\n    local min2\n    local max2\n\
    \    local minlen1\n    local maxlen1\n    local min1\n    local max1\n    local\
    \ minlen2\n    local maxlen2\n    local min2\n    local max2\n    local minlen1\n\
    \    local maxlen1\n    local min1\n    local max1\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_1_sorted\n    local common_list_2_sorted\n    local common_list_1_sorted_unique\n\
    \    local common_list_2_sorted_unique\n    local common_list_1_sorted_unique_nospace\n\
    \    local common_list_2_sorted_unique_nospace\n    local common_list_1_sorted_unique_nospace_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces\n    local common_list_1_sorted_unique_nospace_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces\n    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces\n  \
    \  local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_no\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=($1)\n    local list2=($2)\n    local common=()\n\
    \    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]};\
    \ j++)); do\n            if [[ ${list1[i]} == ${list2[j]} ]]; then\n         \
    \       common+=(\"${list1[i]}\")\n            fi\n        done\n    done\n  \
    \  echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\
    \ list_2_sorted\n    list_1_sorted=$(sort <<< \"$list_1\")\n    list_2_sorted=$(sort\
    \ <<< \"$list_2\")\n    local common\n    common=$(comm -3 <(printf '%s\\n' \"\
    $list_1_sorted\") <(printf '%s\\n' \"$list_2_sorted\"))\n    echo \"$common\"\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local common\n  local i\n  local j\n  local k\n  local len1\n  local len2\n\
    \  local len\n  local list1\n  local list2\n  local temp\n  local sorted\n\n \
    \ list1=$1\n  list2=$2\n  len1=${#list1}\n  len2=${#list2}\n  sorted=false\n \
    \ common=()\n  for i in $(seq 0 $((len1 - 1))); do\n    for j in $(seq 0 $((len2\
    \ - 1))); do\n      if [[ $list1[$i] == $list2[$j] ]]; then\n        common+=(\"\
    $list1[$i]\")\n        sorted=true\n        break\n      fi\n    done\n  done\n\
    \  if $sorted; then\n    temp=$(IFS=' '; echo \"${common[*]}\")\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp// /}\n    temp=${temp//\
    \ /}\n    temp=${temp// /}\n    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwg0_iazr.sh: line 83: syntax error near unexpected token `}''

    /tmp/tmpwg0_iazr.sh: line 83: `}''

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n\
    \    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a\
    \ i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a A\n    local -a B\n    local\
    \ -a C\n    local -a D\n    local -a E\n    local -a F\n    local -a G\n    local\
    \ -a H\n    local -a I\n    local -a J\n    local -a K\n    local -a L\n    local\
    \ -a M\n    local -a N\n    local -a O\n    local -a P\n    local -a Q\n    local\
    \ -a R\n    local -a S\n    local -a T\n    local -a U\n    local -a V\n    local\
    \ -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a A\n    local -a B\n    local -a C\n    local -a D\n    local -a E\n    local\
    \ -a F\n    local -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1 list2\n  list1=$1\n  list2=$2\n  local -a common\n  common=()\n\
    \  while read -r line; do\n    common+=(\"$line\")\n  done < <(sort -u <(echo\
    \ \"$list1\") <(echo \"$list2\"))\n  echo \"${common[@]}\"\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list=\"$1\"\n    local other_list=\"$2\"\n    local sorted_common_list\n\
    \    local sorted_other_list\n    local common_list_len\n    local other_list_len\n\
    \    local common_list_elements\n    local other_list_elements\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count\n    local other_list_element_count\n    local\
    \ common_list_element_count\n    local other_list_element_count\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count\n    local other_list_element_count\n    local\
    \ common_list_element_count\n    local other_list_element_count\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count\n    local other_list_element_count\n    local\
    \ common_list_element_count\n    local other_list_element_count\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count\n    local other_list_element_count\n    local\
    \ common_list_element_count\n    local other_list_element_count\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n\n}\n\
    \ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m\n    local list1=($1)\n    local list2=($2)\n    local list3=($3)\n\
    \    local list4=($4)\n    local list5=($5)\n    local list6=($6)\n    local list7=($7)\n\
    \    local list8=($8)\n    local list9=($9)\n    local list10=($10)\n    local\
    \ list11=($11)\n    local list12=($12)\n    local list13=($13)\n    local list14=($14)\n\
    \    local list15=($15)\n    local list16=($16)\n    local list17=($17)\n    local\
    \ list18=($18)\n    local list19=($19)\n    local list20=($20)\n    local list21=($21)\n\
    \    local list22=($22)\n    local list23=($23)\n    local list24=($24)\n    local\
    \ list25=($25)\n    local list26=($26)\n    local list27=($27)\n    local list28=($28)\n\
    \    local list29=($29)\n    local list30=($30)\n    local list31=($31)\n    local\
    \ list32=($32)\n    local list33=($33)\n    local list34=($34)\n    local list35=($35)\n\
    \    local list36=($36)\n    local list37=($37)\n    local list38=($38)\n    local\
    \ list39=($39)\n    local list40=($40)\n    local list41=($41)\n    local list42=($42)\n\
    \    local list43=($43)\n    local list44=($44)\n    local list45=($45)\n    local\
    \ list46=($46)\n    local list47=($47)\n    local list48=($48)\n    local list49=($49)\n\
    \    local list50=($50)\n    local list51=($51)\n    local list52=($52)\n    local\
    \ list53=($53)\n    local list54=($54)\n    local list55=($55)\n    local list56=($56)\n\
    \    local list57=($57)\n    local list58=($58)\n    local list59=($59)\n    \n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -n arr3=$1;\
    \ shift\n    local -n arr4=$1; shift\n    local -n arr5=$1; shift\n    local -n\
    \ arr6=$1; shift\n    local -n arr7=$1; shift\n    local -n arr8=$1; shift\n \
    \   local -n arr9=$1; shift\n    local -n arr10=$1; shift\n    local -n arr11=$1;\
    \ shift\n    local -n arr12=$1; shift\n    local -n arr13=$1; shift\n    local\
    \ -n arr14=$1; shift\n    local -n arr15=$1; shift\n    local -n arr16=$1; shift\n\
    \    local -n arr17=$1; shift\n    local -n arr18=$1; shift\n    local -n arr19=$1;\
    \ shift\n    local -n arr20=$1; shift\n    local -n arr21=$1; shift\n    local\
    \ -n arr22=$1; shift\n    local -n arr23=$1; shift\n    local -n arr24=$1; shift\n\
    \    local -n arr25=$1; shift\n    local -n arr26=$1; shift\n    local -n arr27=$1;\
    \ shift\n    local -n arr28=$1; shift\n    local -n arr29=$1; shift\n    local\
    \ -n arr30=$1; shift\n    local -n arr31=$1; shift\n    local -n arr32=$1; shift\n\
    \    local -n arr33=$1; shift\n    local -n arr34=$1; shift\n    local -n arr35=$1;\
    \ shift\n    local -n arr36=$1; shift\n    local -n arr37=$1; shift\n    local\
    \ -n arr38=$1; shift\n    local -n arr39=$1; shift\n    local -n arr40=$1; shift\n\
    \    local -n arr41=$1; shift\n    local -n arr42=$1; shift\n    local -n arr43=$1;\
    \ shift\n    local -n arr44=$1; shift\n    local -n arr45=$1; shift\n    local\
    \ -n arr46=$1; shift\n    local -n arr47=$1; shift\n    local -n arr48=$1; shift\n\
    \    local -n arr49=$1; shift\n    local -n arr50=$1; shift\n    local -n arr51=$1;\
    \ shift\n    local \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3tzlpbwa.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmp3tzlpbwa.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    /tmp/tmp3tzlpbwa.sh: line 13: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 14: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 15: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 16: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 17: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 18: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 19: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 20: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 21: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 22: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 24: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 25: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 26: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 27: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 28: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 29: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 30: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 31: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 32: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 33: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 34: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 35: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 36: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 37: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 38: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 39: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 40: local: `'': not a valid identifier

    /tmp/tmp3tzlpbwa.sh: line 41: local: `'': not a valid identi'
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local i j\n    local list1sorted\n\
    \    local list2sorted\n    local common\n    list1sorted=$(sort -u <<< \"$list1\"\
    )\n    list2sorted=$(sort -u <<< \"$list2\")\n    for (( i = 0; i < ${#list1sorted};\
    \ i++ )); do\n        for (( j = 0; i < ${#list2sorted}; j++ )); do\n        \
    \    if [ \"${list1sorted[i]}\" == \"${list2sorted[j]}\" ]; then\n           \
    \     common+=(\"${list1sorted[i]}\")\n            fi\n        done\n    done\n\
    \    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=31 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a res\n \
    \   local -a tmp\n    local i j\n    local -a tmp2\n    local -n tmp3\n    local\
    \ -n tmp4\n    local -n tmp5\n    local -n tmp6\n    local -n tmp7\n    local\
    \ -n tmp8\n    local -n tmp9\n    local -n tmp10\n    local -n tmp11\n    local\
    \ -n tmp12\n    local -n tmp13\n    local -n tmp14\n    local -n tmp15\n    local\
    \ -n tmp16\n    local -n tmp17\n    local -n tmp18\n    local -n tmp19\n    local\
    \ -n tmp20\n    local -n tmp21\n    local -n tmp22\n    local -n tmp23\n    local\
    \ -n tmp24\n    local -n tmp25\n    local -n tmp26\n    local -n tmp27\n    local\
    \ -n tmp28\n    local -n tmp29\n    local -n tmp30\n    local -n tmp31\n    local\
    \ -n tmp32\n    local -n tmp33\n    local -n tmp34\n    local -n tmp35\n    local\
    \ -n tmp36\n    local -n tmp37\n    local -n tmp38\n    local -n tmp39\n    local\
    \ -n tmp40\n    local -n tmp41\n    local -n tmp42\n    local -n tmp43\n    local\
    \ -n tmp44\n    local -n tmp45\n    local -n tmp46\n    local -n tmp47\n    local\
    \ -n tmp48\n    local -n tmp49\n    local -n tmp50\n    local -n tmp51\n    local\
    \ -n tmp52\n    local -n tmp53\n    local -n tmp54\n    local -n tmp55\n    local\
    \ -n tmp56\n    local -n tmp57\n    local -n tmp58\n    local -n tmp59\n    local\
    \ -n tmp60\n    local -n tmp61\n    local -n tmp62\n    local -n tmp63\n    local\
    \ -n tmp64\n    local -n tmp65\n    local -n tmp66\n    local -n tmp67\n    local\
    \ -n tmp68\n    local -n tmp69\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2h7_jsjm.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmp2h7_jsjm.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list=\"$1\"\n    local other_list=\"$2\"\n    local sorted_common_list\n\
    \    local sorted_other_list\n    local common_list_len\n    local other_list_len\n\
    \    local common_list_elements\n    local other_list_elements\n    local common_list_element\n\
    \    local other_list_element\n    local common_list_element_len\n    local other_list_element_len\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count_max\n    local other_list_element_count_max\n\
    \    local common_list_element_count_min\n    local other_list_element_count_min\n\
    \    local common_list_element_count_diff\n    local other_list_element_count_diff\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_max\n\
    \    local common_list_element_count_diff_min\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_count_diff_min\n\
    \    local common_list_element_count_diff_max\n    local other_list_element_\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local i i2 i1\n   \
    \ local common_elements\n    common_elements=()\n    for (( i1=0; i1<${#list_1};\
    \ i1++ )); do\n        for (( i2=0; i2<${#list_2}; i2++ )); do\n            if\
    \ [[ ${list_1:$i1} = ${list_2:$i2} ]]; then\n                common_elements+=(\"\
    ${list_1:$i1}\")\n            fi\n        done\n    done\n    echo \"${common_elements[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=\"$(comm -12 <(sort \"$1\") <(sort \"$2\"\
    ) | sort -u)\" # -u removes duplicates\n    echo \"$common_list\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 4 3 34 653 2 5'': No such file or directory

    sort: cannot read: ''5 7 1 5 9 653 121'': No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n list1=$1; shift\n    local -n list2=$1; shift\n    local -n result=$1;\
    \ shift\n    local -n common=$1; shift\n\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n\n    for\
    \ (( i=1; i<${#list1}; i++ )); do\n        for (( j=1; j<${#list2}; j++ )); do\n\
    \            for (( k=0; k<${#common}; k++ )); do\n                if [[ ${list1:$i}\
    \ = ${common:$k} ]]; then\n                    list2=$list2\n                \
    \    break\n                fi\n            done\n        done\n    done\n\n \
    \   for (( l=0; l<${#list2}; l++ )); do\n        for (( m=0; m<${#list1}; m++\
    \ )); do\n            if [[ ${list2:$l} = ${list1:$m} ]]; then\n             \
    \   result=$result\n                break\n            fi\n        done\n    done\n\
    \n    echo $result\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz3vbpre_.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmpz3vbpre_.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    /tmp/tmpz3vbpre_.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpz3vbpre_.sh: line 14: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local sorted\n    local unique\n\n    len1=${#list1}\n    len2=${#list2}\n\
    \    len=$((len1 < len2 ? len1 : len2))\n    common=()\n    sorted=()\n    unique=()\n\
    \n    for (( i = 0; i < len; i++ )); do\n        tmp=${list1:$i:1}\n        if\
    \ [[ ${list2:$i:1} =~ $tmp ]]; then\n            common+=(\"$tmp\")\n        else\n\
    \            unique+=(\"$tmp\")\n        fi\n    done\n\n    for (( i = 0; i <\
    \ len; i++ )); do\n        tmp=${list2:$i:1}\n        if [[ ${list1:$i:1} =~ $tmp\
    \ ]]; then\n            common+=(\"$tmp\")\n        else\n            unique+=(\"\
    $tmp\")\n        fi\n    done\n\n    for (( i = 0; i < len; i++ )); do\n     \
    \   tmp=${common:$i:1}\n        if [[ ${unique:$i:1} =~ $tmp ]]; then\n      \
    \      sorted+=(\"$tmp\")\n        else\n            sorted+=(\"${common:$i:1}\"\
    )\n        fi\n    done\n\n    sorted=($(sort <<<\"${sorted[*]}\" | uniq))\n \
    \   sorted=($(sort <<<\"${sorted[*]}\" | uniq))\n    sorted=($(sort <<<\"${sorted[*]}\"\
    \ | uniq))\n\n    echo \"${sorted[*]}\"\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local len1\n    local\
    \ len2\n    local minlen\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    local minlen2\n    local minlen1\n    local minlen2\n\
    \    local minlen1\n    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local k\n    local len1\n    local len2\n    local len\n    local tmp\n \
    \   local x\n    local y\n    local z\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist jlist j\n    local list1 list2 common\n    list1=$1\n    list2=$2\n\
    \    common=()\n    for (( i=0; i<${#list1}; i++ )); do\n        jlist=${list2[$i]}\n\
    \        for (( j=0; j<${#jlist}; j++ )); do\n            if [[ ${list1[$i]} ==\
    \ ${jlist[j]} ]]; then\n                common+=(\"${list1[$i]}\")\n         \
    \   fi\n        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local i i2 i1\n    local list1_sorted\n\
    \    local list2_sorted\n    local common_sorted\n    local common_unique\n  \
    \  local common_unique_count\n    local common_unique_count2\n    local common_unique_count3\n\
    \    local common_unique_count4\n    local common_unique_count5\n    local common_unique_count6\n\
    \    local common_unique_count7\n    local common_unique_count8\n    local common_unique_count9\n\
    \    local common_unique_count10\n    local common_unique_count11\n    local common_unique_count12\n\
    \    local common_unique_count13\n    local common_unique_count14\n    local common_unique_count15\n\
    \    local common_unique_count16\n    local common_unique_count17\n    local common_unique_count18\n\
    \    local common_unique_count19\n    local common_unique_count20\n    local common_unique_count21\n\
    \    local common_unique_count22\n    local common_unique_count23\n    local common_unique_count24\n\
    \    local common_unique_count25\n    local common_unique_count26\n    local common_unique_count27\n\
    \    local common_unique_count28\n    local common_unique_count29\n    local common_unique_count30\n\
    \    local common_unique_count31\n    local common_unique_count32\n    local common_unique_count33\n\
    \    local common_unique_count34\n    local common_unique_count35\n    local common_unique_count36\n\
    \    local common_unique_count37\n    local common_unique_count38\n    local common_unique_count39\n\
    \    local common_unique_count40\n    local common_unique_count41\n    local common_unique_count42\n\
    \    local common_unique_count43\n    local common_unique_count44\n    local common_unique_count45\n\
    \    local common_unique_count46\n    local common_unique_count47\n    local common_unique_count48\n\
    \    local common_unique_count49\n    local common_unique_count50\n    local common_unique_count51\n\
    \    local common_unique_count52\n    local common_unique_count53\n    local common_unique_count54\n\
    \    local common_unique_count55\n    local common_unique_count56\n    local common_unique_count57\n\
    \    local common_unique_count58\n    local common_unique_count59\n    local common_unique_count60\n\
    \    local common_unique_count61\n    local common_unique_count62\n    local common_unique_count63\n\
    \    local common_unique_count64\n    local common_unique_count65\n    local common_unique_count66\n\
    \    local common_unique_count67\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local i ilist ilist2\n  ilist=\"\
    $(echo \"$list1\" | sed 's/ /\\n/g' | sort -u)\" # remove duplicates\n  ilist2=\"\
    $(echo \"$list2\" | sed 's/ /\\n/g' | sort -u)\" # remove duplicates\n  ilist=\"\
    $ilist\\n$ilist2\"\n  echo \"$ilist\"\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local list_1_sorted list_2_sorted\n\
    \    local i j\n\n    list_1=$1\n    list_2=$2\n\n    list_1_sorted=$(echo $list_1\
    \ | tr ' ' '\\n' | sort -u)\n    list_2_sorted=$(echo $list_2 | tr ' ' '\\n' |\
    \ sort -u)\n\n    common_list=$( echo $list_1_sorted $list_2_sorted | tr ' ' '\\\
    n' | sort -u )\n\n    echo $common_list\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a arr1\n    local -a\
    \ arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n    local -a\
    \ arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n    local -a\
    \ arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n    local\
    \ -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n    local\
    \ -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n    local\
    \ -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n    local\
    \ -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n    local\
    \ -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n    local\
    \ -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n    local\
    \ -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n    local\
    \ -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n    local\
    \ -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n    local\
    \ -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n    local\
    \ -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n    local\
    \ -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n    local\
    \ -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n    local\
    \ -a arr66\n    local -a arr67\n    local -a arr68\n    local -a arr69\n    local\
    \ -a arr70\n    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local -n arr1=$1; shift\n  local -n arr2=$1; shift\n  local -a res\n  local\
    \ i j\n  res=()\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]};\
    \ j++)); do\n      [[ ${arr1[i]} == ${arr2[j]} ]] && continue\n      res+=(\"\
    ${arr1[i]}\")\n      break\n    done\n  done\n  printf '%s\\n' \"${res[@]}\"\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppss8_nkx.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmppss8_nkx.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local list_1_elements list_2_elements\n\
    \    local common_list_elements\n    local common_list_elements_index\n    local\
    \ common_list_elements_index_1\n    local common_list_elements_index_2\n    local\
    \ common_list_elements_index_3\n    local common_list_elements_index_4\n    local\
    \ common_list_elements_index_5\n    local common_list_elements_index_6\n    local\
    \ common_list_elements_index_7\n    local common_list_elements_index_8\n    local\
    \ common_list_elements_index_9\n    local common_list_elements_index_10\n    local\
    \ common_list_elements_index_11\n    local common_list_elements_index_12\n   \
    \ local common_list_elements_index_13\n    local common_list_elements_index_14\n\
    \    local common_list_elements_index_15\n    local common_list_elements_index_16\n\
    \    local common_list_elements_index_17\n    local common_list_elements_index_18\n\
    \    local common_list_elements_index_19\n    local common_list_elements_index_20\n\
    \    local common_list_elements_index_21\n    local common_list_elements_index_22\n\
    \    local common_list_elements_index_23\n    local common_list_elements_index_24\n\
    \    local common_list_elements_index_25\n    local common_list_elements_index_26\n\
    \    local common_list_elements_index_27\n    local common_list_elements_index_28\n\
    \    local common_list_elements_index_29\n    local common_list_elements_index_30\n\
    \    local common_list_elements_index_31\n    local common_list_elements_index_32\n\
    \    local common_list_elements_index_33\n    local common_list_elements_index_34\n\
    \    local common_list_elements_index_35\n    local common_list_elements_index_36\n\
    \    local common_list_elements_index_37\n    local common_list_elements_index_38\n\
    \    local common_list_elements_index_39\n    local common_list_elements_index_40\n\
    \    local common_list_elements_index_41\n    local common_list_elements_index_42\n\
    \    local common_list_elements_index_43\n    local common_list_elements_index_44\n\
    \    local common_list_elements_index_45\n    local common_list_elements_index_46\n\
    \    local common_list_elements_index_47\n    local common_list_elements_index_48\n\
    \    local common_list_elements_index_49\n    local common_list_elements_index_50\n\
    \    local common_list_elements_index_51\n    local common_list_elements_index_52\n\
    \    local common_list_elements_index_53\n\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    local -a a1 b1 i1 j1 k1 l1 m1 n\n    local -a a2\
    \ b2 i2 j2 k2 l2 m2 n2 o\n    local -a a3 b3 i3 j3 k3 l3 m3 n3 p\n    local -a\
    \ a4 b4 i4 j4 k4 l4 m4 n4 q\n    local -a a5 b5 i5 j5 k5 l5 m5 n5 r\n    local\
    \ -a a6 b6 i6 j6 k6 l6 m6 n6 s\n    local -a a7 b7 i7 j7 k7 l7 m7 n7 t\n    local\
    \ -a a8 b8 i8 j8 k8 l8 m8 n8 u\n    local -a a9 b9 i9 j9 k9 l9 m9 n9 v\n    local\
    \ -a a10 b10 i10 j10 k10 l10 m10 n10 w\n    local -a a11 b11 i11 j11 k11 l11 m11\
    \ n11 x\n    local -a a12 b12 i12 j12 k12 l12 m12 n12 y\n    local -a a13 b13\
    \ i13 j13 k13 l13 m13 n13 z\n    local -a a14 b14 i14 j14 k14 l14 m14 n14 A\n\
    \    local -a a15 b15 i15 j15 k15 l15 m15 n15 B\n    local -a a16 b16 i16 j16\
    \ k16 l16 m16 n16 C\n    local -a a17 b17 i17 j17 k17 l17 m17 n17 C\n    local\
    \ -a a18 b18 i18 j18 k18 l18 m18 n18 D\n    local -a a19 b19 i19 j19 k19 l19 m19\
    \ n19 E\n    local -a a20 b20 i20 j20 k20 l20 m20 n20 F\n    local -a a21 b21\
    \ i21 j21 k21 l21 m21 n21 G\n    local -a a22 b22 i22 j22 k22 l22 m22 n22 H\n\
    \    local -a a23 b23 i23 j23 k23 l23 m23 n23 \n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=( \"$1\" )\n    local -n arr2=( \"$2\" )\n    local -a common\n\
    \    local i j k common_len\n    local -a common\n    common_len=0\n    for ((\
    \ i=0; i < ${#arr1[@]}; i++ )); do\n        for (( j=0; j < ${#arr2[@]}; j++ ));\
    \ do\n            if [[ ${arr1[i]} == ${arr2[j]} ]]; then\n                common+=(\
    \ ${arr1[i]} )\n                common_len=$(( common_len + 1 ))\n           \
    \ fi\n        done\n    done\n    common=( \"${common[@]:0:common_len}\" )\n \
    \   sort -u \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=48 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=12 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=\"$(comm -2 -3 <(sort \"$1\") <(sort \"\
    $2\"))\"\n    echo \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 4 3 34 653 2 5'': No such file or directory

    sort: cannot read: ''5 7 1 5 9 653 121'': No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local minlen\n    local maxlen\n\
    \    local min\n    local max\n    local elem\n    local result\n\n    common=()\n\
    \    len1=${#list1}\n    len2=${#list2}\n    minlen=$((len1 < len2 ? len1 : len2))\n\
    \    maxlen=$((len1 > len2 ? len1 : len2))\n    min=$((minlen > 0 ? minlen : 1))\n\
    \    max=$((maxlen > 0 ? maxlen : 1))\n\n    for ((i=1; i<=min; i++))\n    do\n\
    \        elem=${list1:$i:1}\n        for ((j=1; j<=max; j++))\n        do\n  \
    \          elem=${list2:$j:1}\n            if [[ ${elem} == ${common} ]]; then\n\
    \                common+=(\"${elem}\")\n            fi\n        done\n    done\n\
    \n    for ((i=1; i<=min; i++))\n    do\n        elem=${list1:$i:1}\n        for\
    \ ((j=1; j<=max; j++))\n        do\n            elem=${list2:$j:1}\n         \
    \   if [[ ${elem} != ${common} ]]; then\n                common+=(\"${elem}\"\
    )\n            fi\n        done\n    done\n\n    echo \"${common[@]}\"\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local len1\n    local len2\n \
    \   local maxlen\n    local minlen\n    local min\n    local max\n    local minlen2\n\
    \    local maxlen2\n    local min2\n    local max2\n    local minlen1\n    local\
    \ maxlen1\n    local min1\n    local max1\n    local minlen2\n    local maxlen2\n\
    \    local min2\n    local max2\n    local minlen1\n    local maxlen1\n    local\
    \ min1\n    local max1\n    local minlen2\n    local maxlen2\n    local min2\n\
    \    local max2\n    local minlen1\n    local maxlen1\n    local min1\n    local\
    \ max1\n    local minlen2\n    local maxlen2\n    local min2\n    local max2\n\
    \    local minlen1\n    local maxlen1\n    local min1\n    local max1\n    local\
    \ minlen2\n    local maxlen2\n    local min2\n    local max2\n    local minlen1\n\
    \    local maxlen1\n    local min1\n    local max1\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ min2\n    local max2\n    local minlen1\n    local maxlen1\n    local min1\n\
    \    local max1\n    local minlen2\n    local maxlen2\n    local min2\n    local\
    \ max2\n    local minlen1\n    local maxlen1\n    local min1\n    local max1\n\
    \    local minlen2\n    local maxlen2\n    local min2\n    local max2\n    local\
    \ minlen1\n    local maxlen1\n    local min1\n    local max1\n    local minlen2\n\
    \    local maxlen2\n    local min2\n    local max2\n    local minlen1\n    local\
    \ maxlen1\n    local min1\n    local max1\n    local minlen2\n    local maxlen2\n\
    \    local min2\n    local max2\n    local minlen1\n    local maxlen\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    local -a a1 a2\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n    local -a a1_unique\
    \ a2_unique\n    local -a a1_sorted a2_sorted\n    local -a a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_unique a2_unique\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n    local -a a1_unique\
    \ a2_unique\n    local -a a1_sorted a2_sorted\n    local -a a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_unique a2_unique\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n    local -a a1_unique\
    \ a2_unique\n    local -a a1_sorted a2_sorted\n    local -a a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_unique a2_unique\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_unique a2_unique\n    local -a a1_sorted a2_sorted\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local minlen\n\
    \    local maxlen\n    local min\n    local max\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ min2\n    local max2\n    local minlen1\n    local maxlen1\n    local min1\n\
    \    local max1\n    local minlen2\n    local maxlen2\n    local min2\n    local\
    \ max2\n    local minlen1\n    local maxlen1\n    local min1\n    local max1\n\
    \    local minlen2\n    local maxlen2\n    local min2\n    local max2\n    local\
    \ minlen1\n    local maxlen1\n    local min1\n    local max1\n    local minlen2\n\
    \    local maxlen2\n    local min2\n    local max2\n    local minlen1\n    local\
    \ maxlen1\n    local min1\n    local max1\n    local minlen2\n    local maxlen2\n\
    \    local min2\n    local max2\n    local minlen1\n    local maxlen1\n    local\
    \ min1\n    local max1\n    local minlen2\n    local maxlen2\n    local min2\n\
    \    local max2\n    local minlen1\n    local maxlen1\n    local min1\n    local\
    \ max1\n    local minlen2\n    local maxlen2\n    local min2\n    local max2\n\
    \    local minlen1\n    local maxlen1\n    local min1\n    local max1\n    local\
    \ minlen2\n    local maxlen2\n    local min2\n    local max2\n    local minlen1\n\
    \    local maxlen1\n    local min1\n    local max1\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    local IFS=$'\\n'\n    a=$1\n    b=$2\n    shift\n\
    \    shift\n    local n\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a A\n    local -a B\n    local -a C\n    local -a D\n    local\
    \ -a E\n    local -a F\n    local -a G\n    local -a H\n    local -a I\n    local\
    \ -a J\n    local -a K\n    local -a L\n    local -a M\n    local -a N\n    local\
    \ -a O\n    local -a P\n    local -a Q\n    local -a R\n    local -a S\n    local\
    \ -a T\n    local -a U\n    local -a V\n    local -a W\n    local -a X\n    local\
    \ -a Y\n    local -a Z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local\
    \ -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a A\n    local -a B\n    local\
    \ -a C\n    local \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local \n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list=\"$1\"\n    local other_list=\"$2\"\n    local sorted_common_list\n\
    \    local sorted_other_list\n    local common_list_length\n    local other_list_length\n\
    \    local common_list_elements\n    local other_list_elements\n    local common_list_element\n\
    \    local other_list_element\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count\n    local other_list_element_count\n    local\
    \ common_list_element_count\n    local other_list_element_count\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count\n    local other_list_element_count\n    local\
    \ common_list_element_count\n    local other_list_element_count\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count\n    local other_list_element_count\n    local\
    \ common_list_element_count\n    local other_list_element_count\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count\n    local other_list_element_count\n    local\
    \ common_list_element_count\n    local other_list_element_count\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count\n    local\
    \ other_list_element_count\n    local common_list_element_count\n    local other_list_element_count\n\
    \    local common_list_element_count\n    local other_list_element_count\n   \
    \ local common_list_element_count\n    local other_list_element_count\n    local\
    \ \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=${1%% *}\n    local -n arr2=${2%% *}\n    local -a sorted\n\
    \    local -a common\n    local -a sorted1\n    local -a sorted2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -a common2\n\
    \    local -a common1\n    local -a common2\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n    local -a common1\n\
    \    local -a common2\n    local -a common1\n    local -a common2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -a common2\n\
    \    local -a common1\n    local -a common2\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n    local -a common1\n\
    \    local -a common2\n    local -a common1\n    local -a common2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -a common2\n\
    \    local -a common1\n    local -a common2\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n    local -a common1\n\
    \    local -a common2\n    local -a common1\n    local -a common2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -a common2\n\
    \    local -a common1\n    local -a common2\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n    local -a common1\n\
    \    local -a common2\n    local -a common1\n    local -a common2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -a common2\n\
    \    local -a common1\n    local -a common2\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpa3gt8nvj.sh: line 11: local: `1'': invalid variable name for name
    reference

    /tmp/tmpa3gt8nvj.sh: line 12: local: `5'': invalid variable name for name reference

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local len1\n  local len2\n  local len\n  local tmp\n  local\
    \ sorted\n\n  len1=${#list1}\n  len2=${#list2}\n  len=$((len1 < len2 ? len1 :\
    \ len2))\n  sorted=false\n  common=()\n  for i in $(seq 0 $((len-1)); do\n   \
    \ for j in $(seq 0 $((len-1)); do\n      if [[ $((i+j)) -eq $len ]]; then\n  \
    \      common+=(\"$list1\")\n        sorted=true\n        break\n      fi\n  \
    \    if [[ $((i+j)) -eq 0 ]]; then\n        continue\n      fi\n      if [[ $((j+i))\
    \ -eq $len ]]; then\n        common+=(\"$list2\")\n        sorted=true\n     \
    \   break\n      fi\n      if [[ $((j+i)) -eq 0 ]]; then\n        continue\n \
    \     fi\n      if [[ $((i+j)) -eq $((len-1)) ]]; then\n        common+=(\"$list1\"\
    )\n        sorted=true\n        break\n      fi\n      if [[ $((j+i)) -eq $((len-1))\
    \ ]]; then\n        common+=(\"$list2\")\n        sorted=true\n        break\n\
    \      fi\n      if [[ $((list1[i]<list2[j])) ]]; then\n        tmp=\"$list1\"\
    \n        list1=\"$list2\"\n        list2=\"$tmp\"\n      fi\n      if [[ $((list1[i]>list2[j]))\
    \ ]]; then\n        tmp=\"$list2\"\n        list1=\"$list2\"\n        list2=\"\
    $tmp\"\n      fi\n    done\n  done\n  if [[ $sorted ]]; then\n    common=(\"${common[@]}\"\
    )\n  fi\n  echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe0mxz1t1.sh: line 29: unexpected EOF while looking for matching
    `)''

    /tmp/tmpe0mxz1t1.sh: line 87: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m n o p q r s t u v w x y z\n    local -a a1 a2\n    local\
    \ -a a1_sorted a2_sorted a1_unique a2_unique a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique a1_sorted a2_sorted a1_unique\
    \ a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique a1_sorted a2_sorted\
    \ a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\
    \ a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique\
    \ a2_unique a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted\
    \ a1_unique a2_unique a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique a1_sorted a2_sorted a1_unique a2_unique\n    local\
    \ -a a1_sorted a2_sorted a1_unique a2_unique a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique a1_sorted a2_sorted a1_unique\
    \ a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique a1_sorted a2_sorted\
    \ a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\
    \ a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique\
    \ a2_unique a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted\
    \ a1_unique a2_unique a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique a1_sorted a2_sorted a1_unique a2_unique\n    local\
    \ -a a1_sorted a2_sorted a1_unique a2_unique a\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=($1)\n    local list2=($2)\n    local list3=($3)\n\
    \    local list4=($4)\n    local list5=($5)\n    local list6=($6)\n    local list7=($7)\n\
    \    local list8=($8)\n    local list9=($9)\n    local list10=($10)\n    local\
    \ list11=($11)\n    local list12=($12)\n    local list13=($13)\n    local list14=($14)\n\
    \    local list15=($15)\n    local list16=($16)\n    local list17=($17)\n    local\
    \ list18=($18)\n    local list19=($19)\n    local list20=($20)\n    local list21=($21)\n\
    \    local list22=($22)\n    local list23=($23)\n    local list24=($24)\n    local\
    \ list25=($25)\n    local list26=($26)\n    local list27=($27)\n    local list28=($28)\n\
    \    local list29=($29)\n    local list30=($30)\n    local list31=($31)\n    local\
    \ list32=($32)\n    local list33=($33)\n    local list34=($34)\n    local list35=($35)\n\
    \    local list36=($36)\n    local list37=($37)\n    local list38=($38)\n    local\
    \ list39=($39)\n    local list40=($40)\n    local list41=($41)\n    local list42=($42)\n\
    \    local list43=($43)\n    local list44=($44)\n    local list45=($45)\n    local\
    \ list46=($46)\n    local list47=($47)\n    local list48=($48)\n    local list49=($49)\n\
    \    local list50=($50)\n    local list51=($51)\n    local list52=($52)\n    local\
    \ list53=($53)\n    local list54=($54)\n    local list55=($55)\n    local list56=($56)\n\
    \    local list57=($57)\n    local list58=($58)\n    local list59=($59)\n    local\
    \ list60\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1\n    local list2\n    local list3\n    local list4\n\
    \    local list5\n    local list6\n    local list7\n    local list8\n    local\
    \ list9\n    local list10\n    local list11\n    local list12\n    local list13\n\
    \    local list14\n    local list15\n    local list16\n    local list17\n    local\
    \ list18\n    local list19\n    local list20\n    local list21\n    local list22\n\
    \    local list23\n    local list24\n    local list25\n    local list26\n    local\
    \ list27\n    local list28\n    local list29\n    local list30\n    local list31\n\
    \    local list32\n    local list33\n    local list34\n    local list35\n    local\
    \ list36\n    local list37\n    local list38\n    local list39\n    local list40\n\
    \    local list41\n    local list42\n    local list43\n    local list44\n    local\
    \ list45\n    local list46\n    local list47\n    local list48\n    local list49\n\
    \    local list50\n    local list51\n    local list52\n    local list53\n    local\
    \ list54\n    local list55\n    local list56\n    local list57\n    local list58\n\
    \    local list59\n    local list60\n    local list61\n    local list62\n    local\
    \ list63\n    local list64\n    local list65\n    local list66\n    local list67\n\
    \    local list68\n    local list69\n    local list70\n    local list71\n    local\
    \ list72\n    local list73\n    local list74\n    local list75\n    local list76\n\
    \    local list77\n    local list78\n    local list79\n    local list80\n    local\
    \ list81\n    local list82\n    local list83\n    local list84\n    local list85\n\
    \    local list86\n    local list87\n    local list88\n    local list89\n    local\
    \ list90\n    local list91\n    local list92\n    local list93\n    local list94\n\
    \    local list95\n    local list96\n    local list97\n    local list98\n    local\
    \ list99\n    local list100\n    local list101\n    local \n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local i imax\n    local list3\n\
    \    imax=$(( ${#list1} > ${#list2} ? ${#list1} : ${#list2} ))\n    list3=($(sort\
    \ -u <<<\"${list1[@]}\" \"${list2[@]}\"))\n    for (( i=1; i<=$imax; i++ )); do\n\
    \        if [[ \"${list3[i]}\" == \"${list2[i]}\" ]]; then\n            list3[i]=\"\
    \"\n        fi\n    done\n    echo \"${list3[@]}\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''5 7 1 5 9 653 121'': No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local match\n    local matchlen\n\
    \    local matchlen2\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local minlen\n\
    \    local maxlen\n    local maxlen1\n    local maxlen2\n    local maxlendiff\n\
    \    local maxlendiff1\n    local maxlendiff2\n    local maxlendiffdiff\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local maxlendiffdiffdiff\n \
    \   local maxlendiffdiff1\n    local maxlendiffdiff2\n    local maxlendiffdiff3\n\
    \    local maxlendiffdiff4\n    local maxlendiffdiff5\n    local maxlendiffdiff6\n\
    \    local maxlendiffdiff7\n    local maxlendiffdiff8\n    local maxlendiffdiff9\n\
    \    local maxlendiffdiff10\n    local maxlendiffdiff11\n    local maxlendiffdiff12\n\
    \    local maxlendiffdiff13\n    local maxlendiffdiff14\n    local maxlendiffdiff15\n\
    \    local maxlendiffdiff16\n    local maxlendiffdiff17\n    local maxlendiffdiff18\n\
    \    local maxlendiffdiff19\n    local maxlendiffdiff20\n    local maxlendiffdiff21\n\
    \    local maxlendiffdiff22\n    local maxlendiffdiff23\n    local maxlendiffdiff24\n\
    \    local maxlendiffdiff25\n    local maxlendiffdiff26\n    local maxlendiffdiff27\n\
    \    local maxlendiffdiff28\n    local maxlendiffdiff29\n    local maxlendiffdiff30\n\
    \    local maxlendiffdiff31\n    local maxlendiffdiff32\n    local maxlendiffdiff33\n\
    \    local maxlendiffdiff34\n    local maxlendiffdiff35\n    local maxlendiffdiff36\n\
    \    local maxlendiffdiff37\n    local maxlendiffdiff38\n    local maxlendiffdiff39\n\
    \    local maxlendiffdiff40\n    local maxlendiffdiff41\n    local maxlendiffdiff42\n\
    \    local maxlendiffdiff43\n    local maxlendiffdiff44\n    local maxlendiffdiff45\n\
    \    local maxlendiffdiff46\n    local maxlendiffdiff47\n    local maxlendiffdiff48\n\
    \    local maxlendiffdiff49\n    local maxlendiffdiff50\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local len1\n  local len2\n  local len\n  local tmp\n  local\
    \ sorted\n  local unique\n  local result\n  local word\n  local word1\n  local\
    \ word2\n  local word3\n  local word4\n  local word5\n  local word6\n  local word7\n\
    \  local word8\n  local word9\n  local word10\n  local word11\n  local word12\n\
    \  local word13\n  local word14\n  local word15\n  local word16\n  local word17\n\
    \  local word18\n  local word19\n  local word20\n  local word21\n  local word22\n\
    \  local word23\n  local word24\n  local word25\n  local word26\n  local word27\n\
    \  local word28\n  local word29\n  local word30\n  local word31\n  local word32\n\
    \  local word33\n  local word34\n  local word35\n  local word36\n  local word37\n\
    \  local word38\n  local word39\n  local word40\n  local word41\n  local word42\n\
    \  local word43\n  local word44\n  local word45\n  local word46\n  local word47\n\
    \  local word48\n  local word49\n  local word50\n  local word51\n  local word52\n\
    \  local word53\n  local word54\n  local word55\n  local word56\n  local word57\n\
    \  local word58\n  local word59\n  local word60\n  local word61\n  local word62\n\
    \  local word63\n  local word64\n  local word65\n  local word66\n  local word67\n\
    \  local word68\n  local word69\n  local word70\n  local word71\n  local word72\n\
    \  local word73\n  local word74\n  local word75\n  local word76\n  local word77\n\
    \  local word78\n  local word79\n  local word80\n  local word81\n  local word82\n\
    \  local word83\n  local word84\n  local word85\n  local word86\n  local word87\n\
    \  local word88\n  local word89\n  local word90\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local i j\n    common_list=$(\
    \ echo $1 | sed 's/ /\\n/g' | sort -u )\n    list_1=$( echo $2 | sed 's/ /\\n/g'\
    \ | sort -u )\n    for (( i = 0; i < ${#list_1}; i++ )); do\n        for (( j=0;\
    \ j < ${#list_2}; j++ )); do\n            if [[ ${list_1:$i} = ${list_2:$j} ]];\
    \ then\n                common_list=\"$common_list ${list_1:$i}\"\n          \
    \  fi\n        done\n    done\n    echo \"$common_list\"\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local i j k l m n o\
    \ p q r s t u v w x y z\n    local list_1_len list_2_len\n    list_1_len=$(expr\
    \ ${#list_1} + 1)\n    list_2_len=$(expr ${#list_2} + 1)\n    local common_elements=()\n\
    \    for (( i = 1; i <= list_1_len; i++ )); do\n        for (( j = 1; j <= list_2_len;\
    \ j++ )); do\n            k=$(expr ${list_1:$i:1} + ${list_2:$j:1})\n        \
    \    if [[ ${list_1:$i:1} != ${list_2:$j:1} ]]; then\n                if [[ ${list_1:$i:1}\
    \ > ${list_2:$j:1} ]]; then\n                    list_1=$(expr ${list_1:$i:1}\
    \ - ${list_2:$j:1})\n                    list_2=$(expr ${list_2:$j:1} - ${list_1:$i:1})\n\
    \                else\n                    list_1=$(expr ${list_1:$i:1} - ${list_2:$j:1})\n\
    \                    list_2=$(expr ${list_2:$j:1} - ${list_1:$i:1})\n        \
    \        fi\n            fi\n            if [[ ${list_1:$i:1} != ${list_2:$j:1}\
    \ ]]; then\n                common_elements+=(\"$k\")\n            fi\n      \
    \  done\n    done\n    echo \"${common_elements[@]}\"\n}\n\ncandidate() {\n  \
    \  common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: missing argument after \u2018+\u2019\nexpr: syntax\
    \ error: unexpected argument \u20187\u2019\nexpr: syntax error: missing argument\
    \ after \u2018-\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\
    \nexpr: syntax error: missing argument after \u2018+\u2019\nexpr: syntax error:\
    \ missing argument after \u2018+\u2019\nexpr: syntax error: missing argument after\
    \ \u2018+\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\nexpr:\
    \ syntax error: missing argument after \u2018+\u2019\nexpr: syntax error: missing\
    \ argument after \u2018+\u2019\nexpr: syntax error: missing argument after \u2018\
    +\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\nexpr: syntax\
    \ error: missing argument after \u2018+\u2019\nexpr: syntax error: missing argument\
    \ after \u2018+\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\
    \nexpr: syntax error: missing argument after \u2018+\u2019\nexpr: syntax error:\
    \ missing argument after \u2018+\u2019\nexpr: syntax error: missing argument after\
    \ \u2018+\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\nexpr:\
    \ syntax error: missing argument after \u2018+\u2019\nexpr: syntax error: missing\
    \ argument after \u2018+\u2019\nexpr: syntax error: missing argument after \u2018\
    +\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\nexpr: syntax\
    \ error: missing argument after \u2018+\u2019\nexpr: syntax error: missing argument\
    \ after \u2018+\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\
    \nexpr: syntax error: missing argument after \u2018+\u2019\nexpr: syntax error:\
    \ missing argument after \u2018+\u2019\nexpr: syntax error: missing argument after\
    \ \u2018+\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\nexpr:\
    \ syntax error: missing argument after \u2018+\u2019\nexpr: syntax error: missing\
    \ argument after \u2018+\u2019\nexpr: syntax error: missing argument after \u2018\
    +\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\nexpr: syntax\
    \ error: missing argument after \u2018+\u2019\nexpr: syntax error: missing argument\
    \ after \u2018+\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\
    \nexpr: syntax error: missing argument after \u2018+\u2019\nexpr: syntax error:\
    \ missing argument after \u2018+\u2019\nexpr: syntax error: missing argument after\
    \ \u2018+\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\nexpr:\
    \ syntax error: missing argument after \u2018+\u2019\nexpr: syntax error: missing\
    \ argument after \u2018+\u2019\nexpr: syntax error: missing ar"
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=(\"${!1}\")\n    local -n arr2=(\"${!2}\")\n    local -a sorted\n\
    \    local -a common\n    local -a sorted1\n    local -a sorted2\n    local -a\
    \ common1\n    local -a common2\n    local -a common3\n    local -a common4\n\
    \    local -a common5\n    local -a common6\n    local -a common7\n    local -a\
    \ common8\n    local -a common9\n    local -a common10\n    local -a common11\n\
    \    local -a common12\n    local -a common13\n    local -a common14\n    local\
    \ -a common15\n    local -a common16\n    local -a common17\n    local -a common18\n\
    \    local -a common19\n    local -a common20\n    local -a common21\n    local\
    \ -a common22\n    local -a common23\n    local -a common24\n    local -a common25\n\
    \    local -a common26\n    local -a common27\n    local -a common28\n    local\
    \ -a common29\n    local -a common30\n    local -a common31\n    local -a common32\n\
    \    local -a common33\n    local -a common34\n    local -a common35\n    local\
    \ -a common36\n    local -a common37\n    local -a common38\n    local -a common39\n\
    \    local -a common40\n    local -a common41\n    local -a common42\n    local\
    \ -a common43\n    local -a common44\n    local -a common45\n    local -a common46\n\
    \    local -a common47\n    local -a common48\n    local -a common49\n    local\
    \ -a common50\n    local -a common51\n    local -a common52\n    local -a common53\n\
    \    local -a common54\n    local -a common55\n    local -a common56\n    local\
    \ -a common57\n    local -a common58\n    local -a common59\n    local -a common60\n\
    \    local -a common61\n    local -a common62\n    local -a common63\n    local\
    \ -a common64\n    local -a common65\n    local -a common66\n\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp71lnvud6.sh: line 11: 1 4 3 34 653 2 5: invalid variable name

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a sorted=()\n\
    \    local -a common=()\n    local -a sorted1\n    local -a sorted2\n    local\
    \ -a common1\n    local -a common2\n    local i\n    local j\n    local k\n  \
    \  local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo162it0x.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmpo162it0x.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local len1\n  local len2\n  local len\n  local result\n  local\
    \ sorted\n  local sorted1\n  local sorted2\n  local sorted3\n  local sorted4\n\
    \  local sorted5\n  local sorted6\n  local sorted7\n  local sorted8\n  local sorted9\n\
    \  local sorted10\n  local sorted11\n  local sorted12\n  local sorted13\n  local\
    \ sorted14\n  local sorted15\n  local sorted16\n  local sorted17\n  local sorted18\n\
    \  local sorted19\n  local sorted20\n  local sorted21\n  local sorted22\n  local\
    \ sorted23\n  local sorted24\n  local sorted25\n  local sorted26\n  local sorted27\n\
    \  local sorted28\n  local sorted29\n  local sorted30\n  local sorted31\n  local\
    \ sorted32\n  local sorted33\n  local sorted34\n  local sorted35\n  local sorted36\n\
    \  local sorted37\n  local sorted38\n  local sorted39\n  local sorted40\n  local\
    \ sorted41\n  local sorted42\n  local sorted43\n  local sorted44\n  local sorted45\n\
    \  local sorted46\n  local sorted47\n  local sorted48\n  local sorted49\n  local\
    \ sorted50\n  local sorted51\n  local sorted52\n  local sorted53\n  local sorted54\n\
    \  local sorted55\n  local sorted56\n  local sorted57\n  local sorted58\n  local\
    \ sorted59\n  local sorted60\n  local sorted61\n  local sorted62\n  local sorted63\n\
    \  local sorted64\n  local sorted65\n  local sorted66\n  local sorted67\n  local\
    \ sorted68\n  local sorted69\n  local sorted70\n  local sorted71\n  local sorted72\n\
    \  local sorted73\n  local sorted74\n  local sorted75\n  local sorted76\n  local\
    \ sorted77\n  local sorted78\n  local sorted79\n  local sorted80\n  local sorted81\n\
    \  local sorted82\n  local sorted83\n  local sorted84\n  local sorted85\n  local\
    \ sorted86\n  local sorted87\n  local sorted88\n  local sorted89\n  local sorted90\n\
    \  local sorted91\n  local sorted92\n\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local k\n    local len1\n    local len2\n    local tmp\n    local sorted\n\
    \n    list1=$1\n    list2=$2\n    len1=${#list1}\n    len2=${#list2}\n    common=()\n\
    \    sorted=()\n    for (( i = 0; i < len1; i++ )); do\n        tmp=${list1:$i:1}\n\
    \        for (( j = 0; i < len2; j++ )); do\n            if [[ ${list2:$j:1} =~\
    \ $tmp ]]; then\n                common+=(\"$list1:$i\")\n                list1=${list1:0:$i}\n\
    \                len1=${len1}-1\n                break\n            fi\n     \
    \   done\n    done\n    for (( k = 0; k < len2; k++ )); do\n        tmp=${list2:$k:1}\n\
    \        for (( j = 0; j < len1; j++ )); do\n            if [[ ${list1:$j:1} =~\
    \ $tmp ]]; then\n                common+=(\"$list2:$k\")\n                list2=${list2:0:$k}\n\
    \                len2=${len2}-1\n                break\n            fi\n     \
    \   done\n    done\n    sorted=( \"${common[@]}\" )\n    IFS=$'\\n' sorted=( \"\
    ${sorted[*]}\" )\n    IFS=$' ' sorted=( \"${sorted[*]}\" )\n    IFS=$'\\n' sorted=(\
    \ \"${sorted[*]}\" )\n    IFS=$' ' sorted=( \"${sorted[*]}\" )\n    IFS=$'\\n'\
    \ sorted=( \"${sorted[*]}\" )\n    IFS=$'\\n' sorted=( \"${sorted[*]}\" )\n  \
    \  IFS=$'\\n' sorted=( \"${sorted[*]}\" )\n    IFS=$'\\n' sorted=( \"${sorted[*]}\"\
    \ )\n    IFS=$'\\n' sorted=( \"${sorted[*]}\" )\n    IFS=$'\\n' sorted=( \"${sorted[*]}\"\
    \ )\n    IFS=$'\\n' sorted=( \"${sorted[*]}\" )\n    IFS=$'\\n' sorted=( \"${sorted[*]}\"\
    \ )\n    IFS=$'\\n' sorted=( \"${sorted[*]}\" )\n    IFS=$'\\n' sorted=( \"${sorted[*]}\"\
    \ )\n    IFS=$\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list1\n    local list2\n    local i\n    local\
    \ j\n    local common_list_len\n    local list1_len\n    local list2_len\n   \
    \ local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_list_len\n    local common_list_len\n    local common_list_len\n\
    \    local common_\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist jlist ilist2 jlist2 common\n    IFS=$'\\n' ilist=\"$1\" jlist=\"\
    $2\"\n    ilist2=\"$(echo \"$ilist\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"\
    \n    jlist2=\"$(echo \"$jlist\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"\n\
    \    common=()\n    for (( i=0; i<${#ilist2}; i++ )); do\n        for (( j=0;\
    \ j<${#jlist2}; j++ )); do\n            if [[ ${ilist2}[$i]=${jlist2}[$j] ]];\
    \ then\n                common+=(\"${ilist2}[$i]\")\n            fi\n        done\n\
    \    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=$(awk '\n        BEGIN {\n            split($1,\
    \ a, \" \")\n            split($2, b, \" \")\n        }\n        END {\n     \
    \       for (i in a) {\n                for (j in b) {\n                    if\
    \ (a[i] == b[j]) {\n                        print a[i]\n                     \
    \   break\n                    }\n                }\n            }\n        }\n\
    \    ');\n    echo \"${common_list}\"\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=33 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=6 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n    local len\n    local len\n    local len\n  \
    \  local len\n    local len\n    local len\n    local len\n    local len\n   \
    \ local len\n    local len\n    local len\n    local len\n    local len\n    local\
    \ len\n    local len\n    local len\n    local len\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n    local len\n    local len\n    local len\n  \
    \  local len\n    local len\n    local len\n    local len\n    local len\n   \
    \ local len\n    local len\n    local len\n    local len\n    local len\n    local\
    \ len\n    local len\n    local len\n    local len\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n    local len\n    local len\n    local len\n  \
    \  local len\n    local len\n    local len\n    local len\n    local len\n   \
    \ local len\n    local len\n    local len\n    local len\n    local len\n    local\
    \ len\n    local len\n    local len\n    local len\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n    local len\n    local len\n    local len\n  \
    \  local len\n    local len\n    local len\n    local len\n    local len\n   \
    \ local len\n    local len\n    local len\n    local len\n    local len\n    local\
    \ len\n    local len\n    local len\n    local len\n    local len\n    local len\n\
    \    local len\n    local len\n    local len\n    local len\n    local len\n \
    \   local len\n    local len\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i i1 i2 j1 j2 k1 k2 len1 len2 len\n    local list1 list2 list3 list4\
    \ list5 list6 list7 list8 list9 list10\n    local list11 list12 list13 list14\
    \ list15 list16 list17 list18 list19\n    local list20 list21 list22 list23 list24\
    \ list25 list26 list27 list28\n    local list29 list30 list31 list32 list33 list34\
    \ list35 list36 list37\n    local list38 list39 list40 list41 list42 list43 list44\
    \ list45 list46\n    local list47 list48 list49 list50 list51 list52 list53 list54\
    \ list55\n    local list56 list57 list58 list59 list60 list61 list62 list63 list64\n\
    \    local list65 list66 list67 list68 list69 list70 list71 list72 list73\n  \
    \  local list74 list75 list76 list77 list78 list79 list80 list81 list82\n    local\
    \ list83 list84 list85 list86 list87 list88 list89 list90 list91\n    local list92\
    \ list93 list94 list95 list96 list97 list98 list99 list100\n    local list101\
    \ list102 list103 list104 list105 list106 list107 list108\n    local list109 list110\
    \ list111 list112 list113 list114 list115 list116\n    local list117 list118 list119\
    \ list120 list121 list122 list123 list124\n    local list125 list126 list127 list128\
    \ list129 list130 list131 list132\n    local list133 list134 list135 list136 list137\
    \ list138 list139 list140\n    local list141 list142 list143 list144 list145 list146\
    \ list147 list148\n    local list149 list150 list151 list152 list153 list154 list155\
    \ list156\n    local list157 list158 list159 list160 list161 list162 list163 list164\n\
    \    local \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local -n arr1=$1; shift\n  local -n arr2=$1; shift\n  local -a sorted1\n  local\
    \ -a sorted2\n  local -a common\n  local -a common1\n  local -a common2\n  local\
    \ -a common3\n  local -a common4\n  local -a common5\n  local -a common6\n  local\
    \ -a common7\n  local -a common8\n  local -a common9\n  local -a common10\n  local\
    \ -a common11\n  local -a common12\n  local -a common13\n  local -a common14\n\
    \  local -a common15\n  local -a common16\n  local -a common17\n  local -a common18\n\
    \  local -a common19\n  local -a common20\n  local -a common21\n  local -a common22\n\
    \  local -a common23\n  local -a common24\n  local -a common25\n  local -a common26\n\
    \  local -a common27\n  local -a common28\n  local -a common29\n  local -a common30\n\
    \  local -a common31\n  local -a common32\n  local -a common33\n  local -a common34\n\
    \  local -a common35\n  local -a common36\n  local -a common37\n  local -a common38\n\
    \  local -a common39\n  local -a common40\n  local -a common41\n  local -a common42\n\
    \  local -a common43\n  local -a common44\n  local -a common45\n  local -a common46\n\
    \  local -a common47\n  local -a common48\n  local -a common49\n  local -a common50\n\
    \  local -a common51\n  local -a common52\n  local -a common53\n  local -a common54\n\
    \  local -a common55\n  local -a common56\n  local -a common57\n  local -a common58\n\
    \  local -a common59\n  local -a common60\n  local -a common61\n  local -a common62\n\
    \  local -a common63\n  local -a common64\n  local -a common65\n  local -a common66\n\
    \  local -a common67\n  local -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpiotaeeqf.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmpiotaeeqf.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n\
    \    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a\
    \ j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local\
    \ -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a a\n    local -a b\n    local\
    \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
    \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist jlist ilist jlist ilist jlist ilist jlist\n    local -a ilist\
    \ jlist\n    local -a common\n    local -a ilist jlist\n    local -a common\n\
    \    local -a ilist jlist\n    local -a common\n    local -a ilist jlist\n   \
    \ local -a common\n    local -a ilist jlist\n    local -a common\n    local -a\
    \ ilist jlist\n    local -a common\n    local -a ilist jlist\n    local -a common\n\
    \    local -a ilist jlist\n    local -a common\n    local -a ilist jlist\n   \
    \ local -a common\n    local -a ilist jlist\n    local -a common\n    local -a\
    \ ilist jlist\n    local -a common\n    local -a ilist jlist\n    local -a common\n\
    \    local -a ilist jlist\n    local -a common\n    local -a ilist jlist\n   \
    \ local -a common\n    local -a ilist jlist\n    local -a common\n    local -a\
    \ ilist jlist\n    local -a common\n    local -a ilist jlist\n    local -a common\n\
    \    local -a ilist jlist\n    local -a common\n    local -a ilist jlist\n   \
    \ local -a common\n    local -a ilist jlist\n    local -a common\n    local -a\
    \ ilist jlist\n    local -a common\n    local -a ilist jlist\n    local -a common\n\
    \    local -a ilist jlist\n    local -a common\n    local -a ilist jlist\n   \
    \ local -a common\n    local -a ilist jlist\n    local -a common\n    local -a\
    \ ilist jlist\n    local -a common\n    local -a ilist jlist\n    local -a common\n\
    \    local -a ilist jlist\n    local -a common\n    local -a ilist jlist\n   \
    \ local -a common\n    local -a ilist jlist\n    local -a common\n    local -a\
    \ ilist jlist\n    local -a common\n    local -a ilist jlist\n    local -a common\n\
    \    local -a ilist jlist\n    local -\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common\n    common=()\n\
    \    for list_1_element in $list_1; do\n        for list_2_element in $list_2;\
    \ do\n            if [ \"$list_1_element\" = \"$list_2_element\" ]; then\n   \
    \             common+=(\"$list_1_element\")\n            fi\n        done\n  \
    \  done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\
    \ list_2_sorted\n    list_1_sorted=$(echo $list_1 | tr ' ' '\\n' | sort -u)\n\
    \    list_2_sorted=$(echo $list_2 | tr ' ' '\\n' | sort -u)\n    local common_elements\n\
    \    common_elements=$(comm -3 <(echo $list_1_sorted | tr ' ' '\\n') <(echo $list_2_sorted\
    \ | tr ' ' '\\n'))\n    echo \"$common_elements\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local sorted\n    local\
    \ sorted1\n    local sorted2\n    local sorted1len\n    local sorted2len\n   \
    \ local sorted1i\n    local sorted2i\n    local sorted1j\n    local sorted2j\n\
    \    local sorted1k\n    local sorted2k\n    local sorted1\n    local sorted2\n\
    \    local sorted1len\n    local sorted2len\n    local sorted1i\n    local sorted2i\n\
    \    local sorted1j\n    local sorted2j\n    local sorted1k\n    local sorted2k\n\
    \    local sorted1\n    local sorted2\n    local sorted1len\n    local sorted2len\n\
    \    local sorted1i\n    local sorted2i\n    local sorted1j\n    local sorted2j\n\
    \    local sorted1k\n    local sorted2k\n    local sorted1\n    local sorted2\n\
    \    local sorted1len\n    local sorted2len\n    local sorted1i\n    local sorted2i\n\
    \    local sorted1j\n    local sorted2j\n    local sorted1k\n    local sorted2k\n\
    \    local sorted1\n    local sorted2\n    local sorted1len\n    local sorted2len\n\
    \    local sorted1i\n    local sorted2i\n    local sorted1j\n    local sorted2j\n\
    \    local sorted1k\n    local sorted2k\n    local sorted1\n    local sorted2\n\
    \    local sorted1len\n    local sorted2len\n    local sorted1i\n    local sorted2i\n\
    \    local sorted1j\n    local sorted2j\n    local sorted1k\n    local sorted2k\n\
    \    local sorted1\n    local sorted2\n    local sorted1len\n    local sorted2len\n\
    \    local sorted1i\n    local sorted2i\n    local sorted1j\n    local sorted2j\n\
    \    local sorted1k\n    local sorted2k\n    local sorted1\n    local sorted2\n\
    \    local sorted1len\n    local sorted2len\n    local sorted1i\n    local sorted2i\n\
    \    local sorted1j\n    local \n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=($1)\n    local list2=($2)\n    local common=()\n\
    \    for ((i=0; i<${#list1[*]}; i++)); do\n        for ((j=0; j<${#list2[*]};\
    \ j++)); do\n            if [[ ${list1[i]} == ${list2[j]} ]]; then\n         \
    \       common+=(\"${list1[i]}\")\n                list1[i]=\n               \
    \ list2[j]=\n                break\n            fi\n        done\n    done\n \
    \   echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list1\n    local list2\n    local i\n    local\
    \ j\n    local common_list_len\n    local common_list_len2\n    local common_list_len3\n\
    \    local common_list_len4\n    local common_list_len5\n    local common_list_len6\n\
    \    local common_list_len7\n    local common_list_len8\n    local common_list_len9\n\
    \    local common_list_len10\n    local common_list_len11\n    local common_list_len12\n\
    \    local common_list_len13\n    local common_list_len14\n    local common_list_len15\n\
    \    local common_list_len16\n    local common_list_len17\n    local common_list_len18\n\
    \    local common_list_len19\n    local common_list_len20\n    local common_list_len21\n\
    \    local common_list_len22\n    local common_list_len23\n    local common_list_len24\n\
    \    local common_list_len25\n    local common_list_len26\n    local common_list_len27\n\
    \    local common_list_len28\n    local common_list_len29\n    local common_list_len30\n\
    \    local common_list_len31\n    local common_list_len32\n    local common_list_len33\n\
    \    local common_list_len34\n    local common_list_len35\n    local common_list_len36\n\
    \    local common_list_len37\n    local common_list_len38\n    local common_list_len39\n\
    \    local common_list_len40\n    local common_list_len41\n    local common_list_len42\n\
    \    local common_list_len43\n    local common_list_len44\n    local common_list_len45\n\
    \    local common_list_len46\n    local common_list_len47\n    local common_list_len48\n\
    \    local common_list_len49\n    local common_list_len50\n    local common_list_len51\n\
    \    local common_list_len52\n    local common_list_len53\n    local common_list_len54\n\
    \    local common_list_len55\n    local common_list_len56\n    local common_list_len57\n\
    \    local common_list_len58\n    local common_list_len59\n    local common_list_len60\n\
    \    local common_list_len61\n    local common_list_len62\n    local common_list_len63\n\
    \    local common_list_len64\n    local common_list_len65\n    local common_list_len66\n\
    \    local common_list_len67\n    local common_list_len68\n    local common_list_len69\n\
    \    local common_list_len70\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a res=()\n\
    \    while [ \"${#arr1[@]}\" -gt 0 ]; do\n        local elem1=${arr1[$((${#arr1[@]}\
    \ - 1))]}\n        local elem2=${arr2[$((${#arr2[@]} - 1))]}\n        if [[ \"\
    $elem1\" == \"$elem2\" ]]; then\n            arr1=(\"${arr1[@]:0:$((${#arr1[@]}\
    \ - 1))}\")\n            arr2=(\"${arr2[@]:0:$((${#arr2[@]} - 1))}\")\n      \
    \  else\n            res=(\"${res[@]}\" \"$elem1\")\n        fi\n    done\n  \
    \  arr1=(\"${arr1[@]}\")\n    arr2=(\"${arr2[@]}\")\n    while [ \"${#arr1[@]}\"\
    \ -gt 0 ]; do\n        local elem1=${arr1[$((${#arr1[@]} - 1))]}\n        local\
    \ elem2=${arr2[$((${#arr2[@]} - 1))]}\n        if [[ \"$elem1\" == \"$elem2\"\
    \ ]]; then\n            arr1=(\"${arr1[@]:0:$((${#arr1[@]} - 1))}\")\n       \
    \     arr2=(\"${arr2[@]:0:$((${#arr2[@]} - 1))}\")\n        else\n           \
    \ res=(\"${res[@]}\" \"$elem1\")\n        fi\n    done\n    arr1=(\"${arr1[@]}\"\
    )\n    arr2=(\"${arr2[@]}\")\n    local len1=${#arr1[@]}\n    local len2=${#arr2[@]}\n\
    \    local i\n    for ((i = 0; i < $len1 && i < $len2; i++)); do\n        local\
    \ elem1=${arr1[$i]}\n        local elem2=${arr2[$i]}\n        if [[ \"$elem1\"\
    \ == \"$elem2\" ]]; then\n            arr1=(\"${arr1[@]:0:$i}\")\n           \
    \ arr2=(\"${arr2[@]:0:$i}\")\n        else\n            res=(\"${res[@]}\" \"\
    $elem1\")\n        fi\n    done\n    arr1=(\"${arr1[@]}\")\n    arr2=(\"${arr2[@]}\"\
    )\n    local len1=${#arr1[@]}\n    local len2=${#arr2[@]}\n    local i\n    for\
    \ ((i = 0; i < $len1 && i < \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxr5rv1xf.sh: line 56: unexpected EOF while looking for matching
    `)''

    /tmp/tmpxr5rv1xf.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1 list2\n    list1=$1\n    list2=$2\n    shift\n\
    \    shift\n    local common\n    common=()\n    for (( i = 0; i < ${#list1};\
    \ i++ )); do\n        for (( j = 0; i < ${#list2}; j++ )); do\n            [ \"\
    ${list1:$i:1}\" == \"${list2:$j:1}\" ] && continue\n            common+=(\"${list1:$i:1}\"\
    )\n        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n   \
    \ common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local max\n    local min\n    local tmp\n    local sorted\n\n    len1=${#list1}\n\
    \    len2=${#list2}\n    maxlen=$(( len1 > len2 ? len1 : len2 ))\n    sorted=false\n\
    \    for (( i = 0; i < maxlen; i++ )); do\n        if [[ $list1 == *\"${list2::i}\"\
    * ]]; then\n            common=\"${list1::i}\"\n            list1=\"${list2::i}\"\
    \n            list2=\"${common}\"\n            sorted=true\n            break\n\
    \        fi\n    done\n    if [[ $sorted == false ]]; then\n        common=\"\
    ${list1}\"\n        list1=\"${list2}\"\n    fi\n    list1=\"${list1//[[:space:]]/}\"\
    \n    list2=\"${list2//[[:space:]]/}\"\n    list1=\"${list1//$'\\n'/}\"\n    list2=\"\
    ${list2//$'\\n'/}\"\n    list1=\"${list1//$'\\r'/}\"\n    list2=\"${list2//$'\\\
    r'/}\"\n    list1=\"${list1//$'\\t'/}\"\n    list2=\"${list2//$'\\t'/}\"\n   \
    \ list1=\"${list1//$'\\v'/}\"\n    list2=\"${list2//$'\\v'/}\"\n    list1=\"${list1//$'\\\
    f'/}\"\n    list2=\"${list2//$'\\f'/}\"\n    list1=\"${list1//$'\\e'/}\"\n   \
    \ list2=\"${list2//$'\\e'/}\"\n    list1=\"${list1//$'\\?'/}\"\n    list2=\"${list2//$'\\\
    ?'/}\"\n    list1=\"${list1//$'\\#'/}\"\n    list2=\"${list2//$'\\#'/}\"\n   \
    \ list1=\"${list1//$'\\&'/}\"\n    list2=\"${list2//$'\\&'/}\"\n    list1=\"${list1//$'\\\
    (''/}\"\n    list2=\"${list2//$'\\(''/}\"\n    list1=\"${list1//$'\\)/'\"}\"\n\
    \    list2=\"${list2//$'\\)/'\"}\"\n    list1=\"${list1//$'\\{'/}\"\n\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvsgq55zv.sh: line 79: unexpected EOF while looking for matching
    `"''

    /tmp/tmpvsgq55zv.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n\
    \    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a\
    \ i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a a\n    local -a b\n    local\
    \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
    \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local len\n    local tmp\n \
    \   local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n\
    \    local list1len\n    local list2len\n    local list1words\n    local list2words\n\
    \    local list1wordslen\n    local list2wordslen\n    local list1wordslen\n \
    \   local list2wordslen\n    local list1wordslen\n    local list2wordslen\n  \
    \  local list1wordslen\n    local list2wordslen\n    local list1wordslen\n   \
    \ local list2wordslen\n    local list1wordslen\n    local list2wordslen\n    local\
    \ list1wordslen\n    local list2wordslen\n    local list1wordslen\n    local list2wordslen\n\
    \    local list1wordslen\n    local list2wordslen\n    local list1wordslen\n \
    \   local list2wordslen\n    local list1wordslen\n    local list2wordslen\n  \
    \  local list1wordslen\n    local list2wordslen\n    local list1wordslen\n   \
    \ local list2wordslen\n    local list1wordslen\n    local list2wordslen\n    local\
    \ list1wordslen\n    local list2wordslen\n    local list1wordslen\n    local list2wordslen\n\
    \    local list1wordslen\n    local list2wordslen\n    local list1wordslen\n \
    \   local list2wordslen\n    local list1wordslen\n    local list2wordslen\n  \
    \  local list1wordslen\n    local list2wordslen\n    local list1wordslen\n   \
    \ local list2wordslen\n    local list1wordslen\n    local list2wordslen\n    local\
    \ list1wordslen\n    local list2wordslen\n    local list1wordslen\n    local list2wordslen\n\
    \    local list1wordslen\n    local list2wordslen\n    local list1wordslen\n \
    \   local list2wordslen\n    local list1wordslen\n    local list2wordslen\n  \
    \  local list1wordslen\n    local list2wordslen\n    local list1wordslen\n   \
    \ local list2wordslen\n    local list1wordslen\n    local list2wordslen\n    local\
    \ list1wordslen\n    local list2wordslen\n    local list1wordslen\n    local list2wordslen\n\
    \    local list1wordslen\n    local list2wordslen\n    local list\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=(\"${!1}\")\n    local -n arr2=(\"${!2}\")\n    local -a sorted\n\
    \    local -a unique\n\n    sorted=( \"${arr1[@]}\" )\n    unique=()\n    while\
    \ [ \"${#sorted[@]}\" -gt 0 ]; do\n        local elem=\"${sorted[0]}\"\n     \
    \   sorted=( \"${sorted[@]:1}\" )\n        local -n index=( \"${!sorted[@]}\"\
    \ )\n        if [ \"${arr2[$index]}\" != \"$elem\" ]; then\n            unique+=(\
    \ \"$elem\" )\n        fi\n    done\n    echo \"${unique[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjkyhiaba.sh: line 11: 1 4 3 34 653 2 5: invalid variable name

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local len1\n    local len2\n \
    \   local maxlen\n    local maxlen1\n    local maxlen2\n    local maxlendiff\n\
    \    local maxlendiff1\n    local maxlendiff2\n    local maxlendiffdiff\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local maxlendiffdiff3\n    local\
    \ maxlendiffdiff4\n    local maxlendiffdiff5\n    local maxlendiffdiff6\n    local\
    \ maxlendiffdiff7\n    local maxlendiffdiff8\n    local maxlendiffdiff9\n    local\
    \ maxlendiffdiff10\n    local maxlendiffdiff11\n    local maxlendiffdiff12\n \
    \   local maxlendiffdiff13\n    local maxlendiffdiff14\n    local maxlendiffdiff15\n\
    \    local maxlendiffdiff16\n    local maxlendiffdiff17\n    local maxlendiffdiff18\n\
    \    local maxlendiffdiff19\n    local maxlendiffdiff20\n    local maxlendiffdiff21\n\
    \    local maxlendiffdiff22\n    local maxlendiffdiff23\n    local maxlendiffdiff24\n\
    \    local maxlendiffdiff25\n    local maxlendiffdiff26\n    local maxlendiffdiff27\n\
    \    local maxlendiffdiff28\n    local maxlendiffdiff29\n    local maxlendiffdiff30\n\
    \    local maxlendiffdiff31\n    local maxlendiffdiff32\n    local maxlendiffdiff33\n\
    \    local maxlendiffdiff34\n    local maxlendiffdiff35\n    local maxlendiffdiff36\n\
    \    local maxlendiffdiff37\n    local maxlendiffdiff38\n    local maxlendiffdiff39\n\
    \    local maxlendiffdiff40\n    local maxlendiffdiff41\n    local maxlendiffdiff42\n\
    \    local maxlendiffdiff43\n    local maxlendiffdiff44\n    local maxlendiffdiff45\n\
    \    local maxlendiffdiff46\n    local maxlendiffdiff47\n    local maxlendiffdiff48\n\
    \    local maxlendiffdiff49\n    local maxlendiffdiff50\n    local maxlendiffdiff51\n\
    \    local maxlendiffdiff52\n    local maxlendiffdiff53\n    local maxlendiffdiff54\n\
    \    local maxlendiffdiff55\n    local maxlendiffdiff\n}\n\ncandidate() {\n  \
    \  common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    a=$1\n    b=$2\n    local -a c\n    for (( i = 0;\
    \ i < ${#a}; i++ )); do\n        for (( j = 0; i < ${#b}; j++ )); do\n       \
    \     if [[ ${a[$i]} == ${b[$j]} ]]; then\n                c=(\"${c[@]}\" \"$a$i\"\
    \ \"${b[$j]}\")\n            fi\n        done\n    done\n    for (( k = 0; k <\
    \ ${#c}; k++ )); do\n        l=${c[$k]}\n        m=${c[$((k+1))]}\n        if\
    \ [[ ${l} != ${m} ]]; then\n            echo \"${c[@]}\"\n        fi\n    done\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=56 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=53 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m\n    local list1 list2\n    list1=$1\n    list2=$2\n    local\
    \ list1_sorted\n    local list2_sorted\n    list1_sorted=$(echo $list1 | tr \"\
    \ \" \"\\n\")\n    list2_sorted=$(echo $list2 | tr \" \" \"\\n\")\n    i=0;\n\
    \    j=0;\n    k=0;\n    l=0;\n    m=0;\n    while [ $i -lt ${#list1_sorted} ];\
    \ do\n        if [ $list1_sorted[$i] -eq $list2_sorted[$j] ]; then\n         \
    \   (( ++m ))\n        elif [ $list1_sorted[$i] -gt $list2_sorted[$j] ]; then\n\
    \            (( ++k ))\n        elif [ $list1_sorted[$i] -lt $list2_sorted[$j]\
    \ ]; then\n            (( ++l ))\n        fi\n        (( ++i ))\n        (( ++j\
    \ ))\n    done\n    echo $list1_sorted[$l]\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 25: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 27: [: too many arguments

    /tmp/tmppi13j9nv.sh: line 29: [: too many arguments

    /tmp/tmppi13j9nv.sh:'
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v\n    local list1 list2\n    list1=$1\n \
    \   list2=$2\n    local tmp\n    local list\n    list=$(echo $list1 | tr \" \"\
    \ \"\\n\")\n    for ((i=0; i<${#list}; i++)); do\n        tmp=$(echo $list2 |\
    \ tr \" \" \"\\n\")\n        for ((j=0; j<${#tmp}; j++)); do\n            k=$(echo\
    \ $tmp | cut -d \" \" -f $j)\n            if [[ $list1 == *\"$k\"* ]]; then\n\
    \                list=\"$list$k\"\n            fi\n        done\n    done\n  \
    \  echo $list\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=59 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=51 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=\"$(sort -u \"$(echo \"$1\" | sed -e 's/\
    \ /\" \"/g')\" |\n        sort -u \"$(echo \"$2\" | sed -e 's/ /\" \"/g')\")\"\
    \n    echo \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1" "4" "3" "34" "653" "2" "5'': No such file or directory

    sort: cannot read: ''5" "7" "1" "5" "9" "653" "121'': No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=$(awk 'BEGIN{\n        split($1,a,\" \"\
    );\n        split($2,b,\" \");\n        for(i in a){\n            for(j in b){\n\
    \                if(a[i]==b[j]){\n                    common_list[i]=common_list[i]\"\
    \\\"\"b[j]\"\\\"\"\n                }\n            }\n        }\n    }\n    END{\n\
    \        for(i in common_list){\n            print common_list[i]\n        }\n\
    \    }' $1 $2)\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:4: fatal: cannot open file `34'' for reading (No such file
    or directory)

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i j\n    common_list=$( sort -u $( printf \"\
    %s\\n\" \"$@\" | sort -u ) )\n    for (( i = 0; i < ${#common_list}; i++ )); do\n\
    \        for (( j = ( i + 1 ); j < ${#common_list}; j++ )); do\n            [[\
    \ \"${common_list[i]}\" == \"${common_list[j]}\" ]] && \\\n                common_list=\"\
    $common_list${common_list[i]} ${common_list[j]}\"\n        done\n    done\n  \
    \  echo \"${common_list}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 34: No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local maxlen1\n    local maxlen2\n    local maxlendiff\n    local maxlendiff1\n\
    \    local maxlendiff2\n    local maxlendiff3\n    local maxlendiff4\n    local\
    \ maxlendiff5\n    local maxlendiff6\n    local maxlendiff7\n    local maxlendiff8\n\
    \    local maxlendiff9\n    local maxlendiff10\n    local maxlendiff11\n    local\
    \ maxlendiff12\n    local maxlendiff13\n    local maxlendiff14\n    local maxlendiff15\n\
    \    local maxlendiff16\n    local maxlendiff17\n    local maxlendiff18\n    local\
    \ maxlendiff19\n    local maxlendiff20\n    local maxlendiff21\n    local maxlendiff22\n\
    \    local maxlendiff23\n    local maxlendiff24\n    local maxlendiff25\n    local\
    \ maxlendiff26\n    local maxlendiff27\n    local maxlendiff28\n    local maxlendiff29\n\
    \    local maxlendiff30\n    local maxlendiff31\n    local maxlendiff32\n    local\
    \ maxlendiff33\n    local maxlendiff34\n    local maxlendiff35\n    local maxlendiff36\n\
    \    local maxlendiff37\n    local maxlendiff38\n    local maxlendiff39\n    local\
    \ maxlendiff40\n    local maxlendiff41\n    local maxlendiff42\n    local maxlendiff43\n\
    \    local maxlendiff44\n    local maxlendiff45\n    local maxlendiff46\n    local\
    \ maxlendiff47\n    local maxlendiff48\n    local maxlendiff49\n    local maxlendiff50\n\
    \    local maxlendiff51\n    local maxlendiff52\n    local maxlendiff53\n    local\
    \ maxlendiff54\n    local maxlendiff55\n    local maxlendiff56\n    local maxlendiff57\n\
    \    local maxlendiff58\n    local maxlendiff59\n    local maxlendiff60\n    local\
    \ maxlendiff61\n    local maxlendiff62\n    local maxlendiff63\n    local maxlendiff64\n\
    \    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local i i2 j\n  local list1=($list1)\n\
    \  local list2=($list2)\n  local list3=($(comm -2 -3 <(sort -u <<<\"$list1\")\
    \ <(sort -u <<<\"$list2\")))\n  local list4=($(comm -2 -3 <(sort -u <<<\"$list2\"\
    ) <(sort -u <<<\"$list1\")))\n  local list5=($(comm -2 -3 <(sort -u <<<\"$list1\"\
    ) <(sort -u <<<\"$list2\")))\n  local list6=($(comm -2 -3 <(sort -u <<<\"$list2\"\
    ) <(sort -u <<<\"$list1\")))\n  local list7=($(comm -2 -3 <(sort -u <<<\"$list1\"\
    ) <(sort -u <<<\"$list2\")))\n  local list8=($(comm -2 -3 <(sort -u <<<\"$list2\"\
    ) <(sort -u <<<\"$list1\")))\n  local list9=($(comm -2 -3 <(sort -u <<<\"$list1\"\
    ) <(sort -u <<<\"$list2\")))\n  local list10=($(comm -2 -3 <(sort -u <<<\"$list2\"\
    ) <(sort -u <<<\"$list1\")))\n  local list11=($(comm -2 -3 <(sort -u <<<\"$list1\"\
    ) <(sort -u <<<\"$list2\")))\n  local list12=($(comm -2 -3 <(sort -u <<<\"$list2\"\
    ) <(sort -u <<<\"$list1\")))\n  local list13=($(comm -2 -3 <(sort -u <<<\"$list1\"\
    ) <(sort -u <<<\"$list2\")))\n  local list14=($(comm -2 -3 <(sort -u <<<\"$list2\"\
    ) <(sort -u <<<\"$list1\")))\n  local list15=($(comm -2 -3 <(sort -u <<<\"$list1\"\
    ) <(sort -u <<<\"$list2\")))\n  local list16=($(comm -2 -3 <(sort -u <<\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaifppn89.sh: line 29: unexpected EOF while looking for matching
    `)''

    /tmp/tmpaifppn89.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_elements\
    \ list_2_elements common_elements\n    list_1_elements=$(echo $list_1 | tr \"\
    \ \" \"\\n\")\n    list_2_elements=$(echo $list_2 | tr \" \" \"\\n\")\n    common_elements=$(comm\
    \ -3 <(sort <<<\"$list_1_elements\") <(sort <<<\"$list_2_elements\"))\n    echo\
    \ \"$common_elements\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local len\n    local tmp\n\
    \    local x\n    local y\n    local z\n    local len\n    local tmp\n    local\
    \ x\n    local y\n    local z\n    local len\n    local tmp\n    local x\n   \
    \ local y\n    local z\n    local len\n    local tmp\n    local x\n    local y\n\
    \    local z\n    local len\n    local tmp\n    local x\n    local y\n    local\
    \ z\n    local len\n    local tmp\n    local x\n    local y\n    local z\n   \
    \ local len\n    local tmp\n    local x\n    local y\n    local z\n    local len\n\
    \    local tmp\n    local x\n    local y\n    local z\n    local len\n    local\
    \ tmp\n    local x\n    local y\n    local z\n    local len\n    local tmp\n \
    \   local x\n    local y\n    local z\n    local len\n    local tmp\n    local\
    \ x\n    local y\n    local z\n    local len\n    local tmp\n    local x\n   \
    \ local y\n    local z\n    local len\n    local tmp\n    local x\n    local y\n\
    \    local z\n    local len\n    local tmp\n    local x\n    local y\n    local\
    \ z\n    local len\n    local tmp\n    local x\n    local y\n    local z\n   \
    \ local len\n    local tmp\n    local x\n    local y\n    local z\n    local len\n\
    \    local tmp\n    local x\n    local y\n    local z\n    local len\n    local\
    \ tmp\n    local x\n    local y\n    local z\n    local len\n    local tmp\n \
    \   local x\n    local y\n    local z\n    local len\n    local tmp\n    local\
    \ x\n    local y\n    local z\n    local len\n    local tmp\n    local x\n   \
    \ local y\n    local z\n    local len\n    local tmp\n    local x\n    local y\n\
    \    local z\n    local len\n    local tmp\n    local x\n\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local result\n    local tmp\n\n    len1=\"${#list1[@]}\"\n    len2=\"${#list2[@]}\"\
    \n    len=\"${len1}\"\n    if [ \"${len}\" -eq 0 ]; then\n        return 0\n \
    \   elif [ \"${len}\" -eq 1 ]; then\n        common=\"${list1[@]}\"\n    elif\
    \ [ \"${len}\" -gt 1 ]; then\n        common=()\n        for ((i=1; i<len; i++));\
    \ do\n            common+=(\"${list1[$i]}\")\n        done\n    fi\n\n    for\
    \ ((j=0; j<len2; j++)); do\n        k=\"${list2[j]}\"\n        for ((i=0; i<len;\
    \ i++)); do\n            if [ \"${list1[$i]}\" == \"$k\" ]; then\n           \
    \     tmp=\"${list1[$i]}\"\n                list1[$i]=\"${list2[j]}\"\n      \
    \          list2[j]=\"$tmp\"\n            fi\n        done\n    done\n\n    for\
    \ ((i=0; i<len; i++)); do\n        result+=(\"${list1[$i]}\")\n    done\n\n  \
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m\n    local list1=\"$1\"\n    local list2=\"$2\"\n    local\
    \ list3\n    local list4\n    local list5\n    local list6\n    local list7\n\
    \    local list8\n    local list9\n    local list10\n    local list11\n    local\
    \ list12\n    local list13\n    local list14\n    local list15\n    local list16\n\
    \    local list17\n    local list18\n    local list19\n    local list20\n    local\
    \ list21\n    local list22\n    local list23\n    local list24\n    local list25\n\
    \    local list26\n    local list27\n    local list28\n    local list29\n    local\
    \ list30\n    local list31\n    local list32\n    local list33\n    local list34\n\
    \    local list35\n    local list36\n    local list37\n    local list38\n    local\
    \ list39\n    local list40\n    local list41\n    local list42\n    local list43\n\
    \    local list44\n    local list45\n    local list46\n    local list47\n    local\
    \ list48\n    local list49\n    local list50\n    local list51\n    local list52\n\
    \    local list53\n    local list54\n    local list55\n    local list56\n    local\
    \ list57\n    local list58\n    local list59\n    local list60\n    local list61\n\
    \    local list62\n    local list63\n    local list64\n    local list65\n    local\
    \ list66\n    local list67\n    local list68\n    local list69\n    local list70\n\
    \    local list71\n    local list72\n    local list73\n    local list74\n    local\
    \ list75\n    local list76\n    local list77\n    local list78\n    local list79\n\
    \    local list80\n    local list81\n    local list82\n    local list83\n    local\
    \ list84\n    local list85\n    local list86\n    local list87\n    local list88\n\
    \    local list89\n    local list90\n    local list91\n    local list92\n    local\
    \ list93\n    local list94\n    local list95\n    local list96\n    local list97\n\
    \    local list98\n    local list99\n    local list100\n\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    list1=$1\n    list2=$2\n\
    \    common=()\n    for element in $list1; do\n        common+=(\"$element\")\n\
    \    done\n    for element in $list2; do\n        common+=(\"$element\")\n   \
    \ done\n    sort -u \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 34: No such file or directory

    '
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    list1=$1\n    list2=$2\n    local i j k common\n  \
    \  common=()\n    for ((i=0; i<${#list1}; i++)); do\n        for ((j=0; j<${#list2};\
    \ j++)); do\n            if [[ ${list1:$i:1} = ${list2:$j:1} ]]; then\n      \
    \          common+=(\"${list1:$i:1}\")\n            fi\n        done\n    done\n\
    \    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common_list\n\
    \    common_list=$(awk '{for(i=1;i<=NF;i++) if($i in list_1 && $i in list_2) print\
    \ $i}' <<< \"$list_1 $list_2\")\n    echo \"$common_list\"\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list1\n    local list2\n    local i\n    local\
    \ j\n    list1=$1\n    list2=$2\n    common_list=$( echo $list1 | tr \" \" \"\\\
    n\" | sort -u )\n    for (( i = 0; i < ${#list1}; i++ )); do\n        for (( j\
    \ = 0; i < ${#list2}; j++ )); do\n            if [[ ${list1:$i:1} = ${list2:$j:1}\
    \ ]]; then\n                common_list=\"$common_list ${list1:$i:1}\"\n     \
    \       fi\n        done\n    done\n    echo \"$common_list\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=52 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=43 encoding='utf-8'>
  timestamp: 1660048794
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist\
    \ ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist\
    \ ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist\
    \ ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist\
    \ ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist\
    \ ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist\
    \ ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist\
    \ ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist\
    \ ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist\
    \ ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist jlist ilist\
    \ jlist ilist jlist ilist jlist ilist jlist ilist jlist i\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local len\n    local tmp\n \
    \   local sorted\n    local unique\n    local result\n    local item\n    local\
    \ item2\n    local item3\n    local item4\n    local item5\n    local item6\n\
    \    local item7\n    local item8\n    local item9\n    local item10\n    local\
    \ item11\n    local item12\n    local item13\n    local item14\n    local item15\n\
    \    local item16\n    local item17\n    local item18\n    local item19\n    local\
    \ item20\n    local item21\n    local item22\n    local item23\n    local item24\n\
    \    local item25\n    local item26\n    local item27\n    local item28\n    local\
    \ item29\n    local item30\n    local item31\n    local item32\n    local item33\n\
    \    local item34\n    local item35\n    local item36\n    local item37\n    local\
    \ item38\n    local item39\n    local item40\n    local item41\n    local item42\n\
    \    local item43\n    local item44\n    local item45\n    local item46\n    local\
    \ item47\n    local item48\n    local item49\n    local item50\n    local item51\n\
    \    local item52\n    local item53\n    local item54\n    local item55\n    local\
    \ item56\n    local item57\n    local item58\n    local item59\n    local item60\n\
    \    local item61\n    local item62\n    local item63\n    local item64\n    local\
    \ item65\n    local item66\n    local item67\n    local item68\n    local item69\n\
    \    local item70\n    local item71\n    local item72\n    local item73\n    local\
    \ item74\n    local item75\n    local item76\n    local item77\n    local item78\n\
    \    local item79\n    local item80\n    local item81\n    local item82\n    local\
    \ item83\n    local item84\n    local item85\n    local item86\n    local item87\n\
    \    local item88\n    local item89\n    local item90\n    local item91\n    local\
    \ \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlendiff\n    local minlendiff\n    local maxlendiff1\n\
    \    local maxlendiff2\n    local minlendiff1\n    local minlendiff2\n    local\
    \ maxlendiffdiff\n    local minlendiffdiff\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local common\n    local list1\n    local list2\n    local list1len\n\
    \    local list2len\n    list1=$1\n    list2=$2\n    list1len=$(expr ${#list1}\
    \ + 1)\n    list2len=$(expr ${#list2} + 1)\n    common=()\n    for (( i = 1; i\
    \ <= ${list1len}; i++ )); do\n        for (( j = 1; j <= ${list2len}; j++ ));\
    \ do\n            if [[ ${list1:$i:1} = ${list2:$j:1} ]]; then\n             \
    \   common+=(\"${list1:$i:1}\")\n            fi\n        done\n    done\n    echo\
    \ ${common[@]}\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local len1\n    local\
    \ len2\n    local sorted1\n    local sorted2\n    local sorted\n    local result\n\
    \    local word\n    local word1\n    local word2\n    local word3\n    local\
    \ word4\n    local word5\n    local word6\n    local word7\n    local word8\n\
    \    local word9\n    local word10\n    local word11\n    local word12\n    local\
    \ word13\n    local word14\n    local word15\n    local word16\n    local word17\n\
    \    local word18\n    local word19\n    local word20\n    local word21\n    local\
    \ word22\n    local word23\n    local word24\n    local word25\n    local word26\n\
    \    local word27\n    local word28\n    local word29\n    local word30\n    local\
    \ word31\n    local word32\n    local word33\n    local word34\n    local word35\n\
    \    local word36\n    local word37\n    local word38\n    local word39\n    local\
    \ word40\n    local word41\n    local word42\n    local word43\n    local word44\n\
    \    local word45\n    local word46\n    local word47\n    local word48\n    local\
    \ word49\n    local word50\n    local word51\n    local word52\n    local word53\n\
    \    local word54\n    local word55\n    local word56\n    local word57\n    local\
    \ word58\n    local word59\n    local word60\n    local word61\n    local word62\n\
    \    local word63\n    local word64\n    local word65\n    local word66\n    local\
    \ word67\n    local word68\n    local word69\n    local word70\n    local word71\n\
    \    local word72\n    local word73\n    local word74\n    local word75\n    local\
    \ word76\n    local word77\n    local word78\n    local word79\n    local word80\n\
    \    local word81\n    local word82\n    local word83\n    local word84\n    local\
    \ word85\n    local word86\n    local word87\n    local word88\n    local word89\n\
    \    local word90\n    local word91\n    local word92\n    local word93\n\n}\n\
    \ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local minlen\n    local maxlen\n\
    \    local min\n    local max\n    local minlen2\n    local maxlen2\n    local\
    \ min2\n    local max2\n    local minlen1\n    local maxlen1\n    local min1\n\
    \    local max1\n    local minlen2\n    local maxlen2\n    local min2\n    local\
    \ max2\n    local minlen1\n    local maxlen1\n    local min1\n    local max1\n\
    \    local minlen2\n    local maxlen2\n    local min2\n    local max2\n    local\
    \ minlen1\n    local maxlen1\n    local min1\n    local max1\n    local minlen2\n\
    \    local maxlen2\n    local min2\n    local max2\n    local minlen1\n    local\
    \ maxlen1\n    local min1\n    local max1\n    local minlen2\n    local maxlen2\n\
    \    local min2\n    local max2\n    local minlen1\n    local maxlen1\n    local\
    \ min1\n    local max1\n    local minlen2\n    local maxlen2\n    local min2\n\
    \    local max2\n    local minlen1\n    local maxlen1\n    local min1\n    local\
    \ max1\n    local minlen2\n    local maxlen2\n    local min2\n    local max2\n\
    \    local minlen1\n    local maxlen1\n    local min1\n    local max1\n    local\
    \ minlen2\n    local maxlen2\n    local min2\n    local max2\n    local minlen1\n\
    \    local maxlen1\n    local min1\n    local max1\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ min2\n    local max2\n    local minlen1\n    local maxlen1\n    local min1\n\
    \    local max1\n    local minlen2\n    local maxlen2\n    local min2\n    \n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k\n    local list1=($1)\n    local list2=($2)\n    local common=()\n\
    \    for (( i=0; i<${#list1[@]}; i++ )); do\n        for (( j=0; j<${#list2[@]};\
    \ j++ )); do\n            if [[ ${list1[i]} == ${list2[j]} ]]; then\n        \
    \        common+=(\"${list1[i]}\")\n            fi\n        done\n    done\n \
    \   echo ${common[@]}\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common_list common_list_2\
    \ common_list_1\n    common_list=\"\"\n    common_list_2=\"\"\n    common_list_1=\"\
    \"\n    while read -r line; do\n        common_list_1=\"$common_list_1 \\\"$line\\\
    \"\"\n    done < <(sort -u <<< \"$list_1\")\n    while read -r line; do\n    \
    \    common_list_2=\"$common_list_2 \\\"$line\\\"\"\n    done < <(sort -u <<<\
    \ \"$list_2\")\n    comm -2 -3 <(sort -u <<< \"$common_list_1\") <(sort -u <<<\
    \ \"$common_list_2\")\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048789

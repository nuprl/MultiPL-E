language: sh
name: HumanEval_2_truncate_number
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \n  while [ \"$number\" -gt 0 ]; do\n    integer=$(( $integer + 1 ))\n    remainder=$((\
    \ $number % 10 ))\n    number=$(( $number / 10 ))\n    decimals=$(( $decimals\
    \ + 1 ))\n  done\n\n  echo \"$decimals\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx36k6_01.sh: line 16: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local trunc_number\n    local trunc_number_string\n    local trunc_number_string2\n\
    \    local trunc_number_string3\n    local trunc_number_string4\n    local trunc_number_string5\n\
    \    local trunc_number_string6\n    local trunc_number_string7\n    local trunc_number_string8\n\
    \    local trunc_number_string9\n    local trunc_number_string10\n    local trunc_number_string11\n\
    \    local trunc_number_string12\n    local trunc_number_string13\n    local trunc_number_string14\n\
    \    local trunc_number_string15\n    local trunc_number_string16\n    local trunc_number_string17\n\
    \    local trunc_number_string18\n    local trunc_number_string19\n    local trunc_number_string20\n\
    \    local trunc_number_string21\n    local trunc_number_string22\n    local trunc_number_string23\n\
    \    local trunc_number_string24\n    local trunc_number_string25\n    local trunc_number_string26\n\
    \    local trunc_number_string27\n    local trunc_number_string28\n    local trunc_number_string29\n\
    \    local trunc_number_string30\n    local trunc_number_string31\n    local trunc_number_string32\n\
    \    local trunc_number_string33\n    local trunc_number_string34\n    local trunc_number_string35\n\
    \    local trunc_number_string36\n    local trunc_number_string37\n    local trunc_number_string38\n\
    \    local trunc_number_string39\n    local trunc_number_string40\n    local trunc_number_string41\n\
    \    local trunc_number_string42\n    local trunc_number_string43\n    local trunc_number_string44\n\
    \    local trunc_number_string45\n    local trunc_number_string46\n    local trunc_number_string47\n\
    \    local trunc_number_string48\n    local trunc_number_string49\n    local trunc_number_string50\n\
    \    local trunc_number_string51\n    local trunc_number_string52\n    local trunc_number_string53\n\
    \    local trunc_number_string54\n    local trunc_number_string55\n    local trunc_number_string56\n\
    \    local trunc_number_string57\n    local trunc_number_string58\n    local trunc_number_string59\n\
    \    local trunc_number_string60\n    local trunc_number_string61\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number=\"\"\n  local trunc_number_string=\"\"\n  local trunc_number_string2=\"\
    \"\n  local trunc_number_string3=\"\"\n  local trunc_number_string4=\"\"\n  local\
    \ trunc_number_string5=\"\"\n  local trunc_number_string6=\"\"\n  local trunc_number_string7=\"\
    \"\n  local trunc_number_string8=\"\"\n  local trunc_number_string9=\"\"\n  local\
    \ trunc_number_string10=\"\"\n  local trunc_number_string11=\"\"\n  local trunc_number_string12=\"\
    \"\n  local trunc_number_string13=\"\"\n  local trunc_number_string14=\"\"\n \
    \ local trunc_number_string15=\"\"\n  local trunc_number_string16=\"\"\n  local\
    \ trunc_number_string17=\"\"\n  local trunc_number_string18=\"\"\n  local trunc_number_string19=\"\
    \"\n  local trunc_number_string20=\"\"\n  local trunc_number_string21=\"\"\n \
    \ local trunc_number_string22=\"\"\n  local trunc_number_string23=\"\"\n  local\
    \ trunc_number_string24=\"\"\n  local trunc_number_string25=\"\"\n  local trunc_number_string26=\"\
    \"\n  local trunc_number_string27=\"\"\n  local trunc_number_string28=\"\"\n \
    \ local trunc_number_string29=\"\"\n  local trunc_number_string30=\"\"\n  local\
    \ trunc_number_string31=\"\"\n  local trunc_number_string32=\"\"\n  local trunc_number_string33=\"\
    \"\n  local trunc_number_string34=\"\"\n  local trunc_number_string35=\"\"\n \
    \ local trunc_number_string36=\"\"\n  local trunc_number_string37=\"\"\n  local\
    \ trunc_number_string38=\"\"\n  local trunc_number_string39=\"\"\n  local trunc_number_string40=\"\
    \"\n  local trunc_number_string41=\"\"\n  local trunc_number_string42=\"\"\n \
    \ local trunc_number_string43=\"\"\n  local trunc_number_string44=\"\"\n  local\
    \ trunc_number_string45=\"\"\n  local trunc_number_string46=\"\"\n  local trunc_number_string47=\"\
    \"\n  local trunc_number_string48=\"\"\n  local trunc_number_string49=\"\"\n \
    \ local trunc_number_string50=\"\"\n  local trunc_number_string51=\"\"\n  local\
    \ trunc_number_string52=\"\"\n  local trunc_number_string53=\"\"\n  local trunc_number_string54=\"\
    \"\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_index=0\n    local decimals_string_index2=0\n    local\
    \ decimals_string_index3=0\n    local decimals_string_index4=0\n    local decimals_string_index5=0\n\
    \    local decimals_string_index6=0\n    local decimals_string_index7=0\n    local\
    \ decimals_string_index8=0\n    local decimals_string_index9=0\n    local decimals_string_index10=0\n\
    \    local decimals_string_index11=0\n    local decimals_string_index12=0\n  \
    \  local decimals_string_index13=0\n    local decimals_string_index14=0\n    local\
    \ decimals_string_index15=0\n    local decimals_string_index16=0\n    local decimals_string_index17=0\n\
    \    local decimals_string_index18=0\n    local decimals_string_index19=0\n  \
    \  local decimals_string_index20=0\n    local decimals_string_index21=0\n    local\
    \ decimals_string_index22=0\n    local decimals_string_index23=0\n    local decimals_string_index24=0\n\
    \    local decimals_string_index25=0\n    local decimals_string_index26=0\n  \
    \  local decimals_string_index27=0\n    local decimals_string_index28=0\n    local\
    \ decimals_string_index29=0\n    local decimals_string_index30=0\n    local decimals_string_index31=0\n\
    \    local decimals_string_index32=0\n    local decimals_string_index33=0\n  \
    \  local decimals_string_index34=0\n    local decimals_string_index35=0\n    local\
    \ decimals_string_index36=0\n    local decimals_string_index37=0\n    local decimals_string_index38=0\n\
    \    local decimals_string_index39=0\n    local decimals_string_index40=0\n  \
    \  local decimals_string_index41=0\n    local decimals_string_index42=0\n    local\
    \ decimals_string_index43=0\n    local decimals_string_index44=0\n    local decimals_string_index45=0\n\
    \    local decimals_string_index46=0\n    local decimals_string_index47=0\n  \
    \  local decimals_string_index48=0\n    local decimals_string_index49=0\n    local\
    \ decimals_string_index50=0\n    local decimals_string_index51=0\n    local decimals_string_index52=0\n\
    \    local decimals_string_index53=0\n    local decimals_string_index54=0\n  \
    \  local decimals_string_index55=0\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal_part\n  local truncate_part\n\
    \  local truncate_part_str\n  local truncate_part_int\n  local truncate_part_float\n\
    \  local truncate_part_float_string\n  local truncate_part_float_string_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas\n  local truncate_part_float_string_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    \  local truncate_part_float_string_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas_with_commas\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_in_int=0\n\
    \  local trunc_number_in_float=0\n  local trunc_number_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals_string\n\
    \    local decimal_string\n    local decimal_string_length\n    local decimal_string_length_string\n\
    \    local decimal_string_length_string_length\n    local decimal_string_length_string_length_string\n\
    \    local decimal_string_length_string_length_string_length\n    local decimal_string_length_string_length_string_length_string\n\
    \    local decimal_string_length_string_length_string_length_string_length\n \
    \   local decimal_string_length_string_length_string_length_string_length_string\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimal_string_length_string_length_string_length_string_length\n}\n\
    \ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n\
    \    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=${2:-0}\n  local integer=${number%.*}\n\
    \  local decimal=${number#*.}\n  if [[ $integer -gt $number ]]; then\n    decimals=${decimals-1}\n\
    \  fi\n  echo $decimal\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpajbidi52.sh: line 15: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals_string\n\
    \  local decimal_string\n  local decimal_string_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length\n\
    \  local decimal_string_length\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_number_index=0\n    local trunc_decimals_index=0\n\
    \    local trunc_number_string=\"\"\n    local trunc_decimals_string=\"\"\n  \
    \  local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimal\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal=0\n\
    \  local remainder=0\n  local decimals_str=\"\"\n  local integer_str=\"\"\n  local\
    \ remainder_str=\"\"\n  local integer_str_len=0\n  local remainder_str_len=0\n\
    \  local decimal_str=\"\"\n  local decimal_str_len=0\n  local remainder_str_len=0\n\
    \  local integer_str_len=0\n  local remainder_str_len=0\n  local decimal_str_len=0\n\
    \  local remainder_str_len=0\n  local integer_str_len=0\n  local remainder_str_len=0\n\
    \  local decimal_str_len=0\n  local remainder_str_len=0\n  local integer_str_len=0\n\
    \  local remainder_str_len=0\n  local decimal_str_len=0\n  local remainder_str_len=0\n\
    \  local integer_str_len=0\n  local remainder_str_len=0\n  local decimal_str_len=0\n\
    \  local remainder_str_len=0\n  local integer_str_len=0\n  local remainder_str_len=0\n\
    \  local decimal_str_len=0\n  local remainder_str_len=0\n  local integer_str_len=0\n\
    \  local remainder_str_len=0\n  local decimal_str_len=0\n  local remainder_str_len=0\n\
    \  local integer_str_len=0\n  local remainder_str_len=0\n  local decimal_str_len=0\n\
    \  local remainder_str_len=0\n  local integer_str_len=0\n  local remainder_str_len=0\n\
    \  local decimal_str_len=0\n  local remainder_str_len=0\n  local integer_str_len=0\n\
    \  local remainder_str_len=0\n  local decimal_str_len=0\n  local remainder_str_len=0\n\
    \  local integer_str_len=0\n  local remainder_str_len=0\n  local decimal_str_len=0\n\
    \  local remainder_str_len=0\n  local integer_str_len=0\n  local remainder_str_len=0\n\
    \  local decimal_str_len=0\n  local remainder_str_len=0\n  local integer_str_len=0\n\
    \  local remainder_str_len=0\n  local decimal_str_len=0\n  local remainder_str_len=0\n\
    \  local integer_str_len=0\n  local remainder_str_len=0\n  local decimal_str_len=0\n\
    \  local remainder_str_len=0\n  local integer_str_len=0\n  local remainder_str_len=0\n\
    \  local decimal_str_len=0\n  local remainder_str_len=0\n  local integer_str_len=0\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remain\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_index=0\n    local decimals_string_index2=0\n    local\
    \ decimals_string_index3=0\n    local decimals_string_index4=0\n    local decimals_string_index5=0\n\
    \    local decimals_string_index6=0\n    local decimals_string_index7=0\n    local\
    \ decimals_string_index8=0\n    local decimals_string_index9=0\n    local decimals_string_index10=0\n\
    \    local decimals_string_index11=0\n    local decimals_string_index12=0\n  \
    \  local decimals_string_index13=0\n    local decimals_string_index14=0\n    local\
    \ decimals_string_index15=0\n    local decimals_string_index16=0\n    local decimals_string_index17=0\n\
    \    local decimals_string_index18=0\n    local decimals_string_index19=0\n  \
    \  local decimals_string_index20=0\n    local decimals_string_index21=0\n    local\
    \ decimals_string_index22=0\n    local decimals_string_index23=0\n    local decimals_string_index24=0\n\
    \    local decimals_string_index25=0\n    local decimals_string_index26=0\n  \
    \  local decimals_string_index27=0\n    local decimals_string_index28=0\n    local\
    \ decimals_string_index29=0\n    local decimals_string_index30=0\n    local decimals_string_index31=0\n\
    \    local decimals_string_index32=0\n    local decimals_string_index33=0\n  \
    \  local decimals_string_index34=0\n    local decimals_string_index35=0\n    local\
    \ decimals_string_index36=0\n    local decimals_string_index37=0\n    local decimals_string_index38=0\n\
    \    local decimals_string_index39=0\n    local decimals_string_index40=0\n  \
    \  local decimals_string_index41=0\n    local decimals_string_index42=0\n    local\
    \ decimals_string_index43=0\n    local decimals_string_index44=0\n    local decimals_string_index45=0\n\
    \    local decimals_string_index46=0\n    local decimals_string_index47=0\n  \
    \  local decimals_string_index48=0\n    local decimals_string_index49=0\n    local\
    \ decimals_string_index50=0\n    local decimals_string_index51=0\n    local decimals_string_index52=0\n\
    \    local decimals_string_index53=0\n    local decimals_string_index54=0\n  \
    \  local decimals_string_index55=0\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_float_in_int=0\n \
    \ local trunc_decimals_in_float_in_int=0\n  local trunc_number_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal=0\n\
    \  local remainder=0\n  local decimals_string=\"\"\n  local integer_string=\"\"\
    \n  local remainder_string=\"\"\n  local integer_string2=\"\"\n  local remainder_string2=\"\
    \"\n  local integer_string3=\"\"\n  local remainder_string3=\"\"\n  local integer_string4=\"\
    \"\n  local remainder_string4=\"\"\n  local integer_string5=\"\"\n  local remainder_string5=\"\
    \"\n  local integer_string6=\"\"\n  local remainder_string6=\"\"\n  local integer_string7=\"\
    \"\n  local remainder_string7=\"\"\n  local integer_string8=\"\"\n  local remainder_string8=\"\
    \"\n  local integer_string9=\"\"\n  local remainder_string9=\"\"\n  local integer_string10=\"\
    \"\n  local remainder_string10=\"\"\n  local integer_string11=\"\"\n  local remainder_string11=\"\
    \"\n  local integer_string12=\"\"\n  local remainder_string12=\"\"\n  local integer_string13=\"\
    \"\n  local remainder_string13=\"\"\n  local integer_string14=\"\"\n  local remainder_string14=\"\
    \"\n  local integer_string15=\"\"\n  local remainder_string15=\"\"\n  local integer_string16=\"\
    \"\n  local remainder_string16=\"\"\n  local integer_string17=\"\"\n  local remainder_string17=\"\
    \"\n  local integer_string18=\"\"\n  local remainder_string18=\"\"\n  local integer_string19=\"\
    \"\n  local remainder_string19=\"\"\n  local integer_string20=\"\"\n  local remainder_string20=\"\
    \"\n  local integer_string21=\"\"\n  local remainder_string21=\"\"\n  local integer_string22=\"\
    \"\n  local remainder_string22=\"\"\n  local integer_string23=\"\"\n  local remainder_string23=\"\
    \"\n  local integer_string24=\"\"\n  local remainder_string24=\"\"\n  local integer_string25=\"\
    \"\n  local remainder_string25=\"\"\n  local integer_string26=\"\"\n  local remainder_string26=\"\
    \"\n  local integer_string27=\"\"\n  local remainder_string27=\"\"\n  local integer_string28=\"\
    \"\n  local remainder_string28=\"\"\n  local integer_string29=\"\"\n  local remainder_string29=\"\
    \"\n  local integer_string30=\"\"\n  local remainder_string30=\"\"\n  local integer_string31=\"\
    \"\n  local remainder_string31=\"\"\n  local integer_string32=\"\"\n  local remainder_string32=\"\
    \"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_in_int=0\n\
    \  local trunc_number_in_float=0\n  local trunc_number_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_length=0\n    local decimals_string_length_string=\"\
    \"\n    local decimals_string_length_string_length=0\n    local decimals_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length=0\n    local\
    \ decimals_string_length_string_length_string_length_string=\"\"\n    local decimals_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local trunc_number\n    local trunc_number_index\n    local trunc_number_index2\n\
    \    local trunc_number_index3\n    local trunc_number_index4\n    local trunc_number_index5\n\
    \    local trunc_number_index6\n    local trunc_number_index7\n    local trunc_number_index8\n\
    \    local trunc_number_index9\n    local trunc_number_index10\n    local trunc_number_index11\n\
    \    local trunc_number_index12\n    local trunc_number_index13\n    local trunc_number_index14\n\
    \    local trunc_number_index15\n    local trunc_number_index16\n    local trunc_number_index17\n\
    \    local trunc_number_index18\n    local trunc_number_index19\n    local trunc_number_index20\n\
    \    local trunc_number_index21\n    local trunc_number_index22\n    local trunc_number_index23\n\
    \    local trunc_number_index24\n    local trunc_number_index25\n    local trunc_number_index26\n\
    \    local trunc_number_index27\n    local trunc_number_index28\n    local trunc_number_index29\n\
    \    local trunc_number_index30\n    local trunc_number_index31\n    local trunc_number_index32\n\
    \    local trunc_number_index33\n    local trunc_number_index34\n    local trunc_number_index35\n\
    \    local trunc_number_index36\n    local trunc_number_index37\n    local trunc_number_index38\n\
    \    local trunc_number_index39\n    local trunc_number_index40\n    local trunc_number_index41\n\
    \    local trunc_number_index42\n    local trunc_number_index43\n    local trunc_number_index44\n\
    \    local trunc_number_index45\n    local trunc_number_index46\n    local trunc_number_index47\n\
    \    local trunc_number_index48\n    local trunc_number_index49\n    local trunc_number_index50\n\
    \    local trunc_number_index51\n    local trunc_number_index52\n    local trunc_number_index53\n\
    \    local trunc_number_index54\n    local trunc_number_index55\n    local trunc_number_index56\n\
    \    local trunc_number_index57\n    local trunc_number_index58\n    local trunc_number_index59\n\
    \    local trunc_number_index60\n    local trunc_number_index61\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimals_string=\"\"\n    local integer_string=\"\"\n\
    \    local remainder_string=\"\"\n    while [[ $number -gt 0 ]]; do\n        decimals=$((\
    \ 10#$number % 10 ))\n        integer=$(( 10#$number / 10 ))\n        remainder=$((\
    \ 10#$number % 10 ))\n        decimals_string=\"$decimals_string$decimals\"\n\
    \        integer_string=\"$integer_string$integer\"\n        remainder_string=\"\
    $remainder_string$remainder\"\n        number=$(( 10#$number / 10 ))\n    done\n\
    \    decimals=$(( 10#$decimals_string % 10 ))\n    integer=$(( 10#$integer_string\
    \ % 10 ))\n    remainder=$(( 10#$remainder_string % 10 ))\n    decimals=$(( 10#$decimals\
    \ + 1 ))\n    integer=$(( 10#$integer + 1 ))\n    remainder=$(( 10#$remainder\
    \ + 1 ))\n    decimals_string=\"$decimals_string$decimals\"\n    integer_string=\"\
    $integer_string$integer\"\n    remainder_string=\"$remainder_string$remainder\"\
    \n    echo \"$decimals_string$integer_string$remainder_string\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpirovclvy.sh: line 18: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_length=0\n  local decimals_string_length_string=\"\"\n  local\
    \ decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimal=0\n    local trunc_numbers=0\n    local trunc_decimals=0\n\
    \    local trunc_numbers_string=\"\"\n    local trunc_decimals_string=\"\"\n \
    \   local trunc_numbers_strings=\"\"\n    local trunc_decimals_strings=\"\"\n\
    \    local trunc_numbers_strings_array=()\n    local trunc_decimals_strings_array=()\n\
    \    local trunc_numbers_strings_array_length=${#trunc_numbers_strings_array[@]}\n\
    \    local trunc_decimals_strings_array_length=${#trunc_decimals_strings_array[@]}\n\
    \    local trunc_numbers_strings_array_length_with_dot=${trunc_numbers_strings_array_length}\n\
    \    local trunc_decimals_strings_array_length_with_dot=${trunc_decimals_strings_array_length}\n\
    \    local trunc_numbers_strings_array_length_with_dot_with_dot=${trunc_numbers_strings_array_length_with_dot}\n\
    \    local trunc_decimals_strings_array_length_with_dot_with_dot=${trunc_decimals_strings_array_length_with_dot}\n\
    \    local trunc_numbers_strings_array_length_with_dot_with_dot_with_dot=${trunc_numbers_strings_array_length_with_dot_with_dot}\n\
    \    local trunc_decimals_strings_array_length_with_dot_with_dot_with_dot=${trunc_decimals_strings_array_length_with_dot_with_dot}\n\
    \    local trunc_numbers_strings_array_length_with_dot_with_dot_with_dot_with_dot=${trunc_numbers_strings_array_length_with_dot_with_dot_with_dot}\n\
    \    local trunc_decimals_strings_array_length_with_dot_with_dot_with_dot_with_dot=${trunc_decimals_strings_array_length_with_dot_with_dot_with_dot}\n\
    \    local trunc_numbers_strings_array_length_with_dot_with_dot_with_dot_with_dot_with_dot=${trunc_numbers_strings_array_length_with_dot_with_dot_with_dot_with_dot}\n\
    \    local trunc_decimals_strings_array_length_with_dot_with_dot_with_dot_with_dot_with_dot=${trunc_decimals_strings_array_length_with_dot_with_dot_with_dot_with_dot}\n\
    \    local trunc_numbers_strings_array_length_with_dot_with_dot_with_dot_with_dot_with_dot_with_dot=${trunc_numbers_strings_array_length_with_dot_with_dot_with_dot_with_dot_with_dot}\n\
    \    local trunc_decimals_strings_array_length_with_\n}\n\ncandidate() {\n   \
    \ truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder\n    local decimal\n    local result\n\n    # Split number into integer\
    \ and decimal part\n    integer=$(echo \"$number\" | awk '{print $1}')\n    remainder=$(echo\
    \ \"$number\" | awk '{print $2}')\n\n    # Decompose the number into decimal part\n\
    \    decimal=$((10#$remainder))\n\n    # If the decimal part is smaller than 1,\
    \ then we add one to it\n    # to make it a positive number\n    if [[ $decimal\
    \ -lt 1 ]]; then\n        decimal=$((10#$decimal+1))\n    fi\n\n    # If the decimal\
    \ part is larger than 1, then we subtract one from it\n    # to make it a negative\
    \ number\n    if [[ $decimal -gt 1 ]]; then\n        decimal=$((10#$decimal-1))\n\
    \    fi\n\n    # If the integer part is larger than the decimal part, then we\
    \ add one\n    # to it to make it a positive number\n    if [[ $integer -gt $decimal\
    \ ]]; then\n        integer=$((10#$integer+1))\n    fi\n\n    # If the integer\
    \ part is smaller than the decimal part, then we subtract one\n    # to it to\
    \ make it a negative number\n    if [[ $integer -lt $decimal ]]; then\n      \
    \  integer=$((10#$integer-1))\n    fi\n\n    # Combine integer and decimal part\n\
    \    result=$((10#$integer+$decimal))\n\n    # Return result\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz4fwfr0b.sh: line 39: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    /tmp/tmpz4fwfr0b.sh: line 45: [[: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    /tmp/tmpz4fwfr0b.sh: line 50: 10#3.5+1: syntax error: invalid arithmetic operator
    (error token is ".5+1")

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_str=\"\"\n  local\
    \ trunc_number=\"\"\n  local trunc_number_str=\"\"\n  local trunc_number_str_full=\"\
    \"\n  local trunc_number_str_full_str=\"\"\n  local trunc_number_str_full_str_last=\"\
    \"\n  local trunc_number_str_full_str_last_str=\"\"\n  local trunc_number_str_full_str_last_str_last=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str=\"\"\n  local trunc_number_str_full_str_last_str_last_str_last=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str=\"\"\n  local\
    \ trunc_number_str_full_str_last_str_last_str_last_str_last=\"\"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number=\"\"\n  local trunc_number_string=\"\"\n  local trunc_number_string2=\"\
    \"\n  local trunc_number_string3=\"\"\n  local trunc_number_string4=\"\"\n  local\
    \ trunc_number_string5=\"\"\n  local trunc_number_string6=\"\"\n  local trunc_number_string7=\"\
    \"\n  local trunc_number_string8=\"\"\n  local trunc_number_string9=\"\"\n  local\
    \ trunc_number_string10=\"\"\n  local trunc_number_string11=\"\"\n  local trunc_number_string12=\"\
    \"\n  local trunc_number_string13=\"\"\n  local trunc_number_string14=\"\"\n \
    \ local trunc_number_string15=\"\"\n  local trunc_number_string16=\"\"\n  local\
    \ trunc_number_string17=\"\"\n  local trunc_number_string18=\"\"\n  local trunc_number_string19=\"\
    \"\n  local trunc_number_string20=\"\"\n  local trunc_number_string21=\"\"\n \
    \ local trunc_number_string22=\"\"\n  local trunc_number_string23=\"\"\n  local\
    \ trunc_number_string24=\"\"\n  local trunc_number_string25=\"\"\n  local trunc_number_string26=\"\
    \"\n  local trunc_number_string27=\"\"\n  local trunc_number_string28=\"\"\n \
    \ local trunc_number_string29=\"\"\n  local trunc_number_string30=\"\"\n  local\
    \ trunc_number_string31=\"\"\n  local trunc_number_string32=\"\"\n  local trunc_number_string33=\"\
    \"\n  local trunc_number_string34=\"\"\n  local trunc_number_string35=\"\"\n \
    \ local trunc_number_string36=\"\"\n  local trunc_number_string37=\"\"\n  local\
    \ trunc_number_string38=\"\"\n  local trunc_number_string39=\"\"\n  local trunc_number_string40=\"\
    \"\n  local trunc_number_string41=\"\"\n  local trunc_number_string42=\"\"\n \
    \ local trunc_number_string43=\"\"\n  local trunc_number_string44=\"\"\n  local\
    \ trunc_number_string45=\"\"\n  local trunc_number_string46=\"\"\n  local trunc_number_string47=\"\
    \"\n  local trunc_number_string48=\"\"\n  local trunc_number_string49=\"\"\n \
    \ local trunc_number_string50=\"\"\n  local trunc_number_string51=\"\"\n  local\
    \ trunc_number_string52=\"\"\n  local trunc_number_string53=\"\"\n  local trunc_number_string54=\"\
    \"\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_number1=0\n    local trunc_number2=0\n    local trunc_number3=0\n\
    \    local trunc_number4=0\n    local trunc_number5=0\n    local trunc_number6=0\n\
    \    local trunc_number7=0\n    local trunc_number8=0\n    local trunc_number9=0\n\
    \    local trunc_number10=0\n    local trunc_number11=0\n    local trunc_number12=0\n\
    \    local trunc_number13=0\n    local trunc_number14=0\n    local trunc_number15=0\n\
    \    local trunc_number16=0\n    local trunc_number17=0\n    local trunc_number18=0\n\
    \    local trunc_number19=0\n    local trunc_number20=0\n    local trunc_number21=0\n\
    \    local trunc_number22=0\n    local trunc_number23=0\n    local trunc_number24=0\n\
    \    local trunc_number25=0\n    local trunc_number26=0\n    local trunc_number27=0\n\
    \    local trunc_number28=0\n    local trunc_number29=0\n    local trunc_number30=0\n\
    \    local trunc_number31=0\n    local trunc_number32=0\n    local trunc_number33=0\n\
    \    local trunc_number34=0\n    local trunc_number35=0\n    local trunc_number36=0\n\
    \    local trunc_number37=0\n    local trunc_number38=0\n    local trunc_number39=0\n\
    \    local trunc_number40=0\n    local trunc_number41=0\n    local trunc_number42=0\n\
    \    local trunc_number43=0\n    local trunc_number44=0\n    local trunc_number45=0\n\
    \    local trunc_number46=0\n    local trunc_number47=0\n    local trunc_number48=0\n\
    \    local trunc_number49=0\n    local trunc_number50=0\n    local trunc_number51=0\n\
    \    local trunc_number52=0\n    local trunc_number53=0\n    local trunc_number54=0\n\
    \    local trunc_number55=0\n    local trunc_number56=0\n    local trunc_number57=0\n\
    \    local trunc_number58=0\n    local trunc_number59=0\n    local trunc_number60=0\n\
    \    local trunc_number61=0\n    local trunc_number\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \n  while [[ $number -gt 0 ]]; do\n    integer=$(( $integer + 1 ))\n    remainder=$((\
    \ $number % 10 ))\n    decimals=$(( $decimals + 1 ))\n    number=$(( $number /\
    \ 10 ))\n  done\n\n  echo \"$decimals\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6_0xc81u.sh: line 16: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n\
    \  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n\
    \  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n\
    \  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n\
    \  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_str=\"\"\n\
    \    local decimal_str=\"\"\n    local decimal_str_len=0\n    local decimal_str_len2=0\n\
    \    local decimal_str_len3=0\n    local decimal_str_len4=0\n    local decimal_str_len5=0\n\
    \    local decimal_str_len6=0\n    local decimal_str_len7=0\n    local decimal_str_len8=0\n\
    \    local decimal_str_len9=0\n    local decimal_str_len10=0\n    local decimal_str_len11=0\n\
    \    local decimal_str_len12=0\n    local decimal_str_len13=0\n    local decimal_str_len14=0\n\
    \    local decimal_str_len15=0\n    local decimal_str_len16=0\n    local decimal_str_len17=0\n\
    \    local decimal_str_len18=0\n    local decimal_str_len19=0\n    local decimal_str_len20=0\n\
    \    local decimal_str_len21=0\n    local decimal_str_len22=0\n    local decimal_str_len23=0\n\
    \    local decimal_str_len24=0\n    local decimal_str_len25=0\n    local decimal_str_len26=0\n\
    \    local decimal_str_len27=0\n    local decimal_str_len28=0\n    local decimal_str_len29=0\n\
    \    local decimal_str_len30=0\n    local decimal_str_len31=0\n    local decimal_str_len32=0\n\
    \    local decimal_str_len33=0\n    local decimal_str_len34=0\n    local decimal_str_len35=0\n\
    \    local decimal_str_len36=0\n    local decimal_str_len37=0\n    local decimal_str_len38=0\n\
    \    local decimal_str_len39=0\n    local decimal_str_len40=0\n    local decimal_str_len41=0\n\
    \    local decimal_str_len42=0\n    local decimal_str_len43=0\n    local decimal_str_len44=0\n\
    \    local decimal_str_len45=0\n    local decimal_str_len46=0\n    local decimal_str_len47=0\n\
    \    local decimal_str_len48=0\n    local decimal_str_len49=0\n    local decimal_str_len50=0\n\
    \    local decimal_str_len51=0\n    local decimal_str_len52=0\n    local decimal_str_len53=0\n\
    \    local decimal_str_len54=0\n    local decimal_str_len55=0\n    local decimal_str_len56=0\n\
    \    local decimal_str_len57=0\n    local decimal_str_len58=0\n    local decimal_str_len59=0\n\
    \    local decimal_str_len60=0\n    local decimal_str_len61=0\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal=0\n\
    \  local decimals_string=\"\"\n  local integer_string=\"\"\n  local result=0\n\
    \  local remainder=0\n  local remainder_string=\"\"\n  local remainder_string2=\"\
    \"\n  local remainder_string3=\"\"\n  local remainder_string4=\"\"\n  local remainder_string5=\"\
    \"\n  local remainder_string6=\"\"\n  local remainder_string7=\"\"\n  local remainder_string8=\"\
    \"\n  local remainder_string9=\"\"\n  local remainder_string10=\"\"\n  local remainder_string11=\"\
    \"\n  local remainder_string12=\"\"\n  local remainder_string13=\"\"\n  local\
    \ remainder_string14=\"\"\n  local remainder_string15=\"\"\n  local remainder_string16=\"\
    \"\n  local remainder_string17=\"\"\n  local remainder_string18=\"\"\n  local\
    \ remainder_string19=\"\"\n  local remainder_string20=\"\"\n  local remainder_string21=\"\
    \"\n  local remainder_string22=\"\"\n  local remainder_string23=\"\"\n  local\
    \ remainder_string24=\"\"\n  local remainder_string25=\"\"\n  local remainder_string26=\"\
    \"\n  local remainder_string27=\"\"\n  local remainder_string28=\"\"\n  local\
    \ remainder_string29=\"\"\n  local remainder_string30=\"\"\n  local remainder_string31=\"\
    \"\n  local remainder_string32=\"\"\n  local remainder_string33=\"\"\n  local\
    \ remainder_string34=\"\"\n  local remainder_string35=\"\"\n  local remainder_string36=\"\
    \"\n  local remainder_string37=\"\"\n  local remainder_string38=\"\"\n  local\
    \ remainder_string39=\"\"\n  local remainder_string40=\"\"\n  local remainder_string41=\"\
    \"\n  local remainder_string42=\"\"\n  local remainder_string43=\"\"\n  local\
    \ remainder_string44=\"\"\n  local remainder_string45=\"\"\n  local remainder_string46=\"\
    \"\n  local remainder_string47=\"\"\n  local remainder_string48=\"\"\n  local\
    \ remainder_string49=\"\"\n  local remainder_string50=\"\"\n  local remainder_string51=\"\
    \"\n  local remainder_string52=\"\"\n  local remainder_string53=\"\"\n  local\
    \ remainder_string54=\"\"\n  local remainder_string55=\"\"\n  local remainder_string56=\"\
    \"\n  local remainder_string57=\"\"\n  local remainder_string58=\"\"\n  local\
    \ remain\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number\n  local trunc_number_index\n  local trunc_number_index2\n  local\
    \ trunc_number_index3\n  local trunc_number_index4\n  local trunc_number_index5\n\
    \  local trunc_number_index6\n  local trunc_number_index7\n  local trunc_number_index8\n\
    \  local trunc_number_index9\n  local trunc_number_index10\n  local trunc_number_index11\n\
    \  local trunc_number_index12\n  local trunc_number_index13\n  local trunc_number_index14\n\
    \  local trunc_number_index15\n  local trunc_number_index16\n  local trunc_number_index17\n\
    \  local trunc_number_index18\n  local trunc_number_index19\n  local trunc_number_index20\n\
    \  local trunc_number_index21\n  local trunc_number_index22\n  local trunc_number_index23\n\
    \  local trunc_number_index24\n  local trunc_number_index25\n  local trunc_number_index26\n\
    \  local trunc_number_index27\n  local trunc_number_index28\n  local trunc_number_index29\n\
    \  local trunc_number_index30\n  local trunc_number_index31\n  local trunc_number_index32\n\
    \  local trunc_number_index33\n  local trunc_number_index34\n  local trunc_number_index35\n\
    \  local trunc_number_index36\n  local trunc_number_index37\n  local trunc_number_index38\n\
    \  local trunc_number_index39\n  local trunc_number_index40\n  local trunc_number_index41\n\
    \  local trunc_number_index42\n  local trunc_number_index43\n  local trunc_number_index44\n\
    \  local trunc_number_index45\n  local trunc_number_index46\n  local trunc_number_index47\n\
    \  local trunc_number_index48\n  local trunc_number_index49\n  local trunc_number_index50\n\
    \  local trunc_number_index51\n  local trunc_number_index52\n  local trunc_number_index53\n\
    \  local trunc_number_index54\n  local trunc_number_index55\n  local trunc_number_index56\n\
    \  local trunc_number_index57\n  local trunc_number_index58\n  local trunc_number_index59\n\
    \  local trunc_number_index60\n  local trunc_number_index61\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal=0\n\
    \  local decimals=$(( ${#number} - 1 ))\n  local decimal=$(( ${#number} - ${#number}\
    \ % 10 ))\n  local integer=$(( ${#number} - ${#number} % 10 ))\n  local integer=$((\
    \ ${#number} - ${#number} % 10 ))\n  local integer=$(( ${#number} - ${#number}\
    \ % 10 ))\n  local integer=$(( ${#number} - ${#number} % 10 ))\n  local integer=$((\
    \ ${#number} - ${#number} % 10 ))\n  local integer=$(( ${#number} - ${#number}\
    \ % 10 ))\n  local integer=$(( ${#number} - ${#number} % 10 ))\n  local integer=$((\
    \ ${#number} - ${#number} % 10 ))\n  local integer=$(( ${#number} - ${#number}\
    \ % 10 ))\n  local integer=$(( ${#number} - ${#number} % 10 ))\n  local integer=$((\
    \ ${#number} - ${#number} % 10 ))\n  local integer=$(( ${#number} - ${#number}\
    \ % 10 ))\n  local integer=$(( ${#number} - ${#number} % 10 ))\n  local integer=$((\
    \ ${#number} - ${#number} % 10 ))\n  local integer=$(( ${#number} - ${#number}\
    \ % 10 ))\n  local integer=$(( ${#number} - ${#number} % 10 ))\n  local integer=$((\
    \ ${#number} - ${#number} % 10 ))\n  local integer=$(( ${#number} - ${#number}\
    \ % 10 ))\n  local integer=$(( ${#number} - ${#number} % 10 ))\n  local integer=$((\
    \ ${#number} - ${#number} % 10 ))\n  local integer=$(( ${#number} - ${#number}\
    \ % 10 ))\n  local integer=$(( ${#number} - ${#number} % 10 ))\n  local integer=$((\
    \ ${#number} - ${#number} % 10 ))\n  local integer=$(( ${#number} - ${#number}\
    \ % 10 ))\n  local integer=$(( ${#number} - ${#number} % 10 ))\n  local integer=$((\
    \ ${#number} - ${#number} % 10 ))\n  local integer=$(( ${#number} - ${#number}\
    \ % 10 ))\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n\
    \    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local\
    \ trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n\
    \    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local\
    \ trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n\
    \    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local\
    \ trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n\
    \    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local\
    \ trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n\
    \    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local\
    \ trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n\
    \    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local\
    \ trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n\
    \    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local\
    \ trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n\
    \    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local\
    \ trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n\
    \    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local\
    \ trunc_number_in_float=0\n    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n\
    \    local trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local\
    \ trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local trunc_number_in_int=0\n\
    \    local trunc_number_in_float=0\n    local trunc_number_in_int\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local trunc_number\n    local trunc_number_string\n    local trunc_number_string_len\n\
    \    local trunc_number_string_len2\n    local trunc_number_string_len3\n    local\
    \ trunc_number_string_len4\n    local trunc_number_string_len5\n    local trunc_number_string_len6\n\
    \    local trunc_number_string_len7\n    local trunc_number_string_len8\n    local\
    \ trunc_number_string_len9\n    local trunc_number_string_len10\n    local trunc_number_string_len11\n\
    \    local trunc_number_string_len12\n    local trunc_number_string_len13\n  \
    \  local trunc_number_string_len14\n    local trunc_number_string_len15\n    local\
    \ trunc_number_string_len16\n    local trunc_number_string_len17\n    local trunc_number_string_len18\n\
    \    local trunc_number_string_len19\n    local trunc_number_string_len20\n  \
    \  local trunc_number_string_len21\n    local trunc_number_string_len22\n    local\
    \ trunc_number_string_len23\n    local trunc_number_string_len24\n    local trunc_number_string_len25\n\
    \    local trunc_number_string_len26\n    local trunc_number_string_len27\n  \
    \  local trunc_number_string_len28\n    local trunc_number_string_len29\n    local\
    \ trunc_number_string_len30\n    local trunc_number_string_len31\n    local trunc_number_string_len32\n\
    \    local trunc_number_string_len33\n    local trunc_number_string_len34\n  \
    \  local trunc_number_string_len35\n    local trunc_number_string_len36\n    local\
    \ trunc_number_string_len37\n    local trunc_number_string_len38\n    local trunc_number_string_len39\n\
    \    local trunc_number_string_len40\n    local trunc_number_string_len41\n  \
    \  local trunc_number_string_len42\n    local trunc_number_string_len43\n    local\
    \ trunc_number_string_len44\n    local trunc_number_string_len45\n    local trunc_number_string_len46\n\
    \    local trunc_number_string_len47\n    local trunc_number_string_len48\n  \
    \  local trunc_number_string_len49\n    local trunc_number_string_len50\n    local\
    \ trunc_number_string_len51\n    local trunc_number_string_len52\n    local trunc_number_string_len53\n\
    \    local trunc_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local trunc_number_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float=0\n    local trunc_number_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float=0\n    local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float=0\n    local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n    local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n    local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n    local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_float_in_int=0\n \
    \ local trunc_decimals_in_float_in_int=0\n  local trunc_number_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \n  while [ $number -gt 0 ]; do\n    integer=$(( integer + 1 ))\n    remainder=$((\
    \ number % 10 ))\n    decimals=$(( decimals + 1 ))\n    number=$(( number / 10\
    \ ))\n  done\n\n  echo \"$decimals\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8rxt9jgs.sh: line 16: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \n  while [[ $number -gt 0 ]]; do\n    integer=$(( 10#$integer + $number ))\n\
    \    decimals=$(( 10#$decimals + 1 ))\n    number=$(( 10#$number - $integer ))\n\
    \  done\n\n  echo \"$integer\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxzonjtkg.sh: line 16: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ truncate_string=\"\"\n  local truncate_string2=\"\"\n  local truncate_string3=\"\
    \"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\"\n  local truncate_string6=\"\
    \"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\"\n  local truncate_string9=\"\
    \"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\"\n  local truncate_string12=\"\
    \"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\"\n  local truncate_string15=\"\
    \"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\"\n  local truncate_string18=\"\
    \"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\"\n  local truncate_string21=\"\
    \"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\"\n  local truncate_string24=\"\
    \"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\"\n  local truncate_string27=\"\
    \"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\"\n  local truncate_string30=\"\
    \"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\"\n  local truncate_string33=\"\
    \"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\"\n  local truncate_string36=\"\
    \"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\"\n  local truncate_string39=\"\
    \"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\"\n  local truncate_string42=\"\
    \"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\"\n  local truncate_string45=\"\
    \"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\"\n  local truncate_string48=\"\
    \"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\"\n  local truncate_string51=\"\
    \"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\"\n  local truncate_string54=\"\
    \"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\"\n  local truncate_string57=\"\
    \"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\"\n  local truncate_string60=\"\
    \"\n  local truncate_string61=\"\"\n  local truncate_string62\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local trunc_number=\"\"\n\n    local trunc_number=0\n    local trunc_number_string=\"\
    \"\n\n    local trunc_number_string\n    local trunc_number\n    local trunc_number_string\n\
    \    local trunc_number\n\n    local trunc_number_string\n    local trunc_number\n\
    \    local trunc_number_string\n    local trunc_number\n\n    local trunc_number_string\n\
    \    local trunc_number\n    local trunc_number_string\n    local trunc_number\n\
    \n    local trunc_number_string\n    local trunc_number\n    local trunc_number_string\n\
    \    local trunc_number\n\n    local trunc_number_string\n    local trunc_number\n\
    \    local trunc_number_string\n    local trunc_number\n\n    local trunc_number_string\n\
    \    local trunc_number\n    local trunc_number_string\n    local trunc_number\n\
    \n    local trunc_number_string\n    local trunc_number\n    local trunc_number_string\n\
    \    local trunc_number\n\n    local trunc_number_string\n    local trunc_number\n\
    \    local trunc_number_string\n    local trunc_number\n\n    local trunc_number_string\n\
    \    local trunc_number\n    local trunc_number_string\n    local trunc_number\n\
    \n    local trunc_number_string\n    local trunc_number\n    local trunc_number_string\n\
    \    local trunc_number\n\n    local trunc_number_string\n    local trunc_number\n\
    \    local trunc_number_string\n    local trunc_number\n\n    local trunc_number_string\n\
    \    local trunc_number\n    local trunc_number_string\n    local trunc_number\n\
    \n    local trunc_number_string\n    local trunc_number\n    local trunc_number_string\n\
    \    local trunc_number\n\n    local trunc_number_string\n    local trunc_number\n\
    \    local trunc_number_string\n    local trunc_number\n\n    local trunc_number_string\n\
    \    local trunc_number\n    local trunc_number_string\n    local trunc_number\n\
    \n    local trunc_number_string\n    local trunc_number\n    local trunc_number_string\n\
    \    local trunc_number\n\n    local trunc_number_string\n    local trunc_number\n\
    \    local trunc_number_string\n    local trunc_number\n\n    local trunc_number_string\n\
    \    local trunc_number\n    local trunc_number_string\n    local trunc_number\n\
    \n    local trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_str=\"\"\n  local\
    \ trunc_number=\"\"\n\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimals_string=\"\"\n  local integer_string=\"\"\n\n  while [ \"$number\"\
    \ -gt 0 ]; do\n    integer=$(( $integer + 1 ))\n    remainder=$(( $number % 10\
    \ ))\n    decimals=$(( $decimals + 1 ))\n    number=$(( $number / 10 ))\n  done\n\
    \n  decimals_string=$(( $decimals + 1 ))\n  integer_string=$(( $integer + 1 ))\n\
    \n  echo \"$decimals_string$integer_string\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp82wyz04s.sh: line 18: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimals_string=\"\"\n    local integer_string=\"\"\n\
    \    local remainder_string=\"\"\n    local decimal_string=\"\"\n    local integer_string=\"\
    \"\n    local remainder_string=\"\"\n    local decimal_string=\"\"\n    local\
    \ integer_string=\"\"\n    local remainder_string=\"\"\n    local decimal_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    \n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n\n    while [[ $number -gt 0 ]]; do\n        integer=$(( $integer\
    \ + 1 ))\n        remainder=$(( $number % 10 ))\n        decimals=$(( $decimals\
    \ + 1 ))\n        number=$(( $number / 10 ))\n    done\n\n    echo \"$decimals\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmfps6cc4.sh: line 16: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_decimals=0\n  local trunc_number_in_digits=0\n  local\
    \ trunc_number_in_digits_after_point=0\n  local trunc_number_in_digits_after_point_in_decimals=0\n\
    \  local trunc_number_in_digits_after_point_in_digits=0\n  local trunc_number_in_digits_after_point_in_digits_after_point=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_decimals=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_decimals=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_decimals=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_decimals=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_decimals=0\n\
    \  local trunc_number_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digits_after_point_in_digit\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_str=\"\"\n  local\
    \ int_part=0\n  local int_part_str=\"\"\n  local int_part_str_reversed=\"\"\n\
    \  local int_part_reversed=0\n  local int_part_reversed_str=\"\"\n  local int_part_reversed_str_reversed=\"\
    \"\n  local int_part_reversed_str_reversed_reversed=\"\"\n  local int_part_reversed_str_reversed_reversed_reversed=\"\
    \"\n  local int_part_reversed_str_reversed_reversed_reversed_reversed=\"\"\n \
    \ local int_part_reversed_str_reversed_reversed_reversed_reversed_reversed=\"\"\
    \n  local int_part_str_reversed_reversed_reversed_reversed_reversed=\"\"\n  local\
    \ int_part_str_reversed_reversed_reversed_reversed_reversed_reversed=\"\"\n  local\
    \ int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n  local int_part_str_reversed_reversed_reverse\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number=\"\"\n  local trunc_number_string=\"\"\n  local trunc_number_string2=\"\
    \"\n  local trunc_number_string3=\"\"\n  local trunc_number_string4=\"\"\n  local\
    \ trunc_number_string5=\"\"\n  local trunc_number_string6=\"\"\n  local trunc_number_string7=\"\
    \"\n  local trunc_number_string8=\"\"\n  local trunc_number_string9=\"\"\n  local\
    \ trunc_number_string10=\"\"\n  local trunc_number_string11=\"\"\n  local trunc_number_string12=\"\
    \"\n  local trunc_number_string13=\"\"\n  local trunc_number_string14=\"\"\n \
    \ local trunc_number_string15=\"\"\n  local trunc_number_string16=\"\"\n  local\
    \ trunc_number_string17=\"\"\n  local trunc_number_string18=\"\"\n  local trunc_number_string19=\"\
    \"\n  local trunc_number_string20=\"\"\n  local trunc_number_string21=\"\"\n \
    \ local trunc_number_string22=\"\"\n  local trunc_number_string23=\"\"\n  local\
    \ trunc_number_string24=\"\"\n  local trunc_number_string25=\"\"\n  local trunc_number_string26=\"\
    \"\n  local trunc_number_string27=\"\"\n  local trunc_number_string28=\"\"\n \
    \ local trunc_number_string29=\"\"\n  local trunc_number_string30=\"\"\n  local\
    \ trunc_number_string31=\"\"\n  local trunc_number_string32=\"\"\n  local trunc_number_string33=\"\
    \"\n  local trunc_number_string34=\"\"\n  local trunc_number_string35=\"\"\n \
    \ local trunc_number_string36=\"\"\n  local trunc_number_string37=\"\"\n  local\
    \ trunc_number_string38=\"\"\n  local trunc_number_string39=\"\"\n  local trunc_number_string40=\"\
    \"\n  local trunc_number_string41=\"\"\n  local trunc_number_string42=\"\"\n \
    \ local trunc_number_string43=\"\"\n  local trunc_number_string44=\"\"\n  local\
    \ trunc_number_string45=\"\"\n  local trunc_number_string46=\"\"\n  local trunc_number_string47=\"\
    \"\n  local trunc_number_string48=\"\"\n  local trunc_number_string49=\"\"\n \
    \ local trunc_number_string50=\"\"\n  local trunc_number_string51=\"\"\n  local\
    \ trunc_number_string52=\"\"\n  local trunc_number_string53=\"\"\n  local trunc_number_string54=\"\
    \"\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_in_int=0\n\
    \  local trunc_number_in_float=0\n  local trunc_number_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_str=\"\"\n  local\
    \ decimal_str=\"\"\n  local decimal_str_len=0\n  local decimal_str_len2=0\n  local\
    \ decimal_str_len3=0\n  local decimal_str_len4=0\n  local decimal_str_len5=0\n\
    \  local decimal_str_len6=0\n  local decimal_str_len7=0\n  local decimal_str_len8=0\n\
    \  local decimal_str_len9=0\n  local decimal_str_len10=0\n  local decimal_str_len11=0\n\
    \  local decimal_str_len12=0\n  local decimal_str_len13=0\n  local decimal_str_len14=0\n\
    \  local decimal_str_len15=0\n  local decimal_str_len16=0\n  local decimal_str_len17=0\n\
    \  local decimal_str_len18=0\n  local decimal_str_len19=0\n  local decimal_str_len20=0\n\
    \  local decimal_str_len21=0\n  local decimal_str_len22=0\n  local decimal_str_len23=0\n\
    \  local decimal_str_len24=0\n  local decimal_str_len25=0\n  local decimal_str_len26=0\n\
    \  local decimal_str_len27=0\n  local decimal_str_len28=0\n  local decimal_str_len29=0\n\
    \  local decimal_str_len30=0\n  local decimal_str_len31=0\n  local decimal_str_len32=0\n\
    \  local decimal_str_len33=0\n  local decimal_str_len34=0\n  local decimal_str_len35=0\n\
    \  local decimal_str_len36=0\n  local decimal_str_len37=0\n  local decimal_str_len38=0\n\
    \  local decimal_str_len39=0\n  local decimal_str_len40=0\n  local decimal_str_len41=0\n\
    \  local decimal_str_len42=0\n  local decimal_str_len43=0\n  local decimal_str_len44=0\n\
    \  local decimal_str_len45=0\n  local decimal_str_len46=0\n  local decimal_str_len47=0\n\
    \  local decimal_str_len48=0\n  local decimal_str_len49=0\n  local decimal_str_len50=0\n\
    \  local decimal_str_len51=0\n  local decimal_str_len52=0\n  local decimal_str_len53=0\n\
    \  local decimal_str_len54=0\n  local decimal_str_len55=0\n  local decimal_str_len56=0\n\
    \  local decimal_str_len57=0\n  local decimal_str_len58=0\n  local decimal_str_len59=0\n\
    \  local decimal_str_len60=0\n  local decimal_str_len61=0\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ decimal=0\n    local decimals_string=\"\"\n    local integer_string=\"\"\n \
    \   local integer_string_length=0\n    local decimal_string=\"\"\n    local decimal_string_length=0\n\
    \    local decimal_string_length=0\n    local integer_string_length=0\n    local\
    \ integer_string_length=0\n    local decimal_string_length=0\n    local decimal_string_length=0\n\
    \    local integer_string_length=0\n    local integer_string_length=0\n    local\
    \ decimal_string_length=0\n    local decimal_string_length=0\n    local integer_string_length=0\n\
    \    local integer_string_length=0\n    local decimal_string_length=0\n    local\
    \ decimal_string_length=0\n    local integer_string_length=0\n    local integer_string_length=0\n\
    \    local decimal_string_length=0\n    local decimal_string_length=0\n    local\
    \ integer_string_length=0\n    local integer_string_length=0\n    local decimal_string_length=0\n\
    \    local decimal_string_length=0\n    local integer_string_length=0\n    local\
    \ integer_string_length=0\n    local decimal_string_length=0\n    local decimal_string_length=0\n\
    \    local integer_string_length=0\n    local integer_string_length=0\n    local\
    \ decimal_string_length=0\n    local decimal_string_length=0\n    local integer_string_length=0\n\
    \    local integer_string_length=0\n    local decimal_string_length=0\n    local\
    \ decimal_string_length=0\n    local integer_string_length=0\n    local integer_string_length=0\n\
    \    local decimal_string_length=0\n    local decimal_string_length=0\n    local\
    \ integer_string_length=0\n    local integer_string_length=0\n    local decimal_string_length=0\n\
    \    local decimal_string_length=0\n    local integer_string_length=0\n    local\
    \ integer_string_length=0\n    local decimal_string_length=0\n    local decimal_string_length=0\n\
    \    local integer_string_length=0\n    local integer_string_length=0\n    local\
    \ decimal_string_length=0\n    local decimal_string_length=0\n    local integer_string_length=0\n\
    \    local integer_string_length=0\n    local decimal_string_length=0\n    local\
    \ decimal_string_length=0\n    local integer_string_length=0\n    local integer_string_length=0\n\
    \    local decimal_string_length=0\n    local decimal_string_length=0\n    local\
    \ integer_string_length=0\n    local integer_string_length=0\n    local decimal_string_length=0\n\
    \    local decimal_string_length=0\n    local integer_string_length=0\n    local\
    \ integer_string_length=0\n    local decimal_string_length=0\n    local decimal_string_length=0\n\
    \    local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_index=0\n\
    \  local trunc_number_index2=0\n  local trunc_number_index3=0\n  local trunc_number_index4=0\n\
    \  local trunc_number_index5=0\n  local trunc_number_index6=0\n  local trunc_number_index7=0\n\
    \  local trunc_number_index8=0\n  local trunc_number_index9=0\n  local trunc_number_index10=0\n\
    \  local trunc_number_index11=0\n  local trunc_number_index12=0\n  local trunc_number_index13=0\n\
    \  local trunc_number_index14=0\n  local trunc_number_index15=0\n  local trunc_number_index16=0\n\
    \  local trunc_number_index17=0\n  local trunc_number_index18=0\n  local trunc_number_index19=0\n\
    \  local trunc_number_index20=0\n  local trunc_number_index21=0\n  local trunc_number_index22=0\n\
    \  local trunc_number_index23=0\n  local trunc_number_index24=0\n  local trunc_number_index25=0\n\
    \  local trunc_number_index26=0\n  local trunc_number_index27=0\n  local trunc_number_index28=0\n\
    \  local trunc_number_index29=0\n  local trunc_number_index30=0\n  local trunc_number_index31=0\n\
    \  local trunc_number_index32=0\n  local trunc_number_index33=0\n  local trunc_number_index34=0\n\
    \  local trunc_number_index35=0\n  local trunc_number_index36=0\n  local trunc_number_index37=0\n\
    \  local trunc_number_index38=0\n  local trunc_number_index39=0\n  local trunc_number_index40=0\n\
    \  local trunc_number_index41=0\n  local trunc_number_index42=0\n  local trunc_number_index43=0\n\
    \  local trunc_number_index44=0\n  local trunc_number_index45=0\n  local trunc_number_index46=0\n\
    \  local trunc_number_index47=0\n  local trunc_number_index48=0\n  local trunc_number_index49=0\n\
    \  local trunc_number_index50=0\n  local trunc_number_index51=0\n  local trunc_number_index52=0\n\
    \  local trunc_number_index53=0\n  local trunc_number_index54=0\n  local trunc_number_index55=0\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal_part\n  local integer_part\n\
    \  local remainder\n  local remainder_part\n  local remainder_part_length\n  local\
    \ remainder_part_index\n  local remainder_part_index2\n  local remainder_part_index3\n\
    \  local remainder_part_index4\n  local remainder_part_index5\n  local remainder_part_index6\n\
    \  local remainder_part_index7\n  local remainder_part_index8\n  local remainder_part_index9\n\
    \  local remainder_part_index10\n  local remainder_part_index11\n  local remainder_part_index12\n\
    \  local remainder_part_index13\n  local remainder_part_index14\n  local remainder_part_index15\n\
    \  local remainder_part_index16\n  local remainder_part_index17\n  local remainder_part_index18\n\
    \  local remainder_part_index19\n  local remainder_part_index20\n  local remainder_part_index21\n\
    \  local remainder_part_index22\n  local remainder_part_index23\n  local remainder_part_index24\n\
    \  local remainder_part_index25\n  local remainder_part_index26\n  local remainder_part_index27\n\
    \  local remainder_part_index28\n  local remainder_part_index29\n  local remainder_part_index30\n\
    \  local remainder_part_index31\n  local remainder_part_index32\n  local remainder_part_index33\n\
    \  local remainder_part_index34\n  local remainder_part_index35\n  local remainder_part_index36\n\
    \  local remainder_part_index37\n  local remainder_part_index38\n  local remainder_part_index39\n\
    \  local remainder_part_index40\n  local remainder_part_index41\n  local remainder_part_index42\n\
    \  local remainder_part_index43\n  local remainder_part_index44\n  local remainder_part_index45\n\
    \  local remainder_part_index46\n  local remainder_part_index47\n  local remainder_part_index48\n\
    \  local remainder_part_index49\n  local remainder_part_index50\n  local remainder_part_index51\n\
    \  local remainder_part_index52\n  local remainder_part_index53\n  local remainder_part_index54\n\
    \  local remainder_part_index55\n  local remainder_part_index56\n  local remainder_part_index57\n\
    \  local remainder_part_index58\n  local remainder_part_index59\n  \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local integerPart\n    local truncatedNumber\n    local decimalPartLength\n\
    \    local decimalPartLengthRemainder\n    local decimalPartRemainder\n    local\
    \ decimalPartRemainderLength\n    local decimalPartRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainder\n    local decimalPartRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPart\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_reverse=\"\"\n    local decimals_string_reverse_temp=\"\
    \"\n    local decimals_string_reverse_temp2=\"\"\n    local decimals_string_reverse_temp3=\"\
    \"\n    local decimals_string_reverse_temp4=\"\"\n    local decimals_string_reverse_temp5=\"\
    \"\n    local decimals_string_reverse_temp6=\"\"\n    local decimals_string_reverse_temp7=\"\
    \"\n    local decimals_string_reverse_temp8=\"\"\n    local decimals_string_reverse_temp9=\"\
    \"\n    local decimals_string_reverse_temp10=\"\"\n    local decimals_string_reverse_temp11=\"\
    \"\n    local decimals_string_reverse_temp12=\"\"\n    local decimals_string_reverse_temp13=\"\
    \"\n    local decimals_string_reverse_temp14=\"\"\n    local decimals_string_reverse_temp15=\"\
    \"\n    local decimals_string_reverse_temp16=\"\"\n    local decimals_string_reverse_temp17=\"\
    \"\n    local decimals_string_reverse_temp18=\"\"\n    local decimals_string_reverse_temp19=\"\
    \"\n    local decimals_string_reverse_temp20=\"\"\n    local decimals_string_reverse_temp21=\"\
    \"\n    local decimals_string_reverse_temp22=\"\"\n    local decimals_string_reverse_temp23=\"\
    \"\n    local decimals_string_reverse_temp24=\"\"\n    local decimals_string_reverse_temp25=\"\
    \"\n    local decimals_string_reverse_temp26=\"\"\n    local decimals_string_reverse_temp27=\"\
    \"\n    local decimals_string_reverse_temp28=\"\"\n    local decimals_string_reverse_temp29=\"\
    \"\n    local decimals_string_reverse_temp30=\"\"\n    local decimals_string_reverse_temp31=\"\
    \"\n    local decimals_string_reverse_temp32=\"\"\n    local decimals_string_reverse_temp33=\"\
    \"\n    local decimals_string_reverse_temp34=\"\"\n    local decimals_string_reverse_temp35=\"\
    \"\n    local decimals_string_reverse_temp36=\"\"\n    local decimals_string_reverse_temp37=\"\
    \"\n    local decimals_string_reverse_temp38=\"\"\n    local decimals_string_reverse_temp39=\"\
    \"\n    local decimals_string_reverse_temp40=\"\"\n    local decimals_string_reverse_temp41=\"\
    \"\n    local decimals_string_reverse_temp42=\"\"\n    local decimals_string_reverse_temp43=\"\
    \"\n    local decimals_string_reverse_temp44=\"\"\n    \n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=${2:-0}\n  local integer=${number%.*}\n\
    \  local decimal=${number#*.}\n  if [[ $integer -gt $decimal ]]; then\n    echo\
    \ \"$integer\"\n  else\n    echo \"$decimal\"\n  fi\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_index=0\n\
    \  local trunc_number_index2=0\n  local trunc_number_index3=0\n  local trunc_number_index4=0\n\
    \  local trunc_number_index5=0\n  local trunc_number_index6=0\n  local trunc_number_index7=0\n\
    \  local trunc_number_index8=0\n  local trunc_number_index9=0\n  local trunc_number_index10=0\n\
    \  local trunc_number_index11=0\n  local trunc_number_index12=0\n  local trunc_number_index13=0\n\
    \  local trunc_number_index14=0\n  local trunc_number_index15=0\n  local trunc_number_index16=0\n\
    \  local trunc_number_index17=0\n  local trunc_number_index18=0\n  local trunc_number_index19=0\n\
    \  local trunc_number_index20=0\n  local trunc_number_index21=0\n  local trunc_number_index22=0\n\
    \  local trunc_number_index23=0\n  local trunc_number_index24=0\n  local trunc_number_index25=0\n\
    \  local trunc_number_index26=0\n  local trunc_number_index27=0\n  local trunc_number_index28=0\n\
    \  local trunc_number_index29=0\n  local trunc_number_index30=0\n  local trunc_number_index31=0\n\
    \  local trunc_number_index32=0\n  local trunc_number_index33=0\n  local trunc_number_index34=0\n\
    \  local trunc_number_index35=0\n  local trunc_number_index36=0\n  local trunc_number_index37=0\n\
    \  local trunc_number_index38=0\n  local trunc_number_index39=0\n  local trunc_number_index40=0\n\
    \  local trunc_number_index41=0\n  local trunc_number_index42=0\n  local trunc_number_index43=0\n\
    \  local trunc_number_index44=0\n  local trunc_number_index45=0\n  local trunc_number_index46=0\n\
    \  local trunc_number_index47=0\n  local trunc_number_index48=0\n  local trunc_number_index49=0\n\
    \  local trunc_number_index50=0\n  local trunc_number_index51=0\n  local trunc_number_index52=0\n\
    \  local trunc_number_index53=0\n  local trunc_number_index54=0\n  local trunc_number_index55=0\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_length=0\n    local decimals_string_length_string=\"\
    \"\n    local decimals_string_length_string_length=0\n    local decimals_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length=0\n    local\
    \ decimals_string_length_string_length_string_length_string=\"\"\n    local decimals_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder\n\
    \  local decimal\n  while [[ $number -gt 0 ]]; do\n    remainder=$((number % 1))\n\
    \    decimal=$((10#$remainder))\n    integer=$((10#$integer))\n    decimals=$((10#$decimals+$decimal))\n\
    \    number=$((number / 1))\n  done\n  echo \"$integer$decimals\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1uv76_yg.sh: line 16: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ integer=0\n  local integer_string=\"\"\n  local remainder=0\n  local remainder_string=\"\
    \"\n  local decimal_point=\".\"\n  local decimal_point_string=\"\"\n  local decimal_point_count=0\n\
    \  local decimal_point_string_count=0\n  local decimal_point_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  local\
    \ decimal_point_string_count=0\n  local decimal_point_string_count=0\n  \n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimal=0\n    local truncate_number=0\n    local remainder_string=\"\
    \"\n\n    # Truncate to integer part\n    while [ \"$number\" -gt 0 ]; do\n  \
    \      integer=$(( integer + 1 ))\n        number=$(( number / 10 ))\n    done\n\
    \n    # Truncate to decimal part\n    while [ \"$number\" -gt 0 ]; do\n      \
    \  decimal=$(( decimal + 1 ))\n        remainder=$(( number % 10 ))\n        number=$((\
    \ number / 10 ))\n    done\n\n    # Truncate to decimal part\n    while [ \"$decimal\"\
    \ -gt 0 ]; do\n        remainder_string=\"$remainder_string$remainder\"\n    \
    \    decimal=$(( decimal - 1 ))\n        remainder=0\n        number=$(( number\
    \ / 10 ))\n    done\n\n    # Truncate to integer part\n    while [ \"$integer\"\
    \ -gt 0 ]; do\n        truncate_number=\"$truncate_number$integer\"\n        integer=$((\
    \ integer - 1 ))\n        decimal=0\n        number=$(( number / 10 ))\n    done\n\
    \n    # Add decimal part if any\n    if [ \"$decimal\" -gt 0 ]; then\n       \
    \ truncate_number=\"$truncate_number$decimal\"\n    fi\n\n    # Add remainder\
    \ part if any\n    if [ \"$remainder\" -gt 0 ]; then\n        truncate_number=\"\
    $truncate_number$remainder_string\"\n    fi\n\n    echo \"$truncate_number\"\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1vnp4zpb.sh: line 20: [: 3.5: integer expression expected

    /tmp/tmp1vnp4zpb.sh: line 26: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ truncate_string=\"\"\n  local truncate_number=\"\"\n\n  decimals=$(echo \"$number\"\
    \ | awk '{print $1+0}')\n  decimals=$(echo \"$decimals\" | awk '{print $1+0}')\n\
    \n  while [ \"$decimals\" -gt 0 ]; do\n    decimals=$(echo \"$decimals/10\" |\
    \ awk '{print $1+0}')\n    decimals_string=\"$decimals_string$decimals\"\n  done\n\
    \n  truncate_string=\"$decimals_string\"\n  truncate_number=\"$truncate_string\"\
    \n  echo \"$truncate_number\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpphpi08x4.sh: line 20: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_str=\"\"\n  local\
    \ trunc_number=0\n  local trunc_number_str=\"\"\n  local trunc_number_str_decimals=0\n\
    \  local trunc_number_str_decimals_str=\"\"\n  local trunc_number_str_decimals_str_digits=0\n\
    \  local trunc_number_str_decimals_str_digits_str=\"\"\n  local trunc_number_str_decimals_str_digits_str_digits=0\n\
    \  local trunc_number_str_decimals_str_digits_str_digits_str=\"\"\n  local trunc_number_str_decimals_str_digits_str_digits_str_digits=0\n\
    \  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str=\"\"\n\
    \  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits=0\n\
    \  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str=\"\
    \"\n  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str_digits=0\n\
    \  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str_digits_str=\"\
    \"\n  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits=0\n\
    \  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str=\"\
    \"\n  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits=0\n\
    \  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str=\"\
    \"\n  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits=0\n\
    \  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str=\"\
    \"\n  local trunc_number_str_decimals_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits_str_digits=0\n\
    \  local trunc_number_str_decimals_str_digits_str_digits_str_digit\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_index\n  local trunc_number_index2\n  local trunc_number_index3\n\
    \  local trunc_number_index4\n  local trunc_number_index5\n  local trunc_number_index6\n\
    \  local trunc_number_index7\n  local trunc_number_index8\n  local trunc_number_index9\n\
    \  local trunc_number_index10\n  local trunc_number_index11\n  local trunc_number_index12\n\
    \  local trunc_number_index13\n  local trunc_number_index14\n  local trunc_number_index15\n\
    \  local trunc_number_index16\n  local trunc_number_index17\n  local trunc_number_index18\n\
    \  local trunc_number_index19\n  local trunc_number_index20\n  local trunc_number_index21\n\
    \  local trunc_number_index22\n  local trunc_number_index23\n  local trunc_number_index24\n\
    \  local trunc_number_index25\n  local trunc_number_index26\n  local trunc_number_index27\n\
    \  local trunc_number_index28\n  local trunc_number_index29\n  local trunc_number_index30\n\
    \  local trunc_number_index31\n  local trunc_number_index32\n  local trunc_number_index33\n\
    \  local trunc_number_index34\n  local trunc_number_index35\n  local trunc_number_index36\n\
    \  local trunc_number_index37\n  local trunc_number_index38\n  local trunc_number_index39\n\
    \  local trunc_number_index40\n  local trunc_number_index41\n  local trunc_number_index42\n\
    \  local trunc_number_index43\n  local trunc_number_index44\n  local trunc_number_index45\n\
    \  local trunc_number_index46\n  local trunc_number_index47\n  local trunc_number_index48\n\
    \  local trunc_number_index49\n  local trunc_number_index50\n  local trunc_number_index51\n\
    \  local trunc_number_index52\n  local trunc_number_index53\n  local trunc_number_index54\n\
    \  local trunc_number_index55\n  local trunc_number_index56\n  local trunc_number_index57\n\
    \  local trunc_number_index58\n  local trunc_number_index59\n  local trunc_number_index60\n\
    \  local trunc_number_index61\n  local trun\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimals_string=\"\"\n    local integer_string=\"\"\n\
    \    local remainder_string=\"\"\n    local decimals_length=0\n    local integer_length=0\n\
    \    local remainder_length=0\n    local decimals_length_string=\"\"\n    local\
    \ integer_length_string=\"\"\n    local remainder_length_string=\"\"\n    local\
    \ decimals_length_str=\"\"\n    local integer_length_str=\"\"\n    local remainder_length_str=\"\
    \"\n    local decimals_length_string2=\"\"\n    local integer_length_string2=\"\
    \"\n    local remainder_length_string2=\"\"\n    local decimals_length_str2=\"\
    \"\n    local integer_length_str2=\"\"\n    local remainder_length_str2=\"\"\n\
    \    local decimals_length_string3=\"\"\n    local integer_length_string3=\"\"\
    \n    local remainder_length_string3=\"\"\n    local decimals_length_str3=\"\"\
    \n    local integer_length_str3=\"\"\n    local remainder_length_str3=\"\"\n \
    \   local decimals_length_string4=\"\"\n    local integer_length_string4=\"\"\n\
    \    local remainder_length_string4=\"\"\n    local decimals_length_str4=\"\"\n\
    \    local integer_length_str4=\"\"\n    local remainder_length_str4=\"\"\n  \
    \  local decimals_length_string5=\"\"\n    local integer_length_string5=\"\"\n\
    \    local remainder_length_string5=\"\"\n    local decimals_length_str5=\"\"\n\
    \    local integer_length_str5=\"\"\n    local remainder_length_str5=\"\"\n  \
    \  local decimals_length_string6=\"\"\n    local integer_length_string6=\"\"\n\
    \    local remainder_length_string6=\"\"\n    local decimals_length_str6=\"\"\n\
    \    local integer_length_str6=\"\"\n    local remainder_length_str6=\"\"\n  \
    \  local decimals_length_string7=\"\"\n    local integer_length_string7=\"\"\n\
    \    local remainder_length_string7=\"\"\n    local decimals_length_str7=\"\"\n\
    \    local integer_length_str7=\"\"\n    local remainder_length_str7=\"\"\n  \
    \  local decimals_length_string8=\"\"\n    local integer_length_string8=\"\"\n\
    \    local remainder_length_string8=\"\"\n    local decimals_length_str8=\"\"\n\
    \    local integer_length_str8=\"\"\n    local remainder_length_str8=\"\"\n  \
    \  local decimals_length_string9=\"\"\n    local integer_length_string9=\"\"\n\
    \    local remainder_length_string9=\"\"\n    local decimals_length_str9=\"\"\n\
    \    local integer_length_str9=\"\"\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals_string\n\
    \  local decimals_string_reversed\n  local decimals_string_length\n  local decimals_string_length_reversed\n\
    \  local decimals_string_length_reversed_reversed\n  local decimals_string_length_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed\n  local decimals_string_length_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reverse\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal=0\n\
    \  local remainder=0\n  local remainder_decimal=0\n  local remainder_integer=0\n\
    \  local remainder_remainder=0\n  local remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_integer=0\n  local remainder_remainder_remainder=0\n  local\
    \ remainder_remainder_remainder_decimal=0\n  local remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder=0\n  local remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimal_part\n  local decimal_part_string\n  local decimal_part_string_index\n\
    \  local decimal_part_string_length\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_string_length_index\n\
    \  local decimal_part_string_length_index\n  local decimal_part_\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_digits=0\n    local trunc_digits_left=0\n\
    \    local trunc_digits_right=0\n    local trunc_digits_left_right=0\n    local\
    \ trunc_digits_left_right_left=0\n    local trunc_digits_left_right_right=0\n\
    \    local trunc_digits_left_right_right_left=0\n    local trunc_digits_left_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_left=0\n    local trunc_digits_left_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_right_left=0\n    local trunc_digits_left_right_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_right_right_left=0\n    local trunc_digits_left_right_right_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_left=0\n    local\
    \ trunc_digits_left_right_right_right_right_right_right_right_right=0\n    local\
    \ trunc_digits_left_right_right_right_right_right_right_right_left=0\n    local\
    \ trunc_digits_left_right_right_right_right_right_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_left=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_left=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right_left=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right_left=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right_right_left=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right_right_left=0\n\
    \    local trunc_digits_left_right_right_right_right_right_right_right_right_right_right_right_right_right=0\n\
    \    local trunc_digits_left_right_right_\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_numbers=0\n  local trunc_decimals=0\n  local trunc_numbers=0\n\
    \  local trunc_decimals=0\n  local trunc_numbers=0\n  local trunc_decimals=0\n\
    \  local trunc_number\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_reverse=\"\"\n  local decimals_string_reverse_temp=\"\"\n  local\
    \ decimals_string_reverse_temp2=\"\"\n  local decimals_string_reverse_temp3=\"\
    \"\n  local decimals_string_reverse_temp4=\"\"\n  local decimals_string_reverse_temp5=\"\
    \"\n  local decimals_string_reverse_temp6=\"\"\n  local decimals_string_reverse_temp7=\"\
    \"\n  local decimals_string_reverse_temp8=\"\"\n  local decimals_string_reverse_temp9=\"\
    \"\n  local decimals_string_reverse_temp10=\"\"\n  local decimals_string_reverse_temp11=\"\
    \"\n  local decimals_string_reverse_temp12=\"\"\n  local decimals_string_reverse_temp13=\"\
    \"\n  local decimals_string_reverse_temp14=\"\"\n  local decimals_string_reverse_temp15=\"\
    \"\n  local decimals_string_reverse_temp16=\"\"\n  local decimals_string_reverse_temp17=\"\
    \"\n  local decimals_string_reverse_temp18=\"\"\n  local decimals_string_reverse_temp19=\"\
    \"\n  local decimals_string_reverse_temp20=\"\"\n  local decimals_string_reverse_temp21=\"\
    \"\n  local decimals_string_reverse_temp22=\"\"\n  local decimals_string_reverse_temp23=\"\
    \"\n  local decimals_string_reverse_temp24=\"\"\n  local decimals_string_reverse_temp25=\"\
    \"\n  local decimals_string_reverse_temp26=\"\"\n  local decimals_string_reverse_temp27=\"\
    \"\n  local decimals_string_reverse_temp28=\"\"\n  local decimals_string_reverse_temp29=\"\
    \"\n  local decimals_string_reverse_temp30=\"\"\n  local decimals_string_reverse_temp31=\"\
    \"\n  local decimals_string_reverse_temp32=\"\"\n  local decimals_string_reverse_temp33=\"\
    \"\n  local decimals_string_reverse_temp34=\"\"\n  local decimals_string_reverse_temp35=\"\
    \"\n  local decimals_string_reverse_temp36=\"\"\n  local decimals_string_reverse_temp37=\"\
    \"\n  local decimals_string_reverse_temp38=\"\"\n  local decimals_string_reverse_temp39=\"\
    \"\n  local decimals_string_reverse_temp40=\"\"\n  local decimals_string_reverse_temp41=\"\
    \"\n  local decimals_string_reverse_temp42=\"\"\n  local decimals_string_reverse_temp43=\"\
    \"\n  local decimals_string_reverse_temp44=\"\"\n  \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal_part\n  local integer_part\n\
    \  local remainder\n  local remainder_part\n  local remainder_part_length\n  local\
    \ remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_index=0\n  local decimals_string_index2=0\n  local decimals_string_index3=0\n\
    \  local decimals_string_index4=0\n  local decimals_string_index5=0\n  local decimals_string_index6=0\n\
    \  local decimals_string_index7=0\n  local decimals_string_index8=0\n  local decimals_string_index9=0\n\
    \  local decimals_string_index10=0\n  local decimals_string_index11=0\n  local\
    \ decimals_string_index12=0\n  local decimals_string_index13=0\n  local decimals_string_index14=0\n\
    \  local decimals_string_index15=0\n  local decimals_string_index16=0\n  local\
    \ decimals_string_index17=0\n  local decimals_string_index18=0\n  local decimals_string_index19=0\n\
    \  local decimals_string_index20=0\n  local decimals_string_index21=0\n  local\
    \ decimals_string_index22=0\n  local decimals_string_index23=0\n  local decimals_string_index24=0\n\
    \  local decimals_string_index25=0\n  local decimals_string_index26=0\n  local\
    \ decimals_string_index27=0\n  local decimals_string_index28=0\n  local decimals_string_index29=0\n\
    \  local decimals_string_index30=0\n  local decimals_string_index31=0\n  local\
    \ decimals_string_index32=0\n  local decimals_string_index33=0\n  local decimals_string_index34=0\n\
    \  local decimals_string_index35=0\n  local decimals_string_index36=0\n  local\
    \ decimals_string_index37=0\n  local decimals_string_index38=0\n  local decimals_string_index39=0\n\
    \  local decimals_string_index40=0\n  local decimals_string_index41=0\n  local\
    \ decimals_string_index42=0\n  local decimals_string_index43=0\n  local decimals_string_index44=0\n\
    \  local decimals_string_index45=0\n  local decimals_string_index46=0\n  local\
    \ decimals_string_index47=0\n  local decimals_string_index48=0\n  local decimals_string_index49=0\n\
    \  local decimals_string_index50=0\n  local decimals_string_index51=0\n  local\
    \ decimals_string_index52=0\n  local decimals_string_index53=0\n  local decimals_string_index54=0\n\
    \  local decimals_string_index55=0\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_length=0\n    local decimals_string_length_string=\"\
    \"\n    local decimals_string_length_string_length=0\n    local decimals_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length=0\n    local\
    \ decimals_string_length_string_length_string_length_string=\"\"\n    local decimals_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_str=\"\"\n  local\
    \ decimals_str_index=0\n  local decimals_str_len=0\n  local decimals_str_len_index=0\n\
    \  local decimals_str_len_value=0\n  local decimals_str_len_value_index=0\n  local\
    \ decimals_str_len_value_diff=0\n  local decimals_str_len_value_diff_index=0\n\
    \  local decimals_str_len_value_diff_len=0\n  local decimals_str_len_value_diff_len_index=0\n\
    \  local decimals_str_len_value_diff_len_diff=0\n  local decimals_str_len_value_diff_len_diff_index=0\n\
    \  local decimals_str_len_value_diff_len_diff_len=0\n  local decimals_str_len_value_diff_len_diff_len_index=0\n\
    \  local decimals_str_len_value_diff_len_diff_len_diff=0\n  local decimals_str_len_value_diff_len_diff_len_index=0\n\
    \  local decimals_str_len_value_diff_len_diff_len_diff_len=0\n  local decimals_str_len_value_diff_len_diff_len_diff_len_index=0\n\
    \  local decimals_str_len_value_diff_len_diff_len_diff_len_diff=0\n  local decimals_str_len_value_diff_len_diff_len_diff_len_index=0\n\
    \  local decimals_str_len_value_diff_len_diff_len_diff_len_diff_len=0\n  local\
    \ decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_index=0\n  local\
    \ decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_diff=0\n  local decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_index=0\n\
    \  local decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_diff=0\n \
    \ local decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_index=0\n \
    \ local decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_diff=0\n  local\
    \ decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_index=0\n  local\
    \ decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_diff_len=0\n  local\
    \ decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_index=0\n  local\
    \ decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_diff=0\n  local decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_index=0\n\
    \  local decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_diff_len=0\n\
    \  local decimals_str_len_value_diff_len_diff_len_diff_len_diff_len_index=0\n\
    \  local decimals_str_len_value_diff_len_\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimals_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  local remainder_str=\"\
    \"\n  local decimal_str=\"\"\n  local integer_str=\"\"\n  \n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals_string\n\
    \    local decimals_string_length\n    local decimal_string\n    local decimal_string_length\n\
    \    local truncate_string\n    local truncate_string_length\n    local truncate_string_part\n\
    \    local truncate_string_part_length\n    local truncate_string_part_length2\n\
    \    local truncate_string_part_length3\n    local truncate_string_part_length4\n\
    \    local truncate_string_part_length5\n    local truncate_string_part_length6\n\
    \    local truncate_string_part_length7\n    local truncate_string_part_length8\n\
    \    local truncate_string_part_length9\n    local truncate_string_part_length10\n\
    \    local truncate_string_part_length11\n    local truncate_string_part_length12\n\
    \    local truncate_string_part_length13\n    local truncate_string_part_length14\n\
    \    local truncate_string_part_length15\n    local truncate_string_part_length16\n\
    \    local truncate_string_part_length17\n    local truncate_string_part_length18\n\
    \    local truncate_string_part_length19\n    local truncate_string_part_length20\n\
    \    local truncate_string_part_length21\n    local truncate_string_part_length22\n\
    \    local truncate_string_part_length23\n    local truncate_string_part_length24\n\
    \    local truncate_string_part_length25\n    local truncate_string_part_length26\n\
    \    local truncate_string_part_length27\n    local truncate_string_part_length28\n\
    \    local truncate_string_part_length29\n    local truncate_string_part_length30\n\
    \    local truncate_string_part_length31\n    local truncate_string_part_length32\n\
    \    local truncate_string_part_length33\n    local truncate_string_part_length34\n\
    \    local truncate_string_part_length35\n    local truncate_string_part_length36\n\
    \    local truncate_string_part_length37\n    local truncate_string_part_length38\n\
    \    local truncate_string_part_length39\n    local truncate_string_part_length40\n\
    \    local truncate_string_part_length41\n    local truncate_string_part_length42\n\
    \    local truncate_string_part_length43\n    local truncate_string_part_length44\n\
    \    local truncate_string_part_length45\n    local truncate_string_part_length46\n\
    \    local truncate_string_part_length47\n    local truncate_string_part_length48\n\
    \    local truncate_string_part_length49\n    local truncate_string_part_length50\n\
    \    local trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_number_in_int=0\n    local trunc_decimals_in_int=0\n\
    \    local trunc_number_in_float=0\n    local trunc_decimals_in_float=0\n    local\
    \ trunc_number_in_str=0\n    local trunc_decimals_in_str=0\n    local trunc_number_in_str_int=0\n\
    \    local trunc_decimals_in_str_int=0\n    local trunc_number_in_str_float=0\n\
    \    local trunc_decimals_in_str_float=0\n    local trunc_number_in_str_str=0\n\
    \    local trunc_decimals_in_str_str=0\n    local trunc_number_in_str_str_int=0\n\
    \    local trunc_decimals_in_str_str_int=0\n    local trunc_number_in_str_str_float=0\n\
    \    local trunc_decimals_in_str_str_float=0\n    local trunc_number_in_str_str_str=0\n\
    \    local trunc_decimals_in_str_str_str=0\n    local trunc_number_in_str_str_str_int=0\n\
    \    local trunc_decimals_in_str_str_str_int=0\n    local trunc_number_in_str_str_str_float=0\n\
    \    local trunc_decimals_in_str_str_str_float=0\n    local trunc_number_in_str_str_str_str=0\n\
    \    local trunc_decimals_in_str_str_str_str=0\n    local trunc_number_in_str_str_str_str_int=0\n\
    \    local trunc_decimals_in_str_str_str_str_int=0\n    local trunc_number_in_str_str_str_str_float=0\n\
    \    local trunc_decimals_in_str_str_str_str_float=0\n    local trunc_number_in_str_str_str_str_str=0\n\
    \    local trunc_decimals_in_str_str_str_str_str=0\n    local trunc_number_in_str_str_str_str_str_int=0\n\
    \    local trunc_decimals_in_str_str_str_str_str_int=0\n    local trunc_number_in_str_str_str_str_str_float=0\n\
    \    local trunc_decimals_in_str_str_str_str_str_float=0\n    local trunc_number_in_str_str_str_str_str_str=0\n\
    \    local trunc_decimals_in_str_str_str_str_str=0\n    local trunc_number_in_str_str_str_str_str_str_int=0\n\
    \    local trunc_decimals_in_str_str_str_str_str_int=0\n    local trunc_number_in_str_str_str_str_str_float=0\n\
    \    local trunc_decimals_in_str_str_str_str_str_float=0\n    local trunc_number_in_str_str_str_str_str_str=0\n\
    \    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_length=0\n    local decimals_string_length_string=\"\
    \"\n    local decimals_string_length_string_len=0\n    local decimals_string_length_string_len_string=\"\
    \"\n    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    \    local decimals_string_length_string_len_string_len=0\n    local decimals_string_length_string_len_string_len=0\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ truncate_decimals=0\n  local truncate_decimals_string=\"\"\n  local truncate_decimals_string2=\"\
    \"\n  local truncate_decimals_string3=\"\"\n  local truncate_decimals_string4=\"\
    \"\n  local truncate_decimals_string5=\"\"\n  local truncate_decimals_string6=\"\
    \"\n  local truncate_decimals_string7=\"\"\n  local truncate_decimals_string8=\"\
    \"\n  local truncate_decimals_string9=\"\"\n  local truncate_decimals_string10=\"\
    \"\n  local truncate_decimals_string11=\"\"\n  local truncate_decimals_string12=\"\
    \"\n  local truncate_decimals_string13=\"\"\n  local truncate_decimals_string14=\"\
    \"\n  local truncate_decimals_string15=\"\"\n  local truncate_decimals_string16=\"\
    \"\n  local truncate_decimals_string17=\"\"\n  local truncate_decimals_string18=\"\
    \"\n  local truncate_decimals_string19=\"\"\n  local truncate_decimals_string20=\"\
    \"\n  local truncate_decimals_string21=\"\"\n  local truncate_decimals_string22=\"\
    \"\n  local truncate_decimals_string23=\"\"\n  local truncate_decimals_string24=\"\
    \"\n  local truncate_decimals_string25=\"\"\n  local truncate_decimals_string26=\"\
    \"\n  local truncate_decimals_string27=\"\"\n  local truncate_decimals_string28=\"\
    \"\n  local truncate_decimals_string29=\"\"\n  local truncate_decimals_string30=\"\
    \"\n  local truncate_decimals_string31=\"\"\n  local truncate_decimals_string32=\"\
    \"\n  local truncate_decimals_string33=\"\"\n  local truncate_decimals_string34=\"\
    \"\n  local truncate_decimals_string35=\"\"\n  local truncate_decimals_string36=\"\
    \"\n  local truncate_decimals_string37=\"\"\n  local truncate_decimals_string38=\"\
    \"\n  local truncate_decimals_string39=\"\"\n  local truncate_decimals_string40=\"\
    \"\n  local truncate_decimals_string41=\"\"\n  local truncate_decimals_string42=\"\
    \"\n  local truncate_decimals_string43=\"\"\n  local truncate_decimals_string44=\"\
    \"\n  local truncate_decimals_string45=\"\"\n  local truncate_decimals_string46=\"\
    \"\n  local truncate_decimals_string47=\"\"\n  local truncate_decimals_string48=\"\
    \"\n  local truncate_decimals_\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local truncate_decimal\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_decimal=0\n  local trunc_decimals_in_number=0\n  local\
    \ trunc_number_in_number=0\n  local trunc_decimals_in_decimal=0\n  local trunc_number_in_trunc_number=0\n\
    \  local trunc_decimals_in_trunc_number=0\n  local trunc_number_in_trunc_decimal=0\n\
    \  local trunc_decimals_in_trunc_decimal=0\n  local trunc_number_in_trunc_trunc_number=0\n\
    \  local trunc_decimals_in_trunc_trunc_number=0\n  local trunc_number_in_trunc_trunc_decimal=0\n\
    \  local trunc_decimals_in_trunc_trunc_decimal=0\n  local trunc_number_in_trunc_trunc_trunc_number=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_number=0\n  local trunc_number_in_trunc_trunc_trunc_decimal=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_decimal=0\n  local trunc_number_in_trunc_trunc_trunc_trunc_number=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_number=0\n  local trunc_number_in_trunc_trunc_trunc_decimal=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_decimal=0\n  local trunc_number_in_trunc_trunc_trunc_trunc_number=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_number=0\n  local trunc_number_in_trunc_trunc_trunc_trunc_decimal=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_decimal=0\n  local trunc_number_in_trunc_trunc_trunc_trunc_number=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_number=0\n  local trunc_number_in_trunc_trunc_trunc_trunc_decimal=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_decimal=0\n  local trunc_number_in_trunc_trunc_trunc_trunc_trunc_number=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_trunc_number=0\n  local trunc_number_in_trunc_trunc_trunc_trunc_trunc_decimal=0\n\
    \  local trunc_decimals_in_trunc_trunc_trunc_trunc_decimal=0\n  local trunc_number_in_trunc_trunc_trunc_trunc_trunc_number=0\n\
    \  local trunc_decimals_in_trunc_trunc_trun\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_float_in_int=0\n \
    \ local trunc_decimals_in_float_in_int=0\n  local trunc_number_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number=0\n  local trunc_number_string=\"\"\n  local trunc_number_string2=\"\
    \"\n  local trunc_number_string3=\"\"\n  local trunc_number_string4=\"\"\n  local\
    \ trunc_number_string5=\"\"\n  local trunc_number_string6=\"\"\n  local trunc_number_string7=\"\
    \"\n  local trunc_number_string8=\"\"\n  local trunc_number_string9=\"\"\n  local\
    \ trunc_number_string10=\"\"\n  local trunc_number_string11=\"\"\n  local trunc_number_string12=\"\
    \"\n  local trunc_number_string13=\"\"\n  local trunc_number_string14=\"\"\n \
    \ local trunc_number_string15=\"\"\n  local trunc_number_string16=\"\"\n  local\
    \ trunc_number_string17=\"\"\n  local trunc_number_string18=\"\"\n  local trunc_number_string19=\"\
    \"\n  local trunc_number_string20=\"\"\n  local trunc_number_string21=\"\"\n \
    \ local trunc_number_string22=\"\"\n  local trunc_number_string23=\"\"\n  local\
    \ trunc_number_string24=\"\"\n  local trunc_number_string25=\"\"\n  local trunc_number_string26=\"\
    \"\n  local trunc_number_string27=\"\"\n  local trunc_number_string28=\"\"\n \
    \ local trunc_number_string29=\"\"\n  local trunc_number_string30=\"\"\n  local\
    \ trunc_number_string31=\"\"\n  local trunc_number_string32=\"\"\n  local trunc_number_string33=\"\
    \"\n  local trunc_number_string34=\"\"\n  local trunc_number_string35=\"\"\n \
    \ local trunc_number_string36=\"\"\n  local trunc_number_string37=\"\"\n  local\
    \ trunc_number_string38=\"\"\n  local trunc_number_string39=\"\"\n  local trunc_number_string40=\"\
    \"\n  local trunc_number_string41=\"\"\n  local trunc_number_string42=\"\"\n \
    \ local trunc_number_string43=\"\"\n  local trunc_number_string44=\"\"\n  local\
    \ trunc_number_string45=\"\"\n  local trunc_number_string46=\"\"\n  local trunc_number_string47=\"\
    \"\n  local trunc_number_string48=\"\"\n  local trunc_number_string49=\"\"\n \
    \ local trunc_number_string50=\"\"\n  local trunc_number_string51=\"\"\n  local\
    \ trunc_number_string52=\"\"\n  local trunc_number_string53=\"\"\n  local trunc_number_string54=\"\
    \"\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimals_string=\"\"\n    local integer_string=\"\"\n\
    \    local remainder_string=\"\"\n    local decimal_string=\"\"\n    local integer_string=\"\
    \"\n    local remainder_string=\"\"\n    local decimal_string=\"\"\n    local\
    \ integer_string=\"\"\n    local remainder_string=\"\"\n    local decimal_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    \n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal_part\n  local integer_part\n\
    \  local remainder\n\n  integer_part=$(echo \"$number\" | awk '{print int($1/1)}')\n\
    \  decimal_part=$(echo \"$number\" | awk '{print int($1 % 1)}')\n\n  while [ \"\
    $decimal_part\" -gt 0 ]; do\n    decimals=$((decimals + 1))\n    decimal_part=$(echo\
    \ \"$decimal_part\" | awk '{print int($1/1)}')\n  done\n\n  remainder=$(echo \"\
    $number\" | awk '{print int($1 % 1)}')\n\n  echo \"$integer_part$decimals\"\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number=\"\"\n  local trunc_number_string=\"\"\n  local trunc_number_string2=\"\
    \"\n  local trunc_number_string3=\"\"\n  local trunc_number_string4=\"\"\n  local\
    \ trunc_number_string5=\"\"\n  local trunc_number_string6=\"\"\n  local trunc_number_string7=\"\
    \"\n  local trunc_number_string8=\"\"\n  local trunc_number_string9=\"\"\n  local\
    \ trunc_number_string10=\"\"\n  local trunc_number_string11=\"\"\n  local trunc_number_string12=\"\
    \"\n  local trunc_number_string13=\"\"\n  local trunc_number_string14=\"\"\n \
    \ local trunc_number_string15=\"\"\n  local trunc_number_string16=\"\"\n  local\
    \ trunc_number_string17=\"\"\n  local trunc_number_string18=\"\"\n  local trunc_number_string19=\"\
    \"\n  local trunc_number_string20=\"\"\n  local trunc_number_string21=\"\"\n \
    \ local trunc_number_string22=\"\"\n  local trunc_number_string23=\"\"\n  local\
    \ trunc_number_string24=\"\"\n  local trunc_number_string25=\"\"\n  local trunc_number_string26=\"\
    \"\n  local trunc_number_string27=\"\"\n  local trunc_number_string28=\"\"\n \
    \ local trunc_number_string29=\"\"\n  local trunc_number_string30=\"\"\n  local\
    \ trunc_number_string31=\"\"\n  local trunc_number_string32=\"\"\n  local trunc_number_string33=\"\
    \"\n  local trunc_number_string34=\"\"\n  local trunc_number_string35=\"\"\n \
    \ local trunc_number_string36=\"\"\n  local trunc_number_string37=\"\"\n  local\
    \ trunc_number_string38=\"\"\n  local trunc_number_string39=\"\"\n  local trunc_number_string40=\"\
    \"\n  local trunc_number_string41=\"\"\n  local trunc_number_string42=\"\"\n \
    \ local trunc_number_string43=\"\"\n  local trunc_number_string44=\"\"\n  local\
    \ trunc_number_string45=\"\"\n  local trunc_number_string46=\"\"\n  local trunc_number_string47=\"\
    \"\n  local trunc_number_string48=\"\"\n  local trunc_number_string49=\"\"\n \
    \ local trunc_number_string50=\"\"\n  local trunc_number_string51=\"\"\n  local\
    \ trunc_number_string52=\"\"\n  local trunc_number_string53=\"\"\n  local trunc_number_string54=\"\
    \"\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_length=0\n  local decimals_string_length_string=\"\"\n  local\
    \ decimals_string_length_string_len=0\n  local decimals_string_length_string_len_string=\"\
    \"\n  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len_string=\"\
    \"\n  local decimals_string_length_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=\"\"\n  local\
    \ decimals_string_length_string_len_string_len\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal_part\n  local integer_part\n\
    \  local remainder\n  local remainder_part\n  local remainder_part_length\n  local\
    \ remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index2\n\
    \  local remainder_part_length_index2\n  local remainder_part_index3\n  local\
    \ remainder_part_length_index3\n  local remainder_part_index4\n  local remainder_part_length_index4\n\
    \  local remainder_part_index5\n  local remainder_part_length_index5\n  local\
    \ remainder_part_index6\n  local remainder_part_length_index6\n  local remainder_part_index7\n\
    \  local remainder_part_length_index7\n  local remainder_part_index8\n  local\
    \ remainder_part_length_index8\n  local remainder_part_index9\n  local remainder_part_length_index9\n\
    \  local remainder_part_index10\n  local remainder_part_length_index10\n  local\
    \ remainder_part_index11\n  local remainder_part_length_index11\n  local remainder_part_index12\n\
    \  local remainder_part_length_index12\n  local remainder_part_index13\n  local\
    \ remainder_part_length_index13\n  local remainder_part_index14\n  local remainder_part_length_index14\n\
    \  local remainder_part_index15\n  local remainder_part_length_index15\n  local\
    \ remainder_part_index16\n  local remainder_part_length_index16\n  local remainder_part_index17\n\
    \  local remainder_part_length_index17\n  local remainder_part_index18\n  local\
    \ remainder_part_length_index18\n  local remainder_part_index19\n  local remainder_part_length_index19\n\
    \  local remainder_part_index20\n  local remainder_part_length_index20\n  local\
    \ remainder_part_index21\n  local remainder_part_length_index21\n  local remainder_part_index22\n\
    \  local remainder_part_length_index22\n  local remainder_part_index23\n  local\
    \ remainder_part_length_index23\n  local remainder_part_index24\n  local remainder_part_length_index24\n\
    \  local remainder_part_index25\n  local remainder_part_length_index25\n  local\
    \ remainder_part_index26\n  local remainder_part_length_index26\n  local remainder_part_index27\n\
    \  local remainder_part_length_index27\n  local remainder_part_index28\n  local\
    \ remainder_part_length_index\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimal_part\n    local decimal_part_string=\"\"\n    local decimal_part_string_index=0\n\
    \    local decimal_part_index=0\n    local decimal_part_length\n    local decimal_part_length_string\n\
    \    local decimal_part_length_string_index\n    local decimal_part_length_length\n\
    \    local decimal_part_length_length_string\n    local decimal_part_length_length_string_index\n\
    \    local decimal_part_length_length_length\n    local decimal_part_length_length_length_string\n\
    \    local decimal_part_length_length_length_string_index\n    local decimal_part_length_length_length_length\n\
    \    local decimal_part_length_length_length_length_string\n    local decimal_part_length_length_length_length_string_index\n\
    \    local decimal_part_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_part_length_length_length_length_length_string_index\n    local\
    \ decimal_part_length_length_length_length_length_length\n    local decimal_part_length_length_length_length_length_string\n\
    \    local decimal_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=${2:-0}\n  local integer=${number%.*}\n\
    \  local decimal=${number#*.*}\n  local truncated\n  if [[ $integer -eq 0 ]];\
    \ then\n    truncated=$decimal\n  else\n    truncated=$((integer*10+decimal))\n\
    \  fi\n  if [[ $decimals -eq 0 ]]; then\n    echo \"$truncated\"\n  else\n   \
    \ echo \"$truncated.$decimals\"\n  fi\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_in_decimal=0\n\
    \  local trunc_number_string=\"\"\n  local trunc_number_string_in_decimal=\"\"\
    \n  local trunc_number_string_in_int=\"\"\n  local trunc_number_string_in_int2=\"\
    \"\n  local trunc_number_string_in_int3=\"\"\n  local trunc_number_string_in_int4=\"\
    \"\n  local trunc_number_string_in_int5=\"\"\n  local trunc_number_string_in_int6=\"\
    \"\n  local trunc_number_string_in_int7=\"\"\n  local trunc_number_string_in_int8=\"\
    \"\n  local trunc_number_string_in_int9=\"\"\n  local trunc_number_string_in_int10=\"\
    \"\n  local trunc_number_string_in_int11=\"\"\n  local trunc_number_string_in_int12=\"\
    \"\n  local trunc_number_string_in_int13=\"\"\n  local trunc_number_string_in_int14=\"\
    \"\n  local trunc_number_string_in_int15=\"\"\n  local trunc_number_string_in_int16=\"\
    \"\n  local trunc_number_string_in_int17=\"\"\n  local trunc_number_string_in_int18=\"\
    \"\n  local trunc_number_string_in_int19=\"\"\n  local trunc_number_string_in_int20=\"\
    \"\n  local trunc_number_string_in_int21=\"\"\n  local trunc_number_string_in_int22=\"\
    \"\n  local trunc_number_string_in_int23=\"\"\n  local trunc_number_string_in_int24=\"\
    \"\n  local trunc_number_string_in_int25=\"\"\n  local trunc_number_string_in_int26=\"\
    \"\n  local trunc_number_string_in_int27=\"\"\n  local trunc_number_string_in_int28=\"\
    \"\n  local trunc_number_string_in_int29=\"\"\n  local trunc_number_string_in_int30=\"\
    \"\n  local trunc_number_string_in_int31=\"\"\n  local trunc_number_string_in_int32=\"\
    \"\n  local trunc_number_string_in_int33=\"\"\n  local trunc_number_string_in_int34=\"\
    \"\n  local trunc_number_string_in_int35=\"\"\n  local trunc_number_string_in_int36=\"\
    \"\n  local trunc_number_string_in_int37=\"\"\n  local trunc_number_string_in_int38=\"\
    \"\n  local trunc_number_string_in_int39=\"\"\n  local trunc_number_string_in_int40=\"\
    \"\n  local trunc_number_string_in_int41=\"\"\n  local trunc_number_string_in_int42=\"\
    \"\n  local trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals_string\n\
    \  local decimals_string_reversed\n  local decimals_string_length\n  local decimals_string_length_reversed\n\
    \  local decimals_string_length_reversed_reversed\n  local decimals_string_length_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed\n  local decimals_string_length_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \  local decimals_string_length_reversed_reverse\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_index=0\n  local decimals_string_length=0\n  local decimals_string_length_index=0\n\
    \  local decimals_string_length_index2=0\n  local decimals_string_length_index3=0\n\
    \  local decimals_string_length_index4=0\n  local decimals_string_length_index5=0\n\
    \  local decimals_string_length_index6=0\n  local decimals_string_length_index7=0\n\
    \  local decimals_string_length_index8=0\n  local decimals_string_length_index9=0\n\
    \  local decimals_string_length_index10=0\n  local decimals_string_length_index11=0\n\
    \  local decimals_string_length_index12=0\n  local decimals_string_length_index13=0\n\
    \  local decimals_string_length_index14=0\n  local decimals_string_length_index15=0\n\
    \  local decimals_string_length_index16=0\n  local decimals_string_length_index17=0\n\
    \  local decimals_string_length_index18=0\n  local decimals_string_length_index19=0\n\
    \  local decimals_string_length_index20=0\n  local decimals_string_length_index21=0\n\
    \  local decimals_string_length_index22=0\n  local decimals_string_length_index23=0\n\
    \  local decimals_string_length_index24=0\n  local decimals_string_length_index25=0\n\
    \  local decimals_string_length_index26=0\n  local decimals_string_length_index27=0\n\
    \  local decimals_string_length_index28=0\n  local decimals_string_length_index29=0\n\
    \  local decimals_string_length_index30=0\n  local decimals_string_length_index31=0\n\
    \  local decimals_string_length_index32=0\n  local decimals_string_length_index33=0\n\
    \  local decimals_string_length_index34=0\n  local decimals_string_length_index35=0\n\
    \  local decimals_string_length_index36=0\n  local decimals_string_length_index37=0\n\
    \  local decimals_string_length_index38=0\n  local decimals_string_length_index39=0\n\
    \  local decimals_string_length_index40=0\n  local decimals_string_length_index41=0\n\
    \  local decimals_string_length_index42=0\n  local decimals_string_length_index43=0\n\
    \  local decimals_string_length_index44=0\n  local decimals_string_length_index45=0\n\
    \  local decimals_string_length_index46=0\n  local decimals_string_length_index47=0\n\
    \  local decimals_string_length_index48\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_digits=0\n    local trunc_digits_string=\"\
    \"\n    local trunc_digits_string2=\"\"\n    local trunc_digits_string3=\"\"\n\
    \    local trunc_digits_string4=\"\"\n    local trunc_digits_string5=\"\"\n  \
    \  local trunc_digits_string6=\"\"\n    local trunc_digits_string7=\"\"\n    local\
    \ trunc_digits_string8=\"\"\n    local trunc_digits_string9=\"\"\n    local trunc_digits_string10=\"\
    \"\n    local trunc_digits_string11=\"\"\n    local trunc_digits_string12=\"\"\
    \n    local trunc_digits_string13=\"\"\n    local trunc_digits_string14=\"\"\n\
    \    local trunc_digits_string15=\"\"\n    local trunc_digits_string16=\"\"\n\
    \    local trunc_digits_string17=\"\"\n    local trunc_digits_string18=\"\"\n\
    \    local trunc_digits_string19=\"\"\n    local trunc_digits_string20=\"\"\n\
    \    local trunc_digits_string21=\"\"\n    local trunc_digits_string22=\"\"\n\
    \    local trunc_digits_string23=\"\"\n    local trunc_digits_string24=\"\"\n\
    \    local trunc_digits_string25=\"\"\n    local trunc_digits_string26=\"\"\n\
    \    local trunc_digits_string27=\"\"\n    local trunc_digits_string28=\"\"\n\
    \    local trunc_digits_string29=\"\"\n    local trunc_digits_string30=\"\"\n\
    \    local trunc_digits_string31=\"\"\n    local trunc_digits_string32=\"\"\n\
    \    local trunc_digits_string33=\"\"\n    local trunc_digits_string34=\"\"\n\
    \    local trunc_digits_string35=\"\"\n    local trunc_digits_string36=\"\"\n\
    \    local trunc_digits_string37=\"\"\n    local trunc_digits_string38=\"\"\n\
    \    local trunc_digits_string39=\"\"\n    local trunc_digits_string40=\"\"\n\
    \    local trunc_digits_string41=\"\"\n    local trunc_digits_string42=\"\"\n\
    \    local trunc_digits_string43=\"\"\n    local trunc_digits_string44=\"\"\n\
    \    local trunc_digits_string45=\"\"\n    local trunc_digits_string46=\"\"\n\
    \    local trunc_digits_string47=\"\"\n    local trunc_digits_string48\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimal_part\n  local decimal_part_string\n  local decimal_part_string_index\n\
    \  local decimal_part_index\n  local decimal_part_index\n  local decimal_part_index_string\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n  local decimal_part_index_string_index\n\
    \  local decimal_part_index_string_index\n\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal=0\n\
    \  local trunc_number=0\n  local remainder=0\n  local remainder_decimal=0\n  local\
    \ remainder_integer=0\n\n  while [ $number -gt 0 ]; do\n    decimal=$(( $decimal\
    \ + 1 ))\n    integer=$(( $integer + 1 ))\n    decimal=$(( $decimal % 10 ))\n\
    \    remainder=$(( $number % 10 ))\n    remainder_decimal=$(( $remainder + $decimal\
    \ ))\n    remainder_integer=$(( $remainder + $integer ))\n    number=$(( $number\
    \ / 10 ))\n  done\n\n  trunc_number=$(( $integer + $decimal ))\n  trunc_number=$((\
    \ $trunc_number % 10 ))\n  trunc_number=$(( $trunc_number + 1 ))\n\n  echo \"\
    $trunc_number\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi0szebqr.sh: line 20: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimals_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number=\"\"\n  local trunc_number_string=\"\"\n  local trunc_number_string2=\"\
    \"\n  local trunc_number_string3=\"\"\n  local trunc_number_string4=\"\"\n  local\
    \ trunc_number_string5=\"\"\n  local trunc_number_string6=\"\"\n  local trunc_number_string7=\"\
    \"\n  local trunc_number_string8=\"\"\n  local trunc_number_string9=\"\"\n  local\
    \ trunc_number_string10=\"\"\n  local trunc_number_string11=\"\"\n  local trunc_number_string12=\"\
    \"\n  local trunc_number_string13=\"\"\n  local trunc_number_string14=\"\"\n \
    \ local trunc_number_string15=\"\"\n  local trunc_number_string16=\"\"\n  local\
    \ trunc_number_string17=\"\"\n  local trunc_number_string18=\"\"\n  local trunc_number_string19=\"\
    \"\n  local trunc_number_string20=\"\"\n  local trunc_number_string21=\"\"\n \
    \ local trunc_number_string22=\"\"\n  local trunc_number_string23=\"\"\n  local\
    \ trunc_number_string24=\"\"\n  local trunc_number_string25=\"\"\n  local trunc_number_string26=\"\
    \"\n  local trunc_number_string27=\"\"\n  local trunc_number_string28=\"\"\n \
    \ local trunc_number_string29=\"\"\n  local trunc_number_string30=\"\"\n  local\
    \ trunc_number_string31=\"\"\n  local trunc_number_string32=\"\"\n  local trunc_number_string33=\"\
    \"\n  local trunc_number_string34=\"\"\n  local trunc_number_string35=\"\"\n \
    \ local trunc_number_string36=\"\"\n  local trunc_number_string37=\"\"\n  local\
    \ trunc_number_string38=\"\"\n  local trunc_number_string39=\"\"\n  local trunc_number_string40=\"\
    \"\n  local trunc_number_string41=\"\"\n  local trunc_number_string42=\"\"\n \
    \ local trunc_number_string43=\"\"\n  local trunc_number_string44=\"\"\n  local\
    \ trunc_number_string45=\"\"\n  local trunc_number_string46=\"\"\n  local trunc_number_string47=\"\
    \"\n  local trunc_number_string48=\"\"\n  local trunc_number_string49=\"\"\n \
    \ local trunc_number_string50=\"\"\n  local trunc_number_string51=\"\"\n  local\
    \ trunc_number_string52=\"\"\n  local trunc_number_string53=\"\"\n  local trunc_number_string54=\"\
    \"\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ decimal=0\n    local remainder=0\n    local decimals_string=\"\"\n    local\
    \ integer_string=\"\"\n    local remainder_string=\"\"\n    local integer_string_length=0\n\
    \    local remainder_string_length=0\n    local integer_string_length_remainder=0\n\
    \    local remainder_string_length_remainder=0\n    local integer_string_length_remainder_remainder=0\n\
    \    local remainder_string_length_remainder_remainder=0\n    local integer_string_length_remainder_remainder_remainder=0\n\
    \    local remainder_string_length_remainder_remainder_remainder=0\n    local\
    \ integer_string_length_remainder_remainder_remainder_remainder=0\n    local remainder_string_length_remainder_remainder_remainder_remainder=0\n\
    \    local integer_string_length_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local remainder_string_length_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local integer_string_length_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local remainder_string_length_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local integer_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local remainder_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local integer_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local remainder_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local integer_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local remainder_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local integer_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local remainder_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local integer_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local remainder_string_length_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local integer_string_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_str=\"\"\n  local\
    \ decimal_str=\"\"\n  local decimal_str_len=0\n  local decimal_str_len2=0\n  local\
    \ decimal_str_len3=0\n  local decimal_str_len4=0\n  local decimal_str_len5=0\n\
    \  local decimal_str_len6=0\n  local decimal_str_len7=0\n  local decimal_str_len8=0\n\
    \  local decimal_str_len9=0\n  local decimal_str_len10=0\n  local decimal_str_len11=0\n\
    \  local decimal_str_len12=0\n  local decimal_str_len13=0\n  local decimal_str_len14=0\n\
    \  local decimal_str_len15=0\n  local decimal_str_len16=0\n  local decimal_str_len17=0\n\
    \  local decimal_str_len18=0\n  local decimal_str_len19=0\n  local decimal_str_len20=0\n\
    \  local decimal_str_len21=0\n  local decimal_str_len22=0\n  local decimal_str_len23=0\n\
    \  local decimal_str_len24=0\n  local decimal_str_len25=0\n  local decimal_str_len26=0\n\
    \  local decimal_str_len27=0\n  local decimal_str_len28=0\n  local decimal_str_len29=0\n\
    \  local decimal_str_len30=0\n  local decimal_str_len31=0\n  local decimal_str_len32=0\n\
    \  local decimal_str_len33=0\n  local decimal_str_len34=0\n  local decimal_str_len35=0\n\
    \  local decimal_str_len36=0\n  local decimal_str_len37=0\n  local decimal_str_len38=0\n\
    \  local decimal_str_len39=0\n  local decimal_str_len40=0\n  local decimal_str_len41=0\n\
    \  local decimal_str_len42=0\n  local decimal_str_len43=0\n  local decimal_str_len44=0\n\
    \  local decimal_str_len45=0\n  local decimal_str_len46=0\n  local decimal_str_len47=0\n\
    \  local decimal_str_len48=0\n  local decimal_str_len49=0\n  local decimal_str_len50=0\n\
    \  local decimal_str_len51=0\n  local decimal_str_len52=0\n  local decimal_str_len53=0\n\
    \  local decimal_str_len54=0\n  local decimal_str_len55=0\n  local decimal_str_len56=0\n\
    \  local decimal_str_len57=0\n  local decimal_str_len58=0\n  local decimal_str_len59=0\n\
    \  local decimal_str_len60=0\n  local decimal_str_len61=0\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_str=\"\"\n\
    \    local trunc_number=\"\"\n    local trunc_number_str=\"\"\n    local trunc_number_str_full=\"\
    \"\n    local trunc_number_str_full_str=\"\"\n    local trunc_number_str_full_str_last=\"\
    \"\n    local trunc_number_str_full_str_last_str=\"\"\n    local trunc_number_str_full_str_last_str_last=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str=\"\"\n    local trunc_number_str_full_str_last_str_last_str_last=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str=\"\"\n    local\
    \ trunc_number_str_full_str_last_str_last_str_last_str_last=\"\"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n    local trunc_number_str_full_str_last_str_last_\n}\n\ncandidate() {\n \
    \   truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_number_index=0\n    local trunc_decimals_index=0\n\
    \    local trunc_number_string=\"\"\n    local trunc_decimals_string=\"\"\n  \
    \  local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimals_string_index=0\n\
    \    local trunc_number_string_index=0\n    local trunc_decimal\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimal\n  while [[ $number -gt 0 ]]; do\n    decimal=$((10#$number %\
    \ 1))\n    decimals=$((decimals + 1))\n    integer=$((integer + decimal))\n  \
    \  remainder=$((number - decimal))\n    number=$((number / 10))\n  done\n  echo\
    \ \"$decimals\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_ag1jf1f.sh: line 16: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local integerPart\n    local integerPartRemainder\n    local decimalPartRemainder\n\
    \    local decimalPartRemainderRemainder\n    local decimalPartRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainder\n    local decimalPartRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemain\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n  local decimal\n  local remainder\n  local decimal\n  local\
    \ remainder\n  local decimal\n  local remainder\n  local decimal\n  local remainder\n\
    \  local decimal\n  local remainder\n  local decimal\n  local remainder\n  local\
    \ decimal\n  local remainder\n  local decimal\n  local remainder\n  local decimal\n\
    \  local remainder\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local truncate_string=\"\"\n    local truncate_string2=\"\"\n    local truncate_string3=\"\
    \"\n    local truncate_string4=\"\"\n    local truncate_string5=\"\"\n    local\
    \ truncate_string6=\"\"\n    local truncate_string7=\"\"\n    local truncate_string8=\"\
    \"\n    local truncate_string9=\"\"\n    local truncate_string10=\"\"\n    local\
    \ truncate_string11=\"\"\n    local truncate_string12=\"\"\n    local truncate_string13=\"\
    \"\n    local truncate_string14=\"\"\n    local truncate_string15=\"\"\n    local\
    \ truncate_string16=\"\"\n    local truncate_string17=\"\"\n    local truncate_string18=\"\
    \"\n    local truncate_string19=\"\"\n    local truncate_string20=\"\"\n    local\
    \ truncate_string21=\"\"\n    local truncate_string22=\"\"\n    local truncate_string23=\"\
    \"\n    local truncate_string24=\"\"\n    local truncate_string25=\"\"\n    local\
    \ truncate_string26=\"\"\n    local truncate_string27=\"\"\n    local truncate_string28=\"\
    \"\n    local truncate_string29=\"\"\n    local truncate_string30=\"\"\n    local\
    \ truncate_string31=\"\"\n    local truncate_string32=\"\"\n    local truncate_string33=\"\
    \"\n    local truncate_string34=\"\"\n    local truncate_string35=\"\"\n    local\
    \ truncate_string36=\"\"\n    local truncate_string37=\"\"\n    local truncate_string38=\"\
    \"\n    local truncate_string39=\"\"\n    local truncate_string40=\"\"\n    local\
    \ truncate_string41=\"\"\n    local truncate_string42=\"\"\n    local truncate_string43=\"\
    \"\n    local truncate_string44=\"\"\n    local truncate_string45=\"\"\n    local\
    \ truncate_string46=\"\"\n    local truncate_string47=\"\"\n    local truncate_string48=\"\
    \"\n    local truncate_string49=\"\"\n    local truncate_string50=\"\"\n    local\
    \ truncate_string51=\"\"\n    local truncate_string52=\"\"\n    local truncate_string53=\"\
    \"\n    local truncate_string54=\"\"\n    local truncate_string55=\"\"\n    local\
    \ truncate_string56=\"\"\n    local truncate_string57=\"\"\n    local truncate_string58=\"\
    \"\n    local truncate_string59=\"\"\n    local truncate_string60=\"\"\n    local\
    \ truncate_string61=\"\"\n    local truncate_string62\n}\n\ncandidate() {\n  \
    \  truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal_part\n  local integer_part\n\
    \  local remainder\n\n  integer_part=$(echo \"$number\" | awk '{print int($1)}')\n\
    \  decimal_part=$(echo \"$number\" | awk '{print int($1/$1)}')\n  remainder=$((\
    \ $number - $integer_part * $decimal_part ))\n\n  if [ \"$remainder\" -gt 0 ];\
    \ then\n    decimals=$(( $decimals + 1 ))\n  fi\n\n  echo \"$decimal_part\"\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprsx4opjn.sh: line 19: 3.5 - 3 * 1 : syntax error: invalid arithmetic
    operator (error token is ".5 - 3 * 1 ")

    '
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal\n\
    \  local truncate_decimal\n  local truncate_integer\n  local truncate_number\n\
    \  local truncate_number_string\n  local truncate_number_string_with_dots\n  local\
    \ truncate_number_string_with_dots_after_dot\n  local truncate_number_string_with_dots_after_dot_with_dots\n\
    \  local truncate_number_string_with_dots_after_dot_with_dots_after_dot\n  local\
    \ truncate_number_string_with_dots_after_dot_with_dots_after_dot_with_dots\n \
    \ local truncate_number_string_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot\n\
    \  local truncate_number_string_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot\n\
    \  local truncate_number_string_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots\n\
    \  local truncate_number_string_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot\n\
    \  local truncate_number_string_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot\n\
    \  local truncate_number_string_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dots_after_dot_with_dot\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal=0\n\
    \  local decimals_string=\"\"\n  local integer_string=\"\"\n  local integer_part=0\n\
    \  local decimal_part=0\n  local decimal_string=\"\"\n\n  while [[ $number -gt\
    \ 0 ]]; do\n    decimal=$((10#$number % 1))\n    decimals_string=\"$decimals_$decimal\"\
    \n    integer=$((10#$number / 1))\n    integer_string=\"$integer_$integer\"\n\
    \    decimal_part=$((10#$decimal % 1))\n    decimal_string=\"$decimal_$decimal_part\"\
    \n    decimals=$((10#$decimals + 1))\n    number=$((10#$number / 10))\n  done\n\
    \n  echo \"$decimal_string\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph9_tg5ec.sh: line 21: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=${2:-0}\n  local integer=${number%.*}\n\
    \  local decimal=${number#*.}\n  if [[ $integer -eq 0 ]]; then\n    echo \"0\"\
    \n  else\n    echo \"$((10#$integer))\"\n  fi\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_reverse=\"\"\n    local decimals_string_length=0\n\
    \    local decimals_string_length_reverse=0\n    local decimals_string_length_reverse_temp=0\n\
    \    local decimals_string_length_reverse_temp2=0\n    local decimals_string_length_reverse_temp3=0\n\
    \    local decimals_string_length_reverse_temp4=0\n    local decimals_string_length_reverse_temp5=0\n\
    \    local decimals_string_length_reverse_temp6=0\n    local decimals_string_length_reverse_temp7=0\n\
    \    local decimals_string_length_reverse_temp8=0\n    local decimals_string_length_reverse_temp9=0\n\
    \    local decimals_string_length_reverse_temp10=0\n    local decimals_string_length_reverse_temp11=0\n\
    \    local decimals_string_length_reverse_temp12=0\n    local decimals_string_length_reverse_temp13=0\n\
    \    local decimals_string_length_reverse_temp14=0\n    local decimals_string_length_reverse_temp15=0\n\
    \    local decimals_string_length_reverse_temp16=0\n    local decimals_string_length_reverse_temp17=0\n\
    \    local decimals_string_length_reverse_temp18=0\n    local decimals_string_length_reverse_temp19=0\n\
    \    local decimals_string_length_reverse_temp20=0\n    local decimals_string_length_reverse_temp21=0\n\
    \    local decimals_string_length_reverse_temp22=0\n    local decimals_string_length_reverse_temp23=0\n\
    \    local decimals_string_length_reverse_temp24=0\n    local decimals_string_length_reverse_temp25=0\n\
    \    local decimals_string_length_reverse_temp26=0\n    local decimals_string_length_reverse_temp27=0\n\
    \    local decimals_string_length_reverse_temp28=0\n    local decimals_string_length_reverse_temp29=0\n\
    \    local decimals_string_length_reverse_temp30=0\n    local decimals_string_length_reverse_temp31=0\n\
    \    local decimals_string_length_reverse_temp32=0\n    local decimals_string_length_reverse_temp33=0\n\
    \    local decimals_string_length_reverse_temp34=0\n    local decimals_string_length_reverse_temp35=0\n\
    \    local decimals_string_length_reverse_temp36=0\n    local decimals_string_length_reverse_temp37=0\n\
    \    local decimals_string_length_reverse_temp38=0\n    local decimals_string_length_reverse_temp39=0\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals_string\n\
    \    local decimals_string_length\n    local decimals_string_length_string\n \
    \   local decimals_string_length_string_length\n    local decimals_string_length_string_length_string\n\
    \    local decimals_string_length_string_length_string_length\n    local decimals_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_index=0\n  local decimals_string_length=0\n  local decimals_string_length_index=0\n\
    \  local decimals_string_length_index2=0\n  local decimals_string_length_index3=0\n\
    \  local decimals_string_length_index4=0\n  local decimals_string_length_index5=0\n\
    \  local decimals_string_length_index6=0\n  local decimals_string_length_index7=0\n\
    \  local decimals_string_length_index8=0\n  local decimals_string_length_index9=0\n\
    \  local decimals_string_length_index10=0\n  local decimals_string_length_index11=0\n\
    \  local decimals_string_length_index12=0\n  local decimals_string_length_index13=0\n\
    \  local decimals_string_length_index14=0\n  local decimals_string_length_index15=0\n\
    \  local decimals_string_length_index16=0\n  local decimals_string_length_index17=0\n\
    \  local decimals_string_length_index18=0\n  local decimals_string_length_index19=0\n\
    \  local decimals_string_length_index20=0\n  local decimals_string_length_index21=0\n\
    \  local decimals_string_length_index22=0\n  local decimals_string_length_index23=0\n\
    \  local decimals_string_length_index24=0\n  local decimals_string_length_index25=0\n\
    \  local decimals_string_length_index26=0\n  local decimals_string_length_index27=0\n\
    \  local decimals_string_length_index28=0\n  local decimals_string_length_index29=0\n\
    \  local decimals_string_length_index30=0\n  local decimals_string_length_index31=0\n\
    \  local decimals_string_length_index32=0\n  local decimals_string_length_index33=0\n\
    \  local decimals_string_length_index34=0\n  local decimals_string_length_index35=0\n\
    \  local decimals_string_length_index36=0\n  local decimals_string_length_index37=0\n\
    \  local decimals_string_length_index38=0\n  local decimals_string_length_index39=0\n\
    \  local decimals_string_length_index40=0\n  local decimals_string_length_index41=0\n\
    \  local decimals_string_length_index42=0\n  local decimals_string_length_index43=0\n\
    \  local decimals_string_length_index44=0\n  local decimals_string_length_index45=0\n\
    \  local decimals_string_length_index46=0\n  local decimals_string_length_index47=0\n\
    \  local decimals_string_length_index48\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_in_int=0\n\
    \  local trunc_number_in_float=0\n  local trunc_number_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimal=0\n    local decimals=0\n    local i=0\n    local\
    \ decimal=0\n    local decimals=0\n    local remainder=0\n    local integer=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local i=0\n    local decimal=0\n    local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number\n  local trunc_number_index\n\
    \  local trunc_number_index2\n  local trunc_number_index3\n  local trunc_number_index4\n\
    \  local trunc_number_index5\n  local trunc_number_index6\n  local trunc_number_index7\n\
    \  local trunc_number_index8\n  local trunc_number_index9\n  local trunc_number_index10\n\
    \  local trunc_number_index11\n  local trunc_number_index12\n  local trunc_number_index13\n\
    \  local trunc_number_index14\n  local trunc_number_index15\n  local trunc_number_index16\n\
    \  local trunc_number_index17\n  local trunc_number_index18\n  local trunc_number_index19\n\
    \  local trunc_number_index20\n  local trunc_number_index21\n  local trunc_number_index22\n\
    \  local trunc_number_index23\n  local trunc_number_index24\n  local trunc_number_index25\n\
    \  local trunc_number_index26\n  local trunc_number_index27\n  local trunc_number_index28\n\
    \  local trunc_number_index29\n  local trunc_number_index30\n  local trunc_number_index31\n\
    \  local trunc_number_index32\n  local trunc_number_index33\n  local trunc_number_index34\n\
    \  local trunc_number_index35\n  local trunc_number_index36\n  local trunc_number_index37\n\
    \  local trunc_number_index38\n  local trunc_number_index39\n  local trunc_number_index40\n\
    \  local trunc_number_index41\n  local trunc_number_index42\n  local trunc_number_index43\n\
    \  local trunc_number_index44\n  local trunc_number_index45\n  local trunc_number_index46\n\
    \  local trunc_number_index47\n  local trunc_number_index48\n  local trunc_number_index49\n\
    \  local trunc_number_index50\n  local trunc_number_index51\n  local trunc_number_index52\n\
    \  local trunc_number_index53\n  local trunc_number_index54\n  local trunc_number_index55\n\
    \  local trunc_number_index56\n  local trunc_number_index57\n  local trunc_number_index58\n\
    \  local trunc_number_index59\n  local trunc_number_index60\n  local trunc_number_index61\n\
    \  local trunc_number_index62\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_index\n  local trunc_number_index2\n  local trunc_number_index3\n\
    \  local trunc_number_index4\n  local trunc_number_index5\n  local trunc_number_index6\n\
    \  local trunc_number_index7\n  local trunc_number_index8\n  local trunc_number_index9\n\
    \  local trunc_number_index10\n  local trunc_number_index11\n  local trunc_number_index12\n\
    \  local trunc_number_index13\n  local trunc_number_index14\n  local trunc_number_index15\n\
    \  local trunc_number_index16\n  local trunc_number_index17\n  local trunc_number_index18\n\
    \  local trunc_number_index19\n  local trunc_number_index20\n  local trunc_number_index21\n\
    \  local trunc_number_index22\n  local trunc_number_index23\n  local trunc_number_index24\n\
    \  local trunc_number_index25\n  local trunc_number_index26\n  local trunc_number_index27\n\
    \  local trunc_number_index28\n  local trunc_number_index29\n  local trunc_number_index30\n\
    \  local trunc_number_index31\n  local trunc_number_index32\n  local trunc_number_index33\n\
    \  local trunc_number_index34\n  local trunc_number_index35\n  local trunc_number_index36\n\
    \  local trunc_number_index37\n  local trunc_number_index38\n  local trunc_number_index39\n\
    \  local trunc_number_index40\n  local trunc_number_index41\n  local trunc_number_index42\n\
    \  local trunc_number_index43\n  local trunc_number_index44\n  local trunc_number_index45\n\
    \  local trunc_number_index46\n  local trunc_number_index47\n  local trunc_number_index48\n\
    \  local trunc_number_index49\n  local trunc_number_index50\n  local trunc_number_index51\n\
    \  local trunc_number_index52\n  local trunc_number_index53\n  local trunc_number_index54\n\
    \  local trunc_number_index55\n  local trunc_number_index56\n  local trunc_number_index57\n\
    \  local trunc_number_index58\n  local trunc_number_index59\n  local trunc_number_index60\n\
    \  local trunc_number_index61\n  local trun\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local integer\n\
    \  local remainder\n  local decimals_string\n  local integer_string\n  local remainder_string\n\
    \  local integer_part\n  local decimal_part\n  local remainder_part\n  local result\n\
    \n  decimals_string=$(echo \"$number\" | awk '{printf \"%.0f\", $1}')\n  integer_string=$(echo\
    \ \"$number\" | awk '{printf \"%.0f\", $1}')\n  remainder_string=$(echo \"$number\"\
    \ | awk '{printf \"%.0f\", $1}')\n\n  decimals=$(echo \"$decimals_string\" | awk\
    \ '{printf \"%.0f\", $1}')\n  integer=$(echo \"$integer_string\" | awk '{printf\
    \ \"%.0f\", $1}')\n  remainder=$(echo \"$remainder_string\" | awk '{printf \"\
    %.0f\", $1}')\n\n  integer_part=$(echo \"$integer\" | awk '{printf \"%.0f\", $1}')\n\
    \  decimal_part=$(echo \"$decimals\" | awk '{printf \"%.0f\", $1}')\n  remainder_part=$(echo\
    \ \"$remainder\" | awk '{printf \"%.0f\", $1}')\n\n  result=$(echo \"$decimal_part\"\
    \ | awk '{printf \"%.0f\", $1}')\n\n  echo \"$result\"\n}\n\ncandidate() {\n \
    \   truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \n  decimal=$(echo \"$number\" | awk '{print $1; exit}')\n  decimals=$(echo \"\
    $number\" | awk '{print $1; exit}')\n\n  trunc_number=$(( number - decimal ))\n\
    \n  echo \"$trunc_number\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdayjc__c.sh: line 19: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_index=0\n  local decimals_string_index2=0\n  local decimals_string_index3=0\n\
    \  local decimals_string_index4=0\n  local decimals_string_index5=0\n  local decimals_string_index6=0\n\
    \  local decimals_string_index7=0\n  local decimals_string_index8=0\n  local decimals_string_index9=0\n\
    \  local decimals_string_index10=0\n  local decimals_string_index11=0\n  local\
    \ decimals_string_index12=0\n  local decimals_string_index13=0\n  local decimals_string_index14=0\n\
    \  local decimals_string_index15=0\n  local decimals_string_index16=0\n  local\
    \ decimals_string_index17=0\n  local decimals_string_index18=0\n  local decimals_string_index19=0\n\
    \  local decimals_string_index20=0\n  local decimals_string_index21=0\n  local\
    \ decimals_string_index22=0\n  local decimals_string_index23=0\n  local decimals_string_index24=0\n\
    \  local decimals_string_index25=0\n  local decimals_string_index26=0\n  local\
    \ decimals_string_index27=0\n  local decimals_string_index28=0\n  local decimals_string_index29=0\n\
    \  local decimals_string_index30=0\n  local decimals_string_index31=0\n  local\
    \ decimals_string_index32=0\n  local decimals_string_index33=0\n  local decimals_string_index34=0\n\
    \  local decimals_string_index35=0\n  local decimals_string_index36=0\n  local\
    \ decimals_string_index37=0\n  local decimals_string_index38=0\n  local decimals_string_index39=0\n\
    \  local decimals_string_index40=0\n  local decimals_string_index41=0\n  local\
    \ decimals_string_index42=0\n  local decimals_string_index43=0\n  local decimals_string_index44=0\n\
    \  local decimals_string_index45=0\n  local decimals_string_index46=0\n  local\
    \ decimals_string_index47=0\n  local decimals_string_index48=0\n  local decimals_string_index49=0\n\
    \  local decimals_string_index50=0\n  local decimals_string_index51=0\n  local\
    \ decimals_string_index52=0\n  local decimals_string_index53=0\n  local decimals_string_index54=0\n\
    \  local decimals_string_index55=0\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_length=0\n    local decimals_string_length_string=\"\
    \"\n    local decimals_string_length_string_length=0\n    local decimals_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length=0\n    local\
    \ decimals_string_length_string_length_string_length_string=\"\"\n    local decimals_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal\n\
    \  local remainder\n  local remainder_decimal\n  local remainder_integer\n  local\
    \ remainder_remainder\n  local remainder_remainder_decimal\n  local remainder_remainder_integer\n\
    \  local remainder_remainder_remainder\n  local remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_integer\n  local remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_decimal\n  local remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder\n  local remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_integer\n  local remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_str=\"\"\n\
    \    local trunc_number=\"\"\n    local trunc_number_str=\"\"\n    local trunc_number_str_decimals=\"\
    \"\n    local trunc_number_str_decimals_str=\"\"\n    local trunc_number_str_decimals_str_last=\"\
    \"\n    local trunc_number_str_decimals_str_last_last=\"\"\n    local trunc_number_str_decimals_str_last_last2=\"\
    \"\n    local trunc_number_str_decimals_str_last_last3=\"\"\n    local trunc_number_str_decimals_str_last_last4=\"\
    \"\n    local trunc_number_str_decimals_str_last_last5=\"\"\n    local trunc_number_str_decimals_str_last_last6=\"\
    \"\n    local trunc_number_str_decimals_str_last_last7=\"\"\n    local trunc_number_str_decimals_str_last_last8=\"\
    \"\n    local trunc_number_str_decimals_str_last_last9=\"\"\n    local trunc_number_str_decimals_str_last_last10=\"\
    \"\n    local trunc_number_str_decimals_str_last_last11=\"\"\n    local trunc_number_str_decimals_str_last_last12=\"\
    \"\n    local trunc_number_str_decimals_str_last_last13=\"\"\n    local trunc_number_str_decimals_str_last_last14=\"\
    \"\n    local trunc_number_str_decimals_str_last_last15=\"\"\n    local trunc_number_str_decimals_str_last_last16=\"\
    \"\n    local trunc_number_str_decimals_str_last_last17=\"\"\n    local trunc_number_str_decimals_str_last_last18=\"\
    \"\n    local trunc_number_str_decimals_str_last_last19=\"\"\n    local trunc_number_str_decimals_str_last_last20=\"\
    \"\n    local trunc_number_str_decimals_str_last_last21=\"\"\n    local trunc_number_str_decimals_str_last_last22=\"\
    \"\n    local trunc_number_str_decimals_str_last_last23=\"\"\n    local trunc_number_str_decimals_str_last_last24=\"\
    \"\n    local trunc_number_str_decimals_str_last_last25=\"\"\n    local trunc_number_str_decimals_str_last_last26=\"\
    \"\n    local trunc_number_str_decimals_str_last_last27=\"\"\n    local trunc_number_str_decimals_str_last_last28=\"\
    \"\n    local trunc_number_str_decimals_str_last_last29=\"\"\n    local trunc_number_str_decimal\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimal_string=\"\"\n  local truncate_string=\"\"\n  local truncate_number=\"\
    \"\n  local truncate_number_string=\"\"\n  local truncate_number_string2=\"\"\n\
    \  local truncate_number_string3=\"\"\n  local truncate_number_string4=\"\"\n\
    \  local truncate_number_string5=\"\"\n  local truncate_number_string6=\"\"\n\
    \  local truncate_number_string7=\"\"\n  local truncate_number_string8=\"\"\n\
    \  local truncate_number_string9=\"\"\n  local truncate_number_string10=\"\"\n\
    \  local truncate_number_string11=\"\"\n  local truncate_number_string12=\"\"\n\
    \  local truncate_number_string13=\"\"\n  local truncate_number_string14=\"\"\n\
    \  local truncate_number_string15=\"\"\n  local truncate_number_string16=\"\"\n\
    \  local truncate_number_string17=\"\"\n  local truncate_number_string18=\"\"\n\
    \  local truncate_number_string19=\"\"\n  local truncate_number_string20=\"\"\n\
    \  local truncate_number_string21=\"\"\n  local truncate_number_string22=\"\"\n\
    \  local truncate_number_string23=\"\"\n  local truncate_number_string24=\"\"\n\
    \  local truncate_number_string25=\"\"\n  local truncate_number_string26=\"\"\n\
    \  local truncate_number_string27=\"\"\n  local truncate_number_string28=\"\"\n\
    \  local truncate_number_string29=\"\"\n  local truncate_number_string30=\"\"\n\
    \  local truncate_number_string31=\"\"\n  local truncate_number_string32=\"\"\n\
    \  local truncate_number_string33=\"\"\n  local truncate_number_string34=\"\"\n\
    \  local truncate_number_string35=\"\"\n  local truncate_number_string36=\"\"\n\
    \  local truncate_number_string37=\"\"\n  local truncate_number_string38=\"\"\n\
    \  local truncate_number_string39=\"\"\n  local truncate_number_string40=\"\"\n\
    \  local truncate_number_string41=\"\"\n  local truncate_number_string42=\"\"\n\
    \  local truncate_number_string43=\"\"\n  local truncate_number_string44=\"\"\n\
    \  local truncate_number_string45=\"\"\n  local truncate_number_string46=\"\"\n\
    \  local truncate_number_string47=\"\"\n  local truncate_number_string48=\"\"\n\
    \  local truncate_number_string49=\"\"\n  local truncate_number_string50=\"\"\n\
    \  local truncate_number_string51=\"\"\n  local truncate_number_string52=\"\"\n\
    \  local truncate_number_string\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=${2:-0}\n  local integer=${number%.*}\n\
    \  local decimal=${number#*.}\n  local decimals=${decimals}\n  if [[ $integer\
    \ == \"\" ]]; then\n    echo \"0\"\n  else\n    echo \"$((10#$integer))\"\n  fi\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n  local decimal\n  local decimals\n  local remainder\n\
    \  local decimal\n  local decimals\n  local remainder\n  local decimal\n  local\
    \ decimals\n  local remainder\n\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number\n  local trunc_number_int trunc_number_dec\n  local trunc_number_string\n\
    \n  trunc_number_int=$(echo \"$number\" | awk '{print $1}')\n  trunc_number_dec=$(echo\
    \ \"$number\" | awk '{print $2}')\n\n  if [ \"$trunc_number_int\" -gt \"$trunc_number_dec\"\
    \ ]; then\n    decimals=$((trunc_number_dec-trunc_number_int))\n  else\n    decimals=$((trunc_number_int-trunc_number_dec))\n\
    \  fi\n\n  decimals_string=$(echo \"$decimals\" | awk '{printf \"%.0f\", $0}')\n\
    \n  trunc_number=$((trunc_number_int+decimals))\n  trunc_number_string=$(echo\
    \ \"$trunc_number\" | awk '{printf \"%.0f\", $0}')\n\n  echo \"$trunc_number_string$decimals_string\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxvjhe8me.sh: line 21: [: 3.5: integer expression expected

    /tmp/tmpxvjhe8me.sh: line 24: 3.5: syntax error: invalid arithmetic operator (error
    token is ".5")

    '
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local decimalPartNumber\n  local decimalPartNumberString\n  local decimalPartNumberStringLength\n\
    \  local decimalPartNumberStringLengthBeforeDot\n  local decimalPartNumberStringLengthAfterDot\n\
    \  local decimalPartNumberStringLengthAfterDotAfterDot\n  local decimalPartNumberStringLengthAfterDotBeforeDot\n\
    \  local decimalPartNumberStringLengthBeforeDotBeforeDot\n  local decimalPartNumberStringLengthBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthBeforeDotBeforeDotAfterDot\n  local decimalPartNumberStringLengthAfterDotAfterDot\n\
    \  local decimalPartNumberStringLengthAfterDotBeforeDot\n  local decimalPartNumberStringLengthBeforeDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthBeforeDotAfterDotBeforeDot\n  local decimalPartNumberStringLengthAfterDotAfterDotBeforeDot\n\
    \  local decimalPartNumberStringLengthAfterDotBeforeDotBeforeDot\n  local decimalPartNumberStringLengthBeforeDotBeforeDotAfterDotAfterDot\n\
    \  local decimalPartNumberStringLengthBeforeDotAfterDotBeforeDotBeforeDot\n  local\
    \ decimalPartNumberStringLengthAfterDotAfterDotBeforeDotBeforeDot\n  local decimalPartNumberStringLengthAfterDotBeforeDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthBeforeDotBeforeDotAfterDotAfterDotBeforeDot\n\
    \  local decimalPartNumberStringLengthBeforeDotAfterDotBeforeDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthAfterDotAfterDotBeforeDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthAfterDotBeforeDotBeforeDotAfterDotBeforeDot\n\
    \  local decimalPartNumberStringLengthBeforeDotBeforeDotAfterDotAfterDotBeforeDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthBeforeDotAfterDotBeforeDotBeforeDotAfterDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthAfterDotAfterDotBeforeDotBeforeDotAfterDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthAfterDotBeforeDotBeforeDotAfterDotBeforeDotAfterDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthBeforeDotBeforeDotAfterDotBeforeDotAfterDotBeforeDotAfterDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthAfterDotAfterDotBeforeDotBeforeDotAfterDotBeforeDotAfterDotBeforeDotAfterDot\n\
    \  local decimalPartNumberStringLengthBeforeDotBeforeDotAfterDotBeforeDotAfterDotBeforeDotAfterDotBeforeDotAfterDotBeforeDotAfterDot\n\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ decimal=0\n    local decimals_string=\"\"\n    local integer_string=\"\"\n \
    \   local truncate_string=\"\"\n    local truncate_string2=\"\"\n    local truncate_string3=\"\
    \"\n    local truncate_string4=\"\"\n    local truncate_string5=\"\"\n    local\
    \ truncate_string6=\"\"\n    local truncate_string7=\"\"\n    local truncate_string8=\"\
    \"\n    local truncate_string9=\"\"\n    local truncate_string10=\"\"\n    local\
    \ truncate_string11=\"\"\n    local truncate_string12=\"\"\n    local truncate_string13=\"\
    \"\n    local truncate_string14=\"\"\n    local truncate_string15=\"\"\n    local\
    \ truncate_string16=\"\"\n    local truncate_string17=\"\"\n    local truncate_string18=\"\
    \"\n    local truncate_string19=\"\"\n    local truncate_string20=\"\"\n    local\
    \ truncate_string21=\"\"\n    local truncate_string22=\"\"\n    local truncate_string23=\"\
    \"\n    local truncate_string24=\"\"\n    local truncate_string25=\"\"\n    local\
    \ truncate_string26=\"\"\n    local truncate_string27=\"\"\n    local truncate_string28=\"\
    \"\n    local truncate_string29=\"\"\n    local truncate_string30=\"\"\n    local\
    \ truncate_string31=\"\"\n    local truncate_string32=\"\"\n    local truncate_string33=\"\
    \"\n    local truncate_string34=\"\"\n    local truncate_string35=\"\"\n    local\
    \ truncate_string36=\"\"\n    local truncate_string37=\"\"\n    local truncate_string38=\"\
    \"\n    local truncate_string39=\"\"\n    local truncate_string40=\"\"\n    local\
    \ truncate_string41=\"\"\n    local truncate_string42=\"\"\n    local truncate_string43=\"\
    \"\n    local truncate_string44=\"\"\n    local truncate_string45=\"\"\n    local\
    \ truncate_string46=\"\"\n    local truncate_string47=\"\"\n    local truncate_string48=\"\
    \"\n    local truncate_string49=\"\"\n    local truncate_string50=\"\"\n    local\
    \ truncate_string51=\"\"\n    local truncate_string52=\"\"\n    local truncate_string53=\"\
    \"\n    local truncate_string54=\"\"\n    local truncate_string55=\"\"\n    local\
    \ truncate_string56=\"\"\n    local truncate_string57=\"\"\n    local truncate_string58=\"\
    \"\n    local truncate_string59=\"\"\n    local truncate_string60\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal\n\
    \  while [[ $number -gt 0 ]]; do\n    decimal=$((10#$number % 1))\n    integer=$((10#$number\
    \ / 1))\n    decimals=$((decimals + 1))\n    number=$((10#$integer + decimal))\n\
    \  done\n  echo \"$decimals\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpji92a3jj.sh: line 15: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ decimal=0\n    local remainder=0\n\n    if [[ $number == *\".\"* ]]; then\n\
    \        decimals=${#number}\n        integer=${number%.*}\n        decimal=${number#*.}\n\
    \        remainder=${number%%.*}\n    else\n        decimals=0\n        integer=${number}\n\
    \        decimal=0\n        remainder=0\n    fi\n\n    if [[ $integer -lt $1 ]];\
    \ then\n        integer=$1\n    fi\n\n    if [[ $decimal -lt 1 ]]; then\n    \
    \    decimal=1\n    fi\n\n    echo \"$integer $decimal\"\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpznppmj0p.sh: line 29: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number1=0\n\
    \  local trunc_number2=0\n  local trunc_number3=0\n  local trunc_number4=0\n \
    \ local trunc_number5=0\n  local trunc_number6=0\n  local trunc_number7=0\n  local\
    \ trunc_number8=0\n  local trunc_number9=0\n  local trunc_number10=0\n  local\
    \ trunc_number11=0\n  local trunc_number12=0\n  local trunc_number13=0\n  local\
    \ trunc_number14=0\n  local trunc_number15=0\n  local trunc_number16=0\n  local\
    \ trunc_number17=0\n  local trunc_number18=0\n  local trunc_number19=0\n  local\
    \ trunc_number20=0\n  local trunc_number21=0\n  local trunc_number22=0\n  local\
    \ trunc_number23=0\n  local trunc_number24=0\n  local trunc_number25=0\n  local\
    \ trunc_number26=0\n  local trunc_number27=0\n  local trunc_number28=0\n  local\
    \ trunc_number29=0\n  local trunc_number30=0\n  local trunc_number31=0\n  local\
    \ trunc_number32=0\n  local trunc_number33=0\n  local trunc_number34=0\n  local\
    \ trunc_number35=0\n  local trunc_number36=0\n  local trunc_number37=0\n  local\
    \ trunc_number38=0\n  local trunc_number39=0\n  local trunc_number40=0\n  local\
    \ trunc_number41=0\n  local trunc_number42=0\n  local trunc_number43=0\n  local\
    \ trunc_number44=0\n  local trunc_number45=0\n  local trunc_number46=0\n  local\
    \ trunc_number47=0\n  local trunc_number48=0\n  local trunc_number49=0\n  local\
    \ trunc_number50=0\n  local trunc_number51=0\n  local trunc_number52=0\n  local\
    \ trunc_number53=0\n  local trunc_number54=0\n  local trunc_number55=0\n  local\
    \ trunc_number56=0\n  local trunc_number57=0\n  local trunc_number58=0\n  local\
    \ trunc_number59=0\n  local trunc_number60=0\n  local trunc_number61=0\n  local\
    \ trunc_number\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal_part\n  local integer_part\n\
    \  local remainder\n  local remainder_part\n  local truncate_result\n\n  integer_part=$((\
    \ ${number} / 10 ))\n  remainder=$(( ${number} - ${integer_part} * 10 ))\n  decimal_part=$((\
    \ ${remainder} / 10 ))\n  remainder_part=$(( ${remainder} - ${decimal_part} *\
    \ 10 ))\n\n  if (( ${decimal_part} > 0 ))\n  then\n    truncate_result=$(( ${decimal_part}\
    \ * 10 ))\n  else\n    truncate_result=$(( ${remainder_part} * 10 ))\n  fi\n\n\
    \  echo \"${truncate_result}\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc0qn8ap3.sh: line 19: 3.5 / 10 : syntax error: invalid arithmetic
    operator (error token is ".5 / 10 ")

    '
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_float_in_int=0\n \
    \ local trunc_decimals_in_float_in_int=0\n  local trunc_number_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_reverse=\"\"\n  local decimals_string_reverse_reverse=\"\"\n\
    \  local decimals_string_reverse_string=\"\"\n  local decimals_string_reverse_string_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse=\"\"\n  local decimals_string_reverse_string_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse=\"\"\
    \n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse=\"\"\n\
    \  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string_reverse_string_reverse_reverse_reverse_reverse_reverse=\"\
    \"\n  local decimals_string\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local trunc_number=0\n    local trunc_number_string=\"\"\n    local trunc_number_string2=\"\
    \"\n    local trunc_number_string3=\"\"\n    local trunc_number_string4=\"\"\n\
    \    local trunc_number_string5=\"\"\n    local trunc_number_string6=\"\"\n  \
    \  local trunc_number_string7=\"\"\n    local trunc_number_string8=\"\"\n    local\
    \ trunc_number_string9=\"\"\n    local trunc_number_string10=\"\"\n    local trunc_number_string11=\"\
    \"\n    local trunc_number_string12=\"\"\n    local trunc_number_string13=\"\"\
    \n    local trunc_number_string14=\"\"\n    local trunc_number_string15=\"\"\n\
    \    local trunc_number_string16=\"\"\n    local trunc_number_string17=\"\"\n\
    \    local trunc_number_string18=\"\"\n    local trunc_number_string19=\"\"\n\
    \    local trunc_number_string20=\"\"\n    local trunc_number_string21=\"\"\n\
    \    local trunc_number_string22=\"\"\n    local trunc_number_string23=\"\"\n\
    \    local trunc_number_string24=\"\"\n    local trunc_number_string25=\"\"\n\
    \    local trunc_number_string26=\"\"\n    local trunc_number_string27=\"\"\n\
    \    local trunc_number_string28=\"\"\n    local trunc_number_string29=\"\"\n\
    \    local trunc_number_string30=\"\"\n    local trunc_number_string31=\"\"\n\
    \    local trunc_number_string32=\"\"\n    local trunc_number_string33=\"\"\n\
    \    local trunc_number_string34=\"\"\n    local trunc_number_string35=\"\"\n\
    \    local trunc_number_string36=\"\"\n    local trunc_number_string37=\"\"\n\
    \    local trunc_number_string38=\"\"\n    local trunc_number_string39=\"\"\n\
    \    local trunc_number_string40=\"\"\n    local trunc_number_string41=\"\"\n\
    \    local trunc_number_string42=\"\"\n    local trunc_number_string43=\"\"\n\
    \    local trunc_number_string44=\"\"\n    local trunc_number_string45=\"\"\n\
    \    local trunc_number_string46=\"\"\n    local trunc_number_string47=\"\"\n\
    \    local trunc_number_string48=\"\"\n    local trunc_number_string49=\"\"\n\
    \    local trunc_number_string50=\"\"\n    local trunc_number_string51=\"\"\n\
    \    local trunc_number_string52=\"\"\n    local trunc_number_string53=\"\"\n\
    \    local trunc_number_string54=\"\"\n    \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local integer\n\
    \    local truncate_decimal\n    local truncate_decimals\n    local truncate_integer\n\
    \    local truncate_number\n    local truncate_numbers=()\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_in_decimal=0\n\
    \  local trunc_number_string=\"\"\n  local trunc_number_string_in_decimal=\"\"\
    \n  local trunc_number_string_in_int=\"\"\n  local trunc_number_string_in_int2=\"\
    \"\n  local trunc_number_string_in_int3=\"\"\n  local trunc_number_string_in_int4=\"\
    \"\n  local trunc_number_string_in_int5=\"\"\n  local trunc_number_string_in_int6=\"\
    \"\n  local trunc_number_string_in_int7=\"\"\n  local trunc_number_string_in_int8=\"\
    \"\n  local trunc_number_string_in_int9=\"\"\n  local trunc_number_string_in_int10=\"\
    \"\n  local trunc_number_string_in_int11=\"\"\n  local trunc_number_string_in_int12=\"\
    \"\n  local trunc_number_string_in_int13=\"\"\n  local trunc_number_string_in_int14=\"\
    \"\n  local trunc_number_string_in_int15=\"\"\n  local trunc_number_string_in_int16=\"\
    \"\n  local trunc_number_string_in_int17=\"\"\n  local trunc_number_string_in_int18=\"\
    \"\n  local trunc_number_string_in_int19=\"\"\n  local trunc_number_string_in_int20=\"\
    \"\n  local trunc_number_string_in_int21=\"\"\n  local trunc_number_string_in_int22=\"\
    \"\n  local trunc_number_string_in_int23=\"\"\n  local trunc_number_string_in_int24=\"\
    \"\n  local trunc_number_string_in_int25=\"\"\n  local trunc_number_string_in_int26=\"\
    \"\n  local trunc_number_string_in_int27=\"\"\n  local trunc_number_string_in_int28=\"\
    \"\n  local trunc_number_string_in_int29=\"\"\n  local trunc_number_string_in_int30=\"\
    \"\n  local trunc_number_string_in_int31=\"\"\n  local trunc_number_string_in_int32=\"\
    \"\n  local trunc_number_string_in_int33=\"\"\n  local trunc_number_string_in_int34=\"\
    \"\n  local trunc_number_string_in_int35=\"\"\n  local trunc_number_string_in_int36=\"\
    \"\n  local trunc_number_string_in_int37=\"\"\n  local trunc_number_string_in_int38=\"\
    \"\n  local trunc_number_string_in_int39=\"\"\n  local trunc_number_string_in_int40=\"\
    \"\n  local trunc_number_string_in_int41=\"\"\n  local trunc_number_string_in_int42=\"\
    \"\n  local trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_number_index=0\n    local trunc_number_index2=0\n    local trunc_number_index3=0\n\
    \    local trunc_number_index4=0\n    local trunc_number_index5=0\n    local trunc_number_index6=0\n\
    \    local trunc_number_index7=0\n    local trunc_number_index8=0\n    local trunc_number_index9=0\n\
    \    local trunc_number_index10=0\n    local trunc_number_index11=0\n    local\
    \ trunc_number_index12=0\n    local trunc_number_index13=0\n    local trunc_number_index14=0\n\
    \    local trunc_number_index15=0\n    local trunc_number_index16=0\n    local\
    \ trunc_number_index17=0\n    local trunc_number_index18=0\n    local trunc_number_index19=0\n\
    \    local trunc_number_index20=0\n    local trunc_number_index21=0\n    local\
    \ trunc_number_index22=0\n    local trunc_number_index23=0\n    local trunc_number_index24=0\n\
    \    local trunc_number_index25=0\n    local trunc_number_index26=0\n    local\
    \ trunc_number_index27=0\n    local trunc_number_index28=0\n    local trunc_number_index29=0\n\
    \    local trunc_number_index30=0\n    local trunc_number_index31=0\n    local\
    \ trunc_number_index32=0\n    local trunc_number_index33=0\n    local trunc_number_index34=0\n\
    \    local trunc_number_index35=0\n    local trunc_number_index36=0\n    local\
    \ trunc_number_index37=0\n    local trunc_number_index38=0\n    local trunc_number_index39=0\n\
    \    local trunc_number_index40=0\n    local trunc_number_index41=0\n    local\
    \ trunc_number_index42=0\n    local trunc_number_index43=0\n    local trunc_number_index44=0\n\
    \    local trunc_number_index45=0\n    local trunc_number_index46=0\n    local\
    \ trunc_number_index47=0\n    local trunc_number_index48=0\n    local trunc_number_index49=0\n\
    \    local trunc_number_index50=0\n    local trunc_number_index51=0\n    local\
    \ trunc_number_index52=0\n    local trunc_number_index53=0\n    local trunc_number_index54=0\n\
    \    local trunc_number_index55=0\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local integerPart\n    local integerPartLength\n    local decimalPartLength\n\
    \    local decimalPartLengthRemainder\n    local decimalPartRemainder\n    local\
    \ decimalPartRemainderLength\n    local decimalPartRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainder\n    local decimalPartRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local\
    \ decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPart\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_float_in_int=0\n \
    \ local trunc_decimals_in_float_in_int=0\n  local trunc_number_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local decimal=0\n    local decimals=0\n    local remainder=0\n    local decimal=0\n\
    \    local decimals=0\n    local remainder=0\n    local decimal=0\n    local decimals=0\n\
    \    local remainder=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local decimal=0\n    local decimals=0\n    local remainder=0\n    local decimal=0\n\
    \    local decimals=0\n    local remainder=0\n    local decimal=0\n    local decimals=0\n\
    \    local remainder=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local decimal=0\n    local decimals=0\n    local remainder=0\n    local decimal=0\n\
    \    local decimals=0\n    local remainder=0\n    local decimal=0\n    local decimals=0\n\
    \    local remainder=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local decimal=0\n    local decimals=0\n    local remainder=0\n    local decimal=0\n\
    \    local decimals=0\n    local remainder=0\n    local decimal=0\n    local decimals=0\n\
    \    local remainder=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local decimal=0\n    local decimals=0\n    local remainder=0\n    local decimal=0\n\
    \    local decimals=0\n    local remainder=0\n    local decimal=0\n    local decimals=0\n\
    \    local remainder=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local decimal=0\n    local decimals=0\n    local remainder=0\n    local decimal=0\n\
    \    local decimals=0\n    local remainder=0\n    local decimal=0\n    local decimals=0\n\
    \    local remainder=0\n    local decimal=0\n    local decimals=0\n    local remainder=0\n\
    \    local decimal=0\n    local decimals=0\n    local remainder=0\n    local decimal=0\n\
    \    local decimals=0\n    local remainder=0\n    local decimal=0\n    local decimals=0\n\
    \    local remainder=0\n    local decimal=0\n    local decimals=0\n    local \n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimals_in_float=0\n  local trunc_number_in_float_with_zero=0\n\
    \  local trunc_decimals_in_float_with_zero=0\n  local trunc_number_in_float_with_zero_after_dot=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot=0\n  local trunc_number_in_float_with_zero_after_dot_with_zero=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot_with_zero=0\n  local trunc_number_in_float_with_zero_after_dot_with_zero_after_dot=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot_with_zero_after_dot=0\n \
    \ local trunc_number_in_float_with_zero_after_dot_with_zero_after_dot_with_zero=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot_with_zero_after_dot_with_zero=0\n\
    \  local trunc_number_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot=0\n\
    \  local trunc_number_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero=0\n\
    \  local trunc_number_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot=0\n\
    \  local trunc_number_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero=0\n\
    \  local trunc_number_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot=0\n\
    \  local trunc_number_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero_after_dot_with_zero=0\n\
    \  local trunc_decimals_in_float_with_zero_after_dot_with_zero_after_dot_with_zero_after_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660048635

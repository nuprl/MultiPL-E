name: HumanEval_108_count_nums
language: sh
prompt: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
  \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a number\
  \ is negative, then its first signed digit will be negative:\n# e.g. -123 has signed\
  \ digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums \"\
  -1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is a space-separated\
  \ list\ncount_nums() {\n"
tests: "}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n\
  \    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6\
  \ 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n   \
  \ [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\"\
  ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
completions: ["  local nums=$1\n  local sum=0\n  local count=0\n  local sign\n  local\
    \ digit\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n", "    local array=\"$1\"\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local first=0\n\
    \    local last=0\n    local digit\n    local i\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        digit=${array[$i]}\n        if (( sign )); then\n       \
    \     digit=$(( 10#$digit ))\n        fi\n        if (( digit )); then\n     \
    \       sum=$(( sum + digit ))\n            count=$(( count + 1 ))\n        fi\n\
    \    done\n    if (( sum > 0 )); then\n        first=$(( sum / 10 ))\n       \
    \ last=$(( sum % 10 ))\n        if (( first < 0 )); then\n            first=$((\
    \ 10#$first ))\n            last=$(( 10#$last ))\n        fi\n        digits=$((\
    \ digits + 1 ))\n        if (( first == last )); then\n            digits=$((\
    \ digits + 1 ))\n        fi\n    fi\n    echo \"$count\"", "    local arr=( $1\
    \ )\n    local sum=0\n    local count=0\n    for num in \"${arr[@]}\"; do\n  \
    \      if (( num < 0 )); then\n            sum=$(( sum + num % 10 ))\n       \
    \ else\n            sum=$(( sum + num % 10 ))\n            (( count++ ))\n   \
    \     fi\n    done\n    echo \"$count\"", "    local numbers=$1\n    local nums=$(echo\
    \ $numbers | tr \" \" \"\\n\")\n    local nums_array=($nums)\n    local num_sum=0\n\
    \    local num_sum_tmp=0\n    local num_sum_tmp2=0\n    local num_sum_tmp3=0\n\
    \    local num_sum_tmp4=0\n    local num_sum_tmp5=0\n    local num_sum_tmp6=0\n\
    \    local num_sum_tmp7=0\n    local num_sum_tmp8=0\n    local num_sum_tmp9=0\n\
    \    local num_sum_tmp10=0\n    local num_sum_tmp11=0\n    local num_sum_tmp12=0\n\
    \    local num_sum_tmp13=0\n    local num_sum_tmp14=0\n    local num_sum_tmp15=0\n\
    \    local num_sum_tmp16=0\n    local num_sum_tmp17=0\n    local num_sum_tmp18=0\n\
    \    local num_sum_tmp19=0\n    local num_sum_tmp20=0\n    local num_sum_tmp21=0\n\
    \    local num_sum_tmp22=0\n    local num_sum_tmp23=0\n    local num_sum_tmp24=0\n\
    \    local num_sum_tmp25=0\n    local num_sum_tmp26=0\n    local num_sum_tmp27=0\n\
    \    local num_sum_tmp28=0\n    local num_sum_tmp29=0\n    local num_sum_tmp30=0\n\
    \    local num_sum_tmp31=0\n    local num_sum_tmp32=0\n    local num_sum_tmp33=0\n\
    \    local num_sum_tmp34=0\n    local num_sum_tmp35=0\n    local num_sum_tmp36=0\n\
    \    local num_sum_tmp37=0\n    local num_sum_tmp38=0\n    local num_sum_tmp39=0\n\
    \    local num_sum_tmp40=0\n    local num_sum_tmp41=0\n    local num_sum_tmp42=0\n\
    \    local num_sum_tmp43=0\n    local num_sum_tmp44=0\n    local num_sum_tmp45=0\n\
    \    local num_sum_tmp46=0\n    local num_sum_tmp47=0\n    local num_sum_tmp48=0\n\
    \    local num_sum_tmp49=0\n    local num_sum_tmp50=0\n    local num_sum_tmp51=0\n\
    \    local num_sum_tmp52=0\n    local num_sum_tmp53=0\n    local num_sum_tmp54=0\n\
    \    local num_sum_tmp55=0\n    local num_sum_tmp56=0\n    local num_sum_tmp57=0\n\
    \    local num_sum_tmp58=0\n    local num_sum_tmp59=0\n    local num_sum_tmp60",
  "  local numbers=$1\n  local sum=0\n  local digits=0\n  local sign=0\n  local digit\n\
    \  local i\n  local j\n  local num\n\n  for ((i=0; i<${#numbers}; i++)); do\n\
    \    num=${numbers[i]}\n    if [[ $num -gt 0 ]]; then\n      digits=$((${#num}\
    \ + ${#sign}))\n      sum=$((${sum} + ${num}))\n      sign=$((${sign} + 1))\n\
    \    else\n      sign=$((${sign} + 1))\n    fi\n  done\n\n  echo \"$sum\"", " \
    \ local arr=( $1 )\n  local nums=0\n  local sign\n  local i\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      nums=$(( nums + i ))\n    else\n\
    \      sign=$(( sign > 0 ? 1 : -1 ))\n      nums=$(( nums + sign * $i ))\n   \
    \ fi\n  done\n  echo $nums", "  local nums=$1\n  local sum=0\n  local num\n  local\
    \ i\n  for i in $nums; do\n    num=$(echo $i | cut -d ' ' -f 1)\n    if [[ $num\
    \ -gt 0 ]]; then\n      sum=$((sum + num))\n    fi\n  done\n  echo $sum", "  local\
    \ arr=( $1 )\n  local sum=0\n  local i=0\n  while [ $i -lt ${#arr[@]} ]; do\n\
    \    sum=$(( sum + ${arr[$i]} ))\n    i=$(( i + 1 ))\n  done\n  echo $sum", " \
    \   local arr=( $1 )\n    local nums=0\n    local i\n    for (( i=0; i < ${#arr[@]};\
    \ i++ )); do\n        if (( ${arr[i]} < 0 )); then\n            arr[i]=-${arr[i]}\n\
    \        fi\n        (( nums += ${arr[i]} ))\n    done\n    echo \"$nums\"", " \
    \   local numbers=$1\n    local nums=$(echo $numbers |sed 's/ /\\n/g')\n    local\
    \ nums_array=($nums)\n    local nums_array_length=${#nums_array[@]}\n    local\
    \ nums_array_sum=0\n    local nums_array_sum_tmp=0\n    local nums_array_sum_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local\
    \ nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0",
  "  local arr=( $1 )\n  local nums=0\n  local i\n  for ((i=0; i < ${#arr[@]}; i++));\
    \ do\n    (( nums += ${arr[i]} ))\n  done\n  echo \"$nums\"", "    local nums=$1\n\
    \    local sum=0\n    local count=0\n    for num in $nums; do\n        if [[ $num\
    \ -gt 0 ]]; then\n            sum=$((sum+num))\n            count=$((count+1))\n\
    \        fi\n    done\n    echo \"$count\"", "  local arr=( $1 )\n  local sum=0\n\
    \  local nums=0\n  local digits=0\n  local sign=0\n  local digit\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  ", "    local\
    \ nums=$1\n    local sum=0\n    local count=0\n    for num in $nums; do\n    \
    \    (( sum += $num ))\n        if (( sum > 0 )) ; then\n            (( count++\
    \ ))\n        fi\n    done\n    echo \"$count\"", "    local numbers=$1\n    local\
    \ sum=0\n    local num\n    for num in $numbers; do\n        ((sum+=num))\n  \
    \  done\n    echo $sum", "    local arr=( $1 )\n    local sum=0\n    for num in\
    \ \"${arr[@]}\"; do\n        if (( num < 0 )); then\n            sum=$(( sum +\
    \ num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n        fi\n\
    \    done\n    echo \"$sum\"", "    local -n arr=$1\n    local sum=0\n    local\
    \ i\n    for ((i=0; i < ${#arr[@]}; i++)); do\n        local j\n        for ((j=0;\
    \ j < 10; j++)); do\n            ((sum+=${arr[i]}*${j}))\n        done\n    done\n\
    \    echo \"$sum\"", "    local arr=( $1 )\n    local sum=0\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        local num=${arr[$i]}\n        if (( num < 0 )); then\n \
    \           sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum +\
    \ num % 10 ))\n        fi\n    done\n    echo \"$sum\"", "    local numbers=$1\n\
    \    local sum=0\n    local digits=0\n    local sign=0\n    local i\n    local\
    \ j\n    local num\n    for ((i=0; i<${#numbers}; i++)); do\n        num=${numbers:$i:1}\n\
    \        if [[ $num =~ ^-?[0-9]+$ ]]; then\n            sum=$((sum + num))\n \
    \           digits=$((digits + ${#num}))\n        else\n            if ((sign\
    \ > 0)); then\n                sum=$((sum + sign))\n                digits=$((digits\
    \ + sign))\n            fi\n            sign=$((num < 0 ? 1 : -1))\n        fi\n\
    \    done\n    echo \"$sum\"", "    local arr=( $1 )\n    local sum=0\n    local\
    \ i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n    done\n\
    \    echo $sum"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_12_longest
results:
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlength=\n    local -n maxelement=\n   \
    \ local -n element=\n    local -n elements=\n    local -n elementlength=\n   \
    \ local -n elementlengths=\n    local -n elementlengthscount=\n    local -n elementlengthscounts=\n\
    \    local -n elementlengthscountscount=\n    local -n elementlengthscountscounts=\n\
    \    local -n elementlengthscountscountscount=\n    local -n elementlengthscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscount=\n    local -n elementlengthscountscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscountscount=\n    local -n elementlengthscountscountscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscountscountscount=\n    local -n\
    \ elementlengthscountscountscountscountscountscounts=\n    local -n elementlengthscountscountscountscountscountscountscount=\n\
    \    local -n elementlengthscountscountscountscountscountscountscounts=\n    local\
    \ -n elementlengthscountscountscountscountscountscountscountscount=\n    local\
    \ -n elementlengthscountscountscountscountscountscountscountscounts=\n    local\
    \ -n elementlengthscountscountscountscountscountscountscountscountscount=\n  \
    \  local -n elementlengthscountscountscountscountscountscountscountscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscountscountscountscountscountscountscountscount=\n\
    \    local -n elementlengthscountscountscountscountscountscountscountscountscountscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscountscountscountscountscountscountscountscountscountscountscount=\n\
    \    local -n elementlengthscountscountscountscountscountscountscountscountscountscountscountscountscountscountscounts=\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp95y6oy16.sh: line 13: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 14: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 15: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 16: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 17: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 18: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 19: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 20: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 21: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 22: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 24: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 25: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 26: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 27: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 28: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 29: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 30: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 31: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 32: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 33: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 34: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 35: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 36: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 37: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 38: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 39: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 40: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 41: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 42: local: `'': not a valid identifier

    /tmp/tmp95y6oy16.sh: line 43: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=\"\
    ${#list}\"\n    local maxlen=0\n    local maxstr=\"\"\n    local i\n    for ((\
    \ i=0; i<${#list}; i++ )); do\n        local str=\"${list[i]}\"\n        local\
    \ len=\"${#str}\"\n        if (( len > maxlen )) ; then\n            maxlen=${len}\n\
    \            maxstr=\"${str}\"\n        fi\n    done\n    echo \"${maxstr}\"\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [[ $i -lt ${#list[*]} ]]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if (( len >\
    \ maxlen )) ; then\n            maxstr=$str\n            maxlen=$len\n       \
    \ fi\n        i=$(( $i + 1 ))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7_8c72vr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in \"${list[@]}\"; do\n        local len=${#str}\n\
    \        if [[ $len > $maxlen ]]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp08i7avuo.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n maxlen=0\n\
    \    local -n longest\n    local -n len\n    local i\n    local j\n    local len\n\
    \    local maxlen\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpe61y76q6.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpe61y76q6.sh: line 14: local: `0'': invalid variable name for name reference

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a strings\n\
    \    local length\n    local string\n    local count\n    local -a counts\n  \
    \  local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local \n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in $list; do\n        len=${#str}\n      \
    \  if [ $len -gt $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph1qgfwl_.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlength=\n    local -n maxelement=\n   \
    \ local -n element=\n    local -n elements=\n    local -n elementcount=\n    local\
    \ -n elementcount=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n    local -n elementcountmax=0\n    local -n elementcountmax=0\n\
    \    local -n elementcountmax=0\n    local -n elementcountmax=0\n    local -n\
    \ elementcountmax=0\n\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkq2g6y1k.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpkq2g6y1k.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpkq2g6y1k.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpkq2g6y1k.sh: line 16: local: `'': not a valid identifier

    /tmp/tmpkq2g6y1k.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpkq2g6y1k.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpkq2g6y1k.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpkq2g6y1k.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpkq2g6y1k.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 23: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmpkq2g6y1k.sh: line 39: local: `0'': '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n strings=$1\n    local length\n\
    \    local max\n    max=${#strings[@]}\n    for (( i=0; i<max; i++ )); do\n  \
    \      length=${#strings[i]}\n        if (( length == 0 )); then\n           \
    \ echo \"\"\n        elif (( length == max )); then\n            echo ${strings[i]}\n\
    \        else\n            echo ${strings[i]}\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdft_rbap.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n arr=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in ${arr[@]}; do\n        local strlen=$(echo\
    \ $str | wc -c)\n        if [ $strlen -gt $maxlen ]; then\n            maxlen=$strlen\n\
    \            maxstr=$str\n        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmlvivul2.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local lengths=$(echo \"$1\" | tr \" \"\
    \ \"\\n\" | sort -n | uniq -c | sort -n | tail -n 1)\n    [[ -n \"$lengths\" ]]\
    \ && echo \"${lengths}\" || echo \"None\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length\n\
    \    local longest\n    local i\n    local j\n    local max\n    local maxlen\n\
    \    local maxlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlength=\n    local -n maxelement=\n   \
    \ local -n element=\n    local -n element=\n    local -n element=\n    local -n\
    \ element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n \n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2v_yti38.sh: line 13: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 14: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 15: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 16: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 17: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 18: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 19: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 20: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 21: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 22: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 23: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 24: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 25: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 26: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 27: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 28: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 29: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 30: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 31: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 32: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 33: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 34: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 35: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 36: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 37: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 38: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 39: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 40: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 41: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 42: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 43: local: `'': not a valid identifier

    /tmp/tmp2v_yti38.sh: line 44: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local length\n   \
    \ local string\n    local i\n\n    longest=\"None\"\n    length=${#1}\n    for\
    \ ((i=1; i<=$length; i++)); do\n        string=${1:$i:1}\n        if [ -z \"$longest\"\
    \ ]; then\n            longest=$string\n        elif [ \"$longest\" == \"$string\"\
    \ ]; then\n            longest=$string\n        fi\n    done\n    echo \"$longest\"\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in $list; do\n        local len=${#str}\n\
    \        if [ $len -gt $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafymthn2.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen\n}\n\ncandidate() {\n  \
    \  longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphs1pokmh.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -nr |\
    \ head -1 | tr -d \"\\n\" ) )\n    local longest\n    local length\n    for length\
    \ in \"${lengths[@]}\"; do\n        if [[ -n \"${longest}\" ]] && [[ \"${length}\"\
    \ -gt \"${longest}\" ]]; then\n            longest=\"${length}\"\n        fi\n\
    \    done\n    echo \"${longest}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local -a lengths\n    local -a maxlengths\n    local -a maxlength\n    local\
    \ -a maxlengthindex\n    local -a maxlengthindex2\n    local -a maxlengthindex3\n\
    \    local -a maxlengthindex4\n    local -a maxlengthindex5\n    local -a maxlengthindex6\n\
    \    local -a maxlengthindex7\n    local -a maxlengthindex8\n    local -a maxlengthindex9\n\
    \    local -a maxlengthindex10\n    local -a maxlengthindex11\n    local -a maxlengthindex12\n\
    \    local -a maxlengthindex13\n    local -a maxlengthindex14\n    local -a maxlengthindex15\n\
    \    local -a maxlengthindex16\n    local -a maxlengthindex17\n    local -a maxlengthindex18\n\
    \    local -a maxlengthindex19\n    local -a maxlengthindex20\n    local -a maxlengthindex21\n\
    \    local -a maxlengthindex22\n    local -a maxlengthindex23\n    local -a maxlengthindex24\n\
    \    local -a maxlengthindex25\n    local -a maxlengthindex26\n    local -a maxlengthindex27\n\
    \    local -a maxlengthindex28\n    local -a maxlengthindex29\n    local -a maxlengthindex30\n\
    \    local -a maxlengthindex31\n    local -a maxlengthindex32\n    local -a maxlengthindex33\n\
    \    local -a maxlengthindex34\n    local -a maxlengthindex35\n    local -a maxlengthindex36\n\
    \    local -a maxlengthindex37\n    local -a maxlengthindex38\n    local -a maxlengthindex39\n\
    \    local -a maxlengthindex40\n    local -a maxlengthindex41\n    local -a maxlengthindex42\n\
    \    local -a maxlengthindex43\n    local -a maxlengthindex44\n    local -a maxlengthindex45\n\
    \    local -a maxlengthindex46\n    local -a maxlengthindex47\n    local -a maxlengthindex48\n\
    \    local -a maxlengthindex49\n    local -a maxlengthindex50\n    local -a maxlengthindex51\n\
    \    local -a maxlengthindex52\n    local -a maxlengthindex53\n    local -a \n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in \"${list[@]}\"; do\n        local len=${#str}\n\
    \        if (( len > maxlen )) ; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn98g77_0.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq | wc -l) )\n  \
    \  local longest\n    local length\n    for length in \"${lengths[@]}\"; do\n\
    \        if [ \"${length}\" -gt \"${longest##*[![:space:]]}\" ]; then\n      \
    \      longest=\"${length}\"\n        fi\n    done\n    echo \"${longest}\"\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpszd24l6s.sh: line 18: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -nr |\
    \ head -1 | awk '{print $2}') )\n    local longest\n    local length\n    for\
    \ length in \"${lengths[@]}\"; do\n        if [[ -n \"${longest}\" ]] && [[ \"\
    ${length}\" -gt \"${longest}\" ]]; then\n            longest=\"${length}\"\n \
    \       fi\n    done\n    echo \"${longest}\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i\n    for ((i=0; i<${#list[@]}; i++)); do\n\
    \        local str=\"${list[$i]}\"\n        local len=${#str}\n        if ((len\
    \ > maxlen)) ; then\n            maxlen=${len}\n            maxstr=\"${str}\"\n\
    \        fi\n    done\n    echo \"${maxstr}\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkvukno1g.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local string\n   \
    \ local length\n    local i\n    local lengths\n    local max\n    local maxLength\n\
    \    local maxLengthIndex\n    local maxLengthIndexValue\n    local maxLengthIndexValueLength\n\
    \    local maxLengthIndexValueLengthIndex\n    local maxLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLength\n    local maxLengthIndexValueLengthIndexValueLengthIndex\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValue\n    local maxLengthIndexValueLengthIndexValueLengthIndexValueLength\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndex\n  \
    \  local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLength\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndex\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndex\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLength\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndex\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndex\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValue\n\
    \    local maxLengthIndexValueLengthIndexValueLengthIndexValueLengthIndexValueLength\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=0\n\
    \    local max=\"\"\n    local maxlen=0\n    local i\n    for (( i=0; i<${#list[@]};\
    \ i++ )); do\n        local length=\"${#list[$i]}\"\n        if (( length > maxlen\
    \ )) ; then\n            maxlen=${length}\n            max=\"${list[$i]}\"\n \
    \       fi\n    done\n    echo \"$max\"\n}\n\ncandidate() {\n    longest \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local i=0\n    local str\n\
    \    while [[ $i -lt ${#list[*]} ]]; do\n        str=\"${list[$i]}\"\n       \
    \ (( maxstrlen=${#str} ))\n        if (( maxstrlen > maxlen )) ; then\n      \
    \      maxstr=$str\n            maxstrlen=$maxstrlen\n        fi\n        (( i++\
    \ ))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpupwkmy41.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local longest\n\
    \    local length\n    local i\n\n    for (( i=1; i<${#strings[@]}; i++ )); do\n\
    \        length=${#strings[$i]}\n        if (( length == 0 )); then\n        \
    \    echo \"$strings[$i]\"\n        elif (( length == $longest )); then\n    \
    \        echo \"$strings[$i]\"\n        elif (( length > $longest )); then\n \
    \           longest=$length\n        fi\n    done\n\n    if (( longest == 0 ));\
    \ then\n        echo \"None\"\n    else\n        echo \"${strings[$longest]}\"\
    \n    fi\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\"\
    \ ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -nr |\
    \ head -1 | tr -d \" \") )\n    local longest\n    local length\n    for length\
    \ in \"${lengths[@]}\"; do\n        if [[ -z \"$longest\" ]]; then\n         \
    \   longest=\"$length\"\n        elif [[ \"$length\" -gt \"$longest\" ]]; then\n\
    \            longest=\"$length\"\n        fi\n    done\n    echo \"${longest}\"\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  list=($1)\n    longest=${list[0]}\n    for element in \"${list[@]:1}\"\n  \
    \  do\n        if [[ ${#element} -gt ${#longest} ]]\n        then\n          \
    \  longest=${element}\n        fi\n    done\n    echo \"${longest}\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a words\n \
    \   local -a lengths\n    local -a length\n    local -a word\n    local length\n\
    \    local word\n    local length\n    local -a lengths\n    local length\n  \
    \  local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local length\n\
    \    local -a words\n    local length\n    local -a lengths\n    local \n}\n\n\
    candidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr\n    local i\n    for ((i=0; i<${#list[@]}; i++)); do\n    \
    \    local str=${list[$i]}\n        local len=${#str}\n        if ((len > maxlen))\
    \ ; then\n            maxlen=len\n            maxstr=\"${str}\"\n        fi\n\
    \    done\n    echo \"${maxstr}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk6ji8_kg.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=$1\n    local longest_string=${strings:0:1}\n\
    \    local longest_length=${#longest_string}\n    for string in ${strings[@]:1};\
    \ do\n        local string_length=${#string}\n        if (( longest_length < string_length\
    \ )); then\n            longest_string=${string}\n            longest_length=${string_length}\n\
    \        fi\n    done\n    echo \"${longest_string}\"\n}\n\ncandidate() {\n  \
    \  longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in $list; do\n        local len=${#str}\n\
    \        if [ $len -gt $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafymthn2.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlength=\n    local -n maxelement=\n   \
    \ local -n maxelement=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -\n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfb7jztd7.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 16: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 28: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 29: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 30: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 31: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 32: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 33: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 34: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 35: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 36: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 37: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 38: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 39: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 40: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 41: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 42: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 43: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 44: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local L\n    local MAXLEN=0\n    local\
    \ RESULT\n    local STR\n    local STRLEN\n    local STRLEN2\n    local STRLEN3\n\
    \    local STRLEN4\n    local STRLEN5\n    local STRLEN6\n    local STRLEN7\n\
    \    local STRLEN8\n    local STRLEN9\n    local STRLEN10\n    local STRLEN11\n\
    \    local STRLEN12\n    local STRLEN13\n    local STRLEN14\n    local STRLEN15\n\
    \    local STRLEN16\n    local STRLEN17\n    local STRLEN18\n    local STRLEN19\n\
    \    local STRLEN20\n    local STRLEN21\n    local STRLEN22\n    local STRLEN23\n\
    \    local STRLEN24\n    local STRLEN25\n    local STRLEN26\n    local STRLEN27\n\
    \    local STRLEN28\n    local STRLEN29\n    local STRLEN30\n    local STRLEN31\n\
    \    local STRLEN32\n    local STRLEN33\n    local STRLEN34\n    local STRLEN35\n\
    \    local STRLEN36\n    local STRLEN37\n    local STRLEN38\n    local STRLEN39\n\
    \    local STRLEN40\n    local STRLEN41\n    local STRLEN42\n    local STRLEN43\n\
    \    local STRLEN44\n    local STRLEN45\n    local STRLEN46\n    local STRLEN47\n\
    \    local STRLEN48\n    local STRLEN49\n    local STRLEN50\n    local STRLEN51\n\
    \    local STRLEN52\n    local STRLEN53\n    local STRLEN54\n    local STRLEN55\n\
    \    local STRLEN56\n    local STRLEN57\n    local STRLEN58\n    local STRLEN59\n\
    \    local STRLEN60\n    local STRLEN61\n    local STRLEN62\n    local STRLEN63\n\
    \    local STRLEN64\n    local STRLEN65\n    local STRLEN66\n    local STRLEN67\n\
    \    local STRLEN68\n    local STRLEN69\n    local STRLEN70\n    local STRLEN71\n\
    \    local STRLEN72\n    local STRLEN73\n    local STRLEN74\n    local STRLEN75\n\
    \    local STRLEN76\n    local STRLEN77\n    local STRLEN78\n    local STRLEN79\n\
    \    local STRLEN80\n    local STRLEN81\n    local STRLEN82\n    local STR\n}\n\
    \ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest_string=\"\"\n    local\
    \ longest_length=0\n    local longest_strings=()\n    local longest_strings_length=()\n\
    \    local longest_strings_lengths=()\n    local longest_strings_lengths_sorted=()\n\
    \    local longest_strings_lengths_sorted_length=()\n    local longest_strings_lengths_sorted_lengths=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted=()\n    local longest_strings_lengths_sorted_lengths_sorted_length=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths=()\n    local\
    \ longest_strings_lengths_sorted_lengths_sorted_lengths_sorted=()\n    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_length=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_length=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_length=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_length=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_length=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted=()\n\
    \    local longest_strings_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_lengths_sorted_\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -nr |\
    \ head -n 1) )\n    local longest\n    local i\n    for (( i = 0; i < ${#lengths[@]};\
    \ i++ )); do\n        if [[ -n \"${lengths[$i]}\" ]]; then\n            if [[\
    \ \"${lengths[$i]}\" -gt \"${lengths[$(( i + 1 ))]}\" ]]; then\n             \
    \   longest=\"${strings[$i]}\"\n            fi\n        fi\n    done\n    echo\
    \ \"${longest}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlen=0\n    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlen\n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmuia6zr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local lst maxlen\n    local i maxlenlen\n\
    \    local maxlenstr\n    local maxlenlen\n    local maxlenlen2\n    local maxlenlen3\n\
    \    local maxlenlen4\n    local maxlenlen5\n    local maxlenlen6\n    local maxlenlen7\n\
    \    local maxlenlen8\n    local maxlenlen9\n    local maxlenlen10\n    local\
    \ maxlenlen11\n    local maxlenlen12\n    local maxlenlen13\n    local maxlenlen14\n\
    \    local maxlenlen15\n    local maxlenlen16\n    local maxlenlen17\n    local\
    \ maxlenlen18\n    local maxlenlen19\n    local maxlenlen20\n    local maxlenlen21\n\
    \    local maxlenlen22\n    local maxlenlen23\n    local maxlenlen24\n    local\
    \ maxlenlen25\n    local maxlenlen26\n    local maxlenlen27\n    local maxlenlen28\n\
    \    local maxlenlen29\n    local maxlenlen30\n    local maxlenlen31\n    local\
    \ maxlenlen32\n    local maxlenlen33\n    local maxlenlen34\n    local maxlenlen35\n\
    \    local maxlenlen36\n    local maxlenlen37\n    local maxlenlen38\n    local\
    \ maxlenlen39\n    local maxlenlen40\n    local maxlenlen41\n    local maxlenlen42\n\
    \    local maxlenlen43\n    local maxlenlen44\n    local maxlenlen45\n    local\
    \ maxlenlen46\n    local maxlenlen47\n    local maxlenlen48\n    local maxlenlen49\n\
    \    local maxlenlen50\n    local maxlenlen51\n    local maxlenlen52\n    local\
    \ maxlenlen53\n    local maxlenlen54\n    local maxlenlen55\n    local maxlenlen56\n\
    \    local maxlenlen57\n    local maxlenlen58\n    local maxlenlen59\n    local\
    \ maxlenlen60\n    local maxlenlen61\n    local maxlenlen62\n    local maxlenlen63\n\
    \    local maxlenlen64\n    local maxlenlen65\n    local maxlenlen66\n    local\
    \ maxlenlen67\n    local maxlenlen68\n    local maxlenlen69\n    local maxlenlen70\n\
    \    local max\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxidx=0\n    local maxidx2=0\n    local maxidx3=0\n\
    \    local maxidx4=0\n    local maxidx5=0\n    local maxidx6=0\n    local maxidx7=0\n\
    \    local maxidx8=0\n    local maxidx9=0\n    local maxidx10=0\n    local maxidx11=0\n\
    \    local maxidx12=0\n    local maxidx13=0\n    local maxidx14=0\n    local maxidx15=0\n\
    \    local maxidx16=0\n    local maxidx17=0\n    local maxidx18=0\n    local maxidx19=0\n\
    \    local maxidx20=0\n    local maxidx21=0\n    local maxidx22=0\n    local maxidx23=0\n\
    \    local maxidx24=0\n    local maxidx25=0\n    local maxidx26=0\n    local maxidx27=0\n\
    \    local maxidx28=0\n    local maxidx29=0\n    local maxidx30=0\n    local maxidx31=0\n\
    \    local maxidx32=0\n    local maxidx33=0\n    local maxidx34=0\n    local maxidx35=0\n\
    \    local maxidx36=0\n    local maxidx37=0\n    local maxidx38=0\n    local maxidx39=0\n\
    \    local maxidx40=0\n    local maxidx41=0\n    local maxidx42=0\n    local maxidx43=0\n\
    \    local maxidx44=0\n    local maxidx45=0\n    local maxidx46=0\n    local maxidx47=0\n\
    \    local maxidx48=0\n    local maxidx49=0\n    local maxidx50=0\n    local maxidx51=0\n\
    \    local maxidx52=0\n    local maxidx53=0\n    local maxidx54=0\n    local maxidx55=0\n\
    \    local maxidx56=0\n    local maxidx57=0\n    local maxidx58=0\n    local maxidx59=0\n\
    \    local maxidx60=0\n    local maxidx61=0\n    local maxidx62=0\n    local maxidx63=0\n\
    \    local maxidx64=0\n    local maxidx65=0\n    local maxidx66=0\n    local maxidx67=0\n\
    \    local maxidx68=0\n    local maxidx69=0\n    local maxidx70=0\n    local maxidx\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwq8uxpdz.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a strings\n\
    \    local -i longest_length\n    local -i longest_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \    local -i longest_length_index\n    local -i longest_length_index\n    local\
    \ -i longest_length_index\n    local -i longest_length_index\n    local -i longest_length_index\n\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local L=$1\n    local S=\"\"\n    local\
    \ Lmax=0\n    local Lmaxstr=\"\"\n    local Lmaxlen=0\n    local Lmaxlenstr=\"\
    \"\n    local Lmaxlenstrlen=0\n    local Lmaxlenstrlenstr=\"\"\n    local Lmaxlenstrlenstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstr=\"\"\n    local Lmaxlenstrlenstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstrstrstr=\"\"\n    local Lmaxlenstrlenstrstrstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstrstrstrstrstr=\"\"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstr=\"\"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstr=\"\"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstr=\"\"\n    local\
    \ Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\"\n \
    \   local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\"\n  \
    \  local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\"\n\
    \    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\"\n\
    \    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstr=\"\
    \"\n    local Lmaxlenstrlenstrstrstr\n}\n\ncandidate() {\n    longest \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlen=0\n    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlen\n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmuia6zr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=\"\
    ${#list}\"\n    local maxlength=\"${length}\"\n    local maxstring=\"${list[0]}\"\
    \n    local i\n    for (( i=1; i<${length}; i++ )); do\n        local string=\"\
    ${list[i]}\"\n        if [[ \"${#string}\" -gt \"${maxlength}\" ]]; then\n   \
    \         maxlength=\"${#string}\"\n            maxstring=\"${string}\"\n    \
    \    fi\n    done\n    echo \"${maxstring}\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a strings=(\"\
    $@\")\n    local length\n    local i\n    local lengths\n    local length\n  \
    \  local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n    local length\n    local\
    \ length\n    local length\n    local length\n    local length\n    local length\n\
    \    local length\n    local length\n    local length\n\n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlen=0\n    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlen\n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmuia6zr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -n |\
    \ awk '{print $2}') )\n    local longest\n    local length\n    for length in\
    \ \"${lengths[@]}\"; do\n        if [[ \"${length}\" -gt \"${longest##*[!0-9]}\"\
    \ ]]; then\n            longest=\"${length}\"\n        fi\n    done\n    echo\
    \ \"${longest}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local string\n   \
    \ local length\n    local i\n\n    longest=\"None\"\n    length=${#1}\n    for\
    \ (( i=0; i<${#1}; i++ )); do\n        string=${1:$i:1}\n        if [[ ${#string}\
    \ -gt $length ]]; then\n            longest=${string:0:$length}\n        fi\n\
    \    done\n    echo \"$longest\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=$1\n    local length\n\
    \    local longest_string\n    local longest_length\n    local i\n    local j\n\
    \    local lengths\n    local max_length\n    local max_string\n    local max_string_length\n\
    \    local max_string_length_index\n    local max_string_length_indexes\n    local\
    \ max_string_length_indexes_index\n    local max_string_length_indexes_indexes\n\
    \    local max_string_length_indexes_indexes_index\n    local max_string_length_indexes_indexes_indexes_index\n\
    \    local max_string_length_indexes_indexes_indexes_indexes_index\n    local\
    \ max_string_length_indexes_indexes_indexes_indexes_indexes_index\n    local max_string_length_indexes_indexes_indexes_indexes_indexes_indexes_index\n\
    \    local max_string_length_indexes_indexes_indexes_indexes_indexes_indexes_indexes_index\n\
    \    local max_string_length_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_index\n\
    \    local max_string_length_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_index\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local lengths=$(echo \"$1\" | tr \" \"\
    \ \"\\n\" | sort -n | uniq -c | sort -n | tail -n 1)\n    if [ -z \"$lengths\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$lengths\"\n    fi\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n strings=$1\n    local length\n\
    \    local max\n    local maxlen\n    local string\n    local -a longest\n\n \
    \   # empty list\n    if [ -z \"${strings}\" ]; then\n        echo \"None\"\n\
    \        return\n    fi\n\n    # find longest string\n    maxlen=0\n    max=\"\
    \"\n    for string in \"${strings[@]}\"; do\n        length=${#string}\n     \
    \   if [ \"${length}\" -gt \"${maxlen}\" ]; then\n            maxlen=${length}\n\
    \            max=\"${string}\"\n        fi\n    done\n\n    # return first string\
    \ if multiple strings of same length\n    if [ \"${#maxlen}\" -gt 1 ]; then\n\
    \        echo \"${max}\"\n        return\n    fi\n\n    # return longest string\n\
    \    echo \"${max}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2swjk57_.sh: line 13: local: `'': not a valid identifier

    /tmp/tmp2swjk57_.sh: line 13: local: `x y z'': invalid variable name for name
    reference

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local L\n    local Lmax\n    local Lmaxlen\n\
    \    local Lmaxlenlen\n    local Lmaxlenlenlen\n    local Lmaxlenlenlenlen\n \
    \   local Lmaxlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlen\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxidx=0\n    local maxidx2=0\n    local maxidx3=0\n\
    \    local maxidx4=0\n    local maxidx5=0\n    local maxidx6=0\n    local maxidx7=0\n\
    \    local maxidx8=0\n    local maxidx9=0\n    local maxidx10=0\n    local maxidx11=0\n\
    \    local maxidx12=0\n    local maxidx13=0\n    local maxidx14=0\n    local maxidx15=0\n\
    \    local maxidx16=0\n    local maxidx17=0\n    local maxidx18=0\n    local maxidx19=0\n\
    \    local maxidx20=0\n    local maxidx21=0\n    local maxidx22=0\n    local maxidx23=0\n\
    \    local maxidx24=0\n    local maxidx25=0\n    local maxidx26=0\n    local maxidx27=0\n\
    \    local maxidx28=0\n    local maxidx29=0\n    local maxidx30=0\n    local maxidx31=0\n\
    \    local maxidx32=0\n    local maxidx33=0\n    local maxidx34=0\n    local maxidx35=0\n\
    \    local maxidx36=0\n    local maxidx37=0\n    local maxidx38=0\n    local maxidx39=0\n\
    \    local maxidx40=0\n    local maxidx41=0\n    local maxidx42=0\n    local maxidx43=0\n\
    \    local maxidx44=0\n    local maxidx45=0\n    local maxidx46=0\n    local maxidx47=0\n\
    \    local maxidx48=0\n    local maxidx49=0\n    local maxidx50=0\n    local maxidx51=0\n\
    \    local maxidx52=0\n    local maxidx53=0\n    local maxidx54=0\n    local maxidx55=0\n\
    \    local maxidx56=0\n    local maxidx57=0\n    local maxidx58=0\n    local maxidx59=0\n\
    \    local maxidx60=0\n    local maxidx61=0\n    local maxidx62=0\n    local maxidx63=0\n\
    \    local maxidx64=0\n    local maxidx65=0\n    local maxidx66=0\n    local maxidx67=0\n\
    \    local maxidx68=0\n    local maxidx69=0\n    local maxidx70=0\n    local maxidx\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwq8uxpdz.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local length=0\n    local max=\"\"\n\
    \    local maxlen=0\n    local arg\n    for arg in \"$@\"; do\n        if [[ ${#arg}\
    \ -gt ${maxlen} ]]; then\n            maxlen=${#arg}\n            max=${arg}\n\
    \        fi\n    done\n    if [[ ${#max} -gt ${maxlen} ]]; then\n        echo\
    \ \"${max}\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n  \
    \  longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[@]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk5j29pm3.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in $list; do\n        local len=${#str}\n\
    \        if [ $len -gt $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafymthn2.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlen=0\n    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlen\n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmuia6zr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlen=0\n    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlen\n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmuia6zr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local i\n    local\
    \ len\n    local maxlen\n    local max\n    local str\n    local tmp\n    local\
    \ word\n    local words\n    local word\n    local wordlen\n    local wordlens\n\
    \    local wordlen\n    local wordlenslen\n    local wordlenslens\n    local wordlenslen\n\
    \    local wordlenslenslen\n    local wordlenslenslens\n    local wordlenslenslenslen\n\
    \    local wordlenslenslenslens\n    local wordlenslenslenslenslen\n    local\
    \ wordlenslenslenslenslens\n    local wordlenslenslenslenslenslen\n    local wordlenslenslenslenslenslens\n\
    \    local wordlenslenslenslenslenslenslen\n    local wordlenslenslenslenslenslenslens\n\
    \    local wordlenslenslenslenslenslenslenslen\n    local wordlenslenslenslenslenslenslenslens\n\
    \    local wordlenslenslenslenslenslenslenslenslens\n    local wordlenslenslenslenslenslenslenslenslenslens\n\
    \    local wordlenslenslenslenslenslenslenslenslenslenslens\n    local wordlenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local wordlenslenslenslenslenslenslenslenslenslenslenslenslenslens\n    local\
    \ wordlenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n    local\
    \ wordlenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n    local\
    \ wordlenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n \
    \   local wordlenslenslenslenslenslenslenslens\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlength=\n    local -n maxelement=\n   \
    \ local -n element=\n    local -n elements=\n    local -n elementlength=\n   \
    \ local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -n elementlength=\n\
    \    local -n elementlength=\n    local -n elementlength=\n    local -\n}\n\n\
    candidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpytwg1mq9.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 16: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 28: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 29: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 30: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 31: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 32: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 33: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 34: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 35: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 36: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 37: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 38: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 39: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 40: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 41: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 42: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 43: local: `'': not a valid identifier

    /tmp/tmpytwg1mq9.sh: line 44: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr ' ' '\\n' | sort -n | uniq -c | sort -n | awk\
    \ '{ print $2 }') )\n    local longest\n    local length\n    for length in \"\
    ${lengths[@]}\"; do\n        if [[ -z \"$longest\" ]]; then\n            longest=\"\
    $strings[0]\"\n        elif [[ \"$length\" -gt \"$longest\" ]]; then\n       \
    \     longest=\"$strings[0]\"\n        fi\n    done\n    echo \"$longest\"\n}\n\
    \ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen\n}\n\ncandidate() {\n  \
    \  longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphs1pokmh.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -nr |\
    \ head -1) )\n    local longest\n    local length\n    for length in \"${lengths[@]}\"\
    ; do\n        if [[ -z \"$longest\" ]]; then\n            longest=\"$length\"\n\
    \        elif [[ \"$length\" -gt \"$longest\" ]]; then\n            longest=\"\
    $length\"\n        fi\n    done\n    echo \"${strings[*]}\" | tr \" \" \"\\n\"\
    \ | sort -n | uniq -c | sort -nr | head -1 | cut -d' ' -f2\n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -n |\
    \ awk '{ print $2 }') )\n    local maxlen=${#lengths[@]}\n    if [ \"${maxlen}\"\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n\
    \    local maxlen=${maxlen}\n    local maxlen=${maxlen}\n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest_str=\"None\"\n    local\
    \ longest_len=0\n    local longest_idx=0\n    local longest_len_idx=0\n    local\
    \ longest_len_idx2=0\n    local longest_len_idx3=0\n    local longest_len_idx4=0\n\
    \    local longest_len_idx5=0\n    local longest_len_idx6=0\n    local longest_len_idx7=0\n\
    \    local longest_len_idx8=0\n    local longest_len_idx9=0\n    local longest_len_idx10=0\n\
    \    local longest_len_idx11=0\n    local longest_len_idx12=0\n    local longest_len_idx13=0\n\
    \    local longest_len_idx14=0\n    local longest_len_idx15=0\n    local longest_len_idx16=0\n\
    \    local longest_len_idx17=0\n    local longest_len_idx18=0\n    local longest_len_idx19=0\n\
    \    local longest_len_idx20=0\n    local longest_len_idx21=0\n    local longest_len_idx22=0\n\
    \    local longest_len_idx23=0\n    local longest_len_idx24=0\n    local longest_len_idx25=0\n\
    \    local longest_len_idx26=0\n    local longest_len_idx27=0\n    local longest_len_idx28=0\n\
    \    local longest_len_idx29=0\n    local longest_len_idx30=0\n    local longest_len_idx31=0\n\
    \    local longest_len_idx32=0\n    local longest_len_idx33=0\n    local longest_len_idx34=0\n\
    \    local longest_len_idx35=0\n    local longest_len_idx36=0\n    local longest_len_idx37=0\n\
    \    local longest_len_idx38=0\n    local longest_len_idx39=0\n    local longest_len_idx40=0\n\
    \    local longest_len_idx41=0\n    local longest_len_idx42=0\n    local longest_len_idx43=0\n\
    \    local longest_len_idx44=0\n    local longest_len_idx45=0\n    local longest_len_idx46=0\n\
    \    local longest_len_idx47=0\n    local longest_len_idx48=0\n    local longest_len_idx49=0\n\
    \    local longest_len_idx50=0\n    local longest_len_idx51=0\n    local longest_len_idx52=0\n\
    \    local longest_len_idx53=0\n    local longest_len_idx54=0\n    local longest_\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=$1\n    local lengths=()\n\
    \    local max=0\n    local maxLength=0\n    local maxString=\"\"\n    local maxLengthString=\"\
    \"\n    local i\n    local j\n    local length\n    local string\n    for ((i=0;\
    \ i<${#strings[@]}; i++)); do\n        length=${#strings[i]}\n        if ((length>maxLength));\
    \ then\n            maxLength=${length}\n            maxString=${strings[i]}\n\
    \            maxLengthString=${lengths[i]}\n        fi\n        lengths[${i}]=${length}\n\
    \    done\n    for ((i=0; i<${#strings[@]}; i++)); do\n        length=${lengths[i]}\n\
    \        if ((length>max)); then\n            max=length\n            maxString=${strings[i]}\n\
    \            maxLengthString=${lengths[i]}\n        fi\n    done\n    if ((${#strings[@]}));\
    \ then\n        echo \"${maxString}\"\n    else\n        echo \"None\"\n    fi\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlen\n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjf8_dzfd.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local longest_length=0\n\
    \    local longest_string=\"\"\n    local longest_string_index=0\n    local longest_string_length=0\n\
    \    local longest_string_length_index=0\n    local longest_string_length_index2=0\n\
    \    local longest_string_length_index3=0\n    local longest_string_length_index4=0\n\
    \    local longest_string_length_index5=0\n    local longest_string_length_index6=0\n\
    \    local longest_string_length_index7=0\n    local longest_string_length_index8=0\n\
    \    local longest_string_length_index9=0\n    local longest_string_length_index10=0\n\
    \    local longest_string_length_index11=0\n    local longest_string_length_index12=0\n\
    \    local longest_string_length_index13=0\n    local longest_string_length_index14=0\n\
    \    local longest_string_length_index15=0\n    local longest_string_length_index16=0\n\
    \    local longest_string_length_index17=0\n    local longest_string_length_index18=0\n\
    \    local longest_string_length_index19=0\n    local longest_string_length_index20=0\n\
    \    local longest_string_length_index21=0\n    local longest_string_length_index22=0\n\
    \    local longest_string_length_index23=0\n    local longest_string_length_index24=0\n\
    \    local longest_string_length_index25=0\n    local longest_string_length_index26=0\n\
    \    local longest_string_length_index27=0\n    local longest_string_length_index28=0\n\
    \    local longest_string_length_index29=0\n    local longest_string_length_index30=0\n\
    \    local longest_string_length_index31=0\n    local longest_string_length_index32=0\n\
    \    local longest_string_length_index33=0\n    local longest_string_length_index34=0\n\
    \    local longest_string_length_index35=0\n    local longest_string_length_index36=0\n\
    \    local longest_string_length_index37=0\n    local longest_string_length_index38=0\n\
    \    local longest_string_length_index39=0\n    local longest_string_length_index40=0\n\
    \    local longest_string_length_index41=0\n    local longest_string_length_index42=0\n\
    \    local longest_string_length_index43=0\n    local longest_string_length_index44=0\n\
    \    local longest_string_length_index45=0\n    local longest_string_length_index46=0\n\
    \    local longest_string_length_index47=0\n    local longest_string_length\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0aoso3xa.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq | wc -l) )\n  \
    \  local longest\n    local i\n    for (( i=0; i<${#strings[@]}; i++ )); do\n\
    \        if [[ ${lengths[$i]} == ${#strings[$i]} ]]; then\n            longest=$strings[$i]\n\
    \        fi\n    done\n    echo \"${longest}\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a strings\n\
    \    local length\n    local i\n    strings=($1)\n    length=${#strings[@]}\n\
    \    for ((i=0; i<${#strings[@]}; i++)); do\n        length=${#strings[$i]}\n\
    \        if ((length == 0)); then\n            longest=\"None\"\n            break\n\
    \        elif ((length == ${#longest})); then\n            longest=${strings[$i]}\n\
    \        fi\n    done\n    if ((${#longest} == 0)); then\n        longest=\"None\"\
    \n    fi\n    echo \"$longest\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr\n    for str in $list; do\n        local len=${#str}\n     \
    \   if [ $len -gt $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo1cest6s.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  list=($1)\n    longest=${#list[@]}\n    for (( i=0; i<${#list[@]}; i++ ));\
    \ do\n        if [[ ${#list[$i]} -gt $longest ]]; then\n            longest=${#list[$i]}\n\
    \        fi\n    done\n    if [[ ${#list[@]} -eq 0 ]]; then\n        longest=\"\
    None\"\n    fi\n    echo \"${list[@]:0:$longest}\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in \"${list[@]}\"; do\n        local len=${#str}\n\
    \        if [[ $len > $maxlen ]]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp08i7avuo.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxidx=0\n    local -a maxlist=()\n    local\
    \ -a maxidxs=()\n    local -a maxlens=()\n    local -a maxstrs=()\n    local -a\
    \ maxidxs=()\n    local -a maxlens=()\n    local -a maxstrs=()\n    local -a maxidxs=()\n\
    \    local -a maxlens=()\n    local -a maxstrs=()\n    local -a maxidxs=()\n \
    \   local -a maxlens=()\n    local -a maxstrs=()\n    local -a maxidxs=()\n  \
    \  local -a maxlens=()\n    local -a maxstrs=()\n    local -a maxidxs=()\n   \
    \ local -a maxlens=()\n    local -a maxstrs=()\n    local -a maxidxs=()\n    local\
    \ -a maxlens=()\n    local -a maxstrs=()\n    local -a maxidxs=()\n    local -a\
    \ maxlens=()\n    local -a maxstrs=()\n    local -a maxidxs=()\n    local -a maxlens=()\n\
    \    local -a maxstrs=()\n    local -a maxidxs=()\n    local -a maxlens=()\n \
    \   local -a maxstrs=()\n    local -a maxidxs=()\n    local -a maxlens=()\n  \
    \  local -a maxstrs=()\n    local -a maxidxs=()\n    local -a maxlens=()\n   \
    \ local -a maxstrs=()\n    local -a maxidxs=()\n    local -a maxlens=()\n    local\
    \ -a maxstrs=()\n    local -a maxidxs=()\n    local -a maxlens=()\n    local -a\
    \ maxstrs=()\n    local -a maxidxs=()\n    local -a maxlens=()\n    local -a maxstrs=()\n\
    \    local -a maxidxs=()\n    local -a maxlens=()\n    local -a maxstrs=()\n \
    \   local -a maxidxs=()\n    local -a maxlens=()\n    local -a maxstrs=()\n  \
    \  local -a maxidxs=()\n    local -a maxlens=()\n    local \n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_7mtk4kj.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local length\n   \
    \ local string\n    local i\n    local max\n    local maxlen\n    local maxlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlenlen\n    local maxlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=\"\
    ${#list}\"\n    local max=\"\"\n    local maxlen=0\n    local maxidx=0\n    for\
    \ (( idx=0; idx<length; idx++ )); do\n        local item=\"${list:$idx}\"\n  \
    \      if [[ \"$max\" == \"\" ]]; then\n            max=\"${item}\"\n        \
    \    maxlen=\"${#max}\"\n            maxidx=\"$idx\"\n        elif [[ \"${#item}\"\
    \ -gt \"$maxlen\" ]]; then\n            max=\"${item}\"\n            maxlen=\"\
    ${#max}\"\n            maxidx=\"$idx\"\n        fi\n    done\n    echo \"${max}\"\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlength=\n    local -n maxelement=\n   \
    \ local -n element=\n    local -n elements=\n    local -n elementcount=\n    local\
    \ -n maxelementcount=\n    local -n maxelementlength=$((${#list[@]} - 1))\n  \
    \  local -n maxelementlengthcount=0\n    local -n maxelementlengthcount2=0\n \
    \   local -n maxelementlengthcount3=0\n    local -n maxelementlengthcount4=0\n\
    \    local -n maxelementlengthcount5=0\n    local -n maxelementlengthcount6=0\n\
    \    local -n maxelementlengthcount7=0\n    local -n maxelementlengthcount8=0\n\
    \    local -n maxelementlengthcount9=0\n    local -n maxelementlengthcount10=0\n\
    \    local -n maxelementlengthcount11=0\n    local -n maxelementlengthcount12=0\n\
    \    local -n maxelementlengthcount13=0\n    local -n maxelementlengthcount14=0\n\
    \    local -n maxelementlengthcount15=0\n    local -n maxelementlengthcount16=0\n\
    \    local -n maxelementlengthcount17=0\n    local -n maxelementlengthcount18=0\n\
    \    local -n maxelementlengthcount19=0\n    local -n maxelementlengthcount20=0\n\
    \    local -n maxelementlengthcount21=0\n    local -n maxelementlengthcount22=0\n\
    \    local -n maxelementlengthcount23=0\n    local -n maxelementlengthcount24=0\n\
    \    local -n maxelementlengthcount25=0\n    local -n maxelementlengthcount26=0\n\
    \    local -n maxelementlengthcount27=0\n    local -n maxelementlengthcount28=0\n\
    \    local -n maxelementlengthcount29=0\n    local -n maxelementlengthcount30=0\n\
    \    local -n maxelementlengthcount31=0\n    local -n maxelementlengthcount32=0\n\
    \    local -n maxelementlengthcount33=0\n    local -n maxelementlengthcount34=0\n\
    \    local -n maxelementlengthcount35=0\n    local -n maxelementlengthcount36=0\n\
    \    local -n maxelementlengthcount37=0\n    local -n maxelementlengthcount38=0\n\
    \    local -n maxelementlengthcount39=0\n    local -n max\n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgull9b5e.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpgull9b5e.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpgull9b5e.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpgull9b5e.sh: line 16: local: `'': not a valid identifier

    /tmp/tmpgull9b5e.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpgull9b5e.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpgull9b5e.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpgull9b5e.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpgull9b5e.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpgull9b5e.sh: line 22: local: `-1'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 23: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmpgull9b5e.sh: line 39: local: `0'': invalid variable n'
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlen=0\n    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlen\n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmuia6zr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq | wc -l) )\n  \
    \  local longest\n    local i\n    for (( i = 0; i < ${#lengths[@]} - 1; i++ ));\
    \ do\n        if [[ \"${lengths[$i]}\" -gt \"${lengths[$i+1]}\" ]]; then\n   \
    \         longest=\"${strings[$i]}\"\n        fi\n    done\n    if [[ \"${longest}\"\
    \ == \"\" ]]; then\n        longest=\"None\"\n    fi\n    echo \"${longest}\"\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local length\n    local i\n    list=($1)\n    length=${#list[@]}\n    for ((i=0;\
    \ i<$length; i++)); do\n        longest=${list[i]}\n        for ((j=$i+1; j<$length;\
    \ j++)); do\n            if [[ ${list[j]} != $longest ]]; then\n             \
    \   longest=${list[j]}\n            fi\n        done\n        if [[ $longest !=\
    \ \"\" ]]; then\n            echo \"$longest\"\n            return $longest\n\
    \        fi\n    done\n    return $longest\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq | wc -l) )\n  \
    \  local longest\n    local i\n    for (( i = 0; i < ${#strings[@]}; i++ )); do\n\
    \        if [[ ${lengths[$i]} -gt ${#longest} ]]; then\n            longest=${strings[$i]}\n\
    \        fi\n    done\n    echo \"${longest}\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -nr |\
    \ head -n 1) )\n    local longest\n    local i\n    for (( i=1; i<${#lengths[@]};\
    \ i++ )); do\n        if [[ \"${lengths[$i]}\" -gt \"${lengths[$((i-1))]}\" ]];\
    \ then\n            longest=\"${strings[$i]}\"\n        fi\n    done\n    echo\
    \ \"${longest}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -n |\
    \ awk '{print $2}') )\n    local maxlen=${#lengths[@]}\n    local maxidx=0\n \
    \   local maxstring=\"\"\n    for (( idx=0; idx<${#strings[@]}; idx++ )); do\n\
    \        local length=${#strings[$idx]}\n        if (( length == maxlen )) &&\
    \ [[ ${strings[$idx]} != ${maxstring} ]]; then\n            maxstring=${strings[$idx]}\n\
    \            maxidx=$idx\n        fi\n    done\n    if [[ ${#strings[$maxidx]}\
    \ != 0 ]]; then\n        echo \"${strings[$maxidx]}\"\n    else\n        echo\
    \ \"None\"\n    fi\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local string\n   \
    \ local length\n    local count\n    local i\n    local j\n    local lengths\n\
    \    local length\n    local string\n    local length\n    local count\n    local\
    \ i\n    local j\n    local lengths\n    local length\n    local string\n    local\
    \ length\n    local count\n    local i\n    local j\n    local lengths\n    local\
    \ length\n    local string\n    local length\n    local count\n    local i\n \
    \   local j\n    local lengths\n    local length\n    local string\n    local\
    \ length\n    local count\n    local i\n    local j\n    local lengths\n    local\
    \ length\n    local string\n    local length\n    local count\n    local i\n \
    \   local j\n    local lengths\n    local length\n    local string\n    local\
    \ length\n    local count\n    local i\n    local j\n    local lengths\n    local\
    \ length\n    local string\n    local length\n    local count\n    local i\n \
    \   local j\n    local lengths\n    local length\n    local string\n    local\
    \ length\n    local count\n    local i\n    local j\n    local lengths\n    local\
    \ length\n    local string\n    local length\n    local count\n    local i\n \
    \   local j\n    local lengths\n    local length\n    local string\n    local\
    \ length\n    local count\n    local i\n    local j\n    local lengths\n    local\
    \ length\n    local string\n    local length\n    local count\n    local i\n \
    \   local j\n    local lengths\n    local length\n    local string\n    local\
    \ length\n    local count\n    local i\n    local j\n    local lengths\n    local\
    \ length\n    local string\n    local length\n    local count\n    local i\n \
    \   local j\n    local lengths\n    local length\n    local string\n    local\
    \ length\n    local count\n    local i\n    local j\n    local lengths\n    local\
    \ length\n    local string\n    local length\n    local count\n    local i\n \
    \   local j\n    local lengths\n    local length\n    local string\n    local\
    \ length\n    local count\n    local i\n    local j\n    local lengths\n    local\
    \ length\n    local string\n    local length\n    local count\n    local i\n}\n\
    \ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxidx=0\n    local maxidx2=0\n    local maxidx3=0\n\
    \    local maxidx4=0\n    local maxidx5=0\n    local maxidx6=0\n    local maxidx7=0\n\
    \    local maxidx8=0\n    local maxidx9=0\n    local maxidx10=0\n    local maxidx11=0\n\
    \    local maxidx12=0\n    local maxidx13=0\n    local maxidx14=0\n    local maxidx15=0\n\
    \    local maxidx16=0\n    local maxidx17=0\n    local maxidx18=0\n    local maxidx19=0\n\
    \    local maxidx20=0\n    local maxidx21=0\n    local maxidx22=0\n    local maxidx23=0\n\
    \    local maxidx24=0\n    local maxidx25=0\n    local maxidx26=0\n    local maxidx27=0\n\
    \    local maxidx28=0\n    local maxidx29=0\n    local maxidx30=0\n    local maxidx31=0\n\
    \    local maxidx32=0\n    local maxidx33=0\n    local maxidx34=0\n    local maxidx35=0\n\
    \    local maxidx36=0\n    local maxidx37=0\n    local maxidx38=0\n    local maxidx39=0\n\
    \    local maxidx40=0\n    local maxidx41=0\n    local maxidx42=0\n    local maxidx43=0\n\
    \    local maxidx44=0\n    local maxidx45=0\n    local maxidx46=0\n    local maxidx47=0\n\
    \    local maxidx48=0\n    local maxidx49=0\n    local maxidx50=0\n    local maxidx51=0\n\
    \    local maxidx52=0\n    local maxidx53=0\n    local maxidx54=0\n    local maxidx55=0\n\
    \    local maxidx56=0\n    local maxidx57=0\n    local maxidx58=0\n    local maxidx59=0\n\
    \    local maxidx60=0\n    local maxidx61=0\n    local maxidx62=0\n    local maxidx63=0\n\
    \    local maxidx64=0\n    local maxidx65=0\n    local maxidx66=0\n    local maxidx67=0\n\
    \    local maxidx68=0\n    local maxidx69=0\n    local maxidx70=0\n    local maxidx\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwq8uxpdz.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr\n    local i\n    for ((i=0; i<${#list[@]}; i++)); do\n    \
    \    local str=${list[$i]}\n        local len=${#str}\n        if (( len > maxlen\
    \ )) ; then\n            maxlen=${len}\n            maxstr=${str}\n        fi\n\
    \    done\n    echo \"${maxstr}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp343bszra.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n arr=$1\n    local len=${#arr[@]}\n\
    \    local maxlen=0\n    local max\n    for (( i=0; i<len; i++ )); do\n      \
    \  local len=${#arr[i]}\n        if (( len > maxlen )) ; then\n            maxlen=$len\n\
    \            max=\"${arr[i]}\"\n        fi\n    done\n    echo \"$max\"\n}\n\n\
    candidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3ofihv3g.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq | wc -l) )\n  \
    \  local longest\n    local i\n    for (( i = 1 ; i <= ${#lengths[*]} && ${#longest}\
    \ <= ${#lengths[*]} && ${#longest} > ${#lengths[*]} ? ${#lengths[*]} : ${#longest}\
    \ ; i++ )); do\n        longest=\"${strings[$i]}\"\n    done\n    echo \"${longest}\"\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local length\n    local i\n    local j\n    local length\n    local max\n \
    \   local maxlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local max\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a strings\n\
    \    local -a lengths\n    local -a counts\n    local -a maxlen\n    local -a\
    \ maxcount\n    local -a maxstring\n    local -a maxlength\n    local -a maxcount\n\
    \    local -a maxstring\n    local -a maxlength\n    local -a maxcount\n    local\
    \ -a maxstring\n    local -a maxlength\n    local -a maxcount\n    local -a maxstring\n\
    \    local -a maxlength\n    local -a maxcount\n    local -a maxstring\n    local\
    \ -a maxlength\n    local -a maxcount\n    local -a maxstring\n    local -a maxlength\n\
    \    local -a maxcount\n    local -a maxstring\n    local -a maxlength\n    local\
    \ -a maxcount\n    local -a maxstring\n    local -a maxlength\n    local -a maxcount\n\
    \    local -a maxstring\n    local -a maxlength\n    local -a maxcount\n    local\
    \ -a maxstring\n    local -a maxlength\n    local -a maxcount\n    local -a maxstring\n\
    \    local -a maxlength\n    local -a maxcount\n    local -a maxstring\n    local\
    \ -a maxlength\n    local -a maxcount\n    local -a maxstring\n    local -a maxlength\n\
    \    local -a maxcount\n    local -a maxstring\n    local -a maxlength\n    local\
    \ -a maxcount\n    local -a maxstring\n    local -a maxlength\n    local -a maxcount\n\
    \    local -a maxstring\n    local -a maxlength\n    local -a maxcount\n    local\
    \ -a maxstring\n    local -a maxlength\n    local -a maxcount\n    local -a maxstring\n\
    \    local -a maxlength\n    local -a maxcount\n    local -a maxstring\n    local\
    \ -a maxlength\n    local -a maxcount\n    local -a maxstring\n    local -a maxlength\n\
    \    local -a maxcount\n    local -a maxstring\n    local -a maxlength\n    local\
    \ -a maxcount\n    local -a maxstring\n    local -a maxlength\n    local -a maxcount\n\
    \    local -a maxstring\n    local -a max\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -n |\
    \ awk '{print $2}') )\n    local longest\n    local length\n    for length in\
    \ \"${lengths[@]}\"; do\n        if [[ \"${length}\" -gt \"${longest:-}\" ]];\
    \ then\n            longest=\"${length}\"\n        fi\n    done\n    echo \"${longest:-}\"\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=\"\
    ${#list}\"\n    local maxlen=0\n    local max\n    for (( i=1; i<=$length; i++\
    \ )); do\n        local len=\"${#list[i]}\"\n        if (( len > maxlen )) ; then\n\
    \            maxlen=$len\n            max=\"${list[i]}\"\n        fi\n    done\n\
    \    echo \"$max\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local length\n    local -a longest\n    local -a length\n    local -a tmp\n\
    \    local i\n    local j\n    local k\n    local len\n    local max\n    local\
    \ -a tmp\n    local maxlen\n    local -a longest\n    local -a length\n    local\
    \ -a list\n    local -a tmp\n    local maxlen\n    local -a list\n    local -a\
    \ tmp\n    local maxlen\n    local -a longest\n    local -a length\n    local\
    \ -a list\n    local -a tmp\n    local maxlen\n    local -a longest\n    local\
    \ -a length\n    local -a list\n    local -a tmp\n    local maxlen\n    local\
    \ -a longest\n    local -a length\n    local -a list\n    local -a tmp\n    local\
    \ maxlen\n    local -a longest\n    local -a length\n    local -a list\n    local\
    \ -a tmp\n    local maxlen\n    local -a longest\n    local -a length\n    local\
    \ -a list\n    local -a tmp\n    local maxlen\n    local -a longest\n    local\
    \ -a length\n    local -a list\n    local -a tmp\n    local maxlen\n    local\
    \ -a longest\n    local -a length\n    local -a list\n    local -a tmp\n    local\
    \ maxlen\n    local -a longest\n    local -a length\n    local -a list\n    local\
    \ -a tmp\n    local maxlen\n    local -a longest\n    local -a length\n    local\
    \ -a list\n    local -a tmp\n    local maxlen\n    local -a longest\n    local\
    \ -a length\n    local -a list\n    local -a tmp\n    local maxlen\n    local\
    \ -a longest\n    local -a length\n    local -a list\n    local -a tmp\n    local\
    \ maxlen\n    local -a longest\n    local -a length\n    local -a list\n    local\
    \ -a tmp\n    local maxlen\n    local -a longest\n    local -a length\n    local\
    \ -a list\n    local -a tmp\n    local maxlen\n    local -a longest\n    local\
    \ -a length\n    local -a list\n    local -a tmp\n    local \n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local -i i\n    list=($1)\n    longest=${list[0]}\n    for ((i=1; i<${#list[@]};\
    \ i++)); do\n        if [[ ${#longest} -gt ${#list[$i]} ]]; then\n           \
    \ longest=${list[$i]}\n        fi\n    done\n    echo \"$longest\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local maxlen=0\n    local maxstr=\"\"\
    \n    local maxstrlen=0\n    local maxstrpos=0\n    local maxstrlen1=0\n    local\
    \ maxstrpos1=0\n    local maxstrlen2=0\n    local maxstrpos2=0\n    local maxstrlen3=0\n\
    \    local maxstrpos3=0\n    local maxstrlen4=0\n    local maxstrpos4=0\n    local\
    \ maxstrlen5=0\n    local maxstrpos5=0\n    local maxstrlen6=0\n    local maxstrpos6=0\n\
    \    local maxstrlen7=0\n    local maxstrpos7=0\n    local maxstrlen8=0\n    local\
    \ maxstrpos8=0\n    local maxstrlen9=0\n    local maxstrpos9=0\n    local maxstrlen10=0\n\
    \    local maxstrpos10=0\n    local maxstrlen11=0\n    local maxstrpos11=0\n \
    \   local maxstrlen12=0\n    local maxstrpos12=0\n    local maxstrlen13=0\n  \
    \  local maxstrpos13=0\n    local maxstrlen14=0\n    local maxstrpos14=0\n   \
    \ local maxstrlen15=0\n    local maxstrpos15=0\n    local maxstrlen16=0\n    local\
    \ maxstrpos16=0\n    local maxstrlen17=0\n    local maxstrpos17=0\n    local maxstrlen18=0\n\
    \    local maxstrpos18=0\n    local maxstrlen19=0\n    local maxstrpos19=0\n \
    \   local maxstrlen20=0\n    local maxstrpos20=0\n    local maxstrlen21=0\n  \
    \  local maxstrpos21=0\n    local maxstrlen22=0\n    local maxstrpos22=0\n   \
    \ local maxstrlen23=0\n    local maxstrpos23=0\n    local maxstrlen24=0\n    local\
    \ maxstrpos24=0\n    local maxstrlen25=0\n    local maxstrpos25=0\n    local maxstrlen26=0\n\
    \    local maxstrpos26=0\n    local maxstrlen27=0\n    local maxstrpos27=0\n \
    \   local maxstrlen28=0\n    local maxstrpos28=0\n    local maxstrlen29=0\n  \
    \  local maxstrpos29=0\n    local maxstrlen30=0\n    local maxstrpos30=0\n   \
    \ local maxstrlen31\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local string\n   \
    \ local length\n    local i\n    local j\n    local len\n    local maxlen\n  \
    \  local max\n    local maxlenlen\n    local maxlenlenlen\n    local maxlenlenlenlen\n\
    \    local maxlenlenlenlenlen\n    local maxlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local -a lengths\n    local -a max\n    local -a i\n    local length\n    local\
    \ length\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    local -a\
    \ word\n    local -a word\n    local -a word\n    local -a word\n    \n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=$1\n    local lengths=()\n\
    \    local maxlen=0\n    local maxstring=\"\"\n    local maxstringlen=0\n    local\
    \ maxstringlenindex=0\n    local maxstringindex=0\n    local maxstringindex2=0\n\
    \    local maxstringindex3=0\n    local maxstringindex4=0\n    local maxstringindex5=0\n\
    \    local maxstringindex6=0\n    local maxstringindex7=0\n    local maxstringindex8=0\n\
    \    local maxstringindex9=0\n    local maxstringindex10=0\n    local maxstringindex11=0\n\
    \    local maxstringindex12=0\n    local maxstringindex13=0\n    local maxstringindex14=0\n\
    \    local maxstringindex15=0\n    local maxstringindex16=0\n    local maxstringindex17=0\n\
    \    local maxstringindex18=0\n    local maxstringindex19=0\n    local maxstringindex20=0\n\
    \    local maxstringindex21=0\n    local maxstringindex22=0\n    local maxstringindex23=0\n\
    \    local maxstringindex24=0\n    local maxstringindex25=0\n    local maxstringindex26=0\n\
    \    local maxstringindex27=0\n    local maxstringindex28=0\n    local maxstringindex29=0\n\
    \    local maxstringindex30=0\n    local maxstringindex31=0\n    local maxstringindex32=0\n\
    \    local maxstringindex33=0\n    local maxstringindex34=0\n    local maxstringindex35=0\n\
    \    local maxstringindex36=0\n    local maxstringindex37=0\n    local maxstringindex38=0\n\
    \    local maxstringindex39=0\n    local maxstringindex40=0\n    local maxstringindex41=0\n\
    \    local maxstringindex42=0\n    local maxstringindex43=0\n    local maxstringindex44=0\n\
    \    local maxstringindex45=0\n    local maxstringindex46=0\n    local maxstringindex47=0\n\
    \    local maxstringindex48=0\n    local maxstringindex49=0\n    local maxstringindex50=0\n\
    \    local maxstringindex51=0\n    local maxstringindex52=0\n    local maxstringindex53=0\n\
    \    local maxstringindex54=0\n    local maxstringindex55=0\n    local maxstringindex56=0\n\
    \    local maxstringindex57=0\n    local maxstringindex58=0\n    local maxstringindex59=0\n\
    \    local \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\"\
    \ ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local L\n    local Lmax\n    local Lmaxlen\n\
    \    local Lmaxlenlen\n    local Lmaxlenlenlen\n    local Lmaxlenlenlenlen\n \
    \   local Lmaxlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local Lmaxlenlenlenlenlenlenlenlenlenlenlen\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  list=($1)\n    longest=${#list[@]}\n    for (( i=1; i<${#list[@]}; i++ ));\
    \ do\n        if [[ ${#list[$i]} -gt $longest ]]; then\n            longest=${#list[$i]}\n\
    \        fi\n    done\n    echo ${list[$longest]}\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=$1\n    local lengths=()\n\
    \    local maxlen=0\n    local maxstr=\"\"\n    local maxidx=0\n    local maxidxstr=\"\
    \"\n    local maxidxlength=0\n    local maxidxlengthstr=\"\"\n    local maxidxlengthstrlen=0\n\
    \    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local\
    \ maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n\
    \    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local\
    \ maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n\
    \    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local\
    \ maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n\
    \    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local\
    \ maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n\
    \    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local\
    \ maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n\
    \    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local\
    \ maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n\
    \    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local\
    \ maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n\
    \    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local\
    \ maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n\
    \    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local\
    \ maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n    local maxidxlengthstrlenlen=0\n\
    \    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n\
    \    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest length\n    longest=\"\
    None\"\n    length=${#1}\n    for (( i=1; i<=$length; i++ )); do\n        if [[\
    \ ${#1} == $i ]]; then\n            longest=${1}\n            break\n        fi\n\
    \    done\n    echo \"$longest\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest len\n    longest=\"None\"\
    \n    len=0\n    for s in \"$@\"; do\n        len=$(( ${#s} > len ? ${#s} : len\
    \ ))\n        longest=$(( ${#s} > len ? s : longest ))\n    done\n    echo \"\
    $longest\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\"\
    \ ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlength=\n    local -n maxelement=\n   \
    \ local -n element=\n    local -n elements=\n    local -n elementlength=\n   \
    \ local -n elementlengths=\n    local -n elementlengthscount=\n    local -n elementlengthscounts=\n\
    \    local -n elementlengthscountscount=\n    local -n elementlengthscountscounts=\n\
    \    local -n elementlengthscountscountscount=\n    local -n elementlengthscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscount=\n    local -n elementlengthscountscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscountscount=\n    local -n elementlengthscountscountscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscountscountscount=\n    local -n\
    \ elementlengthscountscountscountscountscountscounts=\n    local -n elementlengthscountscountscountscountscountscountscount=\n\
    \    local -n elementlengthscountscountscountscountscountscountscounts=\n    local\
    \ -n elementlengthscountscountscountscountscountscountscountscount=\n    local\
    \ -n elementlengthscountscountscountscountscountscountscountscounts=\n    local\
    \ -n elementlengthscountscountscountscountscountscountscountscountscount=\n  \
    \  local -n elementlengthscountscountscountscountscountscountscountscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscountscountscountscountscountscountscountscountscount=\n\
    \    local -n elementlengthscountscountscountscountscountscountscountscountscountscountscountscountscounts=\n\
    \    local -n elementlengthscountscountscountscountscountscountscountscountscountscountscountscountscountscountscount=\n\
    \    local -n elementlengthscountscountscountscountscountscountscountscountscountscountscountscounts\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwz1shr8v.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 16: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 28: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 29: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 30: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 31: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 32: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 33: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 34: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 35: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 36: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 37: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 38: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 39: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 40: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 41: local: `'': not a valid identifier

    /tmp/tmpwz1shr8v.sh: line 42: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n arr=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#arr[@]} ]; do\n \
    \       local str=${arr[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf2qfdpt4.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlen=0\n    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlen\n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmuia6zr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in \"${list[@]}\"; do\n        local -n strlen=$(strlen\
    \ $str)\n        if (( strlen > maxlen )) ; then\n            maxlen=$strlen\n\
    \            maxstr=$str\n        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprx22cblm.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local length\n    local -a longest\n    local -a length\n    local -a i\n \
    \   local -a j\n    local -a k\n    local -a len\n    local -a max\n    local\
    \ -a maxlen\n    local -a maxlenlen\n    local -a maxlenlenlen\n    local -a maxlenlenlenlen\n\
    \    local -a maxlenlenlenlen\n    local -a maxlenlenlenlenlen\n    local -a maxlenlenlenlenlenlen\n\
    \    local -a maxlenlenlenlenlenlenlen\n    local -a maxlenlenlenlenlenlenlenlen\n\
    \    local -a maxlenlenlenlenlenlenlenlenlen\n    local -a maxlenlenlenlenlenlenlenlenlenlen\n\
    \    local -a maxlenlenlenlenlenlenlenlenlenlenlen\n    local -a maxlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local -a\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ -a maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local -a\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local -a maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n}\n\
    \ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq | wc -l) )\n  \
    \  local longest\n    local i\n    for (( i = 0; i < ${#strings[@]}; i++ )); do\n\
    \        if [[ ${lengths[$i]} -gt ${#longest} ]]; then\n            longest=${strings[$i]}\n\
    \        fi\n    done\n    echo \"${longest}\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 2
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local string\n   \
    \ local length\n    local i\n\n    longest=\"None\"\n    string=\"$1\"\n    length=${#string}\n\
    \n    for (( i=1; i<=$length; i++ )); do\n        if [[ ${string:$i:1} == \" \"\
    \ ]]; then\n            longest=${string:$i:1}\n        elif [[ ${string:$i:1}\
    \ == \"\\n\" ]]; then\n            longest=${string:$i:1}\n        elif [[ ${string:$i:1}\
    \ == \"\\t\" ]]; then\n            longest=${string:$i:1}\n        elif [[ ${string:$i:1}\
    \ == \",\" ]]; then\n            longest=${string:$i:1}\n        elif [[ ${string:$i:1}\
    \ == \"(\" ]] || [[ ${string:$i:1} == \")\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"{\" ]] || [[ ${string:$i:1} == \"}\" ]];\
    \ then\n            longest=${string:$i:1}\n        elif [[ ${string:$i:1} ==\
    \ \"[\" ]] || [[ ${string:$i:1} == \"]\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"'\" ]] || [[ ${string:$i:1} == \"\\\"\" ]];\
    \ then\n            longest=${string:$i:1}\n        elif [[ ${string:$i:1} ==\
    \ \"<\" ]] || [[ ${string:$i:1} == \">\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"#\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"$\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"%\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"&\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"*\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"?\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"^\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"|\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"~\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"`\" ]]; then\n            longest=${string:$i:1}\n\
    \        elif [[ ${string:$i:1} == \"!\" ]]; then\n\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_m2a37qi.sh: line 59: unexpected EOF while looking for matching
    ``''

    /tmp/tmp_m2a37qi.sh: line 77: unexpected argument to conditional binary operator

    /tmp/tmp_m2a37qi.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n max=$2\n\
    \    local -n len=${#list[@]}\n    local -n i\n    local -n maxlen=0\n\n    if\
    \ [[ $len == 0 ]]; then\n        echo \"None\"\n        return\n    fi\n\n   \
    \ for ((i=0; i<len; i++)); do\n        if [[ $max -le ${#list[$i]} ]]; then\n\
    \            max=${#list[$i]}\n            maxlen=$i\n        fi\n    done\n\n\
    \    echo \"${list[maxlen]}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbvryw0md.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpbvryw0md.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpbvryw0md.sh: line 15: local: `0'': invalid variable name for name reference

    /tmp/tmpbvryw0md.sh: line 17: local: `0'': invalid variable name for name reference

    /tmp/tmpbvryw0md.sh: line 24: ((: `0'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in $list; do\n        local len=${#str}\n\
    \        if [ $len -gt $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafymthn2.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local maxlen=0\n\
    \    local maxstring\n    local i\n\n    for ((i=0; i<${#strings[@]}; i++)); do\n\
    \        local string=\"${strings[i]}\"\n        local len=\"${#string}\"\n  \
    \      if (( len > maxlen )) ; then\n            maxstring=\"${string}\"\n   \
    \         maxlen=${len}\n        fi\n    done\n\n    if (( ${#maxstring} > 0 ))\
    \ ; then\n        echo \"${maxstring}\"\n    else\n        echo \"None\"\n   \
    \ fi\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n\
    \    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=\"\
    ${#list}\"\n    local max=\"${list[0]}\"\n    local i\n\n    for (( i=1; i<length;\
    \ i++ )); do\n        local j\n        for (( j=0; j<i; j++ )); do\n         \
    \   [[ \"${list[j]}\" == \"${max}\" ]] && break\n        done\n        [[ -z \"\
    ${list[j]}\" ]] && break\n        max=\"${list[j]}\"\n    done\n    [[ -z \"${list[i]}\"\
    \ ]] && return 0\n    echo \"${max}\"\n}\n\ncandidate() {\n    longest \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local L=$1\n    local S=\"\"\n    local\
    \ Lmax=0\n    local Lmaxlen=0\n    local Lmaxlenstr=\"\"\n    local Lmaxlenlen=0\n\
    \    local Lmaxlenlenstr=\"\"\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n\
    \    local Lmaxlenlenstrlen=0\n    local Lmaxlenlenstrlen=0\n    local L\n}\n\n\
    candidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -n |\
    \ awk '{print $1}') )\n    local longest\n    local length\n    for length in\
    \ \"${lengths[@]}\"; do\n        if [[ -z \"$longest\" ]]; then\n            longest=\"\
    $strings[0]\"\n        elif [[ \"$length\" -gt \"$longest\" ]]; then\n       \
    \     longest=\"$strings[0]\"\n        fi\n    done\n    echo \"$longest\"\n}\n\
    \ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a strings\n\
    \    local length\n    local string\n    strings=($1)\n    length=${#strings[@]}\n\
    \    if [[ $length -eq 0 ]]; then\n        echo \"None\"\n        return\n   \
    \ fi\n    longest=${strings[0]}\n    for string in \"${strings[@]}\"; do\n   \
    \     if [[ $string == $longest ]]; then\n            longest=${string}\n    \
    \    elif [[ $((${#longest} < ${#string})) ]]; then\n            longest=${string}\n\
    \        fi\n    done\n    echo \"$longest\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=\"\
    ${#list}\"\n    local max\n    local maxlen\n    local i\n    local tmp\n    local\
    \ output\n\n    if [ -z \"$list\" ]; then\n        echo \"None\"\n        return\n\
    \    fi\n\n    maxlen=0\n    for (( i=1; i<=$length; i++ )); do\n        tmp=\"\
    ${list[i]}\"\n        if [ \"${#tmp}\" -gt \"$maxlen\" ]; then\n            maxlen=\"\
    ${#tmp}\"\n            max=\"${tmp}\"\n        fi\n    done\n\n    if [ \"$maxlen\"\
    \ -gt 0 ]; then\n        echo \"$max\"\n    else\n        echo \"None\"\n    fi\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=\"\
    ${#list}\"\n    local max=\"${list[0]}\"\n    local i\n    for ((i=1; i<length;\
    \ i++)); do\n        local curr=\"${list[i]}\"\n        if [[ \"$max\" == \"$curr\"\
    \ ]]; then\n            max=\"${list[i]}\"\n        elif [[ \"$max\" -lt \"$curr\"\
    \ ]]; then\n            max=\"${list[i]}\"\n        fi\n    done\n    echo \"\
    $max\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n\
    \    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq | wc -l) )\n  \
    \  local longest\n    local i\n    for (( i = 0; i < ${#lengths[@]} - 1; i++ ));\
    \ do\n        if [[ \"${lengths[$i]}\" -gt \"${lengths[$i+1]}\" ]]; then\n   \
    \         longest=\"${strings[$i]}\"\n        fi\n    done\n    echo \"${longest}\"\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in $list; do\n        local strlen=$(echo\
    \ \"$str\" | wc -c)\n        if [ \"$strlen\" -gt \"$maxlen\" ]; then\n      \
    \      maxlen=$strlen\n            maxstr=\"$str\"\n        fi\n    done\n   \
    \ echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=0\n\
    \    local max=\"\"\n    local maxlen=0\n    local i=0\n    while [ -n \"$list\"\
    \ ]; do\n        length=$(echo \"$list\" | wc -c)\n        if [ \"$length\" -gt\
    \ \"$maxlen\" ]; then\n            maxlen=\"$length\"\n            max=\"$list\"\
    \n        fi\n        list=$(echo \"$list\" | cut -d \" \" -f $((i+1)))\n    \
    \    i=$((i+1))\n    done\n    echo \"$max\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq | wc -l) )\n  \
    \  local longest\n    local length\n    for length in \"${lengths[@]}\"; do\n\
    \        if [[ -n \"${longest}\" ]]; then\n            [[ \"${length}\" -gt \"\
    ${longest}\" ]] || return 1\n        fi\n        longest=\"${length}\"\n    done\n\
    \    [[ -n \"${longest}\" ]] || return 1\n    echo \"${strings[*]} | sort -n |\
    \ uniq | head -${longest}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length\n\
    \    local max\n    local maxLength\n    local i\n    local j\n    local result\n\
    \n    if [[ -z \"$list\" ]]; then\n        echo \"$list\"\n        return\n  \
    \  fi\n\n    length=${#list}\n    if [ \"$length\" -eq 0 ]; then\n        echo\
    \ \"$list\"\n        return\n    fi\n\n    maxLength=0\n    max=\"\"\n    for\
    \ ((i = 0; i < length; i++)); do\n        length=${#list[i]}\n        if [ \"\
    $length\" -gt \"$maxLength\" ]; then\n            maxLength=\"$length\"\n    \
    \        max=\"${list[i]}\"\n        fi\n    done\n\n    for ((i = 0; i < length;\
    \ i++)); do\n        length=${#list[i]}\n        if [ \"$length\" -eq \"$maxLength\"\
    \ ]; then\n            result=\"${list[i]}\"\n        fi\n    done\n\n    echo\
    \ \"$result\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local lst len\n    local maxlen\n   \
    \ local max\n    local i\n    local j\n    local tmp\n    local tmplen\n    local\
    \ tmpmax\n    local tmpi\n    local tmpj\n    local tmptmp\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmplen\n\
    \    local tmptmpmax\n    local tmptmpi\n    local tmptmpj\n    local tmptmp\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlen\n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjf8_dzfd.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local -a lengths\n    local -i maxlen\n    local -i maxidx\n    local -i maxlenidx\n\
    \    local -i maxlenlen\n    local -i maxlenlenidx\n    local -i maxlenlenlen\n\
    \    local -i maxlenlenlenidx\n    local -i maxlenlenlenlen\n    local -i maxlenlenlenlenidx\n\
    \    local -i maxlenlenlenlenlen\n    local -i maxlenlenlenlenidx\n    local -i\
    \ maxlenlenlenlenlen\n    local -i maxlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n \
    \   local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenlenidx\n    local \n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local -a lengths\n    local i len\n    local maxlen\n    local max\n    list=($1)\n\
    \    lengths=()\n    maxlen=0\n    max=\"\"\n    for ((i = 0; i < ${#list[*]};\
    \ i++)); do\n        len=${#list[$i]}\n        if ((len > maxlen)) ; then\n  \
    \          maxlen=len\n            max=${list[$i]}\n        fi\n        lengths[$i]=$len\n\
    \    done\n    for ((i = 0; i < ${#list[*]}; i++)); do\n        len=${lengths[$i]}\n\
    \        if ((len == maxlen)) ; then\n            longest=$max\n        fi\n \
    \   done\n    echo \"$longest\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local maxlen=0\n    local maxstr=\"\"\
    \n    local maxstrlen=0\n    local maxstrpos=0\n    local maxstrlenpos=0\n   \
    \ local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local maxstrlenlenlen=0\n\
    \    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local max\n}\n\ncandidate() {\n    longest \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local longest\n\
    \    local len\n    local i\n    local j\n    local maxlen\n    local maxlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlenlen\n    local maxlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlen\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y\
    \ z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local i=0\n    while [[ $i\
    \ -lt ${#list[*]} ]]; do\n        local str=${list[$i]}\n        local strlen=$(echo\
    \ \"${#str}\" | wc -c)\n        if [[ $strlen -gt $maxstrlen ]]; then\n      \
    \      maxstrlen=$strlen\n            maxstr=$str\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfikmvmb2.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local string\n   \
    \ local length\n    local i\n    local lengths\n    local length\n    local lengthmax\n\
    \    local lengthmin\n    local lengthmaxlen\n    local lengthminlen\n    local\
    \ maxlen\n    local maxlenlen\n    local maxlenlenmax\n    local maxlenlenmin\n\
    \    local maxlenlenmaxlen\n    local maxlenlenminlen\n    local maxlenlenmaxlen\n\
    \    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n\
    \    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n\
    \    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n\
    \    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n\
    \    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n\
    \    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n\
    \    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n\
    \    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n\
    \    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n\
    \    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n\
    \    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n\
    \    local maxlenlenmaxlenlen\n    local maxlenlenminlenlen\n    local maxlenlenmaxlenlen\n\
    \    local maxlenlenminlenlen\n    local maxlenlenmaxlen\n    local maxlenlenminlenlen\n\
    \    local maxlenlenmaxlen\n    local maxlenlenminlenlen\n    local maxlenlenmaxlen\n\
    \    local maxlenlenminlenlen\n    local maxlenlenmaxlen\n    local maxlenlenminlenlen\n\
    \    local maxlenlenmaxlen\n    local maxlenlenminlen\n}\n\ncandidate() {\n  \
    \  longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=$1\n    local longest\n\
    \    local length\n    local i\n    local string\n    local length\n    local\
    \ maxlen\n    local maxlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlen\n    local maxlenlenlen\n    local maxlenlenlen\n}\n\n\
    candidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n strings=$1\n    local maxlen=0\n\
    \    local maxstring\n    local i\n    for (( i=0; i<${#strings[@]}; i++ )); do\n\
    \        local string=${strings[i]}\n        local len=${#string}\n        if\
    \ (( len > maxlen )) ; then\n            maxstring=${string}\n            maxlen=${len}\n\
    \        fi\n    done\n    echo \"${maxstring}\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0kiljvpf.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a words\n \
    \   local -a lengths\n    local -a counts\n    local -a max\n    local -a maxlen\n\
    \    local -a maxcount\n    local -a maxcounts\n    local -a maxwords\n    local\
    \ -a maxlengths\n    local -a maxlength\n    local -a maxcount\n    local -a maxcounts\n\
    \    local -a maxwords\n    local -a maxlengths\n    local -a maxlength\n    local\
    \ -a maxcount\n    local -a maxcounts\n    local -a maxwords\n    local -a maxlengths\n\
    \    local -a maxlength\n    local -a maxcount\n    local -a maxcounts\n    local\
    \ -a maxwords\n    local -a maxlengths\n    local -a maxlength\n    local -a maxcount\n\
    \    local -a maxcounts\n    local -a maxwords\n    local -a maxlengths\n    local\
    \ -a maxlength\n    local -a maxcount\n    local -a maxcounts\n    local -a maxwords\n\
    \    local -a maxlengths\n    local -a maxlength\n    local -a maxcount\n    local\
    \ -a maxcounts\n    local -a maxwords\n    local -a maxlengths\n    local -a maxlength\n\
    \    local -a maxcount\n    local -a maxcounts\n    local -a maxwords\n    local\
    \ -a maxlengths\n    local -a maxlength\n    local -a maxcount\n    local -a maxcounts\n\
    \    local -a maxwords\n    local -a maxlengths\n    local -a maxlength\n    local\
    \ -a maxcount\n    local -a maxcounts\n    local -a maxwords\n    local -a maxlengths\n\
    \    local -a maxlength\n    local -a maxcount\n    local -a maxcounts\n    local\
    \ -a maxwords\n    local -a maxlengths\n    local -a maxlength\n    local -a maxcount\n\
    \    local -a maxcounts\n    local -a maxwords\n    local -a maxlengths\n    local\
    \ -a maxlength\n    local -a maxcount\n    local -a maxcounts\n    local -a maxwords\n\
    \    local -a maxlengths\n    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local L\n    local length\n    local\
    \ max\n    local maxlen\n    local i\n    local j\n    local tmp\n    local tmplen\n\
    \    local tmpstr\n    local tmpstrlen\n    local tmpstrlen2\n    local tmpstrlen3\n\
    \    local tmpstrlen4\n    local tmpstrlen5\n    local tmpstrlen6\n    local tmpstrlen7\n\
    \    local tmpstrlen8\n    local tmpstrlen9\n    local tmpstrlen10\n    local\
    \ tmpstrlen11\n    local tmpstrlen12\n    local tmpstrlen13\n    local tmpstrlen14\n\
    \    local tmpstrlen15\n    local tmpstrlen16\n    local tmpstrlen17\n    local\
    \ tmpstrlen18\n    local tmpstrlen19\n    local tmpstrlen20\n    local tmpstrlen21\n\
    \    local tmpstrlen22\n    local tmpstrlen23\n    local tmpstrlen24\n    local\
    \ tmpstrlen25\n    local tmpstrlen26\n    local tmpstrlen27\n    local tmpstrlen28\n\
    \    local tmpstrlen29\n    local tmpstrlen30\n    local tmpstrlen31\n    local\
    \ tmpstrlen32\n    local tmpstrlen33\n    local tmpstrlen34\n    local tmpstrlen35\n\
    \    local tmpstrlen36\n    local tmpstrlen37\n    local tmpstrlen38\n    local\
    \ tmpstrlen39\n    local tmpstrlen40\n    local tmpstrlen41\n    local tmpstrlen42\n\
    \    local tmpstrlen43\n    local tmpstrlen44\n    local tmpstrlen45\n    local\
    \ tmpstrlen46\n    local tmpstrlen47\n    local tmpstrlen48\n    local tmpstrlen49\n\
    \    local tmpstrlen50\n    local tmpstrlen51\n    local tmpstrlen52\n    local\
    \ tmpstrlen53\n    local tmpstrlen54\n    local tmpstrlen55\n    local tmpstrlen56\n\
    \    local tmpstrlen57\n    local tmpstrlen58\n    local tmpstrlen59\n    local\
    \ tmpstrlen60\n    local tmpstrlen61\n    local tmpstrlen62\n    local tmpstrlen63\n\
    \    local tmpstrlen64\n    local tmpstrlen65\n    local tmpstrlen66\n    local\
    \ tmpstrlen67\n    local tmpstrlen\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in $list; do\n        local strlen=$(echo\
    \ $str | wc -c)\n        if [ $strlen -gt $maxlen ]; then\n            maxlen=$strlen\n\
    \            maxstr=$str\n        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6losx_fp.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest len\n    longest=\"None\"\
    \n    len=0\n    for s in \"$@\"; do\n        [[ $len -eq 0 ]] && len=\"${#s}\"\
    \n        [[ $len -gt \"${#longest}\" ]] && longest=\"${s}\"\n    done\n    echo\
    \ \"$longest\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest_str=\"\"\n    local longest_len=0\n\
    \    local longest_idx=0\n    local longest_len_idx=0\n    local longest_len_idx2=0\n\
    \    local longest_len_idx3=0\n    local longest_len_idx4=0\n    local longest_len_idx5=0\n\
    \    local longest_len_idx6=0\n    local longest_len_idx7=0\n    local longest_len_idx8=0\n\
    \    local longest_len_idx9=0\n    local longest_len_idx10=0\n    local longest_len_idx11=0\n\
    \    local longest_len_idx12=0\n    local longest_len_idx13=0\n    local longest_len_idx14=0\n\
    \    local longest_len_idx15=0\n    local longest_len_idx16=0\n    local longest_len_idx17=0\n\
    \    local longest_len_idx18=0\n    local longest_len_idx19=0\n    local longest_len_idx20=0\n\
    \    local longest_len_idx21=0\n    local longest_len_idx22=0\n    local longest_len_idx23=0\n\
    \    local longest_len_idx24=0\n    local longest_len_idx25=0\n    local longest_len_idx26=0\n\
    \    local longest_len_idx27=0\n    local longest_len_idx28=0\n    local longest_len_idx29=0\n\
    \    local longest_len_idx30=0\n    local longest_len_idx31=0\n    local longest_len_idx32=0\n\
    \    local longest_len_idx33=0\n    local longest_len_idx34=0\n    local longest_len_idx35=0\n\
    \    local longest_len_idx36=0\n    local longest_len_idx37=0\n    local longest_len_idx38=0\n\
    \    local longest_len_idx39=0\n    local longest_len_idx40=0\n    local longest_len_idx41=0\n\
    \    local longest_len_idx42=0\n    local longest_len_idx43=0\n    local longest_len_idx44=0\n\
    \    local longest_len_idx45=0\n    local longest_len_idx46=0\n    local longest_len_idx47=0\n\
    \    local longest_len_idx48=0\n    local longest_len_idx49=0\n    local longest_len_idx50=0\n\
    \    local longest_len_idx51=0\n    local longest_len_idx52=0\n    local longest_len_idx53=0\n\
    \    local longest_len_idx54=0\n    local longest_len_idx\n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxidx=0\n    local maxidx2=0\n    local maxidx3=0\n\
    \    local maxidx4=0\n    local maxidx5=0\n    local maxidx6=0\n    local maxidx7=0\n\
    \    local maxidx8=0\n    local maxidx9=0\n    local maxidx10=0\n    local maxidx11=0\n\
    \    local maxidx12=0\n    local maxidx13=0\n    local maxidx14=0\n    local maxidx15=0\n\
    \    local maxidx16=0\n    local maxidx17=0\n    local maxidx18=0\n    local maxidx19=0\n\
    \    local maxidx20=0\n    local maxidx21=0\n    local maxidx22=0\n    local maxidx23=0\n\
    \    local maxidx24=0\n    local maxidx25=0\n    local maxidx26=0\n    local maxidx27=0\n\
    \    local maxidx28=0\n    local maxidx29=0\n    local maxidx30=0\n    local maxidx31=0\n\
    \    local maxidx32=0\n    local maxidx33=0\n    local maxidx34=0\n    local maxidx35=0\n\
    \    local maxidx36=0\n    local maxidx37=0\n    local maxidx38=0\n    local maxidx39=0\n\
    \    local maxidx40=0\n    local maxidx41=0\n    local maxidx42=0\n    local maxidx43=0\n\
    \    local maxidx44=0\n    local maxidx45=0\n    local maxidx46=0\n    local maxidx47=0\n\
    \    local maxidx48=0\n    local maxidx49=0\n    local maxidx50=0\n    local maxidx51=0\n\
    \    local maxidx52=0\n    local maxidx53=0\n    local maxidx54=0\n    local maxidx55=0\n\
    \    local maxidx56=0\n    local maxidx57=0\n    local maxidx58=0\n    local maxidx59=0\n\
    \    local maxidx60=0\n    local maxidx61=0\n    local maxidx62=0\n    local maxidx63=0\n\
    \    local maxidx64=0\n    local maxidx65=0\n    local maxidx66=0\n    local maxidx67=0\n\
    \    local maxidx68=0\n    local maxidx69=0\n    local maxidx70=0\n    local maxidx\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwq8uxpdz.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local L\n    local maxlen=0\n    local\
    \ maxstr=\"\"\n    for L in \"$@\"; do\n        [[ ${#L} -gt ${maxlen} ]] || maxlen=${#L}\n\
    \        [[ ${#L} -gt ${maxlen} ]] || maxstr=\"${L}\"\n    done\n    echo \"${maxstr}\"\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen\n}\n\ncandidate() {\n  \
    \  longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphs1pokmh.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr\n    local i\n    for (( i=0; i<${#list[@]}; i++ )); do\n  \
    \      local str=${list[$i]}\n        local len=${#str}\n        if (( len > maxlen\
    \ )) ; then\n            maxstr=${str}\n            maxlen=len\n        fi\n \
    \   done\n    echo \"${maxstr}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw3_8trm5.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen=0\n    local maxstrlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlenlenlenlenlenlenlenlen\n}\n\ncandidate() {\n  \
    \  longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjgrdnox4.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local length\n   \
    \ local string\n    local i\n    local j\n    local len\n    local max\n    local\
    \ maxlen\n    local maxlenlen\n    local maxlenlenlen\n    local maxlenlenlenlen\n\
    \    local maxlenlenlenlenlen\n    local maxlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlen=0\n    local -n maxstr=\n    local\
    \ -n maxstrlen=0\n    local -n maxstrpos=0\n    local -n maxstrlenpos=0\n    local\
    \ -n maxstrlenlen=0\n    local -n maxstrlenlenpos=0\n    local -n maxstrlenlenlen=0\n\
    \    local -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n    local\
    \ -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n    local -n maxstrlenlenlenpos=0\n\
    \    local -n maxstrlenlenlenlen=0\n    local -n maxstrlenlenlenpos=0\n    local\
    \ -n maxstrlenlenlenlen=0\n    local -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n\
    \    local -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n    local\
    \ -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n    local -n maxstrlenlenlenpos=0\n\
    \    local -n maxstrlenlenlenlen=0\n    local -n maxstrlenlenlenpos=0\n    local\
    \ -n maxstrlenlenlenlen=0\n    local -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n\
    \    local -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n    local\
    \ -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n    local -n maxstrlenlenlenpos=0\n\
    \    local -n maxstrlenlenlenlen=0\n    local -n maxstrlenlenlenpos=0\n    local\
    \ -n maxstrlenlenlenlen=0\n    local -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n\
    \    local -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n    local\
    \ -n maxstrlenlenlenpos=0\n    local -n maxstrlenlenlenlen=0\n    local -n maxstrlenlen\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptfo4xd3_.sh: line 13: local: `'': not a valid identifier

    /tmp/tmptfo4xd3_.sh: line 14: local: `'': not a valid identifier

    /tmp/tmptfo4xd3_.sh: line 15: local: `'': not a valid identifier

    /tmp/tmptfo4xd3_.sh: line 16: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 17: local: `'': not a valid identifier

    /tmp/tmptfo4xd3_.sh: line 18: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 19: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 20: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 23: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmptfo4xd3_.sh: line 38: local: `0'': invalid'
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local strings=$1\n\
    \    local length\n    local i\n    local maxlen\n    local maxlenlen\n    local\
    \ maxlenlenlen\n    local maxlenlenlenlen\n    local maxlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n \
    \   local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local -a lengths\n    local -i maxlen\n    local -i i\n    local len\n    local\
    \ str\n    local -n max\n    local -n maxlen\n    local -n maxlen2\n    local\
    \ -n maxlen3\n    local -n maxlen4\n    local -n maxlen5\n    local -n maxlen6\n\
    \    local -n maxlen7\n    local -n maxlen8\n    local -n maxlen9\n    local -n\
    \ maxlen10\n    local -n maxlen11\n    local -n maxlen12\n    local -n maxlen13\n\
    \    local -n maxlen14\n    local -n maxlen15\n    local -n maxlen16\n    local\
    \ -n maxlen17\n    local -n maxlen18\n    local -n maxlen19\n    local -n maxlen20\n\
    \    local -n maxlen21\n    local -n maxlen22\n    local -n maxlen23\n    local\
    \ -n maxlen24\n    local -n maxlen25\n    local -n maxlen26\n    local -n maxlen27\n\
    \    local -n maxlen28\n    local -n maxlen29\n    local -n maxlen30\n    local\
    \ -n maxlen31\n    local -n maxlen32\n    local -n maxlen33\n    local -n maxlen34\n\
    \    local -n maxlen35\n    local -n maxlen36\n    local -n maxlen37\n    local\
    \ -n maxlen38\n    local -n maxlen39\n    local -n maxlen40\n    local -n maxlen41\n\
    \    local -n maxlen42\n    local -n maxlen43\n    local -n maxlen44\n    local\
    \ -n maxlen45\n    local -n maxlen46\n    local -n maxlen47\n    local -n maxlen48\n\
    \    local -n maxlen49\n    local -n maxlen50\n    local -n maxlen51\n    local\
    \ -n maxlen52\n    local -n maxlen53\n    local -n maxlen54\n    local -n maxlen55\n\
    \    local -n maxlen56\n    local -n maxlen57\n    local -n maxlen58\n    local\
    \ -n maxlen59\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr\n    for str in $list; do\n        local strlen=$(echo $str\
    \ | wc -c)\n        if [ $strlen -gt $maxlen ]; then\n            maxlen=$strlen\n\
    \            maxstr=$str\n        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmcewerr_.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local length\n   \
    \ local string\n    local count\n\n    string=$1\n    length=${#string}\n    longest=\n\
    \    count=\n    while [[ $string ]]; do\n        (( count++ ))\n        if [[\
    \ $count -gt $length ]]; then\n            longest=$string\n            break\n\
    \        fi\n        string=${string#*[![:space:]]}\n    done\n    echo \"$longest\"\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local len=0\n \
    \   local max\n    local i\n    for ((i=0; i<${#list[@]}; i++)); do\n        len=${#list[$i]}\n\
    \        if ((len > len)); then\n            len=${len}\n            max=${list[$i]}\n\
    \        fi\n    done\n    echo \"${max}\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8cfcfzey.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlen=0\n    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlen\n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmuia6zr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local L=\"$1\"\n    local S=\"\"\n  \
    \  local LMAX=0\n    local LMIN=0\n    local LCOUNT=0\n    local LCOUNTMAX=0\n\
    \    local LCOUNTMIN=0\n    local LCOUNTCOUNT=0\n    local LCOUNTCOUNTMAX=0\n\
    \    local LCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNT=0\n    local LCOUNTCOUNTCOUNTMAX=0\n\
    \    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n    local\
    \ LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNTMAX=0\n    local LCOUNTCOUNTCOUNTMIN=0\n    local LCOUNTCOUNTCOUNTCOUNT=0\n\
    \    local LCOUNTCOUNTCOUNT\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [[ $i -lt ${#list[*]} ]]; do\n\
    \        local str=\"${list[$i]}\"\n        local len=${#str}\n        if (( len\
    \ > maxlen )) ; then\n            maxstr=$str\n            maxlen=len\n      \
    \  fi\n        i=$(( i + 1 ))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzm_zmeni.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq | wc -l) )\n  \
    \  local max=0\n    local maxstring\n    for (( i=0; i < ${#strings[*]} && ${lengths[$i]}\
    \ > ${max}; i++ )); do\n        (( ${lengths[$i]} > max )) && max=${lengths[$i]}\n\
    \        maxstring=${strings[$i]}\n    done\n    echo ${maxstring} || return 1\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbb45hk3s.sh: line 17: ((: i < 1 &&  > 1: syntax error: operand
    expected (error token is "> 1")

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    for str in \"${list[@]}\"; do\n        local len=${#str}\n\
    \        if [[ $len > $maxlen ]]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp08i7avuo.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlength=\n    local -n maxelement=\n   \
    \ local -n maxelement=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -n element=\n    local\
    \ -n element=\n    local -n element=\n    local -n element=\n    local -n element=\n\
    \    local -n element=\n    local -n element=\n    local -\n}\n\ncandidate() {\n\
    \    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy\
    \ zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfb7jztd7.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 16: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 28: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 29: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 30: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 31: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 32: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 33: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 34: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 35: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 36: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 37: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 38: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 39: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 40: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 41: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 42: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 43: local: `'': not a valid identifier

    /tmp/tmpfb7jztd7.sh: line 44: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxidx=0\n    for idx in \"${!list[@]}\"; do\n\
    \        local str=${list[$idx]}\n        local len=${#str}\n        if (( len\
    \ > maxlen )) ; then\n            maxlen=$len\n            maxstr=$str\n     \
    \       maxidx=$idx\n        fi\n    done\n    echo ${maxstr}\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5jhghmm7.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 2
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos\n    local i\n    for ((i=0; i<${#list[@]}; i++)); do\n       \
    \ local str=${list[$i]}\n        local strlen=${#str}\n        if (( strlen >\
    \ maxstrlen )) ; then\n            maxstrlen=${strlen}\n            maxstrpos=$i\n\
    \        fi\n        if (( strlen > maxstrlenpos )) ; then\n            maxstrlenpos=$i\n\
    \        fi\n    done\n    if (( maxstrlen > maxlen )) ; then\n        maxlen=${maxstrlen}\n\
    \        maxstr=${list[maxstrpos]}\n    fi\n    if (( maxstrlen > maxstrlen ))\
    \ ; then\n        maxstrlen=${maxstrlen}\n        maxstr=${list[maxstrpos]}\n\
    \    fi\n    if (( maxstrlen > maxstrlenpos )) ; then\n        maxstrlenpos=${maxstrlenpos}\n\
    \        maxstr=${list[maxstrpos]}\n    fi\n    if (( maxstrlen > maxstrlenpos\
    \ )) ; then\n        maxstrlenpos=${maxstrlenpos}\n        maxstr=${list[maxstrpos]}\n\
    \    fi\n    if (( maxstrlen > maxstrlenpos )) ; then\n        maxstrlenpos=${maxstrlenpos}\n\
    \        maxstr=${list[maxstrpos]}\n    fi\n    if (( maxstrlen > maxstrlenpos\
    \ )) ; then\n        maxstrlenpos=${maxstrlenpos}\n        maxstr=${list[maxstrpos]}\n\
    \    fi\n    if (( maxstrlen > maxstrlenpos )) ; then\n        maxstrlenpos=${maxstrlenpos}\n\
    \        maxstr=${list[maxstrpos]}\n    fi\n    if (( maxstrlen > maxstrlenpos\
    \ )) ; then\n        maxstrlenpos=${maxstrlenpos}\n        maxstr=${list[maxstrpos]}\n\
    \    fi\n    if (( maxstrlen > maxstrlenpos )) ; then\n        maxstrlenpos=${maxstrlenpos}\n\
    \        maxstr=${list[maxstrpos]}\n    fi\n    if (( maxstrlen > maxstrlenpos\
    \ )) ; then\n        maxstrlenpos=${maxstrlenpos}\n        maxstr=${list[maxstrpos]}\n\
    \    fi\n    if (( maxstrlen > maxstrlenpos )) ; then\n        maxstrlenpos=${maxstrlenpos}\n\
    \        maxstr=${list[maxstrpos]}\n    fi\n    if (( maxstrlen > \n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyqsc5bee.sh: line 75: unexpected EOF while looking for matching
    `)''

    /tmp/tmpyqsc5bee.sh: line 90: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxidx=0\n    local maxidx2=0\n    local maxidx3=0\n\
    \    local maxidx4=0\n    local maxidx5=0\n    local maxidx6=0\n    local maxidx7=0\n\
    \    local maxidx8=0\n    local maxidx9=0\n    local maxidx10=0\n    local maxidx11=0\n\
    \    local maxidx12=0\n    local maxidx13=0\n    local maxidx14=0\n    local maxidx15=0\n\
    \    local maxidx16=0\n    local maxidx17=0\n    local maxidx18=0\n    local maxidx19=0\n\
    \    local maxidx20=0\n    local maxidx21=0\n    local maxidx22=0\n    local maxidx23=0\n\
    \    local maxidx24=0\n    local maxidx25=0\n    local maxidx26=0\n    local maxidx27=0\n\
    \    local maxidx28=0\n    local maxidx29=0\n    local maxidx30=0\n    local maxidx31=0\n\
    \    local maxidx32=0\n    local maxidx33=0\n    local maxidx34=0\n    local maxidx35=0\n\
    \    local maxidx36=0\n    local maxidx37=0\n    local maxidx38=0\n    local maxidx39=0\n\
    \    local maxidx40=0\n    local maxidx41=0\n    local maxidx42=0\n    local maxidx43=0\n\
    \    local maxidx44=0\n    local maxidx45=0\n    local maxidx46=0\n    local maxidx47=0\n\
    \    local maxidx48=0\n    local maxidx49=0\n    local maxidx50=0\n    local maxidx51=0\n\
    \    local maxidx52=0\n    local maxidx53=0\n    local maxidx54=0\n    local maxidx55=0\n\
    \    local maxidx56=0\n    local maxidx57=0\n    local maxidx58=0\n    local maxidx59=0\n\
    \    local maxidx60=0\n    local maxidx61=0\n    local maxidx62=0\n    local maxidx63=0\n\
    \    local maxidx64=0\n    local maxidx65=0\n    local maxidx66=0\n    local maxidx67=0\n\
    \    local maxidx68=0\n    local maxidx69=0\n    local maxidx70=0\n    local maxidx\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwq8uxpdz.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=${#str}\n        if [ $len -gt\
    \ $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlzx8aj6.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=0\n\
    \    local max=\"\"\n    local maxlength=0\n    local i=0\n    while [ $i -lt\
    \ ${#list} ]; do\n        length=${#list[$i]}\n        if [ $length -gt $maxlength\
    \ ]; then\n            max=$list[$i]\n            maxlength=$length\n        fi\n\
    \        i=$((i+1))\n    done\n    if [ $maxlength -gt 0 ]; then\n        echo\
    \ \"$max\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    longest\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n\
    \    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www\
    \ kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest length\n    longest=\"\
    None\"\n    length=${#1}\n    for (( i=1; i<=$length; i++ )); do\n        if [[\
    \ ${#1} == $i ]]; then\n            longest=${1}\n        fi\n    done\n    echo\
    \ \"$longest\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local maxlen=0\n    local maxstr=\"\"\
    \n    local maxstrlen=0\n    local maxstrpos=0\n    local maxstrlen2=0\n    local\
    \ maxstrpos2=0\n    local maxstrlen3=0\n    local maxstrpos3=0\n    local maxstrlen4=0\n\
    \    local maxstrpos4=0\n    local maxstrlen5=0\n    local maxstrpos5=0\n    local\
    \ maxstrlen6=0\n    local maxstrpos6=0\n    local maxstrlen7=0\n    local maxstrpos7=0\n\
    \    local maxstrlen8=0\n    local maxstrpos8=0\n    local maxstrlen9=0\n    local\
    \ maxstrpos9=0\n    local maxstrlen10=0\n    local maxstrpos10=0\n    local maxstrlen11=0\n\
    \    local maxstrpos11=0\n    local maxstrlen12=0\n    local maxstrpos12=0\n \
    \   local maxstrlen13=0\n    local maxstrpos13=0\n    local maxstrlen14=0\n  \
    \  local maxstrpos14=0\n    local maxstrlen15=0\n    local maxstrpos15=0\n   \
    \ local maxstrlen16=0\n    local maxstrpos16=0\n    local maxstrlen17=0\n    local\
    \ maxstrpos17=0\n    local maxstrlen18=0\n    local maxstrpos18=0\n    local maxstrlen19=0\n\
    \    local maxstrpos19=0\n    local maxstrlen20=0\n    local maxstrpos20=0\n \
    \   local maxstrlen21=0\n    local maxstrpos21=0\n    local maxstrlen22=0\n  \
    \  local maxstrpos22=0\n    local maxstrlen23=0\n    local maxstrpos23=0\n   \
    \ local maxstrlen24=0\n    local maxstrpos24=0\n    local maxstrlen25=0\n    local\
    \ maxstrpos25=0\n    local maxstrlen26=0\n    local maxstrpos26=0\n    local maxstrlen27=0\n\
    \    local maxstrpos27=0\n    local maxstrlen28=0\n    local maxstrpos28=0\n \
    \   local maxstrlen29=0\n    local maxstrpos29=0\n    local maxstrlen30=0\n  \
    \  local maxstrpos30=0\n    local maxstrlen31=0\n    local maxstrpos31=0\n   \
    \ local maxstrlen32\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlen=0\n    local -n maxstr=\n    local\
    \ -n maxstrlen=0\n    local -n maxstrpos=0\n    local -n maxstrposlen=0\n    local\
    \ -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n\
    \    local -n maxstrlenlen=0\n    local -n maxstrlenlen=0\n    local -n maxstrlenlen\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpuh2lpy3h.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpuh2lpy3h.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpuh2lpy3h.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpuh2lpy3h.sh: line 16: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpuh2lpy3h.sh: line 18: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 19: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 20: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 23: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmpuh2lpy3h.sh: line 38: local: `0'': invalid'
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest_string\n    local longest_string_length\n\
    \    local longest_string_length_index\n    local longest_string_length_count\n\
    \    local longest_string_lengths\n    local longest_string_lengths_index\n  \
    \  local longest_string_lengths_count\n    local longest_string_lengths_length\n\
    \    local longest_string_lengths_length_index\n    local longest_string_lengths_length_count\n\
    \    local longest_string_lengths_lengths\n    local longest_string_lengths_lengths_index\n\
    \    local longest_string_lengths_lengths_count\n    local longest_string_lengths_lengths_length\n\
    \    local longest_string_lengths_lengths_length_index\n    local longest_string_lengths_lengths_length_count\n\
    \    local longest_string_lengths_lengths_lengths\n    local longest_string_lengths_lengths_lengths_index\n\
    \    local longest_string_lengths_lengths_lengths_count\n    local longest_string_lengths_lengths_lengths_length\n\
    \    local longest_string_lengths_lengths_lengths_length_index\n    local longest_string_lengths_lengths_lengths_length_count\n\
    \    local longest_string_lengths_lengths_lengths_lengths\n    local longest_string_lengths_lengths_lengths_length_index\n\
    \    local longest_string_lengths_lengths_lengths_length_count\n    local longest_string_lengths_lengths_lengths_lengths\n\
    \    local longest_string_lengths_lengths_lengths_lengths_index\n    local longest_string_lengths_lengths_lengths_lengths_count\n\
    \    local longest_string_lengths_lengths_lengths_lengths_length\n    local longest_string_lengths_lengths_lengths_lengths_length_index\n\
    \    local longest_string_lengths_lengths_lengths_lengths_length_count\n    local\
    \ longest_string_lengths_lengths_lengths_lengths_lengths\n    local longest_string_lengths_lengths_lengths_lengths_length_index\n\
    \    local longest_string_lengths_lengths_lengths_lengths_length_count\n    local\
    \ longest_string_lengths_lengths_lengths_lengths_lengths\n    local longest_string_lengths_lengths_lengths_lengths_length_index\n\
    \    local longest_string_lengths_lengths_lengths_lengths_length_count\n    local\
    \ longest_string_lengths_lengths_lengths_lengths_lengths_length\n    local longest_string_lengths_lengths_lengths_lengths_lengths_length_index\n\
    \    local longest_string_lengths_lengths_lengths_lengths_lengths_length_count\n\
    \n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local maxlen=0\n    local maxstr=\"\"\
    \n    local maxstrlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlenlen=0\n\
    \    local maxstrlenlen=0\n    local maxstrlenlen=0\n    local maxstrlen\n}\n\n\
    candidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxstrlen=0\n    local maxstrpos=0\n    local\
    \ maxstrlenpos=0\n    local maxstrlenlen=0\n    local maxstrlenlenpos=0\n    local\
    \ maxstrlenlenlen=0\n    local maxstrlenlenlenpos=0\n    local maxstrlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n\
    \    local maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local\
    \ maxstrlenlenlenlenpos=0\n    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n\
    \    local maxstrlenlenlenlenlen=0\n    local maxstrlenlenlenlenpos=0\n    local\
    \ maxstrlenlenlenlenlen=0\n    local maxstrlenlenlen\n}\n\ncandidate() {\n   \
    \ longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmuia6zr.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length\n\
    \    local max\n    local maxlength\n    local i\n    local j\n    local maxindex\n\
    \    local maxlengthindex\n    local maxlengthindex2\n    local maxlengthindex3\n\
    \    local maxlengthindex4\n    local maxlengthindex5\n    local maxlengthindex6\n\
    \    local maxlengthindex7\n    local maxlengthindex8\n    local maxlengthindex9\n\
    \    local maxlengthindex10\n    local maxlengthindex11\n    local maxlengthindex12\n\
    \    local maxlengthindex13\n    local maxlengthindex14\n    local maxlengthindex15\n\
    \    local maxlengthindex16\n    local maxlengthindex17\n    local maxlengthindex18\n\
    \    local maxlengthindex19\n    local maxlengthindex20\n    local maxlengthindex21\n\
    \    local maxlengthindex22\n    local maxlengthindex23\n    local maxlengthindex24\n\
    \    local maxlengthindex25\n    local maxlengthindex26\n    local maxlengthindex27\n\
    \    local maxlengthindex28\n    local maxlengthindex29\n    local maxlengthindex30\n\
    \    local maxlengthindex31\n    local maxlengthindex32\n    local maxlengthindex33\n\
    \    local maxlengthindex34\n    local maxlengthindex35\n    local maxlengthindex36\n\
    \    local maxlengthindex37\n    local maxlengthindex38\n    local maxlengthindex39\n\
    \    local maxlengthindex40\n    local maxlengthindex41\n    local maxlengthindex42\n\
    \    local maxlengthindex43\n    local maxlengthindex44\n    local maxlengthindex45\n\
    \    local maxlengthindex46\n    local maxlengthindex47\n    local maxlengthindex48\n\
    \    local maxlengthindex49\n    local maxlengthindex50\n    local maxlengthindex51\n\
    \    local maxlengthindex52\n    local maxlengthindex53\n    local maxlengthindex54\n\
    \    local maxlengthindex55\n    local maxlengthindex56\n    local maxlengthindex57\n\
    \    local maxlengthindex58\n    local maxlengthindex59\n    local maxlengthindex60\n\
    \    local maxlengthindex61\n    local maxlengthindex62\n    local maxlengthindex63\n\
    \    local maxlengthindex64\n    local maxlengthindex65\n    local maxlengthindex66\n\
    \    local maxlengthindex67\n    local maxlengthindex68\n    local maxlengthindex\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxidx=0\n    local maxidxstr=\"\"\n    local\
    \ maxidxstrlen=0\n    local maxidxstrlen2=0\n    local maxidxstrlen3=0\n    local\
    \ maxidxstrlen4=0\n    local maxidxstrlen5=0\n    local maxidxstrlen6=0\n    local\
    \ maxidxstrlen7=0\n    local maxidxstrlen8=0\n    local maxidxstrlen9=0\n    local\
    \ maxidxstrlen10=0\n    local maxidxstrlen11=0\n    local maxidxstrlen12=0\n \
    \   local maxidxstrlen13=0\n    local maxidxstrlen14=0\n    local maxidxstrlen15=0\n\
    \    local maxidxstrlen16=0\n    local maxidxstrlen17=0\n    local maxidxstrlen18=0\n\
    \    local maxidxstrlen19=0\n    local maxidxstrlen20=0\n    local maxidxstrlen21=0\n\
    \    local maxidxstrlen22=0\n    local maxidxstrlen23=0\n    local maxidxstrlen24=0\n\
    \    local maxidxstrlen25=0\n    local maxidxstrlen26=0\n    local maxidxstrlen27=0\n\
    \    local maxidxstrlen28=0\n    local maxidxstrlen29=0\n    local maxidxstrlen30=0\n\
    \    local maxidxstrlen31=0\n    local maxidxstrlen32=0\n    local maxidxstrlen33=0\n\
    \    local maxidxstrlen34=0\n    local maxidxstrlen35=0\n    local maxidxstrlen36=0\n\
    \    local maxidxstrlen37=0\n    local maxidxstrlen38=0\n    local maxidxstrlen39=0\n\
    \    local maxidxstrlen40=0\n    local maxidxstrlen41=0\n    local maxidxstrlen42=0\n\
    \    local maxidxstrlen43=0\n    local maxidxstrlen44=0\n    local maxidxstrlen45=0\n\
    \    local maxidxstrlen46=0\n    local maxidxstrlen47=0\n    local maxidxstrlen48=0\n\
    \    local maxidxstrlen49=0\n    local maxidxstrlen50=0\n    local maxidxstrlen51=0\n\
    \    local maxidxstrlen52=0\n    local maxidxstrlen53=0\n    local maxidx\n}\n\
    \ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7ctmg1qt.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest str\n    longest=\"None\"\
    \n    IFS=$'\\n' read -ra strs <<< \"$1\"\n    for str in \"${strs[@]}\"; do\n\
    \        len=${#str}\n        if [ \"${longest:0:len}\" != \"$longest\" ]; then\n\
    \            longest=\"$str\"\n        fi\n    done\n    echo \"$longest\"\n}\n\
    \ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -n |\
    \ awk '{print $2}') )\n    local longest\n    local length\n    for length in\
    \ \"${lengths[@]}\"; do\n        if [[ -z \"$longest\" ]]; then\n            longest=\"\
    $length\"\n        elif [[ \"$length\" -gt \"$longest\" ]]; then\n           \
    \ longest=\"$length\"\n        fi\n    done\n    if [[ -z \"$longest\" ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"${strings[*]} | cut -d' ' -f${longest}\"\
    \n    fi\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\"\
    \ ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length\n\
    \    local max\n    local i\n    local string\n    local lengths\n\n    lengths=()\n\
    \    for string in $list; do\n        length=${#string}\n        if [[ $length\
    \ -gt 0 ]]; then\n            lengths+=(\"$length\")\n        fi\n    done\n\n\
    \    if [[ ${#lengths[@]} -eq 0 ]]; then\n        echo \"None\"\n        return\n\
    \    fi\n\n    max=${lengths[0]}\n    for ((i=1; i<${#lengths[@]}; i++)); do\n\
    \        if [[ ${lengths[$i]} -gt $max ]]; then\n            max=${lengths[$i]}\n\
    \        fi\n    done\n\n    for ((i=0; i<${#lengths[@]}; i++)); do\n        if\
    \ [[ ${lengths[$i]} -eq $max ]]; then\n            string=${list[$i]}\n      \
    \  fi\n    done\n\n    echo \"$string\"\n}\n\ncandidate() {\n    longest \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"\
    zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local -a list\n  \
    \  local -a lengths\n    local -i maxlen\n    local -i maxidx\n    local -i maxlenidx\n\
    \    local -i maxlenlen\n    local -i maxlenlenidx\n    local -i maxlenlenlen\n\
    \    local -i maxlenlenlenidx\n    local -i maxlenlenlenlen\n    local -i maxlenlenlenlenidx\n\
    \    local -i maxlenlenlenlenlen\n    local -i maxlenlenlenlenidx\n    local -i\
    \ maxlenlenlenlenlen\n    local -i maxlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlen\n    local\
    \ -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n \
    \   local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlenlenlen\n\
    \    local -i maxlenlenlenlenlenlenlenidx\n    local -i maxlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local length=0\n    local max=\"\"\n\
    \    local maxlen=0\n    local arg\n    for arg in \"$@\"; do\n        length=$(echo\
    \ \"$arg\" | wc -c)\n        if [ \"$length\" -gt \"$maxlen\" ]; then\n      \
    \      maxlen=$length\n            max=\"$arg\"\n        fi\n    done\n    echo\
    \ \"$max\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\"\
    \ ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=$1\n    local lengths=()\n\
    \    local max=0\n    local maxlength=0\n    local maxstring=\"\"\n    local maxlengthstring=\"\
    \"\n    local i\n    local j\n    local length\n    local string\n    for (( i\
    \ = 0; i < ${#strings}; i++ )); do\n        length=${#strings[i]}\n        if\
    \ (( length < maxlength )); then\n            lengths=(\"${lengths[@]}\" \"$length\"\
    )\n        elif (( length == maxlength )); then\n            maxstring=\"${strings[i]}\"\
    \n            maxlengthstring=\"${strings[i]}\"\n        fi\n    done\n    for\
    \ (( i = 0; i < ${#lengths[@]}; i++ )); do\n        length=${lengths[$i]}\n  \
    \      if (( length == 0 )); then\n            lengths=(\"${lengths[@]}\" 0)\n\
    \        fi\n    done\n    for (( i = 0; i < ${#lengths[@]}; i++ )); do\n    \
    \    length=${lengths[$i]}\n        if (( length < maxlength )); then\n      \
    \      lengths=(\"${lengths[@]}\" \"$length\")\n        elif (( length == maxlength\
    \ )); then\n            maxstring=\"${maxstring} ${strings[i]}\"\n           \
    \ maxlengthstring=\"${maxlengthstring} ${strings[i]}\"\n        fi\n    done\n\
    \    if (( ${#lengths[@]} > 0 )); then\n        maxstring=\"${maxstring} ${strings[${#lengths[@]}\
    \ - 1]}\"\n        maxlengthstring=\"${maxlengthstring} ${strings[${#lengths[@]}\
    \ - 1]}\"\n    fi\n    echo \"$maxstring\"\n}\n\ncandidate() {\n    longest \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk\
    \ abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(for string in \"${strings[@]}\"; do echo \"${#string}\"; done | sort -n |\
    \ uniq -u) )\n    local longest\n    local length\n    for length in \"${lengths[@]}\"\
    ; do\n        if [[ -n \"${longest}\" ]]; then\n            [[ \"${length}\" -gt\
    \ \"${longest}\" ]] && longest=\"${length}\"\n        else\n            longest=\"\
    ${length}\"\n        fi\n    done\n    [[ -n \"${longest}\" ]] && echo \"${strings[${#lengths[@]}\
    \ + 1]}\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\"\
    \ ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local longest\n\
    \    local length\n    local i\n    local j\n    local max\n    local maxlength\n\
    \    local maxlengthstring\n    local maxlengthstringlength\n    local maxlengthstringlength2\n\
    \    local maxlengthstringlength3\n    local maxlengthstringlength4\n    local\
    \ maxlengthstringlength5\n    local maxlengthstringlength6\n    local maxlengthstringlength7\n\
    \    local maxlengthstringlength8\n    local maxlengthstringlength9\n    local\
    \ maxlengthstringlength10\n    local maxlengthstringlength11\n    local maxlengthstringlength12\n\
    \    local maxlengthstringlength13\n    local maxlengthstringlength14\n    local\
    \ maxlengthstringlength15\n    local maxlengthstringlength16\n    local maxlengthstringlength17\n\
    \    local maxlengthstringlength18\n    local maxlengthstringlength19\n    local\
    \ maxlengthstringlength20\n    local maxlengthstringlength21\n    local maxlengthstringlength22\n\
    \    local maxlengthstringlength23\n    local maxlengthstringlength24\n    local\
    \ maxlengthstringlength25\n    local maxlengthstringlength26\n    local maxlengthstringlength27\n\
    \    local maxlengthstringlength28\n    local maxlengthstringlength29\n    local\
    \ maxlengthstringlength30\n    local maxlengthstringlength31\n    local maxlengthstringlength32\n\
    \    local maxlengthstringlength33\n    local maxlengthstringlength34\n    local\
    \ maxlengthstringlength35\n    local maxlengthstringlength36\n    local maxlengthstringlength37\n\
    \    local maxlengthstringlength38\n    local maxlengthstringlength39\n    local\
    \ maxlengthstringlength40\n    local maxlengthstringlength41\n    local maxlengthstringlength42\n\
    \    local maxlengthstringlength43\n    local maxlengthstringlength44\n    local\
    \ maxlengthstringlength45\n    local maxlengthstringlength46\n    local maxlengthstringlength47\n\
    \    local maxlengthstringlength48\n    local maxlengthstringlength49\n    local\
    \ maxlengthstringlength50\n    local maxlengthstringlength51\n    local maxlengthstringlength52\n\
    \    local maxlengthstringlength53\n    local maxlengthstringlength54\n    local\
    \ maxlengthstringlength55\n    local maxlengthstringlength56\n    local maxlengthstringlength57\n\
    \    local maxlengthstringlength58\n    local maxlengthstringlength59\n    local\
    \ maxlength\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\"\
    \ ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local strings=( \"$@\" )\n    local lengths=(\
    \ $(echo \"${strings[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -c | sort -n |\
    \ awk '{print $2}') )\n    local longest\n    local length\n    for length in\
    \ \"${lengths[@]}\"; do\n        if [[ -z \"$longest\" ]]; then\n            longest=\"\
    $strings[0]\"\n        elif [[ ${#longest} -gt ${#length} ]]; then\n         \
    \   longest=\"$strings[0]\"\n        elif [[ ${#longest} -eq ${#length} ]]; then\n\
    \            longest=\"${strings[${#length}-1]}\"\n        fi\n    done\n    echo\
    \ \"$longest\"\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local longest\n    local string\n   \
    \ local length\n    local count\n    local i\n    local j\n    local lengths\n\
    \    local max\n    local maxLength\n    local maxCount\n    local maxIndex\n\
    \    local maxLengthIndex\n    local maxCountIndex\n    local maxLengthIndex2\n\
    \    local maxCountIndex2\n    local maxLengthIndex3\n    local maxCountIndex3\n\
    \    local maxLengthIndex4\n    local maxCountIndex4\n    local maxLengthIndex5\n\
    \    local maxCountIndex5\n    local maxLengthIndex6\n    local maxCountIndex6\n\
    \    local maxLengthIndex7\n    local maxCountIndex7\n    local maxLengthIndex8\n\
    \    local maxCountIndex8\n    local maxLengthIndex9\n    local maxCountIndex9\n\
    \    local maxLengthIndex10\n    local maxCountIndex10\n    local maxLengthIndex11\n\
    \    local maxCountIndex11\n    local maxLengthIndex12\n    local maxCountIndex12\n\
    \    local maxLengthIndex13\n    local maxCountIndex13\n    local maxLengthIndex14\n\
    \    local maxCountIndex14\n    local maxLengthIndex15\n    local maxCountIndex15\n\
    \    local maxLengthIndex16\n    local maxCountIndex16\n    local maxLengthIndex17\n\
    \    local maxCountIndex17\n    local maxLengthIndex18\n    local maxCountIndex18\n\
    \    local maxLengthIndex19\n    local maxCountIndex19\n    local maxLengthIndex20\n\
    \    local maxCountIndex20\n    local maxLengthIndex21\n    local maxCountIndex21\n\
    \    local maxLengthIndex22\n    local maxCountIndex22\n    local maxLengthIndex23\n\
    \    local maxCountIndex23\n    local maxLengthIndex24\n    local maxCountIndex24\n\
    \    local maxLengthIndex25\n    local maxCountIndex25\n    local maxLengthIndex26\n\
    \    local maxCountIndex26\n    local maxLengthIndex27\n    local maxCountIndex27\n\
    \    local maxLengthIndex28\n    local maxCountIndex28\n    local maxLengthIndex29\n\
    \    local maxCountIndex29\n    local maxLengthIndex30\n    local maxCountIndex30\n\
    \    local maxLengthIndex31\n    local maxCountIndex31\n    local maxLengthIndex32\n\
    \    local maxCountIndex32\n    local maxLengthIndex33\n    local maxCountIndex33\n\
    \    local maxLength\n}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"\
    x\" ]]\n    [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr\n    local i\n    local str\n    for str in \"${list[@]}\";\
    \ do\n        i=${#str}\n        if [ $i -gt $maxlen ]; then\n            maxlen=$i\n\
    \            maxstr=$str\n        fi\n    done\n    echo \"$maxstr\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7022jvyg.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local lengths=$(echo \"$1\" | tr \" \"\
    \ \"\\n\" | sort -n | uniq -c | sort -n | tail -1)\n    if [ -z \"$lengths\" ];\
    \ then\n        echo \"None\"\n    else\n        echo \"$lengths\"\n    fi\n}\n\
    \ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n strings=$1\n    local length=0\n\
    \    local max=\"\"\n    local maxlen=0\n    local i=0\n    while [ $i -lt ${#strings[*]}\
    \ ]; do\n        local string=${strings[$i]}\n        local length=${#string}\n\
    \        if [ $length -gt $maxlen ]; then\n            maxlen=$length\n      \
    \      max=$string\n        fi\n        i=$((i+1))\n    done\n    if [ $maxlen\
    \ -gt 0 ]; then\n        echo \"$max\"\n    else\n        echo \"None\"\n    fi\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_ygww921.sh: line 13: local: `'': not a valid identifier

    /tmp/tmp_ygww921.sh: line 13: local: `x y z'': invalid variable name for name
    reference

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local -n longest=\n\
    \    local -n length=\n    local -n maxlength=\n    local -n maxelement=\n   \
    \ local -n element=\n    local -n elements=\n    local -n maxelements=\n    local\
    \ -n maxlength=\n    local -n maxelement=\n    local -n element=\n    local -n\
    \ elements=\n    local -n maxelements=\n    local -n maxlength=\n    local -n\
    \ maxelement=\n    local -n element=\n    local -n elements=\n    local -n maxelements=\n\
    \    local -n maxlength=\n    local -n maxelement=\n    local -n element=\n  \
    \  local -n elements=\n    local -n maxelements=\n    local -n maxlength=\n  \
    \  local -n maxelement=\n    local -n element=\n    local -n elements=\n    local\
    \ -n maxelements=\n    local -n maxlength=\n    local -n maxelement=\n    local\
    \ -n element=\n    local -n elements=\n    local -n maxelements=\n    local -n\
    \ maxlength=\n    local -n maxelement=\n    local -n element=\n    local -n elements=\n\
    \    local -n maxelements=\n    local -n maxlength=\n    local -n maxelement=\n\
    \    local -n element=\n    local -n elements=\n    local -n maxelements=\n  \
    \  local -n maxlength=\n    local -n maxelement=\n    local -n element=\n    local\
    \ -n elements=\n    local -n maxelements=\n    local -n maxlength=\n    local\
    \ -n maxelement=\n    local -n element=\n    local -n elements=\n    local -n\
    \ maxelements=\n    local -n maxlength=\n    local -n maxelement=\n    local -n\
    \ element=\n    local -n elements=\n    local -n maxelements=\n    local -n maxlength=\n\
    \    local -n maxelement=\n    local -n element=\n    local -n elements=\n   \
    \ local -n maxelements=\n    local -n maxlength=\n    local -n maxelement=\n \
    \   local -n element=\n    local -n elements=\n    local -n maxelements=\n   \
    \ local -n maxlength=\n    local -n maxelement=\n    local -n element=\n    local\
    \ -n elements=\n    local -n maxelements=\n    local \n}\n\ncandidate() {\n  \
    \  longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"None\"\
    \ ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"x yyy zzzz\
    \ www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzc1jqryz.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 16: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 25: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 28: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 29: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 30: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 31: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 32: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 33: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 34: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 35: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 36: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 37: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 38: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 39: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 40: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 41: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 42: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 43: local: `'': not a valid identifier

    /tmp/tmpzc1jqryz.sh: line 44: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local maxlen=0\n    local maxstr=\"\"\
    \n    local maxidx=0\n    local maxidx2=0\n    local maxidx3=0\n    local maxidx4=0\n\
    \    local maxidx5=0\n    local maxidx6=0\n    local maxidx7=0\n    local maxidx8=0\n\
    \    local maxidx9=0\n    local maxidx10=0\n    local maxidx11=0\n    local maxidx12=0\n\
    \    local maxidx13=0\n    local maxidx14=0\n    local maxidx15=0\n    local maxidx16=0\n\
    \    local maxidx17=0\n    local maxidx18=0\n    local maxidx19=0\n    local maxidx20=0\n\
    \    local maxidx21=0\n    local maxidx22=0\n    local maxidx23=0\n    local maxidx24=0\n\
    \    local maxidx25=0\n    local maxidx26=0\n    local maxidx27=0\n    local maxidx28=0\n\
    \    local maxidx29=0\n    local maxidx30=0\n    local maxidx31=0\n    local maxidx32=0\n\
    \    local maxidx33=0\n    local maxidx34=0\n    local maxidx35=0\n    local maxidx36=0\n\
    \    local maxidx37=0\n    local maxidx38=0\n    local maxidx39=0\n    local maxidx40=0\n\
    \    local maxidx41=0\n    local maxidx42=0\n    local maxidx43=0\n    local maxidx44=0\n\
    \    local maxidx45=0\n    local maxidx46=0\n    local maxidx47=0\n    local maxidx48=0\n\
    \    local maxidx49=0\n    local maxidx50=0\n    local maxidx51=0\n    local maxidx52=0\n\
    \    local maxidx53=0\n    local maxidx54=0\n    local maxidx55=0\n    local maxidx56=0\n\
    \    local maxidx57=0\n    local maxidx58=0\n    local maxidx59=0\n    local maxidx60=0\n\
    \    local maxidx61=0\n    local maxidx62=0\n    local maxidx63=0\n    local maxidx64=0\n\
    \    local maxidx65=0\n    local maxidx66=0\n    local maxidx67=0\n    local maxidx68=0\n\
    \    local maxidx69=0\n    local maxidx70=0\n    local maxidx71=0\n    local maxidx\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local i=0\n    while [ $i -lt ${#list[*]} ]; do\n\
    \        local str=${list[$i]}\n        local len=$(echo $str | wc -c)\n     \
    \   if [ $len -gt $maxlen ]; then\n            maxlen=$len\n            maxstr=$str\n\
    \        fi\n        i=$((i+1))\n    done\n    echo \"$maxstr\"\n}\n\ncandidate()\
    \ {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate \"\
    x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcb_e5xe3.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local list=\"$1\"\n    local length=0\n\
    \    local max=\"\"\n    local maxlen=0\n    local i\n    for ((i=0; i<${#list};\
    \ i++)); do\n        local item=\"${list[i]}\"\n        local len=\"${#item}\"\
    \n        if [ \"${len}\" -gt \"${maxlen}\" ]; then\n            maxlen=\"${len}\"\
    \n            max=\"${item}\"\n        fi\n    done\n    echo \"${max}\"\n}\n\n\
    candidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660050422
- exit_code: 1
  program: "#!/bin/bash\n# Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n# strings of the same length. Return None\
    \ in case the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest\
    \ \"a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a\
    \ space-separated list\nlongest() {\n    local -n list=$1\n    local maxlen=0\n\
    \    local maxstr=\"\"\n    local maxidx=0\n    local maxidx2=0\n    local maxidx3=0\n\
    \    local maxidx4=0\n    local maxidx5=0\n    local maxidx6=0\n    local maxidx7=0\n\
    \    local maxidx8=0\n    local maxidx9=0\n    local maxidx10=0\n    local maxidx11=0\n\
    \    local maxidx12=0\n    local maxidx13=0\n    local maxidx14=0\n    local maxidx15=0\n\
    \    local maxidx16=0\n    local maxidx17=0\n    local maxidx18=0\n    local maxidx19=0\n\
    \    local maxidx20=0\n    local maxidx21=0\n    local maxidx22=0\n    local maxidx23=0\n\
    \    local maxidx24=0\n    local maxidx25=0\n    local maxidx26=0\n    local maxidx27=0\n\
    \    local maxidx28=0\n    local maxidx29=0\n    local maxidx30=0\n    local maxidx31=0\n\
    \    local maxidx32=0\n    local maxidx33=0\n    local maxidx34=0\n    local maxidx35=0\n\
    \    local maxidx36=0\n    local maxidx37=0\n    local maxidx38=0\n    local maxidx39=0\n\
    \    local maxidx40=0\n    local maxidx41=0\n    local maxidx42=0\n    local maxidx43=0\n\
    \    local maxidx44=0\n    local maxidx45=0\n    local maxidx46=0\n    local maxidx47=0\n\
    \    local maxidx48=0\n    local maxidx49=0\n    local maxidx50=0\n    local maxidx51=0\n\
    \    local maxidx52=0\n    local maxidx53=0\n    local maxidx54=0\n    local maxidx55=0\n\
    \    local maxidx56=0\n    local maxidx57=0\n    local maxidx58=0\n    local maxidx59=0\n\
    \    local maxidx60=0\n    local maxidx61=0\n    local maxidx62=0\n    local maxidx63=0\n\
    \    local maxidx64=0\n    local maxidx65=0\n    local maxidx66=0\n    local maxidx67=0\n\
    \    local maxidx68=0\n    local maxidx69=0\n    local maxidx70=0\n    local maxidx\n\
    }\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n    [[ $(candidate\
    \ \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwq8uxpdz.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660050422

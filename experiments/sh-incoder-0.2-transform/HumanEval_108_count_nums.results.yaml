language: sh
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ count=0\n  local sign\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local first=0\n\
    \    local last=0\n    local digit\n    local i\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        digit=${array[$i]}\n        if (( sign )); then\n       \
    \     digit=$(( 10#$digit ))\n        fi\n        if (( digit )); then\n     \
    \       sum=$(( sum + digit ))\n            count=$(( count + 1 ))\n        fi\n\
    \    done\n    if (( sum > 0 )); then\n        first=$(( sum / 10 ))\n       \
    \ last=$(( sum % 10 ))\n        if (( first < 0 )); then\n            first=$((\
    \ 10#$first ))\n            last=$(( 10#$last ))\n        fi\n        digits=$((\
    \ digits + 1 ))\n        if (( first == last )); then\n            digits=$((\
    \ digits + 1 ))\n        fi\n    fi\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi7nu81cs.sh: line 29: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpi7nu81cs.sh: line 29: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local count=0\n    for num in \"${arr[@]}\"; do\n        if (( num < 0 ));\
    \ then\n            sum=$(( sum + num % 10 ))\n        else\n            sum=$((\
    \ sum + num % 10 ))\n            (( count++ ))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local nums=$(echo\
    \ $numbers | tr \" \" \"\\n\")\n    local nums_array=($nums)\n    local num_sum=0\n\
    \    local num_sum_tmp=0\n    local num_sum_tmp2=0\n    local num_sum_tmp3=0\n\
    \    local num_sum_tmp4=0\n    local num_sum_tmp5=0\n    local num_sum_tmp6=0\n\
    \    local num_sum_tmp7=0\n    local num_sum_tmp8=0\n    local num_sum_tmp9=0\n\
    \    local num_sum_tmp10=0\n    local num_sum_tmp11=0\n    local num_sum_tmp12=0\n\
    \    local num_sum_tmp13=0\n    local num_sum_tmp14=0\n    local num_sum_tmp15=0\n\
    \    local num_sum_tmp16=0\n    local num_sum_tmp17=0\n    local num_sum_tmp18=0\n\
    \    local num_sum_tmp19=0\n    local num_sum_tmp20=0\n    local num_sum_tmp21=0\n\
    \    local num_sum_tmp22=0\n    local num_sum_tmp23=0\n    local num_sum_tmp24=0\n\
    \    local num_sum_tmp25=0\n    local num_sum_tmp26=0\n    local num_sum_tmp27=0\n\
    \    local num_sum_tmp28=0\n    local num_sum_tmp29=0\n    local num_sum_tmp30=0\n\
    \    local num_sum_tmp31=0\n    local num_sum_tmp32=0\n    local num_sum_tmp33=0\n\
    \    local num_sum_tmp34=0\n    local num_sum_tmp35=0\n    local num_sum_tmp36=0\n\
    \    local num_sum_tmp37=0\n    local num_sum_tmp38=0\n    local num_sum_tmp39=0\n\
    \    local num_sum_tmp40=0\n    local num_sum_tmp41=0\n    local num_sum_tmp42=0\n\
    \    local num_sum_tmp43=0\n    local num_sum_tmp44=0\n    local num_sum_tmp45=0\n\
    \    local num_sum_tmp46=0\n    local num_sum_tmp47=0\n    local num_sum_tmp48=0\n\
    \    local num_sum_tmp49=0\n    local num_sum_tmp50=0\n    local num_sum_tmp51=0\n\
    \    local num_sum_tmp52=0\n    local num_sum_tmp53=0\n    local num_sum_tmp54=0\n\
    \    local num_sum_tmp55=0\n    local num_sum_tmp56=0\n    local num_sum_tmp57=0\n\
    \    local num_sum_tmp58=0\n    local num_sum_tmp59=0\n    local num_sum_tmp60\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=$1\n  local sum=0\n\
    \  local digits=0\n  local sign=0\n  local digit\n  local i\n  local j\n  local\
    \ num\n\n  for ((i=0; i<${#numbers}; i++)); do\n    num=${numbers[i]}\n    if\
    \ [[ $num -gt 0 ]]; then\n      digits=$((${#num} + ${#sign}))\n      sum=$((${sum}\
    \ + ${num}))\n      sign=$((${sign} + 1))\n    else\n      sign=$((${sign} + 1))\n\
    \    fi\n  done\n\n  echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk5vfk8e0.sh: line 26: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpk5vfk8e0.sh: line 26: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local nums=0\n\
    \  local sign\n  local i\n  for i in \"${arr[@]}\"; do\n    if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n      nums=$(( nums + i ))\n    else\n      sign=$(( sign > 0 ? 1\
    \ : -1 ))\n      nums=$(( nums + sign * $i ))\n    fi\n  done\n  echo $nums\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ num\n  local i\n  for i in $nums; do\n    num=$(echo $i | cut -d ' ' -f 1)\n\
    \    if [[ $num -gt 0 ]]; then\n      sum=$((sum + num))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i=0\n  while [ $i -lt ${#arr[@]} ]; do\n    sum=$(( sum + ${arr[$i]}\
    \ ))\n    i=$(( i + 1 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    local i\n    for (( i=0; i < ${#arr[@]}; i++ )); do\n        if (( ${arr[i]}\
    \ < 0 )); then\n            arr[i]=-${arr[i]}\n        fi\n        (( nums +=\
    \ ${arr[i]} ))\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local nums=$(echo\
    \ $numbers |sed 's/ /\\n/g')\n    local nums_array=($nums)\n    local nums_array_length=${#nums_array[@]}\n\
    \    local nums_array_sum=0\n    local nums_array_sum_tmp=0\n    local nums_array_sum_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local\
    \ nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local nums_array_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local nums=0\n\
    \  local i\n  for ((i=0; i < ${#arr[@]}; i++)); do\n    (( nums += ${arr[i]} ))\n\
    \  done\n  echo \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        if [[ $num -gt 0 ]]; then\n\
    \            sum=$((sum+num))\n            count=$((count+1))\n        fi\n  \
    \  done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local nums=0\n  local digits=0\n  local sign=0\n  local digit\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  \n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        (( sum += $num ))\n    \
    \    if (( sum > 0 )) ; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local num\n    for num in $numbers; do\n        ((sum+=num))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10\
    \ ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n\
    \    local i\n    for ((i=0; i < ${#arr[@]}; i++)); do\n        local j\n    \
    \    for ((j=0; j < 10; j++)); do\n            ((sum+=${arr[i]}*${j}))\n     \
    \   done\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6eh7093b.sh: line 15: local: `'': not a valid identifier

    /tmp/tmp6eh7093b.sh: line 15: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmp6eh7093b.sh: line 15: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        local num=${arr[$i]}\n    \
    \    if (( num < 0 )); then\n            sum=$(( sum + num % 10 ))\n        else\n\
    \            sum=$(( sum + num % 10 ))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local digits=0\n    local sign=0\n    local i\n    local j\n    local num\n\
    \    for ((i=0; i<${#numbers}; i++)); do\n        num=${numbers:$i:1}\n      \
    \  if [[ $num =~ ^-?[0-9]+$ ]]; then\n            sum=$((sum + num))\n       \
    \     digits=$((digits + ${#num}))\n        else\n            if ((sign > 0));\
    \ then\n                sum=$((sum + sign))\n                digits=$((digits\
    \ + sign))\n            fi\n            sign=$((num < 0 ? 1 : -1))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe4kx_gx0.sh: line 32: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local num\n    for num in $nums; do\n        if (( num < 0 )); then\n   \
    \         sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num\
    \ % 10 ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        local num=${arr[$i]}\n    \
    \    if (( num < 0 )); then\n            sum=$(( sum + num % 10 ))\n        else\n\
    \            sum=$(( sum + num % 10 ))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local\
    \ nums=\"\"\n  local i\n  for i in $arr; do\n    local j\n    for j in $(echo\
    \ $i | sed 's/^-\\([0-9]\\+\\)$/\\1/'); do\n      ((sum+=j))\n      nums=\"$nums\
    \ $j\"\n    done\n  done\n  echo $sum\n  echo $nums\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if [[ $num -gt 0 ]]; then\n       \
    \     (( nums++ ))\n        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i=0\n  while [ $i -lt ${#arr[@]} ]; do\n    (( sum += ${arr[$i]} ))\n\
    \    (( i++ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local nums=0\n    local i\n    for (( i=0; i < ${#arr[@]}; i++ )); do\n \
    \       (( sum += ${arr[i]} ))\n        if (( sum > 0 )) ; then\n            nums+=1\n\
    \        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local num\n    for num in $nums; do\n        if (( num < 0 )); then\n   \
    \         sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num\
    \ % 10 ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    for num in \"${arr[@]}\"; do\n        (( sum += num % 10 ))\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local digits=0\n  local nums=0\n  local i\n  local j\n  local k\n  local n\n\
    \  local m\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local \n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=$1\n  local nums=$(echo\
    \ $numbers | sed 's/ /\\n/g')\n  local nums_array=($nums)\n  local num_sum=0\n\
    \  local num_sums=0\n  local num_sums_array=()\n  local num_sums_array_length=${#num_sums_array[@]}\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    \  local num_sums_array_length=$((num_sums_array_length+1))\n  local num_sums_array_length=$((num_sums_array_length+1))\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1 sum=0\n    local i\
    \ num\n    for num in $nums; do\n        if (( num > 0 )); then\n            ((\
    \ sum += num % 10 ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        (( sum += (10#$num) ))\n\
    \        if (( sum > 0 )) ; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local count=0\n    for number in $numbers; do\n        (( sum += $number\
    \ ))\n        if (( sum > 0 )) ; then\n            (( count++ ))\n        fi\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    for num in $nums; do\n        if (( num > 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local -i sum=0\n\
    \    local -i num\n    for num in ${arr[@]}; do\n        if (( num > 0 )); then\n\
    \            (( sum += num % 10 ))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjupjcdy6.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpjupjcdy6.sh: line 15: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpjupjcdy6.sh: line 15: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( sum += ${arr[i]} ))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local n=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        if (( ${arr[i]} > 0 )); then\n\
    \            n=$(( n + 1 ))\n        fi\n    done\n    echo \"$n\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=\"$1\"\n    local sum=0\n\
    \    for num in $nums; do\n        ((sum+=num))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local n=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        local j=$(( ${arr[i]} + 1 ))\n\
    \        if (( j < 10 )); then\n            n=$(( n + j ))\n        else\n   \
    \         n=$(( n - j ))\n        fi\n    done\n    echo \"$n\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1 sum=0\n    for num\
    \ in $nums; do\n        if (( num < 0 )); then\n            sum=$(( sum + num\
    \ % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n        fi\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=$1\n  local sum=0\n\
    \  local digits=0\n  local sign=0\n  local first=true\n  local last=false\n  local\
    \ digit\n  local num\n  for num in $numbers\n  do\n    if [ $first ]\n    then\n\
    \      first=false\n      sign=$(( sign | 1 ))\n      continue\n    fi\n    digit=$((\
    \ num % 10 ))\n    digits=$(( digits + 1 ))\n    if [ $sign -eq 1 ]\n    then\n\
    \      if [ $digit -eq 0 ]\n      then\n        sum=$(( sum + 1 ))\n      else\n\
    \        sum=$(( sum + $digit ))\n      fi\n    else\n      if [ $digit -eq 0\
    \ ]\n      then\n        sum=$(( sum - $digits ))\n      else\n        sum=$((\
    \ sum - $digit ))\n      fi\n    fi\n    sign=$(( sign | 2 ))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local num=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        (( num+=${arr[i]}\
    \ ))\n        if (( num > 0 )); then\n            (( sum+=num % 10 ))\n      \
    \      num=0\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local\
    \ count=0\n  local num\n  local i\n  local j\n  local k\n  local digit\n\n  for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n    num=\"${arr[i]}\"\n    if [ -z \"$num\"\
    \ ]; then\n      continue\n    fi\n    for ((j=0; j<${#num}; j++)); do\n     \
    \ digit=\"${num:$j:1}\"\n      if [ \"$digit\" -eq \"$digit\" -a \"$digit\" -lt\
    \ 0 ]; then\n        digit=$((10#$digit))\n      fi\n      ((sum+=digit))\n  \
    \  done\n    if [ \"$sum\" -gt 0 ]; then\n      ((count++))\n      sum=0\n   \
    \ fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwygmoeh3.sh: line 31: [: -: integer expression expected

    /tmp/tmpwygmoeh3.sh: line 34: ((: -: syntax error: operand expected (error token
    is "-")

    /tmp/tmpwygmoeh3.sh: line 31: [:  : integer expression expected

    /tmp/tmpwygmoeh3.sh: line 31: [: -: integer expression expected

    /tmp/tmpwygmoeh3.sh: line 34: ((: -: syntax error: operand expected (error token
    is "-")

    /tmp/tmpwygmoeh3.sh: line 31: [:  : integer expression expected

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local nums=0\n\
    \  local i\n  local j\n  for ((i=0; i<${#arr[@]}; i++)); do\n    (( nums += ${arr[i]}\
    \ ))\n  done\n  echo $nums\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local firstdigit=0\n\
    \    local lastdigit=0\n    local firstsign=0\n    local lastsign=0\n    local\
    \ firstsigndigit=0\n    local lastsigndigit=0\n    local firstsigndigit2=0\n \
    \   local lastsigndigit2=0\n    local firstsigndigit3=0\n    local lastsigndigit3=0\n\
    \    local firstsigndigit4=0\n    local lastsigndigit4=0\n    local firstsigndigit5=0\n\
    \    local lastsigndigit5=0\n    local firstsigndigit6=0\n    local lastsigndigit6=0\n\
    \    local firstsigndigit7=0\n    local lastsigndigit7=0\n    local firstsigndigit8=0\n\
    \    local lastsigndigit8=0\n    local firstsigndigit9=0\n    local lastsigndigit9=0\n\
    \    local firstsigndigit10=0\n    local lastsigndigit10=0\n    local firstsigndigit11=0\n\
    \    local lastsigndigit11=0\n    local firstsigndigit12=0\n    local lastsigndigit12=0\n\
    \    local firstsigndigit13=0\n    local lastsigndigit13=0\n    local firstsigndigit14=0\n\
    \    local lastsigndigit14=0\n    local firstsigndigit15=0\n    local lastsigndigit15=0\n\
    \    local firstsigndigit16=0\n    local lastsigndigit16=0\n    local firstsigndigit17=0\n\
    \    local lastsigndigit17=0\n    local firstsigndigit18=0\n    local lastsigndigit18=0\n\
    \    local firstsigndigit19=0\n    local lastsigndigit19=0\n    local firstsigndigit20=0\n\
    \    local lastsigndigit20=0\n    local firstsigndigit21=0\n    local lastsigndigit21=0\n\
    \    local firstsigndigit22=0\n    local lastsigndigit22=0\n    local firstsigndigit23=0\n\
    \    local lastsigndigit23=0\n    local firstsigndigit24=0\n    local lastsigndigit24=0\n\
    \    local firstsigndigit25=0\n    local lastsigndigit25=0\n    local firstsigndigit26=0\n\
    \    local lastsigndigit26=0\n    local firstsigndigit27=0\n    local lastsigndigit27=0\n\
    \    local firstsigndigit28=0\n    local lastsigndigit28=0\n    local firstsigndigit29=0\n\
    \    local lastsigndigit29=0\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local num\n    for num in $nums; do\n        if (( num < 0 )); then\n   \
    \         sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num\
    \ % 10 ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        if [[ $num =~ ^-?[0-9]+$\
    \ ]]; then\n            sum=$((sum+num))\n        else\n            sum=$((sum+num))\n\
    \            ((count++))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local digit\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local n=0\n  for\
    \ n in \"${arr[@]}\"; do\n    if [[ $n =~ ^-?[0-9]+$ ]]; then\n      (( n >= 0\
    \ )) && continue\n      (( n <= -9 )) && continue\n      (( n <= 0 )) && continue\n\
    \      (( n <= 9 )) && continue\n      (( n <= 99 )) && continue\n      (( n <=\
    \ 999 )) && continue\n      (( n <= 9999 )) && continue\n      (( n <= 9999999\
    \ )) && continue\n      (( n <= 999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      (( n <= 99999999999 )) && continue\n      (( n <= 99999999999\
    \ )) && continue\n      \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_fgp_3yk.sh: line 58: syntax error near unexpected token `}''

    /tmp/tmp_fgp_3yk.sh: line 58: `}''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local nums=0\n  local digits=0\n  local sign=0\n  local first=0\n  local last=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  local digits=0\n  local sign=0\n  local first=0\n  local last=0\n\
    \  local digit\n  local digit2\n  local digit3\n  local digit4\n  local digit5\n\
    \  local digit6\n  local digit7\n  local digit8\n  local digit9\n  local digit10\n\
    \  local digit11\n  local digit12\n  local digit13\n  local digit14\n  local digit15\n\
    \  local digit16\n  local digit17\n  local digit18\n  local digit19\n  local digit20\n\
    \  local digit21\n  local digit22\n  local digit23\n  local digit24\n  local digit25\n\
    \  local digit26\n  local digit27\n  local digit28\n  local digit29\n  local digit30\n\
    \  local digit31\n  local digit32\n  local digit33\n  local digit34\n  local digit35\n\
    \  local digit36\n  local digit37\n  local digit38\n  local digit39\n  local digit40\n\
    \  local digit41\n  local digit42\n  local digit43\n  local digit44\n  local digit45\n\
    \  local digit46\n  local digit47\n  local digit48\n  local digit49\n  local digit50\n\
    \  local digit51\n  local digit52\n  local digit53\n  local digit54\n  local digit55\n\
    \  local digit56\n  local digit57\n  local digit58\n  local digit59\n  local digit60\n\
    \  local digit61\n  local digit62\n  local digit63\n  local digit64\n  local digit65\n\
    \  local digit66\n  local digit67\n  local digit68\n  local digit69\n  local digit70\n\
    \  local digit71\n  local digit72\n  local digit73\n  local digit74\n  local digit75\n\
    \  local digit76\n  local digit77\n  local digit78\n  local digit79\n  local digit80\n\
    \  local digit81\n  local digit82\n  local digit83\n  local digit84\n  local digit85\n\
    \  local digit86\n  local digit87\n  local digit88\n  local digit89\n  local digit90\n\
    \  local digit91\n  local digit92\n  local digit93\n  local digit94\n  local digit\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local -i sum=0\n\
    \    local -i count=0\n    local -i i\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        ((sum+=${arr[i]}))\n        if (( sum > 0 )); then\n            ((count++))\n\
    \        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj0nbsibs.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpj0nbsibs.sh: line 15: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpj0nbsibs.sh: line 15: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  local digits=0\n  local sign=0\n  local i\n  for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n    (( sum += ${arr[i]} ))\n    (( n++ ))\n    (( digits += ${arr[i]}\
    \ > 0 ? 1 : 0 ))\n  done\n  if (( sign )); then\n    (( sum *= -1 ))\n    (( digits\
    \ *= -1 ))\n  fi\n  echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ count=0\n  local sign=1\n  local digits=0\n  local first=true\n  while read\
    \ -r num; do\n    (( sum += $num ))\n    (( digits += $sign ))\n    (( sign *=\
    \ -1 ))\n  done <<< \"$nums\"\n  (( count += $sum ))\n  (( count += $digits ))\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuheyq6l6.sh: line 22: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local count=0\n    local sign=0\n    local digits=0\n    local digit\n  \
    \  local i\n    for (( i=0; i < ${#numbers}; i++ )); do\n        digit=${numbers:$i:1}\n\
    \        if (( ${digit:0:1} == \"-\" )) ; then\n            sign=1\n         \
    \   digit=${digit:1}\n        fi\n        digits=$(( ${digits} * 10 ))\n     \
    \   digits=$(( ${digits} * 10 ))\n        digits=$(( ${digits} + ${digit} ))\n\
    \        if (( ${digits} > 9 )) ; then\n            digits=0\n        fi\n   \
    \     if (( ${sign} )) ; then\n            digits=-$(( ${digits} ))\n        fi\n\
    \        sum=$(( ${sum} + ${digits} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxjtnf1og.sh: line 24: ((: - == - : syntax error: operand expected
    (error token is "== - ")

    /tmp/tmpxjtnf1og.sh: line 30: 0 + - : syntax error: operand expected (error token
    is "- ")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n\
    \    local nums=\"\"\n    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \      local j\n        for ((j=0; j<${#arr[i]}; j++)); do\n            local\
    \ k\n            for ((k=0; k<${#arr[i][j]}; k++)); do\n                local\
    \ digit=${arr[i][j][k]}\n                if (( ${digit} < 0 )) ; then\n      \
    \              digit=-${digit}\n                fi\n                sum=$(( ${sum}\
    \ + ${digit} ))\n            done\n        done\n        nums=\"${nums} ${arr[i]}\"\
    \n    done\n    echo \"${#nums}\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj9q1frlr.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpj9q1frlr.sh: line 15: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpj9q1frlr.sh: line 15: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    for num in \"${arr[@]}\"; do\n        (( sum += num % 10 ))\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local count=0\n    for num in \"${arr[@]}\"; do\n        if (( num < 0 ));\
    \ then\n            sum=$(( sum + num % 10 ))\n        else\n            sum=$((\
    \ sum + num % 10 ))\n            (( count++ ))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( sum += ${arr[i]}\
    \ ))\n  done\n  (( n > 0 )) && echo $sum\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  local sign=0\n  local digits=0\n  local digit\n  local i\n  local\
    \ j\n  local k\n  for ((i=0; i<${#arr[@]}; i++)); do\n    digit=${arr[i]}\n  \
    \  if [[ $sign -eq 0 ]]; then\n      if (( sign != 0 && digit > 0 )); then\n \
    \       sum=$(( sum + digit ))\n      fi\n      n=$(( n + 1 ))\n    else\n   \
    \   if (( sign != 0 && digit < 0 )); then\n        sum=$(( sum + digit ))\n  \
    \    fi\n      n=$(( n + 1 ))\n    fi\n    sign=$(( sign > 0 ? 1 : -1 ))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local count=0\n    for number in $numbers; do\n        if [[ $number =~ ^-?[0-9]+$\
    \ ]]; then\n            sum=$((sum + ${number#-}))\n        else\n           \
    \ sum=$((sum + $number))\n        fi\n    done\n    if [[ $sum -gt 0 ]]; then\n\
    \        count=$((count+1))\n    fi\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local digits=0\n    local sign=0\n    local i\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if (( ${arr[i]} < 0 )); then\n            sign=$(( sign +\
    \ ${arr[i]} ))\n            arr[i]=$(( ${arr[i]} + sign ))\n        fi\n     \
    \   sum=$(( sum + ${arr[i]} ))\n        digits=$(( digits + ${arr[i]} ))\n   \
    \ done\n    echo \"$digits\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local nums=0\n    local i\n    for (( i=0; i<${#arr[@]}; i++ )); do\n   \
    \     if (( ${arr[i]} < 0 )); then\n            sum=$(( sum + ${arr[i]} ))\n \
    \       else\n            sum=$(( sum + ${arr[i]} ))\n            nums=$(( nums\
    \ + 1 ))\n        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local count=0\n  local digits=0\n  local sign=0\n  local digit\n  local i\n\
    \n  for ((i=0; i<${#arr[@]}; i++)); do\n    digit=${arr[i]}\n    if [[ $sign -eq\
    \ 0 ]]; then\n      if (( digit < 0 )) ; then\n        sign=1\n        digit=$((-digit))\n\
    \      fi\n    fi\n    sum=$((sum + digit))\n    (( count++ ))\n    if (( sum\
    \ > 9 )); then\n      sum=0\n      (( digits++ ))\n    fi\n  done\n\n  echo \"\
    $count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local first_digit=0\n\
    \    local last_digit=0\n    local digits_string=\"\"\n    local digits_array=()\n\
    \    local digits_string=\"\"\n    local digits_array_string=\"\"\n    local digits_array_string2=\"\
    \"\n    local digits_array_string3=\"\"\n    local digits_array_string4=\"\"\n\
    \    local digits_array_string5=\"\"\n    local digits_array_string6=\"\"\n  \
    \  local digits_array_string7=\"\"\n    local digits_array_string8=\"\"\n    local\
    \ digits_array_string9=\"\"\n    local digits_array_string10=\"\"\n    local digits_array_string11=\"\
    \"\n    local digits_array_string12=\"\"\n    local digits_array_string13=\"\"\
    \n    local digits_array_string14=\"\"\n    local digits_array_string15=\"\"\n\
    \    local digits_array_string16=\"\"\n    local digits_array_string17=\"\"\n\
    \    local digits_array_string18=\"\"\n    local digits_array_string19=\"\"\n\
    \    local digits_array_string20=\"\"\n    local digits_array_string21=\"\"\n\
    \    local digits_array_string22=\"\"\n    local digits_array_string23=\"\"\n\
    \    local digits_array_string24=\"\"\n    local digits_array_string25=\"\"\n\
    \    local digits_array_string26=\"\"\n    local digits_array_string27=\"\"\n\
    \    local digits_array_string28=\"\"\n    local digits_array_string29=\"\"\n\
    \    local digits_array_string30=\"\"\n    local digits_array_string31=\"\"\n\
    \    local digits_array_string32=\"\"\n    local digits_array_string33=\"\"\n\
    \    local digits_array_string34=\"\"\n    local digits_array_string35=\"\"\n\
    \    local digits_array_string36=\"\"\n    local digits_array_string37=\"\"\n\
    \    local digits_array_string38=\"\"\n    local digits_array_string39=\"\"\n\
    \    local digits_array_string40=\"\"\n    local digits_array_string41=\"\"\n\
    \    local digits_array_string42=\"\"\n    local digits_array_string43=\"\"\n\
    \    local digits_array_string44=\"\"\n    local digits_array_string45=\"\"\n\
    \    local digits_array_string46=\"\"\n    local digits_array_string47=\"\"\n\
    \    local digits_array_string48=\"\"\n    local digits_array_string49=\"\"\n\
    \    local digits_array_string50=\"\"\n    local \n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local nums=$(echo\
    \ $numbers | tr \" \" \"\\n\")\n    local nums_count=$(echo $nums | wc -l)\n \
    \   local nums_sum=$(echo $nums | awk '{sum+=$1} END {print sum}')\n    local\
    \ nums_sum_count=$(echo $nums_sum | wc -l)\n    local nums_sum_digits=$(echo $nums_sum\
    \ | awk '{print ($1<0?$1:$1)}')\n    local nums_sum_digits_count=$(echo $nums_sum_digits\
    \ | wc -l)\n    local nums_sum_digits_sum=$(echo $nums_sum_digits | awk '{sum+=$1}\
    \ END {print sum}')\n    local nums_sum_digits_sum_count=$(echo $nums_sum_digits_sum\
    \ | wc -l)\n    local nums_sum_digits_sum_digits=$(echo $nums_sum_digits_sum |\
    \ awk '{print ($1<0?$1:$1)}')\n    local nums_sum_digits_sum_digits_count=$(echo\
    \ $nums_sum_digits_sum_digits | wc -l)\n    local nums_sum_digits_sum_digits_sum=$(echo\
    \ $nums_sum_digits_sum_digits | awk '{sum+=$1} END {print sum}')\n    local nums_sum_digits_sum_digits_sum_count=$(echo\
    \ $nums_sum_digits_sum_digits_sum | wc -l)\n    local nums_sum_digits_sum_digits_sum_digits=$(echo\
    \ $nums_sum_digits_sum_digits_sum | awk '{print ($1<0?$1:$1)}')\n    local nums_sum_digits_sum_digits_sum_digits_count=$(echo\
    \ $nums_sum_digits_sum_digits_sum_digits | wc -l)\n    local nums_sum_digits_sum_digits_sum_digits_sum=$(echo\
    \ $nums_sum_digits_sum_digits_sum_digits | awk '{sum+=$1} END {print sum}')\n\
    \    local nums_sum_digits_sum_digits_sum_digits_sum_count=$(echo $nums_sum_digits_sum_digits_sum_digits_sum\
    \ | wc -l)\n    local nums_sum_digits_sum_digits_sum_digits_sum_digits=$(echo\
    \ $nums_sum_digits_sum_digits_sum_digits_sum | awk '{print ($1<0?$1:$1)}')\n \
    \   local nums_sum_digits_sum_digits_sum_digits_sum_digits_count=$(echo $nums_sum_digits_sum_\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgj2fbwea.sh: line 33: unexpected EOF while looking for matching
    `)''

    /tmp/tmpgj2fbwea.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    local sign\n    for num in \"${arr[@]}\"; do\n        if [[ $num =~ ^-?[0-9]+$\
    \ ]]; then\n            sign=${num%% *}\n            (( nums *= 10 ))\n      \
    \      (( nums += ( $sign > 0 ? $sign : -$sign ) ))\n        else\n          \
    \  echo \"$num is not a number\" >&2\n            return 1\n        fi\n    done\n\
    \    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  num=$(echo $num | sed 's/^\\([0-9]*\\)-\\([0-9]*\\)/\\1-\\2/' | bc)\n     \
    \   fi\n        nums=$(( nums + 1 ))\n    done\n    echo \"$nums\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local count=0\n  local neg=0\n  local negsum=0\n  local negcount=0\n  local\
    \ negneg=0\n  local negnegsum=0\n  local negnegcount=0\n  local negnegneg=0\n\
    \  local negnegnegsum=0\n  local negnegnegcount=0\n  local negnegnegneg=0\n  local\
    \ negnegnegnegsum=0\n  local negnegnegnegcount=0\n  local negnegnegnegneg=0\n\
    \  local negnegnegnegsum=0\n  local negnegnegnegcount=0\n  local negnegnegnegneg=0\n\
    \  local negnegnegnegnegsum=0\n  local negnegnegnegnegcount=0\n  local negnegnegnegnegneg=0\n\
    \  local negnegnegnegnegsum=0\n  local negnegnegnegnegcount=0\n  local negnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegnegnegnegcount=0\n  local negnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegnegnegnegnegcount=0\n  local negnegnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegnegnegnegnegcount=0\n  local negnegnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegnegnegnegnegcount=0\n  local negnegnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegnegnegnegnegcount=0\n  local negnegnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegnegnegnegnegcount=0\n  local negnegnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegnegnegnegnegcount=0\n  local negnegnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegnegnegnegnegcount=0\n  local negnegnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegnegnegnegnegcount=0\n  local negnegnegnegnegnegneg=0\n\
    \  local negnegnegnegnegnegsum=0\n  local negnegneg\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=$1\n    local sum=0\n\
    \    for num in $arr; do\n        (( sum += num % 10 ))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local digits=0\n    local signs=0\n    local sign=0\n    local digit=0\n\
    \    local number\n    for number in $numbers; do\n        if [[ $number =~ ^-?[0-9]+$\
    \ ]]; then\n            digits=$(( digits+ ${#number} ))\n            sum=$((\
    \ sum + ${number#-} ))\n        elif [[ $number =~ ^-?[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n            digits=$(( digits+ ${#number} ))\n            sum=$((\
    \ sum + ${number#-} ))\n        elif [[ $number =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n            digits=$(( digits+ ${#number} ))\n            sum=$((\
    \ sum + ${number#-} ))\n        elif [[ $number =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n            digits=$(( digits+ ${#number} ))\n            sum=$((\
    \ sum + ${number#-} ))\n        elif [[ $number =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n            digits=$(( digits+ ${#number} ))\n            sum=$((\
    \ sum + ${number#-} ))\n        elif [[ $number =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n            digits=$(( digits+ ${#number} ))\n            sum=$((\
    \ sum + ${number#-} ))\n        elif [[ $number =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n            digits=$(( digits+ ${#number} ))\n            sum=$((\
    \ sum + ${number#-} ))\n        elif [[ $number =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvdf6p1wh.sh: line 44: syntax error in conditional expression

    /tmp/tmpvdf6p1wh.sh: line 45: syntax error near `}''

    /tmp/tmpvdf6p1wh.sh: line 45: `}''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local nums=0\n  local digits=0\n  local sign=0\n  local i\n  for i in \"${arr[@]}\"\
    ; do\n    (( sum += i ))\n    (( nums += 1 ))\n    (( digits += ${#i} ))\n  done\n\
    \  if (( sign )); then\n    (( sum *= -1 ))\n    (( digits *= -1 ))\n  fi\n  echo\
    \ \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local IFS=' '\n    local -a arr\n\
    \    arr=( $1 )\n    local n\n    for n in \"${arr[@]}\"; do\n        if [[ $n\
    \ =~ ^-?[0-9]+$ ]]; then\n            (( n >= 0 )) && continue\n        fi\n \
    \       local sum=0\n        for (( i=0; i<${#n}; i++ )); do\n            (( sum\
    \ += ${n:$i:1} ))\n        done\n        if (( sum > 0 )) ; then\n           \
    \ echo \"$n\"\n            return\n        fi\n    done\n    echo \"0\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps3b1kip8.sh: line 25: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    for num in $nums; do\n        sum=$((sum + num))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  num=$(echo $num | sed 's/^\\([0-9]*\\)-\\([0-9]*\\)/\\1-\\2/')\n        fi\n\
    \        (( nums = nums + 1 ))\n    done\n    echo \"$nums\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local n=0\n  local\
    \ sum=0\n  local digits=0\n  local sign=0\n  local i\n  for i in \"${arr[@]}\"\
    ; do\n    (( sum += i ))\n    (( digits += ${#i} ))\n  done\n  if (( sign ));\
    \ then\n    (( sum *= -1 ))\n    (( digits *= -1 ))\n  fi\n  if (( digits ));\
    \ then\n    (( n += 1 ))\n  fi\n  echo \"$n\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local\
    \ i=0\n  while read -r num; do\n    ((sum += num))\n    ((i++))\n  done\n  echo\
    \ \"$i\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=6 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660051322
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=$1\n  local sum=0\n\
    \  local digits=0\n  local sign=0\n  local firstdigit=0\n  local lastdigit=0\n\
    \  local number\n  local i\n  local j\n  for number in $numbers; do\n    digits=$((\
    \ ${#number} + ${#firstdigit} ))\n    sign=$(( ${#number} + ${#lastdigit} ))\n\
    \    if [ $sign -gt 0 ]; then\n      firstdigit=$(( ${#number} - ${#lastdigit}\
    \ ))\n    fi\n    if [ $sign -lt 0 ]; then\n      lastdigit=$(( ${#number} + ${#firstdigit}\
    \ ))\n    fi\n    sum=$(( ${sum} + $number ))\n  done\n  echo \"$sum\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local digits=0\n    local sign=0\n    local firstsign=0\n    local firstdigit=0\n\
    \    local firstnumber=0\n    local lastnumber=0\n    local lastdigit=0\n    local\
    \ lastsign=0\n    local lastdigits=0\n    local lastsigns=0\n    local lastsignss=0\n\
    \    local lastsignsss=0\n    local lastsignssss=0\n    local lastsignsssss=0\n\
    \    local lastsignssssss=0\n    local lastsignsssssss=0\n    local lastsignssssssss=0\n\
    \    local lastsignsssssssss=0\n    local lastsignssssssssss=0\n    local lastsignsssssssssss=0\n\
    \    local lastsignssssssssssss=0\n    local lastsignsssssssssssss=0\n    local\
    \ lastsignssssssssssssss=0\n    local lastsignsssssssssssssss=0\n    local lastsignssssssssssssssss=0\n\
    \    local lastsignsssssssssssssssss=0\n    local lastsignssssssssssssssssss=0\n\
    \    local lastsignsssssssssssssssssss=0\n    local lastsignssssssssssssssssssss=0\n\
    \    local lastsignssssssssssssssssssss=0\n    local lastsignssssssssssssssssssss=0\n\
    \    local lastsignssssssssssssssssssssss=0\n    local lastsignssssssssssssssssssssss=0\n\
    \    local lastsignssssssssssssssssssssssss=0\n    local lastsignssssssssssssssssssssssss=0\n\
    \    local lastsignssssssssssssssssssssssss=0\n    local lastsignssssssssssssssssssssssss=0\n\
    \    local lastsignssssssssssssssssssssssss=0\n    local lastsignssssssssssssssssssssssssss=0\n\
    \    local lastsignssssssssssssssssssssssssss=0\n    local \n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local nums=0\n  local i\n  local j\n  local k\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n  local digit\n  local sign\n\
    \  local digits=0\n  local signs=0\n  local num\n\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local nums=0\n\
    \  local digits=0\n  local sign=0\n  local i\n  local j\n  local k\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    local num=\"${arr[i]}\"\n    if [[ $num -gt 0 ]];\
    \ then\n      (( nums ))\n      (( digits ))\n      (( sign ))\n      (( nums\
    \ += num ))\n      (( digits += ${#num} ))\n      if (( sign )); then\n      \
    \  (( nums ))\n        (( digits ))\n      fi\n      (( sign ))\n    else\n  \
    \    (( nums ))\n      (( digits ))\n      (( sign ))\n      (( nums += ${num%+}\
    \ ))\n      (( digits += ${#num} ))\n      if (( sign )); then\n        (( nums\
    \ ))\n        (( digits ))\n      fi\n      (( sign ))\n    fi\n  done\n  echo\
    \ \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local count=0\n  local digits=0\n  local sign=0\n  local num\n\n  for num in\
    \ \"${arr[@]}\"; do\n    (( sum += num ))\n    (( digits = $(( digits + ${#num}\
    \ )) ))\n  done\n\n  if (( sign )); then\n    (( sum *= -1 ))\n    digits=$((\
    \ digits + 1 ))\n  fi\n\n  (( count = ( sum / 10 )) )\n  (( count = ( count %\
    \ 10 )) )\n\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8l5jtuxm.sh: line 32: syntax error near unexpected token `(''

    /tmp/tmp8l5jtuxm.sh: line 32: `( count = ( sum / 10 )) ''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local n=0\n  local\
    \ sum=0\n  local digits=0\n  local sign=0\n  local first=0\n  local last=0\n \
    \ local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local n=0\n  local\
    \ sum=0\n  local sign\n  local digit\n  local i\n  local j\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=0\n    sign=${arr[i]}\n    digit=${arr[i]}\n    while ((\
    \ sign > 0 )) ; do\n      sum=$(( sum + digit ))\n      digit=$(( digit / 10 ))\n\
    \      sign=$(( sign - 10 ))\n    done\n    if (( sum > 0 )) ; then\n      n=$((\
    \ n + 1 ))\n    fi\n  done\n  echo $n\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n\
    \    local -a nums\n    local num\n    for num in ${arr[@]}; do\n        ((sum\
    \ += num))\n    done\n    nums=($(printf \"%d\\n\" ${arr[@]}))\n    local -n nums_sorted=(\"\
    ${nums[@]}\")\n    local -n nums_sorted_reversed=(\"${nums_sorted[@]}\")\n   \
    \ local -n nums_sorted_reversed_sorted=(\"${nums_sorted_reversed[@]}\")\n    local\
    \ -n nums_sorted_reversed_sorted_reversed=(\"${nums_sorted_reversed_sorted[@]}\"\
    )\n    local -n nums_sorted_reversed_sorted_reversed_sorted=(\"${nums_sorted_reversed_sorted_reversed[@]}\"\
    )\n    local -n nums_sorted_reversed_sorted_reversed_sorted_reversed=(\"${nums_sorted_reversed_sorted_reversed_sorted[@]}\"\
    )\n    local -n nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted=(\"\
    ${nums_sorted_reversed_sorted_reversed_sorted_reversed[@]}\")\n    local -n nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=(\"\
    ${nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted[@]}\")\n    local\
    \ -n nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=(\"\
    ${nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed[@]}\")\n\
    \    local -n nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=(\"\
    ${nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted[@]}\"\
    )\n    local -n nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=(\"\
    ${nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed[@]}\"\
    )\n    local -n nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=(\"\
    ${nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted[@]}\"\
    )\n    local -n nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=(\"\
    ${nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed[@]}\"\
    )\n    local -n nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpe_dglkm_.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpe_dglkm_.sh: line 23: local: nums_sorted: reference variable cannot be
    an array

    /tmp/tmpe_dglkm_.sh: line 24: local: nums_sorted_reversed: reference variable
    cannot be an array

    /tmp/tmpe_dglkm_.sh: line 25: local: nums_sorted_reversed_sorted: reference variable
    cannot be an array

    /tmp/tmpe_dglkm_.sh: line 26: local: nums_sorted_reversed_sorted_reversed: reference
    variable cannot be an array

    /tmp/tmpe_dglkm_.sh: line 27: local: nums_sorted_reversed_sorted_reversed_sorted:
    reference variable cannot be an array

    /tmp/tmpe_dglkm_.sh: line 28: local: nums_sorted_reversed_sorted_reversed_sorted_reversed:
    reference variable cannot be an array

    /tmp/tmpe_dglkm_.sh: line 29: local: nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted:
    reference variable cannot be an array

    /tmp/tmpe_dglkm_.sh: line 30: local: nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed:
    reference variable cannot be an array

    /tmp/tmpe_dglkm_.sh: line 31: local: nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted:
    reference variable cannot be an array

    /tmp/tmpe_dglkm_.sh: line 32: local: nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed:
    reference variable cannot be an array

    /tmp/tmpe_dglkm_.sh: line 33: local: nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted:
    reference variable cannot be an array

    /tmp/tmpe_dglkm_.sh: line 34: local: nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed:
    reference variable cannot be an array

    /tmp/tmpe_dglkm_.sh: line 35: local: nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted:
    reference variable cannot be an array

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ count=0\n  local sign=0\n  local digits=0\n  local digit\n  local i\n\n  for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n    digit=${nums[i]}\n    if [[ $sign -eq 0\
    \ ]]; then\n      if (( digit < 0 )) ; then\n        sign=1\n        digit=-$digit\n\
    \      fi\n    fi\n    digits=$(( digits + sign ))\n    sum=$(( sum + digit ))\n\
    \    (( count++ ))\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local n=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        local j=$(( ${arr[i]}+1 ))\n\
    \        if (( j < 10 )); then\n            n=$(( n+j ))\n        else\n     \
    \       n=$(( n+j%10 ))\n        fi\n    done\n    echo \"$n\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local n=0\n    local digits=0\n\
    \    local sign=0\n    local first=0\n    local last=0\n    local digit\n    local\
    \ tmp\n\n    for (( i=0; i < ${#arr[@]}; i++ )); do\n        digit=${arr[$i]}\n\
    \        if (( sign )); then\n            digit=-$digit\n        fi\n        if\
    \ (( digit )); then\n            digits=$(( digits + digit ))\n        else\n\
    \            digits=$(( digits + 1 ))\n        fi\n        if (( digits )); then\n\
    \            sum=$(( sum + digits ))\n        fi\n        if (( sign )); then\n\
    \            sum=$(( sum + sign ))\n        fi\n        if (( sign )); then\n\
    \            sign=0\n        fi\n    done\n    if (( sum > 0 )); then\n      \
    \  echo \"$sum\"\n    else\n        echo \"0\"\n    fi\n}\n\ncandidate() {\n \
    \   count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local num\n    for num in $nums; do\n        if (( num < 0 )); then\n   \
    \         sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num\
    \ % 10 ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \  local i\n  local j\n  local nums\n  local num\n  local sign\n  local digit\n\
    \  local nums_str\n  local nums_str_tmp\n  local nums_str_tmp_tmp\n  local nums_str_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp\n  local nums_str_tmp_tmp_tmp_tmp_tmp\n  local\
    \ nums_str_tmp_tmp_tmp_tmp_tmp_tmp\n  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local\
    \ nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local nums_str_tmp_tmp_tmp_tmp_tmp\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ i\n  local j\n  local n\n  local sign\n  local digit\n  local digits=${nums//[[:space:]]/}\n\
    \  for ((i=0; i<${#digits}; i++)); do\n    digit=${digits:$i:1}\n    if [[ $digit\
    \ =~ ^-?[0-9]+$ ]]; then\n      sum=$((sum+digit))\n    elif [[ $digit =~ ^-?[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n      sum=$((sum+digit))\n    elif [[ $digit =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n      sum=$((sum+digit))\n    elif [[ $digit =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n      sum=$((sum+digit))\n    elif [[ $digit =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n      sum=$((sum+digit))\n    elif [[ $digit =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n      sum=$((sum+digit))\n    elif [[ $digit =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n      sum=$((sum+digit))\n    elif [[ $digit =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n      sum=$((sum+digit))\n    elif [[ $digit =~ ^-?[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc4fepkh7.sh: line 41: syntax error in conditional expression

    /tmp/tmpc4fepkh7.sh: line 42: syntax error near `}''

    /tmp/tmpc4fepkh7.sh: line 42: `}''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local nums=0\n\
    \  local i\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( ${arr[i]} > 0 )) &&\
    \ nums+=1 || nums+=${arr[i]}\n  done\n  echo $nums\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    for num in \"${arr[@]}\"; do\n        (( sum += num % 10 ))\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local digits=0\n    local sign=0\n    local digit\n    local i\n    for ((i=0;\
    \ i < ${#numbers}; i++)); do\n        digit=${numbers:i:1}\n        if (( ${digit}\
    \ < 0 )); then\n            sign=-${sign}\n            digit=-${digit}\n     \
    \   fi\n        sum=$(( ${sum} + ${digit} ))\n        digits=$(( ${digits} + 1\
    \ ))\n    done\n    echo \"${sign}${sum}${digits}\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local n=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if (( ${arr[i]}\
    \ > 0 )); then\n            (( sum += ${arr[i]} ))\n        fi\n    done\n   \
    \ (( n = sum % 10 ))\n    if (( n >= 0 )); then\n        (( n -= 10 ))\n    fi\n\
    \    echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    ((sum+=${arr[i]}))\n  done\n\
    \  echo $((${sum} > 0 ? 1 : 0))\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local digits=0\n    local sign=0\n    local number\n    for number in $numbers;\
    \ do\n        if [[ $number =~ ^-?[0-9]+$ ]]; then\n            digits=$(echo\
    \ $number | sed 's/-//g')\n            if [[ $digits -gt 0 ]]; then\n        \
    \        sum=$((sum+digits))\n            else\n                sign=$((sign+digits))\n\
    \            fi\n        else\n            echo \"$number\"\n        fi\n    done\n\
    \    echo \"$((sign+sum))\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local IFS=' '\n    local -a arr\n\
    \    arr=( $1 )\n    local n=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n   \
    \     local j=0\n        while (( j<${#arr[i]} && arr[i][j]<0 )); do\n       \
    \     j=$(( j+1 ))\n        done\n        if (( j<${#arr[i]} )); then\n      \
    \      n=$(( n+1 ))\n        fi\n    done\n    echo \"$n\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfft61nui.sh: line 21: ((: j<2 && arr[i][j]<0 : syntax error: invalid
    arithmetic operator (error token is "[j]<0 ")

    /tmp/tmpfft61nui.sh: line 21: ((: j<2 && arr[i][j]<0 : syntax error: invalid arithmetic
    operator (error token is "[j]<0 ")

    /tmp/tmpfft61nui.sh: line 21: ((: j<1 && arr[i][j]<0 : syntax error: invalid arithmetic
    operator (error token is "[j]<0 ")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=$1\n  local sum=0\n\
    \  local digits=0\n  local digit\n  local sign\n  local i\n  local j\n  local\
    \ k\n  local num\n  local nums\n  local nums_len\n  local nums_str\n  local num_str\n\
    \  local num_len\n  local num_strs\n  local num_strs_len\n  local num_strs_str\n\
    \  local num_strs_str_len\n  local num_strs_str_str\n  local num_strs_str_str_len\n\
    \  local num_strs_str_str_str\n  local num_strs_str_str_str_len\n  local num_strs_str_str_str_str\n\
    \  local num_strs_str_str_str_str_len\n  local num_strs_str_str_str_str_str\n\
    \  local num_strs_str_str_str_str_str_len\n  local num_strs_str_str_str_str_str_str\n\
    \  local num_strs_str_str_str_str_str_str_len\n  local num_strs_str_str_str_str_str_str_str\n\
    \  local num_strs_str_str_str_str_str_str_str_len\n  local num_strs_str_str_str_str_str_str_str_str\n\
    \  local num_strs_str_str_str_str_str_str_str_str_len\n  local num_strs_str_str_str_str_str_str_str_str_str\n\
    \  local num_strs_str_str_str_str_str_str_str_str_str_len\n  local num_strs_str_str_str_str_str_str_str_str_str_str\n\
    \  local num_strs_str_str_str_str_str_str_str_str_str_str_len\n  local num_strs_str_str_str_str_str_str_str_str_str_str_str\n\
    \  local num_strs_str_str_str_str_str_str_str_str_str_str_str_len\n  local num_strs_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \  local num_strs_str_str_str_str_str_str_str_str_str_str_str_str_len\n  local\
    \ num_strs_str_str_str_str_str_str_str_str_str_str_str_str_str\n  local num_strs_str_str_str_str_str_str_str_str_str_str_str_str_str_len\n\
    \  local num_strs_str_str_str_str_str_str_str_str_str_str_str_str_str\n  local\
    \ num_strs_str_str_str_str_str_str_str_str_str_str_str_str_str_len\n  local num_strs_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \  local num_strs_str_str_str_str_str_str_str_str_str_str_str_str_str_str_len\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i\n  for i in \"${arr[@]}\"; do\n    (( sum += i ))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n\
    \    local -a nums\n    local -a signs\n    local -a digits\n    local -a sign\n\
    \    local i\n    local j\n    local k\n    local n\n    local -a num\n    local\
    \ -a sign\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    local -a digit\n    local\
    \ -a digit\n    local -a digit\n    local -a digit\n    \n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0_7b_t9_.sh: line 15: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  nums=$(( nums + num / 10 ))\n        else\n            nums=$(( nums + num\
    \ % 10 ))\n        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i=0\n  while [ $i -lt ${#arr[@]} ]; do\n    (( sum += ${arr[$i]} ))\n\
    \    (( i++ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=\"$1\"\n  local sum=0\n\
    \  local count=0\n  local sign=1\n  local digits=0\n  local digit\n  while read\
    \ -r digit; do\n    ((digits++))\n    ((sum+=digit))\n  done <<< \"$nums\"\n \
    \ if ((sum > 0)); then\n    count=$((sum % 10))\n  else\n    count=$((sum % -10))\n\
    \    ((sum -= count))\n    ((sign=-1))\n  fi\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_764mdvw.sh: line 23: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp_764mdvw.sh: line 23: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local n=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        local j=0\n        while ((\
    \ j < 10 )); do\n            (( arr[$i]++ ))\n            j=$(( j+1 ))\n     \
    \   done\n        if (( arr[$i] )); then\n            n=$(( n+1 ))\n        fi\n\
    \    done\n    echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local IFS=$'\\n'\n    local sum=0\n\
    \    local n=0\n    for n in $@; do\n        (( sum += $n ))\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyj156a3e.sh: line 19: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local count=0\n    for num in \"${arr[@]}\"; do\n        (( sum += num %\
    \ 10 ))\n        if (( sum > 0 )) ; then\n            (( count++ ))\n        fi\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        if (( num < 0 )); then\n\
    \            sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum\
    \ + num % 10 ))\n            (( count++ ))\n        fi\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \  local count=0\n  local digits=0\n  local sign=0\n  local first=0\n  local last=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \  local count=0\n  local digits=0\n  local sign=0\n  local first=0\n  local last=0\n\
    \  local i\n  local j\n  for ((i=0; i<${#array[@]}; i++)); do\n    local elem=${array[i]}\n\
    \    if [[ \"$elem\" =~ ^-?[0-9]+$ ]]; then\n      digits=$((${#elem}-1))\n  \
    \    sign=${elem:0:1}\n      first=${elem:1}\n      last=${elem:$((${#elem}-1))}\n\
    \      break\n    fi\n  done\n  for ((j=0; j<${#array[@]}; j++)); do\n    local\
    \ elem=${array[j]}\n    if [[ \"$elem\" =~ ^-?[0-9]+$ ]]; then\n      digits=$((${#elem}-1))\n\
    \      sign=${elem:0:1}\n      first=${elem:1}\n      last=${elem:$((${#elem}-1))}\n\
    \      break\n    fi\n  done\n  for ((j=0; j<${#array[@]}; j++)); do\n    local\
    \ elem=${array[j]}\n    if [[ \"$elem\" =~ ^-?[0-9]+$ ]]; then\n      digits=$((${#elem}-1))\n\
    \      sign=${elem:0:1}\n      first=${elem:1}\n      last=${elem:$((${#elem}-1))}\n\
    \      break\n    fi\n  done\n  for ((j=0; j<${#array[@]}; j++)); do\n    local\
    \ elem=${array[j]}\n    if [[ \"$elem\" =~ ^-?[0-9]+$ ]]; then\n      digits=$((${#elem}-1))\n\
    \      sign=${elem:0:1}\n      first=${elem:1}\n      last=${elem:$((${#elem}-1))}\n\
    \      break\n    fi\n  done\n  for ((j=0; j<${#array[@]}; j++)); do\n    local\
    \ elem=${array[j]}\n    if [[ \"$elem\" =~ ^-?[0-9]+$ ]]; then\n      digits=$((${#elem}-1))\n\
    \      sign=${elem:0:1}\n      first=${elem:1}\n      last=${elem:$((${#elem}-1))}\n\
    \      break\n    fi\n  done\n  for ((j=0; j<${#array[@]}; j++)); do\n    local\
    \ elem=${array[j]}\n    if [[ \"$elem\" =~ ^-?[0-9]+$ ]]; then\n      digits=$\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuz5pp4ad.sh: line 78: syntax error near unexpected token `}''

    /tmp/tmpuz5pp4ad.sh: line 78: `}''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  local sign\n  local digit\n  local i\n  local j\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    sign=${arr[$i]}\n    digit=${arr[$((i+1))]}\n \
    \   if [[ $sign -eq 0 ]]; then\n      ((n++))\n    elif (( sign > 0 && digit >\
    \ 0 )) || \\\n      (( sign < 0 && digit < 0 )) ; then\n      ((sum++))\n    fi\n\
    \  done\n  echo $(( sum + n ))\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for n in \"${arr[@]}\"; do\n        if [[ $n =~ ^-?[0-9]+$ ]]; then\n   \
    \         (( nums+=( $(( 10#$n )) )) )\n        else\n            (( nums+=( $((\
    \ 10#$(( n | cut -c1-1 )) )) ))\n        fi\n    done\n    echo \"$nums\"\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj5047b91.sh: line 23: syntax error near unexpected token `done''

    /tmp/tmpj5047b91.sh: line 23: `    done''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local n=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        local j=0\n        while ((\
    \ j < 10 )); do\n            (( ${arr[i]} > 0 )) && break\n            (( j++\
    \ ))\n        done\n        (( n += 1 ))\n        (( arr[i] > 0 )) && arr[i]=(\
    \ ${arr[i]} % 10 )\n    done\n    echo \"$n\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local first=0\n\
    \    local last=0\n    local i\n    for ((i=0; i<${#array[@]}; i++)); do\n   \
    \     if [[ \"${array[$i]}\" =~ ^-?[0-9]+$ ]]; then\n            digits=$(echo\
    \ \"${array[$i]}\" | sed 's/-//g')\n            sign=${array[$i]}\n        else\n\
    \            digits=0\n            sign=0\n        fi\n        sum=$((sum + digits))\n\
    \        if (( sum > 0 )) ; then\n            count=$((count + 1))\n        fi\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local n=0\n  local\
    \ sum=0\n  local i\n  for i in \"${arr[@]}\"; do\n    (( sum += i ))\n  done\n\
    \  (( n > 0 )) && return $n\n  (( sum < 0 )) && return $(( sum + 10 ))\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    (( sum += ${arr[i]} ))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  for n in \"${arr[@]}\"; do\n    (( sum += n ))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ digits=0\n  local sign=0\n  local first=0\n  local last=0\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=$1\n  local nums=$(echo\
    \ $numbers |sed 's/ /\\n/g')\n  local sum=0\n  local count=0\n  for num in $nums;\
    \ do\n    sum=$((sum+num))\n    if [ $sum -gt 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local i=0\n    while [ $i -lt ${#arr[@]} ]; do\n        local j=0\n     \
    \   while [ $j -lt ${#arr[@]} ]; do\n            local k=0\n            while\
    \ [ $k -lt ${#arr[@]} ]; do\n                local sum=$(( ${arr[$i]} + ${arr[$j]}\
    \ + ${arr[$k]} ))\n                if [ $sum -gt 0 ]; then\n                 \
    \   let sum+=1\n                fi\n                let k+=1\n            done\n\
    \            let j+=1\n        done\n        let i+=1\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local nums=0\n\
    \  local i\n  for i in \"${arr[@]}\"; do\n    (( nums += ( $i > 0 )) )) && continue\n\
    \    (( nums += ( $i < 0 )) )) && nums=$(( nums + $i ))\n  done\n  echo $nums\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9ew23oz6.sh: line 19: syntax error near unexpected token `(''

    /tmp/tmp9ew23oz6.sh: line 19: `( nums += ( $i > 0 )) ''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local count=0\n    for num in \"${arr[@]}\"; do\n        (( sum += num %\
    \ 10 ))\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local nums=0\n  local i\n  local j\n  for (( i=0; i<${#arr[@]}; i++ )); do\n\
    \    (( sum+=${arr[i]} ))\n    (( nums+=( $(( ${arr[i]} > 0 ? ${arr[i]} : ${arr[i]}\
    \ * -1 )) )) ))\n  done\n  echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf9jxw0k0.sh: line 22: syntax error near unexpected token `)''

    /tmp/tmpf9jxw0k0.sh: line 22: `    (( nums+=( $(( ${arr[i]} > 0 ? ${arr[i]} :
    ${arr[i]} * -1 )) )) ))''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ digits=0\n  local signs=0\n  local sign\n  local num\n  local digit\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  \n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=$1\n  local sum=0\n\
    \  local digits=0\n  local sign=0\n  local num\n  local i\n  local j\n  local\
    \ k\n  local len\n  local digit\n  local digit0\n  local digit1\n  local digit2\n\
    \  local digit3\n  local digit4\n  local digit5\n  local digit6\n  local digit7\n\
    \  local digit8\n  local digit9\n  local digit10\n  local digit11\n  local digit12\n\
    \  local digit13\n  local digit14\n  local digit15\n  local digit16\n  local digit17\n\
    \  local digit18\n  local digit19\n  local digit20\n  local digit21\n  local digit22\n\
    \  local digit23\n  local digit24\n  local digit25\n  local digit26\n  local digit27\n\
    \  local digit28\n  local digit29\n  local digit30\n  local digit31\n  local digit32\n\
    \  local digit33\n  local digit34\n  local digit35\n  local digit36\n  local digit37\n\
    \  local digit38\n  local digit39\n  local digit40\n  local digit41\n  local digit42\n\
    \  local digit43\n  local digit44\n  local digit45\n  local digit46\n  local digit47\n\
    \  local digit48\n  local digit49\n  local digit50\n  local digit51\n  local digit52\n\
    \  local digit53\n  local digit54\n  local digit55\n  local digit56\n  local digit57\n\
    \  local digit58\n  local digit59\n  local digit60\n  local digit61\n  local digit62\n\
    \  local digit63\n  local digit64\n  local digit65\n  local digit66\n  local digit67\n\
    \  local digit68\n  local digit69\n  local digit70\n  local digit71\n  local digit72\n\
    \  local digit73\n  local digit74\n  local digit75\n  local digit76\n  local digit77\n\
    \  local digit78\n  local digit79\n  local digit80\n  local digit81\n  local digit82\n\
    \  local digit83\n  local digit84\n  local digit85\n  local digit86\n  local digit87\n\
    \  local digit88\n  local digit89\n  local digit90\n  local digit91\n  local digit92\n\
    \  \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  num=$(echo $num | cut -d- -f1)\n        fi\n        nums=$(( nums + num ))\n\
    \    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local num\n    for num in $nums; do\n        if (( num < 0 )); then\n   \
    \         sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num\
    \ % 10 ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local digits=0\n    local sign=0\n    local i\n    local j\n    local k\n\
    \    local n\n    local m\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local \n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( sum += ${arr[i]}\
    \ ))\n    (( n++ ))\n  done\n  if (( sum > 0 )) ; then\n    echo \"$n\"\n  else\n\
    \    echo \"0\"\n  fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local count=0\n  local sign\n  local i\n  for i in \"${arr[@]}\"; do\n    sign=$((\
    \ i < 0 ))\n    sum=$(( sum + $i * 10 ))\n    (( count++ ))\n  done\n  echo \"\
    $count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local i=0\n    for n in \"${arr[@]}\"; do\n        if [[ $n =~ ^-?[0-9]+$\
    \ ]]; then\n            sum=$(( sum + n ))\n        else\n            sum=$((\
    \ sum - n ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=( $1 )\n    local nums=0\n\
    \    local sign\n    local i\n    local j\n    for (( i = 0; i < ${#array[@]};\
    \ i++ )); do\n        sign=${array[i]}\n        if (( sign < 0 )); then\n    \
    \        sign=-${sign}\n        fi\n        for (( j = ( i + 1 ); j < ${#array[@]};\
    \ j++ )); do\n            (( ${array[j]} > 0 )) && nums+=1 || nums+=${array[j]}\n\
    \        done\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local i=0\n    for num in \"${arr[@]}\"; do\n        (( sum += num % 10 ))\n\
    \        (( sum += num / 10 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \  local count=0\n  local digits=0\n  local sign=0\n  local firstdigit=0\n  local\
    \ lastdigit=0\n  local lastsign=0\n  local lastfirstdigit=0\n  local lastlastdigit=0\n\
    \  local lastlastsign=0\n  local lastfirstsign=0\n  local lastlastfirstdigit=0\n\
    \  local lastlastlastdigit=0\n  local lastlastfirstsign=0\n  local lastlastlastfirstdigit=0\n\
    \  local lastlastlastlastdigit=0\n  local lastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n\
    \  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local\
    \ lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n\
    \  local lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n \
    \ local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n  local\
    \ lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n\
    \  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local\
    \ lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n\
    \  local lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n \
    \ local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n  local\
    \ lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n\
    \  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local\
    \ lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n\
    \  local lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n \
    \ local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n  local\
    \ lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n\
    \  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=\"$1\"\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        if (( num < 0 )); then\n\
    \            sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum\
    \ + num % 10 ))\n            (( count++ ))\n        fi\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local count=0\n    for number in $numbers; do\n        sum=$((sum + number))\n\
    \        if [ $number -gt 0 ]; then\n            count=$((count + 1))\n      \
    \  fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local first_digit=0\n\
    \    local last_digit=0\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    for num in \"${arr[@]}\"; do\n        if [[ $num -gt 0 ]]; then\n       \
    \     ((sum+=num))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local nums=0\n\
    \  local i\n  for i in \"${arr[@]}\"; do\n    (( nums += $i ))\n  done\n  echo\
    \ $nums\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local nums=$(echo\
    \ $numbers |sed 's/ /\\n/g')\n    local nums_array=($nums)\n    local nums_array_length=${#nums_array[@]}\n\
    \    local nums_array_sum=0\n    local nums_array_sum_digits=0\n    local nums_array_sum_digits_negative=0\n\
    \    local nums_array_sum_digits_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_sum_digits_negative_positive=0\n    local nums_array_sum_digits_negative_positive=0\n\
    \    local nums_array_\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1 sum=0\n  while read\
    \ -r num; do\n    ((sum+=num))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=15 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660051322
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local count=0\n    for number in $numbers; do\n        local digits=$(echo\
    \ $number | awk '{print $1}')\n        local digits_sum=$(echo $digits | awk '{sum+=$1}')\n\
    \        if (( digits_sum > 0 )); then\n            count=$((count+1))\n     \
    \   fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local count=0\n    for num in \"${arr[@]}\"; do\n        if [[ $num =~ ^-?[0-9]+$\
    \ ]]; then\n            sum=$(( 10#$num + $sum ))\n            (( count++ ))\n\
    \        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( sum += ${arr[i]}\
    \ ))\n    (( n += ${arr[i]} > 0 ? 1 : 0 ))\n  done\n  echo \"$n\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \  local i\n  for i in $array; do\n    (( sum += i ))\n  done\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ digits=0\n  local sign=0\n  local digit\n  local i\n  local j\n  local k\n \
    \ local count\n  local num\n  local digit\n  local sign\n  local digit\n  local\
    \ i\n  local j\n  local k\n  local count\n  local num\n  local digit\n  local\
    \ sign\n  local digit\n  local i\n  local j\n  local k\n  local count\n  local\
    \ num\n  local digit\n  local sign\n  local digit\n  local i\n  local j\n  local\
    \ k\n  local count\n  local num\n  local digit\n  local sign\n  local digit\n\
    \  local i\n  local j\n  local k\n  local count\n  local num\n  local digit\n\
    \  local sign\n  local digit\n  local i\n  local j\n  local k\n  local count\n\
    \  local num\n  local digit\n  local sign\n  local digit\n  local i\n  local j\n\
    \  local k\n  local count\n  local num\n  local digit\n  local sign\n  local digit\n\
    \  local i\n  local j\n  local k\n  local count\n  local num\n  local digit\n\
    \  local sign\n  local digit\n  local i\n  local j\n  local k\n  local count\n\
    \  local num\n  local digit\n  local sign\n  local digit\n  local i\n  local j\n\
    \  local k\n  local count\n  local num\n  local digit\n  local sign\n  local digit\n\
    \  local i\n  local j\n  local k\n  local count\n  local num\n  local digit\n\
    \  local sign\n  local digit\n  local i\n  local j\n  local k\n  local count\n\
    \  local num\n  local digit\n  local sign\n  local digit\n  local i\n  local j\n\
    \  local k\n  local count\n  local num\n  local digit\n  local sign\n  local digit\n\
    \  local i\n  local j\n  local k\n  local count\n  local num\n  local digit\n\
    \  local sign\n  local digit\n  local i\n  local j\n  local k\n  local count\n\
    \  local num\n  local digit\n  local sign\n  local digit\n  local i\n  local \n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local n=0\n  local\
    \ sum=0\n  local sign=1\n  local digits=0\n  local i\n  for i in \"${arr[@]}\"\
    ; do\n    (( sum += $sign ))\n    (( sign *= -1 ))\n    (( digits++ ))\n  done\n\
    \  (( n += digits ))\n  echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local nums=0\n    for num in \"${arr[@]}\"; do\n        (( sum += num % 10\
    \ ))\n        (( nums += 1 ))\n    done\n    echo \"$nums\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for n in \"${arr[@]}\"; do\n        if [[ $n =~ ^-?[0-9]+$ ]]; then\n   \
    \         (( nums+=( $(( 10#$n )) )) )\n        fi\n    done\n    echo \"$nums\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num > 0 )); then\n          \
    \  (( nums ))\n        else\n            (( nums = nums + num / 10 ))\n      \
    \  fi\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local firstdigit=0\n\
    \    local lastdigit=0\n    local firstsign=0\n    local lastsign=0\n    local\
    \ firstsigndigit=0\n    local lastsigndigit=0\n    local firstsignsign=0\n   \
    \ local lastsignsign=0\n    local firstsignsigndigit=0\n    local lastsignsigndigit=0\n\
    \    local firstsignsignsign=0\n    local lastsignsignsign=0\n    local firstsignsignsigndigit=0\n\
    \    local lastsignsignsigndigit=0\n    local firstsignsignsignsign=0\n    local\
    \ lastsignsignsignsign=0\n    local firstsignsignsignsigndigit=0\n    local lastsignsignsignsigndigit=0\n\
    \    local firstsignsignsignsignsign=0\n    local lastsignsignsignsign=0\n   \
    \ local firstsignsignsignsigndigit=0\n    local lastsignsignsignsigndigit=0\n\
    \    local firstsignsignsignsignsign=0\n    local lastsignsignsignsign=0\n   \
    \ local firstsignsignsignsigndigit=0\n    local lastsignsignsignsigndigit=0\n\
    \    local firstsignsignsignsignsign=0\n    local lastsignsignsignsign=0\n   \
    \ local firstsignsignsignsigndigit=0\n    local lastsignsignsignsigndigit=0\n\
    \    local firstsignsignsignsignsign=0\n    local lastsignsignsignsign=0\n   \
    \ local firstsignsignsignsigndigit=0\n    local lastsignsignsignsigndigit=0\n\
    \    local firstsignsignsignsignsign=0\n    local lastsignsignsignsign=0\n   \
    \ local firstsignsignsignsigndigit=0\n    local lastsignsignsignsigndigit=0\n\
    \    local firstsignsignsignsignsign=0\n    local lastsignsignsignsign=0\n   \
    \ local firstsignsignsignsigndigit=0\n    local lastsignsignsignsigndigit=0\n\
    \    local firstsignsignsignsignsign=0\n    local lastsignsignsignsign=0\n   \
    \ local firstsignsignsignsigndigit=0\n    local lastsignsignsignsigndigit=0\n\
    \    local firstsignsignsignsignsign=0\n    local lastsignsignsignsign=0\n   \
    \ local firstsignsignsignsigndigit=0\n    local lastsignsignsignsigndigit=0\n\
    \    local firstsignsignsignsignsign=0\n    local lastsignsignsignsign=0\n   \
    \ local firstsignsignsignsigndigit=0\n    local lastsign\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        if (( num < 0 )); then\n\
    \            sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum\
    \ + num % 10 ))\n            (( count++ ))\n        fi\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        ((sum+=num))\n        if\
    \ (( sum > 0 )) ; then\n            ((count+=1))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if [[ $num -gt 0 ]]; then\n       \
    \     (( nums++ ))\n        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local count=0\n    for num in \"${arr[@]}\"; do\n        if (( num < 0 ));\
    \ then\n            sum=$(( sum + num % 10 ))\n        else\n            sum=$((\
    \ sum + num % 10 ))\n            (( count++ ))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local digit\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \n    # Count number of positive integers\n    for ((i=0; i<${#array[@]}; i++));\
    \ do\n        (( sum += ${array[$i]} ))\n        if (( sum > 0 )); then\n    \
    \        (( count++ ))\n        fi\n    done\n\n    # Count number of negative\
    \ integers\n    for ((i=0; i<${#array[@]}; i++)); do\n        (( sum += ${array[$i]}\
    \ ))\n        if (( sum < 0 )); then\n            (( count++ ))\n        fi\n\
    \    done\n\n    # Count number of integers with positive first digit\n    for\
    \ ((i=0; i<${#array[@]}; i++)); do\n        (( sum += ${array[$i]} ))\n      \
    \  if (( sum > 0 )); then\n            (( count++ ))\n        fi\n    done\n\n\
    \    # Count number of integers with negative first digit\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        (( sum += ${array[$i]} ))\n        if (( sum < 0 )); then\n\
    \            (( count++ ))\n        fi\n    done\n\n    # Count number of integers\
    \ with positive second digit\n    for ((i=0; i<${#array[@]}; i++)); do\n     \
    \   (( sum += ${array[$i]} ))\n        if (( sum > 0 )); then\n            ((\
    \ count++ ))\n        fi\n    done\n\n    # Count number of integers with negative\
    \ second digit\n    for ((i=0; i<${#array[@]}; i++)); do\n        (( sum += ${array[$i]}\
    \ ))\n        if (( sum < 0 )); then\n            (( count++ ))\n        fi\n\
    \    done\n\n    # Count number of integers with positive third digit\n    for\
    \ ((i=0; i<${#array[@]}; i++)); do\n        (( sum += ${array[$i]} ))\n      \
    \  if (( sum > 0 )); then\n            (( count++ ))\n        fi\n    done\n\n\
    \    # Count number of integers with negative third digit\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        (( sum += ${array[$i]} ))\n        if (( \n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptv4km0xq.sh: line 99: unexpected EOF while looking for matching
    `)''

    /tmp/tmptv4km0xq.sh: line 119: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ count=0\n  local digits=0\n  local sign=0\n  local first=true\n  local neg=false\n\
    \  local firstneg=false\n  local negnums=false\n  local negsum=0\n  local negcount=0\n\
    \  local negdigits=0\n  local negsign=0\n  local negfirst=false\n  local negneg=false\n\
    \  local negnegnums=false\n  local negnegsum=0\n  local negnegcount=0\n  local\
    \ negnegdigits=0\n  local negnegsign=0\n  local negnegfirst=false\n  local negnegneg=false\n\
    \  local negnegnegnums=false\n  local negnegnegsum=0\n  local negnegnegcount=0\n\
    \  local negnegnegdigits=0\n  local negnegnegsign=0\n  local negnegnegfirst=false\n\
    \  local negnegnegneg=false\n  local negnegnegnegnums=false\n  local negnegnegnegsum=0\n\
    \  local negnegnegnegcount=0\n  local negnegnegnegdigits=0\n  local negnegnegnegsign=0\n\
    \  local negnegnegnegfirst=false\n  local negnegnegneg=false\n  local negnegnegnegnums=false\n\
    \  local negnegnegnegsum=0\n  local negnegnegnegcount=0\n  local negnegnegnegdigits=0\n\
    \  local negnegnegnegsign=0\n  local negnegnegnegfirst=false\n  local negnegnegneg=false\n\
    \  local negnegnegnegnums=false\n  local negnegnegnegsum=0\n  local negnegnegnegcount=0\n\
    \  local negnegnegnegdigits=0\n  local negnegnegnegsign=0\n  local negnegnegnegfirst=false\n\
    \  local negnegnegneg=false\n  local negnegnegnegnums=false\n  local negnegnegnegsum=0\n\
    \  local negnegnegnegcount=0\n  local negnegnegnegdigits=0\n  local negnegnegnegsign=0\n\
    \  local negnegnegnegfirst=false\n  local negnegnegneg=false\n  local negnegnegnegnums=false\n\
    \  local negnegnegnegsum=0\n  local negnegnegnegcount=0\n  local negnegnegnegdigits=0\n\
    \  local negnegneg\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local count=0\n    for num in \"${arr[@]}\"; do\n        if [[ $num -gt 0\
    \ ]]; then\n            (( sum += num ))\n        else\n            (( sum +=\
    \ num % 10 ))\n        fi\n    done\n    (( count++ ))\n    echo \"$sum\"\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local\
    \ nums=\"\"\n  local i\n  local j\n  for ((i=0; i<${#arr[@]}; i++)); do\n    ((sum+=${arr[i]}))\n\
    \  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    ((nums+=\" $i\"))\n  done\n\
    \  echo \"$sum\"\n  if ((sum > 0)); then\n    echo \"$nums\"\n  else\n    echo\
    \ \"0\"\n  fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp26o9daxi.sh: line 21: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \  local count=0\n  local digit\n  local sign\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local n=0\n  local\
    \ sum=0\n  local i\n  for i in \"${arr[@]}\"; do\n    (( sum += i ))\n  done\n\
    \  (( n += sum > 0 ))\n  echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local digit\n  \
    \  local i\n    local j\n    local k\n    local tmp\n    local tmp2\n    local\
    \ tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local\
    \ tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n  \
    \  local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i\n  for i in \"${arr[@]}\"; do\n    (( sum += i ))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        if (( num < 0 )); then\n\
    \            sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum\
    \ + num % 10 ))\n            count=$(( count + 1 ))\n        fi\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i\n  for i in \"${arr[@]}\"; do\n    (( sum += i ))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$@\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        if (( num < 0 )); then\n\
    \            sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum\
    \ + num % 10 ))\n            count=$(( count + 1 ))\n        fi\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        if [[ $num -gt 0 ]]; then\n\
    \            sum=$((sum+num))\n        fi\n    done\n    if [[ $sum -gt 0 ]];\
    \ then\n        count=$((count+1))\n    fi\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local nums=0\n    for num in \"${arr[@]}\"; do\n        (( sum += num % 10\
    \ ))\n        (( nums += 1 ))\n    done\n    echo \"$nums\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10\
    \ ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  (( nums = nums + num / 10 ))\n        else\n            (( nums = nums + num\
    \ % 10 ))\n        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local i=0\n    while [ $i -lt ${#nums[@]} ]; do\n        local num=${nums[$i]}\n\
    \        if (( num < 0 )); then\n            sum=$(( sum + num % 10 ))\n     \
    \   else\n            sum=$(( sum + num % 10 ))\n        fi\n        i=$(( i +\
    \ 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6rwpyyfx.sh: line 20: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp6rwpyyfx.sh: line 23: -1 -2 0: syntax error in expression (error token
    is "0")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n\
    \    local digits=0\n    local sign=0\n    local nums=()\n    local num\n    local\
    \ i\n    for num in $numbers; do\n        if [[ $num =~ ^-?[0-9]+$ ]]; then\n\
    \            ((digits+=${#num}))\n            ((sum+=${num}))\n        else\n\
    \            if ((sign < 0)); then\n                ((sign+=${#num}))\n      \
    \      else\n                ((sign+=${#num})*-1)\n            fi\n          \
    \  nums+=($num)\n        fi\n    done\n    if ((sign > 0)); then\n        ((sum+=sign))\n\
    \    fi\n    echo ${#nums[@]}\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdcij0opr.sh: line 30: syntax error near unexpected token `*-1''

    /tmp/tmpdcij0opr.sh: line 30: `                ((sign+=${#num})*-1)''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \  local count=0\n  local digits=0\n  local sign=0\n  local i\n  local j\n  local\
    \ k\n  local n\n  local m\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  \n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ digits=0\n  local sign=0\n  local i\n  for i in $nums; do\n    (( sum += $i\
    \ ))\n    (( digits += $(( 10#$i )) ))\n  done\n  (( sign = sum < 0 ))\n  if ((\
    \ sign )); then\n    sum=$(( 10#$sum + 1 ))\n  fi\n  echo $digits\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( sum += ${arr[i]} ))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( sum += ${arr[i]}\
    \ ))\n    (( n += ${arr[i]} > 0 ))\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ digits=0\n  local sign=0\n  local num\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local \n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1 sum=0\n    for num\
    \ in $nums; do\n        if (( num < 0 )); then\n            sum=$(( sum + num\
    \ % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n        fi\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ count=0\n  local sign\n  local i\n  for i in $nums; do\n    sign=$(( i < 0 ))\n\
    \    sum=$(( sum + $i ))\n    count=$(( count + 1 ))\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \  local count=0\n  local digits=0\n  local sign=0\n  local first=0\n  local last=0\n\
    \  local i\n\n  for i in \"${array[@]}\"; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n\
    \      (( sum += i ))\n      (( digits = digits + 1 ))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+$ ]]; then\n      (( sum += i ))\n      (( digits = digits + 2 ))\n   \
    \ elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i ))\n\
    \      (( digits = digits + 3 ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$ ]]; then\n      (( sum += i ))\n      (( digits = digits + 4 ))\n   \
    \ elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n    \
    \  (( sum += i ))\n      (( digits = digits + 5 ))\n    elif [[ $i =~ ^-?[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i ))\n\
    \      (( digits = digits + 6 ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i ))\n      (( digits\
    \ = digits + 7 ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i ))\n      (( digits = digits\
    \ + 8 ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i ))\n      (( digits = digits\
    \ + 9 ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i ))\n      (( digits = digits\
    \ + 10 ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      (( sum += i ))\n      (( digits\
    \ = digits + 11 ))\n    elif [[ $i =~ ^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+\\.[0-9]+\\.[0-9]+\\.\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_dw3e4tc.sh: line 58: syntax error in conditional expression

    /tmp/tmp_dw3e4tc.sh: line 59: syntax error near `}''

    /tmp/tmp_dw3e4tc.sh: line 59: `}''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local first=\n \
    \   local last=\n    local digit\n    local i\n\n    # Count number of positive\
    \ integers\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]}\
    \ -gt 0 ]]; then\n            ((sum+=${array[$i]}))\n            ((count+=1))\n\
    \        fi\n    done\n\n    # Count number of negative integers\n    for ((i=0;\
    \ i<${#array[@]}; i++)); do\n        if [[ ${array[$i]} -lt 0 ]]; then\n     \
    \       ((sum+=${array[$i]}))\n            ((count+=1))\n        fi\n    done\n\
    \n    # Count number of integers with first digit > 0\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        if [[ ${array[$i]} -gt 0 ]]; then\n            ((first=${array[$i]}))\n\
    \        fi\n    done\n\n    # Count number of integers with last digit > 0\n\
    \    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]} -gt 0 ]];\
    \ then\n            ((last=${array[$i]}))\n        fi\n    done\n\n    # Count\
    \ number of integers with first digit < 0\n    for ((i=0; i<${#array[@]}; i++));\
    \ do\n        if [[ ${array[$i]} -lt 0 ]]; then\n            ((sign=1))\n    \
    \    fi\n    done\n\n    # Count number of integers with last digit < 0\n    for\
    \ ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]} -lt 0 ]]; then\n\
    \            ((sign=1))\n        fi\n    done\n\n    # Count number of integers\
    \ with first digit < 0 and last digit < 0\n    for ((i=0; i<${#array[@]}; i++));\
    \ do\n        if [[ ${array[$i]} -lt 0 ]]; then\n            ((sign=1))\n    \
    \    fi\n    done\n\n    # Count number of integers with first digit < 0 and last\
    \ digit > 0\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]}\
    \ -lt 0 ]]; then\n            ((sign=1))\n        fi\n    done\n\n    # Count\
    \ number of integers with first digit > 0 and last digit < 0\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        if [[ ${array[$i]} -lt 0 ]]; then\n            ((sign=1))\n\
    \        fi\n    done\n\n    # Count number of integers with first digit > 0 and\
    \ last digit > 0\n    for ((\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4a6yk47u.sh: line 91: unexpected EOF while looking for matching
    `)''

    /tmp/tmp4a6yk47u.sh: line 111: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    local sign=1\n    local digits=0\n    local first=0\n\
    \    local last=0\n    local i\n    for ((i=0; i<${#nums[@]}; i++)); do\n    \
    \    local num=${nums[$i]}\n        if (( num < 0 )); then\n            sign=-1\n\
    \            num=${num}\n        fi\n        digits=$(( ${#num} % 10 ))\n    \
    \    sum=$(( ${sum} + ${num} ))\n        if (( digits > 0 )); then\n         \
    \   count=$(( ${count} + 1 ))\n        fi\n    done\n    if (( ${count} > 0 ));\
    \ then\n        echo \"${count}\"\n    else\n        echo \"0\"\n    fi\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq5fqoi0b.sh: line 30: 0 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  num=$(echo $num | sed 's/^-\\([0-9]*\\)$/\\1/')\n        fi\n        nums=$((\
    \ nums + num % 10 ))\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \  local nums=\"\"\n  local i\n  local j\n  for (( i=0; i<${#array[@]}; i++ ));\
    \ do\n    (( sum+=${array[$i]} ))\n  done\n  for (( j=0; j<${#array[@]}; j++ ));\
    \ do\n    (( nums+=\"${array[$j]}\" ))\n  done\n  if (( sum > 0 )); then\n   \
    \ echo \"$nums\"\n  else\n    echo \"0\"\n  fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuy8jtm_a.sh: line 21: ((: sum+= : syntax error: operand expected
    (error token is "+= ")

    /tmp/tmpuy8jtm_a.sh: line 24: ((: nums+= : syntax error: operand expected (error
    token is "+= ")

    /tmp/tmpuy8jtm_a.sh: line 21: ((: sum+=-1 -2 0 : syntax error in expression (error
    token is "0 ")

    /tmp/tmpuy8jtm_a.sh: line 24: ((: nums+=-1 -2 0 : syntax error in expression (error
    token is "0 ")

    /tmp/tmpuy8jtm_a.sh: line 21: ((: sum+=1 1 2 -2 3 4 5 : syntax error in expression
    (error token is "1 2 -2 3 4 5 ")

    /tmp/tmpuy8jtm_a.sh: line 24: ((: nums+=1 1 2 -2 3 4 5 : syntax error in expression
    (error token is "1 2 -2 3 4 5 ")

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=$1\n    local sum=0\n\
    \    local count=0\n    for num in $arr; do\n        if (( num < 0 )); then\n\
    \            sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum\
    \ + num % 10 ))\n            count=$(( count + 1 ))\n        fi\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if [[ $num -gt 0 ]]; then\n       \
    \     (( nums++ ))\n        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n\
    \    local count=0\n    local digits=0\n    local sign=0\n    local first=\n \
    \   local last=\n    local digit\n    local i\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        digit=${array[$i]}\n        if (( sign )); then\n       \
    \     digit=$(( 10#$digit ))\n        fi\n        if (( digit )); then\n     \
    \       digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n       \
    \     digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n         \
    \   digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n           \
    \ digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n            digits=$((\
    \ digits<<1 ))\n            digits=$(( digits<<1 ))\n            digits=$(( digits<<1\
    \ ))\n            digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n\
    \            digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n  \
    \          digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n    \
    \        digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n      \
    \      digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n        \
    \    digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n          \
    \  digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n            digits=$((\
    \ digits<<1 ))\n            digits=$(( digits<<1 ))\n            digits=$(( digits<<1\
    \ ))\n            digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n\
    \            digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n  \
    \          digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n    \
    \        digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n      \
    \      digits=$(( digits<<1 ))\n            digits=$(( digits<<1 ))\n\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpstmr9ylf.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmpstmr9ylf.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local nums=$(echo\
    \ $numbers | tr \" \" \"\\n\")\n    local sum=0\n    for num in $nums; do\n  \
    \      sum=$((sum + $(echo $num | tr \" \" \"\\n\" | grep -E '^-[0-9]+$' | wc\
    \ -l)))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ num\n  local i\n  for i in $nums; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n\
    \      num=$(echo $i | sed 's/^-?//')\n      ((sum+=num))\n    else\n      ((sum+=i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  (( nums = nums + num % 10 ))\n        else\n            (( nums = nums + num\
    \ / 10 ))\n        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local n=0\n  local sign=1\n  local digits=0\n  local first=0\n  local last=0\n\
    \  local digit\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local count=0\n    for num in \"${arr[@]}\"; do\n        (( sum += num %\
    \ 10 ))\n        if (( sum > 0 )) ; then\n            (( count++ ))\n        fi\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local count=0\n    for (( i=0; i < ${#arr[@]} ; i++)); do\n        local\
    \ num=${arr[i]}\n        if (( num < 0 )); then\n            num=$(echo $num |\
    \ sed 's/^-\\([0-9]\\+\\)$/\\1/')\n        fi\n        sum=$(( sum + num % 10\
    \ ))\n        count=$(( count + 1 ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local sum=0\n\
    \    local count=0\n    for num in $nums; do\n        (( sum += (${#num} * ${num})))\n\
    \    done\n    for num in $nums; do\n        if (( ${num} > 0 )); then\n     \
    \       if (( ${num} < 10 )); then\n                (( sum += ${num} ))\n    \
    \        else\n                (( sum += ${num} * 10 ))\n            fi\n    \
    \    fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local sum=0\n\
    \    local i\n    for ((i=0; i < ${#arr[@]}; i++)); do\n        (( sum += ${arr[i]}\
    \ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=\"$1\"\n  local sum=0\n\
    \  local count=0\n  local digits=0\n  local sign=0\n  local firstdigit=0\n  local\
    \ lastdigit=0\n  local lastsign=0\n  local lastfirstdigit=0\n  local lastlastdigit=0\n\
    \  local lastlastsign=0\n  local lastfirstsign=0\n  local lastlastfirstdigit=0\n\
    \  local lastlastlastdigit=0\n  local lastlastfirstsign=0\n  local lastlastlastfirstdigit=0\n\
    \  local lastlastlastlastdigit=0\n  local lastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n\
    \  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local\
    \ lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n\
    \  local lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n \
    \ local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n  local\
    \ lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n\
    \  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local\
    \ lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n\
    \  local lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n \
    \ local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n  local\
    \ lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n\
    \  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local\
    \ lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n\
    \  local lastlastlastlastfirstdigit=0\n  local lastlastlastlastlastdigit=0\n \
    \ local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n  local\
    \ lastlastlastlastlastdigit=0\n  local lastlastlastlastfirstsign=0\n  local lastlastlastlastfirstdigit=0\n\
    \  local lastlastlastlastlastdigit=0\n  local lastlastlastlastfirst\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=$1\n    local nums=0\n\
    \    local digits=0\n    local signs=0\n    local sign\n    local i\n    local\
    \ j\n    local num\n    for ((i=0; i<${#arr[@]}; i++)); do\n        num=\"${arr[i]}\"\
    \n        if [[ $num =~ ^-?[0-9]+$ ]]; then\n            signs=$((signs+1))\n\
    \            if [[ $num -gt 0 ]]; then\n                nums=$((nums+1))\n   \
    \         fi\n            digits=$((digits+1)) \n            for ((j=0; j<${#num};\
    \ j++)); do\n                sign=\"${num:$j:1}\"\n                if [[ $sign\
    \ =~ ^-?[0-9]+$ ]]; then\n                    signs=$((signs+1))\n           \
    \         if [[ $sign -gt 0 ]]; then\n                        nums=$((nums+1))\n\
    \                    fi\n                    digits=$((digits+1)) \n         \
    \       fi\n            done\n        fi\n    done\n    echo \"$nums\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local i=0\n  while [ $i -lt ${#arr[@]} ]; do\n    (( sum += ${arr[$i]} ))\n\
    \    (( i++ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  local count=0\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( sum += ${arr[i]}\
    \ ))\n    (( count++ ))\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  (( nums = nums + num % 10 ))\n        else\n            (( nums = nums + num\
    \ / 10 ))\n        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660051317

language: sh
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in $(seq 0 ${#string} - ${#substring}); do\n    [[ \"${string:$i:${#substring}}\"\
    \ = \"${substring}\" ]] && count=$((count+1))\n  done\n  echo \"$count\"\n}\n\n\
    candidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "seq: extra operand \u20181\u2019\nTry 'seq --help' for more information.\n\
    seq: extra operand \u20181\u2019\nTry 'seq --help' for more information.\n"
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for ((i=0; i<${#string}; i++)); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            ((count++))\n        fi\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=$1\n  local substring=$2\n  local count=0\n  local substring_index=0\n\
    \  local substring_index2=0\n  local substring_index3=0\n  local substring_index4=0\n\
    \  local substring_index5=0\n  local substring_index6=0\n  local substring_index7=0\n\
    \  local substring_index8=0\n  local substring_index9=0\n  local substring_index10=0\n\
    \  local substring_index11=0\n  local substring_index12=0\n  local substring_index13=0\n\
    \  local substring_index14=0\n  local substring_index15=0\n  local substring_index16=0\n\
    \  local substring_index17=0\n  local substring_index18=0\n  local substring_index19=0\n\
    \  local substring_index20=0\n  local substring_index21=0\n  local substring_index22=0\n\
    \  local substring_index23=0\n  local substring_index24=0\n  local substring_index25=0\n\
    \  local substring_index26=0\n  local substring_index27=0\n  local substring_index28=0\n\
    \  local substring_index29=0\n  local substring_index30=0\n  local substring_index31=0\n\
    \  local substring_index32=0\n  local substring_index33=0\n  local substring_index34=0\n\
    \  local substring_index35=0\n  local substring_index36=0\n  local substring_index37=0\n\
    \  local substring_index38=0\n  local substring_index39=0\n  local substring_index40=0\n\
    \  local substring_index41=0\n  local substring_index42=0\n  local substring_index43=0\n\
    \  local substring_index44=0\n  local substring_index45=0\n  local substring_index46=0\n\
    \  local substring_index47=0\n  local substring_index48=0\n  local substring_index49=0\n\
    \  local substring_index50=0\n  local substring_index51=0\n  local substring_index52=0\n\
    \  local substring_index53=0\n  local substring_index54=0\n  local substring_index55=0\n\
    \  local substring_index56=0\n  local substring_index57=0\n  local substring_index58=0\n\
    \  local substring_index59=0\n  local substring_index60=0\n  local substring_index61=0\n\
    \  local substring_index62=0\n  local substring_index63=0\n  local substring_index64=0\n\
    \  local substring_index65=0\n  local substring_index66=0\n  local substring_index67=0\n\
    \  local substring_index68=0\n  local substring_index69=0\n  local substring_index70=0\n\
    \  local substring_index71=0\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [ \"${string[i]}\" == \"$substring\"\
    \ ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpapjno6yt.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ substring_count=0\n    local i=0\n    while [ $i -lt ${#string} ]; do\n    \
    \    if [[ ${string:$i:1} == ${substring:$i:1} ]]; then\n            (( substring_count++\
    \ ))\n        fi\n        (( i++ ))\n    done\n    count=$(( substring_count+1\
    \ ))\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_count=0\n    local substring_index=0\n    local substring_index2=0\n\
    \    local substring_index3=0\n    local substring_index4=0\n    local substring_index5=0\n\
    \    local substring_index6=0\n    local substring_index7=0\n    local substring_index8=0\n\
    \    local substring_index9=0\n    local substring_index10=0\n    local substring_index11=0\n\
    \    local substring_index12=0\n    local substring_index13=0\n    local substring_index14=0\n\
    \    local substring_index15=0\n    local substring_index16=0\n    local substring_index17=0\n\
    \    local substring_index18=0\n    local substring_index19=0\n    local substring_index20=0\n\
    \    local substring_index21=0\n    local substring_index22=0\n    local substring_index23=0\n\
    \    local substring_index24=0\n    local substring_index25=0\n    local substring_index26=0\n\
    \    local substring_index27=0\n    local substring_index28=0\n    local substring_index29=0\n\
    \    local substring_index30=0\n    local substring_index31=0\n    local substring_index32=0\n\
    \    local substring_index33=0\n    local substring_index34=0\n    local substring_index35=0\n\
    \    local substring_index36=0\n    local substring_index37=0\n    local substring_index38=0\n\
    \    local substring_index39=0\n    local substring_index40=0\n    local substring_index41=0\n\
    \    local substring_index42=0\n    local substring_index43=0\n    local substring_index44=0\n\
    \    local substring_index45=0\n    local substring_index46=0\n    local substring_index47=0\n\
    \    local substring_index48=0\n    local substring_index49=0\n    local substring_index50=0\n\
    \    local substring_index51=0\n    local substring_index52=0\n    local substring_index53=0\n\
    \    local substring_index54=0\n    local substring_index55=0\n    local substring_index56=0\n\
    \    local substring_index57=0\n    local substring_index58=0\n    local substring_index59=0\n\
    \    local substring_index60=0\n    local substring_index61=0\n    local substring_index62=0\n\
    \    local substring_index63=0\n    local substring_index64=0\n    local substring_index65=0\n\
    \    local substring_index66=0\n    local substring_index67=0\n    local substring_index68=0\n\
    \    local substring_index69=0\n    local substring_index70=0\n\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local string_index=0\n    while [[ $string_index\
    \ -ne ${#string} ]]; do\n        if [[ $string_index -eq 0 ]]; then\n        \
    \    substring_index=$(( ${#substring} - 1 ))\n        fi\n        if [[ $substring_index\
    \ -eq 0 ]]; then\n            string_index=$(( ${#string} - 1 ))\n        fi\n\
    \        if [[ $string_index -gt $substring_index ]]; then\n            substring_index=$((\
    \ substring_index - 1 ))\n        fi\n        if [[ $substring_index -gt $(( ${#string}\
    \ - 1 )) ]]; then\n            string_index=$(( string_index - 1 ))\n        fi\n\
    \        if [[ $string == ${string:$string_index:$substring_index} ]]; then\n\
    \            (( count++ ))\n        fi\n        string_index=$(( string_index\
    \ + 1 ))\n        substring_index=$(( substring_index + 1 ))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [[ \"${string: i:1}\" == \"$substring\"\
    \ ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxqv9a968.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in $(seq 0 $((${#string} - ${#substring})))\n  do\n    if [[ ${string:$i:${#substring}}\
    \ == $substring ]]\n    then\n      ((count++))\n    fi\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [[ \"${string: i:1}\" == \"${substring}\"\
    \ ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfxo74fxe.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in $(seq 0 ${#string})\n  do\n    if [[ ${string:$i:${#substring}}\
    \ == ${substring} ]]\n    then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for ((i=0; i<${#string}; i++)); do\n        for\
    \ ((j=0; j<${#substring}; j++)); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                ((count++))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ $i == $substring ]]; then\n     \
    \ ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  while\
    \ [[ $string =~ $substring ]]; do\n    ((count++))\n    string=\"${string/$substring/}\"\
    \n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            ((count++))\n        fi\n        ((i++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    local D\n    local E\n    local F\n    local G\n\
    \    local H\n    local I\n    local J\n    local K\n    local L\n    local M\n\
    \    local N\n    local O\n    local P\n    local Q\n    local R\n    local S\n\
    \    local T\n    local U\n    local V\n    local W\n    local X\n    local Y\n\
    \    local Z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local _\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    local D\n    local E\n    local F\n    local G\n\
    \    local H\n    local I\n    local J\n    local K\n    local L\n    local M\n\
    \    local N\n    local O\n    local P\n    local Q\n    local R\n    local S\n\
    \    local T\n    local U\n    local V\n    local W\n    local X\n    local Y\n\
    \    local Z\n    local _\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring}\
    \ ]]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n \
    \   echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in $(seq 0 \"${#string}\")\n  do\n    if [ \"${string:$i:${#substring}}\"\
    \ = \"${substring}\" ]; then\n      ((count++))\n    fi\n  done\n  echo \"${count}\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} ==\
    \ ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n   \
    \ echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local len\n    local start\n    local end\n   \
    \ local substring_len\n    local substring_index\n    local substring_index2\n\
    \    local substring_index3\n    local substring_index4\n    local substring_index5\n\
    \    local substring_index6\n    local substring_index7\n    local substring_index8\n\
    \    local substring_index9\n    local substring_index10\n    local substring_index11\n\
    \    local substring_index12\n    local substring_index13\n    local substring_index14\n\
    \    local substring_index15\n    local substring_index16\n    local substring_index17\n\
    \    local substring_index18\n    local substring_index19\n    local substring_index20\n\
    \    local substring_index21\n    local substring_index22\n    local substring_index23\n\
    \    local substring_index24\n    local substring_index25\n    local substring_index26\n\
    \    local substring_index27\n    local substring_index28\n    local substring_index29\n\
    \    local substring_index30\n    local substring_index31\n    local substring_index32\n\
    \    local substring_index33\n    local substring_index34\n    local substring_index35\n\
    \    local substring_index36\n    local substring_index37\n    local substring_index38\n\
    \    local substring_index39\n    local substring_index40\n    local substring_index41\n\
    \    local substring_index42\n    local substring_index43\n    local substring_index44\n\
    \    local substring_index45\n    local substring_index46\n    local substring_index47\n\
    \    local substring_index48\n    local substring_index49\n    local substring_index50\n\
    \    local substring_index51\n    local substring_index52\n    local substring_index53\n\
    \    local substring_index54\n    local substring_index55\n    local substring_index56\n\
    \    local substring_index57\n    local substring_index58\n    local substring_index59\n\
    \    local substring_index60\n    local substring_index61\n    local substring_index62\n\
    \    local substring_index63\n    local substring_index64\n    local substring_index65\n\
    \    local substring_index66\n    local substring_index67\n    local substring_index68\n\
    \    local substring_index69\n    local substring_index70\n    local substring_index71\n\
    \    local substring_index72\n    local substring_index73\n    local substring_index74\n\
    \    local substring_index75\n    local substring_index76\n    local substring_index77\n\
    \    local substring_index78\n    local substring\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    local j=0\n    while [ \"$i\" -lt \"${#string}\" ]; do\n \
    \       local c=\"${string:$i:1}\"\n        if [ \"$c\" == \"$substring\" ]; then\n\
    \            ((count++))\n            i=$((i+1))\n        else\n            ((j++))\n\
    \            i=$((i+1))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for ((i=0; i<${#string}; i++)); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            ((count++))\n        fi\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in $(seq 0 $((${#string} - ${#substring})))\n  do\n    if [[ $string\
    \ == *\"${substring}\"* ]]; then\n      ((count++))\n    fi\n  done\n  echo \"\
    $count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for ((i=0; i<${#string}; i++)); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            ((count++))\n        fi\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [[ $i -lt ${#string} ]]; do\n        if [[ $string ==\
    \ *\"${substring}${substring}\"* ]]; then\n            ((count++))\n        fi\n\
    \        ((i++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  while\
    \ [[ $string =~ $substring ]]; do\n    ((count++))\n    string=\"${string/$substring/}\"\
    \n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local match\n    local match_index\n\
    \    local match_length\n    local match_length_index\n    local match_length_index2\n\
    \    local match_length_index3\n    local match_length_index4\n    local match_length_index5\n\
    \    local match_length_index6\n    local match_length_index7\n    local match_length_index8\n\
    \    local match_length_index9\n    local match_length_index10\n    local match_length_index11\n\
    \    local match_length_index12\n    local match_length_index13\n    local match_length_index14\n\
    \    local match_length_index15\n    local match_length_index16\n    local match_length_index17\n\
    \    local match_length_index18\n    local match_length_index19\n    local match_length_index20\n\
    \    local match_length_index21\n    local match_length_index22\n    local match_length_index23\n\
    \    local match_length_index24\n    local match_length_index25\n    local match_length_index26\n\
    \    local match_length_index27\n    local match_length_index28\n    local match_length_index29\n\
    \    local match_length_index30\n    local match_length_index31\n    local match_length_index32\n\
    \    local match_length_index33\n    local match_length_index34\n    local match_length_index35\n\
    \    local match_length_index36\n    local match_length_index37\n    local match_length_index38\n\
    \    local match_length_index39\n    local match_length_index40\n    local match_length_index41\n\
    \    local match_length_index42\n    local match_length_index43\n    local match_length_index44\n\
    \    local match_length_index45\n    local match_length_index46\n    local match_length_index47\n\
    \    local match_length_index48\n    local match_length_index49\n    local match_length_index50\n\
    \    local match_length_index51\n    local match_length_index52\n    local match_length_index53\n\
    \    local match_length_index54\n    local match_length_index55\n    local match_length_index56\n\
    \    local match_length_index57\n    local match_length_index58\n    local match_length_index59\n\
    \    local match_length_index60\n    local match_length_index61\n    local match_length_index62\n\
    \    local match_length_index63\n    local match_length_index64\n    local match_length_index65\n\
    \    local match_length_index66\n    local match_length_index67\n    \n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [ \"${string: i:${#substring}}\" ==\
    \ \"$substring\" ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7j978os4.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for ((i=0; i<${#string}; i++)); do\n        for\
    \ ((j=0; j<${#substring}; j++)); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                ((count++))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in $(seq 0 \"${#string}\")\n  do\n    if [ \"${string:$i:${#substring}}\"\
    \ = \"$substring\" ]\n    then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            ((count++))\n        fi\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ $i == $substring ]]; then\n     \
    \ ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [ \"${string: i:1}\" == \"${substring}\"\
    \ ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0iwiovg4.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local A\n    local\
    \ B\n    local C\n    local D\n    local E\n    local F\n    local G\n    local\
    \ H\n    local I\n    local J\n    local K\n    local L\n    local M\n    local\
    \ N\n    local O\n    local P\n    local Q\n    local R\n    local S\n    local\
    \ T\n    local U\n    local V\n    local W\n    local X\n    local Y\n    local\
    \ Z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local A\n    local B\n    local C\n    local\
    \ D\n    local E\n    local F\n    local G\n    local H\n    local I\n    local\
    \ J\n    local K\n    local L\n    local M\n    local N\n    local O\n    local\
    \ P\n    local Q\n    local R\n    local S\n    local T\n    local U\n    local\
    \ V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local A\n    local B\n    local C\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [[ \"${string: i:${#substring}}\" ==\
    \ \"$substring\" ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxu5c8rah.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local string_index=0\n    while [[ $string_index\
    \ -le ${#string} ]]; do\n        if [[ $string_index -le ${#substring} ]]; then\n\
    \            if [[ $string == $substring ]]; then\n                count=$((count+1))\n\
    \            else\n                count=$((count+1))\n            fi\n      \
    \      substring_index=$((substring_index+1))\n        fi\n        string_index=$((string_index+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in $(seq 0 \"${#string}\")\n  do\n    if [ \"${string:$i:${#substring}}\"\
    \ = \"${substring}\" ]; then\n      ((count+=1))\n    fi\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [ \"${string: i:1}\" = \"${substring}\"\
    \ ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplwtvp81h.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local string_index=0\n    while [[ $string_index\
    \ -ne ${#string} ]]; do\n        if [[ $string_index -eq 0 ]]; then\n        \
    \    substring_index=$(( ${#substring} - 1 ))\n        fi\n        if [[ $substring_index\
    \ -eq 0 ]]; then\n            string_index=$(( ${#string} - 1 ))\n        fi\n\
    \        if [[ $string_index -gt $substring_index ]]; then\n            substring_index=$((\
    \ ${#substring} - 1 ))\n        fi\n        if [[ $substring_index -gt $string_index\
    \ ]]; then\n            string_index=$(( ${#string} - 1 ))\n        fi\n     \
    \   if [[ $string_index -eq $substring_index ]]; then\n            count=$(( ${count}\
    \ + 1 ))\n        fi\n        string_index=$(( ${string_index} + 1 ))\n      \
    \  substring_index=$(( ${substring_index} + 1 ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  while [[ $string ]]; do\n \
    \   substring_index=$(( ${#string} + ${#substring} - 1 ))\n    substring_index2=$((\
    \ ${#string} + ${#substring} - 1 ))\n    if [[ $string =~ $substring ]]; then\n\
    \      count=$(( ${count} + 1 ))\n      string=${string:0:$substring_index}\n\
    \      string=${string:$substring_index2}\n    fi\n    string=${string:$substring_index}\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [ \"${string:$i:1}\" == \"$substring\"\
    \ ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb8f3hk07.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=1; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [[ $i -lt ${#string} ]]; do\n        if [[ $string ==\
    \ *\"${substring}${substring}\"* ]]; then\n            (( count++ ))\n       \
    \ fi\n        (( i++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n \
    \   how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [ \"${string: i:1}\" == \"${substring}\"\
    \ ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0iwiovg4.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:1}\"\
    \ == \"$substring\" ]; then\n            ((count++))\n        fi\n        ((i++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            ((count++))\n        fi\n        ((i++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for ((i=0; i<${#string}; i++)); do\n        for\
    \ ((j=0; j<${#substring}; j++)); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                ((count+=1))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 2
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local string_index=0\n    while [[ $string_index\
    \ -ne ${#string} ]]; do\n        substring_index=$((substring_index+1))\n    \
    \    substring=${string:$substring_index}\n        string_index=$((string_index+1))\n\
    \    done\n    substring_index=$((substring_index+1))\n    while [[ $substring_index\
    \ -ne ${#string} ]]; do\n        substring=${substring:$substring_index}\n   \
    \     substring_index=$((substring_index+1))\n    done\n    substring_index=$((substring_index+1))\n\
    \    while [[ $string_index -ne ${#string} ]]; do\n        substring=${substring:$substring_index}\n\
    \        substring_index=$((substring_index+1))\n        string_index=$((string_index+1))\n\
    \    done\n    substring_index=$((substring_index+1))\n    while [[ $substring_index\
    \ -ne ${#string} ]]; do\n        substring=${substring:$substring_index}\n   \
    \     substring_index=$((substring_index+1))\n    done\n    substring_index=$((substring_index+1))\n\
    \    while [[ $string_index -ne ${#string} ]]; do\n        substring=${substring:$substring_index}\n\
    \        substring_index=$((substring_index+1))\n        string_index=$((string_index+1))\n\
    \    done\n    substring_index=$((substring_index+1))\n    while [[ $substring_index\
    \ -ne ${#string} ]]; do\n        substring=${substring:$substring_index}\n   \
    \     substring_index=$((substring_index+1))\n    done\n    substring_index=$((substring_index+1))\n\
    \    while [[ $string_index -ne ${#string} ]]; do\n        substring=${substring:$substring_index}\n\
    \        substring_index=$((substring_index+1))\n        string_index=$((string_index+1))\n\
    \    done\n    substring_index=$((substring_index+1))\n    while [[ $substring_index\
    \ -ne ${#string} ]]; do\n        substring=${substring:$substring_index}\n   \
    \     substring_index=$((substring_index+1))\n    done\n    substring_index=$((substring_index+1))\n\
    \    while [[ $string_index -ne ${#string} ]]; do\n        substring=${substring:$substring_index}\n\
    \        substring_index=$((substring_index+1))\n        string_index=$((string_index+1))\n\
    \    done\n    substring_index=$((substring_index+1))\n    while [[ $substring_index\
    \ -ne ${#string} ]]; do\n        substring\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn38epab6.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmpn38epab6.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_count=0\n    local substring_index=0\n    local substring_index2=0\n\
    \    local substring_index3=0\n    local substring_index4=0\n    local substring_index5=0\n\
    \    local substring_index6=0\n    local substring_index7=0\n    local substring_index8=0\n\
    \    local substring_index9=0\n    local substring_index10=0\n    local substring_index11=0\n\
    \    local substring_index12=0\n    local substring_index13=0\n    local substring_index14=0\n\
    \    local substring_index15=0\n    local substring_index16=0\n    local substring_index17=0\n\
    \    local substring_index18=0\n    local substring_index19=0\n    local substring_index20=0\n\
    \    local substring_index21=0\n    local substring_index22=0\n    local substring_index23=0\n\
    \    local substring_index24=0\n    local substring_index25=0\n    local substring_index26=0\n\
    \    local substring_index27=0\n    local substring_index28=0\n    local substring_index29=0\n\
    \    local substring_index30=0\n    local substring_index31=0\n    local substring_index32=0\n\
    \    local substring_index33=0\n    local substring_index34=0\n    local substring_index35=0\n\
    \    local substring_index36=0\n    local substring_index37=0\n    local substring_index38=0\n\
    \    local substring_index39=0\n    local substring_index40=0\n    local substring_index41=0\n\
    \    local substring_index42=0\n    local substring_index43=0\n    local substring_index44=0\n\
    \    local substring_index45=0\n    local substring_index46=0\n    local substring_index47=0\n\
    \    local substring_index48=0\n    local substring_index49=0\n    local substring_index50=0\n\
    \    local substring_index51=0\n    local substring_index52=0\n    local substring_index53=0\n\
    \    local substring_index54=0\n    local substring_index55=0\n    local substring_index56=0\n\
    \    local substring_index57=0\n    local substring_index58=0\n    local substring_index59=0\n\
    \    local substring_index60=0\n    local substring_index61=0\n    local substring_index62=0\n\
    \    local substring_index63=0\n    local substring_index64=0\n    local substring_index65=0\n\
    \    local substring_index66=0\n    local substring_index67=0\n    local substring_index68=0\n\
    \    local substring_index69=0\n    local substring_index70=0\n\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  while\
    \ [[ $string =~ $substring ]]; do\n    ((count++))\n    string=\"${string#*$substring}\"\
    \n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local substring_count\n    local substring_index\n\
    \    local substring_index2\n    local substring_index3\n    local substring_index4\n\
    \    local substring_index5\n    local substring_index6\n    local substring_index7\n\
    \    local substring_index8\n    local substring_index9\n    local substring_index10\n\
    \    local substring_index11\n    local substring_index12\n    local substring_index13\n\
    \    local substring_index14\n    local substring_index15\n    local substring_index16\n\
    \    local substring_index17\n    local substring_index18\n    local substring_index19\n\
    \    local substring_index20\n    local substring_index21\n    local substring_index22\n\
    \    local substring_index23\n    local substring_index24\n    local substring_index25\n\
    \    local substring_index26\n    local substring_index27\n    local substring_index28\n\
    \    local substring_index29\n    local substring_index30\n    local substring_index31\n\
    \    local substring_index32\n    local substring_index33\n    local substring_index34\n\
    \    local substring_index35\n    local substring_index36\n    local substring_index37\n\
    \    local substring_index38\n    local substring_index39\n    local substring_index40\n\
    \    local substring_index41\n    local substring_index42\n    local substring_index43\n\
    \    local substring_index44\n    local substring_index45\n    local substring_index46\n\
    \    local substring_index47\n    local substring_index48\n    local substring_index49\n\
    \    local substring_index50\n    local substring_index51\n    local substring_index52\n\
    \    local substring_index53\n    local substring_index54\n    local substring_index55\n\
    \    local substring_index56\n    local substring_index57\n    local substring_index58\n\
    \    local substring_index59\n    local substring_index60\n    local substring_index61\n\
    \    local substring_index62\n    local substring_index63\n    local substring_index64\n\
    \    local substring_index65\n    local substring_index66\n    local substring_index67\n\
    \    local substring_index68\n    local substring_index69\n    local substring_index70\n\
    \    local substring_index71\n    local substring_index72\n    local substring_index73\n\
    \    local substring_index74\n    local substring_index75\n    local substring_index76\n\
    \    local substring_index77\n    local substring_index78\n    local substring_index79\n\
    \    local substring_index80\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [[ $i -lt ${#string} ]]; do\n        if [[ $string ==\
    \ *\"$substring\"* ]]; then\n            ((count++))\n        fi\n        ((i++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            ((count+=1))\n        fi\n    done\n \
    \   echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            ((count++))\n        fi\n        ((i++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [ \"${string: -i:1}\" == \"$substring\"\
    \ ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7r44q5o9.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [[ $i -lt ${#string} ]]; do\n        if [[ $string ==\
    \ *\"$substring\"* ]]; then\n            ((count++))\n        fi\n        ((i++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ $i == $substring ]]; then\n     \
    \ ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i=0\n  while [ $i -lt ${#string} ]; do\n    local j=0\n    while [ $j -lt ${#substring}\
    \ ]; do\n      if [ \"${string:$i:1}\" == \"${substring:$j:1}\" ]; then\n    \
    \    (( count++ ))\n      fi\n      (( j++ ))\n    done\n    (( i++ ))\n  done\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for ((i=0; i<${#string}; i++)); do\n        for\
    \ ((j=0; j<${#substring}; j++)); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                ((count+=1))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [ \"${string:$i:${#substring}}\" =\
    \ \"$substring\" ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8jq9gbj2.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n    local C\n    local D\n    local E\n    local F\n    local\
    \ G\n    local H\n    local I\n    local J\n    local K\n    local L\n    local\
    \ M\n    local N\n    local O\n    local P\n    local Q\n    local R\n    local\
    \ S\n    local T\n    local U\n    local V\n    local W\n    local X\n    local\
    \ Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            ((count++))\n        fi\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [[ $i -lt ${#string} ]]; do\n        if [[ $string ==\
    \ *\"$substring\"* ]]; then\n            ((count++))\n        fi\n        ((i++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in $(seq 0 \"${#string}\")\n  do\n    if [[ ${string:$i:1} == ${substring}\
    \ ]]\n    then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [[ ${string[i]} == ${substring} ]];\
    \ then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpd7ylvvuv.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n  local substring_index71=0\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [[ \"${string: i:1}\" == \"$substring\"\
    \ ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxqv9a968.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=$1\n  local substring=$2\n  local count=0\n  local substring_count=0\n\
    \  local substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in $(seq 0 \"${#string}\")\n  do\n    if [[ ${string:$i:1} == ${substring}\
    \ ]]\n    then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for ((i=0; i<${#string}; i++)); do\n        for\
    \ ((j=0; j<${#substring}; j++)); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                ((count+=1))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local string_index=0\n    while [[ $string_index\
    \ -ne ${#string} ]]; do\n        if [[ $string_index -eq 0 ]]; then\n        \
    \    substring_index=$((${#string} + 1))\n        fi\n        if [[ $substring_index\
    \ -eq 0 ]]; then\n            substring_index=$((${#string} + 1))\n        fi\n\
    \        if [[ $string_index -eq $substring_index ]]; then\n            count=$((${count}\
    \ + 1))\n        fi\n        substring_index=$((substring_index + 1))\n      \
    \  string_index=$((string_index + 1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ $i == $substring ]]; then\n     \
    \ ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local match\n    local match_index\n\
    \    local match_index2\n    local match_index3\n    local match_index4\n    local\
    \ match_index5\n    local match_index6\n    local match_index7\n    local match_index8\n\
    \    local match_index9\n    local match_index10\n    local match_index11\n  \
    \  local match_index12\n    local match_index13\n    local match_index14\n   \
    \ local match_index15\n    local match_index16\n    local match_index17\n    local\
    \ match_index18\n    local match_index19\n    local match_index20\n    local match_index21\n\
    \    local match_index22\n    local match_index23\n    local match_index24\n \
    \   local match_index25\n    local match_index26\n    local match_index27\n  \
    \  local match_index28\n    local match_index29\n    local match_index30\n   \
    \ local match_index31\n    local match_index32\n    local match_index33\n    local\
    \ match_index34\n    local match_index35\n    local match_index36\n    local match_index37\n\
    \    local match_index38\n    local match_index39\n    local match_index40\n \
    \   local match_index41\n    local match_index42\n    local match_index43\n  \
    \  local match_index44\n    local match_index45\n    local match_index46\n   \
    \ local match_index47\n    local match_index48\n    local match_index49\n    local\
    \ match_index50\n    local match_index51\n    local match_index52\n    local match_index53\n\
    \    local match_index54\n    local match_index55\n    local match_index56\n \
    \   local match_index57\n    local match_index58\n    local match_index59\n  \
    \  local match_index60\n    local match_index61\n    local match_index62\n   \
    \ local match_index63\n    local match_index64\n    local match_index65\n    local\
    \ match_index66\n    local match_index67\n    local match_index68\n    local match_index69\n\
    \    local match_index70\n    local match_index71\n    local match_index72\n \
    \   local match_index73\n    local match_index74\n    local match_index75\n  \
    \  local match_index76\n    local match_index77\n    local match_index78\n   \
    \ local match_index79\n    local match_index80\n\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [[ ${string[i]} == ${substring} ]];\
    \ then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpd7ylvvuv.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for ((i=0; i<${#string}; i++)); do\n        for\
    \ ((j=0; j<${#substring}; j++)); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                ((count++))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [ \"${string:$i:1}\" = \"$substring\"\
    \ ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpoba9nrgh.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local len\n    local substring_len\n    local substring_index\n\
    \    local substring_index2\n    local substring_index3\n    local substring_index4\n\
    \    local substring_index5\n    local substring_index6\n    local substring_index7\n\
    \    local substring_index8\n    local substring_index9\n    local substring_index10\n\
    \    local substring_index11\n    local substring_index12\n    local substring_index13\n\
    \    local substring_index14\n    local substring_index15\n    local substring_index16\n\
    \    local substring_index17\n    local substring_index18\n    local substring_index19\n\
    \    local substring_index20\n    local substring_index21\n    local substring_index22\n\
    \    local substring_index23\n    local substring_index24\n    local substring_index25\n\
    \    local substring_index26\n    local substring_index27\n    local substring_index28\n\
    \    local substring_index29\n    local substring_index30\n    local substring_index31\n\
    \    local substring_index32\n    local substring_index33\n    local substring_index34\n\
    \    local substring_index35\n    local substring_index36\n    local substring_index37\n\
    \    local substring_index38\n    local substring_index39\n    local substring_index40\n\
    \    local substring_index41\n    local substring_index42\n    local substring_index43\n\
    \    local substring_index44\n    local substring_index45\n    local substring_index46\n\
    \    local substring_index47\n    local substring_index48\n    local substring_index49\n\
    \    local substring_index50\n    local substring_index51\n    local substring_index52\n\
    \    local substring_index53\n    local substring_index54\n    local substring_index55\n\
    \    local substring_index56\n    local substring_index57\n    local substring_index58\n\
    \    local substring_index59\n    local substring_index60\n    local substring_index61\n\
    \    local substring_index62\n    local substring_index63\n    local substring_index64\n\
    \    local substring_index65\n    local substring_index66\n    local substring_index67\n\
    \    local substring_index68\n    local substring_index69\n    local substring_index70\n\
    \    local substring_index71\n    local substring_index72\n    local substring_index73\n\
    \    local substring_index74\n    local substring_index75\n    local substring_index76\n\
    \    local substring_index77\n    local substring_index78\n    local substring_index79\n\
    \    local substring_index80\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local match\n    local match2\n  \
    \  local match3\n    local match4\n    local match5\n    local match6\n    local\
    \ match7\n    local match8\n    local match9\n    local match10\n    local match11\n\
    \    local match12\n    local match13\n    local match14\n    local match15\n\
    \    local match16\n    local match17\n    local match18\n    local match19\n\
    \    local match20\n    local match21\n    local match22\n    local match23\n\
    \    local match24\n    local match25\n    local match26\n    local match27\n\
    \    local match28\n    local match29\n    local match30\n    local match31\n\
    \    local match32\n    local match33\n    local match34\n    local match35\n\
    \    local match36\n    local match37\n    local match38\n    local match39\n\
    \    local match40\n    local match41\n    local match42\n    local match43\n\
    \    local match44\n    local match45\n    local match46\n    local match47\n\
    \    local match48\n    local match49\n    local match50\n    local match51\n\
    \    local match52\n    local match53\n    local match54\n    local match55\n\
    \    local match56\n    local match57\n    local match58\n    local match59\n\
    \    local match60\n    local match61\n    local match62\n    local match63\n\
    \    local match64\n    local match65\n    local match66\n    local match67\n\
    \    local match68\n    local match69\n    local match70\n    local match71\n\
    \    local match72\n    local match73\n    local match74\n    local match75\n\
    \    local match76\n    local match77\n    local match78\n    local match79\n\
    \    local match80\n    local match81\n    local match82\n    local match83\n\
    \    local match84\n    local match85\n    local match86\n    local match87\n\
    \    local match88\n    local match89\n    local match90\n    local match91\n\
    \    local match92\n    local match93\n    local match94\n    local match95\n\
    \    local match96\n    local match97\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ $i == $substring ]]; then\n     \
    \ ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: -1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_index=0\n  local string_index=0\n  while [[ $string ]]; do\n    string_index=$((string_index\
    \ + 1))\n    if [[ $substring == \"$string\" ]]; then\n      count=$((count +\
    \ 1))\n    fi\n    if [[ $substring == \"${string:$substring_index}\" ]]; then\n\
    \      count=$((count + 1))\n    fi\n    substring_index=$((substring_index +\
    \ 1))\n    string=$((string + 1))\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=5 encoding='utf-8'>
  timestamp: 1660049019
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ $i == $substring ]]; then\n     \
    \ ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  while\
    \ [[ $string =~ $substring ]]; do\n    ((count++))\n    string=\"${string/$substring/}\"\
    \n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [[ \"${string: i:${#substring}}\" ==\
    \ \"$substring\" ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxu5c8rah.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_count=0\n  local substring_index=0\n  local substring_index2=0\n \
    \ local substring_index3=0\n  local substring_index4=0\n  local substring_index5=0\n\
    \  local substring_index6=0\n  local substring_index7=0\n  local substring_index8=0\n\
    \  local substring_index9=0\n  local substring_index10=0\n  local substring_index11=0\n\
    \  local substring_index12=0\n  local substring_index13=0\n  local substring_index14=0\n\
    \  local substring_index15=0\n  local substring_index16=0\n  local substring_index17=0\n\
    \  local substring_index18=0\n  local substring_index19=0\n  local substring_index20=0\n\
    \  local substring_index21=0\n  local substring_index22=0\n  local substring_index23=0\n\
    \  local substring_index24=0\n  local substring_index25=0\n  local substring_index26=0\n\
    \  local substring_index27=0\n  local substring_index28=0\n  local substring_index29=0\n\
    \  local substring_index30=0\n  local substring_index31=0\n  local substring_index32=0\n\
    \  local substring_index33=0\n  local substring_index34=0\n  local substring_index35=0\n\
    \  local substring_index36=0\n  local substring_index37=0\n  local substring_index38=0\n\
    \  local substring_index39=0\n  local substring_index40=0\n  local substring_index41=0\n\
    \  local substring_index42=0\n  local substring_index43=0\n  local substring_index44=0\n\
    \  local substring_index45=0\n  local substring_index46=0\n  local substring_index47=0\n\
    \  local substring_index48=0\n  local substring_index49=0\n  local substring_index50=0\n\
    \  local substring_index51=0\n  local substring_index52=0\n  local substring_index53=0\n\
    \  local substring_index54=0\n  local substring_index55=0\n  local substring_index56=0\n\
    \  local substring_index57=0\n  local substring_index58=0\n  local substring_index59=0\n\
    \  local substring_index60=0\n  local substring_index61=0\n  local substring_index62=0\n\
    \  local substring_index63=0\n  local substring_index64=0\n  local substring_index65=0\n\
    \  local substring_index66=0\n  local substring_index67=0\n  local substring_index68=0\n\
    \  local substring_index69=0\n  local substring_index70=0\n\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_count=0\n  local substring_index=0\n  local substring_index2=0\n \
    \ local substring_index3=0\n  local substring_index4=0\n  local substring_index5=0\n\
    \  local substring_index6=0\n  local substring_index7=0\n  local substring_index8=0\n\
    \  local substring_index9=0\n  local substring_index10=0\n  local substring_index11=0\n\
    \  local substring_index12=0\n  local substring_index13=0\n  local substring_index14=0\n\
    \  local substring_index15=0\n  local substring_index16=0\n  local substring_index17=0\n\
    \  local substring_index18=0\n  local substring_index19=0\n  local substring_index20=0\n\
    \  local substring_index21=0\n  local substring_index22=0\n  local substring_index23=0\n\
    \  local substring_index24=0\n  local substring_index25=0\n  local substring_index26=0\n\
    \  local substring_index27=0\n  local substring_index28=0\n  local substring_index29=0\n\
    \  local substring_index30=0\n  local substring_index31=0\n  local substring_index32=0\n\
    \  local substring_index33=0\n  local substring_index34=0\n  local substring_index35=0\n\
    \  local substring_index36=0\n  local substring_index37=0\n  local substring_index38=0\n\
    \  local substring_index39=0\n  local substring_index40=0\n  local substring_index41=0\n\
    \  local substring_index42=0\n  local substring_index43=0\n  local substring_index44=0\n\
    \  local substring_index45=0\n  local substring_index46=0\n  local substring_index47=0\n\
    \  local substring_index48=0\n  local substring_index49=0\n  local substring_index50=0\n\
    \  local substring_index51=0\n  local substring_index52=0\n  local substring_index53=0\n\
    \  local substring_index54=0\n  local substring_index55=0\n  local substring_index56=0\n\
    \  local substring_index57=0\n  local substring_index58=0\n  local substring_index59=0\n\
    \  local substring_index60=0\n  local substring_index61=0\n  local substring_index62=0\n\
    \  local substring_index63=0\n  local substring_index64=0\n  local substring_index65=0\n\
    \  local substring_index66=0\n  local substring_index67=0\n  local substring_index68=0\n\
    \  local substring_index69=0\n  local substring_index70=0\n\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ == ${substring} ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ $i == $substring ]]; then\n     \
    \ ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [[ \"${string: i:1}\" == \"${substring}\"\
    \ ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfxo74fxe.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_count=0\n    local substring_index=0\n    local substring_index2=0\n\
    \    local substring_index3=0\n    local substring_index4=0\n    local substring_index5=0\n\
    \    local substring_index6=0\n    local substring_index7=0\n    local substring_index8=0\n\
    \    local substring_index9=0\n    local substring_index10=0\n    local substring_index11=0\n\
    \    local substring_index12=0\n    local substring_index13=0\n    local substring_index14=0\n\
    \    local substring_index15=0\n    local substring_index16=0\n    local substring_index17=0\n\
    \    local substring_index18=0\n    local substring_index19=0\n    local substring_index20=0\n\
    \    local substring_index21=0\n    local substring_index22=0\n    local substring_index23=0\n\
    \    local substring_index24=0\n    local substring_index25=0\n    local substring_index26=0\n\
    \    local substring_index27=0\n    local substring_index28=0\n    local substring_index29=0\n\
    \    local substring_index30=0\n    local substring_index31=0\n    local substring_index32=0\n\
    \    local substring_index33=0\n    local substring_index34=0\n    local substring_index35=0\n\
    \    local substring_index36=0\n    local substring_index37=0\n    local substring_index38=0\n\
    \    local substring_index39=0\n    local substring_index40=0\n    local substring_index41=0\n\
    \    local substring_index42=0\n    local substring_index43=0\n    local substring_index44=0\n\
    \    local substring_index45=0\n    local substring_index46=0\n    local substring_index47=0\n\
    \    local substring_index48=0\n    local substring_index49=0\n    local substring_index50=0\n\
    \    local substring_index51=0\n    local substring_index52=0\n    local substring_index53=0\n\
    \    local substring_index54=0\n    local substring_index55=0\n    local substring_index56=0\n\
    \    local substring_index57=0\n    local substring_index58=0\n    local substring_index59=0\n\
    \    local substring_index60=0\n    local substring_index61=0\n    local substring_index62=0\n\
    \    local substring_index63=0\n    local substring_index64=0\n    local substring_index65=0\n\
    \    local substring_index66=0\n    local substring_index67=0\n    local substring_index68=0\n\
    \    local substring_index69=0\n    local substring_index70=0\n\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=$1\n  local substring=$2\n  local count=0\n  local substring_count=0\n\
    \  local substring_index=0\n  local substring_index2=0\n  local substring_index3=0\n\
    \  local substring_index4=0\n  local substring_index5=0\n  local substring_index6=0\n\
    \  local substring_index7=0\n  local substring_index8=0\n  local substring_index9=0\n\
    \  local substring_index10=0\n  local substring_index11=0\n  local substring_index12=0\n\
    \  local substring_index13=0\n  local substring_index14=0\n  local substring_index15=0\n\
    \  local substring_index16=0\n  local substring_index17=0\n  local substring_index18=0\n\
    \  local substring_index19=0\n  local substring_index20=0\n  local substring_index21=0\n\
    \  local substring_index22=0\n  local substring_index23=0\n  local substring_index24=0\n\
    \  local substring_index25=0\n  local substring_index26=0\n  local substring_index27=0\n\
    \  local substring_index28=0\n  local substring_index29=0\n  local substring_index30=0\n\
    \  local substring_index31=0\n  local substring_index32=0\n  local substring_index33=0\n\
    \  local substring_index34=0\n  local substring_index35=0\n  local substring_index36=0\n\
    \  local substring_index37=0\n  local substring_index38=0\n  local substring_index39=0\n\
    \  local substring_index40=0\n  local substring_index41=0\n  local substring_index42=0\n\
    \  local substring_index43=0\n  local substring_index44=0\n  local substring_index45=0\n\
    \  local substring_index46=0\n  local substring_index47=0\n  local substring_index48=0\n\
    \  local substring_index49=0\n  local substring_index50=0\n  local substring_index51=0\n\
    \  local substring_index52=0\n  local substring_index53=0\n  local substring_index54=0\n\
    \  local substring_index55=0\n  local substring_index56=0\n  local substring_index57=0\n\
    \  local substring_index58=0\n  local substring_index59=0\n  local substring_index60=0\n\
    \  local substring_index61=0\n  local substring_index62=0\n  local substring_index63=0\n\
    \  local substring_index64=0\n  local substring_index65=0\n  local substring_index66=0\n\
    \  local substring_index67=0\n  local substring_index68=0\n  local substring_index69=0\n\
    \  local substring_index70=0\n\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ substring_count=0\n  local substring_index=0\n  local substring_index2=0\n \
    \ local substring_index3=0\n  local substring_index4=0\n  local substring_index5=0\n\
    \  local substring_index6=0\n  local substring_index7=0\n  local substring_index8=0\n\
    \  local substring_index9=0\n  local substring_index10=0\n  local substring_index11=0\n\
    \  local substring_index12=0\n  local substring_index13=0\n  local substring_index14=0\n\
    \  local substring_index15=0\n  local substring_index16=0\n  local substring_index17=0\n\
    \  local substring_index18=0\n  local substring_index19=0\n  local substring_index20=0\n\
    \  local substring_index21=0\n  local substring_index22=0\n  local substring_index23=0\n\
    \  local substring_index24=0\n  local substring_index25=0\n  local substring_index26=0\n\
    \  local substring_index27=0\n  local substring_index28=0\n  local substring_index29=0\n\
    \  local substring_index30=0\n  local substring_index31=0\n  local substring_index32=0\n\
    \  local substring_index33=0\n  local substring_index34=0\n  local substring_index35=0\n\
    \  local substring_index36=0\n  local substring_index37=0\n  local substring_index38=0\n\
    \  local substring_index39=0\n  local substring_index40=0\n  local substring_index41=0\n\
    \  local substring_index42=0\n  local substring_index43=0\n  local substring_index44=0\n\
    \  local substring_index45=0\n  local substring_index46=0\n  local substring_index47=0\n\
    \  local substring_index48=0\n  local substring_index49=0\n  local substring_index50=0\n\
    \  local substring_index51=0\n  local substring_index52=0\n  local substring_index53=0\n\
    \  local substring_index54=0\n  local substring_index55=0\n  local substring_index56=0\n\
    \  local substring_index57=0\n  local substring_index58=0\n  local substring_index59=0\n\
    \  local substring_index60=0\n  local substring_index61=0\n  local substring_index62=0\n\
    \  local substring_index63=0\n  local substring_index64=0\n  local substring_index65=0\n\
    \  local substring_index66=0\n  local substring_index67=0\n  local substring_index68=0\n\
    \  local substring_index69=0\n  local substring_index70=0\n\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=$1\n    local substring=$2\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#string} ]; do\n        if [[ $string == *$substring*\
    \ ]]; then\n            (( count++ ))\n        fi\n        i=$(( i + 1 ))\n  \
    \  done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local\
    \ i\n  for i in \"${!string}\"; do\n    if [[ \"${string: i:1}\" == \"${substring}\"\
    \ ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfxo74fxe.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n    local substring_index71=0\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\"\
    )\n# \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
    \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
    \ {\n    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i\n    local j\n    for (( i=1; i<${#string}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049014

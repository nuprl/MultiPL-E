language: sh
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        [ \"$char\" == \"${string^}\" ] && continue\n       \
    \ [ \"$char\" == \"${string^^}\" ] && continue\n        [ \"$char\" == \"${string^^^}\"\
    \ ] && continue\n        count=$((count+1))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!-~] ]] && [[ $char != [()] ]] && [[ $char != [,] ]] && [[ $char !=\
    \ [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [&] ]] &&\
    \ [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char !=\
    \ [,] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] &&\
    \ [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char !=\
    \ [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] &&\
    \ [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char !=\
    \ [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] &&\
    \ [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char !=\
    \ [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] &&\
    \ [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char !=\
    \ [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] &&\
    \ [[ $char != [&] ]] && [[ $char != [|] ]] && [[ $char != [<] ]] && [[ $char !=\
    \ [>] ]] && [[ $char != [;] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] &&\
    \ [[ $char != [&] ]] && [[ $char != [\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpifq261fl.sh: line 14: syntax error in conditional expression: unexpected
    token `(''

    /tmp/tmpifq261fl.sh: line 14: syntax error near `[()''

    /tmp/tmpifq261fl.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!-~] ]] &&
    [[ $char != [()] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char !=
    [#] ]] && [[ $char != [%] ]] && [[ $char != [&] ]] && [[ $char != [|] ]] && [[
    $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [,] ]] && [[ $char != [;]
    ]] && [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [&] ]] && [[ $char
    != [|] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [;] ]] &&
    [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [&] ]] && [[ $char !=
    [|] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [;] ]] && [[
    $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [&] ]] && [[ $char != [|]
    ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [;] ]] && [[ $char
    != [#] ]] && [[ $char != [%] ]] && [[ $char != [&] ]] && [[ $char != [|] ]] &&
    [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [;] ]] && [[ $char !=
    [#] ]] && [[ $char != [%] ]] && [[ $char != [&] ]] && [[ $char != [|] ]] && [[
    $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [;] ]] && [[ $char != [#]
    ]] && [[ $char != [%] ]] && [[ $char != [&] ]] && [[ $char != [''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[[:lower:]]$\
    \ ]] && count=$((count+1))\n        [[ $char =~ ^[[:upper:]]$ ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ [A-Z] ]]\
    \ && count=$((count+1))\n        [[ $char =~ [a-z] ]] && count=$((count+1))\n\
    \        [[ $char =~ [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char,,}\" = \"\
    ${char,,}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  local char_count\n  local chars\n  local char\n  local char_count\n  local\
    \ chars\n  local char\n  local char_count\n  local chars\n  local char\n  local\
    \ char_count\n  local chars\n  local char\n  local char_count\n  local chars\n\
    \  local char\n  local char_count\n  local chars\n  local char\n  local char_count\n\
    \  local chars\n  local char\n  local char_count\n  local chars\n  local char\n\
    \  local char_count\n  local chars\n  local char\n  local char_count\n  local\
    \ chars\n  local char\n  local char_count\n  local chars\n  local char\n  local\
    \ char_count\n  local chars\n  local char\n  local char_count\n  local chars\n\
    \  local char\n  local char_count\n  local chars\n  local char\n  local char_count\n\
    \  local chars\n  local char\n  local char_count\n  local chars\n  local char\n\
    \  local char_count\n  local chars\n  local char\n  local char_count\n  local\
    \ chars\n  local char\n  local char_count\n  local chars\n  local char\n  local\
    \ char_count\n  local chars\n  local char\n  local char_count\n  local chars\n\
    \  local char\n  local char_count\n  local chars\n  local char\n  local char_count\n\
    \  local chars\n  local char\n  local char_count\n  local chars\n  local char\n\
    \  local char_count\n  local chars\n  local char\n  local char_count\n  local\
    \ chars\n  local char\n  local char_count\n  local chars\n  local char\n  local\
    \ char_count\n  local chars\n  local char\n  local char_count\n  local chars\n\
    \  local char\n  local char_count\n  local chars\n  local char\n  local char_count\n\
    \  local chars\n  local char\n  local char_count\n  local chars\n  local char\n\
    \  local char_count\n  local chars\n  local char\n  local char_count\n  local\
    \ chars\n  local char\n  local char_count\n  local chars\n  local char\n  local\
    \ char_count\n  local \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [~`] ]] && [[ $char != [|]\
    \ ]] && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [<] ]] && [[ $char\
    \ != [>] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char != [,] ]]\
    \ && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char\
    \ != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]]\
    \ && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char\
    \ != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]]\
    \ && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char\
    \ != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]]\
    \ && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char\
    \ != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]]\
    \ && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char\
    \ != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]]\
    \ && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char\
    \ != [,] ]] && \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxs8r0gn_.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmpxs8r0gn_.sh: line 14: syntax error near `&*''

    /tmp/tmpxs8r0gn_.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [~`] ]] && [[ $char != [|] ]] && [[ $char != [;] ]] && [[ $char
    != [,] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [,] ]] &&
    [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char !=
    [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[
    $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,]
    ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char
    != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] &&
    [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char !=
    [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[
    $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,]
    ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char
    != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] &&
    [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char != [,] ]] && [[ $char !=
    [,] ]] && [[ $char != [,] ]] && ''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        [ \"$char\" == \"${string^}\" ] && continue\n\
    \        ((count++))\n    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in ${string//,/ }; do\n        ((count++))\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n\n    for char in $(echo $string | tr [A-Z] [a-z]); do\n        ((count++))\n\
    \    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[[:upper:]]$\
    \ ]] && count=$((count+1))\n        [[ $char =~ ^[[:lower:]]$ ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        (( count++ ))\n  \
    \  done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[[:upper:]]\
    \ ]] && continue\n        [[ $char =~ ^[[:lower:]] ]] && continue\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  local lower\n  local upper\n  local char_count\n  local chars\n\n  lower=$(echo\
    \ $string | tr '[:upper:]' '[:lower:]')\n  upper=$(echo $string | tr '[:lower:]'\
    \ '[:upper:]')\n\n  for char in $lower; do\n    char_count=$(echo $string | grep\
    \ -o \"$char\" | wc -l)\n    if [ \"$char_count\" -eq \"1\" ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n\n  for char in $upper; do\n    char_count=$(echo $string | grep\
    \ -o \"$char\" | wc -l)\n    if [ \"$char_count\" -eq \"1\" ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n\n  echo $count\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n  for (( i = 0; i < ${#string}; i++\
    \ )); do\n    char=\"${string:$i:1}\"\n    chars=\"${chars}${char}\"\n  done\n\
    \  chars=\"${chars}${char}\"\n  chars=$(echo \"${chars}\" | tr [A-Z] [a-z])\n\
    \  for (( j = 1; j < ${#chars}; j++ )); do\n    char=\"${chars:$j:1}\"\n    count=$((\
    \ count + ${#char} ))\n  done\n  echo \"${count}\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        [ \"$char\" == \"$char\" -a \"$char\" != \"$char\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" -a \"$char\" != \"$char\" -a\
    \ \"$char\" != \"$char\" ] && continue\n        [ \"$char\" == \"$char\" -a \"\
    $char\" != \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" ] &&\
    \ continue\n        [ \"$char\" == \"$char\" -a \"$char\" != \"$char\" -a \"$char\"\
    \ != \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" ] && continue\n\
    \        [ \"$char\" == \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"\
    $char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"\
    $char\" ] && continue\n        [ \"$char\" == \"$char\" -a \"$char\" != \"$char\"\
    \ -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\"\
    \ -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" ] && continue\n        [\
    \ \"$char\" == \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" -a\
    \ \"$char\" != \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" -a\
    \ \"$char\" != \"$char\" -a \"$char\" != \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" -a \"\
    $char\" != \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" -a \"\
    $char\" != \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" ] &&\
    \ continue\n        [ \"$char\" == \"$char\" -a \"$char\" != \"$char\" -a \"$char\"\
    \ != \"$char\" -a \"$char\" != \"$char\" -a \"$char\" != \"$char\" -a \"$char\"\
    \ != \"$char\" -a \"$char\" != \"$char\" -a \"$char\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl5j9i2hq.sh: line 37: unexpected EOF while looking for matching
    `"''

    /tmp/tmpl5j9i2hq.sh: line 41: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"${character}\"\
    \ == \"${string}\" ] && return 0\n        [ \"${character}\" == \"${string^^}\"\
    \ ] && return 0\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/[[:upper:]]/\\n/g' -e 's/[[:lower:]]/\\\
    n/g' -e 's/[[:digit:]]/\\n/g' -e 's/[[:punct:]]/\\n/g' -e 's/[[:space:]]/\\n/g')\n\
    \    do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        [ \"${char}\" == \"${string^^}\" ] && continue\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed 's/./\\L&/g'); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ characters=()\n  local character\n  local i\n  for i in \"${string}\"; do\n\
    \    character=\"${i}\"\n    characters[${#characters}]=\"${character}\"\n  done\n\
    \  for i in \"${!characters[@]}\"; do\n    count=$((count+1))\n  done\n  echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [~`] ]] && [[ $char != [|]\
    \ ]] && [[ $char != [~] ]] && [[ $char != [?] ]] && [[ $char != [/] ]] && [[ $char\
    \ != [#] ]] && [[ $char != [%] ]] && [[ $char != [&] ]] && [[ $char != [,] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [=] ]] && [[ $char != [<] ]] && [[ $char\
    \ != [>] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char != [,] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprq0xwpil.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmprq0xwpil.sh: line 14: syntax error near `&*''

    /tmp/tmprq0xwpil.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [~`] ]] && [[ $char != [|] ]] && [[ $char != [~] ]] && [[ $char
    != [?] ]] && [[ $char != [/] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] &&
    [[ $char != [&] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char !=
    [=] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [,] ]] && [[
    $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char != [;]
    ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char
    != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&
    [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[
    $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;]
    ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char
    != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&
    [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && ''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        [ \"$char\" == \"${string^}\" ] && continue\n       \
    \ [ \"$char\" == \"${string^^}\" ] && continue\n        [ \"$char\" == \"${string^^^}\"\
    \ ] && continue\n        count=$(( ${count} + 1 ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n\
    \  local B\n  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n\
    \  local I\n  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n\
    \  local P\n  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n\
    \  local W\n  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n\
    \  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n\
    \  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n\
    \  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char,,}\" = \"\
    ${char,,}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[[:upper:]]$\
    \ ]] && count=$((count+1))\n        [[ $char =~ ^[[:lower:]]$ ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $string; do\n        [[ $char =~ ^[[:upper:]]$ ]] && count=$((count+1))\n\
    \        [[ $char =~ ^[[:lower:]]$ ]] && count=$((count+1))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [[ $char == [A-Z]\
    \ ]] && count=$((count+1))\n        [[ $char == [a-z] ]] && count=$((count+1))\n\
    \        [[ $char == [0-9] ]] && count=$((count+1))\n    done\n\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed 's/\\(.\\)/\\L\\1/'); do\n      \
    \  ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n\n  chars=$(echo \"$string\" | sed\
    \ -e 's/\\(.\\)/\\1 /g')\n  for ((i=0; i<${#chars}; i++)); do\n    char=$(echo\
    \ \"${chars}\" | sed -n \"${i}p\")\n    count=$((count+1))\n    for ((j=0; j<${#char};\
    \ j++)); do\n      if [[ ${char:j:1} == ${char:j:1}${char:j:1}${char:j:1} ]];\
    \ then\n        ((count--))\n      fi\n    done\n  done\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 2: invalid usage of line address 0

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local i\n  for i in \"${string}\"; do\n    char=\"${i}\"\n    case \"\
    $char\" in\n      [a-z]* | [A-Z]*) count=$((count+1));;\n      [[:digit:]]*) count=$((count+1));;\n\
    \      [[:space:]]*) count=$((count+1));;\n      *) count=$((count+1));;\n   \
    \ esac\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"${character}\"\
    \ == \"${string}\" ] && continue\n        [ \"${character}\" == \"${string^^}\"\
    \ ] && continue\n        [ \"${character}\" == \"${string^^}\" ] && continue\n\
    \        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string//[^[:alpha:]]/}\"; do\n        ((count++))\n\
    \    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  while read -r char; do\n    [[ \"$char\" =~ ^[A-Za-z]$ ]] || continue\n\
    \    ((count++))\n  done <<< \"$string\"\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n\n    for char in $(echo $string | sed -e 's/\\(.\\)/\\L\\1/' -e 's/\\\
    (.\\)/\\U\\1/'); do\n        ((count++))\n    done\n\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        [ \"$char\" == \"${string^}\" ] && continue\n\
    \        [ \"$char\" == \"${string^^}\" ] && continue\n        [ \"$char\" ==\
    \ \"${string^^^}\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  while read -r char; do\n    [[ \"$char\" =~ ^[[:upper:]]$ ]] && count=$((count+1))\n\
    \    [[ \"$char\" =~ ^[[:lower:]]$ ]] && count=$((count+1))\n  done <<< \"$string\"\
    \n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        [ \"${char}\" == \"${string^^}\" ] && continue\n\
    \        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!-~] ]] && [[ $char != [!A-Za-z] ]] && [[ $char != [!A-Za-z0-9] ]]\
    \ && [[ $char != [!-~0-9] ]] && [[ $char != [!A-Za-z0-9] ]] && [[ $char != [!-~A-Za-z0-9]\
    \ ]] && [[ $char != [!-~A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9] ]] && [[\
    \ $char != [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~A-Za-z0-9] ]] && [[ $char !=\
    \ [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9]\
    \ ]] && [[ $char != [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9] ]] &&\
    \ [[ $char != [!-~A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9] ]] && [[ $char\
    \ != [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9]\
    \ ]] && [[ $char != [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~A-Za-z0-9] ]] && [[\
    \ $char != [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9] ]] && [[ $char\
    \ != [!-~A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9]\
    \ ]] && [[ $char != [!-~A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9] ]] && [[\
    \ $char != [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~A-Za-z0-9] ]] && [[ $char !=\
    \ [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~0-9A-Za-z0-9] ]] && [[ $char != [!-~A-Za-z0-9]\
    \ ]] && [[ $char != [!\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgkox0e01.sh: line 14: syntax error in conditional expression

    /tmp/tmpgkox0e01.sh: line 15: syntax error near `}''

    /tmp/tmpgkox0e01.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  while read -r character; do\n    ((count++))\n  done < <(echo \"\
    $string\" | tr A-Z a-z)\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[[:upper:]]\
    \ ]] && { count=$((count+1)); continue; }\n        [[ $char =~ ^[[:lower:]] ]]\
    \ && { count=$((count+1)); continue; }\n        [[ $char =~ ^[[:digit:]] ]] &&\
    \ { count=$((count+1)); continue; }\n        [[ $char =~ ^[[:punct:]] ]] && {\
    \ count=$((count+1)); continue; }\n        [[ $char =~ ^[[:space:]] ]] && { count=$((count+1));\
    \ continue; }\n        [[ $char =~ ^[[:alpha:]] ]] && { count=$((count+1)); continue;\
    \ }\n        [[ $char =~ ^[[:digit:]] ]] && { count=$((count+1)); continue; }\n\
    \        [[ $char =~ ^[[:punct:]] ]] && { count=$((count+1)); continue; }\n  \
    \      [[ $char =~ ^[[:space:]] ]] && { count=$((count+1)); continue; }\n    \
    \    [[ $char =~ ^[[:alpha:]] ]] && { count=$((count+1)); continue; }\n      \
    \  [[ $char =~ ^[[:digit:]] ]] && { count=$((count+1)); continue; }\n        [[\
    \ $char =~ ^[[:punct:]] ]] && { count=$((count+1)); continue; }\n        [[ $char\
    \ =~ ^[[:space:]] ]] && { count=$((count+1)); continue; }\n        [[ $char =~\
    \ ^[[:alpha:]] ]] && { count=$((count+1)); continue; }\n        [[ $char =~ ^[[:digit:]]\
    \ ]] && { count=$((count+1)); continue; }\n        [[ $char =~ ^[[:punct:]] ]]\
    \ && { count=$((count+1)); continue; }\n        [[ $char =~ ^[[:space:]] ]] &&\
    \ { count=$((count+1)); continue; }\n        [[ $char =~ ^[[:alpha:]] ]] && {\
    \ count=$((count+1)); continue; }\n        [[ $char =~ ^[[:digit:]] ]] && { count=$((count+1));\
    \ continue; }\n        [[ $char =~ ^[[:punct:]] ]] && { count=$((count+1)); continue;\
    \ }\n        [[ $char =~ ^[[:space:]] ]] && { count=$((count+1)); continue; }\n\
    \        [\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[\
    \ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\"\
    ) = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy28e66vz.sh: line 36: syntax error near unexpected token `}''

    /tmp/tmpy28e66vz.sh: line 36: `}''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  while read -r character; do\n    [[ \"$character\" =~ ^[a-zA-Z0-9]$\
    \ ]] || continue\n    ((count++))\n  done <<< \"$string\"\n  echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/ /\\n/g' | sed -e 's/^/\"/'\
    \ -e 's/$/\"/' -e 's/\\n//g' -e 's/\\s//g')\n    do\n        ((count++))\n   \
    \ done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  while read -r char; do\n    ((count++))\n  done < <(echo \"$string\"\
    \ | tr A-Z a-z)\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n\n  for char in \"${string}\"; do\n    (( count++ ))\n  done\n\n  echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char,,}\" = \"\
    ${char,,}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local char_count\n  local char\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_upper\n\
    \  local char_lower\n  local char_upper\n  local char_lower\n  local char_\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char ]]\n        ((count++))\n   \
    \ done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjr43js00.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmpjr43js00.sh: line 14: syntax error near `&*''

    /tmp/tmpjr43js00.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char ]]''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/ /\\n/g' | sort -u); do\n \
    \       ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  while read -r char; do\n    ((count++))\n  done < <(echo \"$string\"\
    \ | sed 's/[^A-Za-z]//g' | sort -u)\n  echo \"$count\"\n}\n\ncandidate() {\n \
    \   count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $string; do\n        [[ $char != $char ]] && [[ $char\
    \ != ${char^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^^} ]] &&\
    \ [[ $char != ${char^^^^^} ]] && [[ $char != ${char^^^^^^} ]] && [[ $char != ${char^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^} ]] && [[\
    \ $char != ${char^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^} ]] &&\
    \ [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp967t9nao.sh: line 14: syntax error in conditional expression

    /tmp/tmp967t9nao.sh: line 17: syntax error near `candidate(''

    /tmp/tmp967t9nao.sh: line 17: `candidate() {''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != \\- ]] && [[ $char != \\_ ]] && [[ $char != \\. ]] && [[ $char != \\\
    # ]] && [[ $char != \\$ ]] && [[ $char != \\! ]] && [[ $char != \\? ]] && [[ $char\
    \ != \\( ]] && [[ $char != \\) ]] && [[ $char != \\[ ]] && [[ $char != \\] ]]\
    \ && [[ $char != \\{ ]] && [[ $char != \\} ]] && [[ $char != \\~ ]] && [[ $char\
    \ != \\$ ]] && [[ $char != \\* ]] && [[ $char != \\+ ]] && [[ $char != \\- ]]\
    \ && [[ $char != \\/ ]] && [[ $char != \\# ]] && [[ $char != \\$ ]] && [[ $char\
    \ != \\@ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]]\
    \ && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char\
    \ != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]]\
    \ && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char\
    \ != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]]\
    \ && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char\
    \ != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]]\
    \ && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char\
    \ != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]]\
    \ && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char != \\$ ]] && [[ $char\
    \ != \\$ ]] && [\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsduyrqmb.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmpsduyrqmb.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        (( count++ ))\n    done\n\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  while IFS= read -r character; do\n    ((count++))\n  done < <(echo\
    \ \"$string\" | tr A-Z a-z)\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $string; do\n        [[ $char != $char ]] && [[ $char\
    \ != ${char^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^^} ]] &&\
    \ [[ $char != ${char^^^^^} ]] && [[ $char != ${char^^^^^^} ]] && [[ $char != ${char^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^} ]] && [[\
    \ $char != ${char^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^} ]] &&\
    \ [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp967t9nao.sh: line 14: syntax error in conditional expression

    /tmp/tmp967t9nao.sh: line 17: syntax error near `candidate(''

    /tmp/tmp967t9nao.sh: line 17: `candidate() {''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ character\n    for character in $string; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n \
    \   count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"${character}\"\
    \ == \"${character^^}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local lower\n  local upper\n  local chars\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local characters=()\n    local character\n    for character in \"${string}\"\
    ; do\n        characters+=(\"$character\")\n    done\n    for character in \"\
    ${characters[@]}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!@#$%^&*()_+{}|:<>?/\\\\] ]] && [[ $char != [~`] ]] && [[ $char !=\
    \ [|] ]] && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [<] ]] &&\
    \ [[ $char != [>] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char !=\
    \ [,] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&\
    \ [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=\
    \ [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&\
    \ [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=\
    \ [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&\
    \ [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=\
    \ [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&\
    \ [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=\
    \ [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&\
    \ [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=\
    \ [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&\
    \ [[ $char != [;] ]\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi4lsjo62.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmpi4lsjo62.sh: line 14: syntax error near `&*''

    /tmp/tmpi4lsjo62.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/\\]
    ]] && [[ $char != [~`] ]] && [[ $char != [|] ]] && [[ $char != [;] ]] && [[ $char
    != [,] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [,] ]] &&
    [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[
    $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;]
    ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char
    != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&
    [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[
    $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;]
    ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char
    != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&
    [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != ${char^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^^}\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed 's/\\(.\\)/\\L\\1/')\n    do\n  \
    \      ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  ((count++))\n    done\n    return $count\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in ${string//[^[:alpha:]]/}; do\n        ((count++))\n  \
    \  done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n\n  for char in \"${string}\"; do\n    ((count++))\n  done\n\n  echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr A-Z a-z); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char == [A-Z] ]]\
    \ && count=$((count+1)) || count=$((count+0))\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in ${string//[^a-zA-Z]}; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"${character}\"\
    \ == \"${character^^}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/\\(.\\)/\\1 /g'); do\n    \
    \    ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char,,}\" = \"\
    ${char,,}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^^}\" ] && return 0\n        ((count++))\n    done\n\
    \    return $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr [A-Z] [a-z]); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n  for (( i=1; i<${#string}; i++ ));\
    \ do\n    char=\"${string:$i:1}\"\n    chars=\"${chars}${char}\"\n  done\n  chars=\"\
    ${chars}${char}\"\n  for (( j=1; j<${#chars}; j++ )); do\n    char=\"${chars:$j:1}\"\
    \n    if [[ ${char} == ${char^^} ]]; then\n      (( count++ ))\n    fi\n  done\n\
    \  echo \"${count}\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char == [A-Z] ]]\
    \ && count=$((count+1))\n        [[ $char == [a-z] ]] && count=$((count+1))\n\
    \        [[ $char == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char == [A-Z] ]]\
    \ && count=$((count+1))\n        [[ $char == [a-z] ]] && count=$((count+1))\n\
    \        [[ $char == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr A-Z a-z); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  while read -r char; do\n    ((count++))\n  done < <(echo \"$string\"\
    \ | tr A-Z a-z)\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/ /\\n/g' | sort | uniq); do\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n\
    \        [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" ==\
    \ \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\" ] &&\
    \ return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"\
    $char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa6rfjm_3.sh: line 53: syntax error near unexpected token `}''

    /tmp/tmpa6rfjm_3.sh: line 53: `}''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  while IFS= read -r character; do\n    count=$((count+1))\n  done\
    \ < <(echo \"$string\" | tr A-Z a-z)\n  echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^([[:lower:]]|[[:upper:]])$\
    \ ]] || continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" \n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6q_oejxt.sh: line 52: syntax error near unexpected token `}''

    /tmp/tmp6q_oejxt.sh: line 52: `}''

    '
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        (( count++ ))\n    done\n\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string//[^a-zA-Z0-9]}\"; do\n        ((count++))\n\
    \    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"${character}\"\
    \ == \"${character^^}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local i\n  for i in $(seq 0 ${#string}); do\n    char=\"${string:$i:1}\"\
    \n    if [[ $char != ${char^^} ]]; then\n      ((count++))\n    fi\n  done\n \
    \ echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $string; do\n        [[ $char == [A-Z] ]] && count=$((count+1))\n\
    \        [[ $char == [a-z] ]] && count=$((count+1))\n        [[ $char == [0-9]\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  for char in $(echo $string | tr [A-Z] [a-z]); do\n    ((count++))\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]]\
    \ && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsz9uwuxd.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmpsz9uwuxd.sh: line 14: syntax error near `&*''

    /tmp/tmpsz9uwuxd.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [[ $char != $char\
    \ ]] && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] &&\
    \ [[ $char != [!@#$%^&*()_+{}|:\"<>?]] ]] && [[ $char ]] && count=$((count+1))\n\
    \    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6dqnm9op.sh: line 15: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmp6dqnm9op.sh: line 15: syntax error near `&*''

    /tmp/tmp6dqnm9op.sh: line 15: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:"<>?]]
    ]] && [[ $char ]] && count=$((count+1))''

    '
  stdout: ''
  timestamp: 1660049412
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n    \
    \    [ \"$char\" == \"${string^^^^^}\" ] && return 0\n        [ \"$char\" == \"\
    ${string^^^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^^^^}\" ]\
    \ && return 0\n        [ \"$char\" == \"${string^^^^^^^^}\" ] && return 0\n  \
    \      [ \"$char\" == \"${string^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^}\" ] && return 0\n       \
    \ [ \"$char\" == \"${string^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^}\" ] && return 0\n  \
    \      [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n       \
    \ [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"\
    $char\" == \"${string^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\" ==\
    \ \"${string^^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\" == \"\
    ${string^^^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^^^^^}\"\
    \ ] && return 0\n        [\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjb1qc3y6.sh: line 45: syntax error near unexpected token `}''

    /tmp/tmpjb1qc3y6.sh: line 45: `}''

    '
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char == [A-Z] ]]\
    \ && count=$((count+1))\n        [[ $char == [a-z] ]] && count=$((count+1))\n\
    \        [[ $char == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char,,}\" = \"\
    ${char,,}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        (( count++\
    \ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!-~] ]] && [[ $char != [()*&^%$#@!] ]] && [[ $char != [()*&^%$#@!-~]\
    \ ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!] ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!-~]\
    \ ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!] ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~]\
    \ ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!] ]] && [[\
    \ $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~] ]] && [[ $char !=\
    \ [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!] ]] && [[ $char\
    \ != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~] ]] && [[ $char\
    \ != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyshz_m0j.sh: line 14: syntax error in conditional expression: unexpected
    token `(''

    /tmp/tmpyshz_m0j.sh: line 14: syntax error near `[()''

    /tmp/tmpyshz_m0j.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!-~] ]] &&
    [[ $char != [()*&^%$#@!] ]] && [[ $char != [()*&^%$#@!-~] ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!]
    ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!-~] ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!]
    ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~] ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!]
    ]] && [[ $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~] ]] && [[
    $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!] ]] && [[
    $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~] ]] &&
    [[ $char != [()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@!-~()*&^%$#@''

    '
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr A-Z a-z); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local char_count\n  local char_index\n  local char_index2\n  local char_index3\n\
    \  local char_index4\n  local char_index5\n  local char_index6\n  local char_index7\n\
    \  local char_index8\n  local char_index9\n  local char_index10\n  local char_index11\n\
    \  local char_index12\n  local char_index13\n  local char_index14\n  local char_index15\n\
    \  local char_index16\n  local char_index17\n  local char_index18\n  local char_index19\n\
    \  local char_index20\n  local char_index21\n  local char_index22\n  local char_index23\n\
    \  local char_index24\n  local char_index25\n  local char_index26\n  local char_index27\n\
    \  local char_index28\n  local char_index29\n  local char_index30\n  local char_index31\n\
    \  local char_index32\n  local char_index33\n  local char_index34\n  local char_index35\n\
    \  local char_index36\n  local char_index37\n  local char_index38\n  local char_index39\n\
    \  local char_index40\n  local char_index41\n  local char_index42\n  local char_index43\n\
    \  local char_index44\n  local char_index45\n  local char_index46\n  local char_index47\n\
    \  local char_index48\n  local char_index49\n  local char_index50\n  local char_index51\n\
    \  local char_index52\n  local char_index53\n  local char_index54\n  local char_index55\n\
    \  local char_index56\n  local char_index57\n  local char_index58\n  local char_index59\n\
    \  local char_index60\n  local char_index61\n  local char_index62\n  local char_index63\n\
    \  local char_index64\n  local char_index65\n  local char_index66\n  local char_index67\n\
    \  local char_index68\n  local char_index69\n  local char_index70\n  local char_index71\n\
    \  local char_index72\n  local char_index73\n  local char_index74\n  local char_index75\n\
    \  local char_index76\n  local char_index77\n  local char_index78\n  local char_index79\n\
    \  local char_index80\n  local char_index81\n  local char_index82\n  \n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  local chars\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"${char,,}\" =\
    \ \"${char,,}\" ] && count=$((count+1))\n    done\n\n    echo \"$count\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]]\
    \ && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsz9uwuxd.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmpsz9uwuxd.sh: line 14: syntax error near `&*''

    /tmp/tmpsz9uwuxd.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != \"${char^^}\"\
    \ ]] && [[ $char != \"${char^^}\" ]] || count=$((count+1))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        (( count++ ))\n    done\n\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  while read -r character; do\n    ((count++))\n  done < <(echo \"\
    $string\" | tr A-Z a-z)\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $string; do\n        ((count++))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local characters=()\n  while read -r character; do\n    characters+=(\"\
    $character\")\n  done < <(echo \"$string\" | tr A-Z a-z)\n  for character in \"\
    ${characters[@]}\"; do\n    count=$((count+1))\n  done\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local character\n\
    \  local characters_seen\n  characters_seen=()\n  for character in \"${string}\"\
    ; do\n    characters_seen+=(\"${characters_seen[@]}\" \"$character\")\n  done\n\
    \  for character in \"${characters_seen[@]}\"; do\n    count=$(( $count + 1 ))\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed 's/\\(.\\)/\\L\\1/')\n    do\n  \
    \      ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  while read -r char; do\n    [[ \"$char\" =~ ^[a-zA-Z0-9]$ ]] || continue\n\
    \    ((count++))\n  done <<< \"$string\"\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"${character}\"\
    \ == \"${character^^}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ character\n    for character in $string; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local i\n  for i in \"${string}\"; do\n    char=\"${i}\"\n    if [ \"\
    ${char}\" == \"${i}\" ]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed 's/./\\U&/g'); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in ${string//[^a-zA-Z]}; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local character\n\
    \  local lower\n  local upper\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ A\n  local B\n  local C\n  local D\n  local E\n  local F\n  local G\n  local\
    \ H\n  local I\n  local J\n  local K\n  local L\n  local M\n  local N\n  local\
    \ O\n  local P\n  local Q\n  local R\n  local S\n  local T\n  local U\n  local\
    \ V\n  local W\n  local X\n  local Y\n  local Z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local\
    \ E\n  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local\
    \ L\n  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local\
    \ S\n  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local\
    \ Z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  \n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local i\n  for i in $(seq 0 $((${#string} - 1)))\n  do\n    character=\"\
    ${string:$i:1}\"\n    if [[ \"$character\" =~ [A-Z] ]]\n    then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n\
    \        [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" ==\
    \ \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\" ] &&\
    \ return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"\
    $char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa6rfjm_3.sh: line 53: syntax error near unexpected token `}''

    /tmp/tmpa6rfjm_3.sh: line 53: `}''

    '
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char == [A-Z] ]]\
    \ && count=$((count+1))\n        [[ $char == [a-z] ]] && count=$((count+1))\n\
    \        [[ $char == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  while read -r char; do\n    [[ \"$char\" =~ ^[A-Za-z]$ ]] || continue\n\
    \    (( ++count ))\n  done <<< \"$string\"\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != ${char,,}\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local char_count\n  while read -r char; do\n    char_count=$(echo \"\
    $string\" | grep -c \"$char\")\n    if [ \"$char_count\" -gt 0 ]; then\n     \
    \ ((count++))\n    fi\n  done < <(echo \"$string\" | tr '[:upper:]' '[:lower:]')\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[[:upper:]]\
    \ ]] && count=$((count+1)) || count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!-~] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char !=\
    \ [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]]\
    \ && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char\
    \ != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_]\
    \ ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[\
    \ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char !=\
    \ [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] &&\
    \ [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char\
    \ != [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.]\
    \ ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[\
    \ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char !=\
    \ [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]]\
    \ && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char\
    \ != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]]\
    \ && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char\
    \ != [-.] ]] && [[ $char != \n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbpafp5s8.sh: line 14: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmpbpafp5s8.sh: line 14: syntax error near `!=''

    /tmp/tmpbpafp5s8.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!-~] ]] &&
    [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char !=
    [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] &&
    [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char !=
    [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] &&
    [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char !=
    [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] &&
    [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char !=
    [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] &&
    [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char !=
    [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] &&
    [[ $char != [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char !=
    [-.] ]] && [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] &&
    [[ $char != [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char !=
    [-_] ]] && [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != [-_] ]] &&
    [[ $char != [-] ]] && [[ $char != [-.] ]] && [[ $char != ''

    '
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"$char\" -a \"$char\" != \"${char^^}\"\
    \ ] && return 1\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        [ \"${char}\" == \"${string^^}\" ] && continue\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ character\n    for character in $string; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        (( count++\
    \ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049412
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [[ $char != $char\
    \ ]] && [[ $char != ${char^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^^}\
    \ ]] && [[ $char != ${char^^^^^} ]] && [[ $char != ${char^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^} ]] && [[ $char != ${char^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^} ]]\
    \ && [[ $char != ${char^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^} ]]\
    \ && [[ $char != ${char^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3czvb5z4.sh: line 15: syntax error in conditional expression

    /tmp/tmp3czvb5z4.sh: line 18: syntax error near `candidate(''

    /tmp/tmp3czvb5z4.sh: line 18: `candidate() {''

    '
  stdout: ''
  timestamp: 1660049412
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        [ \"${char}\" == \"${string^^}\" ] && continue\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660049411

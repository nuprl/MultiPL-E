name: HumanEval_14_all_prefixes
language: swift
prompt: "\n/// Return array of all prefixes from shortest to longest of the input\
  \ string\n/// >>> all_prefixes(string: \"abc\")\n/// [\"a\", \"ab\", \"abc\"]\n\
  func all_prefixes(string: String) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(all_prefixes(string: \"\") == [] as [String])\n\
  assert(all_prefixes(string: \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"\
  asdfg\", \"asdfgh\"])\nassert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"\
  WWW\"])"
completions: ["    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n\
    \        prefixes.append(string[0:i])\n    }\n    return prefixes", "    var prefixes:\
    \ [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[:i])\n\
    \    }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n\
    \    return prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes: [String] = []\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[0:i])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes.append(string[0:i])\n    }\n    return prefixes", "    var\
    \ prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n\
    \    return prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes.append(string[0:i])\n    }\n    return prefixes", " \
    \   var prefixes = []String{}\n    for i := 0; i < len(string); i++ {\n      \
    \  prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n \
    \   for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n  \
    \  }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes.append(string[:i])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i])\n    }\n    return prefixes", "    var prefixes [String] = []\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes: [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes: [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n  \
    \  }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes.append(string[0:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[0:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes: [String] = []\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes.append(string[0:i])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ = []String{}\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes",
  "    var prefixes: [String] = []\n    for i := 0; i < len(string); i++ {\n     \
    \   prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes", " \
    \   var prefixes = []String{}\n    for i := 0; i < len(string); i++ {\n      \
    \  prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes", " \
    \   var prefixes [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n \
    \   for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes",
  "    var prefixes: [String] = []\n    for i := 0; i < len(string); i++ {\n     \
    \   prefixes.append(string[0:i])\n    }\n    return prefixes", "    var prefixes:\
    \ [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n   \
    \ }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes.append(string[0:i])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[:i+1])\n\
    \    }\n    return prefixes", "    var prefixes: [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes.append(string[0:i])\n    }\n    return\
    \ prefixes", "    var prefixes [String] = []\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes",
  "    var prefixes [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i])\n    }\n    return prefixes", "    var prefixes\
    \ [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n \
    \   for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n\
    \    }\n    return prefixes", "    var prefixes: [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[0:i])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n \
    \   }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n   \
    \ }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes.append(string[0:i])\n    }\n    return prefixes", " \
    \   var prefixes = []String{}\n    for i := 0; i < len(string); i++ {\n      \
    \  prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[:i+1])\n    }\n    return prefixes", "    var prefixes:\
    \ [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n \
    \   }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n    }\n\
    \    return prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes",
  "    var prefixes [String] = []\n    for i := 0; i < len(string); i++ {\n      \
    \  prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes",
  "    var prefixes [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes [String]\n  \
    \  for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n   \
    \ }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes.append(string[:i+1])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n \
    \   for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n   \
    \ }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes",
  "    var prefixes: [String] = []\n    for i := 0; i < len(string); i++ {\n     \
    \   prefixes.append(string[0:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes [String] = []\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = []String{}\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n   \
    \ }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes [String]\n  \
    \  for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes.append(string[:i+1])\n    }\n    return prefixes", "   \
    \ var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[:i+1])\n\
    \    }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n\
    \    return prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes.append(string[0:i])\n    }\n    return prefixes", " \
    \   var prefixes [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes [String]\n  \
    \  for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[:i+1])\n    }\n    return prefixes", "    var prefixes:\
    \ [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[:i+1])\n    }\n    return prefixes", "    var prefixes [String]\n   \
    \ for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n \
    \   }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes.append(string[0:i])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[:i+1])\n    }\n    return prefixes", "    var prefixes:\
    \ [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n\
    \    return prefixes", "    var prefixes: [String] = []\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes.append(string[:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = []String{}\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n \
    \   }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ = []String{}\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[:i+1])\n    }\n    return prefixes", "    var prefixes = []String{}\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = []String{}\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n \
    \   }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes",
  "    var prefixes [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i])\n    }\n    return prefixes", "    var prefixes:\
    \ [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i])\n    }\n    return prefixes", "    var prefixes: [String] = []\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = []String{}\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes: [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes.append(string[0:i])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes",
  "    var prefixes: [String] = []\n    for i := 0; i < len(string); i++ {\n     \
    \   prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n \
    \   }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ = []String{}\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i])\n    }\n    return prefixes", "    var prefixes = [String]\n  \
    \  for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n\
    \    return prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes.append(string[:i+1])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n \
    \   }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[:i+1])\n\
    \    }\n    return prefixes", "    var prefixes: [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[0:i])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes",
  "    var prefixes: [String] = []\n    for i := 0; i < len(string); i++ {\n     \
    \   prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes", " \
    \   var prefixes [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes",
  "    var prefixes: [String] = []\n    for i := 0; i < len(string); i++ {\n     \
    \   prefixes.append(string[:i])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n \
    \   for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[0:i])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes = []String{}\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n \
    \   }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes",
  "    var prefixes [String] = []\n    for i := 0; i < len(string); i++ {\n      \
    \  prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i])\n    }\n    return prefixes", "    var prefixes = [String]\n  \
    \  for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i])\n    }\n    return\
    \ prefixes", "    var prefixes [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes",
  "    var prefixes: [String] = []\n    for i := 0; i < len(string); i++ {\n     \
    \   prefixes = append(prefixes, string[:i+1])\n    }\n    return prefixes", " \
    \   var prefixes [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return prefixes",
  "    var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[:i])\n\
    \    }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i <\
    \ len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n    }\n\
    \    return prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes.append(string[0:i])\n    }\n    return prefixes", " \
    \   var prefixes: [String] = []\n    for i := 0; i < len(string); i++ {\n    \
    \    prefixes.append(string[0:i])\n    }\n    return prefixes", "    var prefixes\
    \ = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes [String]\n  \
    \  for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n   \
    \ }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes = []String{}\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes: [String] = []\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes.append(string[:i+1])\n    }\n    return prefixes", " \
    \   var prefixes = [String]\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i+1])\n    }\n    return prefixes", "    var prefixes:\
    \ [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes.append(string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes.append(string[:i+1])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]\n    for i := 0; i < len(string); i++\
    \ {\n        prefixes.append(string[0:i])\n    }\n    return prefixes", "    var\
    \ prefixes: [String] = []\n    for i := 0; i < len(string); i++ {\n        prefixes\
    \ = append(prefixes, string[0:i+1])\n    }\n    return prefixes", "    var prefixes\
    \ [String]\n    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes,\
    \ string[0:i+1])\n    }\n    return prefixes", "    var prefixes = [String]\n\
    \    for i := 0; i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i])\n\
    \    }\n    return prefixes", "    var prefixes [String] = []\n    for i := 0;\
    \ i < len(string); i++ {\n        prefixes = append(prefixes, string[0:i+1])\n\
    \    }\n    return prefixes", "    var prefixes = [String]\n    for i := 0; i\
    \ < len(string); i++ {\n        prefixes = append(prefixes, string[:i+1])\n  \
    \  }\n    return prefixes", "    var prefixes [String]\n    for i := 0; i < len(string);\
    \ i++ {\n        prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes",
  "    var prefixes [String] = []\n    for i := 0; i < len(string); i++ {\n      \
    \  prefixes = append(prefixes, string[0:i])\n    }\n    return prefixes"]
stop_tokens:
- "\n}"

name: HumanEval_158_find_max
language: swift
prompt: "\n/// Write a function that accepts an array of strings.\n/// The array contains\
  \ different words. Return the word with maximum number\n/// of unique characters.\
  \ If multiple strings have maximum number of unique\n/// characters, return the\
  \ one which comes first in lexicographical order.\n/// >>> find_max(words: [\"name\"\
  , \"of\", \"string\"])\n/// \"string\"\n/// >>> find_max(words: [\"name\", \"enam\"\
  , \"game\"])\n/// \"enam\"\n/// >>> find_max(words: [\"aaaaaaa\", \"bb\", \"cc\"\
  ])\n/// \"aaaaaaa\"\nfunc find_max(words: [String]) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(find_max(words: [\"name\", \"of\", \"string\"\
  ]) == \"string\")\nassert(find_max(words: [\"name\", \"enam\", \"game\"]) == \"\
  enam\")\nassert(find_max(words: [\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\")\n\
  assert(find_max(words: [\"abc\", \"cba\"]) == \"abc\")\nassert(find_max(words: [\"\
  play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\nassert(find_max(words:\
  \ [\"we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\nassert(find_max(words:\
  \ [\"we\", \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\nassert(find_max(words:\
  \ [\"this\", \"is\", \"a\", \"prrk\"]) == \"this\")\nassert(find_max(words: [\"\
  b\"]) == \"b\")\nassert(find_max(words: [\"play\", \"play\", \"play\"]) == \"play\"\
  )"
completions: ["    // Write your code here\n    return max(words, (a, b) => a.length\
    \ - b.length)", "    // Write your code here\n    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if _, ok := used[c]; !ok {\n                count++\n\
    \            }\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    var max_count int\n    var max_word String\n    for _, word := range words\
    \ {\n        count := 0\n        for _, c := range word {\n            if c ==\
    \ ' ' {\n                continue\n            }\n            count += 1\n   \
    \     }\n        if count > max_count {\n            max_count = count\n     \
    \       max_word = word\n        }\n    }\n    return max_word", "    var max_count\
    \ int\n    var max_word String\n    for _, word := range words {\n        count\
    \ := make(map[rune]int)\n        for _, r := range word {\n            count[r]++\n\
    \        }\n        if len(count) > max_count {\n            max_count = len(count)\n\
    \            max_word = word\n        }\n    }\n    return max_word", "    //\
    \ Write your code here\n    return words[0]", "    // Write your code here\n \
    \   return words[0]", "    var max_count int\n    var max_word String\n    for\
    \ _, word := range words {\n        count := make(map[rune]int)\n        for _,\
    \ r := range word {\n            count[r]++\n        }\n        if len(count)\
    \ > max_count {\n            max_count = len(count)\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := make(map[rune]int)\n\
    \        for _, r := range word {\n            count[r]++\n        }\n       \
    \ if len(count) > max_count {\n            max_count = len(count)\n          \
    \  max_word = word\n        }\n    }\n    return max_word", "    // Write your\
    \ code here\n    return words[0]", "    var max_count = 0\n    var max_word =\
    \ \"\"\n    for i := 0; i < len(words); i++ {\n        var count = 0\n       \
    \ for j := 0; j < len(words[i]); j++ {\n            if words[i][j] == words[i][j+1]\
    \ {\n                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = words[i]\n        }\n\
    \    }\n    return max_word", "    // Write your code here\n    var max_count\
    \ = 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if c == word[0] {\n    \
    \            count += 1\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    var max_count = 0\n    var max_word = \"\"\n\
    \    for _, word := range words {\n        count := 0\n        for _, c := range\
    \ word {\n            if c == word[count] {\n                count += 1\n    \
    \        } else {\n                count = 1\n            }\n        }\n     \
    \   if count > max_count {\n            max_count = count\n            max_word\
    \ = word\n        }\n    }\n    return max_word", "    var max_count int\n   \
    \ var max_word String\n    for _, word := range words {\n        count := len(word)\n\
    \        if count > max_count {\n            max_count = count\n            max_word\
    \ = word\n        }\n    }\n    return max_word", "    // Write your code here\n\
    \    return words[0]", "    var max_count int\n    var max_word String\n    for\
    \ _, word := range words {\n        count := make(map[rune]int)\n        for _,\
    \ r := range word {\n            count[r]++\n        }\n        if len(count)\
    \ > max_count {\n            max_count = len(count)\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    var max_count = 0\n    var max_word\
    \ = \"\"\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if _, ok := unique[c]; ok {\n               \
    \ count += 1\n            }\n        }\n        if count > max_count {\n     \
    \       max_count = count\n            max_word = word\n        }\n    }\n   \
    \ return max_word", "    // Write your code here\n    return words[0]", "    var\
    \ max_count = 0\n    var max_word = \"\"\n    for _, word := range words {\n \
    \       count := 0\n        for i := 0; i < len(word); i++ {\n            if word[i]\
    \ == word[i+1] {\n                count += 1\n            }\n        }\n     \
    \   if count > max_count {\n            max_count = count\n            max_word\
    \ = word\n        }\n    }\n    return max_word", "    var max_count = 0\n   \
    \ var max_word = \"\"\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if c == ' ' {\n               \
    \ continue\n            }\n            count += 1\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    // Write your code here\n    var\
    \ max_count = 0\n    var max_word = \"\"\n    for i := 0; i < len(words); i++\
    \ {\n        var count = 0\n        for j := 0; j < len(words[i]); j++ {\n   \
    \         if words[i][j] != words[i][j+1] {\n                count++\n       \
    \     }\n        }\n        if count > max_count {\n            max_count = count\n\
    \            max_word = words[i]\n        }\n    }\n    return max_word", "  \
    \  var max_count = 0\n    var max_word = \"\"\n    for _, word := range words\
    \ {\n        count := 0\n        for _, ch := range word {\n            if _,\
    \ ok := unique[ch]; ok {\n                count += 1\n            }\n        }\n\
    \        if count > max_count {\n            max_count = count\n            max_word\
    \ = word\n        }\n    }\n    return max_word", '    ', "    // Write your code\
    \ here\n    var max_count = 0\n    var max_word = \"\"\n    for _, word := range\
    \ words {\n        count := 0\n        for _, c := range word {\n            if\
    \ _, ok := visited[c]; !ok {\n                count++\n            }\n       \
    \ }\n        if count > max_count {\n            max_count = count\n         \
    \   max_word = word\n        }\n    }\n    return max_word", "    // Write your\
    \ code here\n    return max(words, (a, b) => a.length - b.length)", "    var max_count\
    \ int\n    var max_word String\n    for _, word := range words {\n        count\
    \ := len(word)\n        if count > max_count {\n            max_count = count\n\
    \            max_word = word\n        }\n    }\n    return max_word", "    //\
    \ write your code here\n    return max(words, (a, b) => a.length - b.length)",
  "    // write your code here\n    return max_string(words)", "    // Write your\
    \ code here\n    return words[0]", "    var max_count = 0\n    var max_word =\
    \ \"\"\n    for _, word := range words {\n        count := 0\n        for _, c\
    \ := range word {\n            if _, ok := word_count[c]; !ok {\n            \
    \    word_count[c] = 1\n            } else {\n                word_count[c] +=\
    \ 1\n                count += 1\n            }\n        }\n        if count >\
    \ max_count {\n            max_count = count\n            max_word = word\n  \
    \      }\n    }\n    return max_word", "    // Write your code here\n    var max_count\
    \ = 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for i := 0; i < len(word); i++ {\n            if word[i] == word[i+1]\
    \ {\n                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    var max_count = 0\n    var max_word = \"\"\n\
    \    for _, word := range words {\n        count := 0\n        for _, c := range\
    \ word {\n            if _, ok := seen[c]; !ok {\n                count += 1\n\
    \            }\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    var max_count = 0\n    var max_word = \"\"\n    for _, word := range words\
    \ {\n        count := 0\n        for _, ch := range word {\n            if _,\
    \ ok := word_count[ch]; ok {\n                count += 1\n            } else {\n\
    \                word_count[ch] = 1\n            }\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    // Write your code here\n    return\
    \ words[0]", "    var max_count int\n    var max_word String\n    for _, word\
    \ := range words {\n        count := len(word)\n        if count > max_count {\n\
    \            max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    var max_count = 0\n    var max_word = \"\"\n    for\
    \ _, word := range words {\n        count := 0\n        for _, c := range word\
    \ {\n            if c == ' ' {\n                count++\n            }\n     \
    \   }\n        if count > max_count {\n            max_count = count\n       \
    \     max_word = word\n        }\n    }\n    return max_word", "    // Write your\
    \ code here\n    return words[0]", "    // write your code here\n    return words[0]",
  "    // Write your code here\n    return words[0]", "    // Write your code here\n\
    \    return max_string(words)", "    // Write your code here\n    return words[0]",
  "    // Write your code here\n    var max_count = 0\n    var max_word = \"\"\n \
    \   for i := 0; i < len(words); i++ {\n        var count = 0\n        for j :=\
    \ 0; j < len(words[i]); j++ {\n            if words[i][j] != words[i][j+1] {\n\
    \                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = words[i]\n        }\n\
    \    }\n    return max_word", "    // Write your code here\n    var max_count\
    \ = 0\n    var max_word = \"\"\n    for i := 0; i < len(words); i++ {\n      \
    \  var count = 0\n        for j := 0; j < len(words[i]); j++ {\n            if\
    \ words[i][j] != words[i][j + 1] {\n                count++\n            }\n \
    \       }\n        if count > max_count {\n            max_count = count\n   \
    \         max_word = words[i]\n        }\n    }\n    return max_word", "    //\
    \ Write your code here\n    max_count = 0\n    max_word = \"\"\n    for i := 0;\
    \ i < len(words); i++ {\n        count = 0\n        for j := 0; j < len(words[i]);\
    \ j++ {\n            if words[i][j] != words[i][j + 1] {\n                count\
    \ += 1\n            }\n        }\n        if count > max_count {\n           \
    \ max_count = count\n            max_word = words[i]\n        }\n    }\n    return\
    \ max_word", "    // Write your code here\n    var max_count = 0\n    var max_word\
    \ = \"\"\n    for i := 0; i < len(words); i++ {\n        var count = 0\n     \
    \   for j := 0; j < len(words[i]); j++ {\n            if words[i][j] != words[i][j+1]\
    \ {\n                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = words[i]\n        }\n\
    \    }\n    return max_word", "    var max_count = 0\n    var max_word = \"\"\n\
    \    for _, word := range words {\n        count := 0\n        for _, c := range\
    \ word {\n            if c == word[0] {\n                count += 1\n        \
    \    }\n        }\n        if count > max_count {\n            max_count = count\n\
    \            max_word = word\n        }\n    }\n    return max_word", "    var\
    \ max_count int\n    var max_word String\n    for _, word := range words {\n \
    \       count := 0\n        for _, c := range word {\n            if c == ' '\
    \ {\n                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    // Write your code here\n    var max_count =\
    \ 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for i := 0; i < len(word); i++ {\n            if word[i] != word[i\
    \ + 1] {\n                count++\n            }\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if c == ' ' {\n                continue\n   \
    \         }\n            count += 1\n        }\n        if count > max_count {\n\
    \            max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    var max_count = 0\n \
    \   var max_word = \"\"\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if _, ok := word_count[c]; !ok\
    \ {\n                word_count[c] = 0\n            }\n            word_count[c]\
    \ += 1\n            count += 1\n        }\n        if count > max_count {\n  \
    \          max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    var max_count = 0\n    var max_word = \"\"\n    for\
    \ _, word := range words {\n        count := 0\n        for _, c := range word\
    \ {\n            if c == ' ' {\n                count++\n            }\n     \
    \   }\n        if count > max_count {\n            max_count = count\n       \
    \     max_word = word\n        }\n    }\n    return max_word", "    // Write your\
    \ code here\n    var max_count = 0\n    var max_word = \"\"\n    for _, word :=\
    \ range words {\n        count := 0\n        for _, c := range word {\n      \
    \      if _, ok := word_count[c]; !ok {\n                word_count[c] = 0\n \
    \           }\n            word_count[c] += 1\n            count += 1\n      \
    \  }\n        if count > max_count {\n            max_count = count\n        \
    \    max_word = word\n        }\n    }\n    return max_word", "    var max_count\
    \ int\n    var max_word String\n    for _, word := range words {\n        count\
    \ := 0\n        for i := 0; i < len(word); i++ {\n            if word[i] == word[i\
    \ + 1] {\n                count++\n            }\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    // Write your code here\n    return\
    \ max_string(words)", "    var max_count = 0\n    var max_word = \"\"\n    for\
    \ _, word := range words {\n        count := 0\n        for _, c := range word\
    \ {\n            if c == ' ' {\n                continue\n            }\n    \
    \        count += 1\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    // Write your code here\n    var max_count = 0\n    var max_word = \"\"\n \
    \   for _, word := range words {\n        count := 0\n        for i := 0; i <\
    \ len(word); i++ {\n            if word[i] == word[i+1] {\n                count\
    \ += 1\n            }\n        }\n        if count > max_count {\n           \
    \ max_count = count\n            max_word = word\n        }\n    }\n    return\
    \ max_word", "    var max_count int\n    var max_word String\n    for _, word\
    \ := range words {\n        count := make(map[rune]int)\n        for _, r := range\
    \ word {\n            count[r]++\n        }\n        if len(count) > max_count\
    \ {\n            max_count = len(count)\n            max_word = word\n       \
    \ }\n    }\n    return max_word", "    // Write your code here\n    return words[0]",
  "    // Write your code here\n    var max_count = 0\n    var max_word = \"\"\n \
    \   for i := 0; i < len(words); i++ {\n        var count = 0\n        for j :=\
    \ 0; j < len(words[i]); j++ {\n            if words[i][j] != words[i][j + 1] {\n\
    \                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = words[i]\n        }\n\
    \    }\n    return max_word", "    // Write your code here\n    return max(words,\
    \ (a, b) => a.length - b.length)", '    ', "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for i\
    \ := 0; i < len(word); i++ {\n            if word[i] != word[i + 1] {\n      \
    \          count += 1\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    // Write your code here\n    max_count = 0\n\
    \    max_word = \"\"\n    for i in range(len(words)) {\n        if len(words[i])\
    \ > max_count {\n            max_count = len(words[i])\n            max_word =\
    \ words[i]\n        }\n    }\n    return max_word", "    var max_count int\n \
    \   var max_word String\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if c == word[count] {\n       \
    \         count += 1\n            } else {\n                count = 0\n      \
    \      }\n        }\n        if count > max_count {\n            max_count = count\n\
    \            max_word = word\n        }\n    }\n    return max_word", "    //\
    \ Write your code here\n    var max_count = 0\n    var max_word = \"\"\n    for\
    \ _, word := range words {\n        count := 0\n        for _, c := range word\
    \ {\n            if c == word[0] {\n                count++\n            }\n \
    \       }\n        if count > max_count {\n            max_count = count\n   \
    \         max_word = word\n        }\n    }\n    return max_word", "    // Write\
    \ your code here\n    return max_char_count(words)", "    // Write your code here\n\
    \    var max_count = 0\n    var max_word = \"\"\n    for i := 0; i < len(words);\
    \ i++ {\n        var count = 0\n        for j := 0; j < len(words[i]); j++ {\n\
    \            if words[i][j] == words[i][j+1] {\n                count++\n    \
    \        }\n        }\n        if count > max_count {\n            max_count =\
    \ count\n            max_word = words[i]\n        }\n    }\n    return max_word",
  "    // Write your code here\n    return words[0]", "    // Write your code here\n\
    \    return max(words, (a, b) => a.length - b.length)", "    var max_count = 0\n\
    \    var max_word = \"\"\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if c == ' ' {\n               \
    \ count += 1\n            }\n        }\n        if count > max_count {\n     \
    \       max_count = count\n            max_word = word\n        }\n    }\n   \
    \ return max_word", "    var max_count int\n    var max_word String\n    for _,\
    \ word := range words {\n        count := 0\n        for _, ch := range word {\n\
    \            if _, ok := unique[ch]; ok {\n                count += 1\n      \
    \      }\n        }\n        if count > max_count {\n            max_count = count\n\
    \            max_word = word\n        }\n    }\n    return max_word", "    //\
    \ write your code here\n    return words[0]", "    var max_count int\n    var\
    \ max_word String\n    for _, word := range words {\n        count := 0\n    \
    \    for _, c := range word {\n            if c == word[count] {\n           \
    \     count += 1\n            } else {\n                count = 1\n          \
    \  }\n        }\n        if count > max_count {\n            max_count = count\n\
    \            max_word = word\n        }\n    }\n    return max_word", "    //\
    \ Write your code here\n    return words[0]", '    ', "    var max_count int\n\
    \    var max_word String\n    for _, word := range words {\n        count := make(map[rune]int)\n\
    \        for _, r := range word {\n            count[r]++\n        }\n       \
    \ if len(count) > max_count {\n            max_count = len(count)\n          \
    \  max_word = word\n        }\n    }\n    return max_word", "    // Write your\
    \ code here\n    return max(words, (a, b) => a.length - b.length)", "    var max_count\
    \ = 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if c == word[0] {\n    \
    \            count += 1\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    var max_count = 0\n    var max_word = \"\"\n\
    \    for _, word := range words {\n        count := 0\n        for _, ch := range\
    \ word {\n            if _, ok := unique[ch]; ok {\n                count++\n\
    \            }\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    var max_count = 0\n    var max_word = \"\"\n    for _, word := range words\
    \ {\n        count := 0\n        for _, c := range word {\n            if c ==\
    \ word[count] {\n                count += 1\n            } else {\n          \
    \      count = 0\n            }\n        }\n        if count > max_count {\n \
    \           max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    return words[0]", " \
    \   var max_count = 0\n    var max_word = \"\"\n    for _, word := range words\
    \ {\n        count := 0\n        for _, c := range word {\n            if _, ok\
    \ := seen[c]; !ok {\n                count += 1\n            }\n        }\n  \
    \      if count > max_count {\n            max_count = count\n            max_word\
    \ = word\n        }\n    }\n    return max_word", "    var max_count int\n   \
    \ var max_word String\n    for _, word := range words {\n        count := 0\n\
    \        for _, ch := range word {\n            if _, ok := count_map[ch]; ok\
    \ {\n                count += 1\n            } else {\n                count_map[ch]\
    \ = 1\n            }\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    var max_count = 0\n    var max_word = \"\"\n    for _, word := range words\
    \ {\n        count := 0\n        for _, c := range word {\n            if c ==\
    \ ' ' {\n                continue\n            }\n            count += 1\n   \
    \     }\n        if count > max_count {\n            max_count = count\n     \
    \       max_word = word\n        }\n    }\n    return max_word", "    // Write\
    \ your code here\n    return max(words, (a, b) => a.length - b.length)", "   \
    \ var max_count int\n    var max_word String\n    for _, word := range words {\n\
    \        count := 0\n        for _, c := range word {\n            if c == word[count]\
    \ {\n                count += 1\n            } else {\n                count =\
    \ 1\n            }\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    // Write your code here\n    return words[0]", "    var max_count = 0\n   \
    \ var max_word = \"\"\n    for i := 0; i < len(words); i++ {\n        var count\
    \ = 0\n        for j := 0; j < len(words[i]); j++ {\n            if words[i][j]\
    \ == words[i][j+1] {\n                count++\n            }\n        }\n    \
    \    if count > max_count {\n            max_count = count\n            max_word\
    \ = words[i]\n        }\n    }\n    return max_word", "    var max_count = 0\n\
    \    var max_word = \"\"\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if c == word[count] {\n       \
    \         count += 1\n            } else {\n                count = 0\n      \
    \      }\n        }\n        if count > max_count {\n            max_count = count\n\
    \            max_word = word\n        }\n    }\n    return max_word", '    ',
  "    // Write your code here\n    max_count = 0\n    max_word = \"\"\n    for i\
    \ := 0; i < len(words); i++ {\n        if len(words[i]) > max_count {\n      \
    \      max_count = len(words[i])\n            max_word = words[i]\n        }\n\
    \    }\n    return max_word", "    // Write your code here\n    return words[0]",
  "    // Write your code here\n    var max_count = 0\n    var max_word = \"\"\n \
    \   for _, word := range words {\n        count := 0\n        for _, c := range\
    \ word {\n            if _, ok := word_count[c]; !ok {\n                word_count[c]\
    \ = 1\n            } else {\n                word_count[c] += 1\n            }\n\
    \            count += word_count[c]\n        }\n        if count > max_count {\n\
    \            max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    var max_count = 0\n \
    \   var max_word = \"\"\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if _, ok := visited[c]; !ok {\n\
    \                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    // Write your code here\n    return max(words,\
    \ (a, b) => a.length - b.length)", "    // Write your code here\n    var max_count\
    \ = 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for _, ch := range word {\n            if _, ok := word_count[ch];\
    \ ok {\n                count += 1\n            } else {\n                word_count[ch]\
    \ = 1\n            }\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    // Write your code here\n    var max_count = 0\n    var max_word = \"\"\n \
    \   for i := 0; i < len(words); i++ {\n        var count = 0\n        for j :=\
    \ 0; j < len(words[i]); j++ {\n            if words[i][j] != words[i][j+1] {\n\
    \                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = words[i]\n        }\n\
    \    }\n    return max_word", "    var max_count = 0\n    var max_word = \"\"\n\
    \    for _, word := range words {\n        count := 0\n        for _, ch := range\
    \ word {\n            if _, ok := unique[ch]; ok {\n                count += 1\n\
    \            }\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    // Write your code here\n    var max_count = 0\n    var max_word = \"\"\n \
    \   for i := 0; i < len(words); i++ {\n        var count = 0\n        for j :=\
    \ 0; j < len(words[i]); j++ {\n            if words[i][j] != words[i][j + 1] {\n\
    \                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = words[i]\n        }\n\
    \    }\n    return max_word", "    var max_count = 0\n    var max_word = \"\"\n\
    \    for _, word := range words {\n        count := 0\n        for i := 0; i <\
    \ len(word); i++ {\n            if word[i] == word[i+1] {\n                count\
    \ += 1\n            }\n        }\n        if count > max_count {\n           \
    \ max_count = count\n            max_word = word\n        }\n    }\n    return\
    \ max_word", "    var max_count = 0\n    var max_word = \"\"\n    for i := 0;\
    \ i < len(words); i++ {\n        count := 0\n        for j := 0; j < len(words[i]);\
    \ j++ {\n            if words[i][j] == words[i][j + 1] {\n                count\
    \ += 1\n            }\n        }\n        if count > max_count {\n           \
    \ max_count = count\n            max_word = words[i]\n        }\n    }\n    return\
    \ max_word", "    // Write your code here\n    var max_count = 0\n    var max_word\
    \ = \"\"\n    for i := 0; i < len(words); i++ {\n        var count = 0\n     \
    \   for j := 0; j < len(words[i]); j++ {\n            if words[i][j] == words[i][j\
    \ + 1] {\n                count++\n            }\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = words[i]\n\
    \        }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if c == ' ' {\n                count = 0\n  \
    \          } else {\n                count += 1\n            }\n        }\n  \
    \      if count > max_count {\n            max_count = count\n            max_word\
    \ = word\n        }\n    }\n    return max_word", "    // Write your code here\n\
    \    var max_count = 0\n    var max_word = \"\"\n    for _, word := range words\
    \ {\n        count := 0\n        for _, c := range word {\n            if c ==\
    \ word[count] {\n                count += 1\n            } else {\n          \
    \      count = 0\n            }\n        }\n        if count > max_count {\n \
    \           max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    return max(words, (a,\
    \ b) => a.length - b.length)", "    var max_count int\n    var max_word String\n\
    \    for _, word := range words {\n        count := 0\n        for _, ch := range\
    \ word {\n            count += strings.Count(word, string(ch))\n        }\n  \
    \      if count > max_count {\n            max_count = count\n            max_word\
    \ = word\n        }\n    }\n    return max_word", "    var max_count = 0\n   \
    \ var max_word = \"\"\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if c == ' ' {\n               \
    \ continue\n            }\n            count += 1\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    var max_count = 0\n    var max_word\
    \ = \"\"\n    for i := 0; i < len(words); i++ {\n        count := 0\n        for\
    \ j := 0; j < len(words[i]); j++ {\n            if words[i][j] == words[i][j+1]\
    \ {\n                count += 1\n            }\n        }\n        if count >\
    \ max_count {\n            max_count = count\n            max_word = words[i]\n\
    \        }\n    }\n    return max_word", "    var max_count = 0\n    var max_word\
    \ = \"\"\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if c == word[count] {\n                count\
    \ += 1\n            } else {\n                count = 0\n            }\n     \
    \   }\n        if count > max_count {\n            max_count = count\n       \
    \     max_word = word\n        }\n    }\n    return max_word", "    // Write your\
    \ code here\n    return words[0]", "    var max_count = 0\n    var max_word =\
    \ \"\"\n    for _, word := range words {\n        count := 0\n        for _, c\
    \ := range word {\n            if _, ok := unique[c]; ok {\n                count\
    \ += 1\n            }\n        }\n        if count > max_count {\n           \
    \ max_count = count\n            max_word = word\n        }\n    }\n    return\
    \ max_word", "    // Write your code here\n    var max_count = 0\n    var max_word\
    \ = \"\"\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if _, ok := visited[c]; !ok {\n             \
    \   count++\n            }\n        }\n        if count > max_count {\n      \
    \      max_count = count\n            max_word = word\n        }\n    }\n    return\
    \ max_word", "    // Write your code here\n    return max(words, (a, b) => a.length\
    \ - b.length)", "    // Write your code here\n    var max_count = 0\n    var max_word\
    \ = \"\"\n    for _, word := range words {\n        count := 0\n        for i\
    \ := 0; i < len(word); i++ {\n            if word[i] == word[i+1] {\n        \
    \        count += 1\n            }\n        }\n        if count > max_count {\n\
    \            max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    var max_count int\n    var max_word String\n    for\
    \ _, word := range words {\n        count := 0\n        for _, c := range word\
    \ {\n            if c == ' ' {\n                continue\n            }\n    \
    \        count += 1\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  '    ', "    // write your code here\n    return max(words, (a, b) => a.length -\
    \ b.length)", "    var max_count int\n    var max_word String\n    for _, word\
    \ := range words {\n        count := 0\n        for _, c := range word {\n   \
    \         if _, ok := count_map[c]; !ok {\n                count_map[c] = 0\n\
    \            }\n            count_map[c] += 1\n            count += 1\n      \
    \  }\n        if count > max_count {\n            max_count = count\n        \
    \    max_word = word\n        }\n    }\n    return max_word", "    // Write your\
    \ code here\n    return max(words, (a, b) => a.length - b.length)", "    var max_count\
    \ int\n    var max_word String\n    for _, word := range words {\n        count\
    \ := 0\n        for i := 0; i < len(word); i++ {\n            if word[i] != word[i+1]\
    \ {\n                count += 1\n            }\n        }\n        if count >\
    \ max_count {\n            max_count = count\n            max_word = word\n  \
    \      }\n    }\n    return max_word", "    // Write your code here\n    var max_count\
    \ = 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if c == word[0] {\n    \
    \            count += 1\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    // write your code here\n    return words[0]",
  "    var max_count int\n    var max_word String\n    for _, word := range words\
    \ {\n        count := 0\n        for _, c := range word {\n            if _, ok\
    \ := count_map[c]; !ok {\n                count_map[c] = 1\n            } else\
    \ {\n                count_map[c] += 1\n            }\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    // Write your code here\n    return\
    \ max_string(words)", "    var max_count int\n    var max_word String\n    for\
    \ _, word := range words {\n        count := len(word)\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    // write your code here\n    var max_count =\
    \ 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if _, ok := unique[c]; !ok\
    \ {\n                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    // write your code here\n    return words[0]",
  "    var max_count int\n    var max_word String\n    for _, word := range words\
    \ {\n        count := 0\n        for _, c := range word {\n            if c ==\
    \ ' ' {\n                continue\n            }\n            count += 1\n   \
    \     }\n        if count > max_count {\n            max_count = count\n     \
    \       max_word = word\n        }\n    }\n    return max_word", "    var max_count\
    \ int\n    var max_word String\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if c == ' ' {\n        \
    \        count++\n            }\n        }\n        if count > max_count {\n \
    \           max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    var max_count int\n    var max_word String\n    for\
    \ _, word := range words {\n        count := 0\n        for _, c := range word\
    \ {\n            if c == ' ' {\n                continue\n            }\n    \
    \        count += 1\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    // Write your code here\n    return words[0]", "    var max_count int\n   \
    \ var max_word String\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if c == ' ' {\n               \
    \ continue\n            }\n            count += 1\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    // Write your code here\n    var\
    \ max_count = 0\n    var max_word = \"\"\n    for _, word := range words {\n \
    \       count := 0\n        for _, c := range word {\n            if _, ok :=\
    \ visited[c]; !ok {\n                count++\n            }\n        }\n     \
    \   if count > max_count {\n            max_count = count\n            max_word\
    \ = word\n        }\n    }\n    return max_word", "    // Write your code here\n\
    \    var max_count = 0\n    var max_word = \"\"\n    for i := 0; i < len(words);\
    \ i++ {\n        var count = 0\n        for j := 0; j < len(words[i]); j++ {\n\
    \            if words[i][j] == words[i][j+1] {\n                count++\n    \
    \        }\n        }\n        if count > max_count {\n            max_count =\
    \ count\n            max_word = words[i]\n        }\n    }\n    return max_word",
  "    // Write your code here\n    max_count = 0\n    max_word = \"\"\n    for i\
    \ in range(len(words)) {\n        if len(words[i]) > len(max_word) {\n       \
    \     max_count = 0\n            max_word = words[i]\n        }\n        if len(words[i])\
    \ == len(max_word) {\n            if max_count < len(words[i]) {\n           \
    \     max_count = len(words[i])\n            }\n        }\n    }\n    return max_word",
  "    var max_count = 0\n    var max_word = \"\"\n    for _, word := range words\
    \ {\n        count := 0\n        for _, c := range word {\n            if c ==\
    \ ' ' {\n                count += 1\n            }\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if c == ' ' {\n                continue\n   \
    \         }\n            count += 1\n        }\n        if count > max_count {\n\
    \            max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    max_count = 0\n    max_word\
    \ = \"\"\n    for i := 0; i < len(words); i++ {\n        count = 0\n        for\
    \ j := 0; j < len(words[i]); j++ {\n            if words[i][j] != words[i][j+1]\
    \ {\n                count += 1\n            }\n        }\n        if count >\
    \ max_count {\n            max_count = count\n            max_word = words[i]\n\
    \        }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if _, ok := seen[c]; !ok {\n                seen[c]\
    \ = true\n                count++\n            }\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    // Write your code here\n    var\
    \ max_count = 0\n    var max_word = \"\"\n    for _, word := range words {\n \
    \       count := 0\n        for _, c := range word {\n            if _, ok :=\
    \ word_count[c]; !ok {\n                word_count[c] = 0\n            }\n   \
    \         word_count[c]++\n            count++\n        }\n        if count >\
    \ max_count {\n            max_count = count\n            max_word = word\n  \
    \      }\n    }\n    return max_word", "    // Write your code here\n    return\
    \ words[0]", "    // Write your code here\n    return words[0]", "    var max_count\
    \ int\n    var max_word String\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if c == ' ' {\n        \
    \        continue\n            }\n            count += 1\n        }\n        if\
    \ count > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ ch := range word {\n            count += strings.Count(word, string(ch))\n \
    \       }\n        if count > max_count {\n            max_count = count\n   \
    \         max_word = word\n        }\n    }\n    return max_word", "    var max_count\
    \ int\n    var max_word String\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if _, ok := word_count[c];\
    \ !ok {\n                word_count[c] = 0\n            }\n            word_count[c]\
    \ += 1\n            count += 1\n        }\n        if count > max_count {\n  \
    \          max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    return max(words, (a,\
    \ b) => a.length - b.length)", '    ', "    // write your code here\n    return\
    \ max(words, (a, b) => a.length - b.length)", "    // Write your code here\n \
    \   return words[0]", "    // Write your code here\n    return words[0]", "  \
    \  var max_count int\n    var max_word String\n    for _, word := range words\
    \ {\n        count := 0\n        for i := 0; i < len(word); i++ {\n          \
    \  if word[i] != word[i + 1] {\n                count++\n            }\n     \
    \   }\n        if count > max_count {\n            max_count = count\n       \
    \     max_word = word\n        }\n    }\n    return max_word", "    var max_count\
    \ = 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for _, ch := range word {\n            count += strings.Count(word,\
    \ string(ch))\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = word\n        }\n    }\n    return max_word",
  "    // Write your code here\n    return max(words, (a, b) => a.length - b.length)",
  "    // Write your code here\n    var max_count = 0\n    var max_word = \"\"\n \
    \   for _, word := range words {\n        count := 0\n        for _, c := range\
    \ word {\n            if c == ' ' {\n                continue\n            }\n\
    \            count += 1\n        }\n        if count > max_count {\n         \
    \   max_count = count\n            max_word = word\n        }\n    }\n    return\
    \ max_word", "    var max_count int\n    var max_word String\n    for _, word\
    \ := range words {\n        count := 0\n        for _, c := range word {\n   \
    \         if _, ok := count_map[c]; !ok {\n                count_map[c] = 1\n\
    \            } else {\n                count_map[c] += 1\n            }\n    \
    \    }\n        if count > max_count {\n            max_count = count\n      \
    \      max_word = word\n        }\n    }\n    return max_word", '    ', "    var\
    \ max_count = 0\n    var max_word = \"\"\n    for _, word := range words {\n \
    \       count := 0\n        for _, c := range word {\n            if c == word[0]\
    \ {\n                count += 1\n            }\n        }\n        if count >\
    \ max_count {\n            max_count = count\n            max_word = word\n  \
    \      }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if c == ' ' {\n                continue\n   \
    \         }\n            count += 1\n        }\n        if count > max_count {\n\
    \            max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    return words[0]", " \
    \   // Write your code here\n    var max_count int\n    var max_word String\n\
    \    for i := 0; i < len(words); i++ {\n        count := 0\n        for j := 0;\
    \ j < len(words[i]); j++ {\n            if words[i][j] == words[i][j+1] {\n  \
    \              count += 1\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = words[i]\n        }\n\
    \    }\n    return max_word", "    // Write your code here\n    return words[0]",
  "    var max_count int\n    var max_word String\n    for _, word := range words\
    \ {\n        count := 0\n        for i := 0; i < len(word); i++ {\n          \
    \  if word[i] == word[i+1] {\n                count++\n            }\n       \
    \ }\n        if count > max_count {\n            max_count = count\n         \
    \   max_word = word\n        }\n    }\n    return max_word", "    // Write your\
    \ code here\n    return max(words, (a, b) => a.length - b.length)", "    // Write\
    \ your code here\n    return words[0]", "    var max_count = 0\n    var max_word\
    \ = \"\"\n    for _, word := range words {\n        count := 0\n        for i\
    \ := 0; i < len(word); i++ {\n            if word[i] == word[i + 1] {\n      \
    \          count++\n            }\n        }\n        if count > max_count {\n\
    \            max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    var max_count = 0\n    var max_word = \"\"\n    for\
    \ _, word := range words {\n        count := 0\n        for _, ch := range word\
    \ {\n            if _, ok := word_count[ch]; ok {\n                count += 1\n\
    \            } else {\n                word_count[ch] = 1\n            }\n   \
    \     }\n        if count > max_count {\n            max_count = count\n     \
    \       max_word = word\n        }\n    }\n    return max_word", "    var max_count\
    \ = 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if c == ' ' {\n        \
    \        continue\n            }\n            count += 1\n        }\n        if\
    \ count > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if c == ' ' {\n                count = 0\n  \
    \          } else {\n                count += 1\n            }\n        }\n  \
    \      if count > max_count {\n            max_count = count\n            max_word\
    \ = word\n        }\n    }\n    return max_word", "    // Write your code here\n\
    \    var max_count = 0\n    var max_word = \"\"\n    for i := 0; i < len(words);\
    \ i++ {\n        var count = 0\n        for j := 0; j < len(words[i]); j++ {\n\
    \            if words[i][j] != words[i][j + 1] {\n                count += 1\n\
    \            }\n        }\n        if count > max_count {\n            max_count\
    \ = count\n            max_word = words[i]\n        }\n    }\n    return max_word",
  "    // Write your code here\n    return words[0]", "    var max_count = 0\n   \
    \ var max_word = \"\"\n    for _, word := range words {\n        count := 0\n\
    \        for _, ch := range word {\n            if _, ok := unique[ch]; ok {\n\
    \                count += 1\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    var max_count int\n    var max_word String\n\
    \    for _, word := range words {\n        count := make(map[rune]int)\n     \
    \   for _, r := range word {\n            count[r]++\n        }\n        if len(count)\
    \ > max_count {\n            max_count = len(count)\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    // Write your code here\n    var\
    \ max_count = 0\n    var max_word = \"\"\n    for _, word := range words {\n \
    \       count := 0\n        for _, ch := range word {\n            if _, ok :=\
    \ word_count[ch]; !ok {\n                word_count[ch] = 0\n            }\n \
    \           word_count[ch]++\n            count++\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", '    ', '    ', "    // Write your code\
    \ here\n    max_count = 0\n    max_word = \"\"\n    for i in range(0, len(words))\
    \ {\n        count = 0\n        for j in range(0, len(words[i])) {\n         \
    \   if words[i][j] != words[i][j+1] {\n                count += 1\n          \
    \  }\n        }\n        if count > max_count {\n            max_count = count\n\
    \            max_word = words[i]\n        }\n    }\n    return max_word", '    ',
  "    var max_count int\n    var max_word String\n    for _, word := range words\
    \ {\n        count := make(map[rune]int)\n        for _, r := range word {\n \
    \           count[r]++\n        }\n        if len(count) > max_count {\n     \
    \       max_count = len(count)\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    var max_count int\n    var max_word String\n    for\
    \ _, word := range words {\n        count := 0\n        for i := 0; i < len(word);\
    \ i++ {\n            if word[i] == word[i+1] {\n                count++\n    \
    \        }\n        }\n        if count > max_count {\n            max_count =\
    \ count\n            max_word = word\n        }\n    }\n    return max_word",
  '    ', "    var max_count int\n    var max_word String\n    for _, word := range\
    \ words {\n        count := 0\n        for i := 0; i < len(word); i++ {\n    \
    \        if word[i] == word[i+1] {\n                count++\n            }\n \
    \       }\n        if count > max_count {\n            max_count = count\n   \
    \         max_word = word\n        }\n    }\n    return max_word", "    var max_count\
    \ = 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if _, ok := unique[c]; ok\
    \ {\n                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", '    ', "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if c == ' ' {\n                continue\n   \
    \         }\n            count += 1\n        }\n        if count > max_count {\n\
    \            max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    return max(words, (a,\
    \ b) => a.length - b.length)", "    var max_count = 0\n    var max_word = \"\"\
    \n    for _, word := range words {\n        count := 0\n        for _, c := range\
    \ word {\n            if c == ' ' {\n                continue\n            }\n\
    \            count += 1\n        }\n        if count > max_count {\n         \
    \   max_count = count\n            max_word = word\n        }\n    }\n    return\
    \ max_word", "    // Write your code here\n    return max_string(words)", "  \
    \  // Write your code here\n    return words[0]", "    // Write your code here\n\
    \    max_count = 0\n    max_word = \"\"\n    for i in range(len(words)) {\n  \
    \      count = 0\n        for j in range(len(words[i])) {\n            if words[i][j]\
    \ == words[i][j+1] {\n                count += 1\n            }\n        }\n \
    \       if count > max_count {\n            max_count = count\n            max_word\
    \ = words[i]\n        }\n    }\n    return max_word", "    var max_count = 0\n\
    \    var max_word = \"\"\n    for _, word := range words {\n        count := 0\n\
    \        for i := 0; i < len(word); i++ {\n            if word[i] == word[i+1]\
    \ {\n                count += 1\n            }\n        }\n        if count >\
    \ max_count {\n            max_count = count\n            max_word = word\n  \
    \      }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for i\
    \ := 0; i < len(word); i++ {\n            if word[i] == word[i+1] {\n        \
    \        count++\n            }\n        }\n        if count > max_count {\n \
    \           max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    var max_count = 0\n \
    \   var max_word = \"\"\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if _, ok := unique[c]; ok {\n \
    \               count += 1\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    // Write your code here\n    var max_count =\
    \ 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for _, c := range word {\n            if _, ok := seen[c]; !ok\
    \ {\n                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", "    // Write your code here\n    var max_count =\
    \ 0\n    var max_word = \"\"\n    for _, word := range words {\n        count\
    \ := 0\n        for i := 0; i < len(word); i++ {\n            if word[i] == word[i+1]\
    \ {\n                count++\n            }\n        }\n        if count > max_count\
    \ {\n            max_count = count\n            max_word = word\n        }\n \
    \   }\n    return max_word", '    ', "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := make(map[rune]int)\n\
    \        for _, r := range word {\n            count[r]++\n        }\n       \
    \ if len(count) > max_count {\n            max_count = len(count)\n          \
    \  max_word = word\n        }\n    }\n    return max_word", "    // Write your\
    \ code here\n    return words[0]", "    var max_count int\n    var max_word String\n\
    \    for _, word := range words {\n        count := len(word)\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word", "    var max_count int\n    var max_word\
    \ String\n    for _, word := range words {\n        count := 0\n        for _,\
    \ c := range word {\n            if c == ' ' {\n                continue\n   \
    \         }\n            count += 1\n        }\n        if count > max_count {\n\
    \            max_count = count\n            max_word = word\n        }\n    }\n\
    \    return max_word", "    // Write your code here\n    var max_count = 0\n \
    \   var max_word = \"\"\n    for i := 0; i < len(words); i++ {\n        var count\
    \ = 0\n        for j := 0; j < len(words[i]); j++ {\n            if words[i][j]\
    \ != words[i][j + 1] {\n                count++\n            }\n        }\n  \
    \      if count > max_count {\n            max_count = count\n            max_word\
    \ = words[i]\n        }\n    }\n    return max_word", "    var max_count int\n\
    \    var max_word String\n    for _, word := range words {\n        count := 0\n\
    \        for _, c := range word {\n            if c == ' ' {\n               \
    \ continue\n            }\n            count += 1\n        }\n        if count\
    \ > max_count {\n            max_count = count\n            max_word = word\n\
    \        }\n    }\n    return max_word"]
stop_tokens:
- "\n}"

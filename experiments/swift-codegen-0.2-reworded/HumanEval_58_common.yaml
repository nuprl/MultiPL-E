name: HumanEval_58_common
language: swift
prompt: "\n/// Return sorted unique common elements for two arrays.\n/// >>> common(l1:\
  \ [1, 4, 3, 34, 653, 2, 5], l2: [5, 7, 1, 5, 9, 653, 121])\n/// [1, 5, 653]\n///\
  \ >>> common(l1: [5, 3, 2, 8], l2: [3, 2])\n/// [2, 3]\nfunc common(l1: [Int], l2:\
  \ [Int]) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(common(l1: [1, 4, 3, 34, 653, 2, 5], l2:\
  \ [5, 7, 1, 5, 9, 653, 121]) == [1, 5, 653])\nassert(common(l1: [5, 3, 2, 8], l2:\
  \ [3, 2]) == [2, 3])\nassert(common(l1: [4, 3, 2, 8], l2: [3, 2, 4]) == [2, 3, 4])\n\
  assert(common(l1: [4, 3, 2, 8], l2: [] as [Int]) == [] as [Int])"
completions: ["\tvar (\n\t\ti1 = 0\n\t\ti2 = 0\n\t\tj1 = 0\n\t\tj2 = 0\n\t)\n\tfor\
    \ i1 < len(l1) && j1 < len(l2) {\n\t\tif l1[i1] == l2[j1] {\n\t\t\ti1++\n\t\t\t\
    j1++\n\t\t} else if l1[i1] < l2[j1] {\n\t\t\ti1++\n\t\t} else {\n\t\t\tj1++\n\t\
    \t}\n\t}\n\tfor i2 < len(l1) {\n\t\ti2++\n\t}\n\tfor j2 < len(l2) {\n\t\tj2++\n\
    \t}\n\treturn l1[i1:i2]", "    var i1 = 0\n    var i2 = 0\n    var result = []Int\n\
    \    while i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n   \
    \         result = append(result, l1[i1])\n            i1 += 1\n            i2\
    \ += 1\n        } else if l1[i1] < l2[i2] {\n            i1 += 1\n        } else\
    \ {\n            i2 += 1\n        }\n    }\n    return result", "    var i = 0\n\
    \    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n \
    \   var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n  \
    \  var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n   \
    \ var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var\
    \ d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i\
    \ = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n =\
    \ 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n\
    \    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n \
    \   var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n  \
    \  var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n   \
    \ var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var\
    \ n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s\
    \ = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x =\
    \ 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n\
    \    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n \
    \   var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n  \
    \  var n = 0\n    var o = 0\n    var", "    var i = 0\n    var j = 0\n    var\
    \ result = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] ==\
    \ l2[j] {\n            result = append(result, l1[i])\n            i += 1\n  \
    \          j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n   \
    \     } else {\n            j += 1\n        }\n    }\n    return result", "  \
    \  var i = 0\n    var j = 0\n    var k = 0\n    var count = 0\n    var result\
    \ = []\n    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n\
    \            count += 1\n            result = append(result, l1[i])\n        \
    \    i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n         \
    \   i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "    var i1 = 0\n    var i2 = 0\n    var cnt = 0\n    var result =\
    \ []\n    while i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n\
    \            cnt += 1\n            result = append(result, l1[i1])\n         \
    \   i1 += 1\n            i2 += 1\n        } else if l1[i1] < l2[i2] {\n      \
    \      i1 += 1\n        } else {\n            i2 += 1\n        }\n    }\n    return\
    \ result", "    var i1 = 0\n    var i2 = 0\n    var result = []Int\n    while\
    \ i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            result\
    \ = append(result, l1[i1])\n            i1 += 1\n            i2 += 1\n       \
    \ } else if l1[i1] < l2[i2] {\n            i1 += 1\n        } else {\n       \
    \     i2 += 1\n        }\n    }\n    return result", "    var i = 0\n    var j\
    \ = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o =\
    \ 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n\
    \    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n \
    \   var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n  \
    \  var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n   \
    \ var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var\
    \ o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t\
    \ = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y =\
    \ 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n\
    \    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n \
    \   var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n  \
    \  var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n   \
    \ var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var\
    \ y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d\
    \ = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i =\
    \ 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n\
    \    var o = 0\n    var", "    var result: [Int] = []\n    var i: Int = 0\n  \
    \  var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n\
    \    var n: Int = 0\n    var o: Int = 0\n    var p: Int = 0\n    var q: Int =\
    \ 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int\
    \ = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var\
    \ c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n   \
    \ var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n\
    \    var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int =\
    \ 0\n    var o: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int\
    \ = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v:\
    \ Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n   \
    \ var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n\
    \    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int =\
    \ 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var o: Int\
    \ = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s:\
    \ Int =", "    var i = 0\n    var j = 0\n    var result = []\n    while i < len(l1)\
    \ && j < len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] > l2[j]\
    \ {\n            j += 1\n        } else {\n            i += 1\n        }\n   \
    \ }\n    return result", "    var i = 0\n    var j = 0\n    var result = []Int\n\
    \    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n       \
    \     result = append(result, l1[i])\n            i += 1\n            j += 1\n\
    \        } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n   \
    \         j += 1\n        }\n    }\n    return result", "    var l1_len = len(l1)\n\
    \    var l2_len = len(l2)\n    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ l = 0\n    var m = 0\n    var n = 0\n    var result = []\n    var l1_i = 0\n\
    \    var l2_i = 0\n    var l1_j = 0\n    var l2_j = 0\n    var l1_k = 0\n    var\
    \ l2_k = 0\n    var l1_l = 0\n    var l2_l = 0\n    var l1_m = 0\n    var l2_m\
    \ = 0\n    var l1_n = 0\n    var l2_n = 0\n    var l1_result = 0\n    var l2_result\
    \ = 0\n    var l1_l1_len = 0\n    var l2_l2_len = 0\n    var l1_l1_i = 0\n   \
    \ var l2_l2_i = 0\n    var l1_l1_j = 0\n    var l2_l2_j = 0\n    var l1_l1_k =\
    \ 0\n    var l2_l2_k = 0\n    var l1_l1_l = 0\n    var l2_l2_l = 0\n    var l1_l1_m\
    \ = 0\n    var l2_l2_m = 0\n    var l1_l1_n = 0\n    var l2_l2_n = 0\n    var\
    \ l1_l1_result = 0\n    var l2_l2_result = 0\n    while i < l1_len && j < l2_len\
    \ {\n        if l1[i] < l2[j] {\n            i += 1\n        } else if l1[i] >\
    \ l2[j] {\n            j += 1\n        } else {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        }\n    }\n    return\
    \ result", "    var i = 0\n    var j = 0\n    var result = []Int\n    while i\
    \ < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            result\
    \ = append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return result", "    var i1 = 0\n    var i2 = 0\n    var\
    \ i3 = 0\n    var i4 = 0\n    var i5 = 0\n    var i6 = 0\n    var i7 = 0\n   \
    \ var i8 = 0\n    var i9 = 0\n    var i10 = 0\n    var i11 = 0\n    var i12 =\
    \ 0\n    var i13 = 0\n    var i14 = 0\n    var i15 = 0\n    var i16 = 0\n    var\
    \ i17 = 0\n    var i18 = 0\n    var i19 = 0\n    var i20 = 0\n    var i21 = 0\n\
    \    var i22 = 0\n    var i23 = 0\n    var i24 = 0\n    var i25 = 0\n    var i26\
    \ = 0\n    var i27 = 0\n    var i28 = 0\n    var i29 = 0\n    var i30 = 0\n  \
    \  var i31 = 0\n    var i32 = 0\n    var i33 = 0\n    var i34 = 0\n    var i35\
    \ = 0\n    var i36 = 0\n    var i37 = 0\n    var i38 = 0\n    var i39 = 0\n  \
    \  var i40 = 0\n    var i41 = 0\n    var i42 = 0\n    var i43 = 0\n    var i44\
    \ = 0\n    var i45 = 0\n    var i46 = 0\n    var i47 = 0\n    var i48 = 0\n  \
    \  var i49 = 0\n    var i50 = 0\n    var i51 = 0\n    var i52 = 0\n    var i53\
    \ = 0\n    var i54 = 0\n    var i55 = 0\n    var i56 = 0\n    var i57 = 0\n  \
    \  var i58 = 0\n    var i59 = 0\n    var i60 = 0\n    var i61 = 0\n    var i62\
    \ = 0\n    var i63 = 0\n    var i64 = 0\n    var i65 = 0\n    var i66 = 0\n  \
    \  var i67 = 0\n    var i68 = 0\n    var i69 = 0\n    var i70 = 0\n    var i71\
    \ = 0\n    var i72 = 0\n    var i73 = 0\n    ", "    var i1 = 0\n    var i2 =\
    \ 0\n    var result = []Int\n    while i1 < len(l1) and i2 < len(l2) {\n     \
    \   if l1[i1] == l2[i2] {\n            result = append(result, l1[i1])\n     \
    \       i1 += 1\n            i2 += 1\n        } else if l1[i1] < l2[i2] {\n  \
    \          i1 += 1\n        } else {\n            i2 += 1\n        }\n    }\n\
    \    return result", "    let i = 0\n    let j = 0\n    let common = []\n    while\
    \ i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n \
    \           i += 1\n        } else {\n            j += 1\n        }\n    }\n \
    \   return common", "    var i = 0\n    var j = 0\n    var common = []Int\n  \
    \  while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n         \
    \   common = append(common, l1[i])\n            i += 1\n            j += 1\n \
    \       } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n    \
    \        j += 1\n        }\n    }\n    return common", "    var result []Int\n\
    \    var i1 = 0\n    var i2 = 0\n    var j1 = 0\n    var j2 = 0\n    while i1\
    \ < len(l1) && j1 < len(l2) {\n        if l1[i1] == l2[j1] {\n            result\
    \ = append(result, l1[i1])\n            i1 += 1\n            j1 += 1\n       \
    \ } else if l1[i1] < l2[j1] {\n            i1 += 1\n        } else {\n       \
    \     j1 += 1\n        }\n    }\n    return result", "    var i = 0\n    var j\
    \ = 0\n    var result = []\n    while i < len(l1) && j < len(l2) {\n        if\
    \ l1[i] == l2[j] {\n            result = append(result, l1[i])\n            i\
    \ += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n            i +=\
    \ 1\n        } else {\n            j += 1\n        }\n    }\n    return result",
  "    var i1 = 0\n    var i2 = 0\n    var common = []Int\n    while i1 < len(l1)\
    \ && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            common = append(common,\
    \ l1[i1])\n            i1 += 1\n            i2 += 1\n        } else if l1[i1]\
    \ < l2[i2] {\n            i1 += 1\n        } else {\n            i2 += 1\n   \
    \     }\n    }\n    return common", "    var i = 0\n    var j = 0\n    var result\
    \ = []Int{}\n    for i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n\
    \            result = append(result, l1[i])\n            i += 1\n            j\
    \ += 1\n        } else if l1[i] > l2[j] {\n            j += 1\n        } else\
    \ {\n            i += 1\n        }\n    }\n    return result", "    var l1_len\
    \ = len(l1)\n    var l2_len = len(l2)\n    var i = 0\n    var j = 0\n    var k\
    \ = 0\n    var common = []Int{}\n    var l1_index = 0\n    var l2_index = 0\n\
    \    while i < l1_len && j < l2_len {\n        if l1[i] == l2[j] {\n         \
    \   common = append(common, l1[i])\n            i += 1\n            j += 1\n \
    \       } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n    \
    \        j += 1\n        }\n    }\n    return common", "    var i1 = 0\n    var\
    \ i2 = 0\n    var result = []\n    while i1 < len(l1) && i2 < len(l2) {\n    \
    \    if l1[i1] == l2[i2] {\n            result = append(result, l1[i1])\n    \
    \        i1 += 1\n            i2 += 1\n        } else if l1[i1] < l2[i2] {\n \
    \           i1 += 1\n        } else {\n            i2 += 1\n        }\n    }\n\
    \    return result", "    var i = 0\n    var j = 0\n    var k = 0\n    var l =\
    \ 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n\
    \    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n \
    \   var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n  \
    \  var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n   \
    \ var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q\
    \ = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v =\
    \ 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n\
    \    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n \
    \   var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n  \
    \  var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n   \
    \ var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var\
    \ v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a\
    \ = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f =\
    \ 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n\
    \    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var", "    var\
    \ i = 0\n    var j = 0\n    var result = []Int\n    while i < len(l1) && j < len(l2)\
    \ {\n        if l1[i] == l2[j] {\n            result = append(result, l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n \
    \           i += 1\n        } else {\n            j += 1\n        }\n    }\n \
    \   return result", "    var i = 0\n    var j = 0\n    var result = []Int\n  \
    \  while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n         \
    \   result = append(result, l1[i])\n            i += 1\n            j += 1\n \
    \       } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n    \
    \        j += 1\n        }\n    }\n    return result", "    var i = 0\n    var\
    \ j = 0\n    var result = []Int\n    while i < len(l1) && j < len(l2) {\n    \
    \    if l1[i] == l2[j] {\n            result = append(result, l1[i])\n       \
    \     i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n        \
    \    i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "    var i = 0\n    var j = 0\n    var k = 0\n    var m = 0\n    var\
    \ n = 0\n    var l1_len = len(l1)\n    var l2_len = len(l2)\n    var result =\
    \ []\n    var l1_index = 0\n    var l2_index = 0\n    var l1_value = l1[0]\n \
    \   var l2_value = l2[0]\n    while l1_index < l1_len && l2_index < l2_len {\n\
    \        if l1_value == l2_value {\n            result = append(result, l1_value)\n\
    \            l1_index += 1\n            l2_index += 1\n            l1_value =\
    \ l1[l1_index]\n            l2_value = l2[l2_index]\n        } else if l1_value\
    \ < l2_value {\n            l1_index += 1\n            l1_value = l1[l1_index]\n\
    \        } else {\n            l2_index += 1\n            l2_value = l2[l2_index]\n\
    \        }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var\
    \ k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p\
    \ = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u =\
    \ 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n\
    \    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n \
    \   var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n  \
    \  var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n   \
    \ var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var\
    \ u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z\
    \ = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e =\
    \ 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n\
    \    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n \
    \   var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n  \
    \  var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n   \
    \ var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var\
    \ e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j\
    \ = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o =\
    \ 0\n    var", "\tl1.sort()\n\tl2.sort()\n\tvar i1, i2 int\n\tvar result []Int\n\
    \tfor i1 < len(l1) && i2 < len(l2) {\n\t\tif l1[i1] == l2[i2] {\n\t\t\tresult\
    \ = append(result, l1[i1])\n\t\t\ti1++\n\t\t\ti2++\n\t\t} else if l1[i1] < l2[i2]\
    \ {\n\t\t\ti1++\n\t\t} else {\n\t\t\ti2++\n\t\t}\n\t}\n\treturn result", "   \
    \ var i1 = 0\n    var i2 = 0\n    var result = []Int\n    while i1 < len(l1) and\
    \ i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            result = append(result,\
    \ l1[i1])\n            i1 += 1\n            i2 += 1\n        } else if l1[i1]\
    \ < l2[i2] {\n            i1 += 1\n        } else {\n            i2 += 1\n   \
    \     }\n    }\n    return result", "    var result []Int\n    for i := 0; i <\
    \ len(l1); i++ {\n        if l1[i] == l2[i] {\n            result = append(result,\
    \ l1[i])\n        }\n    }\n    return result", "    var i = 0\n    var j = 0\n\
    \    var result = []\n    while i < len(l1) && j < len(l2) {\n        if l1[i]\
    \ == l2[j] {\n            result = append(result, l1[i])\n            i += 1\n\
    \            j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n \
    \       } else {\n            j += 1\n        }\n    }\n    return result", " \
    \   var i1 = 0\n    var i2 = 0\n    var cnt = 0\n    var res = []\n    while i1\
    \ < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            cnt\
    \ += 1\n            res = append(res, l1[i1])\n            i1 += 1\n         \
    \   i2 += 1\n        } else if l1[i1] < l2[i2] {\n            i1 += 1\n      \
    \  } else {\n            i2 += 1\n        }\n    }\n    return res", "    var\
    \ l1_len = len(l1)\n    var l2_len = len(l2)\n    var l1_idx = 0\n    var l2_idx\
    \ = 0\n    var common = []Int{}\n    for l1_idx < l1_len && l2_idx < l2_len {\n\
    \        if l1[l1_idx] == l2[l2_idx] {\n            common = append(common, l1[l1_idx])\n\
    \            l1_idx += 1\n            l2_idx += 1\n        } else if l1[l1_idx]\
    \ > l2[l2_idx] {\n            l2_idx += 1\n        } else {\n            l1_idx\
    \ += 1\n        }\n    }\n    return common", "    var result = []Int\n    var\
    \ i = 0\n    var j = 0\n    var l1Len = len(l1)\n    var l2Len = len(l2)\n   \
    \ var l1Idx = 0\n    var l2Idx = 0\n    while i < l1Len && j < l2Len {\n     \
    \   if l1[i] == l2[j] {\n            result = append(result, l1[i])\n        \
    \    i++\n            j++\n        } else if l1[i] > l2[j] {\n            j++\n\
    \        } else {\n            i++\n        }\n    }\n    return result", "  \
    \  var i = 0\n    var j = 0\n    var result = []Int\n    while i < len(l1) &&\
    \ j < len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] < l2[j]\
    \ {\n            i += 1\n        } else {\n            j += 1\n        }\n   \
    \ }\n    return result", "    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q\
    \ = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v =\
    \ 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n\
    \    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n \
    \   var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n  \
    \  var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n   \
    \ var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var\
    \ v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a\
    \ = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f =\
    \ 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n\
    \    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n \
    \   var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n  \
    \  var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n   \
    \ var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var\
    \ f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k\
    \ = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var", " \
    \   var i1 = 0\n    var i2 = 0\n    var c = []Int\n    while i1 < len(l1) && i2\
    \ < len(l2) {\n        if l1[i1] == l2[i2] {\n            c = append(c, l1[i1])\n\
    \            i1 += 1\n            i2 += 1\n        } else if l1[i1] < l2[i2] {\n\
    \            i1 += 1\n        } else {\n            i2 += 1\n        }\n    }\n\
    \    return c", "    var i = 0\n    var j = 0\n    var result = []Int\n    while\
    \ i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            result\
    \ = append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var\
    \ k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p\
    \ = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u =\
    \ 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n\
    \    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n \
    \   var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n  \
    \  var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n   \
    \ var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var\
    \ u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z\
    \ = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e =\
    \ 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n\
    \    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n \
    \   var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n  \
    \  var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n   \
    \ var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var\
    \ e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j\
    \ = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o =\
    \ 0\n    var", "    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n \
    \   var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n  \
    \  var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n   \
    \ var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var\
    \ b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g\
    \ = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l =\
    \ 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n\
    \    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n \
    \   var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n  \
    \  var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n   \
    \ var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q\
    \ = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v =\
    \ 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n\
    \    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n \
    \   var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n  \
    \  var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var", "    var\
    \ i = 0\n    var j = 0\n    var count = 0\n    var result = []\n    while i <\
    \ len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            count +=\
    \ 1\n            result = append(result, l1[i])\n            i += 1\n        \
    \    j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n        }\
    \ else {\n            j += 1\n        }\n    }\n    return result", "\tvar (\n\
    \t\ti1 = 0\n\t\ti2 = 0\n\t\tj1 = 0\n\t\tj2 = 0\n\t)\n\tfor i1 < len(l1) && j1\
    \ < len(l2) {\n\t\tif l1[i1] == l2[j1] {\n\t\t\ti1++\n\t\t\tj1++\n\t\t} else if\
    \ l1[i1] < l2[j1] {\n\t\t\ti1++\n\t\t} else {\n\t\t\tj1++\n\t\t}\n\t}\n\tfor i2\
    \ < len(l1) {\n\t\ti2++\n\t}\n\tfor j2 < len(l2) {\n\t\tj2++\n\t}\n\treturn l1[i1:i2]",
  "    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n   \
    \ var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var\
    \ s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x\
    \ = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c =\
    \ 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n\
    \    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n \
    \   var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n  \
    \  var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n   \
    \ var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var\
    \ c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h\
    \ = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m =\
    \ 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n\
    \    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n \
    \   var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n  \
    \  var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n   \
    \ var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var\
    \ m = 0\n    var n = 0\n    var o = 0\n    var", "    var i = 0\n    var j = 0\n\
    \    var common = []Int\n    for i < len(l1) && j < len(l2) {\n        if l1[i]\
    \ == l2[j] {\n            common = append(common, l1[i])\n            i += 1\n\
    \            j += 1\n        } else if l1[i] > l2[j] {\n            j += 1\n \
    \       } else {\n            i += 1\n        }\n    }\n    return common", " \
    \   var i = 0\n    var j = 0\n    var result = []Int\n    while i < len(l1) &&\
    \ j < len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] > l2[j]\
    \ {\n            j += 1\n        } else {\n            i += 1\n        }\n   \
    \ }\n    return result", "    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ m = 0\n    var n = 0\n    var result = []\n    while i < len(l1) && j < len(l2)\
    \ {\n        if l1[i] == l2[j] {\n            result = append(result, l1[i])\n\
    \            i = i + 1\n            j = j + 1\n        } else if l1[i] > l2[j]\
    \ {\n            j = j + 1\n        } else {\n            i = i + 1\n        }\n\
    \    }\n    return result", "    var i = 0\n    var j = 0\n    var result = []Int\n\
    \    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n       \
    \     result = append(result, l1[i])\n            i += 1\n            j += 1\n\
    \        } else if l1[i] > l2[j] {\n            j += 1\n        } else {\n   \
    \         i += 1\n        }\n    }\n    return result", "    var i = 0\n    var\
    \ j = 0\n    var k = 0\n    var common = []Int\n    while i < len(l1) && j < len(l2)\
    \ {\n        if l1[i] == l2[j] {\n            common = append(common, l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n \
    \           i += 1\n        } else {\n            j += 1\n        }\n    }\n \
    \   return common", "    var i = 0\n    var j = 0\n    var result = []Int\n  \
    \  while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n         \
    \   result = append(result, l1[i])\n            i += 1\n            j += 1\n \
    \       } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n    \
    \        j += 1\n        }\n    }\n    return result", "    var i = 0\n    var\
    \ j = 0\n    var result = []\n    var l1_len = len(l1)\n    var l2_len = len(l2)\n\
    \    var l1_index = 0\n    var l2_index = 0\n    while i < l1_len && j < l2_len\
    \ {\n        if l1[i] == l2[j] {\n            result = append(result, l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n \
    \           i += 1\n        } else {\n            j += 1\n        }\n    }\n \
    \   return result", "    var i1 = 0\n    var i2 = 0\n    var cnt = 0\n    var\
    \ res = []\n    while i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2]\
    \ {\n            cnt += 1\n            res = append(res, l1[i1])\n           \
    \ i1 += 1\n            i2 += 1\n        } else if l1[i1] < l2[i2] {\n        \
    \    i1 += 1\n        } else {\n            i2 += 1\n        }\n    }\n    return\
    \ res", "    var i = 0\n    var j = 0\n    var result = []Int\n    while i < len(l1)\
    \ && j < len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] > l2[j]\
    \ {\n            j += 1\n        } else {\n            i += 1\n        }\n   \
    \ }\n    return result", "    var i = 0\n    var j = 0\n    var result = []Int\n\
    \    var l1Len = len(l1)\n    var l2Len = len(l2)\n    for i < l1Len && j < l2Len\
    \ {\n        if l1[i] == l2[j] {\n            result = append(result, l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] > l2[j] {\n \
    \           j += 1\n        } else {\n            i += 1\n        }\n    }\n \
    \   return result", "    var i = 0\n    var j = 0\n    var result = []\n    while\
    \ i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            result\
    \ = append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] > l2[j] {\n            j += 1\n        } else {\n            i += 1\n\
    \        }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var\
    \ result = []Int\n    var l1Len = len(l1)\n    var l2Len = len(l2)\n    while\
    \ i < l1Len && j < l2Len {\n        if l1[i] == l2[j] {\n            result =\
    \ append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return result", "    var result []Int\n    for i := 0;\
    \ i < len(l1); i++ {\n        if l1[i] == l2[i] {\n            result = append(result,\
    \ l1[i])\n        }\n    }\n    return result", "    var result: [Int] = []\n\
    \    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[0] {\n           \
    \ result = append(result, l1[i])\n            l2 = l2[1:]\n        }\n    }\n\
    \    return result", "    var i = 0\n    var j = 0\n    var result = []Int\n \
    \   var len1 = len(l1)\n    var len2 = len(l2)\n    while i < len1 && j < len2\
    \ {\n        if l1[i] == l2[j] {\n            result = append(result, l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n \
    \           i += 1\n        } else {\n            j += 1\n        }\n    }\n \
    \   return result", "\tl1.sort()\n\tl2.sort()\n\tvar i1, i2 int\n\tvar result\
    \ []Int\n\tfor i1 < len(l1) && i2 < len(l2) {\n\t\tif l1[i1] == l2[i2] {\n\t\t\
    \tresult = append(result, l1[i1])\n\t\t\ti1++\n\t\t\ti2++\n\t\t} else if l1[i1]\
    \ < l2[i2] {\n\t\t\ti1++\n\t\t} else {\n\t\t\ti2++\n\t\t}\n\t}\n\treturn result",
  "    var i = 0\n    var j = 0\n    var k = 0\n    var result = []Int\n    var l1_len\
    \ = len(l1)\n    var l2_len = len(l2)\n    for i < l1_len && j < l2_len {\n  \
    \      if l1[i] == l2[j] {\n            result = append(result, l1[i])\n     \
    \       i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n      \
    \      i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "    var i = 0\n    var j = 0\n    var k = 0\n    var result = []Int\n\
    \    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n       \
    \     result = append(result, l1[i])\n            i += 1\n            j += 1\n\
    \        } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n   \
    \         j += 1\n        }\n    }\n    return result", "    var i1 = 0\n    var\
    \ i2 = 0\n    var i3 = 0\n    var i4 = 0\n    var i5 = 0\n    var i6 = 0\n   \
    \ var i7 = 0\n    var i8 = 0\n    var i9 = 0\n    var i10 = 0\n    var i11 = 0\n\
    \    var i12 = 0\n    var i13 = 0\n    var i14 = 0\n    var i15 = 0\n    var i16\
    \ = 0\n    var i17 = 0\n    var i18 = 0\n    var i19 = 0\n    var i20 = 0\n  \
    \  var i21 = 0\n    var i22 = 0\n    var i23 = 0\n    var i24 = 0\n    var i25\
    \ = 0\n    var i26 = 0\n    var i27 = 0\n    var i28 = 0\n    var i29 = 0\n  \
    \  var i30 = 0\n    var i31 = 0\n    var i32 = 0\n    var i33 = 0\n    var i34\
    \ = 0\n    var i35 = 0\n    var i36 = 0\n    var i37 = 0\n    var i38 = 0\n  \
    \  var i39 = 0\n    var i40 = 0\n    var i41 = 0\n    var i42 = 0\n    var i43\
    \ = 0\n    var i44 = 0\n    var i45 = 0\n    var i46 = 0\n    var i47 = 0\n  \
    \  var i48 = 0\n    var i49 = 0\n    var i50 = 0\n    var i51 = 0\n    var i52\
    \ = 0\n    var i53 = 0\n    var i54 = 0\n    var i55 = 0\n    var i56 = 0\n  \
    \  var i57 = 0\n    var i58 = 0\n    var i59 = 0\n    var i60 = 0\n    var i61\
    \ = 0\n    var i62 = 0\n    var i63 = 0\n    var i64 = 0\n    var i65 = 0\n  \
    \  var i66 = 0\n    var i67 = 0\n    var i68 = 0\n    var i69 = 0\n    var i70\
    \ = 0\n    var i71 = 0\n    var i72 = 0\n    var i73 = 0\n    ", "    var l1_len\
    \ = len(l1)\n    var l2_len = len(l2)\n    var i = 0\n    var j = 0\n    var k\
    \ = 0\n    var common = make([]Int, 0)\n    var l1_i = 0\n    var l2_i = 0\n \
    \   while i < l1_len && j < l2_len {\n        if l1[i] == l2[j] {\n          \
    \  common = append(common, l1[i])\n            i += 1\n            j += 1\n  \
    \      } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n     \
    \       j += 1\n        }\n    }\n    return common", "    var i = 0\n    var\
    \ j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o\
    \ = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t =\
    \ 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n\
    \    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n \
    \   var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n  \
    \  var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n   \
    \ var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var\
    \ t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y\
    \ = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d =\
    \ 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n\
    \    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n \
    \   var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n  \
    \  var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n   \
    \ var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var\
    \ d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i\
    \ = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n =\
    \ 0\n    var o = 0\n    var", "    var i = 0\n    var j = 0\n    var result =\
    \ []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n\
    \            result = append(result, l1[i])\n            i += 1\n            j\
    \ += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n        } else\
    \ {\n            j += 1\n        }\n    }\n    return result", "    var i = 0\n\
    \    var j = 0\n    var result = []Int\n    while i < len(l1) && j < len(l2) {\n\
    \        if l1[i] == l2[j] {\n            result = append(result, l1[i])\n   \
    \         i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n    \
    \        i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "    var i = 0\n    var j = 0\n    var result = []Int\n    var l1Len\
    \ = len(l1)\n    var l2Len = len(l2)\n    while i < l1Len && j < l2Len {\n   \
    \     if l1[i] == l2[j] {\n            result = append(result, l1[i])\n      \
    \      i += 1\n            j += 1\n        } else if l1[i] > l2[j] {\n       \
    \     j += 1\n        } else {\n            i += 1\n        }\n    }\n    return\
    \ result", "    var i = 0\n    var j = 0\n    var k = 0\n    var result = []Int\n\
    \    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n       \
    \     result = append(result, l1[i])\n            i += 1\n            j += 1\n\
    \        } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n   \
    \         j += 1\n        }\n    }\n    return result", "    var i = 0\n    var\
    \ j = 0\n    var result = []Int\n    while i < len(l1) && j < len(l2) {\n    \
    \    if l1[i] == l2[j] {\n            result = append(result, l1[i])\n       \
    \     i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n        \
    \    i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "    var i = 0\n    var j = 0\n    var result = []Int\n    while i\
    \ < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            result\
    \ = append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var\
    \ result = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] ==\
    \ l2[j] {\n            result = append(result, l1[i])\n            i += 1\n  \
    \          j += 1\n        } else if l1[i] > l2[j] {\n            j += 1\n   \
    \     } else {\n            i += 1\n        }\n    }\n    return result", "  \
    \  var l1_len = len(l1)\n    var l2_len = len(l2)\n    var i = 0\n    var j =\
    \ 0\n    var k = 0\n    var common = []Int\n    while i < l1_len && j < l2_len\
    \ {\n        if l1[i] == l2[j] {\n            common = append(common, l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n \
    \           i += 1\n        } else {\n            j += 1\n        }\n    }\n \
    \   return common", "    var i = 0\n    var j = 0\n    var k = 0\n    var result\
    \ = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n\
    \            result = append(result, l1[i])\n            i += 1\n            j\
    \ += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n        } else\
    \ {\n            j += 1\n        }\n    }\n    return result", "\tvar common =\
    \ make([]Int, 0)\n\tfor i := 0; i < len(l1); i++ {\n\t\tfor j := 0; j < len(l2);\
    \ j++ {\n\t\t\tif l1[i] == l2[j] {\n\t\t\t\tcommon = append(common, l1[i])\n\t\
    \t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\treturn common", "    var i1 = 0\n    var i2\
    \ = 0\n    var i3 = 0\n    var i4 = 0\n    var i5 = 0\n    var i6 = 0\n    var\
    \ i7 = 0\n    var i8 = 0\n    var i9 = 0\n    var i10 = 0\n    var i11 = 0\n \
    \   var i12 = 0\n    var i13 = 0\n    var i14 = 0\n    var i15 = 0\n    var i16\
    \ = 0\n    var i17 = 0\n    var i18 = 0\n    var i19 = 0\n    var i20 = 0\n  \
    \  var i21 = 0\n    var i22 = 0\n    var i23 = 0\n    var i24 = 0\n    var i25\
    \ = 0\n    var i26 = 0\n    var i27 = 0\n    var i28 = 0\n    var i29 = 0\n  \
    \  var i30 = 0\n    var i31 = 0\n    var i32 = 0\n    var i33 = 0\n    var i34\
    \ = 0\n    var i35 = 0\n    var i36 = 0\n    var i37 = 0\n    var i38 = 0\n  \
    \  var i39 = 0\n    var i40 = 0\n    var i41 = 0\n    var i42 = 0\n    var i43\
    \ = 0\n    var i44 = 0\n    var i45 = 0\n    var i46 = 0\n    var i47 = 0\n  \
    \  var i48 = 0\n    var i49 = 0\n    var i50 = 0\n    var i51 = 0\n    var i52\
    \ = 0\n    var i53 = 0\n    var i54 = 0\n    var i55 = 0\n    var i56 = 0\n  \
    \  var i57 = 0\n    var i58 = 0\n    var i59 = 0\n    var i60 = 0\n    var i61\
    \ = 0\n    var i62 = 0\n    var i63 = 0\n    var i64 = 0\n    var i65 = 0\n  \
    \  var i66 = 0\n    var i67 = 0\n    var i68 = 0\n    var i69 = 0\n    var i70\
    \ = 0\n    var i71 = 0\n    var i72 = 0\n    var i73 = 0\n    ", "    var result\
    \ = []Int\n    var i = 0\n    var j = 0\n    var k = 0\n    var l1_len = len(l1)\n\
    \    var l2_len = len(l2)\n    var l1_index = 0\n    var l2_index = 0\n    var\
    \ l1_value = l1[0]\n    var l2_value = l2[0]\n    while i < l1_len && j < l2_len\
    \ {\n        if l1_value == l2_value {\n            result = append(result, l1[l1_index])\n\
    \            l1_index += 1\n            l2_index += 1\n            if l1_index\
    \ == l1_len {\n                break\n            }\n            if l2_index ==\
    \ l2_len {\n                break\n            }\n            l1_value = l1[l1_index]\n\
    \            l2_value = l2[l2_index]\n        } else if l1_value < l2_value {\n\
    \            l1_index += 1\n            if l1_index == l1_len {\n            \
    \    break\n            }\n            l1_value = l1[l1_index]\n        } else\
    \ {\n            l2_index += 1\n            if l2_index == l2_len {\n        \
    \        break\n            }\n            l2_value = l2[l2_index]\n        }\n\
    \        k += 1\n    }\n    return result", "    var i = 0\n    var j = 0\n  \
    \  var result = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i]\
    \ == l2[j] {\n            result = append(result, l1[i])\n            i += 1\n\
    \            j += 1\n        } else if l1[i] > l2[j] {\n            j += 1\n \
    \       } else {\n            i += 1\n        }\n    }\n    return result", " \
    \   var i = 0\n    var j = 0\n    var result = []Int\n    var l1_len = len(l1)\n\
    \    var l2_len = len(l2)\n    while i < l1_len && j < l2_len {\n        if l1[i]\
    \ == l2[j] {\n            result = append(result, l1[i])\n            i += 1\n\
    \            j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n \
    \       } else {\n            j += 1\n        }\n    }\n    return result", " \
    \   var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n  \
    \  var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n   \
    \ var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var\
    \ x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c\
    \ = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h =\
    \ 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n\
    \    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n \
    \   var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n  \
    \  var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n   \
    \ var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var\
    \ h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m\
    \ = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r =\
    \ 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n\
    \    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n \
    \   var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n  \
    \  var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n   \
    \ var m = 0\n    var n = 0\n    var o = 0\n    var", "    var i = 0\n    var j\
    \ = 0\n    var count = 0\n    var result = []\n    while i < len(l1) && j < len(l2)\
    \ {\n        if l1[i] == l2[j] {\n            count += 1\n            result =\
    \ append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] > l2[j] {\n            j += 1\n        } else {\n            i += 1\n\
    \        }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var\
    \ result = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] ==\
    \ l2[j] {\n            result = append(result, l1[i])\n            i += 1\n  \
    \          j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n   \
    \     } else {\n            j += 1\n        }\n    }\n    return result", "  \
    \  var i1 = 0\n    var i2 = 0\n    var result = []Int\n    while i1 < len(l1)\
    \ && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            result = append(result,\
    \ l1[i1])\n            i1 += 1\n            i2 += 1\n        } else if l1[i1]\
    \ < l2[i2] {\n            i1 += 1\n        } else {\n            i2 += 1\n   \
    \     }\n    }\n    return result", "\tvar i = 0\n\tvar j = 0\n\tvar result =\
    \ []Int{}\n\tfor i < len(l1) && j < len(l2) {\n\t\tif l1[i] == l2[j] {\n\t\t\t\
    result = append(result, l1[i])\n\t\t\ti++\n\t\t\tj++\n\t\t} else if l1[i] > l2[j]\
    \ {\n\t\t\tj++\n\t\t} else {\n\t\t\ti++\n\t\t}\n\t}\n\treturn result", "    var\
    \ i = 0\n    var j = 0\n    var count = 0\n    var result = []\n    while i <\
    \ len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            count +=\
    \ 1\n            result.append(l1[i])\n            i += 1\n            j += 1\n\
    \        } else if l1[i] > l2[j] {\n            j += 1\n        } else {\n   \
    \         i += 1\n        }\n    }\n    return result", "    var i = 0\n    var\
    \ j = 0\n    var k = 0\n    var result = []Int\n    while i < len(l1) && j < len(l2)\
    \ {\n        if l1[i] == l2[j] {\n            result = append(result, l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n \
    \           i += 1\n        } else {\n            j += 1\n        }\n    }\n \
    \   return result", "    var i1 = 0\n    var i2 = 0\n    var result = []Int\n\
    \    while i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n   \
    \         result = append(result, l1[i1])\n            i1 += 1\n            i2\
    \ += 1\n        } else if l1[i1] < l2[i2] {\n            i1 += 1\n        } else\
    \ {\n            i2 += 1\n        }\n    }\n    return result", "    var l1_len\
    \ = len(l1)\n    var l2_len = len(l2)\n    var i = 0\n    var j = 0\n    var k\
    \ = 0\n    var common = []Int{}\n    for i < l1_len && j < l2_len {\n        if\
    \ l1[i] == l2[j] {\n            common = append(common, l1[i])\n            i\
    \ += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n            i +=\
    \ 1\n        } else {\n            j += 1\n        }\n    }\n    return common",
  "    var common = []Int\n    var i = 0\n    var j = 0\n    var k = 0\n    while\
    \ i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            common\
    \ = append(common, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] > l2[j] {\n            j += 1\n        } else {\n            i += 1\n\
    \        }\n    }\n    return common", "    var i = 0\n    var j = 0\n    var\
    \ common = []Int\n    var l1Len = len(l1)\n    var l2Len = len(l2)\n    while\
    \ i < l1Len && j < l2Len {\n        if l1[i] == l2[j] {\n            common =\
    \ append(common, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return common", "    var i = 0\n    var j = 0\n    var\
    \ result = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] ==\
    \ l2[j] {\n            result = append(result, l1[i])\n            i += 1\n  \
    \          j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n   \
    \     } else {\n            j += 1\n        }\n    }\n    return result", "  \
    \  var i = 0\n    var j = 0\n    var k = 0\n    var result = []Int\n    while\
    \ i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            result\
    \ = append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in l1 {\n        if l2.contains(i) {\n            result.append(i)\n       \
    \ }\n    }\n    return result", "    var i1 = 0\n    var i2 = 0\n    var j1 =\
    \ 0\n    var j2 = 0\n    var result = []\n    while i1 < len(l1) and j1 < len(l2)\
    \ {\n        if l1[i1] == l2[j1] {\n            result = append(result, l1[i1])\n\
    \            i1 += 1\n            j1 += 1\n        } else if l1[i1] < l2[j1] {\n\
    \            i1 += 1\n        } else {\n            j1 += 1\n        }\n    }\n\
    \    return result", "    let l1_len = len(l1)\n    let l2_len = len(l2)\n   \
    \ let l1_set = new Set(l1)\n    let l2_set = new Set(l2)\n    let common = []\n\
    \    for i in l1_set {\n        if l2_set.has(i) {\n            common.append(i)\n\
    \        }\n    }\n    return common", "    var i = 0\n    var j = 0\n    var\
    \ k = 0\n    var result = []\n    while i < len(l1) && j < len(l2) {\n       \
    \ if l1[i] == l2[j] {\n            result = append(result, l1[i])\n          \
    \  i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n           \
    \ i += 1\n        } else {\n            j += 1\n        }\n    }\n    return result",
  "    var result []Int\n    var i = 0\n    var j = 0\n    for i < len(l1) && j <\
    \ len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] > l2[j]\
    \ {\n            j += 1\n        } else {\n            i += 1\n        }\n   \
    \ }\n    return result", "\tl1.sort()\n\tl2.sort()\n\tvar i, j int\n\tvar result\
    \ []Int\n\tfor i < len(l1) && j < len(l2) {\n\t\tif l1[i] == l2[j] {\n\t\t\tresult\
    \ = append(result, l1[i])\n\t\t\ti++\n\t\t\tj++\n\t\t} else if l1[i] < l2[j] {\n\
    \t\t\ti++\n\t\t} else {\n\t\t\tj++\n\t\t}\n\t}\n\treturn result", "\tvar (\n\t\
    \ti1 = 0\n\t\ti2 = 0\n\t)\n\tfor i1 < len(l1) && i2 < len(l2) {\n\t\tif l1[i1]\
    \ == l2[i2] {\n\t\t\ti1++\n\t\t\ti2++\n\t\t} else if l1[i1] < l2[i2] {\n\t\t\t\
    i1++\n\t\t} else {\n\t\t\ti2++\n\t\t}\n\t}\n\treturn l1[:i1]", "    var i = 0\n\
    \    var j = 0\n    var result = []Int\n    var l1Len = len(l1)\n    var l2Len\
    \ = len(l2)\n    for i < l1Len && j < l2Len {\n        if l1[i] == l2[j] {\n \
    \           result = append(result, l1[i])\n            i += 1\n            j\
    \ += 1\n        } else if l1[i] > l2[j] {\n            j += 1\n        } else\
    \ {\n            i += 1\n        }\n    }\n    return result", "    var i = 0\n\
    \    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n \
    \   var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n  \
    \  var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n   \
    \ var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var\
    \ d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i\
    \ = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n =\
    \ 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n\
    \    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n \
    \   var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n  \
    \  var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n   \
    \ var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var\
    \ n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s\
    \ = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x =\
    \ 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n\
    \    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n \
    \   var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n  \
    \  var n = 0\n    var o = 0\n    var", "    var result []Int\n    for i := 0;\
    \ i < len(l1); i++ {\n        if l1[i] == l2[i] {\n            result = append(result,\
    \ l1[i])\n        }\n    }\n    return result", "    var i = 0\n    var j = 0\n\
    \    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n \
    \   var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n  \
    \  var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n   \
    \ var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var\
    \ e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j\
    \ = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o =\
    \ 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n\
    \    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n \
    \   var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n  \
    \  var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n   \
    \ var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var\
    \ o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t\
    \ = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y =\
    \ 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n\
    \    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n \
    \   var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n  \
    \  var o = 0\n    var", "    var i1 = 0\n    var i2 = 0\n    var j1 = 0\n    var\
    \ j2 = 0\n    var k1 = 0\n    var k2 = 0\n    var result = []\n    while i1 <\
    \ len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            result\
    \ = append(result, l1[i1])\n            i1 += 1\n            i2 += 1\n       \
    \ } else if l1[i1] < l2[i2] {\n            i1 += 1\n        } else {\n       \
    \     i2 += 1\n        }\n    }\n    while j1 < len(l1) {\n        if l1[j1] ==\
    \ l2[j2] {\n            result = append(result, l1[j1])\n            j1 += 1\n\
    \            j2 += 1\n        } else if l1[j1] < l2[j2] {\n            j1 += 1\n\
    \        } else {\n            j2 += 1\n        }\n    }\n    while k1 < len(l1)\
    \ {\n        if l1[k1] == l2[k2] {\n            result = append(result, l1[k1])\n\
    \            k1 += 1\n            k2 += 1\n        } else if l1[k1] < l2[k2] {\n\
    \            k1 += 1\n        } else {\n            k2 += 1\n        }\n    }\n\
    \    return result", "    var i = 0\n    var j = 0\n    var count = 0\n    var\
    \ result = []\n    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j]\
    \ {\n            count += 1\n            result = append(result, l1[i])\n    \
    \        i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n     \
    \       i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "\tvar i, j int\n\tvar result []Int\n\tfor i < len(l1) && j < len(l2)\
    \ {\n\t\tif l1[i] == l2[j] {\n\t\t\tresult = append(result, l1[i])\n\t\t\ti++\n\
    \t\t\tj++\n\t\t} else if l1[i] < l2[j] {\n\t\t\ti++\n\t\t} else {\n\t\t\tj++\n\
    \t\t}\n\t}\n\treturn result", "    var i = 0\n    var j = 0\n    var k = 0\n \
    \   var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n  \
    \  var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n   \
    \ var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var\
    \ a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f\
    \ = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k =\
    \ 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n\
    \    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n \
    \   var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n  \
    \  var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n   \
    \ var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var\
    \ k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p\
    \ = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u =\
    \ 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n\
    \    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n \
    \   var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n  \
    \  var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n   \
    \ var", "    var i1 = 0\n    var i2 = 0\n    var result = []\n    while i1 < len(l1)\
    \ && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            result = append(result,\
    \ l1[i1])\n            i1 += 1\n            i2 += 1\n        } else if l1[i1]\
    \ < l2[i2] {\n            i1 += 1\n        } else {\n            i2 += 1\n   \
    \     }\n    }\n    return result", "    var l1_len = len(l1)\n    var l2_len\
    \ = len(l2)\n    var i = 0\n    var j = 0\n    var k = 0\n    var common = []Int\n\
    \    while i < l1_len && j < l2_len {\n        if l1[i] == l2[j] {\n         \
    \   common = append(common, l1[i])\n            i += 1\n            j += 1\n \
    \       } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n    \
    \        j += 1\n        }\n    }\n    return common", "    var i = 0\n    var\
    \ j = 0\n    var result = []Int{}\n    for i < len(l1) && j < len(l2) {\n    \
    \    if l1[i] == l2[j] {\n            result = append(result, l1[i])\n       \
    \     i += 1\n            j += 1\n        } else if l1[i] > l2[j] {\n        \
    \    j += 1\n        } else {\n            i += 1\n        }\n    }\n    return\
    \ result", "    var i = 0\n    var j = 0\n    var common = []Int\n    var l1_len\
    \ = len(l1)\n    var l2_len = len(l2)\n    while i < l1_len && j < l2_len {\n\
    \        if l1[i] == l2[j] {\n            common = append(common, l1[i])\n   \
    \         i += 1\n            j += 1\n        } else if l1[i] > l2[j] {\n    \
    \        j += 1\n        } else {\n            i += 1\n        }\n    }\n    return\
    \ common", "    var i = 0\n    var j = 0\n    var k = 0\n    var result = []Int\n\
    \    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n       \
    \     result = append(result, l1[i])\n            i++\n            j++\n     \
    \   } else if l1[i] < l2[j] {\n            i++\n        } else {\n           \
    \ j++\n        }\n    }\n    return result", "    var i = 0\n    var j = 0\n \
    \   var k = 0\n    var common = []Int\n    for i < len(l1) && j < len(l2) {\n\
    \        if l1[i] == l2[j] {\n            common = append(common, l1[i])\n   \
    \         i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n    \
    \        i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ common", "    var i1 = 0\n    var i2 = 0\n    var result = []Int\n    while\
    \ i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            result\
    \ = append(result, l1[i1])\n            i1 += 1\n            i2 += 1\n       \
    \ } else if l1[i1] < l2[i2] {\n            i1 += 1\n        } else {\n       \
    \     i2 += 1\n        }\n    }\n    return result", "    var result: [Int] =\
    \ []\n    for i in l1 {\n        if l2.contains(i) {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var\
    \ count = 0\n    var common = []Int\n    while i < len(l1) && j < len(l2) {\n\
    \        if l1[i] == l2[j] {\n            count += 1\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n \
    \           i += 1\n        } else {\n            j += 1\n        }\n    }\n \
    \   return common", "    var i = 0\n    var j = 0\n    var c = []Int\n    while\
    \ i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            c = append(c,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] < l2[j]\
    \ {\n            i += 1\n        } else {\n            j += 1\n        }\n   \
    \ }\n    return c", "    var i = 0\n    var j = 0\n    var result = []Int\n  \
    \  for i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n           \
    \ result = append(result, l1[i])\n            i += 1\n            j += 1\n   \
    \     } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n      \
    \      j += 1\n        }\n    }\n    return result", "    var i = 0\n    var j\
    \ = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o =\
    \ 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n\
    \    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n \
    \   var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n  \
    \  var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n   \
    \ var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var\
    \ o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t\
    \ = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y =\
    \ 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n\
    \    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n \
    \   var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n  \
    \  var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n   \
    \ var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var\
    \ y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d\
    \ = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i =\
    \ 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n\
    \    var o = 0\n    var", "    var i = 0\n    var j = 0\n    var result = []Int\n\
    \    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n       \
    \     result = append(result, l1[i])\n            i += 1\n            j += 1\n\
    \        } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n   \
    \         j += 1\n        }\n    }\n    return result", "    var i = 0\n    var\
    \ j = 0\n    var result = []Int\n    for i < len(l1) && j < len(l2) {\n      \
    \  if l1[i] == l2[j] {\n            result = append(result, l1[i])\n         \
    \   i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n          \
    \  i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "\tl1.sort()\n\tl2.sort()\n\tvar i, j int\n\tvar result []Int\n\tfor\
    \ i < len(l1) && j < len(l2) {\n\t\tif l1[i] == l2[j] {\n\t\t\tresult = append(result,\
    \ l1[i])\n\t\t\ti++\n\t\t\tj++\n\t\t} else if l1[i] < l2[j] {\n\t\t\ti++\n\t\t\
    } else {\n\t\t\tj++\n\t\t}\n\t}\n\treturn result", "    let l1_len = len(l1)\n\
    \    let l2_len = len(l2)\n    let l1_idx = 0\n    let l2_idx = 0\n    let common\
    \ = []\n    while l1_idx < l1_len && l2_idx < l2_len {\n        if l1[l1_idx]\
    \ == l2[l2_idx] {\n            common.append(l1[l1_idx])\n            l1_idx +=\
    \ 1\n            l2_idx += 1\n        } else if l1[l1_idx] < l2[l2_idx] {\n  \
    \          l1_idx += 1\n        } else {\n            l2_idx += 1\n        }\n\
    \    }\n    return common", "    var l1_len = len(l1)\n    var l2_len = len(l2)\n\
    \    var i = 0\n    var j = 0\n    var k = 0\n    var common = make([]Int, 0)\n\
    \    while i < l1_len && j < l2_len {\n        if l1[i] == l2[j] {\n         \
    \   common = append(common, l1[i])\n            i += 1\n            j += 1\n \
    \       } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n    \
    \        j += 1\n        }\n    }\n    return common", "    var i = 0\n    var\
    \ j = 0\n    var k = 0\n    var common = []Int\n    var l1Len = len(l1)\n    var\
    \ l2Len = len(l2)\n    for i < l1Len && j < l2Len {\n        if l1[i] == l2[j]\
    \ {\n            common = append(common, l1[i])\n            i += 1\n        \
    \    j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n        }\
    \ else {\n            j += 1\n        }\n    }\n    return common", "    var i\
    \ = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n =\
    \ 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n\
    \    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n \
    \   var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n  \
    \  var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n   \
    \ var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var\
    \ n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s\
    \ = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x =\
    \ 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n\
    \    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n \
    \   var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n  \
    \  var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n   \
    \ var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var\
    \ x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c\
    \ = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h =\
    \ 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n\
    \    var n = 0\n    var o = 0\n    var", "    var i = 0\n    var j = 0\n    var\
    \ result = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] ==\
    \ l2[j] {\n            result = append(result, l1[i])\n            i += 1\n  \
    \          j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n   \
    \     } else {\n            j += 1\n        }\n    }\n    return result", "  \
    \  var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n   \
    \ var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var\
    \ s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x\
    \ = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c =\
    \ 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n\
    \    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n \
    \   var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n  \
    \  var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n   \
    \ var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var\
    \ c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h\
    \ = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m =\
    \ 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n\
    \    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n \
    \   var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n  \
    \  var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n   \
    \ var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var\
    \ m = 0\n    var n = 0\n    var o = 0\n    var", "    var i = 0\n    var j = 0\n\
    \    var common = []Int\n    for i < len(l1) && j < len(l2) {\n        if l1[i]\
    \ == l2[j] {\n            common = append(common, l1[i])\n            i += 1\n\
    \            j += 1\n        } else if l1[i] > l2[j] {\n            j += 1\n \
    \       } else {\n            i += 1\n        }\n    }\n    return common", " \
    \   var i = 0\n    var j = 0\n    var result = []Int\n    for i < len(l1) && j\
    \ < len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] > l2[j]\
    \ {\n            j += 1\n        } else {\n            i += 1\n        }\n   \
    \ }\n    return result", "    var l1_len = len(l1)\n    var l2_len = len(l2)\n\
    \    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n \
    \   var n = 0\n    var result = []\n    while i < l1_len && j < l2_len {\n   \
    \     if l1[i] == l2[j] {\n            result = append(result, l1[i])\n      \
    \      i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n       \
    \     i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "    var l1_len = len(l1)\n    var l2_len = len(l2)\n    var l1_i =\
    \ 0\n    var l2_i = 0\n    var l1_j = 0\n    var l2_j = 0\n    var result = []\n\
    \    while l1_i < l1_len && l2_i < l2_len {\n        if l1[l1_i] < l2[l2_i] {\n\
    \            l1_i += 1\n        } else if l1[l1_i] > l2[l2_i] {\n            l2_i\
    \ += 1\n        } else {\n            result = append(result, l1[l1_i])\n    \
    \        l1_i += 1\n            l2_i += 1\n        }\n    }\n    return result",
  "    var result []Int\n    var i1 = 0\n    var i2 = 0\n    var j1 = 0\n    var j2\
    \ = 0\n    var l1Len = len(l1)\n    var l2Len = len(l2)\n    while i1 < l1Len\
    \ && i2 < l2Len {\n        if l1[i1] == l2[i2] {\n            result = append(result,\
    \ l1[i1])\n            i1 += 1\n            i2 += 1\n        } else if l1[i1]\
    \ < l2[i2] {\n            i1 += 1\n        } else {\n            i2 += 1\n   \
    \     }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var k =\
    \ 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n\
    \    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n \
    \   var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n  \
    \  var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n   \
    \ var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var\
    \ k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p\
    \ = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u =\
    \ 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n\
    \    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n \
    \   var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n  \
    \  var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n   \
    \ var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var\
    \ u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z\
    \ = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e =\
    \ 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n\
    \    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n \
    \   var", "\tvar (\n\t\ti1 = 0\n\t\ti2 = 0\n\t)\n\tfor i1 < len(l1) && i2 < len(l2)\
    \ {\n\t\tif l1[i1] == l2[i2] {\n\t\t\ti1++\n\t\t\ti2++\n\t\t} else if l1[i1] <\
    \ l2[i2] {\n\t\t\ti1++\n\t\t} else {\n\t\t\ti2++\n\t\t}\n\t}\n\treturn l1[:i1]",
  "    var l1_len = len(l1)\n    var l2_len = len(l2)\n    var i = 0\n    var j =\
    \ 0\n    var k = 0\n    var common = []Int\n    var l1_index = 0\n    var l2_index\
    \ = 0\n    var l1_value = l1[0]\n    var l2_value = l2[0]\n    while i < l1_len\
    \ && j < l2_len {\n        if l1_value == l2_value {\n            common = append(common,\
    \ l1_value)\n            i += 1\n            j += 1\n            l1_index += 1\n\
    \            l2_index += 1\n            if l1_index == l1_len {\n            \
    \    break\n            }\n            if l2_index == l2_len {\n             \
    \   break\n            }\n            l1_value = l1[l1_index]\n            l2_value\
    \ = l2[l2_index]\n        } else if l1_value < l2_value {\n            i += 1\n\
    \            l1_index += 1\n            if l1_index == l1_len {\n            \
    \    break\n            }\n            l1_value = l1[l1_index]\n        } else\
    \ {\n            j += 1\n            l2_index += 1\n            if l2_index ==\
    \ l2_len {\n                break\n            }\n            l2_value = l2[l2_index]\n\
    \        }\n    }\n    return common", "    var l1_len = len(l1)\n    var l2_len\
    \ = len(l2)\n    var i = 0\n    var j = 0\n    var k = 0\n    var common = []Int\n\
    \    while i < l1_len && j < l2_len {\n        if l1[i] == l2[j] {\n         \
    \   common = append(common, l1[i])\n            i += 1\n            j += 1\n \
    \       } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n    \
    \        j += 1\n        }\n    }\n    return common", "    var i1 = 0\n    var\
    \ i2 = 0\n    var result = []Int\n    while i1 < len(l1) and i2 < len(l2) {\n\
    \        if l1[i1] == l2[i2] {\n            result = append(result, l1[i1])\n\
    \            i1 += 1\n            i2 += 1\n        } else if l1[i1] < l2[i2] {\n\
    \            i1 += 1\n        } else {\n            i2 += 1\n        }\n    }\n\
    \    return result", "    var l1_len = len(l1)\n    var l2_len = len(l2)\n   \
    \ var i = 0\n    var j = 0\n    var k = 0\n    var common_list = []\n    var l1_index\
    \ = 0\n    var l2_index = 0\n    var l1_value = l1[0]\n    var l2_value = l2[0]\n\
    \    while i < l1_len && j < l2_len {\n        if l1_value == l2_value {\n   \
    \         common_list = append(common_list, l1_value)\n            i += 1\n  \
    \          j += 1\n            k += 1\n        } else if l1_value < l2_value {\n\
    \            i += 1\n        } else {\n            j += 1\n        }\n       \
    \ l1_index += 1\n        l2_index += 1\n        l1_value = l1[l1_index]\n    \
    \    l2_value = l2[l2_index]\n    }\n    return common_list", "    var result\
    \ []Int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] {\n   \
    \         result = append(result, l1[i])\n        }\n    }\n    return result",
  "    var i = 0\n    var j = 0\n    var result = []Int\n    while i < len(l1) &&\
    \ j < len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] < l2[j]\
    \ {\n            i += 1\n        } else {\n            j += 1\n        }\n   \
    \ }\n    return result", "    var i = 0\n    var j = 0\n    var result = []Int\n\
    \    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n       \
    \     result = append(result, l1[i])\n            i += 1\n            j += 1\n\
    \        } else if l1[i] > l2[j] {\n            j += 1\n        } else {\n   \
    \         i += 1\n        }\n    }\n    return result", "\tvar (\n\t\ti1 = 0\n\
    \t\ti2 = 0\n\t)\n\tfor i1 < len(l1) && i2 < len(l2) {\n\t\tif l1[i1] == l2[i2]\
    \ {\n\t\t\ti1++\n\t\t\ti2++\n\t\t} else if l1[i1] < l2[i2] {\n\t\t\ti1++\n\t\t\
    } else {\n\t\t\ti2++\n\t\t}\n\t}\n\treturn l1[0:i1]", "    var i = 0\n    var\
    \ j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o\
    \ = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t =\
    \ 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n\
    \    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n \
    \   var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n  \
    \  var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n   \
    \ var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var\
    \ t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y\
    \ = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d =\
    \ 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n\
    \    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n \
    \   var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n  \
    \  var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n   \
    \ var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var\
    \ d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i\
    \ = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n =\
    \ 0\n    var o = 0\n    var", "    var i = 0\n    var j = 0\n    var result =\
    \ []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n\
    \            result = append(result, l1[i])\n            i += 1\n            j\
    \ += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n        } else\
    \ {\n            j += 1\n        }\n    }\n    return result", "    var l1_len\
    \ = len(l1)\n    var l2_len = len(l2)\n    var i = 0\n    var j = 0\n    var k\
    \ = 0\n    var common = []Int\n    var l1_i = 0\n    var l2_i = 0\n    var l1_j\
    \ = 0\n    var l2_j = 0\n    var l1_k = 0\n    var l2_k = 0\n    var l1_common\
    \ = 0\n    var l2_common = 0\n    var l1_l = 0\n    var l2_l = 0\n    var l1_m\
    \ = 0\n    var l2_m = 0\n    var l1_n = 0\n    var l2_n = 0\n    var l1_o = 0\n\
    \    var l2_o = 0\n    var l1_p = 0\n    var l2_p = 0\n    var l1_q = 0\n    var\
    \ l2_q = 0\n    var l1_r = 0\n    var l2_r = 0\n    var l1_s = 0\n    var l2_s\
    \ = 0\n    var l1_t = 0\n    var l2_t = 0\n    var l1_u = 0\n    var l2_u = 0\n\
    \    var l1_v = 0\n    var l2_v = 0\n    var l1_w = 0\n    var l2_w = 0\n    var\
    \ l1_x = 0\n    var l2_x = 0\n    var l1_y = 0\n    var l2_y = 0\n    var l1_z\
    \ = 0\n    var l2_z = 0\n    var l1_common_i = 0\n    var l2_common_i = 0\n  \
    \  var l1_common_j = 0\n    var l2_common_j = 0\n    var l1_common_k = 0\n   \
    \ var l2_common_k = 0\n    var l1_common_l = 0\n    var l2_common_l = 0\n    var\
    \ l1_common_m = 0\n    var l2_common_m = 0\n    var l1_common_n =", "    var l1_len\
    \ = len(l1)\n    var l2_len = len(l2)\n    var i = 0\n    var j = 0\n    var k\
    \ = 0\n    var common = []Int\n    while i < l1_len && j < l2_len {\n        if\
    \ l1[i] == l2[j] {\n            common = append(common, l1[i])\n            i\
    \ += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n            i +=\
    \ 1\n        } else {\n            j += 1\n        }\n    }\n    return common",
  "    var result []Int\n    var i1 = 0\n    var i2 = 0\n    var j1 = 0\n    var j2\
    \ = 0\n    var k1 = 0\n    var k2 = 0\n    while i1 < len(l1) && j1 < len(l2)\
    \ {\n        if l1[i1] < l2[j1] {\n            i1 += 1\n        } else if l1[i1]\
    \ > l2[j1] {\n            j1 += 1\n        } else {\n            result = append(result,\
    \ l1[i1])\n            i1 += 1\n            j1 += 1\n        }\n    }\n    while\
    \ i1 < len(l1) {\n        result = append(result, l1[i1])\n        i1 += 1\n \
    \   }\n    while j1 < len(l2) {\n        result = append(result, l2[j1])\n   \
    \     j1 += 1\n    }\n    return result", "    var i = 0\n    var j = 0\n    var\
    \ result = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] ==\
    \ l2[j] {\n            result = append(result, l1[i])\n            i += 1\n  \
    \          j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n   \
    \     } else {\n            j += 1\n        }\n    }\n    return result", "  \
    \  var common: [Int] = []\n    var i: Int = 0\n    var j: Int = 0\n    for i <\
    \ len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] > l2[j] {\n \
    \           j += 1\n        } else {\n            i += 1\n        }\n    }\n \
    \   return common", "    var i = 0\n    var j = 0\n    var k = 0\n    var l =\
    \ 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n\
    \    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n \
    \   var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n  \
    \  var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n   \
    \ var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q\
    \ = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v =\
    \ 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n\
    \    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n \
    \   var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n  \
    \  var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n   \
    \ var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var\
    \ v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a\
    \ = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f =\
    \ 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n\
    \    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var", "    var\
    \ i1 = 0\n    var i2 = 0\n    var i3 = 0\n    var i4 = 0\n    var i5 = 0\n   \
    \ var i6 = 0\n    var i7 = 0\n    var i8 = 0\n    var i9 = 0\n    var i10 = 0\n\
    \    var i11 = 0\n    var i12 = 0\n    var i13 = 0\n    var i14 = 0\n    var i15\
    \ = 0\n    var i16 = 0\n    var i17 = 0\n    var i18 = 0\n    var i19 = 0\n  \
    \  var i20 = 0\n    var i21 = 0\n    var i22 = 0\n    var i23 = 0\n    var i24\
    \ = 0\n    var i25 = 0\n    var i26 = 0\n    var i27 = 0\n    var i28 = 0\n  \
    \  var i29 = 0\n    var i30 = 0\n    var i31 = 0\n    var i32 = 0\n    var i33\
    \ = 0\n    var i34 = 0\n    var i35 = 0\n    var i36 = 0\n    var i37 = 0\n  \
    \  var i38 = 0\n    var i39 = 0\n    var i40 = 0\n    var i41 = 0\n    var i42\
    \ = 0\n    var i43 = 0\n    var i44 = 0\n    var i45 = 0\n    var i46 = 0\n  \
    \  var i47 = 0\n    var i48 = 0\n    var i49 = 0\n    var i50 = 0\n    var i51\
    \ = 0\n    var i52 = 0\n    var i53 = 0\n    var i54 = 0\n    var i55 = 0\n  \
    \  var i56 = 0\n    var i57 = 0\n    var i58 = 0\n    var i59 = 0\n    var i60\
    \ = 0\n    var i61 = 0\n    var i62 = 0\n    var i63 = 0\n    var i64 = 0\n  \
    \  var i65 = 0\n    var i66 = 0\n    var i67 = 0\n    var i68 = 0\n    var i69\
    \ = 0\n    var i70 = 0\n    var i71 = 0\n    var i72 = 0\n    var i73 = 0\n  \
    \  ", "    var i1 = 0\n    var i2 = 0\n    var result = []\n    while i1 < len(l1)\
    \ && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            result = append(result,\
    \ l1[i1])\n            i1 += 1\n            i2 += 1\n        } else if l1[i1]\
    \ < l2[i2] {\n            i1 += 1\n        } else {\n            i2 += 1\n   \
    \     }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var k =\
    \ 0\n    var result = []Int\n    while i < len(l1) && j < len(l2) {\n        if\
    \ l1[i] == l2[j] {\n            result = append(result, l1[i])\n            i\
    \ += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n            i +=\
    \ 1\n        } else {\n            j += 1\n        }\n    }\n    return result",
  "    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n   \
    \ var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var\
    \ s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x\
    \ = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c =\
    \ 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n\
    \    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n \
    \   var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n  \
    \  var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n   \
    \ var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var\
    \ c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h\
    \ = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m =\
    \ 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n\
    \    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n \
    \   var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n  \
    \  var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n   \
    \ var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var\
    \ m = 0\n    var n = 0\n    var o = 0\n    var", "\tvar (\n\t\ti1 = 0\n\t\ti2\
    \ = 0\n\t)\n\tfor i1 < len(l1) && i2 < len(l2) {\n\t\tif l1[i1] == l2[i2] {\n\t\
    \t\ti1 += 1\n\t\t\ti2 += 1\n\t\t} else if l1[i1] < l2[i2] {\n\t\t\ti1 += 1\n\t\
    \t} else {\n\t\t\ti2 += 1\n\t\t}\n\t}\n\treturn l1[:i1]", "    var i = 0\n   \
    \ var j = 0\n    var result = []Int\n    while i < len(l1) && j < len(l2) {\n\
    \        if l1[i] == l2[j] {\n            result = append(result, l1[i])\n   \
    \         i += 1\n            j += 1\n        } else if l1[i] > l2[j] {\n    \
    \        j += 1\n        } else {\n            i += 1\n        }\n    }\n    return\
    \ result", "    var common: [Int] = []\n    var i: Int = 0\n    var j: Int = 0\n\
    \    var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int =\
    \ 0\n    var o: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int\
    \ = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v:\
    \ Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n   \
    \ var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n\
    \    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int =\
    \ 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var o: Int\
    \ = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s:\
    \ Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var\
    \ w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n   \
    \ var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n\
    \    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int =\
    \ 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int\
    \ = 0\n    var m: Int = 0\n    var n: Int = 0\n    var o: Int = 0\n    var p:\
    \ Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int =", "    var\
    \ result []Int\n    var i1 = 0\n    var i2 = 0\n    var j1 = 0\n    var j2 = 0\n\
    \    var k1 = 0\n    var k2 = 0\n    var l1_len = len(l1)\n    var l2_len = len(l2)\n\
    \    while i1 < l1_len && i2 < l2_len {\n        if l1[i1] < l2[i2] {\n      \
    \      i1 += 1\n        } else if l1[i1] > l2[i2] {\n            i2 += 1\n   \
    \     } else {\n            result = append(result, l1[i1])\n            i1 +=\
    \ 1\n            i2 += 1\n        }\n    }\n    while j1 < l1_len {\n        if\
    \ l1[j1] == l2[j2] {\n            result = append(result, l1[j1])\n          \
    \  j1 += 1\n            j2 += 1\n        } else if l1[j1] < l2[j2] {\n       \
    \     j1 += 1\n        } else {\n            j2 += 1\n        }\n    }\n    while\
    \ k1 < l1_len {\n        if l1[k1] == l2[k2] {\n            result = append(result,\
    \ l1[k1])\n            k1 += 1\n            k2 += 1\n        } else if l1[k1]\
    \ < l2[k2] {\n            k1 += 1\n        } else {\n            k2 += 1\n   \
    \     }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var common\
    \ = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n\
    \            common = append(common, l1[i])\n            i += 1\n            j\
    \ += 1\n        } else if l1[i] > l2[j] {\n            j += 1\n        } else\
    \ {\n            i += 1\n        }\n    }\n    return common", "    var i = 0\n\
    \    var j = 0\n    var result = []Int{}\n    for i < len(l1) && j < len(l2) {\n\
    \        if l1[i] == l2[j] {\n            result = append(result, l1[i])\n   \
    \         i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n    \
    \        i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "    var i1 = 0\n    var i2 = 0\n    var result = []Int\n    while\
    \ i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2] {\n            result\
    \ = append(result, l1[i1])\n            i1 += 1\n            i2 += 1\n       \
    \ } else if l1[i1] < l2[i2] {\n            i1 += 1\n        } else {\n       \
    \     i2 += 1\n        }\n    }\n    return result", "    var i = 0\n    var j\
    \ = 0\n    var count = 0\n    var result = []\n    while i < len(l1) && j < len(l2)\
    \ {\n        if l1[i] == l2[j] {\n            count += 1\n            result =\
    \ append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return result", "    var i1 = 0\n    var i2 = 0\n    var\
    \ cnt = 0\n    var res = []\n    while i1 < len(l1) && i2 < len(l2) {\n      \
    \  if l1[i1] == l2[i2] {\n            cnt += 1\n            res = append(res,\
    \ l1[i1])\n            i1 += 1\n            i2 += 1\n        } else if l1[i1]\
    \ < l2[i2] {\n            i1 += 1\n        } else {\n            i2 += 1\n   \
    \     }\n    }\n    return res", "    var i = 0\n    var j = 0\n    var k = 0\n\
    \    var common = []Int\n    var l1Len = len(l1)\n    var l2Len = len(l2)\n  \
    \  for i < l1Len && j < l2Len {\n        if l1[i] == l2[j] {\n            common\
    \ = append(common, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return common", "    var i = 0\n    var j = 0\n    var\
    \ result = []Int{}\n    var l1_len = len(l1)\n    var l2_len = len(l2)\n    while\
    \ i < l1_len && j < l2_len {\n        if l1[i] == l2[j] {\n            result\
    \ = append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return result", "    var common: [Int] = []\n    for i\
    \ in l1 {\n        if l2.contains(i) {\n            common.append(i)\n       \
    \ }\n    }\n    return common", "\tvar l1_len = len(l1)\n\tvar l2_len = len(l2)\n\
    \tvar i = 0\n\tvar j = 0\n\tvar k = 0\n\tvar common = make([]Int, 0)\n\tfor i\
    \ < l1_len && j < l2_len {\n\t\tif l1[i] == l2[j] {\n\t\t\tcommon = append(common,\
    \ l1[i])\n\t\t\ti += 1\n\t\t\tj += 1\n\t\t} else if l1[i] < l2[j] {\n\t\t\ti +=\
    \ 1\n\t\t} else {\n\t\t\tj += 1\n\t\t}\n\t}\n\treturn common", "    var i = 0\n\
    \    var j = 0\n    var result = []Int\n    var l1Len = len(l1)\n    var l2Len\
    \ = len(l2)\n    while i < l1Len && j < l2Len {\n        if l1[i] == l2[j] {\n\
    \            result = append(result, l1[i])\n            i += 1\n            j\
    \ += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n        } else\
    \ {\n            j += 1\n        }\n    }\n    return result", "    var i = 0\n\
    \    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n \
    \   var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n  \
    \  var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n   \
    \ var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var\
    \ d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i\
    \ = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n =\
    \ 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n\
    \    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n \
    \   var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n  \
    \  var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n   \
    \ var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var\
    \ n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s\
    \ = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x =\
    \ 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n\
    \    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n \
    \   var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n  \
    \  var n = 0\n    var o = 0\n    var", "    var i1 = 0\n    var i2 = 0\n    var\
    \ c = []Int\n    while i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2]\
    \ {\n            c = append(c, l1[i1])\n            i1 += 1\n            i2 +=\
    \ 1\n        } else if l1[i1] < l2[i2] {\n            i1 += 1\n        } else\
    \ {\n            i2 += 1\n        }\n    }\n    return c", "    var i = 0\n  \
    \  var j = 0\n    var k = 0\n    var l1_len = len(l1)\n    var l2_len = len(l2)\n\
    \    var result = [Int]\n    while i < l1_len && j < l2_len {\n        if l1[i]\
    \ == l2[j] {\n            result = append(result, l1[i])\n            i += 1\n\
    \            j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n \
    \       } else {\n            j += 1\n        }\n    }\n    return result", " \
    \   var i = 0\n    var j = 0\n    var result = []Int\n    while i < len(l1) &&\
    \ j < len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] < l2[j]\
    \ {\n            i += 1\n        } else {\n            j += 1\n        }\n   \
    \ }\n    return result", "\tl1 = append(l1, -1)\n\tl2 = append(l2, -1)\n\tvar\
    \ (\n\t\ti1 = 0\n\t\ti2 = 0\n\t)\n\tfor i1 < len(l1) && i2 < len(l2) {\n\t\tif\
    \ l1[i1] == l2[i2] {\n\t\t\ti1++\n\t\t\ti2++\n\t\t} else if l1[i1] < l2[i2] {\n\
    \t\t\ti1++\n\t\t} else {\n\t\t\ti2++\n\t\t}\n\t}\n\treturn l1[:i1]", "    var\
    \ i = 0\n    var j = 0\n    var result = []Int\n    var l1Len = len(l1)\n    var\
    \ l2Len = len(l2)\n    while i < l1Len && j < l2Len {\n        if l1[i] == l2[j]\
    \ {\n            result = append(result, l1[i])\n            i += 1\n        \
    \    j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n        }\
    \ else {\n            j += 1\n        }\n    }\n    return result", "\tl1.sort()\n\
    \tl2.sort()\n\tvar result []Int\n\ti, j := 0, 0\n\tfor i < len(l1) && j < len(l2)\
    \ {\n\t\tif l1[i] == l2[j] {\n\t\t\tresult = append(result, l1[i])\n\t\t\ti++\n\
    \t\t\tj++\n\t\t} else if l1[i] < l2[j] {\n\t\t\ti++\n\t\t} else {\n\t\t\tj++\n\
    \t\t}\n\t}\n\treturn result", "    var i1 = 0\n    var i2 = 0\n    var result\
    \ = []\n    while i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] == l2[i2]\
    \ {\n            result = append(result, l1[i1])\n            i1 += 1\n      \
    \      i2 += 1\n        } else if l1[i1] < l2[i2] {\n            i1 += 1\n   \
    \     } else {\n            i2 += 1\n        }\n    }\n    return result", " \
    \   var i = 0\n    var j = 0\n    var count = 0\n    var result = []\n    while\
    \ i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n            count\
    \ += 1\n            result.append(l1[i])\n            i += 1\n            j +=\
    \ 1\n        } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n\
    \            j += 1\n        }\n    }\n    return result", "    var i = 0\n  \
    \  var j = 0\n    var result = []Int\n    for i < len(l1) && j < len(l2) {\n \
    \       if l1[i] == l2[j] {\n            result = append(result, l1[i])\n    \
    \        i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n     \
    \       i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "    var i = 0\n    var j = 0\n    var count = 0\n    var common =\
    \ []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n\
    \            count += 1\n            common = append(common, l1[i])\n        \
    \    i += 1\n            j += 1\n        } else if l1[i] > l2[j] {\n         \
    \   j += 1\n        } else {\n            i += 1\n        }\n    }\n    return\
    \ common", "    var result []Int\n    for i := 0; i < len(l1); i++ {\n       \
    \ for j := 0; j < len(l2); j++ {\n            if l1[i] == l2[j] {\n          \
    \      result = append(result, l1[i])\n                break\n            }\n\
    \        }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var\
    \ k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p\
    \ = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u =\
    \ 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n\
    \    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n \
    \   var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n  \
    \  var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n   \
    \ var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var\
    \ u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z\
    \ = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e =\
    \ 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n\
    \    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n \
    \   var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n  \
    \  var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n   \
    \ var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var\
    \ e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j\
    \ = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o =\
    \ 0\n    var", "    var i = 0\n    var j = 0\n    var result = []Int\n    var\
    \ len1 = len(l1)\n    var len2 = len(l2)\n    while i < len1 && j < len2 {\n \
    \       if l1[i] == l2[j] {\n            result = append(result, l1[i])\n    \
    \        i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n     \
    \       i += 1\n        } else {\n            j += 1\n        }\n    }\n    return\
    \ result", "    var i = 0\n    var j = 0\n    var result = []\n    while i < len(l1)\
    \ && j < len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] < l2[j]\
    \ {\n            i += 1\n        } else {\n            j += 1\n        }\n   \
    \ }\n    return result", "    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ result = []Int\n    while i < len(l1) && j < len(l2) {\n        if l1[i] ==\
    \ l2[j] {\n            result = append(result, l1[i])\n            i += 1\n  \
    \          j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n   \
    \     } else {\n            j += 1\n        }\n    }\n    return result", "  \
    \  var i = 0\n    var j = 0\n    var common = []Int\n    var l1Len = len(l1)\n\
    \    var l2Len = len(l2)\n    for i < l1Len && j < l2Len {\n        if l1[i] ==\
    \ l2[j] {\n            common = append(common, l1[i])\n            i += 1\n  \
    \          j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n   \
    \     } else {\n            j += 1\n        }\n    }\n    return common", "\t\
    l1.sort()\n\tl2.sort()\n\tvar i1, i2 int\n\tvar common [Int]\n\tfor i1 < len(l1)\
    \ && i2 < len(l2) {\n\t\tif l1[i1] == l2[i2] {\n\t\t\tcommon = append(common,\
    \ l1[i1])\n\t\t\ti1++\n\t\t\ti2++\n\t\t} else if l1[i1] < l2[i2] {\n\t\t\ti1++\n\
    \t\t} else {\n\t\t\ti2++\n\t\t}\n\t}\n\treturn common", "    var i = 0\n    var\
    \ j = 0\n    var result = []\n    var len1 = len(l1)\n    var len2 = len(l2)\n\
    \    for i < len1 && j < len2 {\n        if l1[i] == l2[j] {\n            result\
    \ = append(result, l1[i])\n            i += 1\n            j += 1\n        } else\
    \ if l1[i] < l2[j] {\n            i += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    return result", "    var i = 0\n    var j = 0\n    var\
    \ common = []Int\n    for i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j]\
    \ {\n            common = append(common, l1[i])\n            i += 1\n        \
    \    j += 1\n        } else if l1[i] < l2[j] {\n            i += 1\n        }\
    \ else {\n            j += 1\n        }\n    }\n    return common", "\tl1.sort()\n\
    \tl2.sort()\n\tvar i1, i2 int\n\tvar result []Int\n\tfor i1 < len(l1) && i2 <\
    \ len(l2) {\n\t\tif l1[i1] == l2[i2] {\n\t\t\tresult = append(result, l1[i1])\n\
    \t\t\ti1++\n\t\t\ti2++\n\t\t} else if l1[i1] < l2[i2] {\n\t\t\ti1++\n\t\t} else\
    \ {\n\t\t\ti2++\n\t\t}\n\t}\n\treturn result", "    var l1_len = len(l1)\n   \
    \ var l2_len = len(l2)\n    var i = 0\n    var j = 0\n    var k = 0\n    var l1_idx\
    \ = 0\n    var l2_idx = 0\n    var common = []Int\n    var l1_idx_prev = -1\n\
    \    var l2_idx_prev = -1\n    var common_idx = -1\n    var l1_idx_next = -1\n\
    \    var l2_idx_next = -1\n    var common_idx_next = -1\n    var common_idx_prev\
    \ = -1\n    var l1_idx_next_prev = -1\n    var l2_idx_next_prev = -1\n    var\
    \ common_idx_next_prev = -1\n    var common_idx_prev_next = -1\n    var l1_idx_prev_next\
    \ = -1\n    var l2_idx_prev_next = -1\n    var common_idx_prev_next = -1\n   \
    \ var common_idx_next_next = -1\n    var l1_idx_prev_next_prev = -1\n    var l2_idx_prev_next_prev\
    \ = -1\n    var common_idx_prev_next_prev = -1\n    var common_idx_next_next_prev\
    \ = -1\n    var l1_idx_prev_next_next = -1\n    var l2_idx_prev_next_next = -1\n\
    \    var common_idx_prev_next_next = -1\n    var common_idx_next_next_next = -1\n\
    \    var l1_idx_prev_next_next_next = -1\n    var l2_idx_prev_next_next_next =\
    \ -1\n    var common_idx_prev_next_next_next = -1\n    var common_idx_next_next_next_next\
    \ = -1\n    var l1_idx_prev_next_next_next_next = -1\n    var l2_idx_prev_next_",
  "    var i = 0\n    var j = 0\n    var result = []Int\n    for i < len(l1) && j\
    \ < len(l2) {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] > l2[j]\
    \ {\n            j += 1\n        } else {\n            i += 1\n        }\n   \
    \ }\n    return result", "    var i = 0\n    var j = 0\n    var result = []Int\n\
    \    while i < len(l1) && j < len(l2) {\n        if l1[i] == l2[j] {\n       \
    \     result = append(result, l1[i])\n            i += 1\n            j += 1\n\
    \        } else if l1[i] < l2[j] {\n            i += 1\n        } else {\n   \
    \         j += 1\n        }\n    }\n    return result", "    var l1_len = len(l1)\n\
    \    var l2_len = len(l2)\n    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ l = 0\n    var m = 0\n    var n = 0\n    var result = []\n    while i < l1_len\
    \ && j < l2_len {\n        if l1[i] == l2[j] {\n            result = append(result,\
    \ l1[i])\n            i += 1\n            j += 1\n        } else if l1[i] < l2[j]\
    \ {\n            i += 1\n        } else {\n            j += 1\n        }\n   \
    \ }\n    return result", "\t// TODO: implement\n\treturn []Int{}", "    var common:\
    \ [Int] = []\n    var i: Int = 0\n    var j: Int = 0\n    for i < len(l1) && j\
    \ < len(l2) {\n        if l1[i] == l2[j] {\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        } else if l1[i] < l2[j] {\n \
    \           i += 1\n        } else {\n            j += 1\n        }\n    }\n \
    \   return common", "    var i1 = 0\n    var i2 = 0\n    var count = 0\n    var\
    \ result = []\n    while i1 < len(l1) && i2 < len(l2) {\n        if l1[i1] ==\
    \ l2[i2] {\n            count += 1\n            result.append(l1[i1])\n      \
    \      i1 += 1\n            i2 += 1\n        } else if l1[i1] < l2[i2] {\n   \
    \         i1 += 1\n        } else {\n            i2 += 1\n        }\n    }\n \
    \   return result", "    var i = 0\n    var j = 0\n    var k = 0\n    var l =\
    \ 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n\
    \    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n \
    \   var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n  \
    \  var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n   \
    \ var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q\
    \ = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v =\
    \ 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n\
    \    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n \
    \   var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n  \
    \  var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n   \
    \ var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var\
    \ v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a\
    \ = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f =\
    \ 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n\
    \    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var", "    var\
    \ i = 0\n    var j = 0\n    var common = []Int\n    var l1Len = len(l1)\n    var\
    \ l2Len = len(l2)\n    for i < l1Len && j < l2Len {\n        if l1[i] == l2[j]\
    \ {\n            common = append(common, l1[i])\n            i += 1\n        \
    \    j += 1\n        } else if l1[i] > l2[j] {\n            j += 1\n        }\
    \ else {\n            i += 1\n        }\n    }\n    return common"]
stop_tokens:
- "\n}"

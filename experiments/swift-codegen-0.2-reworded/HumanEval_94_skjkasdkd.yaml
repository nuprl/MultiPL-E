name: HumanEval_94_skjkasdkd
language: swift
prompt: "\n/// You are given an array of integers.\n/// You need to find the largest\
  \ prime value and return the sum of its digits.\n/// Examples:\n/// >>> skjkasdkd(lst:\
  \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n///\
  \ 10\n/// >>> skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
  \ 5, 1])\n/// 25\n/// >>> skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
  \ 23, 2323, 32, 30, 1, 9, 3])\n/// 13\n/// >>> skjkasdkd(lst: [0, 724, 32, 71, 99,\
  \ 32, 6, 0, 5, 91, 83, 0, 5, 6])\n/// 11\n/// >>> skjkasdkd(lst: [0, 81, 12, 3,\
  \ 1, 21])\n/// 3\n/// >>> skjkasdkd(lst: [0, 8, 1, 2, 1, 7])\n/// 7\nfunc skjkasdkd(lst:\
  \ [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4,\
  \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
  \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
  \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
  assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
  assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8,\
  \ 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
  \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
completions: ["    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n\
    \            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n   \
    \ return sum", "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i\
    \ < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n   \
    \     }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n    }\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] == max_prime {\n            sum += lst[i]\n       \
    \ }\n    }\n    return sum", "    var max = 0\n    var sum = 0\n    for _, i :=\
    \ range lst {\n        if i > max {\n            max = i\n        }\n        sum\
    \ += i\n    }\n    return sum", '    ', "    var max_prime = 0\n    var sum =\
    \ 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n  \
    \          max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n    return\
    \ sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n   \
    \     }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max_prime\
    \ {\n            sum += lst[i]\n        }\n    }\n    return sum", "    var max_prime\
    \ = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max_prime {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max: Int = 0\n    var sum: Int = 0\n    for\
    \ i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n\
    \        }\n        sum += lst[i]\n    }\n    return sum", "    var max = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n    }\n    var sum = 0\n    for i := 0; i < len(lst); i++\
    \ {\n        sum += lst[i]\n        if lst[i] == max {\n            sum += sum\
    \ % 10\n        }\n    }\n    return sum", "    var max = 0\n    var sum = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", '    ',
  "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n \
    \       if lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n \
    \       sum += lst[i]\n    }\n    return sum", "    var max = 0\n    var sum =\
    \ 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n        sum += v\n    }\n    return sum", "    var max_prime = 0\n\
    \    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++ {\n        if is_prime(lst[i])\
    \ {\n            max_prime = lst[i]\n            max_prime_sum = lst[i] * lst[i]\n\
    \        }\n    }\n    return max_prime_sum", "    var max_prime = 0\n    var\
    \ sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max = 0\n    var sum = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n  \
    \      if lst[i] > max {\n            max = lst[i]\n        }\n        sum +=\
    \ lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n  \
    \  for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n        \
    \    max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum",
  "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n\
    \        if lst[i] > max {\n            max = lst[i]\n        }\n        sum +=\
    \ lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n  \
    \  for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n        \
    \    max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum",
  "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n       \
    \ if lst[i] > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i\
    \ < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n   \
    \     }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime: Int\
    \ = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max_prime {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i\
    \ < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n   \
    \     }\n        sum += lst[i]\n    }\n    return sum", "    var max = 0\n   \
    \ var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n\
    \            max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return\
    \ sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n   \
    \     }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max_prime\
    \ {\n            sum += lst[i]\n        }\n    }\n    return sum", "    var max\
    \ = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max_prime: Int = 0\n    var\
    \ sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max_prime: Int = 0\n    var sum_digits: Int = 0\n \
    \   for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n       \
    \     max_prime = lst[i]\n        }\n        sum_digits += lst[i]\n    }\n   \
    \ return sum_digits", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max_prime: Int = 0\n    var\
    \ sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max: Int = 0\n    var sum:\
    \ Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n  \
    \          max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum",
  "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n\
    \        if lst[i] > max {\n            max = lst[i]\n        }\n        sum +=\
    \ lst[i]\n    }\n    return sum", "    var max: Int = 0\n    var sum: Int = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n      \
    \  if lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n      \
    \  sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n\
    \            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n   \
    \ return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n   \
    \     }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime: Int\
    \ = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max_prime {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max: Int = 0\n    var sum: Int = 0\n    for\
    \ i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n\
    \        }\n        sum += lst[i]\n    }\n    return sum", "    var max = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max\
    \ {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return\
    \ sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if is_prime(lst[i]) {\n            max_prime = max_prime + lst[i]\n\
    \        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if is_prime(lst[i])\
    \ {\n            sum = sum + lst[i]\n        }\n    }\n    return max_prime +\
    \ sum", '    ', "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i\
    \ < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n   \
    \     }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0;\
    \ i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n \
    \       }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime =\
    \ 0\n    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++ {\n        if\
    \ lst[i] > max_prime {\n            max_prime = lst[i]\n            max_prime_sum\
    \ = 0\n        }\n        if lst[i] == max_prime {\n            max_prime_sum\
    \ += lst[i]\n        }\n    }\n    return max_prime_sum", "    var max_prime =\
    \ 0\n    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++ {\n        if\
    \ lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n    }\n   \
    \ for i := 0; i < len(lst); i++ {\n        if lst[i] == max_prime {\n        \
    \    max_prime_sum += lst[i]\n        }\n    }\n    return max_prime_sum", " \
    \   var max_prime Int\n    var sum_digits Int\n    for i := 0; i < len(lst); i++\
    \ {\n        if is_prime(lst[i]) {\n            max_prime = lst[i]\n         \
    \   sum_digits = 0\n            for j := 0; j < len(lst[i].to_string()); j++ {\n\
    \                sum_digits += int(lst[i].to_string()[j])\n            }\n   \
    \         if sum_digits > max_prime {\n                max_prime = sum_digits\n\
    \            }\n        }\n    }\n    return max_prime", "    var max: Int = 0\n\
    \    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max_prime = 0\n    var max_prime_sum = 0\n    for i\
    \ := 0; i < len(lst); i++ {\n        if is_prime(lst[i]) {\n            max_prime\
    \ = lst[i]\n            max_prime_sum = lst[i]\n        } else if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n            max_prime_sum = lst[i]\n    \
    \    } else if lst[i] == max_prime {\n            max_prime_sum += lst[i]\n  \
    \      }\n    }\n    return max_prime_sum", "    var max_prime = 0\n    var max_prime_sum\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if is_prime(lst[i]) {\n  \
    \          max_prime = lst[i]\n            max_prime_sum = 0\n            for\
    \ j := 0; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n   \
    \                 max_prime_sum += lst[j]\n                }\n            }\n\
    \            if max_prime_sum > max_prime_sum {\n                max_prime_sum\
    \ = max_prime_sum\n            }\n        }\n    }\n    return max_prime_sum",
  "    var maxPrime = 0\n    var maxPrimeDigit = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if isPrime(lst[i]) {\n            if lst[i] > maxPrime {\n  \
    \              maxPrime = lst[i]\n                maxPrimeDigit = 0\n        \
    \    }\n            if lst[i] == maxPrime {\n                maxPrimeDigit +=\
    \ lst[i]\n            }\n        }\n    }\n    return maxPrimeDigit", '    ',
  "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n       \
    \ if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i :=\
    \ 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n\
    \        }\n    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n      \
    \      max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n    return\
    \ sum", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n\
    \        if lst[i] > max {\n            max = lst[i]\n        }\n        sum +=\
    \ lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n  \
    \  for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n        \
    \    max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum",
  "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n       \
    \ if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i :=\
    \ 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n\
    \        }\n    }\n    return sum", "    var max_prime: Int = 0\n    var sum:\
    \ Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max = 0\n    var sum = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n      \
    \  if lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n    }\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] == max_prime {\n     \
    \       sum += lst[i]\n        }\n    }\n    return sum", "    var max = 0\n \
    \   var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max\
    \ {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n  \
    \  }\n    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n     \
    \   }\n        sum += lst[i]\n    }\n    return sum", "    var max: Int = 0\n\
    \    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max_prime = 0\n    var max_prime_sum = 0\n    for i\
    \ := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime\
    \ = lst[i]\n            max_prime_sum = 0\n        }\n        if lst[i] == max_prime\
    \ {\n            max_prime_sum += lst[i]\n        }\n    }\n    return max_prime_sum",
  "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n \
    \       if lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n \
    \       sum += lst[i]\n    }\n    return sum", "    var max = 0\n    var sum =\
    \ 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n        \
    \    max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", " \
    \   var max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n      \
    \  if lst[i] > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i\
    \ < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n   \
    \     }\n        if lst[i] > 0 {\n            sum += lst[i]\n        }\n    }\n\
    \    return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n\
    \        }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime\
    \ = 0\n    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++ {\n      \
    \  if is_prime(lst[i]) {\n            max_prime = lst[i]\n            max_prime_sum\
    \ = lst[i]\n        } else {\n            if max_prime > lst[i] {\n          \
    \      max_prime = lst[i]\n                max_prime_sum = lst[i]\n          \
    \  } else if max_prime == lst[i] {\n                max_prime_sum += lst[i]\n\
    \            }\n        }\n    }\n    return max_prime_sum", "    var max = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max\
    \ {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n  \
    \  }\n    return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0;\
    \ i < len(lst); i++ {\n        if is_prime(lst[i]) {\n            max_prime =\
    \ lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if is_prime(lst[i])\
    \ {\n            sum += lst[i]\n        }\n    }\n    return sum", "    var max\
    \ = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n\
    \        }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime\
    \ = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max_prime {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n    for i :=\
    \ 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", '    ',
  "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n\
    \        if lst[i] > max {\n            max = lst[i]\n        }\n        sum +=\
    \ lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n  \
    \  for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n        \
    \    max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum",
  "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n \
    \       if lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n \
    \       sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var\
    \ sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0;\
    \ i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n \
    \       }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime =\
    \ 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] >\
    \ max_prime {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n    for i :=\
    \ 0; i < len(lst); i++ {\n        if is_prime(lst[i]) {\n            max_prime\
    \ = max_prime + lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n\
    \        if is_prime(lst[i]) {\n            sum = sum + lst[i]\n        }\n  \
    \  }\n    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n     \
    \   }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if is_prime(lst[i]) {\n            max_prime = lst[i]\n\
    \        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max_prime\
    \ {\n            sum += lst[i]\n        }\n    }\n    return sum", "    var max\
    \ = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n\
    \        }\n        sum += lst[i]\n    }\n    return sum", "    var max = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max\
    \ {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return\
    \ sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n   \
    \     }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max_prime\
    \ {\n            sum += lst[i]\n        }\n    }\n    return sum", "    var maxPrime\
    \ = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if isPrime(lst[i])\
    \ {\n            maxPrime = lst[i]\n        }\n    }\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] == maxPrime {\n            sum += lst[i]\n        }\n\
    \    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n    for i :=\
    \ 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max_prime: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++\
    \ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n       \
    \ }\n        sum += lst[i]\n    }\n    return sum", "    var max: Int = 0\n  \
    \  var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] >\
    \ max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n \
    \   return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max = 0\n    var sum = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n      \
    \  if is_prime(lst[i]) {\n            max_prime = lst[i]\n        }\n    }\n \
    \   for i := 0; i < len(lst); i++ {\n        if lst[i] == max_prime {\n      \
    \      sum += lst[i]\n        }\n    }\n    return sum", "    var maxPrime = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if isPrime(lst[i])\
    \ {\n            if lst[i] > maxPrime {\n                maxPrime = lst[i]\n \
    \           }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n       \
    \ if lst[i] > maxPrime {\n            sum += lst[i]\n        }\n    }\n    return\
    \ sum", "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n\
    \            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n   \
    \ return sum", "    var max = 0\n    var sum = 0\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    for _, v :=\
    \ range lst {\n        if v > max {\n            max = v\n        }\n        sum\
    \ += int(math.Pow(float64(v), 2))\n    }\n    return sum", "    var max_prime\
    \ = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max_prime {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max_prime = 0\n    var max_prime_sum = 0\n \
    \   var prime_sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max_prime {\n            max_prime = lst[i]\n        }\n        if lst[i]\
    \ > max_prime_sum {\n            max_prime_sum = lst[i]\n        }\n        prime_sum\
    \ += lst[i]\n    }\n    return prime_sum", "    var max: Int = 0\n    var sum:\
    \ Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n  \
    \          max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum",
  "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n       \
    \ if lst[i] > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n    for i :=\
    \ 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n      \
    \  if lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n      \
    \  sum += lst[i]\n    }\n    return sum", "    var max: Int = 0\n    var sum:\
    \ Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n  \
    \          max = lst[i]\n        }\n        if lst[i] > 0 {\n            sum +=\
    \ lst[i]\n        }\n    }\n    return sum", '    ', "    var max_prime = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n    }\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] == max_prime {\n            sum += lst[i]\n       \
    \ }\n    }\n    return sum", "    var max: Int = 0\n    var sum: Int = 0\n   \
    \ for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n\
    \        }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime\
    \ = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max_prime {\n            max_prime = lst[i]\n        }\n    }\n    for i :=\
    \ 0; i < len(lst); i++ {\n        if lst[i] == max_prime {\n            sum +=\
    \ lst[i]\n        }\n    }\n    return sum", "    var max = 0\n    var sum = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var maxPrime: Int = 0\n    var sum: Int = 0\n    for i\
    \ := 0; i < len(lst); i++ {\n        if lst[i] > maxPrime {\n            maxPrime\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n  \
    \      if lst[i] > max {\n            max = lst[i]\n        }\n        if lst[i]\
    \ > 0 {\n            sum += lst[i]\n        }\n    }\n    return sum", "    var\
    \ max_prime = 0\n    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++\
    \ {\n        if is_prime(lst[i]) {\n            if lst[i] > max_prime {\n    \
    \            max_prime = lst[i]\n                max_prime_sum = 0\n         \
    \   }\n            if lst[i] == max_prime {\n                max_prime_sum +=\
    \ lst[i]\n            }\n        }\n    }\n    return max_prime_sum", "    var\
    \ max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n  \
    \      if lst[i] > max {\n            max = lst[i]\n        }\n        sum +=\
    \ lst[i]\n    }\n    return sum", "    var max: Int = 0\n    var sum: Int = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n      \
    \  if lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n      \
    \  sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n\
    \            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n   \
    \ return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n           \
    \ sum += lst[i]\n        }\n    }\n    return sum", "    var max_prime = 0\n \
    \   var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n    }\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] == max_prime {\n            sum += lst[i]\n       \
    \ }\n    }\n    return sum", "    var max: Int = 0\n    var sum: Int = 0\n   \
    \ for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n\
    \        }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime\
    \ = 0\n    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++ {\n      \
    \  if is_prime(lst[i]) {\n            max_prime = lst[i]\n            max_prime_sum\
    \ = lst[i]\n            break\n        }\n    }\n    for i := 0; i < len(lst);\
    \ i++ {\n        if is_prime(lst[i]) {\n            max_prime_sum += lst[i]\n\
    \        }\n    }\n    return max_prime_sum", '    ', "    var max_prime = 0\n\
    \    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++ {\n        if is_prime(lst[i])\
    \ {\n            if lst[i] > max_prime {\n                max_prime = lst[i]\n\
    \                max_prime_sum = 0\n            }\n            max_prime_sum +=\
    \ lst[i]\n        }\n    }\n    return max_prime_sum", "    var max = 0\n    var\
    \ sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n  \
    \          max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n\
    \        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n   \
    \ return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n   \
    \     }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max_prime\
    \ {\n            sum += lst[i]\n        }\n    }\n    return sum", "    var max_prime\
    \ = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max_prime {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i\
    \ < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n   \
    \     }\n        sum += lst[i]\n    }\n    return sum", "    var max = 0\n   \
    \ var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n\
    \            max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return\
    \ sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n   \
    \     }\n        if lst[i] % 2 == 0 {\n            sum += lst[i] / 2\n       \
    \ }\n    }\n    return sum", "    var max: Int = 0\n    var sum: Int = 0\n   \
    \ for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        if lst[i] > 0 {\n            sum += lst[i]\n  \
    \      }\n    }\n    return sum", "    var max: Int = 0\n    var sum: Int = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max_prime = 0\n    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++\
    \ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n       \
    \     max_prime_sum = 0\n        }\n        if lst[i] == max_prime {\n       \
    \     max_prime_sum += lst[i]\n        }\n    }\n    return max_prime_sum", " \
    \   var max_prime = 0\n    var max_prime_sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if is_prime(lst[i]) {\n            if lst[i] > max_prime {\n\
    \                max_prime = lst[i]\n                max_prime_sum = 0\n     \
    \       }\n            max_prime_sum += lst[i]\n        }\n    }\n    return max_prime_sum",
  "    var max_prime Int = 0\n    var sum_digits Int = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n   \
    \     }\n        sum_digits += lst[i]\n    }\n    return sum_digits", "    var\
    \ max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0;\
    \ i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n \
    \       }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime =\
    \ 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] >\
    \ max_prime {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max: Int = 0\n    var sum: Int = 0\n    for\
    \ i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n\
    \        }\n        sum += lst[i]\n    }\n    return sum", "    var max = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max\
    \ {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return\
    \ sum", "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n\
    \            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n   \
    \ return sum", "    var max_prime = 0\n    var max_prime_sum = 0\n    for i :=\
    \ 0; i < len(lst); i++ {\n        if is_prime(lst[i]) {\n            max_prime\
    \ = lst[i]\n            max_prime_sum = lst[i]\n        } else if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n            max_prime_sum = lst[i]\n    \
    \    } else if lst[i] == max_prime {\n            max_prime_sum += lst[i]\n  \
    \      }\n    }\n    return max_prime_sum", "    var max_prime = 0\n    var sum\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n\
    \            max_prime = lst[i]\n        }\n    }\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] == max_prime {\n            sum += lst[i]\n       \
    \ }\n    }\n    return sum", "    var max_prime: Int = 0\n    var sum_digits:\
    \ Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime\
    \ {\n            max_prime = lst[i]\n        }\n        sum_digits += lst[i]\n\
    \    }\n    return sum_digits", "    var max_prime = 0\n    var sum = 0\n    for\
    \ i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n  \
    \      if lst[i] > max {\n            max = lst[i]\n        }\n        if lst[i]\
    \ > 0 {\n            sum += lst[i]\n        }\n    }\n    return sum", "    var\
    \ max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n  \
    \      if lst[i] > max {\n            max = lst[i]\n        }\n        sum +=\
    \ lst[i]\n    }\n    return sum", "    var max = 0\n    var sum = 0\n    for i\
    \ := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n\
    \        }\n        sum += lst[i]\n    }\n    return sum", "    var max = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max\
    \ {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return\
    \ sum", "    var max_prime = 0\n    var max_prime_sum = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n\
    \            max_prime_sum = 0\n        }\n        if lst[i] == max_prime {\n\
    \            max_prime_sum += lst[i]\n        }\n    }\n    return max_prime_sum",
  '    ', '    ', "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n   \
    \     }\n        sum += lst[i]\n    }\n    return sum", "    var maxPrime = 0\n\
    \    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > maxPrime\
    \ {\n            maxPrime = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0;\
    \ i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n \
    \       }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime =\
    \ 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] >\
    \ max_prime {\n            max_prime = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", "    var max_prime = 0\n    var sum_digits = 0\n    for\
    \ i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime\
    \ = lst[i]\n        }\n        sum_digits += lst[i]\n    }\n    return sum_digits",
  "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n       \
    \ if lst[i] > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n\
    \    }\n    return sum", '    ', "    var max: Int = 0\n    var sum: Int = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max\
    \ = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum", "    var\
    \ max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n      \
    \  if lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n      \
    \  sum += lst[i]\n    }\n    return sum", "    var max: Int = 0\n    var sum:\
    \ Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n  \
    \          max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum",
  '    ', "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n\
    \            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n   \
    \ return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if is_prime(lst[i]) {\n            max_prime = max_prime if max_prime\
    \ > lst[i] else lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n\
    \        if is_prime(lst[i]) {\n            sum += lst[i]\n        }\n    }\n\
    \    return sum", "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0;\
    \ i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n \
    \       }\n        sum += lst[i]\n    }\n    return sum", "    var max_prime =\
    \ 0\n    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++ {\n        if\
    \ lst[i] > max_prime {\n            max_prime = lst[i]\n        }\n    }\n   \
    \ for i := 0; i < len(lst); i++ {\n        if lst[i] == max_prime {\n        \
    \    max_prime_sum += lst[i]\n        }\n    }\n    return max_prime_sum", " \
    \   var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++\
    \ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n        sum\
    \ += lst[i]\n    }\n    return sum", "    var max_prime = 0\n    var sum = 0\n\
    \    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n      \
    \      max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n    return\
    \ sum", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst); i++ {\n\
    \        if lst[i] > max {\n            max = lst[i]\n        }\n        sum +=\
    \ lst[i]\n    }\n    return sum", "    var max_prime: Int = 0\n    var sum: Int\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n\
    \            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n   \
    \ return sum", "    var max = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    \
    \    sum += lst[i]\n    }\n    return sum", "    var max: Int = 0\n    var sum:\
    \ Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n  \
    \          max = lst[i]\n        }\n        sum += lst[i]\n    }\n    return sum",
  "    var max_prime: Int = 0\n    var max_prime_sum: Int = 0\n    for i := 0; i <\
    \ len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n\
    \        }\n        if lst[i] % 2 == 0 {\n            lst[i] = lst[i] / 2\n  \
    \      }\n        if lst[i] > max_prime_sum {\n            max_prime_sum = lst[i]\n\
    \        }\n    }\n    return max_prime_sum", "    var max = 0\n    var sum =\
    \ 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n        sum += v\n    }\n    return sum", "    var max_prime = 0\n\
    \    var max_prime_sum = 0\n    for i := 0; i < len(lst); i++ {\n        if is_prime(lst[i])\
    \ {\n            if lst[i] > max_prime {\n                max_prime = lst[i]\n\
    \                max_prime_sum = 0\n            }\n            max_prime_sum +=\
    \ lst[i]\n        }\n    }\n    return max_prime_sum", "    var max: Int = 0\n\
    \    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n        sum += lst[i]\n    }\n\
    \    return sum", "    var max_prime = 0\n    var max_prime_sum = 0\n    for i\
    \ := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n            max_prime\
    \ = lst[i]\n            max_prime_sum = 0\n        }\n        if lst[i] == max_prime\
    \ {\n            max_prime_sum += lst[i]\n        }\n    }\n    return max_prime_sum",
  "    var max_prime = 0\n    var max_prime_sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if is_prime(lst[i]) {\n            if lst[i] > max_prime {\n\
    \                max_prime = lst[i]\n                max_prime_sum = 0\n     \
    \       }\n            max_prime_sum += lst[i]\n        }\n    }\n    return max_prime_sum",
  "    var max: Int = 0\n    var sum: Int = 0\n    for i := 0; i < len(lst); i++ {\n\
    \        if lst[i] > max {\n            max = lst[i]\n        }\n        sum +=\
    \ lst[i]\n    }\n    return sum", '    ', "    var max_prime = 0\n    var sum\
    \ = 0\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max_prime {\n\
    \            max_prime = lst[i]\n        }\n        sum += lst[i]\n    }\n   \
    \ return sum", "    var max_prime = 0\n    var sum = 0\n    for i := 0; i < len(lst);\
    \ i++ {\n        if lst[i] > max_prime {\n            max_prime = lst[i]\n   \
    \     }\n        sum += lst[i]\n    }\n    return sum"]
stop_tokens:
- "\n}"

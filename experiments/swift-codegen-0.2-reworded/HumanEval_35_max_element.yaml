name: HumanEval_35_max_element
language: swift
prompt: "\n/// Return maximum element in the array.\n/// >>> max_element(l: [1, 2,\
  \ 3])\n/// 3\n/// >>> max_element(l: [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
  /// 123\nfunc max_element(l: [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(max_element(l: [1, 2, 3]) == 3)\nassert(max_element(l:\
  \ [5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)"
completions: ["    if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n \
    \   for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max", "    if len(l) == 0 {\n        return 0\n    }\n    max\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n      \
    \      max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", '    return l[0]', "    if len(l) == 0 {\n        return 0\n    }\n  \
    \  max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n \
    \           max = l[i]\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    var max = l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", '    return max_element_aux(l, 0, len(l) - 1)', '    return
    l[0]', "    if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", '    return l[0]', "    if len(l) == 0 {\n\
    \        return 0\n    }\n    max := l[0]\n    for _, v := range l {\n       \
    \ if v > max {\n            max = v\n        }\n    }\n    return max", "    max\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n      \
    \      max = l[i]\n        }\n    }\n    return max", '    return l[0]', "   \
    \ if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n    }\n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    return max", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    var max\
    \ = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n       \
    \     max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n \
    \       return -1\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", '    return
    l[0]', "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", '    return l[0]', "    if len(l) == 0 {\n\
    \        return -1\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", '    return max_element_aux(l, 0, len(l) -
    1)', '    return max_element_aux(l, 0, len(l) - 1)', "    var max = l[0]\n   \
    \ for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    if len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n  \
    \  for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    var max = l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", '    return max_element_aux(l, 0, len(l)
    - 1)', "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", '    return max_element_aux(l, 0, len(l)
    - 1)', "    var max = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", '    return
    max_element_aux(l, 0, len(l) - 1)', "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i += 1 {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n\
    \    return max", "    if len(l) == 0 {\n        return -1\n    }\n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n   \
    \     return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n  \
    \      if l[i] > max {\n            max = l[i]\n        }\n    }\n    return max",
  "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", "    var max = l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    var max = l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", "    var max_value Int\n    for i := 0; i < len(l);\
    \ i++ {\n        if l[i] > max_value {\n            max_value = l[i]\n       \
    \ }\n    }\n    return max_value", "    if len(l) == 0 {\n        return 0\n \
    \   }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i += 1 {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n\
    \    return max", "    if len(l) == 0 {\n        return -1\n    }\n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    return max", "    var max = l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", '    return max_element_aux(l, 0, len(l) - 1)', "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", '    return max_element_aux(l, 0, len(l) - 1)', "    var max\
    \ = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n       \
    \     max = l[i]\n        }\n    }\n    return max", '    return l[0]', "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max", "    if len(l) == 0 {\n        return 0\n    }\n    max\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n      \
    \      max = l[i]\n        }\n    }\n    return max", '    return max_element_aux(l,
    0, len(l) - 1)', "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    var max = l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", '    return l[0]', "    if len(l) == 0 {\n      \
    \  return -1\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n    \
    \    if l[i] > max {\n            max = l[i]\n        }\n    }\n    return max",
  "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n    }\n\
    \    max := l[0]\n    for i := 1; i < len(l); i += 1 {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max", "    var max =\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n   \
    \     return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n  \
    \      if l[i] > max {\n            max = l[i]\n        }\n    }\n    return max",
  "    if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", '    return max_element_aux(l, 0, len(l) - 1)', " \
    \   if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", "    if len(l) == 0 {\n        return -1\n    }\n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    return max", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n   \
    \ for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", "    var max = l[0]\n    for i := 1; i < len(l); i++ {\n    \
    \    if l[i] > max {\n            max = l[i]\n        }\n    }\n    return max",
  "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1;\
    \ i < len(l); i += 1 {\n        if l[i] > max {\n            max = l[i]\n    \
    \    }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n    }\n\
    \    if len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n \
    \   }\n    if len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n   \
    \ for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    if len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n  \
    \  for _, v := range l {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    return max", "    var max = l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", '    return l[0]', "    if len(l) == 0 {\n        return -1\n    }\n \
    \   max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    if len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", '    return max_element_aux(l, 0, len(l)
    - 1)', "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    var max = l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", '    return l[0]', "    var max = l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", '    return max_element_aux(l, 0, len(l) - 1)', "    if len(l)\
    \ == 0 {\n        return -1\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i += 1 {\n        if\
    \ l[i] > max {\n            max = l[i]\n        }\n    }\n    return max", '    return
    max_element_aux(l, 0, len(l) - 1)', '    return max_element_aux(l, 0, len(l) -
    1)', "    if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i += 1 {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", '    return
    l[0]', '    return max_element_aux(l, 0, len(l) - 1)', "    if len(l) == 0 {\n\
    \        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    var max = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    var\
    \ max = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n   \
    \         max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n   \
    \ for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", '    return
    max_element_aux(l, 0, len(l) - 1)', "    if len(l) == 0 {\n        return 0\n\
    \    }\n    if len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n  \
    \  for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return -1\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    if len(l)\
    \ == 0 {\n        return -1\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", "    if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max", "    if len(l) == 0 {\n        return 0\n    }\n    if\
    \ len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n    for _, v :=\
    \ range l {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max", "    if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max", "    var max = l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    var max = l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max", "    if len(l) == 0 {\n        return 0\n    }\n    max\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n      \
    \      max = l[i]\n        }\n    }\n    return max", '    return l[0]', '    return
    max_element_aux(l, 0, len(l) - 1)', "    if len(l) == 0 {\n        return -1\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i += 1 {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n\
    \    return max", "    var max = l[0]\n    for i := 1; i < len(l); i++ {\n   \
    \     if l[i] > max {\n            max = l[i]\n        }\n    }\n    return max",
  "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", '    return max_element_aux(l, 0, len(l) - 1)', " \
    \   var max = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    if len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    if\
    \ len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n    for i := 1; i\
    \ < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max", '    return max_element_aux(l, 0, len(l) - 1)', '    return
    max_element_aux(l, 0, len(l) - 1)', "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    var max\
    \ = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n       \
    \     max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n \
    \       return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", '    return l[0]', "    if len(l) == 0 {\n        return 0\n    }\n  \
    \  max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n \
    \           max = l[i]\n        }\n    }\n    return max", "    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", '    return
    max_element_aux(l, 0, len(l) - 1)', "    if len(l) == 0 {\n        return 0\n\
    \    }\n    if len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n  \
    \  for _, v := range l {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    return max", "    if len(l) == 0 {\n        return -1\n    }\n   \
    \ max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n  \
    \          max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0\
    \ {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n   \
    \ for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", "    if len(l) == 0 {\n        return 0\n    }\n    if len(l)\
    \ == 1 {\n        return l[0]\n    }\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", '    return max_element_aux(l, 0, len(l) - 1)', '    return max_element_aux(l,
    0, len(l) - 1)', '    return max_element_aux(l, 0, len(l) - 1)', '    return l[0]',
  "    if len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n        return\
    \ l[0]\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if\
    \ l[i] > max {\n            max = l[i]\n        }\n    }\n    return max", " \
    \   if len(l) == 0 {\n        return -1\n    }\n    max := l[0]\n    for i :=\
    \ 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n    \
    \    }\n    }\n    return max", '    return max_element_aux(l, 0, len(l) - 1)',
  '    return max_element_aux(l, 0, len(l) - 1)', '    return max_element_aux(l, 0,
    len(l) - 1)', '    return max_element_aux(l, 0, len(l) - 1)', "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    var max\
    \ = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n       \
    \     max = l[i]\n        }\n    }\n    return max", '    return l[0]', "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max", '    return max_element_aux(l, 0, len(l) - 1)', "   \
    \ if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1;\
    \ i < len(l); i += 1 {\n        if l[i] > max {\n            max = l[i]\n    \
    \    }\n    }\n    return max", '    return max_element_aux(l, 0, len(l) - 1)',
  "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1;\
    \ i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n       \
    \ }\n    }\n    return max", "    var max = l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max", "    if len(l) == 0 {\n        return 0\n    }\n    if len(l)\
    \ == 1 {\n        return l[0]\n    }\n    max := l[0]\n    for _, v := range l\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    return max",
  '    return max_element_aux(l, 0, len(l) - 1)', "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max", "    if len(l) == 0 {\n        return -1\n    }\n   \
    \ max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n  \
    \          max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0\
    \ {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    var max\
    \ = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n       \
    \     max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n \
    \       return 0\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    var max = l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max", "    if len(l) == 0 {\n        return 0\n    }\n    max\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n      \
    \      max = l[i]\n        }\n    }\n    return max", "    if len(l) == 0 {\n\
    \        return -1\n    }\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", '    return max_element_aux(l, 0, len(l) -
    1)', "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    if len(l) == 1 {\n        return l[0]\n    }\n    max := l[0]\n  \
    \  for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max"]
stop_tokens:
- "\n}"

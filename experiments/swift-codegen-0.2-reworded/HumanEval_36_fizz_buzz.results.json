{
  "name": "HumanEval_36_fizz_buzz",
  "language": "swift",
  "prompt": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 && n % 10 == 0 {\n        return 2\n    }\n    if n % 100 == 0 && n % 10 == 0 && n % 11 == 0 {\n        return 3\n    }\n    if n % 100 == 0 && n % 10 == 0 && n % 11 != 0 && n % 13 != 0 {\n        return 4\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmp_jx0d0dk/tmp_jx0d0dk.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b515cad2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b515c7c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b515c7c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b515c7c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_jx0d0dk                        0x0000562890b932c3 <unavailable> + 4803\n5    libc.so.6                          0x00002b515ccbe460 __libc_start_main + 245\n6    tmp_jx0d0dk                        0x0000562890b92ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpt47b7qh4/tmpt47b7qh4.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b871ce6bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b871cb62b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b871cb62988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b871cb617b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpt47b7qh4                        0x000055c7b174d2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002b871d057460 __libc_start_main + 245\n6    tmpt47b7qh4                        0x000055c7b174cef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpt47b7qh4/tmpt47b7qh4.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b871ce6bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b871cb62b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b871cb62988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b871cb617b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpt47b7qh4                        0x000055c7b174d2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002b871d057460 __libc_start_main + 245\n6    tmpt47b7qh4                        0x000055c7b174cef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    if n % 5 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpj67eyf56/tmpj67eyf56.swift:38: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b755b355c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b755b04cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b755b04c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b755b04b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj67eyf56                        0x000055ce738ff248 <unavailable> + 4680\n5    libc.so.6                          0x00002b755b541460 __libc_start_main + 245\n6    tmpj67eyf56                        0x000055ce738feef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    return 3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmp_a_raua0/tmp_a_raua0.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aefb3adac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aefb37d1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aefb37d1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aefb37d07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_a_raua0                        0x0000559857ea92c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aefb3cc6460 __libc_start_main + 245\n6    tmp_a_raua0                        0x0000559857ea8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 3\n    } else if n % 3 == 0 {\n        return 1\n    } else if n % 5 == 0 {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpnxwshuag/tmpnxwshuag.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aef808cdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aef805c4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aef805c4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aef805c37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnxwshuag                        0x0000563b23d5e248 <unavailable> + 4680\n5    libc.so.6                          0x00002aef80ab9460 __libc_start_main + 245\n6    tmpnxwshuag                        0x0000563b23d5def9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n % 15 == 0 {\n        return 2\n    }\n    if n % 3 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmprspld71t/tmprspld71t.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4e21f8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4e1eefb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4e1eef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4e1eee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprspld71t                        0x000055d63a72c2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ab4e23e4460 __libc_start_main + 245\n6    tmprspld71t                        0x000055d63a72bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 2\n    }\n    if n % 100 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpyisxjy_w/tmpyisxjy_w.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae21bc4bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae21b942b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae21b942988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae21b9417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyisxjy_w                        0x000055b8702912c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ae21be37460 __libc_start_main + 245\n6    tmpyisxjy_w                        0x000055b870290ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    count := 0\n    for i := 0; i < n; i += 11 {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpza7u_m9d.swift:14:10: error: consecutive statements on a line must be separated by ';'\n    count := 0\n         ^\n         ;\n/tmp/tmpza7u_m9d.swift:14:11: error: expected expression\n    count := 0\n          ^\n/tmp/tmpza7u_m9d.swift:15:12: error: expected type\n    for i := 0; i < n; i += 11 {\n           ^\n            <#type#>\n/tmp/tmpza7u_m9d.swift:15:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpza7u_m9d.swift:15:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpza7u_m9d.swift:14:5: error: cannot find 'count' in scope\n    count := 0\n    ^~~~~\n/tmp/tmpza7u_m9d.swift:21:12: error: cannot find 'count' in scope\n    return count\n           ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 1\n    }\n    if n % 100 == 13 {\n        return 1\n    }\n    return 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpe0w2qc1u/tmpe0w2qc1u.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aee9893ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aee98635b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aee98635988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aee986347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe0w2qc1u                        0x0000558d3f9c92c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aee98b2a460 __libc_start_main + 245\n6    tmpe0w2qc1u                        0x0000558d3f9c8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    if n % 5 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpj67eyf56/tmpj67eyf56.swift:38: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b755b355c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b755b04cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b755b04c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b755b04b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj67eyf56                        0x000055ce738ff248 <unavailable> + 4680\n5    libc.so.6                          0x00002b755b541460 __libc_start_main + 245\n6    tmpj67eyf56                        0x000055ce738feef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    count := 0\n    for i := 0; i < n; i += 11 {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpza7u_m9d.swift:14:10: error: consecutive statements on a line must be separated by ';'\n    count := 0\n         ^\n         ;\n/tmp/tmpza7u_m9d.swift:14:11: error: expected expression\n    count := 0\n          ^\n/tmp/tmpza7u_m9d.swift:15:12: error: expected type\n    for i := 0; i < n; i += 11 {\n           ^\n            <#type#>\n/tmp/tmpza7u_m9d.swift:15:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpza7u_m9d.swift:15:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpza7u_m9d.swift:14:5: error: cannot find 'count' in scope\n    count := 0\n    ^~~~~\n/tmp/tmpza7u_m9d.swift:21:12: error: cannot find 'count' in scope\n    return count\n           ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    count := 0\n    for i := 0; i < n; i += 11 {\n        if i % 3 == 0 {\n            count += 1\n        }\n    }\n    \n    for i := 0; i < n; i += 13 {\n        if i % 3 == 0 {\n            count += 1\n        }\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmphsymqc2_.swift:14:10: error: consecutive statements on a line must be separated by ';'\n    count := 0\n         ^\n         ;\n/tmp/tmphsymqc2_.swift:14:11: error: expected expression\n    count := 0\n          ^\n/tmp/tmphsymqc2_.swift:15:12: error: expected type\n    for i := 0; i < n; i += 11 {\n           ^\n            <#type#>\n/tmp/tmphsymqc2_.swift:15:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmphsymqc2_.swift:15:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmphsymqc2_.swift:21:12: error: expected type\n    for i := 0; i < n; i += 13 {\n           ^\n            <#type#>\n/tmp/tmphsymqc2_.swift:21:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 13 {\n           ^\n/tmp/tmphsymqc2_.swift:21:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 13 {\n           ^\n/tmp/tmphsymqc2_.swift:14:5: error: cannot find 'count' in scope\n    count := 0\n    ^~~~~\n/tmp/tmphsymqc2_.swift:27:12: error: cannot find 'count' in scope\n    return count\n           ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 1\n    }\n    if n % 100 == 13 {\n        return 1\n    }\n    return 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpe0w2qc1u/tmpe0w2qc1u.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aee9893ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aee98635b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aee98635988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aee986347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe0w2qc1u                        0x0000558d3f9c92c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aee98b2a460 __libc_start_main + 245\n6    tmpe0w2qc1u                        0x0000558d3f9c8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 && n % 10 == 0 {\n        return 2\n    }\n    if n % 100 == 0 && n % 10 == 0 && n % 11 == 0 {\n        return 3\n    }\n    if n % 100 == 0 && n % 10 == 0 && n % 11 != 0 && n % 13 != 0 {\n        return 4\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmp_jx0d0dk/tmp_jx0d0dk.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b515cad2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b515c7c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b515c7c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b515c7c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_jx0d0dk                        0x0000562890b932c3 <unavailable> + 4803\n5    libc.so.6                          0x00002b515ccbe460 __libc_start_main + 245\n6    tmp_jx0d0dk                        0x0000562890b92ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    count := 0\n    for i := 0; i < n; i += 11 {\n        if i % 3 == 0 {\n            count += 1\n        }\n    }\n    \n    for i := 0; i < n; i += 13 {\n        if i % 5 == 0 {\n            count += 1\n        }\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmp423cj1e1.swift:14:10: error: consecutive statements on a line must be separated by ';'\n    count := 0\n         ^\n         ;\n/tmp/tmp423cj1e1.swift:14:11: error: expected expression\n    count := 0\n          ^\n/tmp/tmp423cj1e1.swift:15:12: error: expected type\n    for i := 0; i < n; i += 11 {\n           ^\n            <#type#>\n/tmp/tmp423cj1e1.swift:15:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmp423cj1e1.swift:15:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmp423cj1e1.swift:21:12: error: expected type\n    for i := 0; i < n; i += 13 {\n           ^\n            <#type#>\n/tmp/tmp423cj1e1.swift:21:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 13 {\n           ^\n/tmp/tmp423cj1e1.swift:21:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 13 {\n           ^\n/tmp/tmp423cj1e1.swift:14:5: error: cannot find 'count' in scope\n    count := 0\n    ^~~~~\n/tmp/tmp423cj1e1.swift:27:12: error: cannot find 'count' in scope\n    return count\n           ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    if n % 5 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpi4glxzlk/tmpi4glxzlk.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1149b7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1149876b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1149876988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b11498757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4glxzlk                        0x000055deb17732c3 <unavailable> + 4803\n5    libc.so.6                          0x00002b1149d6b460 __libc_start_main + 245\n6    tmpi4glxzlk                        0x000055deb1772ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    } else if n % 100 == 0 {\n        return 2\n    } else if n % 100 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpqj_i8q0p/tmpqj_i8q0p.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba5311f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba530eecb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba530eec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba530eeb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqj_i8q0p                        0x000055d19b0842c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ba5313e1460 __libc_start_main + 245\n6    tmpqj_i8q0p                        0x000055d19b083ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    return 3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmp_a_raua0/tmp_a_raua0.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aefb3adac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aefb37d1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aefb37d1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aefb37d07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_a_raua0                        0x0000559857ea92c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aefb3cc6460 __libc_start_main + 245\n6    tmp_a_raua0                        0x0000559857ea8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 2\n    }\n    if n % 100 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpyisxjy_w/tmpyisxjy_w.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae21bc4bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae21b942b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae21b942988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae21b9417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyisxjy_w                        0x000055b8702912c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ae21be37460 __libc_start_main + 245\n6    tmpyisxjy_w                        0x000055b870290ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    if n % 5 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpi4glxzlk/tmpi4glxzlk.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1149b7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1149876b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1149876988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b11498757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4glxzlk                        0x000055deb17732c3 <unavailable> + 4803\n5    libc.so.6                          0x00002b1149d6b460 __libc_start_main + 245\n6    tmpi4glxzlk                        0x000055deb1772ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    if n % 5 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpi4glxzlk/tmpi4glxzlk.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1149b7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1149876b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1149876988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b11498757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4glxzlk                        0x000055deb17732c3 <unavailable> + 4803\n5    libc.so.6                          0x00002b1149d6b460 __libc_start_main + 245\n6    tmpi4glxzlk                        0x000055deb1772ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    var count = 0\n    \n    for i := 0; i < n; i += 1 {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpbaxsecl0.swift:16:12: error: expected type\n    for i := 0; i < n; i += 1 {\n           ^\n            <#type#>\n/tmp/tmpbaxsecl0.swift:16:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 1 {\n           ^\n/tmp/tmpbaxsecl0.swift:16:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 1 {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    count := 0\n    for i := 0; i < n; i += 11 {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpg7w5uo56.swift:14:10: error: consecutive statements on a line must be separated by ';'\n    count := 0\n         ^\n         ;\n/tmp/tmpg7w5uo56.swift:14:11: error: expected expression\n    count := 0\n          ^\n/tmp/tmpg7w5uo56.swift:15:12: error: expected type\n    for i := 0; i < n; i += 11 {\n           ^\n            <#type#>\n/tmp/tmpg7w5uo56.swift:15:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpg7w5uo56.swift:15:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpg7w5uo56.swift:14:5: error: cannot find 'count' in scope\n    count := 0\n    ^~~~~\n/tmp/tmpg7w5uo56.swift:20:12: error: cannot find 'count' in scope\n    return count\n           ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 1\n    }\n    if n % 100 == 13 {\n        return 1\n    }\n    return 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpe0w2qc1u/tmpe0w2qc1u.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aee9893ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aee98635b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aee98635988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aee986347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe0w2qc1u                        0x0000558d3f9c92c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aee98b2a460 __libc_start_main + 245\n6    tmpe0w2qc1u                        0x0000558d3f9c8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 2\n    }\n    if n % 100 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpyisxjy_w/tmpyisxjy_w.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae21bc4bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae21b942b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae21b942988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae21b9417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyisxjy_w                        0x000055b8702912c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ae21be37460 __libc_start_main + 245\n6    tmpyisxjy_w                        0x000055b870290ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count: Int = 0\n    for i:=0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpv_yqlmpq.swift:11:11: error: '=' must have consistent whitespace on both sides\n    for i:=0; i < n; i++ {\n          ^\n            \n/tmp/tmpv_yqlmpq.swift:11:11: error: expected type\n    for i:=0; i < n; i++ {\n          ^\n           <#type#>\n/tmp/tmpv_yqlmpq.swift:11:11: error: expected 'in' after for-each pattern\n    for i:=0; i < n; i++ {\n          ^\n/tmp/tmpv_yqlmpq.swift:11:11: error: expected Sequence expression for for-each loop\n    for i:=0; i < n; i++ {\n          ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    return 3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmp_a_raua0/tmp_a_raua0.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aefb3adac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aefb37d1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aefb37d1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aefb37d07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_a_raua0                        0x0000559857ea92c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aefb3cc6460 __libc_start_main + 245\n6    tmp_a_raua0                        0x0000559857ea8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 2\n    }\n    if n % 100 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpyisxjy_w/tmpyisxjy_w.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae21bc4bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae21b942b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae21b942988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae21b9417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyisxjy_w                        0x000055b8702912c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ae21be37460 __libc_start_main + 245\n6    tmpyisxjy_w                        0x000055b870290ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 2\n    }\n    if n % 100 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpyisxjy_w/tmpyisxjy_w.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae21bc4bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae21b942b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae21b942988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae21b9417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyisxjy_w                        0x000055b8702912c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ae21be37460 __libc_start_main + 245\n6    tmpyisxjy_w                        0x000055b870290ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 2\n    }\n    if n % 100 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpyisxjy_w/tmpyisxjy_w.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae21bc4bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae21b942b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae21b942988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae21b9417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyisxjy_w                        0x000055b8702912c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ae21be37460 __libc_start_main + 245\n6    tmpyisxjy_w                        0x000055b870290ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    count := 0\n    for i := 0; i < n; i += 11 {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpg7w5uo56.swift:14:10: error: consecutive statements on a line must be separated by ';'\n    count := 0\n         ^\n         ;\n/tmp/tmpg7w5uo56.swift:14:11: error: expected expression\n    count := 0\n          ^\n/tmp/tmpg7w5uo56.swift:15:12: error: expected type\n    for i := 0; i < n; i += 11 {\n           ^\n            <#type#>\n/tmp/tmpg7w5uo56.swift:15:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpg7w5uo56.swift:15:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpg7w5uo56.swift:14:5: error: cannot find 'count' in scope\n    count := 0\n    ^~~~~\n/tmp/tmpg7w5uo56.swift:20:12: error: cannot find 'count' in scope\n    return count\n           ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 3\n    } else if n % 3 == 0 {\n        return 1\n    } else if n % 5 == 0 {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpnxwshuag/tmpnxwshuag.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aef808cdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aef805c4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aef805c4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aef805c37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnxwshuag                        0x0000563b23d5e248 <unavailable> + 4680\n5    libc.so.6                          0x00002aef80ab9460 __libc_start_main + 245\n6    tmpnxwshuag                        0x0000563b23d5def9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    count := 0\n    for i := 0; i < n; i += 11 {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpg7w5uo56.swift:14:10: error: consecutive statements on a line must be separated by ';'\n    count := 0\n         ^\n         ;\n/tmp/tmpg7w5uo56.swift:14:11: error: expected expression\n    count := 0\n          ^\n/tmp/tmpg7w5uo56.swift:15:12: error: expected type\n    for i := 0; i < n; i += 11 {\n           ^\n            <#type#>\n/tmp/tmpg7w5uo56.swift:15:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpg7w5uo56.swift:15:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpg7w5uo56.swift:14:5: error: cannot find 'count' in scope\n    count := 0\n    ^~~~~\n/tmp/tmpg7w5uo56.swift:20:12: error: cannot find 'count' in scope\n    return count\n           ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    if n % 5 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpi4glxzlk/tmpi4glxzlk.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1149b7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1149876b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1149876988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b11498757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4glxzlk                        0x000055deb17732c3 <unavailable> + 4803\n5    libc.so.6                          0x00002b1149d6b460 __libc_start_main + 245\n6    tmpi4glxzlk                        0x000055deb1772ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    count := 0\n    for i := 0; i < n; i += 11 {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpg7w5uo56.swift:14:10: error: consecutive statements on a line must be separated by ';'\n    count := 0\n         ^\n         ;\n/tmp/tmpg7w5uo56.swift:14:11: error: expected expression\n    count := 0\n          ^\n/tmp/tmpg7w5uo56.swift:15:12: error: expected type\n    for i := 0; i < n; i += 11 {\n           ^\n            <#type#>\n/tmp/tmpg7w5uo56.swift:15:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpg7w5uo56.swift:15:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i += 11 {\n           ^\n/tmp/tmpg7w5uo56.swift:14:5: error: cannot find 'count' in scope\n    count := 0\n    ^~~~~\n/tmp/tmpg7w5uo56.swift:20:12: error: cannot find 'count' in scope\n    return count\n           ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 3\n    } else if n % 3 == 0 {\n        return 1\n    } else if n % 5 == 0 {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpnxwshuag/tmpnxwshuag.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aef808cdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aef805c4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aef805c4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aef805c37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnxwshuag                        0x0000563b23d5e248 <unavailable> + 4680\n5    libc.so.6                          0x00002aef80ab9460 __libc_start_main + 245\n6    tmpnxwshuag                        0x0000563b23d5def9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmp0lz0akqz.swift:107:1: error: missing return in global function expected to return 'Int'\n}\n^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 2\n    }\n    if n % 100 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpyisxjy_w/tmpyisxjy_w.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae21bc4bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae21b942b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae21b942988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae21b9417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyisxjy_w                        0x000055b8702912c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ae21be37460 __libc_start_main + 245\n6    tmpyisxjy_w                        0x000055b870290ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 2\n    }\n    if n % 5 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpi4glxzlk/tmpi4glxzlk.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1149b7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1149876b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1149876988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b11498757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4glxzlk                        0x000055deb17732c3 <unavailable> + 4803\n5    libc.so.6                          0x00002b1149d6b460 __libc_start_main + 245\n6    tmpi4glxzlk                        0x000055deb1772ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 0 {\n        return 2\n    }\n    if n % 100 == 0 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpyisxjy_w/tmpyisxjy_w.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae21bc4bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae21b942b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae21b942988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae21b9417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyisxjy_w                        0x000055b8702912c3 <unavailable> + 4803\n5    libc.so.6                          0x00002ae21be37460 __libc_start_main + 245\n6    tmpyisxjy_w                        0x000055b870290ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    \n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpldnsalx8.swift:15:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpldnsalx8.swift:15:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpldnsalx8.swift:15:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    }\n    if n % 3 == 0 {\n        return 1\n    }\n    if n % 5 == 0 {\n        return 1\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpm7ph7etk/tmpm7ph7etk.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b023ed8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b023ea82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b023ea82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b023ea817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7ph7etk                        0x0000562edd659248 <unavailable> + 4680\n5    libc.so.6                          0x00002b023ef77460 __libc_start_main + 245\n6    tmpm7ph7etk                        0x0000562edd658ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 1\n    }\n    if n % 100 == 13 {\n        return 1\n    }\n    return 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpe0w2qc1u/tmpe0w2qc1u.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aee9893ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aee98635b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aee98635988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aee986347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe0w2qc1u                        0x0000558d3f9c92c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aee98b2a460 __libc_start_main + 245\n6    tmpe0w2qc1u                        0x0000558d3f9c8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    var count = 0\n    for i := 0; i < n; i++ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "/tmp/tmpoi3fvudg.swift:11:12: error: expected type\n    for i := 0; i < n; i++ {\n           ^\n            <#type#>\n/tmp/tmpoi3fvudg.swift:11:12: error: expected 'in' after for-each pattern\n    for i := 0; i < n; i++ {\n           ^\n/tmp/tmpoi3fvudg.swift:11:12: error: expected Sequence expression for for-each loop\n    for i := 0; i < n; i++ {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n < 100 {\n        return 0\n    }\n    if n % 100 == 0 {\n        return 1\n    }\n    if n % 100 == 11 {\n        return 2\n    }\n    if n % 100 == 13 {\n        return 3\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293099,
      "stdout": "",
      "stderr": "tmpl0ynlia3/tmpl0ynlia3.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeaa4d7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeaa4a73b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeaa4a73988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeaa4a727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl0ynlia3                        0x000055a14aa7f2c3 <unavailable> + 4803\n5    libc.so.6                          0x00002aeaa4f68460 __libc_start_main + 245\n6    tmpl0ynlia3                        0x000055a14aa7eef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n/// >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n: Int) -> Int {\n    if n % 15 == 0 {\n        return 1\n    } else if n % 3 == 0 {\n        return 2\n    } else if n % 5 == 0 {\n        return 3\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)",
      "timestamp": 1664293100,
      "stdout": "",
      "stderr": "tmpa3lpmic2/tmpa3lpmic2.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab864f3dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab864c34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab864c34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab864c337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3lpmic2                        0x000055e3749df248 <unavailable> + 4680\n5    libc.so.6                          0x00002ab865129460 __libc_start_main + 245\n6    tmpa3lpmic2                        0x000055e3749deef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
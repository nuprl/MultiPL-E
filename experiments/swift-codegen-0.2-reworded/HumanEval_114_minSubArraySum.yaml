name: HumanEval_114_minSubArraySum
language: swift
prompt: "\n/// Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n/// of nums.\n/// Example\n/// >>> minSubArraySum(nums: [2, 3, 4, 1,\
  \ 2, 4])\n/// 1\n/// >>> minSubArraySum(nums: [-1, -2, -3])\n/// -6\nfunc minSubArraySum(nums:\
  \ [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(minSubArraySum(nums: [2, 3, 4, 1, 2, 4])\
  \ == 1)\nassert(minSubArraySum(nums: [-1, -2, -3]) == -6)\nassert(minSubArraySum(nums:\
  \ [-1, -2, -3, 2, -10]) == -14)\nassert(minSubArraySum(nums: [-9999999999999999])\
  \ == -9999999999999999)\nassert(minSubArraySum(nums: [0, 10, 20, 1000000]) == 0)\n\
  assert(minSubArraySum(nums: [-1, -2, -3, 10, -5]) == -6)\nassert(minSubArraySum(nums:\
  \ [100, -1, -2, -3, 10, -5]) == -6)\nassert(minSubArraySum(nums: [10, 11, 13, 8,\
  \ 3, 4]) == 3)\nassert(minSubArraySum(nums: [100, -33, 32, -1, 0, -2]) == -33)\n\
  assert(minSubArraySum(nums: [-10]) == -10)\nassert(minSubArraySum(nums: [7]) ==\
  \ 7)\nassert(minSubArraySum(nums: [1, -1]) == -1)"
completions: ["  var minSum = nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum\
    \ = nums[i] + min(minSum, nums[i] + minSubArraySum(nums[i+1:]))\n  }\n  return\
    \ minSum", "  var sum = 0\n  for i := 0; i < len(nums); i++ {\n    sum += nums[i]\n\
    \    if i > 0 && sum < 0 {\n      sum = 0\n    }\n  }\n  return sum", "  var minSum\
    \ = nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum = nums[i] + minSum\n\
    \  }\n  return minSum", "    if len(nums) == 0 {\n        return 0\n    }\n  \
    \  \n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n        min = min\
    \ + nums[i]\n    }\n    \n    for i := 0; i < len(nums) - 1; i++ {\n        for\
    \ j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j] < min {\n\
    \                min = nums[i] + nums[j]\n            }\n        }\n    }\n  \
    \  \n    return min", "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  for i :=\
    \ 0; i < len(nums) - 1; i++ {\n    for j := i + 1; j < len(nums); j++ {\n    \
    \  if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n      }\n  \
    \  }\n  }\n  return min", "    if len(nums) == 0 {\n        return 0\n    }\n\
    \    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n        min = min +\
    \ nums[i]\n    }\n    for i := 1; i < len(nums); i++ {\n        min = min + nums[i]\n\
    \        for j := i + 1; j < len(nums); j++ {\n            min = min + nums[j]\n\
    \            if min < nums[i] + nums[j] {\n                min = nums[i] + nums[j]\n\
    \            }\n        }\n    }\n    return min", '    ', "    var minSum = nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    return minSum", "    var minSum = nums[0]\n    for i :=\
    \ 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n \
    \   }\n    return minSum", '    ', "  min := nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    min = nums[i] + min\n  }\n  return min", "  var min = nums[0]\n \
    \ for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  return min",
  "  if len(nums) == 0 {\n    return 0\n  }\n  if len(nums) == 1 {\n    return nums[0]\n\
    \  }\n  min := nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n\
    \    if min < 0 {\n      min = 0\n    }\n  }\n  return min", "  if len(nums) ==\
    \ 0 {\n    return 0\n  }\n  min := nums[0]\n  for i := 1; i < len(nums); i++ {\n\
    \    min = min + nums[i]\n  }\n  for i := 0; i < len(nums) - 1; i++ {\n    for\
    \ j := i + 1; j < len(nums); j++ {\n      if nums[i] + nums[j] < min {\n     \
    \   min = nums[i] + nums[j]\n      }\n    }\n  }\n  return min", "  var min =\
    \ nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n\
    \  for i := 0; i < len(nums) - 1; i++ {\n    for j := i + 1; j < len(nums); j++\
    \ {\n      if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n   \
    \   }\n    }\n  }\n  return min", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n     \
    \   min = min + nums[i]\n    }\n    \n    for i := 1; i < len(nums); i++ {\n \
    \       for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j]\
    \ < min {\n                min = nums[i] + nums[j]\n            }\n        }\n\
    \    }\n    \n    return min", "    var minSum = nums[0]\n    for i := 1; i <\
    \ len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n \
    \   return minSum", "    var min = nums[0]\n    for i := 1; i < len(nums); i++\
    \ {\n        min = min + nums[i]\n        if min < 0 {\n            min = 0\n\
    \        }\n    }\n    return min", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum", " \
    \   var min = nums[0]\n    for i := 1; i < len(nums); i++ {\n        min = min\
    \ + nums[i]\n        if min < 0 {\n            min = 0\n        }\n    }\n   \
    \ return min", "    var min = nums[0]\n    for i := 1; i < len(nums); i++ {\n\
    \        min = min + nums[i]\n        if min < 0 {\n            min = 0\n    \
    \    }\n    }\n    return min", "  if len(nums) == 0 {\n    return 0\n  }\n  \n\
    \  minSum := nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum = min(minSum\
    \ + nums[i], nums[i])\n  }\n  return minSum", "  var min = nums[0]\n  for i :=\
    \ 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  return min", "  var\
    \ min = nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n\
    \    if nums[i] < 0 {\n      min = min - nums[i]\n    }\n  }\n  return min", " \
    \ var min = nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n\
    \    if nums[i] < 0 {\n      min = min - nums[i]\n    }\n  }\n  return min", " \
    \ if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n  for i := 1; i <\
    \ len(nums); i++ {\n    min = min + nums[i]\n  }\n  for i := 1; i < len(nums);\
    \ i++ {\n    for j := i + 1; j < len(nums); j++ {\n      if nums[i] + nums[j]\
    \ < min {\n        min = nums[i] + nums[j]\n      }\n    }\n  }\n  return min",
  "    var minSum = nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    return minSum", "  var minSum =\
    \ nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum = nums[i] + min(minSum,\
    \ nums[i] + minSubArraySum(nums[i+1:]));\n  }\n  return minSum", "    var min\
    \ = nums[0]\n    for i := 1; i < len(nums); i++ {\n        min = min + nums[i]\n\
    \        if min < 0 {\n            min = 0\n        }\n    }\n    return min",
  '    ', "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n  for i :=\
    \ 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  for i := 1; i < len(nums);\
    \ i++ {\n    for j := i + 1; j < len(nums); j++ {\n      if nums[i] + nums[j]\
    \ < min {\n        min = nums[i] + nums[j]\n      }\n    }\n  }\n  return min",
  '    ', "  var min = nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min\
    \ + nums[i]\n    if nums[i] > 0 {\n      min = min + nums[i]\n    }\n  }\n  return\
    \ min", "  if len(nums) == 0 {\n    return 0\n  }\n  if len(nums) == 1 {\n   \
    \ return nums[0]\n  }\n  min := nums[0]\n  for i := 1; i < len(nums); i++ {\n\
    \    min = min + nums[i]\n    if min < 0 {\n      min = 0\n    }\n  }\n  return\
    \ min", "    var min, sum int\n    for i := 0; i < len(nums); i++ {\n        sum\
    \ += nums[i]\n        if min == 0 || sum < min {\n            min = sum\n    \
    \    }\n        if sum < 0 {\n            sum = 0\n        }\n    }\n    return\
    \ min", '    ', "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  for i :=\
    \ 0; i < len(nums) - 1; i++ {\n    for j := i + 1; j < len(nums); j++ {\n    \
    \  if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n      }\n  \
    \  }\n  }\n  return min", '    ', '    ', "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n       \
    \ min = min + nums[i]\n        if min < 0 {\n            min = 0\n        }\n\
    \    }\n    return min", "  var minSum = nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    minSum = nums[i] + min(minSum, nums[i] + minSubArraySum(nums[i+1:]))\n\
    \  }\n  return minSum", "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  for i :=\
    \ 0; i < len(nums); i++ {\n    if i == 0 {\n      continue\n    }\n    if nums[i]\
    \ < min {\n      min = nums[i]\n    } else {\n      min = min - nums[i]\n    }\n\
    \  }\n  return min", "    if len(nums) == 0 {\n        return 0\n    }\n    \n\
    \    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum =\
    \ min(minSum + nums[i], nums[i])\n    }\n    return minSum", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        min = min + nums[i]\n    }\n    \n    for i := 0;\
    \ i < len(nums) - 1; i++ {\n        for j := i + 1; j < len(nums); j++ {\n   \
    \         if nums[i] + nums[j] < min {\n                min = nums[i] + nums[j]\n\
    \            }\n        }\n    }\n    \n    return min", "  var min = nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  return min",
  "  var min = nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n\
    \  }\n  return min", "  var min = nums[0]\n  for i := 1; i < len(nums); i++ {\n\
    \    min = min + nums[i]\n    if min < 0 {\n      min = 0\n    }\n  }\n  return\
    \ min", '    ', "  var minSum = nums[0]\n  for i := 1; i < len(nums); i++ {\n\
    \    minSum = min(minSum + nums[i], nums[i])\n  }\n  return minSum", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    min := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = min + nums[i]\n        if min < 0 {\n            min =\
    \ 0\n        }\n    }\n    return min", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n \
    \       min = nums[i] + min\n    }\n    \n    for i := 1; i < len(nums); i++ {\n\
    \        for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j]\
    \ < min {\n                min = nums[i] + nums[j]\n            }\n        }\n\
    \    }\n    \n    return min", '    ', "  if len(nums) == 0 {\n    return 0\n\
    \  }\n  min := nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n\
    \  }\n  for i := 0; i < len(nums) - 1; i++ {\n    for j := i + 1; j < len(nums);\
    \ j++ {\n      if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n\
    \      }\n    }\n  }\n  return min", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n\
    \        minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum", " \
    \ if len(nums) == 0 {\n    return 0\n  }\n  \n  var min = nums[0]\n  var sum =\
    \ nums[0]\n  \n  for i := 1; i < len(nums); i++ {\n    sum += nums[i]\n    if\
    \ sum < min {\n      min = sum\n    }\n  }\n  \n  for i := 1; i < len(nums); i++\
    \ {\n    sum -= nums[i-1]\n    if sum < min {\n      min = sum\n    }\n  }\n \
    \ \n  return min", '    ', "  if len(nums) == 0 {\n    return 0\n  }\n  min :=\
    \ nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n\
    \  for i := 0; i < len(nums) - 1; i++ {\n    for j := i + 1; j < len(nums); j++\
    \ {\n      if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n   \
    \   }\n    }\n  }\n  return min", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n     \
    \   min = nums[i] + min\n    }\n    \n    for i := 0; i < len(nums); i++ {\n \
    \       if nums[i] < min {\n            min = nums[i]\n        }\n    }\n    \n\
    \    return min", "  var minSum = nums[0]\n  for i := 1; i < len(nums); i++ {\n\
    \    minSum = nums[i] + min(minSum, nums[i] + minSubArraySum(nums[i+1:]))\n  }\n\
    \  return minSum", "  var min = nums[0]\n  for i := 1; i < len(nums); i++ {\n\
    \    min = min + nums[i]\n  }\n  for i := 0; i < len(nums) - 1; i++ {\n    for\
    \ j := i + 1; j < len(nums); j++ {\n      if nums[i] + nums[j] < min {\n     \
    \   min = nums[i] + nums[j]\n      }\n    }\n  }\n  return min", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    return minSum", "  if len(nums) == 0 {\n    return 0\n  }\n  \n  min := nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  \n  for i\
    \ := 1; i < len(nums); i++ {\n    for j := i + 1; j < len(nums); j++ {\n     \
    \ if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n      }\n   \
    \ }\n  }\n  \n  return min", "  if len(nums) == 0 {\n    return 0\n  }\n  \n \
    \ min := nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n\
    \  }\n  \n  for i := 0; i < len(nums) - 1; i++ {\n    for j := i + 1; j < len(nums);\
    \ j++ {\n      if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n\
    \      }\n    }\n  }\n  \n  return min", "  var minSum = nums[0]\n  for i := 1;\
    \ i < len(nums); i++ {\n    minSum = nums[i] + minSum\n  }\n  for i := 0; i <\
    \ len(nums); i++ {\n    for j := i + 1; j < len(nums); j++ {\n      if nums[i]\
    \ + nums[j] < minSum {\n        minSum = nums[i] + nums[j]\n      }\n    }\n \
    \ }\n  return minSum", "    if len(nums) == 0 {\n        return 0\n    }\n   \
    \ \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    return minSum", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        min = min + nums[i]\n    }\n    \n    for i := 0;\
    \ i < len(nums) - 1; i++ {\n        for j := i + 1; j < len(nums); j++ {\n   \
    \         if nums[i] + nums[j] < min {\n                min = nums[i] + nums[j]\n\
    \            }\n        }\n    }\n    \n    return min", "  var min = nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  return min",
  "  var sum = 0\n  var min = 0\n  for i := 0; i < len(nums); i++ {\n    sum += nums[i]\n\
    \    if i == 0 {\n      min = sum\n    } else if sum < min {\n      min = sum\n\
    \    }\n  }\n  return min", '    ', "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n     \
    \   min = min + nums[i]\n    }\n    \n    for i := 0; i < len(nums) - 1; i++ {\n\
    \        for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j]\
    \ < min {\n                min = nums[i] + nums[j]\n            }\n        }\n\
    \    }\n    \n    return min", "  if len(nums) == 0 {\n    return 0\n  }\n  \n\
    \  minSum := nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum = min(minSum\
    \ + nums[i], nums[i])\n  }\n  return minSum", "    var min, sum int\n    for i\
    \ := 0; i < len(nums); i++ {\n        sum += nums[i]\n        if min > sum {\n\
    \            min = sum\n        }\n        if i < len(nums) - 1 {\n          \
    \  sum -= nums[i]\n        }\n    }\n    return min", "    var min = nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        min = nums[i] + min\n    }\n  \
    \  return min", "  var min = nums[0]\n  for i := 1; i < len(nums); i++ {\n   \
    \ min = nums[i] + min\n  }\n  return min", "  var min = nums[0]\n  for i := 1;\
    \ i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  return min", '    ', " \
    \   var sum = 0\n    for i := 0; i < len(nums); i++ {\n        sum += nums[i]\n\
    \        if sum < 0 {\n            sum = 0\n        }\n    }\n    return sum",
  "    if len(nums) == 0 {\n        return 0\n    }\n    if len(nums) == 1 {\n   \
    \     return nums[0]\n    }\n    min := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = min + nums[i]\n        if min < nums[i] {\n           \
    \ min = nums[i]\n        }\n    }\n    return min", "    if len(nums) == 0 {\n\
    \        return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = min + nums[i]\n    }\n    \n    for i := 0; i < len(nums)\
    \ - 1; i++ {\n        for j := i + 1; j < len(nums); j++ {\n            if nums[i]\
    \ + nums[j] < min {\n                min = nums[i] + nums[j]\n            }\n\
    \        }\n    }\n    \n    return min", '    ', "    var min = nums[0]\n   \
    \ for i := 1; i < len(nums); i++ {\n        min = min + nums[i]\n        if min\
    \ < 0 {\n            min = nums[i]\n        }\n    }\n    return min", "  var\
    \ min = nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n\
    \    if nums[i] < 0 {\n      min = min - nums[i]\n    }\n  }\n  return min", " \
    \   var min = nums[0]\n    for i := 1; i < len(nums); i++ {\n        min = nums[i]\
    \ + min\n    }\n    return min", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum", " \
    \   if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    return minSum", '    ', "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for\
    \ i := 1; i < len(nums); i++ {\n        min = nums[i] + min\n    }\n    for i\
    \ := 1; i < len(nums); i++ {\n        for j := i + 1; j < len(nums); j++ {\n \
    \           if nums[i] + nums[j] < min {\n                min = nums[i] + nums[j]\n\
    \            }\n        }\n    }\n    return min", '    ', "  if len(nums) ==\
    \ 0 {\n    return 0\n  }\n  min := nums[0]\n  for i := 1; i < len(nums); i++ {\n\
    \    min = min + nums[i]\n  }\n  for i := 0; i < len(nums) - 1; i++ {\n    for\
    \ j := i + 1; j < len(nums); j++ {\n      if nums[i] + nums[j] < min {\n     \
    \   min = nums[i] + nums[j]\n      }\n    }\n  }\n  return min", "    var minSum\
    \ = nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    return minSum", "    if len(nums) == 0 {\n \
    \       return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum",
  "    if len(nums) == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n  \
    \  for i := 1; i < len(nums); i++ {\n        min = min + nums[i]\n        if min\
    \ < 0 {\n            min = 0\n        }\n    }\n    \n    for i := 0; i < len(nums);\
    \ i++ {\n        if i == 0 {\n            continue\n        }\n        \n    \
    \    if nums[i] < 0 {\n            min = min + nums[i]\n        } else {\n   \
    \         min = min + nums[i] - nums[i-1]\n        }\n    }\n    \n    return\
    \ min", "    var minSum = nums[0]\n    for i := 1; i < len(nums); i++ {\n    \
    \    minSum = nums[i] + minSum\n        if minSum < 0 {\n            minSum =\
    \ 0\n        }\n    }\n    return minSum", "  if len(nums) == 0 {\n    return\
    \ 0\n  }\n  minSum := nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum\
    \ = nums[i] + minSum\n  }\n  for i := 0; i < len(nums) - 1; i++ {\n    for j :=\
    \ i + 1; j < len(nums); j++ {\n      if nums[i] + nums[j] < minSum {\n       \
    \ minSum = nums[i] + nums[j]\n      }\n    }\n  }\n  return minSum", '    ', " \
    \ if len(nums) == 0 {\n    return 0\n  }\n  \n  min := nums[0]\n  for i := 1;\
    \ i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  \n  for i := 1; i < len(nums);\
    \ i++ {\n    if nums[i] < 0 {\n      min = min - nums[i]\n    } else {\n     \
    \ min = min + nums[i]\n    }\n  }\n  \n  return min", "    if len(nums) == 0 {\n\
    \        return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = min + nums[i]\n    }\n    \n    for i := 0; i < len(nums)\
    \ - 1; i++ {\n        for j := i + 1; j < len(nums); j++ {\n            if nums[i]\
    \ + nums[j] < min {\n                min = nums[i] + nums[j]\n            }\n\
    \        }\n    }\n    \n    return min", "  if len(nums) == 0 {\n    return 0\n\
    \  }\n  min := nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = nums[i]\
    \ + min\n  }\n  for i := 0; i < len(nums) - 1; i++ {\n    min = nums[i] + min\n\
    \  }\n  return min", "    var min = nums[0]\n    for i := 1; i < len(nums); i++\
    \ {\n        min = nums[i] + min\n    }\n    return min", "  var min = nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  return min",
  "    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] + minSum\n   \
    \ }\n    \n    for i := 1; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] + nums[j] < minSum {\n                minSum =\
    \ nums[i] + nums[j]\n            }\n        }\n    }\n    \n    return minSum",
  "    if len(nums) == 0 {\n        return 0\n    }\n    minSum := nums[0]\n    for\
    \ i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n\
    \    }\n    return minSum", "    var minSum = nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = nums[i] + min(minSum, nums[i] + minSubArraySum(nums[i+1:]))\n\
    \    }\n    return minSum", "  var min = nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    min = nums[i] + min\n  }\n  return min", "    var min, sum int\n\
    \    for i := 0; i < len(nums); i++ {\n        sum += nums[i]\n        if min\
    \ == 0 || sum < min {\n            min = sum\n        }\n    }\n    return min",
  '    ', "    var min = nums[0]\n    for i := 1; i < len(nums); i++ {\n        min\
    \ = min + nums[i]\n        if min < 0 {\n            min = 0\n        }\n    }\n\
    \    return min", "    var min = nums[0]\n    for i := 1; i < len(nums); i++ {\n\
    \        min = nums[i] + min\n    }\n    return min", "  var min = nums[0]\n \
    \ for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  return min",
  "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    min = min + nums[i]\n  }\n  for i := 0; i < len(nums); i++ {\n  \
    \  if i == 0 {\n      continue\n    }\n    if nums[i] < min {\n      min = nums[i]\n\
    \    } else {\n      min = min - nums[i]\n    }\n  }\n  return min", "  var min\
    \ = nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n\
    \  return min", "    var min, sum int\n    for i := 0; i < len(nums); i++ {\n\
    \        if nums[i] < 0 {\n            sum -= nums[i]\n        } else {\n    \
    \        sum += nums[i]\n        }\n        if min == 0 || sum < min {\n     \
    \       min = sum\n        }\n    }\n    return min", "  var minSum = nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    minSum = min(minSum + nums[i], nums[i])\n\
    \  }\n  return minSum", "    var min = nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = min + nums[i]\n        if nums[i] < 0 {\n            min\
    \ = min - nums[i]\n        }\n    }\n    return min", "    var minSum = nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    return minSum", '    ', "  var minSum = nums[0]\n  for\
    \ i := 1; i < len(nums); i++ {\n    minSum = nums[i] + min(minSum, nums[i] + minSubArraySum(nums[i+1:]))\n\
    \  }\n  return minSum", "    if len(nums) == 0 {\n        return 0\n    }\n  \
    \  \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    return minSum", "  var min = nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  return min",
  "    var min = nums[0]\n    for i := 1; i < len(nums); i++ {\n        min = nums[i]\
    \ + min\n    }\n    return min", '    ', "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n\
    \        minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum", " \
    \ var minSum = nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum = min(minSum\
    \ + nums[i], nums[i])\n  }\n  return minSum", "    var minSum = nums[0]\n    for\
    \ i := 1; i < len(nums); i++ {\n        minSum = nums[i] + min(minSum, nums[i]\
    \ + minSubArraySum(nums[i+1:]))\n    }\n    return minSum", "    var min = nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        min = min + nums[i]\n        if\
    \ min < 0 {\n            min = 0\n        }\n    }\n    return min", '    ', " \
    \   if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum", "  var minSum = nums[0]\n  for i\
    \ := 1; i < len(nums); i++ {\n    minSum = min(minSum + nums[i], nums[i])\n  }\n\
    \  return minSum", "    var minSum = nums[0]\n    for i := 1; i < len(nums); i++\
    \ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum",
  "  if len(nums) == 0 {\n    return 0\n  }\n  \n  min := nums[0]\n  for i := 1; i\
    \ < len(nums); i++ {\n    min = nums[i] + min\n  }\n  \n  for i := 0; i < len(nums);\
    \ i++ {\n    if nums[i] < min {\n      min = nums[i]\n    }\n  }\n  \n  return\
    \ min", "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n  for i :=\
    \ 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  for i := 1; i < len(nums);\
    \ i++ {\n    min = nums[i] + min\n    if min < 0 {\n      min = 0\n    }\n  }\n\
    \  return min", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    return minSum", "  if len(nums) == 0 {\n   \
    \ return 0\n  }\n  \n  min := nums[0]\n  for i := 1; i < len(nums); i++ {\n  \
    \  min = min + nums[i]\n  }\n  \n  for i := 0; i < len(nums); i++ {\n    if nums[i]\
    \ < 0 {\n      min = min - nums[i]\n    } else {\n      min = min + nums[i]\n\
    \    }\n  }\n  \n  return min", "  if len(nums) == 0 {\n    return 0\n  }\n  min\
    \ := nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n\
    \  for i := 1; i < len(nums); i++ {\n    for j := i + 1; j < len(nums); j++ {\n\
    \      if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n      }\n\
    \    }\n  }\n  return min", "    var min = nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = nums[i] + min\n    }\n    return min", "  var min = nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n  return min",
  "  var minSum = nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum = nums[i]\
    \ + min(minSum, nums[i] + minSubArraySum(nums[i+1:]))\n  }\n  return minSum",
  "  if len(nums) == 0 {\n    return 0\n  }\n  minSum := nums[0]\n  for i := 1; i\
    \ < len(nums); i++ {\n    minSum = min(minSum + nums[i], nums[i])\n  }\n  return\
    \ minSum", "  var minSum = nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum\
    \ = nums[i] + min(minSum, nums[i] + minSubArraySum(nums[i+1:]))\n  }\n  return\
    \ minSum", "  var min = nums[0]\n  for i := 1; i < len(nums); i++ {\n    min =\
    \ nums[i] + min\n  }\n  return min", "    var min, sum = nums[0], 0\n    for i\
    \ := 1; i < len(nums); i++ {\n        sum += nums[i]\n        if sum < min {\n\
    \            min = sum\n        }\n    }\n    return min", "    if len(nums) ==\
    \ 0 {\n        return 0\n    }\n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum",
  "  if len(nums) == 0 {\n    return 0\n  }\n  \n  var min = nums[0]\n  var sum =\
    \ 0\n  for i := 0; i < len(nums); i++ {\n    sum += nums[i]\n    if sum < min\
    \ {\n      min = sum\n    }\n  }\n  \n  for i := 0; i < len(nums); i++ {\n   \
    \ if sum - nums[i] < min {\n      min = sum - nums[i]\n    }\n  }\n  \n  return\
    \ min", '    ', "    var min = nums[0]\n    for i := 1; i < len(nums); i++ {\n\
    \        min = nums[i] + min\n        if min < 0 {\n            min = 0\n    \
    \    }\n    }\n    return min", '    ', "  var minSum = nums[0]\n  for i := 1;\
    \ i < len(nums); i++ {\n    minSum = nums[i] + min(minSum, nums[i] + minSubArraySum(nums[i+1:]))\n\
    \  }\n  return minSum", "  if len(nums) == 0 {\n    return 0\n  }\n  \n  minSum\
    \ := nums[0]\n  for i := 1; i < len(nums); i++ {\n    minSum = min(minSum + nums[i],\
    \ nums[i])\n  }\n  return minSum", "  var min = nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    min = nums[i] + min\n  }\n  return min", "    var min = nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        min = min + nums[i]\n        if\
    \ min < 0 {\n            min = 0\n        }\n    }\n    return min", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    return minSum", "  if len(nums) == 0 {\n    return 0\n  }\n  \n  min := nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  \n  for i\
    \ := 0; i < len(nums); i++ {\n    for j := i + 1; j < len(nums); j++ {\n     \
    \ if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n      }\n   \
    \ }\n  }\n  \n  return min", "  var min = nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    min = min + nums[i]\n    if min < 0 {\n      min = 0\n    }\n  }\n\
    \  return min", "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  for i :=\
    \ 0; i < len(nums) - 1; i++ {\n    for j := i + 1; j < len(nums); j++ {\n    \
    \  if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n      }\n  \
    \  }\n  }\n  return min", '    ', "    var minSum = nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    return minSum", "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  for i :=\
    \ 0; i < len(nums) - 1; i++ {\n    for j := i + 1; j < len(nums); j++ {\n    \
    \  if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n      }\n  \
    \  }\n  }\n  return min", "    var min = nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = nums[i] + min\n    }\n    return min", "  if len(nums)\
    \ == 0 {\n    return 0\n  }\n  min := nums[0]\n  for i := 1; i < len(nums); i++\
    \ {\n    min = min + nums[i]\n  }\n  for i := 0; i < len(nums) - 1; i++ {\n  \
    \  for j := i + 1; j < len(nums); j++ {\n      if nums[i] + nums[j] < min {\n\
    \        min = nums[i] + nums[j]\n      }\n    }\n  }\n  return min", '    ',
  "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    min = min + nums[i]\n  }\n  for i := 0; i < len(nums); i++ {\n  \
    \  for j := i + 1; j < len(nums); j++ {\n      if nums[i] + nums[j] < min {\n\
    \        min = nums[i] + nums[j]\n      }\n    }\n  }\n  return min", "    if\
    \ len(nums) == 0 {\n        return 0\n    }\n    minSum := nums[0]\n    for i\
    \ := 1; i < len(nums); i++ {\n        minSum = nums[i] + minSum\n    }\n    for\
    \ i := 0; i < len(nums) - 1; i++ {\n        for j := i + 1; j < len(nums); j++\
    \ {\n            if nums[j] < nums[i] {\n                minSum = nums[j] + minSum\n\
    \            }\n        }\n    }\n    return minSum", "    if len(nums) == 0 {\n\
    \        return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = min + nums[i]\n        if min < 0 {\n            min =\
    \ 0\n        }\n    }\n    \n    for i := 1; i < len(nums); i++ {\n        if\
    \ nums[i] < 0 {\n            min = min + nums[i]\n        } else {\n         \
    \   min = min + nums[i]\n        }\n    }\n    \n    return min", '    ', "  \
    \  if len(nums) == 0 {\n        return 0\n    }\n    if len(nums) == 1 {\n   \
    \     return nums[0]\n    }\n    min := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = min + nums[i]\n        if min < 0 {\n            min =\
    \ 0\n        }\n    }\n    return min", "  min := nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    min = min + nums[i]\n    if nums[i] > 0 {\n      min = min + nums[i]\n\
    \    }\n  }\n  return min", '    ', "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n     \
    \   min = nums[i] + min\n    }\n    \n    for i := 1; i < len(nums); i++ {\n \
    \       for j := i + 1; j < len(nums); j++ {\n            if nums[j] < nums[i]\
    \ {\n                min = nums[j] + min\n            }\n        }\n    }\n  \
    \  \n    return min", "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  for i :=\
    \ 1; i < len(nums); i++ {\n    for j := i + 1; j < len(nums); j++ {\n      if\
    \ nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n      }\n    }\n\
    \  }\n  return min", '    ', "  var min = nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    min = nums[i] + min\n  }\n  return min", "    var min = nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        min = min + nums[i]\n        if\
    \ min < 0 {\n            min = 0\n        }\n    }\n    return min", "  min :=\
    \ nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n\
    \  return min", '    ', "  var minSum = nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    minSum = nums[i] + min(minSum, nums[i] + minSubArraySum(nums[i+1:]))\n\
    \  }\n  return minSum", '    ', "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    nums.sort()\n    \n    var minSum\
    \ = nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum", '    ', "  if len(nums)\
    \ == 0 {\n    return 0\n  }\n  if len(nums) == 1 {\n    return nums[0]\n  }\n\
    \  min := nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n\
    \  }\n  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n    for j :=\
    \ i + 1; j < len(nums); j++ {\n      min = nums[j] + min\n    }\n  }\n  return\
    \ min", "  if len(nums) == 0 {\n    return 0\n  }\n  min := nums[0]\n  for i :=\
    \ 1; i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  for i := 1; i < len(nums);\
    \ i++ {\n    for j := i + 1; j < len(nums); j++ {\n      if nums[i] + nums[j]\
    \ < min {\n        min = nums[i] + nums[j]\n      }\n    }\n  }\n  return min",
  "  var min = nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n\
    \    if nums[i] < 0 {\n      min = min - nums[i]\n    }\n  }\n  return min", " \
    \ var min = nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n\
    \  }\n  return min", "  if len(nums) == 0 {\n    return 0\n  }\n  if len(nums)\
    \ == 1 {\n    return nums[0]\n  }\n  if nums[0] < 0 {\n    return nums[0]\n  }\n\
    \  min := nums[0]\n  for i := 1; i < len(nums); i++ {\n    if nums[i] < 0 {\n\
    \      min = min + nums[i]\n    } else {\n      min = min + nums[i]\n      break\n\
    \    }\n  }\n  for i := 1; i < len(nums); i++ {\n    if nums[i] < 0 {\n      min\
    \ = min + nums[i]\n    } else {\n      min = min + nums[i]\n      break\n    }\n\
    \  }\n  return min", "    // write your code here\n    if len(nums) == 0 {\n \
    \       return 0\n    }\n    min := nums[0]\n    for i := 1; i < len(nums); i++\
    \ {\n        min = min + nums[i]\n    }\n    for i := 0; i < len(nums) - 1; i++\
    \ {\n        for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j]\
    \ < min {\n                min = nums[i] + nums[j]\n            }\n        }\n\
    \    }\n    return min", "    if len(nums) == 0 {\n        return 0\n    }\n \
    \   \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    return minSum", "  if len(nums)\
    \ == 0 {\n    return 0\n  }\n  minSum := nums[0]\n  for i := 1; i < len(nums);\
    \ i++ {\n    minSum = min(minSum + nums[i], nums[i])\n  }\n  return minSum", " \
    \ if len(nums) == 0 {\n    return 0\n  }\n  \n  min := nums[0]\n  for i := 1;\
    \ i < len(nums); i++ {\n    min = min + nums[i]\n  }\n  \n  for i := 0; i < len(nums);\
    \ i++ {\n    if i == 0 {\n      continue\n    }\n    \n    if nums[i] < 0 {\n\
    \      min = min - nums[i]\n    } else {\n      min = min + nums[i]\n    }\n \
    \ }\n  \n  return min", "  var min = nums[0]\n  for i := 1; i < len(nums); i++\
    \ {\n    min = min + nums[i]\n    if nums[i] < 0 {\n      min = min - nums[i]\n\
    \    }\n  }\n  return min", "  if len(nums) == 0 {\n    return 0\n  }\n  min :=\
    \ nums[0]\n  for i := 1; i < len(nums); i++ {\n    min = nums[i] + min\n  }\n\
    \  for i := 1; i < len(nums); i++ {\n    for j := i + 1; j < len(nums); j++ {\n\
    \      if nums[i] + nums[j] < min {\n        min = nums[i] + nums[j]\n      }\n\
    \    }\n  }\n  return min", '    ', "    var min = nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        min = min + nums[i]\n        if min < 0 {\n    \
    \        min = 0\n        }\n    }\n    return min", "  var min = nums[0]\n  for\
    \ i := 1; i < len(nums); i++ {\n    min = min + nums[i]\n    if nums[i] < 0 {\n\
    \      min = min - nums[i]\n    }\n  }\n  return min", "  var minSum = nums[0]\n\
    \  for i := 1; i < len(nums); i++ {\n    minSum = nums[i] + min(minSum, nums[i]\
    \ + minSubArraySum(nums[i+1:]))\n  }\n  return minSum", '    ', "    var sum =\
    \ 0\n    var min = 0\n    for i := 0; i < len(nums); i++ {\n        sum += nums[i]\n\
    \        if min == 0 || sum < min {\n            min = sum\n        }\n      \
    \  if i == len(nums) - 1 {\n            break\n        }\n        sum -= nums[i]\n\
    \    }\n    return min", '    ', '    ', '    ', "    if len(nums) == 0 {\n  \
    \      return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = min + nums[i]\n        if min < 0 {\n            min =\
    \ 0\n        }\n    }\n    \n    for i := 0; i < len(nums) - 1; i++ {\n      \
    \  for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j] < min\
    \ {\n                min = nums[i] + nums[j]\n            }\n        }\n    }\n\
    \    \n    return min", "  var min = nums[0]\n  for i := 1; i < len(nums); i++\
    \ {\n    min = nums[i] + min\n  }\n  return min"]
stop_tokens:
- "\n}"

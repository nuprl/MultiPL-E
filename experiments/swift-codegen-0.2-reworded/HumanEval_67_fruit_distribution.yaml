name: HumanEval_67_fruit_distribution
language: swift
prompt: "\n/// In this task, you will be given a string that represents a number of\
  \ apples and oranges \n/// that are distributed in a basket of fruit this basket\
  \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
  \ the total number of \n/// the oranges and apples and an integer that represent\
  \ the total number of the fruits \n/// in the basket return the number of the mango\
  \ fruits in the basket.\n/// for examble:\n/// >>> fruit_distribution(s: \"5 apples\
  \ and 6 oranges\", n: 19)\n/// 8\n/// >>> fruit_distribution(s: \"0 apples and 1\
  \ oranges\", n: 3)\n/// 2\n/// >>> fruit_distribution(s: \"2 apples and 3 oranges\"\
  , n: 100)\n/// 95\n/// >>> fruit_distribution(s: \"100 apples and 1 oranges\", n:\
  \ 120)\n/// 19\nfunc fruit_distribution(s: String, n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
  , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
  \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
  assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
  \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples\
  \ and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100\
  \ oranges\", n: 120) == 19)"
completions: ['    ', '    ', "    // Write your code here\n    return 0", '    ',
  '    ', "    \n    var apples: Int = 0\n    var oranges: Int = 0\n    var mango:\
    \ Int = 0\n    \n    for _, c := range s {\n        if c == 'a' {\n          \
    \  apples += 1\n        } else if c == 'o' {\n            oranges += 1\n     \
    \   } else if c == 'm' {\n            mango += 1\n        }\n    }\n    \n   \
    \ return mango * (n / (apples + oranges))", '    ', '    ', '    ', '    ', '    ',
  '    ', "    var apples = 0\n    var oranges = 0\n    var mango = 0\n    var total\
    \ = 0\n    for _, v := range s {\n        if v == 'a' {\n            apples +=\
    \ 1\n        } else if v == 'o' {\n            oranges += 1\n        } else if\
    \ v == 'm' {\n            mango += 1\n        }\n    }\n    total = apples + oranges\
    \ + mango\n    if total > n {\n        return mango\n    }\n    return total",
  '    ', '    ', '    ', "    \n    var apples = 0\n    var oranges = 0\n    var\
    \ mango = 0\n    \n    for _, c := range s {\n        if c == 'a' {\n        \
    \    apples += 1\n        } else if c == 'o' {\n            oranges += 1\n   \
    \     } else if c == 'm' {\n            mango += 1\n        }\n    }\n    \n \
    \   return mango * (n / (apples + oranges))", "    // Write your code here\n \
    \   return 0", '    ', '    ', '    ', '    ', '    ', '    ', '    ', '    ',
  '    ', '    ', '    ', '    ', '    ', '    ', '    ', '    ', "    \n    var apples\
    \ = 0\n    var oranges = 0\n    var mango = 0\n    \n    for _, char := range\
    \ s {\n        if char == 'a' {\n            apples += 1\n        } else if char\
    \ == 'o' {\n            oranges += 1\n        } else if char == 'm' {\n      \
    \      mango += 1\n        }\n    }\n    \n    return mango * (n / (apples + oranges))",
  '    ', "    \n    var apples = 0\n    var oranges = 0\n    var mango = 0\n    \n\
    \    for _, char := range s {\n        if char == 'a' {\n            apples +=\
    \ 1\n        } else if char == 'o' {\n            oranges += 1\n        } else\
    \ if char == 'm' {\n            mango += 1\n        }\n    }\n    \n    return\
    \ mango * (n / (apples + oranges))", "    \n    var apples = 0\n    var oranges\
    \ = 0\n    var mango = 0\n    \n    for i := 0; i < len(s); i++ {\n        if\
    \ s[i] == 'a' {\n            apples += 1\n        } else if s[i] == 'o' {\n  \
    \          oranges += 1\n        } else if s[i] == 'm' {\n            mango +=\
    \ 1\n        }\n    }\n    \n    return mango * n / (apples + oranges)", '    ',
  '    ', '    ', '    ', '    ', '    ', "    // Write your code here\n    return\
    \ 0", '    ', '    ', "    // Write your code here\n    return 0", "    // Write\
    \ your code here\n    return 0", '    ', '    ', '    ', '    ', '    ', '    ',
  '    ', '    ', "    // Write your code here\n    return 0", '    ', "    // write\
    \ your code in Java SE 8\n    return 0", '    ', '    ', '    ', '    ', '    ',
  '    ', "    \n    var apples = 0\n    var oranges = 0\n    var mango = 0\n    \n\
    \    for _, char := range s {\n        if char == 'a' {\n            apples +=\
    \ 1\n        } else if char == 'o' {\n            oranges += 1\n        } else\
    \ if char == 'm' {\n            mango += 1\n        }\n    }\n    \n    return\
    \ mango * (n - apples - oranges) / oranges", '    ', '    ', '    ', '    ', '    ',
  '    ', '    ', '    ', '    ', '    ', '    ', '    ', '    ', "    \n    // your\
    \ code goes here\n    \n    return 0", '    ', '    ', '    ', "    \n    var\
    \ apples = 0\n    var oranges = 0\n    var mango = 0\n    \n    for _, c := range\
    \ s {\n        if c == 'a' {\n            apples += 1\n        } else if c ==\
    \ 'o' {\n            oranges += 1\n        } else if c == 'm' {\n            mango\
    \ += 1\n        }\n    }\n    \n    return mango * (n / (apples + oranges))",
  '    ', '    ', "    \n    var apples, oranges, mango = 0, 0, 0\n    \n    for _,\
    \ c := range s {\n        if c == 'a' {\n            apples += 1\n        } else\
    \ if c == 'o' {\n            oranges += 1\n        } else if c == 'm' {\n    \
    \        mango += 1\n        }\n    }\n    \n    return mango * (n / (apples +\
    \ oranges))", '    ', '    ', '    ', '    ', '    ', '    ', '    ', '    ',
  "    \n    var apples: Int = 0\n    var oranges: Int = 0\n    var mango: Int = 0\n\
    \    \n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' {\n         \
    \   apples += 1\n        } else if s[i] == 'o' {\n            oranges += 1\n \
    \       } else if s[i] == 'm' {\n            mango += 1\n        }\n    }\n  \
    \  \n    return mango * (n - apples - oranges) / oranges", '    ', "    \n   \
    \ var apples = 0\n    var oranges = 0\n    var mango = 0\n    \n    for _, c :=\
    \ range s {\n        if c == 'a' {\n            apples += 1\n        } else if\
    \ c == 'o' {\n            oranges += 1\n        } else if c == 'm' {\n       \
    \     mango += 1\n        }\n    }\n    \n    return mango * (n / (apples + oranges))",
  "    // write your code in Go here\n    return 0", '    ', "    \n    var apples\
    \ = 0\n    var oranges = 0\n    var mango = 0\n    \n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'a' {\n            apples += 1\n        } else if\
    \ s[i] == 'o' {\n            oranges += 1\n        } else if s[i] == 'm' {\n \
    \           mango += 1\n        }\n    }\n    \n    return mango * (n - oranges\
    \ - apples) / oranges", '    ', "    // Write your code here\n    return 0", '    ',
  '    ', '    ', '    ', '    ', '    ', '    ', '    ', '    ', "    \n    var apples\
    \ = 0\n    var oranges = 0\n    var mango = 0\n    \n    for _, char := range\
    \ s {\n        if char == 'a' {\n            apples += 1\n        } else if char\
    \ == 'o' {\n            oranges += 1\n        } else if char == 'm' {\n      \
    \      mango += 1\n        }\n    }\n    \n    return mango * (n - apples - oranges)\
    \ / oranges", '    ', '    ', '    ', '    ', '    ', '    ', "    \n    // your\
    \ code here\n    \n    return 0", "    \n    var apples = 0\n    var oranges =\
    \ 0\n    var mango = 0\n    \n    for _, c := range s {\n        if c == 'a' {\n\
    \            apples += 1\n        } else if c == 'o' {\n            oranges +=\
    \ 1\n        } else if c == 'm' {\n            mango += 1\n        }\n    }\n\
    \    \n    return mango * (n - apples - oranges) / oranges", '    ', '    ', '    ',
  '    ', '    ', '    ', "    \n    var apples = 0\n    var oranges = 0\n    var\
    \ mango = 0\n    \n    for _, char := range s {\n        if char == 'a' {\n  \
    \          apples += 1\n        } else if char == 'o' {\n            oranges +=\
    \ 1\n        } else if char == 'm' {\n            mango += 1\n        }\n    }\n\
    \    \n    return mango * (n - apples - oranges) / oranges", "    // Write your\
    \ code here\n    return 0", '    ', '    ', '    ', '    ', '    ', "    \n  \
    \  var apples = 0\n    var oranges = 0\n    var mango = 0\n    \n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'a' {\n            apples += 1\n  \
    \      } else if s[i] == 'o' {\n            oranges += 1\n        } else if s[i]\
    \ == 'm' {\n            mango += 1\n        }\n    }\n    \n    return mango *\
    \ (n - apples - oranges) / oranges", '    ', '    ', '    ', '    ', '    ', '    ',
  '    ', '    ', '    ', '    ', '    ', '    ', '    ', '    ', '    ', "    //\
    \ Write your code here\n    return 0", '    ', '    ', '    ', '    ', "    //\
    \ Write your code here\n    return 0", '    ', '    ', '    ', '    ', "    //\
    \ Write your code here\n    return 0", '    ', '    ', '    ', '    ', '    ',
  '    ', "    // Write your code here\n    return 0", '    ', '    ', "    var apples,\
    \ oranges, mango = 0, 0, 0\n    for _, v := range s.split(\" \") {\n        if\
    \ v == \"apple\" {\n            apples += 1\n        } else if v == \"orange\"\
    \ {\n            oranges += 1\n        } else if v == \"mango\" {\n          \
    \  mango += 1\n        }\n    }\n    return mango * (n / (apples + oranges))",
  '    ', "    \n    var apples = 0\n    var oranges = 0\n    var mango = 0\n    \n\
    \    for _, char := range s {\n        if char == 'a' {\n            apples +=\
    \ 1\n        } else if char == 'o' {\n            oranges += 1\n        } else\
    \ if char == 'm' {\n            mango += 1\n        }\n    }\n    \n    return\
    \ mango * (n - oranges - apples) / (apples + oranges)", "    var apples = 0\n\
    \    var oranges = 0\n    var mango = 0\n    \n    for _, v := range s {\n   \
    \     if v == 'a' {\n            apples += 1\n        } else if v == 'o' {\n \
    \           oranges += 1\n        } else if v == 'm' {\n            mango += 1\n\
    \        }\n    }\n    \n    return mango * (n - oranges - apples) / (apples +\
    \ oranges)", '    ', '    ', '    ', '    ', '    ', '    ', '    ', "    \n \
    \   var apples: Int = 0\n    var oranges: Int = 0\n    var mango: Int = 0\n  \
    \  \n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' {\n           \
    \ apples += 1\n        } else if s[i] == 'o' {\n            oranges += 1\n   \
    \     } else if s[i] == 'm' {\n            mango += 1\n        }\n    }\n    \n\
    \    return mango * (n - apples - oranges) / oranges", "    \n    // your code\
    \ goes here\n    \n    return 0", '    ', '    ', '    ', '    ', '    ', "  \
    \  \n    var apples: Int = 0\n    var oranges: Int = 0\n    var mango: Int = 0\n\
    \    \n    for _, char := range s {\n        if char == 'a' {\n            apples\
    \ += 1\n        } else if char == 'o' {\n            oranges += 1\n        } else\
    \ if char == 'm' {\n            mango += 1\n        }\n    }\n    \n    return\
    \ mango * (n - apples - oranges) / oranges", '    ', "    \n    // your code goes\
    \ here\n    \n    return 0", "    // Write your code here\n    return 0", '    ',
  "    // write your code in Java SE 8\n    return 0", '    ', '    ', "    \n   \
    \ var apples = 0\n    var oranges = 0\n    var mango = 0\n    \n    for i := 0;\
    \ i < len(s); i++ {\n        if s[i] == 'a' {\n            apples += 1\n     \
    \   } else if s[i] == 'o' {\n            oranges += 1\n        } else if s[i]\
    \ == 'm' {\n            mango += 1\n        }\n    }\n    \n    return mango *\
    \ n / (apples + oranges)", '    ', '    ']
stop_tokens:
- "\n}"

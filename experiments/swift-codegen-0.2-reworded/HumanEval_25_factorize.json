{
  "name": "HumanEval_25_factorize",
  "language": "swift",
  "prompt": "\n/// Return array of prime factors of given integer in the order from smallest to largest.\n/// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n/// Input number should be equal to the product of all factors\n/// >>> factorize(n: 8)\n/// [2, 2, 2]\n/// >>> factorize(n: 25)\n/// [5, 5]\n/// >>> factorize(n: 70)\n/// [2, 5, 7]\nfunc factorize(n: Int) -> [Int] {\n",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(factorize(n: 2) == [2])\nassert(factorize(n: 4) == [2, 2])\nassert(factorize(n: 8) == [2, 2, 2])\nassert(factorize(n: 57) == [3, 19])\nassert(factorize(n: 3249) == [3, 3, 19, 19])\nassert(factorize(n: 185193) == [3, 3, 3, 19, 19, 19])\nassert(factorize(n: 20577) == [3, 19, 19, 19])\nassert(factorize(n: 18) == [2, 3, 3])",
  "completions": [
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tfactors := make([][]int, 0)\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, []int{i, n / i})\n\t\t}\n\t}\n\treturn factors",
    "    if n == 1 {\n        return [Int]{1}\n    }\n    if n == 2 {\n        return [Int]{2}\n    }\n    if n == 3 {\n        return [Int]{3}\n    }\n    if n == 4 {\n        return [Int]{2, 2}\n    }\n    if n == 5 {\n        return [Int]{5}\n    }\n    if n == 6 {\n        return [Int]{2, 3}\n    }\n    if n == 7 {\n        return [Int]{7}\n    }\n    if n == 8 {\n        return [Int]{2, 2, 2}\n    }\n    if n == 9 {\n        return [Int]{3, 3}\n    }\n    if n == 10 {\n        return [Int]{5, 2}\n    }\n    if n == 11 {\n        return [Int]{11}\n    }\n    if n == 12 {\n        return [Int]{2, 2, 2, 2}\n    }\n    if n == 13 {\n        return [Int]{13}\n    }\n    if n == 14 {\n        return [Int]{2, 7}\n    }\n    if n == 15 {\n        return [Int]{3, 5}\n    }\n    if n == 16 {\n        return [Int]{2, 2, 2, 2, 2}\n    }\n    if n == 17 {\n        return [Int]{17}\n    }\n    if n == 18 {\n        return [Int]{2, 3, 3}\n    }\n    if n == 19 {\n        return [Int]{19}\n    }\n    if n == 20 {\n        return [Int]{2, 2, 2, 2, 2, 2}\n    }\n    if n == 21 {\n        return [Int]{3, 3, 3}\n    }\n    if n == 22 {\n        return [Int]{2, 7, 2}\n    }\n    if n == 23 {\n        return [Int]{23}\n    }\n    if n == 24 {\n        return [Int]{2, 2, 2, 2, 2,",
    "    var factors = [Int]{}\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tfactors := make([][]int, 0)\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, []int{i, n / i})\n\t\t}\n\t}\n\treturn factors",
    "\tfactors := make([][]int, 0)\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, []int{i, n / i})\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    if n == 1 {\n        return [Int]{1}\n    }\n    factors := [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn = n / i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tfactors := make([][]int, 0)\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, []int{i, n / i})\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tvar factors [Int] = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tfactors := make([][]int, 0)\n\tfor n > 1 {\n\t\tfor i := 2; i < n; i++ {\n\t\t\tif n%i == 0 {\n\t\t\t\tfactors = append(factors, []int{i, n / i})\n\t\t\t\tn /= i\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    if n == 1 {\n        return [Int]{1}\n    }\n    if n == 2 {\n        return [Int]{2}\n    }\n    if n == 3 {\n        return [Int]{3}\n    }\n    if n == 4 {\n        return [Int]{2, 2}\n    }\n    if n == 5 {\n        return [Int]{5}\n    }\n    if n == 6 {\n        return [Int]{2, 3}\n    }\n    if n == 7 {\n        return [Int]{7}\n    }\n    if n == 8 {\n        return [Int]{2, 2, 2}\n    }\n    if n == 9 {\n        return [Int]{3, 3}\n    }\n    if n == 10 {\n        return [Int]{5, 2}\n    }\n    if n == 11 {\n        return [Int]{11}\n    }\n    if n == 12 {\n        return [Int]{2, 2, 2, 2}\n    }\n    if n == 13 {\n        return [Int]{13}\n    }\n    if n == 14 {\n        return [Int]{2, 7}\n    }\n    if n == 15 {\n        return [Int]{3, 5}\n    }\n    if n == 16 {\n        return [Int]{2, 2, 2, 2, 2}\n    }\n    if n == 17 {\n        return [Int]{17}\n    }\n    if n == 18 {\n        return [Int]{2, 3, 3}\n    }\n    if n == 19 {\n        return [Int]{19}\n    }\n    if n == 20 {\n        return [Int]{2, 2, 2, 2, 2, 2}\n    }\n    if n == 21 {\n        return [Int]{3, 3, 7}\n    }\n    if n == 22 {\n        return [Int]{2, 2, 2, 2, 2, 2, 2}\n    }\n    if n == 23 {\n        return [Int]{23}\n    }\n    if n == 24 {\n        return [Int]{2,",
    "\tif n == 1 {\n\t\treturn [Int]{1}\n\t}\n\tfactors := [Int]{}\n\tfor n%2 == 0 {\n\t\tfactors = append(factors, 2)\n\t\tn /= 2\n\t}\n\tfor n%3 == 0 {\n\t\tfactors = append(factors, 3)\n\t\tn /= 3\n\t}\n\tfor n%5 == 0 {\n\t\tfactors = append(factors, 5)\n\t\tn /= 5\n\t}\n\tfor n%7 == 0 {\n\t\tfactors = append(factors, 7)\n\t\tn /= 7\n\t}\n\tfor n%11 == 0 {\n\t\tfactors = append(factors, 11)\n\t\tn /= 11\n\t}\n\tfor n%13 == 0 {\n\t\tfactors = append(factors, 13)\n\t\tn /= 13\n\t}\n\tfor n%17 == 0 {\n\t\tfactors = append(factors, 17)\n\t\tn /= 17\n\t}\n\tfor n%19 == 0 {\n\t\tfactors = append(factors, 19)\n\t\tn /= 19\n\t}\n\tfor n%23 == 0 {\n\t\tfactors = append(factors, 23)\n\t\tn /= 23\n\t}\n\tfor n%29 == 0 {\n\t\tfactors = append(factors, 29)\n\t\tn /= 29\n\t}\n\tfor n%31 == 0 {\n\t\tfactors = append(factors, 31)\n\t\tn /= 31\n\t}\n\tfor n%37 == 0 {\n\t\tfactors = append(factors, 37)\n\t\tn /= 37\n\t}\n\tfor n%41 == 0 {\n\t\tfactors = append(factors, 41)\n\t\tn /= 41\n\t}\n\tfor n%43 == 0 {\n\t\tfactors = append(factors, 43)\n\t\tn /= 43\n\t}\n\tfor n%47 == 0 {\n\t\tfactors = append(factors, 47)\n\t\tn /= 47\n\t}\n\tfor n%53 == 0 {\n\t\tfactors = append(factors, 53)\n\t\tn /= 53\n\t}\n\tfor n",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "    if n == 1 {\n        return [Int]{1}\n    }\n    factors := [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors [Int]\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tif n == 1 {\n\t\treturn [Int]{1}\n\t}\n\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn = n / i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    if n == 1 {\n        return [Int]{}\n    }\n    factors := [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int] = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tif n == 1 {\n\t\treturn [Int]{1}\n\t}\n\tfactors := [Int]{}\n\tfor n%2 == 0 {\n\t\tfactors = append(factors, 2)\n\t\tn /= 2\n\t}\n\tfor n%3 == 0 {\n\t\tfactors = append(factors, 3)\n\t\tn /= 3\n\t}\n\tfor n%5 == 0 {\n\t\tfactors = append(factors, 5)\n\t\tn /= 5\n\t}\n\tfor n%7 == 0 {\n\t\tfactors = append(factors, 7)\n\t\tn /= 7\n\t}\n\tfor n%11 == 0 {\n\t\tfactors = append(factors, 11)\n\t\tn /= 11\n\t}\n\tfor n%13 == 0 {\n\t\tfactors = append(factors, 13)\n\t\tn /= 13\n\t}\n\tfor n%17 == 0 {\n\t\tfactors = append(factors, 17)\n\t\tn /= 17\n\t}\n\tfor n%19 == 0 {\n\t\tfactors = append(factors, 19)\n\t\tn /= 19\n\t}\n\tfor n%23 == 0 {\n\t\tfactors = append(factors, 23)\n\t\tn /= 23\n\t}\n\tfor n%29 == 0 {\n\t\tfactors = append(factors, 29)\n\t\tn /= 29\n\t}\n\tfor n%31 == 0 {\n\t\tfactors = append(factors, 31)\n\t\tn /= 31\n\t}\n\tfor n%37 == 0 {\n\t\tfactors = append(factors, 37)\n\t\tn /= 37\n\t}\n\tfor n%41 == 0 {\n\t\tfactors = append(factors, 41)\n\t\tn /= 41\n\t}\n\tfor n%43 == 0 {\n\t\tfactors = append(factors, 43)\n\t\tn /= 43\n\t}\n\tfor n%47 == 0 {\n\t\tfactors = append(factors, 47)\n\t\tn /= 47\n\t}\n\tfor n%53 == 0 {\n\t\tfactors = append(factors, 53)\n\t\tn /= 53\n\t}\n\tfor n",
    "\tfactors := make([][]int, 0)\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, []int{i, n / i})\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tif n == 1 {\n\t\treturn [Int]{1}\n\t}\n\tfactors := [Int]{}\n\tfor n%2 == 0 {\n\t\tfactors = append(factors, 2)\n\t\tn /= 2\n\t}\n\tfor n%3 == 0 {\n\t\tfactors = append(factors, 3)\n\t\tn /= 3\n\t}\n\tfor n%5 == 0 {\n\t\tfactors = append(factors, 5)\n\t\tn /= 5\n\t}\n\tfor n%7 == 0 {\n\t\tfactors = append(factors, 7)\n\t\tn /= 7\n\t}\n\tfor n%11 == 0 {\n\t\tfactors = append(factors, 11)\n\t\tn /= 11\n\t}\n\tfor n%13 == 0 {\n\t\tfactors = append(factors, 13)\n\t\tn /= 13\n\t}\n\tfor n%17 == 0 {\n\t\tfactors = append(factors, 17)\n\t\tn /= 17\n\t}\n\tfor n%19 == 0 {\n\t\tfactors = append(factors, 19)\n\t\tn /= 19\n\t}\n\tfor n%23 == 0 {\n\t\tfactors = append(factors, 23)\n\t\tn /= 23\n\t}\n\tfor n%29 == 0 {\n\t\tfactors = append(factors, 29)\n\t\tn /= 29\n\t}\n\tfor n%31 == 0 {\n\t\tfactors = append(factors, 31)\n\t\tn /= 31\n\t}\n\tfor n%37 == 0 {\n\t\tfactors = append(factors, 37)\n\t\tn /= 37\n\t}\n\tfor n%41 == 0 {\n\t\tfactors = append(factors, 41)\n\t\tn /= 41\n\t}\n\tfor n%43 == 0 {\n\t\tfactors = append(factors, 43)\n\t\tn /= 43\n\t}\n\tfor n%47 == 0 {\n\t\tfactors = append(factors, 47)\n\t\tn /= 47\n\t}\n\tfor n%53 == 0 {\n\t\tfactors = append(factors, 53)\n\t\tn /= 53\n\t}\n\tfor n",
    "\tvar factors [Int] = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tvar factors [Int] = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn = n / i\n\t\t}\n\t}\n\treturn factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tfactors := make([][]int, 0)\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, []int{i, n / i})\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int] = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int] = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors [Int]\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tif n == 1 {\n\t\treturn [Int]{1}\n\t}\n\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn = n / i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tif n == 1 {\n\t\treturn [Int]{1}\n\t}\n\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tif n == 1 {\n\t\treturn [Int]{1}\n\t}\n\tfactors := [Int]{}\n\tfor n%2 == 0 {\n\t\tfactors = append(factors, 2)\n\t\tn /= 2\n\t}\n\tfor n%3 == 0 {\n\t\tfactors = append(factors, 3)\n\t\tn /= 3\n\t}\n\tfor n%5 == 0 {\n\t\tfactors = append(factors, 5)\n\t\tn /= 5\n\t}\n\tfor n%7 == 0 {\n\t\tfactors = append(factors, 7)\n\t\tn /= 7\n\t}\n\tfor n%11 == 0 {\n\t\tfactors = append(factors, 11)\n\t\tn /= 11\n\t}\n\tfor n%13 == 0 {\n\t\tfactors = append(factors, 13)\n\t\tn /= 13\n\t}\n\tfor n%17 == 0 {\n\t\tfactors = append(factors, 17)\n\t\tn /= 17\n\t}\n\tfor n%19 == 0 {\n\t\tfactors = append(factors, 19)\n\t\tn /= 19\n\t}\n\tfor n%23 == 0 {\n\t\tfactors = append(factors, 23)\n\t\tn /= 23\n\t}\n\tfor n%29 == 0 {\n\t\tfactors = append(factors, 29)\n\t\tn /= 29\n\t}\n\tfor n%31 == 0 {\n\t\tfactors = append(factors, 31)\n\t\tn /= 31\n\t}\n\tfor n%37 == 0 {\n\t\tfactors = append(factors, 37)\n\t\tn /= 37\n\t}\n\tfor n%41 == 0 {\n\t\tfactors = append(factors, 41)\n\t\tn /= 41\n\t}\n\tfor n%43 == 0 {\n\t\tfactors = append(factors, 43)\n\t\tn /= 43\n\t}\n\tfor n%47 == 0 {\n\t\tfactors = append(factors, 47)\n\t\tn /= 47\n\t}\n\tfor n%53 == 0 {\n\t\tfactors = append(factors, 53)\n\t\tn /= 53\n\t}\n\tfor n",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors [Int]\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tfactors := make([][]int, 0)\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, []int{i, n / i})\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors [Int]\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tfactors := make([][]int, 0)\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, []int{i, n / i})\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors [Int] = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors [Int] = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors [Int] = [Int]{}\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tif n == 1 {\n\t\treturn [Int]{1}\n\t}\n\tfactors := [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tif n == 1 {\n\t\treturn [Int]{1}\n\t}\n\tfactors := [Int]{}\n\tfor n%2 == 0 {\n\t\tfactors = append(factors, 2)\n\t\tn /= 2\n\t}\n\tfor n%3 == 0 {\n\t\tfactors = append(factors, 3)\n\t\tn /= 3\n\t}\n\tfor n%5 == 0 {\n\t\tfactors = append(factors, 5)\n\t\tn /= 5\n\t}\n\tfor n%7 == 0 {\n\t\tfactors = append(factors, 7)\n\t\tn /= 7\n\t}\n\tfor n%11 == 0 {\n\t\tfactors = append(factors, 11)\n\t\tn /= 11\n\t}\n\tfor n%13 == 0 {\n\t\tfactors = append(factors, 13)\n\t\tn /= 13\n\t}\n\tfor n%17 == 0 {\n\t\tfactors = append(factors, 17)\n\t\tn /= 17\n\t}\n\tfor n%19 == 0 {\n\t\tfactors = append(factors, 19)\n\t\tn /= 19\n\t}\n\tfor n%23 == 0 {\n\t\tfactors = append(factors, 23)\n\t\tn /= 23\n\t}\n\tfor n%29 == 0 {\n\t\tfactors = append(factors, 29)\n\t\tn /= 29\n\t}\n\tfor n%31 == 0 {\n\t\tfactors = append(factors, 31)\n\t\tn /= 31\n\t}\n\tfor n%37 == 0 {\n\t\tfactors = append(factors, 37)\n\t\tn /= 37\n\t}\n\tfor n%41 == 0 {\n\t\tfactors = append(factors, 41)\n\t\tn /= 41\n\t}\n\tfor n%43 == 0 {\n\t\tfactors = append(factors, 43)\n\t\tn /= 43\n\t}\n\tfor n%47 == 0 {\n\t\tfactors = append(factors, 47)\n\t\tn /= 47\n\t}\n\tfor n%53 == 0 {\n\t\tfactors = append(factors, 53)\n\t\tn /= 53\n\t}\n\tfor n",
    "\tvar factors = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors [Int] = [Int]{}\n\tfor i := 2; i < n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors [Int]\n\tfor i := 2; i < n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\tif n > 1 {\n\t\tfactors = append(factors, n)\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "    var factors = [Int]{}\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factors = append(factors, i)\n            n /= i\n        }\n    }\n    return factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n % i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors",
    "\tvar factors = [Int]{}\n\tfor i := 2; i <= n; i++ {\n\t\tif n%i == 0 {\n\t\t\tfactors = append(factors, i)\n\t\t\tn /= i\n\t\t}\n\t}\n\treturn factors"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
{
  "name": "HumanEval_55_fib",
  "language": "swift",
  "prompt": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n-1) + fib(n-2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpe1kh8hau.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n-1) + fib(n-2)\n                   ^\n                   n: \n/tmp/tmpe1kh8hau.swift:15:31: error: missing argument label 'n:' in call\n        return fib(n-1) + fib(n-2)\n                              ^\n                              n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n-1) + fib(n-2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpe1kh8hau.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n-1) + fib(n-2)\n                   ^\n                   n: \n/tmp/tmpe1kh8hau.swift:15:31: error: missing argument label 'n:' in call\n        return fib(n-1) + fib(n-2)\n                              ^\n                              n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpuzkf81nl.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpuzkf81nl.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp8dolyle9.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp8dolyle9.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpepmoea_k.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpepmoea_k.swift:13:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n-1) + fib(n-2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmpe1kh8hau.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n-1) + fib(n-2)\n                   ^\n                   n: \n/tmp/tmpe1kh8hau.swift:15:31: error: missing argument label 'n:' in call\n        return fib(n-1) + fib(n-2)\n                              ^\n                              n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmped48k1fa.swift:15:20: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                   ^\n                   n: \n/tmp/tmped48k1fa.swift:15:33: error: missing argument label 'n:' in call\n        return fib(n - 1) + fib(n - 2)\n                                ^\n                                n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6w9jmmdz.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp6w9jmmdz.swift:16:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp6kvz0i_9.swift:16:16: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp6kvz0i_9.swift:16:29: error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n - 2)\n                            ^\n                            n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>> fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)",
      "timestamp": 1664293482,
      "stdout": "",
      "stderr": "/tmp/tmp53ld0cc4.swift:13:16: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp53ld0cc4.swift:13:27: error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n                          ^\n                          n: \n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
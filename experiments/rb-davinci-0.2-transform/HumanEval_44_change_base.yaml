name: HumanEval_44_change_base
language: rb
prompt: "# Change numerical base of input number x to base.\n# return string representation\
  \ after the conversion.\n# base numbers are less than 10.\n# >>> change_base.call(8,\
  \ 3)\n# \"22\"\n# >>> change_base.call(8, 2)\n# \"1000\"\n# >>> change_base.call(7,\
  \ 2)\n# \"111\"\ndef change_base(x, base)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_change_base\n\
  \    candidate = method(:change_base)\n    assert_equal(\"22\", candidate.call(8,\
  \ 3))\n    assert_equal(\"100\", candidate.call(9, 3))\n    assert_equal(\"11101010\"\
  , candidate.call(234, 2))\n    assert_equal(\"10000\", candidate.call(16, 2))\n\
  \    assert_equal(\"1000\", candidate.call(8, 2))\n    assert_equal(\"111\", candidate.call(7,\
  \ 2))\n    assert_equal(\"2\", candidate.call(2, 3))\n    assert_equal(\"3\", candidate.call(3,\
  \ 4))\n    assert_equal(\"4\", candidate.call(4, 5))\n    assert_equal(\"5\", candidate.call(5,\
  \ 6))\n    assert_equal(\"6\", candidate.call(6, 7))\n    assert_equal(\"7\", candidate.call(7,\
  \ 8))\n  end\nend\n"
completions: ["  return \"0\" if x == 0\n  return \"1\" if x == 1", "  return x.to_s\
    \ if x < base\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1\n  return change_base(x/base, base)\
    \ + (x%base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  x.to_s(base)\nend", "  return x.to_s if x < base\n\
    \  change_base(x / base, base) + (x % base).to_s\nend", "  # TODO: implement this\
    \ method\n  return x.to_s(base)\nend", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"\
    1\" if x == 1\n  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return\
    \ \"100\" if x == 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n\
    \  return \"111\" if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if\
    \ x == 9\n  return \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return\
    \ \"1100\" if x == 12\n  return \"1101\" if x == 13\n  return \"1110\" if x ==\
    \ 14\n  return \"1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"\
    10001\" if x == 17\n  return \"10010\" if x == 18\n  return \"10011\" if x ==\
    \ 19\n  return \"10100\" if x == 20\n  return \"10101\" if x == 21\n  return \"\
    10110\" if x == 22\n  return \"10111\" if x == 23\n  return \"11000\" if x ==\
    \ 24\n  return \"11001\" if x == 25\n  return \"11010\" if x == 26\n  return \"\
    11011\" if x == 27\n  return \"11100\" if x == 28\n  return \"11101\" if x ==\
    \ 29\n  return \"11110\" if x == 30\n  return \"11111\" if x == 31\n  return \"\
    100000\" if x == 32\n  return \"100001\" if x == 33\n  return \"100010\" if x\
    \ == 34\n  return \"100011\" if x == 35\n  return \"100100\" if x == 36\n  return\
    \ \"100101\" if x == 37\n  return \"100110\" if x == 38\n  return \"100111\" if\
    \ x == 39\n  return \"101000\" if x == 40\n  return \"101001\" if x == 41\n  return\
    \ \"101010\" if x == 42\n  return \"101011\" if x == 43\n  return \"101100\" if\
    \ x == 44\n  return \"101101\" if x == 45\n  return \"101110\" if x == 46\n  return\
    \ \"101111\" if", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n  return\
    \ change_base(x/base, base) + (x%base).to_s\nend", "  return \"0\" if x == 0\n\
    \  return \"1\" if x == 1\n  return \"10\" if x == 2\n  return \"11\" if x ==\
    \ 3\n  return \"100\" if x == 4\n  return \"101\" if x == 5\n  return \"110\"\
    \ if x == 6\n  return \"111\" if x == 7\n  return \"1000\" if x == 8\n  return\
    \ \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return \"1011\" if x ==\
    \ 11\n  return \"1100\" if x == 12\n  return \"1101\" if x == 13\n  return \"\
    1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"10000\" if x == 16\n\
    \  return \"10001\" if x == 17\n  return \"10010\" if x == 18\n  return \"10011\"\
    \ if x == 19\n  return \"10100\" if x == 20\n  return \"10101\" if x == 21\n \
    \ return \"10110\" if x == 22\n  return \"10111\" if x == 23\n  return \"11000\"\
    \ if x == 24\n  return \"11001\" if x == 25\n  return \"11010\" if x == 26\n \
    \ return \"11011\" if x == 27\n  return \"11100\" if x == 28\n  return \"11101\"\
    \ if x == 29\n  return \"11110\" if x == 30\n  return \"11111\" if x == 31\n \
    \ return \"100000\" if x == 32\n  return \"100001\" if x == 33\n  return \"100010\"\
    \ if x == 34\n  return \"100011\" if x == 35\n  return \"100100\" if x == 36\n\
    \  return \"100101\" if x == 37\n  return \"100110\" if x == 38\n  return \"100111\"\
    \ if x == 39\n  return \"101000\" if x == 40\n  return \"101001\" if x == 41\n\
    \  return \"101010\" if x == 42\n  return \"101011\" if x == 43\n  return \"101100\"\
    \ if x == 44\n  return \"101101\" if x == 45\n  return \"101110\" if x == 46\n\
    \  return \"101111\" if", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  # TODO: implement this method\n  # Hint: use recursion\n\
    \  # Hint: use the % operator\n  # Hint: use the / operator\n  # Hint: use the\
    \ .to_s method\n  # Hint: use the + operator\n  # Hint: use the .chr method\n\
    \  # Hint: use the .ord method\n  # Hint: use the .to_i method\n  # Hint: use\
    \ the .to_s method\n  # Hint: use the .to_i method\n  # Hint: use the .to_s method\n\
    \  # Hint: use the .to_i method\n  # Hint: use the .to_s method\n  # Hint: use\
    \ the .to_i method\n  # Hint: use the .to_s method\n  # Hint: use the .to_i method\n\
    \  # Hint: use the .to_s method\n  # Hint: use the .to_i method\n  # Hint: use\
    \ the .to_s method\n  # Hint: use the .to_i method\n  # Hint: use the .to_s method\n\
    \  # Hint: use the .to_i method\n  # Hint: use the .to_s method\n  # Hint: use\
    \ the .to_i method\n  # Hint: use the .to_s method\n  # Hint: use the .to_i method\n\
    \  # Hint: use the .to_s method\n  # Hint: use the .to_i method\n  # Hint: use\
    \ the .to_s method\n  # Hint: use the .to_i method\n  # Hint: use the .to_s method\n\
    \  # Hint: use the .to_i method\n  # Hint: use the .to_s method\n  # Hint: use\
    \ the .to_i method\n  # Hint: use the .to_s method\n  # Hint: use the .to_i method\n\
    \  # Hint: use the .to_s method\n  # Hint: use the .to_i method\n  # Hint: use\
    \ the .to_s method\n  # Hint: use the .to_i", "  return x.to_s if base < 2\n \
    \ return change_base(x / base, base) + (x % base).to_s\nend", "  return x.to_s\
    \ if base == 10\n  return \"\" if x == 0\n  change_base(x / base, base) + (x %\
    \ base).to_s\nend", "  return x.to_s if x < base\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n\
    \  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return \"100\" if x ==\
    \ 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n  return \"111\"\
    \ if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if x == 9\n  return\
    \ \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return \"1100\" if x ==\
    \ 12\n  return \"1101\" if x == 13\n  return \"1110\" if x == 14\n  return \"\
    1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"10001\" if x == 17\n\
    \  return \"10010\" if x == 18\n  return \"10011\" if x == 19\n  return \"10100\"\
    \ if x == 20\n  return \"10101\" if x == 21\n  return \"10110\" if x == 22\n \
    \ return \"10111\" if x == 23\n  return \"11000\" if x == 24\n  return \"11001\"\
    \ if x == 25\n  return \"11010\" if x == 26\n  return \"11011\" if x == 27\n \
    \ return \"11100\" if x == 28\n  return \"11101\" if x == 29\n  return \"11110\"\
    \ if x == 30\n  return \"11111\" if x == 31\n  return \"100000\" if x == 32\n\
    \  return \"100001\" if x == 33\n  return \"100010\" if x == 34\n  return \"100011\"\
    \ if x == 35\n  return \"100100\" if x == 36\n  return \"100101\" if x == 37\n\
    \  return \"100110\" if x == 38\n  return \"100111\" if x == 39\n  return \"101000\"\
    \ if x == 40\n  return \"101001\" if x == 41\n  return \"101010\" if x == 42\n\
    \  return \"101011\" if x == 43\n  return \"101100\" if x == 44\n  return \"101101\"\
    \ if x == 45\n  return \"101110\" if x == 46\n  return \"101111\" if", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n  return\
    \ \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x == 5\n \
    \ return \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\" if x\
    \ == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return \"\
    1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x == 13\n\
    \  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"10000\"\
    \ if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x == 18\n \
    \ return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"10101\"\
    \ if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x == 23\n \
    \ return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"11010\"\
    \ if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x == 28\n \
    \ return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"11111\"\
    \ if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if x == 33\n\
    \  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return \"100100\"\
    \ if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if x == 38\n\
    \  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return \"101001\"\
    \ if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if x == 43\n\
    \  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return \"101110\"\
    \ if x == 46\n  return \"101111\" if", "  # TODO: implement this method\n  # Hint:\
    \ use recursion\nend", "  return x.to_s if x < base\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n\
    \  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return \"100\" if x ==\
    \ 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n  return \"111\"\
    \ if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if x == 9\n  return\
    \ \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return \"1100\" if x ==\
    \ 12\n  return \"1101\" if x == 13\n  return \"1110\" if x == 14\n  return \"\
    1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"10001\" if x == 17\n\
    \  return \"10010\" if x == 18\n  return \"10011\" if x == 19\n  return \"10100\"\
    \ if x == 20\n  return \"10101\" if x == 21\n  return \"10110\" if x == 22\n \
    \ return \"10111\" if x == 23\n  return \"11000\" if x == 24\n  return \"11001\"\
    \ if x == 25\n  return \"11010\" if x == 26\n  return \"11011\" if x == 27\n \
    \ return \"11100\" if x == 28\n  return \"11101\" if x == 29\n  return \"11110\"\
    \ if x == 30\n  return \"11111\" if x == 31\n  return \"100000\" if x == 32\n\
    \  return \"100001\" if x == 33\n  return \"100010\" if x == 34\n  return \"100011\"\
    \ if x == 35\n  return \"100100\" if x == 36\n  return \"100101\" if x == 37\n\
    \  return \"100110\" if x == 38\n  return \"100111\" if x == 39\n  return \"101000\"\
    \ if x == 40\n  return \"101001\" if x == 41\n  return \"101010\" if x == 42\n\
    \  return \"101011\" if x == 43\n  return \"101100\" if x == 44\n  return \"101101\"\
    \ if x == 45\n  return \"101110\" if x == 46\n  return \"101111\" if", "  return\
    \ \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n  return\
    \ \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x == 5\n \
    \ return \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\" if x\
    \ == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return \"\
    1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x == 13\n\
    \  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"10000\"\
    \ if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x == 18\n \
    \ return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"10101\"\
    \ if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x == 23\n \
    \ return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"11010\"\
    \ if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x == 28\n \
    \ return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"11111\"\
    \ if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if x == 33\n\
    \  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return \"100100\"\
    \ if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if x == 38\n\
    \  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return \"101001\"\
    \ if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if x == 43\n\
    \  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return \"101110\"\
    \ if x == 46\n  return \"101111\" if", "  return \"0\" if x == 0\n  return \"\
    1\" if x == 1\n  return change_base(x/base, base) + (x%base).to_s\nend", "  return\
    \ x.to_s if base == 10\n  return change_base(x / base, base) + (x % base).to_s\
    \ if x > 0\n  \"\"\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n\
    \  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return \"100\" if x ==\
    \ 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n  return \"111\"\
    \ if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if x == 9\n  return\
    \ \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return \"1100\" if x ==\
    \ 12\n  return \"1101\" if x == 13\n  return \"1110\" if x == 14\n  return \"\
    1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"10001\" if x == 17\n\
    \  return \"10010\" if x == 18\n  return \"10011\" if x == 19\n  return \"10100\"\
    \ if x == 20\n  return \"10101\" if x == 21\n  return \"10110\" if x == 22\n \
    \ return \"10111\" if x == 23\n  return \"11000\" if x == 24\n  return \"11001\"\
    \ if x == 25\n  return \"11010\" if x == 26\n  return \"11011\" if x == 27\n \
    \ return \"11100\" if x == 28\n  return \"11101\" if x == 29\n  return \"11110\"\
    \ if x == 30\n  return \"11111\" if x == 31\n  return \"100000\" if x == 32\n\
    \  return \"100001\" if x == 33\n  return \"100010\" if x == 34\n  return \"100011\"\
    \ if x == 35\n  return \"100100\" if x == 36\n  return \"100101\" if x == 37\n\
    \  return \"100110\" if x == 38\n  return \"100111\" if x == 39\n  return \"101000\"\
    \ if x == 40\n  return \"101001\" if x == 41\n  return \"101010\" if x == 42\n\
    \  return \"101011\" if x == 43\n  return \"101100\" if x == 44\n  return \"101101\"\
    \ if x == 45\n  return \"101110\" if x == 46\n  return \"101111\" if", "  return\
    \ x.to_s if base == 10\n  return change_base(x / base, base) + (x % base).to_s\
    \ if x > 0\n  \"\"\nend", "  return \"0\" if x.zero?\n  return \"1\" if x == 1",
  "  raise ArgumentError, \"base must be less than 10\" if base > 10\n  return \"\
    0\" if x == 0\n  result = \"\"\n  while x > 0\n    result = (x % base).to_s +\
    \ result\n    x /= base\n  end\n  result\nend", "  x.to_s(base)\nend", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n  return\
    \ \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x == 5\n \
    \ return \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\" if x\
    \ == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return \"\
    1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x == 13\n\
    \  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"10000\"\
    \ if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x == 18\n \
    \ return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"10101\"\
    \ if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x == 23\n \
    \ return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"11010\"\
    \ if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x == 28\n \
    \ return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"11111\"\
    \ if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if x == 33\n\
    \  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return \"100100\"\
    \ if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if x == 38\n\
    \  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return \"101001\"\
    \ if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if x == 43\n\
    \  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return \"101110\"\
    \ if x == 46\n  return \"101111\" if", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  if x < base\n    return x.to_s\n \
    \ else\n    return change_base(x / base, base) + (x % base).to_s\n  end\nend",
  "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return x.to_s if x < base\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  x.to_s(base)\nend", "  return x.to_s if base == 10\n  return change_base(x\
    \ / base, base) + (x % base).to_s if x > 0\n  \"\"\nend", "  return x.to_s if\
    \ x < base\n  change_base(x / base, base) + (x % base).to_s\nend", "  return x.to_s\
    \ if x < base\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n  return\
    \ \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x == 5\n \
    \ return \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\" if x\
    \ == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return \"\
    1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x == 13\n\
    \  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"10000\"\
    \ if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x == 18\n \
    \ return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"10101\"\
    \ if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x == 23\n \
    \ return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"11010\"\
    \ if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x == 28\n \
    \ return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"11111\"\
    \ if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if x == 33\n\
    \  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return \"100100\"\
    \ if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if x == 38\n\
    \  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return \"101001\"\
    \ if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if x == 43\n\
    \  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return \"101110\"\
    \ if x == 46\n  return \"101111\" if", "  # TODO: implement this method\n  # Hint:\
    \ use recursion\n  # Hint: use the modulo operator\n  # Hint: use the division\
    \ operator\n  # Hint: use the to_s method\n  # Hint: use the prepend method\n\
    \  # Hint: use the reverse method\n  # Hint: use the join method\n  # Hint: use\
    \ the to_s method\n  # Hint: use the to_i method\n  # Hint: use the to_s method\n\
    \  # Hint: use the to_i method\n  # Hint: use the to_s method\n  # Hint: use the\
    \ to_i method\n  # Hint: use the to_s method\n  # Hint: use the to_i method\n\
    \  # Hint: use the to_s method\n  # Hint: use the to_i method\n  # Hint: use the\
    \ to_s method\n  # Hint: use the to_i method\n  # Hint: use the to_s method\n\
    \  # Hint: use the to_i method\n  # Hint: use the to_s method\n  # Hint: use the\
    \ to_i method\n  # Hint: use the to_s method\n  # Hint: use the to_i method\n\
    \  # Hint: use the to_s method\n  # Hint: use the to_i method\n  # Hint: use the\
    \ to_s method\n  # Hint: use the to_i method\n  # Hint: use the to_s method\n\
    \  # Hint: use the to_i method\n  # Hint: use the to_s method\n  # Hint: use the\
    \ to_i method\n  # Hint: use the to_s method\n  # Hint: use the to_i method\n\
    \  # Hint: use the to_s method\n  # Hint: use the to_i method\n  # Hint: use the\
    \ to_s method\n  # Hint: use the to_i method\n  # Hint: use the to_s method\n\
    \  # Hint: use the to_i method\n  # Hint: use the to_s method\n  # Hint: use the\
    \ to_", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if\
    \ x == 2\n  return \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\"\
    \ if x == 5\n  return \"110\" if x == 6\n  return \"111\" if x == 7\n  return\
    \ \"1000\" if x == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n\
    \  return \"1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\"\
    \ if x == 13\n  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return\
    \ \"10000\" if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x\
    \ == 18\n  return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return\
    \ \"10101\" if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x\
    \ == 23\n  return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return\
    \ \"11010\" if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x\
    \ == 28\n  return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return\
    \ \"11111\" if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if\
    \ x == 33\n  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return\
    \ \"100100\" if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if\
    \ x == 38\n  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return\
    \ \"101001\" if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if\
    \ x == 43\n  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return\
    \ \"101110\" if x == 46\n  return \"101111\" if", "  return x.to_s if base ==\
    \ 10\n  return change_base(x / base, base) + (x % base).to_s if x > 0\n  \"\"\n\
    end", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n  change_base(x / base,\
    \ base) + (x % base).to_s\nend", "  return '' if x == 0\n  change_base(x / base,\
    \ base) + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if\
    \ x == 1\n  return change_base(x/base, base) + (x%base).to_s\nend", "  return\
    \ x.to_s if base == 10\n  return change_base(x / base, base) + (x % base).to_s\
    \ if x > 0\n  \"\"\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  raise ArgumentError, \"base must be less than 10\"\
    \ if base > 10\n  return \"0\" if x == 0\n  result = \"\"\n  while x > 0\n   \
    \ result = (x % base).to_s + result\n    x /= base\n  end\n  result\nend", " \
    \ return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return x.to_s if base < 2\n  return change_base(x / base, base) + (x % base).to_s\n\
    end", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if\
    \ x == 2\n  return \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\"\
    \ if x == 5\n  return \"110\" if x == 6\n  return \"111\" if x == 7\n  return\
    \ \"1000\" if x == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n\
    \  return \"1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\"\
    \ if x == 13\n  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return\
    \ \"10000\" if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x\
    \ == 18\n  return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return\
    \ \"10101\" if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x\
    \ == 23\n  return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return\
    \ \"11010\" if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x\
    \ == 28\n  return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return\
    \ \"11111\" if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if\
    \ x == 33\n  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return\
    \ \"100100\" if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if\
    \ x == 38\n  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return\
    \ \"101001\" if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if\
    \ x == 43\n  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return\
    \ \"101110\" if x == 46\n  return \"101111\" if", "  return \"\" if x == 0\n \
    \ change_base(x / base, base) + (x % base).to_s\nend", "  x.to_s(base)\nend",
  "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  if x < base\n    x.to_s\n  else\n    change_base(x / base, base) + (x % base).to_s\n\
    \  end\nend", "  if x < base\n    x.to_s\n  else\n    change_base(x / base, base)\
    \ + (x % base).to_s\n  end\nend", "  return x.to_s if x < base\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"\
    1\" if x == 1\n  return change_base(x / base, base) + (x % base).to_s\nend", " \
    \ return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return \"0\" if x == 0\n  return \"1\" if x == 1\n  return change_base(x/base,\
    \ base) + (x%base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if x\
    \ == 1\n  return change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ x.to_s if x < base\n  change_base(x / base, base) + (x % base).to_s\nend", " \
    \ return \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n\
    \  return \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x\
    \ == 5\n  return \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\"\
    \ if x == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return\
    \ \"1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x ==\
    \ 13\n  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"\
    10000\" if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x ==\
    \ 18\n  return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"\
    10101\" if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x ==\
    \ 23\n  return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"\
    11010\" if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x ==\
    \ 28\n  return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"\
    11111\" if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if x ==\
    \ 33\n  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return\
    \ \"100100\" if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if\
    \ x == 38\n  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return\
    \ \"101001\" if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if\
    \ x == 43\n  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return\
    \ \"101110\" if x == 46\n  return \"101111\" if", "  return \"0\" if x == 0\n\
    \  return \"1\" if x == 1\n  return change_base(x / base, base) + (x % base).to_s\n\
    end", "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  return x.to_s if x < base\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  return \"0\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  # TODO: implement this method\n  return \"\"\nend", "  return \"0\" if\
    \ x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n  return \"11\"\
    \ if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x == 5\n  return\
    \ \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\" if x == 8\n\
    \  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return \"1011\"\
    \ if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x == 13\n  return\
    \ \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"10000\" if x ==\
    \ 16\n  return \"10001\" if x == 17\n  return \"10010\" if x == 18\n  return \"\
    10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"10101\" if x ==\
    \ 21\n  return \"10110\" if x == 22\n  return \"10111\" if x == 23\n  return \"\
    11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"11010\" if x ==\
    \ 26\n  return \"11011\" if x == 27\n  return \"11100\" if x == 28\n  return \"\
    11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"11111\" if x ==\
    \ 31\n  return \"100000\" if x == 32\n  return \"100001\" if x == 33\n  return\
    \ \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return \"100100\" if\
    \ x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if x == 38\n  return\
    \ \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return \"101001\" if\
    \ x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if x == 43\n  return\
    \ \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return \"101110\" if\
    \ x == 46\n  return \"101111\" if", "  return \"0\" if x == 0\n  return \"1\"\
    \ if x == 1\n  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return \"\
    100\" if x == 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n  return\
    \ \"111\" if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if x == 9\n\
    \  return \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return \"1100\"\
    \ if x == 12\n  return \"1101\" if x == 13\n  return \"1110\" if x == 14\n  return\
    \ \"1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"10001\" if x\
    \ == 17\n  return \"10010\" if x == 18\n  return \"10011\" if x == 19\n  return\
    \ \"10100\" if x == 20\n  return \"10101\" if x == 21\n  return \"10110\" if x\
    \ == 22\n  return \"10111\" if x == 23\n  return \"11000\" if x == 24\n  return\
    \ \"11001\" if x == 25\n  return \"11010\" if x == 26\n  return \"11011\" if x\
    \ == 27\n  return \"11100\" if x == 28\n  return \"11101\" if x == 29\n  return\
    \ \"11110\" if x == 30\n  return \"11111\" if x == 31\n  return \"100000\" if\
    \ x == 32\n  return \"100001\" if x == 33\n  return \"100010\" if x == 34\n  return\
    \ \"100011\" if x == 35\n  return \"100100\" if x == 36\n  return \"100101\" if\
    \ x == 37\n  return \"100110\" if x == 38\n  return \"100111\" if x == 39\n  return\
    \ \"101000\" if x == 40\n  return \"101001\" if x == 41\n  return \"101010\" if\
    \ x == 42\n  return \"101011\" if x == 43\n  return \"101100\" if x == 44\n  return\
    \ \"101101\" if x == 45\n  return \"101110\" if x == 46\n  return \"101111\" if",
  "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return x.to_s if base == 10\n  return change_base(x / base, base) + (x % base).to_s\
    \ if x > 0\n  ''\nend", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n\
    \  return change_base(x/base, base) + (x%base).to_s\nend", "  # TODO: implement\
    \ this method\n  # Hint: use recursion\n  return \"0\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return x.to_s if x < base\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  raise ArgumentError, \"base must be\
    \ less than 10\" if base > 10\n  return \"0\" if x == 0\n  result = \"\"\n  while\
    \ x > 0\n    result = (x % base).to_s + result\n    x /= base\n  end\n  result\n\
    end", "  x.to_s(base)\nend", "  return \"0\" if x == 0\n  return \"1\" if x ==\
    \ 1\n  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return \"100\" if\
    \ x == 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n  return \"\
    111\" if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if x == 9\n  return\
    \ \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return \"1100\" if x ==\
    \ 12\n  return \"1101\" if x == 13\n  return \"1110\" if x == 14\n  return \"\
    1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"10001\" if x == 17\n\
    \  return \"10010\" if x == 18\n  return \"10011\" if x == 19\n  return \"10100\"\
    \ if x == 20\n  return \"10101\" if x == 21\n  return \"10110\" if x == 22\n \
    \ return \"10111\" if x == 23\n  return \"11000\" if x == 24\n  return \"11001\"\
    \ if x == 25\n  return \"11010\" if x == 26\n  return \"11011\" if x == 27\n \
    \ return \"11100\" if x == 28\n  return \"11101\" if x == 29\n  return \"11110\"\
    \ if x == 30\n  return \"11111\" if x == 31\n  return \"100000\" if x == 32\n\
    \  return \"100001\" if x == 33\n  return \"100010\" if x == 34\n  return \"100011\"\
    \ if x == 35\n  return \"100100\" if x == 36\n  return \"100101\" if x == 37\n\
    \  return \"100110\" if x == 38\n  return \"100111\" if x == 39\n  return \"101000\"\
    \ if x == 40\n  return \"101001\" if x == 41\n  return \"101010\" if x == 42\n\
    \  return \"101011\" if x == 43\n  return \"101100\" if x == 44\n  return \"101101\"\
    \ if x == 45\n  return \"101110\" if x == 46\n  return \"101111\" if", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1", "  return \"0\" if x == 0\n  return\
    \ \"1\" if x == 1\n  return change_base(x/base, base) + (x%base).to_s\nend", " \
    \ return \"0\" if x == 0\n  return \"1\" if x == 1\n  return change_base(x/base,\
    \ base) + (x%base).to_s\nend", "  return x.to_s if base < 2\n  return x.to_s(base)\
    \ if base < 10\n  raise ArgumentError, \"base must be less than 10\"\nend", " \
    \ raise ArgumentError, \"base must be less than 10\" if base > 10\n  raise ArgumentError,\
    \ \"base must be greater than 1\" if base < 2\n  raise ArgumentError, \"x must\
    \ be greater than 0\" if x < 1\n  return \"1\" if x == 1\n  return \"0\" if x\
    \ == 0\n  return change_base(x/base, base) + (x%base).to_s\nend", "  return x.to_s\
    \ if x < base\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n  return\
    \ \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x == 5\n \
    \ return \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\" if x\
    \ == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return \"\
    1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x == 13\n\
    \  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"10000\"\
    \ if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x == 18\n \
    \ return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"10101\"\
    \ if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x == 23\n \
    \ return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"11010\"\
    \ if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x == 28\n \
    \ return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"11111\"\
    \ if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if x == 33\n\
    \  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return \"100100\"\
    \ if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if x == 38\n\
    \  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return \"101001\"\
    \ if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if x == 43\n\
    \  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return \"101110\"\
    \ if x == 46\n  return \"101111\" if", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return x.to_s if base == 10\n  return\
    \ x.to_s(base) if base < 10\n  return change_base(x, base - 10) + (x % 10).to_s\
    \ if x >= 10\n  x.to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if x ==\
    \ 1\n  return change_base(x / base, base) + (x % base).to_s\nend", "  return \"\
    \" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1\n  return change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n\
    \  return change_base(x / base, base) + (x % base).to_s\nend", "  # TODO: implement\
    \ this method\n  return x.to_s(base)\nend", "  # TODO: implement this method\n\
    \  # Hint: use recursion\n  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return nil if x < 0 || base < 2 || base > 10\n \
    \ return x.to_s if x < base\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  # TODO\nend", "  return x.to_s if base < 2\n  return change_base(x /\
    \ base, base) + (x % base).to_s\nend", "  return x.to_s if base < 2\n  return\
    \ \"0\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"\
    1\" if x == 1\n  return change_base(x / base, base) + (x % base).to_s\nend", " \
    \ return \"0\" if x == 0\n  return \"1\" if x == 1\n  return change_base(x/base,\
    \ base) + (x%base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if x\
    \ == 1\n  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return \"100\"\
    \ if x == 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n  return\
    \ \"111\" if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if x == 9\n\
    \  return \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return \"1100\"\
    \ if x == 12\n  return \"1101\" if x == 13\n  return \"1110\" if x == 14\n  return\
    \ \"1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"10001\" if x\
    \ == 17\n  return \"10010\" if x == 18\n  return \"10011\" if x == 19\n  return\
    \ \"10100\" if x == 20\n  return \"10101\" if x == 21\n  return \"10110\" if x\
    \ == 22\n  return \"10111\" if x == 23\n  return \"11000\" if x == 24\n  return\
    \ \"11001\" if x == 25\n  return \"11010\" if x == 26\n  return \"11011\" if x\
    \ == 27\n  return \"11100\" if x == 28\n  return \"11101\" if x == 29\n  return\
    \ \"11110\" if x == 30\n  return \"11111\" if x == 31\n  return \"100000\" if\
    \ x == 32\n  return \"100001\" if x == 33\n  return \"100010\" if x == 34\n  return\
    \ \"100011\" if x == 35\n  return \"100100\" if x == 36\n  return \"100101\" if\
    \ x == 37\n  return \"100110\" if x == 38\n  return \"100111\" if x == 39\n  return\
    \ \"101000\" if x == 40\n  return \"101001\" if x == 41\n  return \"101010\" if\
    \ x == 42\n  return \"101011\" if x == 43\n  return \"101100\" if x == 44\n  return\
    \ \"101101\" if x == 45\n  return \"101110\" if x == 46\n  return \"101111\" if",
  "  return \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n\
    \  return \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x\
    \ == 5\n  return \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\"\
    \ if x == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return\
    \ \"1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x ==\
    \ 13\n  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"\
    10000\" if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x ==\
    \ 18\n  return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"\
    10101\" if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x ==\
    \ 23\n  return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"\
    11010\" if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x ==\
    \ 28\n  return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"\
    11111\" if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if x ==\
    \ 33\n  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return\
    \ \"100100\" if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if\
    \ x == 38\n  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return\
    \ \"101001\" if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if\
    \ x == 43\n  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return\
    \ \"101110\" if x == 46\n  return \"101111\" if", "  return \"0\" if x == 0\n\
    \  return \"1\" if x == 1\n  return change_base(x/base, base) + (x%base).to_s\n\
    end", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if\
    \ x == 2\n  return \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\"\
    \ if x == 5\n  return \"110\" if x == 6\n  return \"111\" if x == 7\n  return\
    \ \"1000\" if x == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n\
    \  return \"1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\"\
    \ if x == 13\n  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return\
    \ \"10000\" if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x\
    \ == 18\n  return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return\
    \ \"10101\" if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x\
    \ == 23\n  return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return\
    \ \"11010\" if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x\
    \ == 28\n  return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return\
    \ \"11111\" if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if\
    \ x == 33\n  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return\
    \ \"100100\" if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if\
    \ x == 38\n  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return\
    \ \"101001\" if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if\
    \ x == 43\n  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return\
    \ \"101110\" if x == 46\n  return \"101111\" if", "  return \"0\" if x == 0\n\
    \  return \"1\" if x == 1\n  return \"10\" if x == 2\n  return \"11\" if x ==\
    \ 3\n  return \"100\" if x == 4\n  return \"101\" if x == 5\n  return \"110\"\
    \ if x == 6\n  return \"111\" if x == 7\n  return \"1000\" if x == 8\n  return\
    \ \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return \"1011\" if x ==\
    \ 11\n  return \"1100\" if x == 12\n  return \"1101\" if x == 13\n  return \"\
    1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"10000\" if x == 16\n\
    \  return \"10001\" if x == 17\n  return \"10010\" if x == 18\n  return \"10011\"\
    \ if x == 19\n  return \"10100\" if x == 20\n  return \"10101\" if x == 21\n \
    \ return \"10110\" if x == 22\n  return \"10111\" if x == 23\n  return \"11000\"\
    \ if x == 24\n  return \"11001\" if x == 25\n  return \"11010\" if x == 26\n \
    \ return \"11011\" if x == 27\n  return \"11100\" if x == 28\n  return \"11101\"\
    \ if x == 29\n  return \"11110\" if x == 30\n  return \"11111\" if x == 31\n \
    \ return \"100000\" if x == 32\n  return \"100001\" if x == 33\n  return \"100010\"\
    \ if x == 34\n  return \"100011\" if x == 35\n  return \"100100\" if x == 36\n\
    \  return \"100101\" if x == 37\n  return \"100110\" if x == 38\n  return \"100111\"\
    \ if x == 39\n  return \"101000\" if x == 40\n  return \"101001\" if x == 41\n\
    \  return \"101010\" if x == 42\n  return \"101011\" if x == 43\n  return \"101100\"\
    \ if x == 44\n  return \"101101\" if x == 45\n  return \"101110\" if x == 46\n\
    \  return \"101111\" if", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return x.to_s if base == 10\n  return change_base(x\
    \ / base, base) + (x % base).to_s if x > 0\n  \"\"\nend", "  return \"\" if x\
    \ == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return \"\"\
    \ if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ x.to_s if x < base\n  change_base(x / base, base) + (x % base).to_s\nend", " \
    \ return '' if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return x.to_s if base == 10\n  return x.to_s(base) if base < 10\n  return change_base(x,\
    \ base - 10) + (x % 10).to_s if x >= 10\n  x.to_s\nend", "  return x.to_s if x\
    \ < base\n  change_base(x / base, base) + (x % base).to_s\nend", "  return x.to_s\
    \ if base == 10\n  return change_base(x/base, base) + (x%base).to_s if x > 0\n\
    \  \"\"\nend", "  x.to_s(base)\nend", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"\
    1\" if x == 1", "  return \"\" if x == 0\n  change_base(x / base, base) + (x %\
    \ base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n  return\
    \ change_base(x / base, base) + (x % base).to_s\nend", "  # TODO: implement this\
    \ method\n  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  return x.to_s if base == 10\n  return change_base(x / base, base) + (x\
    \ % base).to_s if x > 0\n  \"\"\nend", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  x.to_s(base)\nend", "  x.to_s(base)\n\
    end", "  x.to_s(base)\nend", "  if x == 0\n    return \"0\"\n  end\n  result =\
    \ []\n  while x > 0\n    result.push(x % base)\n    x = x / base\n  end\n  result.reverse.join\n\
    end", "  return x.to_s if x < base\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  return nil if x < 0 || base < 2\n  return x.to_s if x < base\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"\
    1\" if x == 1\n  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return\
    \ \"100\" if x == 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n\
    \  return \"111\" if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if\
    \ x == 9\n  return \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return\
    \ \"1100\" if x == 12\n  return \"1101\" if x == 13\n  return \"1110\" if x ==\
    \ 14\n  return \"1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"\
    10001\" if x == 17\n  return \"10010\" if x == 18\n  return \"10011\" if x ==\
    \ 19\n  return \"10100\" if x == 20\n  return \"10101\" if x == 21\n  return \"\
    10110\" if x == 22\n  return \"10111\" if x == 23\n  return \"11000\" if x ==\
    \ 24\n  return \"11001\" if x == 25\n  return \"11010\" if x == 26\n  return \"\
    11011\" if x == 27\n  return \"11100\" if x == 28\n  return \"11101\" if x ==\
    \ 29\n  return \"11110\" if x == 30\n  return \"11111\" if x == 31\n  return \"\
    100000\" if x == 32\n  return \"100001\" if x == 33\n  return \"100010\" if x\
    \ == 34\n  return \"100011\" if x == 35\n  return \"100100\" if x == 36\n  return\
    \ \"100101\" if x == 37\n  return \"100110\" if x == 38\n  return \"100111\" if\
    \ x == 39\n  return \"101000\" if x == 40\n  return \"101001\" if x == 41\n  return\
    \ \"101010\" if x == 42\n  return \"101011\" if x == 43\n  return \"101100\" if\
    \ x == 44\n  return \"101101\" if x == 45\n  return \"101110\" if x == 46\n  return\
    \ \"101111\" if", "  # TODO: implement this method\n  x.to_s(base)\nend", "  return\
    \ \"0\" if x == 0\n  return \"1\" if x == 1\n  return change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  # TODO: implement this method\n  # Hint: use recursion\n\
    \  # Hint: use the modulo operator\n  # Hint: use the division operator\n  # Hint:\
    \ use the to_s method\n  # Hint: use the reverse method\n  # Hint: use the prepend\
    \ method\n  # Hint: use the + operator\n  # Hint: use the unshift method\n  #\
    \ Hint: use the << operator\n  # Hint: use the insert method\n  # Hint: use the\
    \ push method\n  # Hint: use the concat method\n  # Hint: use the join method\n\
    \  # Hint: use the split method\n  # Hint: use the map method\n  # Hint: use the\
    \ each method\n  # Hint: use the times method\n  # Hint: use the upto method\n\
    \  # Hint: use the downto method\n  # Hint: use the step method\n  # Hint: use\
    \ the while method\n  # Hint: use the until method\n  # Hint: use the for method\n\
    \  # Hint: use the each_with_index method\n  # Hint: use the each_with_object\
    \ method\n  # Hint: use the each_entry method\n  # Hint: use the each_slice method\n\
    \  # Hint: use the each_cons method\n  # Hint: use the each_with_index method\n\
    \  # Hint: use the each_char method\n  # Hint: use the each_line method\n  # Hint:\
    \ use the each_byte method\n  # Hint: use the each_codepoint method\n  # Hint:\
    \ use the each_index method\n  # Hint: use the each_key method\n  # Hint: use\
    \ the each_value method\n  # Hint: use the each_pair method\n  # Hint: use the\
    \ each_slice method\n  # Hint: use the each_cons method\n  # Hint: use the each_with_index\
    \ method\n  # Hint: use the each_entry method\n  # Hint: use the each_slice method\n\
    \  # Hint: use the each_cons method\n  # Hint: use the each_with_index method\n\
    \ ", "  return x.to_s if x < base\n  change_base(x / base, base) + (x % base).to_s\n\
    end", "  # TODO: implement this method\n  # Hint: use recursion\n  # Hint: use\
    \ to_s(base) method to convert a number to a string in a given base\nend", " \
    \ return \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n\
    \  return \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x\
    \ == 5\n  return \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\"\
    \ if x == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return\
    \ \"1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x ==\
    \ 13\n  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"\
    10000\" if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x ==\
    \ 18\n  return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"\
    10101\" if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x ==\
    \ 23\n  return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"\
    11010\" if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x ==\
    \ 28\n  return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"\
    11111\" if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if x ==\
    \ 33\n  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return\
    \ \"100100\" if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if\
    \ x == 38\n  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return\
    \ \"101001\" if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if\
    \ x == 43\n  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return\
    \ \"101110\" if x == 46\n  return \"101111\" if", "  return \"0\" if x == 0\n\
    \  return \"1\" if x == 1", "  return x.to_s if base == 10\n  return change_base(x\
    \ / base, base) + (x % base).to_s if x > 0\n  \"\"\nend", "  return \"0\" if x\
    \ == 0\n  return \"1\" if x == 1\n  return change_base(x/base, base) + (x%base).to_s\n\
    end", "  return x.to_s if base == 10\n  return x.to_s(base) if base < 10\n  return\
    \ change_base(x, base - 1) + \"0\" if x < base\n  return change_base(x - base,\
    \ base) + \"1\"\nend", "  return x.to_s if x < base\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  # TODO: implement me\nend", "  return \"\" if x\
    \ == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return \"0\"\
    \ if x == 0\n  return \"1\" if x == 1\n  return change_base(x/base, base) + (x%base).to_s\n\
    end", "  return \"0\" if x == 0\n  return \"1\" if x == 1", "  return \"0\" if\
    \ x == 0\n  return \"1\" if x == 1\n  return change_base(x/base, base) + (x%base).to_s\n\
    end", "  return x.to_s if base == 10\n  return change_base(x/base, base) + (x%base).to_s\
    \ if x >= base\n  return (x%base).to_s\nend", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"\
    1\" if x == 1\n  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return\
    \ \"100\" if x == 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n\
    \  return \"111\" if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if\
    \ x == 9\n  return \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return\
    \ \"1100\" if x == 12\n  return \"1101\" if x == 13\n  return \"1110\" if x ==\
    \ 14\n  return \"1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"\
    10001\" if x == 17\n  return \"10010\" if x == 18\n  return \"10011\" if x ==\
    \ 19\n  return \"10100\" if x == 20\n  return \"10101\" if x == 21\n  return \"\
    10110\" if x == 22\n  return \"10111\" if x == 23\n  return \"11000\" if x ==\
    \ 24\n  return \"11001\" if x == 25\n  return \"11010\" if x == 26\n  return \"\
    11011\" if x == 27\n  return \"11100\" if x == 28\n  return \"11101\" if x ==\
    \ 29\n  return \"11110\" if x == 30\n  return \"11111\" if x == 31\n  return \"\
    100000\" if x == 32\n  return \"100001\" if x == 33\n  return \"100010\" if x\
    \ == 34\n  return \"100011\" if x == 35\n  return \"100100\" if x == 36\n  return\
    \ \"100101\" if x == 37\n  return \"100110\" if x == 38\n  return \"100111\" if\
    \ x == 39\n  return \"101000\" if x == 40\n  return \"101001\" if x == 41\n  return\
    \ \"101010\" if x == 42\n  return \"101011\" if x == 43\n  return \"101100\" if\
    \ x == 44\n  return \"101101\" if x == 45\n  return \"101110\" if x == 46\n  return\
    \ \"101111\" if", "  return \"\" if x == 0\n  change_base(x / base, base) + (x\
    \ % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n\
    \  return change_base(x/base, base) + (x%base).to_s\nend", "  return \"0\" if\
    \ x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return \"\"\
    \ if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ '' if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", "  return\
    \ x.to_s if base == 10\n  return change_base(x / base, base) + (x % base).to_s\
    \ if x >= base\n  x.to_s\nend", "  return x.to_s if x < base\n  change_base(x\
    \ / base, base) + (x % base).to_s\nend", "  return '0' if x == 0\n  return '1'\
    \ if x == 1\n  return change_base(x / base, base) + (x % base).to_s\nend", " \
    \ return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return '' if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend", " \
    \ return \"0\" if x == 0\n  return \"1\" if x == 1\n  return \"10\" if x == 2\n\
    \  return \"11\" if x == 3\n  return \"100\" if x == 4\n  return \"101\" if x\
    \ == 5\n  return \"110\" if x == 6\n  return \"111\" if x == 7\n  return \"1000\"\
    \ if x == 8\n  return \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return\
    \ \"1011\" if x == 11\n  return \"1100\" if x == 12\n  return \"1101\" if x ==\
    \ 13\n  return \"1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"\
    10000\" if x == 16\n  return \"10001\" if x == 17\n  return \"10010\" if x ==\
    \ 18\n  return \"10011\" if x == 19\n  return \"10100\" if x == 20\n  return \"\
    10101\" if x == 21\n  return \"10110\" if x == 22\n  return \"10111\" if x ==\
    \ 23\n  return \"11000\" if x == 24\n  return \"11001\" if x == 25\n  return \"\
    11010\" if x == 26\n  return \"11011\" if x == 27\n  return \"11100\" if x ==\
    \ 28\n  return \"11101\" if x == 29\n  return \"11110\" if x == 30\n  return \"\
    11111\" if x == 31\n  return \"100000\" if x == 32\n  return \"100001\" if x ==\
    \ 33\n  return \"100010\" if x == 34\n  return \"100011\" if x == 35\n  return\
    \ \"100100\" if x == 36\n  return \"100101\" if x == 37\n  return \"100110\" if\
    \ x == 38\n  return \"100111\" if x == 39\n  return \"101000\" if x == 40\n  return\
    \ \"101001\" if x == 41\n  return \"101010\" if x == 42\n  return \"101011\" if\
    \ x == 43\n  return \"101100\" if x == 44\n  return \"101101\" if x == 45\n  return\
    \ \"101110\" if x == 46\n  return \"101111\" if", "  return \"0\" if x == 0\n\
    \  return \"1\" if x == 1\n  return \"10\" if x == 2\n  return \"11\" if x ==\
    \ 3\n  return \"100\" if x == 4\n  return \"101\" if x == 5\n  return \"110\"\
    \ if x == 6\n  return \"111\" if x == 7\n  return \"1000\" if x == 8\n  return\
    \ \"1001\" if x == 9\n  return \"1010\" if x == 10\n  return \"1011\" if x ==\
    \ 11\n  return \"1100\" if x == 12\n  return \"1101\" if x == 13\n  return \"\
    1110\" if x == 14\n  return \"1111\" if x == 15\n  return \"10000\" if x == 16\n\
    \  return \"10001\" if x == 17\n  return \"10010\" if x == 18\n  return \"10011\"\
    \ if x == 19\n  return \"10100\" if x == 20\n  return \"10101\" if x == 21\n \
    \ return \"10110\" if x == 22\n  return \"10111\" if x == 23\n  return \"11000\"\
    \ if x == 24\n  return \"11001\" if x == 25\n  return \"11010\" if x == 26\n \
    \ return \"11011\" if x == 27\n  return \"11100\" if x == 28\n  return \"11101\"\
    \ if x == 29\n  return \"11110\" if x == 30\n  return \"11111\" if x == 31\n \
    \ return \"100000\" if x == 32\n  return \"100001\" if x == 33\n  return \"100010\"\
    \ if x == 34\n  return \"100011\" if x == 35\n  return \"100100\" if x == 36\n\
    \  return \"100101\" if x == 37\n  return \"100110\" if x == 38\n  return \"100111\"\
    \ if x == 39\n  return \"101000\" if x == 40\n  return \"101001\" if x == 41\n\
    \  return \"101010\" if x == 42\n  return \"101011\" if x == 43\n  return \"101100\"\
    \ if x == 44\n  return \"101101\" if x == 45\n  return \"101110\" if x == 46\n\
    \  return \"101111\" if", "  return \"0\" if x == 0\n  return \"1\" if x == 1\n\
    \  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return \"100\" if x ==\
    \ 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n  return \"111\"\
    \ if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if x == 9\n  return\
    \ \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return \"1100\" if x ==\
    \ 12\n  return \"1101\" if x == 13\n  return \"1110\" if x == 14\n  return \"\
    1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"10001\" if x == 17\n\
    \  return \"10010\" if x == 18\n  return \"10011\" if x == 19\n  return \"10100\"\
    \ if x == 20\n  return \"10101\" if x == 21\n  return \"10110\" if x == 22\n \
    \ return \"10111\" if x == 23\n  return \"11000\" if x == 24\n  return \"11001\"\
    \ if x == 25\n  return \"11010\" if x == 26\n  return \"11011\" if x == 27\n \
    \ return \"11100\" if x == 28\n  return \"11101\" if x == 29\n  return \"11110\"\
    \ if x == 30\n  return \"11111\" if x == 31\n  return \"100000\" if x == 32\n\
    \  return \"100001\" if x == 33\n  return \"100010\" if x == 34\n  return \"100011\"\
    \ if x == 35\n  return \"100100\" if x == 36\n  return \"100101\" if x == 37\n\
    \  return \"100110\" if x == 38\n  return \"100111\" if x == 39\n  return \"101000\"\
    \ if x == 40\n  return \"101001\" if x == 41\n  return \"101010\" if x == 42\n\
    \  return \"101011\" if x == 43\n  return \"101100\" if x == 44\n  return \"101101\"\
    \ if x == 45\n  return \"101110\" if x == 46\n  return \"101111\" if", "  return\
    \ x.to_s if x < base\n  change_base(x / base, base) + (x % base).to_s\nend", " \
    \ return \"\" if x == 0\n  change_base(x / base, base) + (x % base).to_s\nend",
  "  return x.to_s if base == 10\n  return change_base(x / base, base) + (x % base).to_s\
    \ if x > 0\n  \"\"\nend", "  return x.to_s if x < base\n  change_base(x / base,\
    \ base) + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base,\
    \ base) + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base,\
    \ base) + (x % base).to_s\nend", "  return \"0\" if x == 0\n  return \"1\" if\
    \ x == 1\n  return \"10\" if x == 2\n  return \"11\" if x == 3\n  return \"100\"\
    \ if x == 4\n  return \"101\" if x == 5\n  return \"110\" if x == 6\n  return\
    \ \"111\" if x == 7\n  return \"1000\" if x == 8\n  return \"1001\" if x == 9\n\
    \  return \"1010\" if x == 10\n  return \"1011\" if x == 11\n  return \"1100\"\
    \ if x == 12\n  return \"1101\" if x == 13\n  return \"1110\" if x == 14\n  return\
    \ \"1111\" if x == 15\n  return \"10000\" if x == 16\n  return \"10001\" if x\
    \ == 17\n  return \"10010\" if x == 18\n  return \"10011\" if x == 19\n  return\
    \ \"10100\" if x == 20\n  return \"10101\" if x == 21\n  return \"10110\" if x\
    \ == 22\n  return \"10111\" if x == 23\n  return \"11000\" if x == 24\n  return\
    \ \"11001\" if x == 25\n  return \"11010\" if x == 26\n  return \"11011\" if x\
    \ == 27\n  return \"11100\" if x == 28\n  return \"11101\" if x == 29\n  return\
    \ \"11110\" if x == 30\n  return \"11111\" if x == 31\n  return \"100000\" if\
    \ x == 32\n  return \"100001\" if x == 33\n  return \"100010\" if x == 34\n  return\
    \ \"100011\" if x == 35\n  return \"100100\" if x == 36\n  return \"100101\" if\
    \ x == 37\n  return \"100110\" if x == 38\n  return \"100111\" if x == 39\n  return\
    \ \"101000\" if x == 40\n  return \"101001\" if x == 41\n  return \"101010\" if\
    \ x == 42\n  return \"101011\" if x == 43\n  return \"101100\" if x == 44\n  return\
    \ \"101101\" if x == 45\n  return \"101110\" if x == 46\n  return \"101111\" if",
  "  return x.to_s if base == 10\n  return change_base(x / base, base) + (x % base).to_s\
    \ if x > 0\n  \"\"\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend", "  return \"\" if x == 0\n  change_base(x / base, base)\
    \ + (x % base).to_s\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_13_greatest_common_divisor
language: rb
prompt: "# Return a greatest common divisor of two integers a and b\n# >>> greatest_common_divisor.call(3,\
  \ 5)\n# 1\n# >>> greatest_common_divisor.call(25, 15)\n# 5\ndef greatest_common_divisor(a,\
  \ b)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_greatest_common_divisor\n\
  \    candidate = method(:greatest_common_divisor)\n    assert_equal(1, candidate.call(3,\
  \ 7))\n    assert_equal(5, candidate.call(10, 15))\n    assert_equal(7, candidate.call(49,\
  \ 14))\n    assert_equal(12, candidate.call(144, 60))\n  end\nend\n"
completions: ["  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a -\
    \ b, b)\n  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  if a ==\
    \ b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n   \
    \ greatest_common_divisor(a, b - a)\n  end\nend", "  return a if b == 0\n  greatest_common_divisor(b,\
    \ a % b)\nend", "  a, b = b, a % b while b.nonzero?\n  a.abs\nend", "  return\
    \ a if b == 0\n  greatest_common_divisor(b, a % b)\nend", "  if a == b\n    a\n\
    \  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  if b == 0\n    a\n  else\n    greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "  a, b = b, a if a < b\n  while b > 0\n    a, b = b, a\
    \ % b\n  end\n  a\nend", "  a, b = b, a if a < b\n  return a if b == 0\n  greatest_common_divisor(b,\
    \ a % b)\nend", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a\
    \ - b, b)\n  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  if a\
    \ == b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n\
    \    greatest_common_divisor(a, b - a)\n  end\nend", "  a, b = b, a % b while\
    \ b.nonzero?\n  a.abs\nend", "  return a if b == 0\n  greatest_common_divisor(b,\
    \ a % b)\nend", "  if a == b\n    a\n  elsif a > b\n    greatest_common_divisor(a\
    \ - b, b)\n  else\n    greatest_common_divisor(a, b - a)\n  end\nend", "  if a\
    \ == b\n    a\n  elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n\
    \    greatest_common_divisor(a, b - a)\n  end\nend", "  if a == b\n    a\n  elsif\
    \ a > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  # TODO: implement me!\nend", "  if a == b\n    a\n \
    \ elsif a > b\n    greatest_common_divisor(a - b, b)\n  else\n    greatest_common_divisor(a,\
    \ b - a)\n  end\nend", "  # TODO: implement me\nend", "  return a if b == 0\n\
    \  greatest_common_divisor(b, a % b)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

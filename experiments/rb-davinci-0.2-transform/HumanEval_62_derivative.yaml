name: HumanEval_62_derivative
language: rb
prompt: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
  \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
  \ derivative.call([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative.call([1,\
  \ 2, 3])\n# [2, 6]\ndef derivative(xs)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_derivative\n\
  \    candidate = method(:derivative)\n    assert_equal([1, 4, 12, 20], candidate.call([3,\
  \ 1, 2, 4, 5]))\n    assert_equal([2, 6], candidate.call([1, 2, 3]))\n    assert_equal([2,\
  \ 2], candidate.call([3, 2, 1]))\n    assert_equal([2, 2, 0, 16], candidate.call([3,\
  \ 2, 1, 0, 4]))\n    assert_equal([], candidate.call([1]))\n  end\nend\n"
completions: ["  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend",
  "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_index.map { |i| xs[i] * i }[1..-1]\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    i *\
    \ x\n  end.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    i * x\n  end.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    if i == 0\n      nil\n    else\n      x * i\n    end\n  end.compact\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map do |x,\
    \ i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i\
    \ }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", " \
    \ xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", " \
    \ xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map do |x,\
    \ i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i\
    \ }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", " \
    \ xs.each_index.map { |i| i * xs[i] }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| i * x }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend",
  "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map do |x,\
    \ i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n  \
    \  x * i\n  end.drop(1)\nend", "  # TODO: implement\n  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map do |x,\
    \ i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n  \
    \  x * i\n  end.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x * i\n\
    \  end.drop(1)\nend", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_index.map\
    \ { |i| xs[i] * i }.drop(1)\nend", "  (1...xs.length).map { |i| xs[i] * i }\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    i *\
    \ x\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  # TODO\nend", "  xs.each_with_index.map { |x, i| x\
    \ * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", " \
    \ (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x,\
    \ i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    i *\
    \ x\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", " \
    \ xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  (1...xs.length).map {\
    \ |i| xs[i] * i }\nend", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", " \
    \ xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", " \
    \ xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  (1...xs.length).map { |i| xs[i]\
    \ * i }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", " \
    \ xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    i *\
    \ x\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    x *\
    \ i\n  end.drop(1)\nend", "  return [] if xs.empty?\n  xs.drop(1).map.with_index\
    \ { |x, i| (i + 1) * x }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  (1...xs.length).map\
    \ { |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", " \
    \ xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.map.with_index { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  # your code here\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_index.map { |i| i * xs[i] }[1..-1]\nend", "  xs.each_index.map\
    \ { |i| xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_27_flip_case
language: rb
prompt: "# For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n# >>> flip_case.call(\"Hello\")\n# \"hELLO\"\ndef flip_case(string)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_flip_case\n\
  \    candidate = method(:flip_case)\n    assert_equal(\"\", candidate.call(\"\"\
  ))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"))\n    assert_equal(\"\
  tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"These violent delights\
  \ have violent ends\"))\n  end\nend\n"
completions: ["  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.chars.map { |char| char == char.upcase\
    \ ? char.downcase : char.upcase }.join\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.chars.map do |char|\n    if char =~\
    \ /[a-z]/\n      char.upcase\n    elsif char =~ /[A-Z]/\n      char.downcase\n\
    \    else\n      char\n    end\n  end.join\nend", "  string.swapcase\nend", " \
    \ string.swapcase\nend", "  string.chars.map do |char|\n    if char =~ /[a-z]/\n\
    \      char.upcase\n    elsif char =~ /[A-Z]/\n      char.downcase\n    else\n\
    \      char\n    end\n  end.join\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.chars.map { |char| char.match(/[a-z]/) ? char.upcase : char.downcase\
    \ }.join\nend", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.chars.map\
    \ do |char|\n    if char =~ /[a-z]/\n      char.upcase\n    elsif char =~ /[A-Z]/\n\
    \      char.downcase\n    else\n      char\n    end\n  end.join\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  new_string = \"\"\
    \n  string.each_char do |char|\n    if char == char.upcase\n      new_string <<\
    \ char.downcase\n    else\n      new_string << char.upcase\n    end\n  end\n \
    \ new_string\nend", "  string.swapcase\nend", "  string.swapcase\nend", "  string.chars.map\
    \ { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend", " \
    \ string.swapcase\nend", "  string.chars.map { |char| char == char.upcase ? char.downcase\
    \ : char.upcase }.join\nend", "  string.swapcase\nend", "  string.swapcase\nend",
  "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\nend", " \
    \ string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\nend", " \
    \ string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\nend", " \
    \ string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\nend", " \
    \ string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase\
    \ }.join\nend", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.swapcase\nend", "  string.chars.map { |char| char == char.upcase\
    \ ? char.downcase : char.upcase }.join\nend", "  string.swapcase\nend", "  string.swapcase\n\
    end", "  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase\
    \ }.join\nend", "  string.swapcase\nend", "  string.swapcase\nend", "  string.chars.map\
    \ { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend", " \
    \ string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\nend", " \
    \ string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\nend", " \
    \ string.swapcase\nend", "  string.swapcase\nend", "  string.swapcase\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

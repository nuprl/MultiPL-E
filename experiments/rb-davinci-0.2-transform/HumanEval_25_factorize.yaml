name: HumanEval_25_factorize
language: rb
prompt: "# Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n# Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n# Input number should be equal\
  \ to the product of all factors\n# >>> factorize.call(8)\n# [2, 2, 2]\n# >>> factorize.call(25)\n\
  # [5, 5]\n# >>> factorize.call(70)\n# [2, 5, 7]\ndef factorize(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_factorize\n\
  \    candidate = method(:factorize)\n    assert_equal([2], candidate.call(2))\n\
  \    assert_equal([2, 2], candidate.call(4))\n    assert_equal([2, 2, 2], candidate.call(8))\n\
  \    assert_equal([3, 19], candidate.call(57))\n    assert_equal([3, 3, 19, 19],\
  \ candidate.call(3249))\n    assert_equal([3, 3, 3, 19, 19, 19], candidate.call(185193))\n\
  \    assert_equal([3, 19, 19, 19], candidate.call(20577))\n    assert_equal([2,\
  \ 3, 3], candidate.call(18))\n  end\nend\n"
completions: ["  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n        factors\
    \ << i\n        n /= i\n        break\n      end\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  divisor = 2\n  while n > 1\n    while n % divisor == 0\n      factors\
    \ << divisor\n      n /= divisor\n    end\n    divisor += 1\n  end\n  factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n\
    \      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  factors = []\n  factor = 2\n  while n > 1\n    while n % factor == 0\n\
    \      factors << factor\n      n /= factor\n    end\n    factor += 1\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i ==\
    \ 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n   \
    \   n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n\
    \      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  factors = []\n  divisor = 2\n  while n > 1\n    while n % divisor ==\
    \ 0\n      factors << divisor\n      n /= divisor\n    end\n    divisor += 1\n\
    \  end\n  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n    while n\
    \ % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  prime_factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      prime_factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  prime_factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n  end\n  factors\nend", "  result = []\n  i = 2\n\
    \  while i <= n\n    if n % i == 0\n      result << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  result\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n     \
    \ i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n\
    \ > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i\
    \ += 1\n  end\n  factors\nend", "  factors = []\n  while n > 1\n    (2..n).each\
    \ do |i|\n      if n % i == 0\n        factors << i\n        n /= i\n        break\n\
    \      end\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n    \
    \  i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n    \
    \  i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n    \
    \  i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n     \
    \ i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n\
    \ > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i\
    \ += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n   \
    \ if n % i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n  \
    \  end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while\
    \ n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n \
    \ factors\nend", "  factors = []\n  divisor = 2\n  while n > 1\n    while n %\
    \ divisor == 0\n      factors << divisor\n      n /= divisor\n    end\n    divisor\
    \ += 1\n  end\n  factors\nend", "  factors = []\n  while n > 1\n    (2..n).each\
    \ do |i|\n      if n % i == 0\n        factors << i\n        n /= i\n        break\n\
    \      end\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n     \
    \ i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\n\
    end", "  primes = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      primes\
    \ << i\n      n /= i\n      i = 2\n    else\n      i += 1\n    end\n  end\n  primes\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n        factors\
    \ << i\n        n /= i\n        break\n      end\n    end\n  end\n  factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n      redo\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  divisor = 2\n  while n > 1\n    while n % divisor == 0\n      factors\
    \ << divisor\n      n /= divisor\n    end\n    divisor += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n      n\
    \ /= i\n    end\n  end\n  factors\nend", "  factors = []\n  factor = 2\n  while\
    \ n > 1\n    while n % factor == 0\n      factors << factor\n      n /= factor\n\
    \    end\n    factor += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n\
    \  while i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  factor = 2\n\
    \  while n > 1\n    while n % factor == 0\n      factors << factor\n      n /=\
    \ factor\n    end\n    factor += 1\n  end\n  factors\nend", "  factors = []\n\
    \  divisor = 2\n  while n > 1\n    while n % divisor == 0\n      factors << divisor\n\
    \      n /= divisor\n    end\n    divisor += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  result =\
    \ []\n  i = 2\n  while n > 1\n    if n % i == 0\n      result << i\n      n /=\
    \ i\n    else\n      i += 1\n    end\n  end\n  result\nend", "  factors = []\n\
    \  prime_factors = []\n  (2..n).each do |i|\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n      i -= 1\n    end\n  end\n  factors.each do |i|\n  \
    \  if is_prime?(i)\n      prime_factors << i\n    end\n  end\n  prime_factors\n\
    end", "  factors = []\n  factor = 2\n  while n > 1\n    while n % factor == 0\n\
    \      factors << factor\n      n /= factor\n    end\n    factor += 1\n  end\n\
    \  factors\nend", "  result = []\n  i = 2\n  while i <= n\n    if n % i == 0\n\
    \      result << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  result\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n        factors\
    \ << i\n        n /= i\n        break\n      end\n    end\n  end\n  factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while n > 1\n    while n % i == 0\n      factors << i\n      n /= i\n \
    \   end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n    \
    \  i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  divisor = 2\n \
    \ while n > 1\n    while n % divisor == 0\n      factors << divisor\n      n /=\
    \ divisor\n    end\n    divisor += 1\n  end\n  factors\nend", "  factors = []\n\
    \  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n\
    \    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while\
    \ n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\nend",
  "  result = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      result << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  result\nend", "  factors\
    \ = []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n        factors\
    \ << i\n        n /= i\n        break\n      end\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while i\
    \ <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i\
    \ += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n >\
    \ 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i +=\
    \ 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n\
    \    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n\
    \    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n \
    \   if n % i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n\
    \    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n  \
    \  while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n \
    \ end\n  factors\nend", "  result = []\n  i = 2\n  while i <= n\n    if n % i\
    \ == 0\n      result << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n\
    \  result\nend", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n\
    \      factors << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n        factors\
    \ << i\n        n /= i\n        break\n      end\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n\
    \      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i ==\
    \ 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  result = []\n  i = 2\n  while\
    \ i <= n\n    if n % i == 0\n      result << i\n      n /= i\n    else\n     \
    \ i += 1\n    end\n  end\n  result\nend", "  factors = []\n  i = 2\n  while n\
    \ > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i\
    \ += 1\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  result = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      result << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  result\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  result = []\n\
    \  i = 2\n  while i <= n\n    if n % i == 0\n      result << i\n      n /= i\n\
    \    else\n      i += 1\n    end\n  end\n  result\nend", "  factors = []\n  factor\
    \ = 2\n  while n > 1\n    while n % factor == 0\n      factors << factor\n   \
    \   n /= factor\n    end\n    factor += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  divisor = 2\n  while n > 1\n    while n % divisor == 0\n      factors\
    \ << divisor\n      n /= divisor\n    end\n    divisor += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  divisor = 2\n  while n > 1\n    while n % divisor == 0\n      factors\
    \ << divisor\n      n /= divisor\n    end\n    divisor += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors <<\
    \ i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n\
    \  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n\
    \    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n  \
    \  if n % i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n \
    \   end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n   \
    \ while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n\
    \  factors\nend", "  # TODO: implement this method\nend", "  factors = []\n  i\
    \ = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n      n /= i\n\
    \    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  divisor = 2\n\
    \  while n > 1\n    while n % divisor == 0\n      factors << divisor\n      n\
    \ /= divisor\n    end\n    divisor += 1\n  end\n  factors\nend", "  factors =\
    \ []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n      n\
    \ /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n >\
    \ 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i +=\
    \ 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n\
    \  end\n  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n    if n %\
    \ i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n    end\n\
    \  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while n %\
    \ i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\nend", " \
    \ factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n\
    \ > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i\
    \ += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if\
    \ n % i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n    end\n\
    \  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while n %\
    \ i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\nend", " \
    \ factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n\
    \      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  divisor = 2\n\
    \  while n > 1\n    while n % divisor == 0\n      factors << divisor\n      n\
    \ /= divisor\n    end\n    divisor += 1\n  end\n  factors\nend", "  result = []\n\
    \  i = 2\n  while n > 1\n    if n % i == 0\n      result << i\n      n /= i\n\
    \    else\n      i += 1\n    end\n  end\n  result\nend", "  factors = []\n  divisor\
    \ = 2\n  while n > 1\n    while n % divisor == 0\n      factors << divisor\n \
    \     n /= divisor\n    end\n    divisor += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  divisor = 2\n  while n > 1\n    while n % divisor == 0\n      factors\
    \ << divisor\n      n /= divisor\n    end\n    divisor += 1\n  end\n  factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  divisor\
    \ = 2\n  while n > 1\n    while n % divisor == 0\n      factors << divisor\n \
    \     n /= divisor\n    end\n    divisor += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while i\
    \ <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i\
    \ += 1\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n  \
    \      factors << i\n        n /= i\n        break\n      end\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n\
    \      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  divisor = 2\n  while n > 1\n    while n % divisor == 0\n      factors\
    \ << divisor\n      n /= divisor\n    end\n    divisor += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors <<\
    \ i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n\
    \  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n\
    \    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while\
    \ n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\nend",
  "  factors = []\n  factor = 2\n  while n > 1\n    while n % factor == 0\n      factors\
    \ << factor\n      n /= factor\n    end\n    factor += 1\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors <<\
    \ i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n\
    \  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n\
    \    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n\
    \      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  prime_factors = []\n  divisor = 2\n  while n > 1\n    while n % divisor\
    \ == 0\n      prime_factors << divisor\n      n /= divisor\n    end\n    divisor\
    \ += 1\n  end\n  prime_factors\nend", "  factors = []\n  i = 2\n  while n > 1\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n\
    \  end\n  factors\nend", "  factors = []\n  while n > 1\n    (2..n).each do |i|\n\
    \      if n % i == 0\n        factors << i\n        n /= i\n        break\n  \
    \    end\n    end\n  end\n  factors\nend", "  return [] if n == 1\n  factor =\
    \ (2..n).find { |x| n % x == 0 }\n  [factor] + factorize(n / factor)\nend", " \
    \ factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n   \
    \   n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  result = []\n  i =\
    \ 2\n  while i <= n\n    if n % i == 0\n      result << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  result\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n     \
    \ i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n\
    \ > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i\
    \ += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n >\
    \ 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i +=\
    \ 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while\
    \ n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n \
    \ factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n\
    \      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend",
  "  factors = []\n  divisor = 2\n  while n > 1\n    while n % divisor == 0\n    \
    \  factors << divisor\n      n /= divisor\n    end\n    divisor += 1\n  end\n\
    \  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n\
    \      factors << i\n      n /= i\n    end\n  end\n  factors\nend", "  result\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      result << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  result\nend", "  factors = []\n\
    \  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n\
    \    end\n  end\n  factors\nend", "  result = []\n  i = 2\n  while n > 1\n   \
    \ if n % i == 0\n      result << i\n      n /= i\n    else\n      i += 1\n   \
    \ end\n  end\n  result\nend", "  factors = []\n  (2..n).each do |i|\n    if n\
    \ % i == 0\n      factors << i\n      n /= i\n      redo\n    end\n  end\n  factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n      redo\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  while n > 1\n    (2..n).each do |i|\n   \
    \   if n % i == 0\n        factors << i\n        n /= i\n        break\n     \
    \ end\n    end\n  end\n  factors\nend", "  factors = []\n  while n > 1\n    (2..n).each\
    \ do |i|\n      if n % i == 0\n        factors << i\n        n /= i\n        break\n\
    \      end\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n   \
    \ i += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n  \
    \  while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n \
    \ end\n  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n    if n % i\
    \ == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i ==\
    \ 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  factor = 2\n  while n > 1\n    while n % factor == 0\n\
    \      factors << factor\n      n /= factor\n    end\n    factor += 1\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n\
    \      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  (2..n).each do |i|\n    if n % i == 0\n \
    \     factors << i\n      n /= i\n      i -= 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n   \
    \   n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  divisor\
    \ = 2\n  while n > 1\n    while n % divisor == 0\n      factors << divisor\n \
    \     n /= divisor\n    end\n    divisor += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  factor = 2\n  while\
    \ n > 1\n    while n % factor == 0\n      factors << factor\n      n /= factor\n\
    \    end\n    factor += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n\
    \  while n > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n\
    \    i += 1\n  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n \
    \   while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n  \
    \      factors << i\n        n /= i\n        break\n      end\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i ==\
    \ 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n\
    \      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  factors = []\n  divisor = 2\n  while n > 1\n    while n % divisor ==\
    \ 0\n      factors << divisor\n      n /= divisor\n    end\n    divisor += 1\n\
    \  end\n  factors\nend", "  factors = []\n  while n > 1\n    (2..n).each do |i|\n\
    \      if n % i == 0\n        factors << i\n        n /= i\n        break\n  \
    \    end\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n\
    \ > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i\
    \ += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n >\
    \ 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i +=\
    \ 1\n    end\n  end\n  factors\nend", "  factors = []\n  divisor = 2\n  while\
    \ n > 1\n    while n % divisor == 0\n      factors << divisor\n      n /= divisor\n\
    \    end\n    divisor += 1\n  end\n  factors\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

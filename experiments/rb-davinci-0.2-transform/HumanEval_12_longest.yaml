name: HumanEval_12_longest
language: rb
prompt: "# Out of list of strings, return the longest one. Return the first one in\
  \ case of multiple\n# strings of the same length. Return None in case the input\
  \ list is empty.\n# >>> longest.call([])\n# nil\n# >>> longest.call([\"a\", \"b\"\
  , \"c\"])\n# \"a\"\n# >>> longest.call([\"a\", \"bb\", \"ccc\"])\n# \"ccc\"\ndef\
  \ longest(strings)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_longest\n\
  \    candidate = method(:longest)\n    assert_equal(nil, candidate.call([]))\n \
  \   assert_equal(\"x\", candidate.call([\"x\", \"y\", \"z\"]))\n    assert_equal(\"\
  zzzz\", candidate.call([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]))\n\
  \  end\nend\n"
completions: ["  strings.max_by(&:length)\nend", "  strings.max_by { |s| s.length\
    \ }\nend", "  strings.max_by(&:length)\nend", "  return nil if strings.empty?\n\
    \  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by\
    \ { |string| string.length }\nend", "  strings.max_by { |s| s.length }\nend",
  "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by { |s| s.length }\nend", "  strings.max_by { |string| string.length\
    \ }\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend",
  "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by\
    \ { |s| s.length }\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by { |str| str.length }\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by { |string| string.length\
    \ }\nend", "  strings.max_by { |s| s.length }\nend", "  strings.max_by { |string|\
    \ string.length }\nend", "  return nil if strings.empty?\n  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by { |str| str.length\
    \ }\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend",
  "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  if strings.empty?\n    nil\n  else\n    strings.max_by\
    \ { |s| s.length }\n  end\nend", "  strings.max_by(&:length)\nend", "  strings.max_by\
    \ { |s| s.length }\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by { |str| str.length }\nend", "  strings.max_by { |s| s.length\
    \ }\nend", "  strings.max_by { |s| s.length }\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by { |s| s.length }\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  return nil if strings.empty?\n  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by { |s| s.length }\nend", " \
    \ strings.max_by(&:length)\nend", "  return nil if strings.empty?\n  strings.max_by\
    \ { |s| s.length }\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.sort_by(&:length).last\nend", "  strings.max_by(&:length)\nend", " \
    \ return nil if strings.empty?\n  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by { |s| s.length }\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by { |s| s.length }\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.sort_by(&:length).last\nend", "  strings.max_by { |str| str.length }\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ return nil if strings.empty?\n  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ return nil if strings.empty?\n  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by { |s| s.length }\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by { |str| str.length }\nend", "  strings.max_by(&:length)\nend",
  "  # TODO: implement me\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  return nil if strings.empty?\n  strings.max_by { |s| s.length }\nend",
  "  strings.sort_by(&:length).last\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ longest = nil\n  strings.each do |string|\n    if longest.nil? || string.length\
    \ > longest.length\n      longest = string\n    end\n  end\n  longest\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", " \
    \ strings.max_by(&:length)\nend", "  strings.max_by(&:length)\nend", "  strings.max_by(&:length)\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

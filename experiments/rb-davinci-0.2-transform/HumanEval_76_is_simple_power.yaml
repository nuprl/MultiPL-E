name: HumanEval_76_is_simple_power
language: rb
prompt: "# Your task is to write a function that returns true if a number x is a simple\n\
  # power of n and false in other cases.\n# x is a simple power of n if n**int=x\n\
  # For example:\n# >>> is_simple_power.call(1, 4)\n# true\n# >>> is_simple_power.call(2,\
  \ 2)\n# true\n# >>> is_simple_power.call(8, 2)\n# true\n# >>> is_simple_power.call(3,\
  \ 2)\n# false\n# >>> is_simple_power.call(3, 1)\n# false\n# >>> is_simple_power.call(5,\
  \ 3)\n# false\ndef is_simple_power(x, n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_simple_power\n\
  \    candidate = method(:is_simple_power)\n    assert_equal(true, candidate.call(16,\
  \ 2))\n    assert_equal(false, candidate.call(143214, 16))\n    assert_equal(true,\
  \ candidate.call(4, 2))\n    assert_equal(true, candidate.call(9, 3))\n    assert_equal(true,\
  \ candidate.call(16, 4))\n    assert_equal(false, candidate.call(24, 2))\n    assert_equal(false,\
  \ candidate.call(128, 4))\n    assert_equal(false, candidate.call(12, 6))\n    assert_equal(true,\
  \ candidate.call(1, 1))\n    assert_equal(true, candidate.call(1, 12))\n  end\n\
  end\n"
completions: ["  return false if n == 1\n  return true if n**(Math.log(x)/Math.log(n)).to_i\
    \ == x\n  false\nend", "  return false if x == 0\n  return true if x == 1\n  return\
    \ true if n == 1\n  return false if n == 0\n  return false if x < n\n  return\
    \ true if x == n**2\n  return true if x == n**3\n  return true if x == n**4\n\
    \  return true if x == n**5\n  return true if x == n**6\n  return true if x ==\
    \ n**7\n  return true if x == n**8\n  return true if x == n**9\n  return true\
    \ if x == n**10\n  return true if x == n**11\n  return true if x == n**12\n  return\
    \ true if x == n**13\n  return true if x == n**14\n  return true if x == n**15\n\
    \  return true if x == n**16\n  return true if x == n**17\n  return true if x\
    \ == n**18\n  return true if x == n**19\n  return true if x == n**20\n  return\
    \ true if x == n**21\n  return true if x == n**22\n  return true if x == n**23\n\
    \  return true if x == n**24\n  return true if x == n**25\n  return true if x\
    \ == n**26\n  return true if x == n**27\n  return true if x == n**28\n  return\
    \ true if x == n**29\n  return true if x == n**30\n  return true if x == n**31\n\
    \  return true if x == n**32\n  return true if x == n**33\n  return true if x\
    \ == n**34\n  return true if x == n**35\n  return true if x == n**36\n  return\
    \ true if x == n**37\n  return true if x == n**38\n  return true if x == n**39\n\
    \  return true if x == n**40\n  return true if x == n**41\n  return true if x\
    \ == n**42\n  return true if x == n**43\n  return true if x == n**44\n  return\
    \ true if x == n**45\n  return true if x == n**46\n  return true if x == n**47\n\
    \  return true if x == n**48\n ", "  return false if x == 0\n  return true if\
    \ x == 1\n  return false if n == 1\n  return true if x == n\n  return false if\
    \ x % n != 0\n  is_simple_power(x / n, n)\nend", "  x == n**(Math.log(x)/Math.log(n)).to_i\n\
    end", "  x == n**(Math.log(x)/Math.log(n)).to_i\nend", "  return false if x ==\
    \ 1 && n != 1\n  return true if x == 1 && n == 1\n  return false if x == 0\n \
    \ return false if n == 0\n  return false if n == 1\n  return false if x < n\n\
    \  return false if x % n != 0\n  return false if x % n == 0 && x / n < n\n  return\
    \ true if x % n == 0 && x / n == n\n  is_simple_power(x / n, n)\nend", "  return\
    \ false if x == 1 && n != 1\n  return true if x == 1 && n == 1\n  return true\
    \ if x == n\n  return false if x < n\n  return true if x == n**2\n  return false\
    \ if x < n**2\n  return true if x == n**3\n  return false if x < n**3\n  return\
    \ true if x == n**4\n  return false if x < n**4\n  return true if x == n**5\n\
    \  return false if x < n**5\n  return true if x == n**6\n  return false if x <\
    \ n**6\n  return true if x == n**7\n  return false if x < n**7\n  return true\
    \ if x == n**8\n  return false if x < n**8\n  return true if x == n**9\n  return\
    \ false if x < n**9\n  return true if x == n**10\n  return false if x < n**10\n\
    \  return true if x == n**11\n  return false if x < n**11\n  return true if x\
    \ == n**12\n  return false if x < n**12\n  return true if x == n**13\n  return\
    \ false if x < n**13\n  return true if x == n**14\n  return false if x < n**14\n\
    \  return true if x == n**15\n  return false if x < n**15\n  return true if x\
    \ == n**16\n  return false if x < n**16\n  return true if x == n**17\n  return\
    \ false if x < n**17\n  return true if x == n**18\n  return false if x < n**18\n\
    \  return true if x == n**19\n  return false if x < n**19\n  return true if x\
    \ == n**20\n  return false if x < n**20\n  return true if x == n**21\n  return\
    \ false if x < n**21\n  return true if x == n**22\n  return false if x < n**22\n\
    \  return true if x == n**23\n  return false if x < n**23\n  return true if x\
    \ == n**24\n  return false if x < n**24\n  return true if x == n**25\n ", "  x\
    \ == n**(Math.log(x)/Math.log(n)).to_i\nend", "  Math.log(x, n) % 1 == 0\nend",
  "  return false if n == 1\n  return true if x == 1\n  return true if x == n\n  return\
    \ false if x < n\n  return true if x == n**2\n  return false if x < n**2\n  return\
    \ true if x == n**3\n  return false if x < n**3\n  return true if x == n**4\n\
    \  return false if x < n**4\n  return true if x == n**5\n  return false if x <\
    \ n**5\n  return true if x == n**6\n  return false if x < n**6\n  return true\
    \ if x == n**7\n  return false if x < n**7\n  return true if x == n**8\n  return\
    \ false if x < n**8\n  return true if x == n**9\n  return false if x < n**9\n\
    \  return true if x == n**10\n  return false if x < n**10\n  return true if x\
    \ == n**11\n  return false if x < n**11\n  return true if x == n**12\n  return\
    \ false if x < n**12\n  return true if x == n**13\n  return false if x < n**13\n\
    \  return true if x == n**14\n  return false if x < n**14\n  return true if x\
    \ == n**15\n  return false if x < n**15\n  return true if x == n**16\n  return\
    \ false if x < n**16\n  return true if x == n**17\n  return false if x < n**17\n\
    \  return true if x == n**18\n  return false if x < n**18\n  return true if x\
    \ == n**19\n  return false if x < n**19\n  return true if x == n**20\n  return\
    \ false if x < n**20\n  return true if x == n**21\n  return false if x < n**21\n\
    \  return true if x == n**22\n  return false if x < n**22\n  return true if x\
    \ == n**23\n  return false if x < n**23\n  return true if x == n**24\n  return\
    \ false if x < n**24\n  return true if x == n**25\n  return false if x < n**25",
  "  x == n**(Math.log(x)/Math.log(n)).to_i\nend", "  x == n**Math.log(x, n).to_i\n\
    end", "  return true if x == 1 && n == 1\n  return false if n == 1\n  return false\
    \ if x == 1\n  return false if x < n\n  return false if x % n != 0\n  return false\
    \ if x % n == 0 && x / n < n\n  return true if x % n == 0 && x / n == n\n  is_simple_power(x\
    \ / n, n)\nend", "  x == n**(Math.log(x)/Math.log(n)).to_i\nend", "  return false\
    \ if x == 0\n  return true if x == 1\n  return false if n == 1\n  return true\
    \ if x == n**2\n  return true if x == n**3\n  return true if x == n**4\n  return\
    \ true if x == n**5\n  return true if x == n**6\n  return true if x == n**7\n\
    \  return true if x == n**8\n  return true if x == n**9\n  return true if x ==\
    \ n**10\n  return true if x == n**11\n  return true if x == n**12\n  return true\
    \ if x == n**13\n  return true if x == n**14\n  return true if x == n**15\n  return\
    \ true if x == n**16\n  return true if x == n**17\n  return true if x == n**18\n\
    \  return true if x == n**19\n  return true if x == n**20\n  return true if x\
    \ == n**21\n  return true if x == n**22\n  return true if x == n**23\n  return\
    \ true if x == n**24\n  return true if x == n**25\n  return true if x == n**26\n\
    \  return true if x == n**27\n  return true if x == n**28\n  return true if x\
    \ == n**29\n  return true if x == n**30\n  return true if x == n**31\n  return\
    \ true if x == n**32\n  return true if x == n**33\n  return true if x == n**34\n\
    \  return true if x == n**35\n  return true if x == n**36\n  return true if x\
    \ == n**37\n  return true if x == n**38\n  return true if x == n**39\n  return\
    \ true if x == n**40\n  return true if x == n**41\n  return true if x == n**42\n\
    \  return true if x == n**43\n  return true if x == n**44\n  return true if x\
    \ == n**45\n  return true if x == n**46\n  return true if x == n**47\n  return\
    \ true if x == n**48\n  return true if x == n**49\n  return true if x == n", " \
    \ return false if x == 1 && n != 1\n  return true if x == 1 && n == 1\n  return\
    \ false if x < n\n  return true if x == n\n  return false if x % n != 0\n  is_simple_power(x\
    \ / n, n)\nend", "  return false if n == 1\n  return true if x == 1\n  return\
    \ true if x == n\n  return false if x < n\n  is_simple_power(x/n, n)\nend", " \
    \ return false if n == 1\n  return true if x == 1\n  return true if x == n\n \
    \ return false if x < n\n  is_simple_power(x / n, n)\nend", "  return true if\
    \ x == 1\n  return false if n == 1\n  return false if x < n\n  return true if\
    \ x == n\n  return false if x % n != 0\n  is_simple_power(x / n, n)\nend", " \
    \ return false if x == 1 && n != 1\n  return true if x == 1 && n == 1\n  return\
    \ false if x == 0\n  return true if x == n\n  return false if x < n\n  return\
    \ false if x % n != 0\n  is_simple_power(x / n, n)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

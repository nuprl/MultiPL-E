name: HumanEval_9_rolling_max
language: rb
prompt: "# From a given list of integers, generate a list of rolling maximum element\
  \ found until given moment\n# in the sequence.\n# >>> rolling_max.call([1, 2, 3,\
  \ 2, 3, 4, 2])\n# [1, 2, 3, 3, 3, 4, 4]\ndef rolling_max(numbers)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_rolling_max\n\
  \    candidate = method(:rolling_max)\n    assert_equal([], candidate.call([]))\n\
  \    assert_equal([1, 2, 3, 4], candidate.call([1, 2, 3, 4]))\n    assert_equal([4,\
  \ 4, 4, 4], candidate.call([4, 3, 2, 1]))\n    assert_equal([3, 3, 3, 100, 100],\
  \ candidate.call([3, 2, 3, 100, 3]))\n  end\nend\n"
completions: ["  numbers.each_with_index.map do |number, index|\n    numbers[0..index].max\n\
    \  end\nend", "  numbers.each_with_index.map { |number, index| numbers[0..index].max\
    \ }\nend", "  numbers.each_with_index.map do |_, i|\n    numbers[0..i].max\n \
    \ end\nend", "  numbers.each_with_index.map do |number, index|\n    numbers[0..index].max\n\
    \  end\nend", "  result = []\n  max = 0\n  numbers.each do |number|\n    max =\
    \ number if number > max\n    result << max\n  end\n  result\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    numbers[0..index].max\n  end\nend", "  numbers.each_with_index.map\
    \ { |n, i| numbers[0..i].max }\nend", "  numbers.each_with_index.map { |n, i|\
    \ numbers[0..i].max }\nend", "  max = numbers.first\n  numbers.map do |number|\n\
    \    max = number if number > max\n    max\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    numbers[0..index].max\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    numbers[0..index].max\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    numbers[0..index].max\n  end\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    numbers[0..index].max\n  end\nend", "  numbers.each_with_index.map\
    \ { |n, i| numbers[0..i].max }\nend", "  result = []\n  max = 0\n  numbers.each\
    \ do |number|\n    if number > max\n      max = number\n    end\n    result <<\
    \ max\n  end\n  result\nend", "  result = []\n  max = nil\n  numbers.each do |number|\n\
    \    max = number if max.nil? || number > max\n    result << max\n  end\n  result\n\
    end", "  numbers.each_with_index.map do |number, index|\n    numbers[0..index].max\n\
    \  end\nend", "  numbers.each_with_index.map do |number, index|\n    numbers[0..index].max\n\
    \  end\nend", "  # TODO: implement this method\nend", "  numbers.each_with_index.map\
    \ do |number, index|\n    numbers[0..index].max\n  end\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

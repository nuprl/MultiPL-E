name: HumanEval_84_solve
language: rb
prompt: "# Given a positive integer N, return the total sum of its digits in binary.\n\
  # Example\n# >>> solve.call(1000)\n# \"1\"\n# >>> solve.call(150)\n# \"110\"\n#\
  \ >>> solve.call(147)\n# \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0\
  \ \u2264 N \u2264 10000.\n# Output:\n# a string of binary number\ndef solve(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
  \    candidate = method(:solve)\n    assert_equal(\"1\", candidate.call(1000))\n\
  \    assert_equal(\"110\", candidate.call(150))\n    assert_equal(\"1100\", candidate.call(147))\n\
  \    assert_equal(\"1001\", candidate.call(333))\n    assert_equal(\"10010\", candidate.call(963))\n\
  \  end\nend\n"
completions: ["  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).chars.inject(0) { |sum, n| sum + n.to_i }.to_s\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).inject(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).chars.map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).chars.map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).inject(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).inject(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end", "  n.to_s(2).split('').map(&:to_i).reduce(:+)\nend", "  n.to_s(2).chars.map(&:to_i).reduce(:+)\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

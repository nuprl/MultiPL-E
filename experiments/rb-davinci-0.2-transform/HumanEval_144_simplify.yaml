name: HumanEval_144_simplify
language: rb
prompt: "# Your task is to implement a function that will simplify the expression\n\
  # x * n. The function returns True if x * n evaluates to a whole number and False\n\
  # otherwise. Both x and n, are string representation of a fraction, and have the\
  \ following format,\n# <numerator>/<denominator> where both numerator and denominator\
  \ are positive whole numbers.\n# You can assume that x, and n are valid fractions,\
  \ and do not have zero as denominator.\n# >>> simplify.call(\"1/5\", \"5/1\")\n\
  # true\n# >>> simplify.call(\"1/6\", \"2/1\")\n# false\n# >>> simplify.call(\"7/10\"\
  , \"10/2\")\n# false\ndef simplify(x, n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_simplify\n\
  \    candidate = method(:simplify)\n    assert_equal(true, candidate.call(\"1/5\"\
  , \"5/1\"))\n    assert_equal(false, candidate.call(\"1/6\", \"2/1\"))\n    assert_equal(true,\
  \ candidate.call(\"5/1\", \"3/1\"))\n    assert_equal(false, candidate.call(\"7/10\"\
  , \"10/2\"))\n    assert_equal(true, candidate.call(\"2/10\", \"50/10\"))\n    assert_equal(true,\
  \ candidate.call(\"7/2\", \"4/2\"))\n    assert_equal(true, candidate.call(\"11/6\"\
  , \"6/1\"))\n    assert_equal(false, candidate.call(\"2/3\", \"5/2\"))\n    assert_equal(false,\
  \ candidate.call(\"5/2\", \"3/5\"))\n    assert_equal(true, candidate.call(\"2/4\"\
  , \"8/4\"))\n    assert_equal(true, candidate.call(\"2/4\", \"4/2\"))\n    assert_equal(true,\
  \ candidate.call(\"1/5\", \"5/1\"))\n    assert_equal(false, candidate.call(\"1/5\"\
  , \"1/5\"))\n  end\nend\n"
completions: ["  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator * n_numerator\
    \ * x_denominator % (x_denominator * n_denominator) == 0\nend", "  x_num, x_denom\
    \ = x.split('/').map(&:to_i)\n  n_num, n_denom = n.split('/').map(&:to_i)\n  (x_num\
    \ * n_denom) % (x_denom * n_num) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ * n_numerator * x_denominator % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator *\
    \ n_numerator\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den\
    \ = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num) == 0\nend",
  "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator * n_numerator\
    \ * x_denominator % (x_denominator * n_denominator) == 0\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator * n_numerator * x_denominator) % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator\
    \ * n_numerator * x_denominator) % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator * n_numerator * x_denominator) % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num,\
    \ n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num) == 0\n\
    end", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  return false if x_numerator * n_denominator\
    \ * n_numerator * x_denominator == 0\n  x_numerator * n_numerator % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_f)\n\
    \  n_num, n_den = n.split('/').map(&:to_f)\n  (x_num * n_den * n_num) % (x_den\
    \ * n_den) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ * n_numerator * x_denominator % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator * n_numerator * x_denominator\
    \ % (x_denominator * n_denominator) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  # Your code here\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  x_num * n_den == x_den * n_num\n\
    end", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  x_num * n_den == x_den * n_num\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_num,\
    \ x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  x_num * n_den == x_den * n_num\n\
    end", "  # Your code goes here\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ == x_denominator * n_numerator\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator *\
    \ n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  x_num * n_den == x_den * n_num\n\
    end", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator *\
    \ n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  x_num * n_den == x_den * n_num\n\
    end", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num,\
    \ n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num) == 0\n\
    end", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator\
    \ * n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ * n_numerator * x_denominator % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator\
    \ * n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ * n_numerator * x_denominator % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator * n_numerator * x_denominator\
    \ % (x_denominator * n_denominator) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  # Your\
    \ code here\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  return false if x_numerator\
    \ * n_denominator * n_numerator * x_denominator == 0\n  x_numerator * n_numerator\
    \ % x_denominator * n_denominator == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_num, x_denom = x.split('/').map(&:to_i)\n  n_num, n_denom = n.split('/').map(&:to_i)\n\
    \  (x_num * n_denom) % (x_denom * n_num) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator * n_numerator\
    \ * x_denominator % (x_denominator * n_denominator) == 0\nend", "  x_num, x_den\
    \ = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num\
    \ * n_den) % (x_den * n_num) == 0\nend", "  # Your code here\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ == x_denominator * n_numerator\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  x_num * n_den == x_den * n_num\n\
    end", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  x_num * n_den == x_den * n_num\nend", "  x = x.split(\"/\")\n  n = n.split(\"\
    /\")\n  x = x[0].to_i * n[1].to_i\n  n = n[0].to_i * x[1].to_i\n  x == n\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator * n_numerator * x_denominator\
    \ % (x_denominator * n_denominator) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator *\
    \ n_numerator\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den\
    \ = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator *\
    \ n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  x_num * n_den == x_den * n_num\n\
    end", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator\
    \ * n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ == x_denominator * n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ * n_numerator * x_denominator % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num,\
    \ n_den = n.split('/').map(&:to_i)\n  x_num * n_den == x_den * n_num\nend", " \
    \ x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_num,\
    \ x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator * n_numerator * x_denominator\
    \ % (x_denominator * n_denominator) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_num,\
    \ x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ == x_denominator * n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_f)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_f)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ * n_numerator * x_denominator % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator * n_numerator * x_denominator\
    \ % (x_denominator * n_denominator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num,\
    \ n_den = n.split('/').map(&:to_i)\n  x_num * n_den == x_den * n_num\nend", " \
    \ x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  x_num * n_den == x_den * n_num\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ * n_numerator * x_denominator % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den * n_num) % (x_den\
    \ * n_den) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den\
    \ = n.split('/').map(&:to_i)\n  x_num * n_den == x_den * n_num\nend", "  x_num,\
    \ x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator\
    \ * n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator\
    \ * n_numerator * x_denominator) % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num,\
    \ n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num) == 0\n\
    end", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator == x_denominator * n_numerator\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_numerator, x_denominator\
    \ = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den * n_num) % (x_den\
    \ * n_den) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num,\
    \ n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num) == 0\n\
    end", "  # your code here\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator * n_numerator * x_denominator) % (x_denominator\
    \ * n_denominator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num,\
    \ n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num) == 0\n\
    end", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator\
    \ * n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ == x_denominator * n_numerator\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ == x_denominator * n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ == x_denominator * n_numerator\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num, n_den = n.split('/').map(&:to_i)\n\
    \  (x_num * n_den) % (x_den * n_num) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  x_numerator * n_denominator\
    \ * n_numerator * x_denominator % (x_denominator * n_denominator) == 0\nend",
  "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator *\
    \ n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_numerator, x_denominator =\
    \ x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  x_numerator * n_denominator == x_denominator *\
    \ n_numerator\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n\
    \  n_numerator, n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n\
    \  n_num, n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num)\
    \ == 0\nend", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend", "  # Your code here\nend", "  x_numerator,\
    \ x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator = n.split('/').map(&:to_i)\n\
    \  (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\nend", " \
    \ x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator, n_denominator\
    \ = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\nend", "  x_num, x_den = x.split('/').map(&:to_i)\n  n_num,\
    \ n_den = n.split('/').map(&:to_i)\n  (x_num * n_den) % (x_den * n_num) == 0\n\
    end", "  x_numerator, x_denominator = x.split('/').map(&:to_i)\n  n_numerator,\
    \ n_denominator = n.split('/').map(&:to_i)\n  (x_numerator * n_denominator) %\
    \ (x_denominator * n_numerator) == 0\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

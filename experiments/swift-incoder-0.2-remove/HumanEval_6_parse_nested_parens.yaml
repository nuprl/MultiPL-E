name: HumanEval_6_parse_nested_parens
language: swift
prompt: "\n/// Input to this function is a string represented multiple groups for\
  \ nested parentheses separated by spaces.\n/// For each of the group, output the\
  \ deepest level of nesting of parentheses.\n/// E.g. (()()) has maximum two levels\
  \ of nesting while ((())) has three.\nfunc parse_nested_parens(paren_string: String)\
  \ -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(parse_nested_parens(paren_string: \"(()())\
  \ ((())) () ((())()())\") == [2, 3, 1, 3])\nassert(parse_nested_parens(paren_string:\
  \ \"() (()) ((())) (((())))\") == [1, 2, 3, 4])\nassert(parse_nested_parens(paren_string:\
  \ \"(()(())((())))\") == [4])"
completions: ["    var levels = [Int]()\n    var paren_count = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if c == paren_count {\n            levels[paren_count] += 1\n   \
    \     } else {\n            levels[paren_count] = 0\n            paren_count =\
    \ c\n        }\n    }\n    return levels", "    var level = 0\n    var paren_level\
    \ = 0\n    var paren_char = 0\n    var paren_char_count = 0\n    var paren_chars\
    \ = []\n    var paren_char_index = 0\n    var paren_char_counts = []\n    var\
    \ paren_char_indexes = []\n    var paren_char_count = 0\n    var paren_char_index\
    \ = 0\n    var paren_char_counts = []\n    var paren_char_indexes = []\n    var\
    \ paren_char_count = 0\n    var paren_char_index = 0\n    var paren_char_counts\
    \ = []\n    var paren_char_indexes = []\n    var paren_char_count = 0\n    var\
    \ paren_char_index = 0\n    var paren_char_counts = []\n    var paren_char_indexes\
    \ = []\n    var paren_char_count = 0\n    var paren_char_index = 0\n    var paren_char_counts\
    \ = []\n    var paren_char_indexes = []\n    var paren_char_count = 0\n    var\
    \ paren_char_index = 0\n    var paren_char_counts = []\n    var paren_char_indexes\
    \ = []\n    var paren_char_count = 0\n    var paren_char_index = 0\n    var paren_char_counts\
    \ = []\n    var paren_char_indexes = []\n    var paren_char_count = 0\n    var\
    \ paren_char_index = 0\n    var paren_char_counts = []\n    var paren_char_indexes\
    \ = []\n    var paren_char_count = 0\n    var paren_char_index = 0\n    var paren_char_counts\
    \ = []\n    var paren_char_indexes = []\n    var paren_char_count = 0\n    var\
    \ paren_char_index = 0\n    var paren_char_counts = []\n    var paren_char_indexes\
    \ = []\n    var paren_char_count = 0\n    var paren_char_index = 0\n    var paren_char_counts\
    \ = []\n    var paren_char_indexes = []\n    var paren_char_count = 0\n    var\
    \ paren_char_index = 0\n    var paren_char_counts = []\n    var paren_char_indexes\
    \ = []\n    var paren_char_count = 0\n    var paren_char_index = 0\n    var paren_char_counts\
    \ = []\n    var paren_char_indexes = []\n    var paren_char_count = 0\n    var\
    \ paren_char_index = 0\n    var paren_char_counts = []\n    var paren_char_indexes\
    \ = []\n    var paren_char_count = 0\n    var paren_char_index = 0\n    var paren_char_counts\
    \ = []\n    var paren_char_indexes = []\n    var paren_char_count = 0\n    var\
    \ paren_char_index = 0\n    var paren_char_counts = []\n    var paren_char_indexes\
    \ = []\n    var paren_char_count = 0\n    var paren_char_index = 0\n    var paren_char_counts\
    \ = []\n    var paren_char_index", "    var max_level = 0\n    var level = 0\n\
    \    var paren_level = 0\n    var paren_level_stack: [Int] = []\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_string =\
    \ \"\"\n    var paren_level_stack_string_index = 0\n    var paren_level_stack_string_size\
    \ = 0\n    var paren_level_stack_string_string = \"\"\n    var paren_level_stack_string_string_index\
    \ = 0\n    var paren_level_stack_string_string_size = 0\n    var paren_level_stack_string_string_string\
    \ = \"\"\n    var paren_level_stack_string_string_string_index = 0\n    var paren_level_stack_string_string_string_size\
    \ = 0\n    var paren_level_stack_string_string_string_string = \"\"\n    var paren_level_stack_string_string_string_index\
    \ = 0\n    var paren_level_stack_string_string_string_size = 0\n    var paren_level_stack_string_string_string_string\
    \ = \"\"\n    var paren_level_stack_string_string_string_index = 0\n    var paren_level_stack_string_string_string_size\
    \ = 0\n    var paren_level_stack_string_string_string_string = \"\"\n    var paren_level_stack_string_string_string_index\
    \ = 0\n    var paren_level_stack_string_string_string_size = 0\n    var paren_level_stack_string_string_string_string\
    \ = \"\"\n    var paren_level_stack_string_string_string_index = 0\n    var paren_level_stack_string_string_string_size\
    \ = 0\n    var paren_level_stack_string_string_string_string = \"\"\n    var paren_level_stack_string_string_string_index\
    \ = 0\n    var paren_level_stack_string_string_string_size = 0\n    var paren_level_stack_string_string_string_string\
    \ = \"\"\n    var paren_level_stack_string_string_string_index = 0\n    var paren_level_stack_string_string_string_size\
    \ = 0\n    var paren_level_stack_string_string_string_string = \"\"\n    var paren_level_stack_string_string_string_index\
    \ = 0\n    var paren_level_stack_string_string_string_size = 0\n    var paren_level_stack_string_string_string_string\
    \ = \"\"\n    var paren_level_stack_string_string_string_index = 0\n    var paren_level_stack_string_string_string_size\
    \ = 0\n    var paren_level_stack_string_string_string_string = \"\"\n    var paren_level_stack_string_string_string_index\
    \ = 0\n    var paren_level_stack_string_string_string_size = 0\n    var paren_level_stack_string_string_string_string\
    \ = \"\"\n    var paren_level_stack_string_string_string_index = 0\n    var paren_level_stack_string_string_string_size\
    \ = 0\n    var paren_level_stack_string_string_string_string = \"\"\n    var paren_level_stack_string_string_string_index\
    \ = 0\n    var paren_level_stack_string_string_string_size = 0\n    var paren_level_stack_string_string_string_string\
    \ = \"\"\n    var paren_level_stack_string_string_string_index = 0\n", "    var\
    \ levels = [Int]()\n    var paren_count = 0\n    for ch in paren_string.unicodeScalars\
    \ {\n        if ch == '(' {\n            paren_count += 1\n        } else if ch\
    \ == ')' {\n            paren_count -= 1\n            if paren_count == 0 {\n\
    \                levels.append(paren_count)\n            }\n        }\n    }\n\
    \    return levels", "    var levels = [Int]()\n    var level = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_char = 0\n\
    \    var paren_char_count = 0\n    var paren_char_count_prev = 0\n    var paren_char_count_next\
    \ = 0\n    var paren_char_count_prev2 = 0\n    var paren_char_count_next2 = 0\n\
    \    var paren_char_count_prev3 = 0\n    var paren_char_count_next3 = 0\n    var\
    \ paren_char_count_prev4 = 0\n    var paren_char_count_next4 = 0\n    var paren_char_count_prev5\
    \ = 0\n    var paren_char_count_next5 = 0\n    var paren_char_count_prev6 = 0\n\
    \    var paren_char_count_next6 = 0\n    var paren_char_count_prev7 = 0\n    var\
    \ paren_char_count_next7 = 0\n    var paren_char_count_prev8 = 0\n    var paren_char_count_next8\
    \ = 0\n    var paren_char_count_prev9 = 0\n    var paren_char_count_next9 = 0\n\
    \    var paren_char_count_prev10 = 0\n    var paren_char_count_next10 = 0\n  \
    \  var paren_char_count_prev11 = 0\n    var paren_char_count_next11 = 0\n    var\
    \ paren_char_count_prev12 = 0\n    var paren_char_count_next12 = 0\n    var paren_char_count_prev13\
    \ = 0\n    var paren_char_count_next13 = 0\n    var paren_char_count_prev14 =\
    \ 0\n    var paren_char_count_next14 = 0\n    var paren_char_count_prev15 = 0\n\
    \    var paren_char_count_next15 = 0\n    var paren_char_count_prev16 = 0\n  \
    \  var paren_char_count_next16 = 0\n    var paren_char_count_prev17 = 0\n    var\
    \ paren_char_count_next17 = 0\n    var paren_char_count_prev18 = 0\n    var paren_char_count_next18\
    \ = 0\n    var paren_char_count_prev19 = 0\n    var paren_char_count_next19 =\
    \ 0\n    var paren_char_count_prev20 = 0\n    var paren_char_count_next20 = 0\n\
    \    var paren_char_count_prev21 = 0\n    var paren_char_count_next21 = 0\n  \
    \  var paren_char_count_prev22 = 0\n    var paren_char_count_next22 = 0\n    var\
    \ paren_char_count_prev23 = 0\n    var paren_char_count_next23 = 0\n    var paren_char_count_prev24\
    \ = 0\n    var paren_char_count_next24 = 0\n    var paren_char_count_prev25 =\
    \ 0\n    var paren_char_count_next25 = 0\n    var paren_char_count_prev26 = 0\n\
    \    var paren_char_count_next26 = 0\n    var paren_char_", "    var levels =\
    \ [Int]()\n    var paren_count = 0\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren", "    var levels = [Int]()\n    var paren_count = 0\n  \
    \  var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n    var\
    \ paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n \
    \   var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n\
    \    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren", "    var levels\
    \ = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_level_count\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_start\
    \ = 0\n    var paren_level_end = 0\n    var paren_level_start = 0\n    var paren_level_end\
    \ = 0\n    var paren_level_start = 0\n    var paren", "    var levels = [Int]()\n\
    \    var paren_count = 0\n    for c in paren_string.unicodeScalars {\n       \
    \ if c == paren_count {\n            levels[paren_count] += 1\n        } else\
    \ {\n            levels[paren_count] = 0\n            paren_count = c\n      \
    \  }\n    }\n    return levels", "    var levels = [Int]()\n    var level = 0\n\
    \    var paren_count = 0\n    var paren_level = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if paren_count == 0 {\n            levels.append(level)\n       \
    \     paren_count = 1\n            paren_level = 0\n        }\n        switch\
    \ c {\n        case ')':\n            paren_count--\n            if paren_count\
    \ == 0 {\n                levels.append(level)\n                levels.append(level)\n\
    \                level = 0\n                paren_count = 0\n            }\n \
    \       case ')':\n            paren_count--\n            if paren_count == 0\
    \ {\n                levels.append(level)\n                levels.append(level)\n\
    \                level = 0\n                paren_count = 0\n            }\n \
    \       case ')':\n            paren_count--\n            if paren_count == 0\
    \ {\n                levels.append(level)\n                levels.append(level)\n\
    \                level = 0\n                paren_count = 0\n            }\n \
    \       default:\n            level++\n            paren_count++\n        }\n\
    \    }\n    return levels", "    var levels = [Int]()\n    var level = 0\n   \
    \ var parens = 0\n    var paren_level = 0\n    var paren_char = 0\n    var paren_char_count\
    \ = 0\n    var paren_char_count_in_parens = 0\n    var paren_char_count_in_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens = 0\n    var\
    \ paren_char_count_in_parens_after_parens_after_parens = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens\
    \ = 0\n    var paren_char_count_in_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_parens_after_paren",
  "    var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_char_count = 0\n    var paren_char_level = 0\n    var paren_char\
    \ = \"\"\n    var paren_char_next = \"\"\n    var paren_char_prev = \"\"\n   \
    \ var paren_char_next2 = \"\"\n    var paren_char_prev2 = \"\"\n    var paren_char_next3\
    \ = \"\"\n    var paren_char_prev3 = \"\"\n    var paren_char_next4 = \"\"\n \
    \   var paren_char_prev4 = \"\"\n    var paren_char_next5 = \"\"\n    var paren_char_prev5\
    \ = \"\"\n    var paren_char_next6 = \"\"\n    var paren_char_prev6 = \"\"\n \
    \   var paren_char_next7 = \"\"\n    var paren_char_prev7 = \"\"\n    var paren_char_next8\
    \ = \"\"\n    var paren_char_prev8 = \"\"\n    var paren_char_next9 = \"\"\n \
    \   var paren_char_prev9 = \"\"\n    var paren_char_next10 = \"\"\n    var paren_char_prev10\
    \ = \"\"\n    var paren_char_next11 = \"\"\n    var paren_char_prev11 = \"\"\n\
    \    var paren_char_next12 = \"\"\n    var paren_char_prev12 = \"\"\n    var paren_char_next13\
    \ = \"\"\n    var paren_char_prev13 = \"\"\n    var paren_char_next14 = \"\"\n\
    \    var paren_char_prev14 = \"\"\n    var paren_char_next15 = \"\"\n    var paren_char_prev15\
    \ = \"\"\n    var paren_char_next16 = \"\"\n    var paren_char_prev16 = \"\"\n\
    \    var paren_char_next17 = \"\"\n    var paren_char_prev17 = \"\"\n    var paren_char_next18\
    \ = \"\"\n    var paren_char_prev18 = \"\"\n    var paren_char_next19 = \"\"\n\
    \    var paren_char_prev19 = \"\"\n    var paren_char_next20 = \"\"\n    var paren_char_prev20\
    \ = \"\"\n    var paren_char_next21 = \"\"\n    var paren_char_prev21 = \"\"\n\
    \    var paren_char_next22 = \"\"\n    var paren_char_prev22 = \"\"\n    var paren_char_next23\
    \ = \"\"\n    var paren_char_prev23 = \"\"\n    var paren_char_next24 = \"\"\n\
    \    var paren_char_prev24 = \"\"\n    var paren_char_next25 = \"\"\n    var paren_char_prev25\
    \ = \"\"\n    var paren_char_next26 = \"\"\n    var paren_char_prev26 = \"\"\n\
    \    var paren_char_next27 = \"\"\n    var paren_char_prev27 = \"\"\n    var paren_char_next28\
    \ = \"\"\n    var paren_char_prev28 = \"\"\n    var paren_char_next29 = \"\"\n\
    \    var paren_char_prev29 = \"\"\n    var paren_char_next30", "    var level\
    \ = 0\n    var max_level = 0\n    var max_level_paren = 0\n    var paren_level\
    \ = 0\n    var paren_level_paren = 0\n    var paren_level_paren_paren = 0\n  \
    \  var paren_level_paren_paren_paren = 0\n    var paren_level_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren = 0\n    var paren_level_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren = 0\n   \
    \ var paren_level_paren_paren_paren_paren_paren_paren_paren_paren = 0\n    var\
    \ paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren = 0\n    var\
    \ paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren = 0\n\
    \    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0\n    var paren_level_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_",
  "    var max_level = 0\n    var level = 0\n    var levels = [Int]()\n    var paren_count\
    \ = 0\n    for ch in paren_string.characters {\n        if ch == '(' {\n     \
    \       paren_count += 1\n        } else if ch == ')' {\n            paren_count\
    \ -= 1\n        }\n        if paren_count == 0 {\n            levels.append(level)\n\
    \            if level > max_level {\n                max_level = level\n     \
    \       }\n            level = 0\n        }\n        level += 1\n    }\n    return\
    \ levels", "    var levels = [Int]()\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    for c in paren_string.unicodeScalars {\n        if paren_count == 0\
    \ {\n            levels.append(paren_level)\n        }\n        switch c {\n \
    \       case .OpenSquareBracket:\n            paren_count += 1\n        case .CloseSquareBracket:\n\
    \            paren_count -= 1\n        case .OpenParenthesis:\n            paren_level\
    \ += 1\n        case .CloseParenthesis:\n            paren_level -= 1\n      \
    \  }\n    }\n    return levels", "    var max_level = 0\n    var level = 0\n \
    \   var paren_level = 0\n    var paren_level_count = 0\n    var paren_level_char_count\
    \ = 0\n    var paren_level_char = \"\"\n    var paren_level_chars = []\n    var\
    \ paren_level_char_index = 0\n    var paren_level_char_indexes = []\n    var paren_level_char_indexes_count\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren_level_char_indexes_index = 0\n    var paren_level_char_indexes_index\
    \ = 0\n    var paren", "    var level = 0\n    var paren_level = 0\n    var paren_nesting\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting = 0\n  \
    \  var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting = 0\n   \
    \ var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_level = 0\n    var paren_nesting\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting = 0\n  \
    \  var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_level =\
    \ 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nest", "    var levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_nesting = 0\n    var paren_levels = [Int]()\n    var paren_nestings\
    \ = [Int]()\n    var paren_level = 0\n    var paren_nesting = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_nestings = [Int]()\n    var paren_level = 0\n    var\
    \ paren_nesting = 0\n    var paren_levels = [Int]()\n    var paren_nestings =\
    \ [Int]()\n    var paren_level = 0\n    var paren_nesting = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_nestings = [Int]()\n    var paren_level = 0\n    var\
    \ paren_nesting = 0\n    var paren_levels = [Int]()\n    var paren_nestings =\
    \ [Int]()\n    var paren_level = 0\n    var paren_nesting = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_nestings = [Int]()\n    var paren_level = 0\n    var\
    \ paren_nesting = 0\n    var paren_levels = [Int]()\n    var paren_nestings =\
    \ [Int]()\n    var paren_level = 0\n    var paren_nesting = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_nestings = [Int]()\n    var paren_level = 0\n    var\
    \ paren_nesting = 0\n    var paren_levels = [Int]()\n    var paren_nestings =\
    \ [Int]()\n    var paren_level = 0\n    var paren_nesting = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_nestings = [Int]()\n    var paren_level = 0\n    var\
    \ paren_nesting = 0\n    var paren_levels = [Int]()\n    var paren_nestings =\
    \ [Int]()\n    var paren_level = 0\n    var paren_nesting = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_nestings = [Int]()\n    var paren_level = 0\n    var\
    \ paren_nesting = 0\n    var paren_levels = [Int]()\n    var paren_nestings =\
    \ [Int]()\n    var paren_level = 0\n    var paren_nesting = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_nestings = [Int]()\n    var paren_level = 0\n    var\
    \ paren_nesting = 0\n    var paren_levels = [Int]()\n    var paren_nestings =\
    \ [Int]()\n    var paren_level = 0\n    var paren_nesting = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_", "    var levels = [Int]()\n    var paren_count =\
    \ 0\n    var paren_level = 0\n    for c in paren_string {\n        if c == '('\
    \ {\n            paren_count += 1\n        } else if c == ')' {\n            paren_count\
    \ -= 1\n            if paren_count == 0 {\n                levels.append(paren_level)\n\
    \            }\n        }\n        paren_level += c == '(' ? 1 : -1\n    }\n \
    \   return levels", "    var levels = [Int]()\n    var paren_count = 0\n    var\
    \ paren_level = 0\n    var paren_start = -1\n    var paren_end = -1\n    for index\
    \ in 0..<paren_string.characters.count {\n        let char = paren_string.characters[index]\n\
    \        switch char {\n        case \"(\":\n            paren_count += 1\n  \
    \          paren_start = index\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        case \"(\":\n            paren_count += 1\n        case \"(\":\n\
    \            paren_count += 1\n        case \"(\":\n            paren_count +=\
    \ 1\n        ", "    var levels = [Int]()\n    var level = 0\n    var parens =\
    \ 0\n    for ch in paren_string.characters {\n        if ch == '(' {\n       \
    \     parens += 1\n            levels.append(level)\n        } else if ch == ')'\
    \ {\n            levels[level] = parens\n            parens -= 1\n        }\n\
    \        level += 1\n    }\n    return levels", "    var levels = [Int]()\n  \
    \  var paren_level = 0\n    for ch in paren_string.unicodeScalars {\n        switch\
    \ ch {\n        case .LeftParenthesis:\n            paren_level++\n        case\
    \ .RightParenthesis:\n            paren_level--\n        case .Space:\n      \
    \      if paren_level == 0 {\n                levels.append(paren_level)\n   \
    \         }\n        }\n    }\n    return levels", "    var level = 0\n    var\
    \ paren_level = 0\n    var paren_nesting = 0\n    var paren_nesting_level = 0\n\
    \    var paren_nesting_nesting = 0\n    var paren_nesting_nesting_level = 0\n\
    \    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting = 0\n   \
    \ var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting = 0\n   \
    \ var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting = 0\n   \
    \ var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_", "    var levels = [Int]()\n    var level\
    \ = 0\n    var paren_count = 0\n    var paren_level = 0\n    var paren_start =\
    \ 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start",
  "    var level = 0\n    var max_level = 0\n    var max_level_group = 0\n    var\
    \ max_level_group_count = 0\n    var paren_group = 0\n    var paren_group_count\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level_count = 0\n  \
    \  var paren_group_level_group = 0\n    var paren_group_level_group_count = 0\n\
    \    var paren_group_level_group_level = 0\n    var paren_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group = 0\n    var paren_group_level_group_level_group_count\
    \ = 0\n    var paren_group_level_group_level_group_level = 0\n    var paren_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group = 0\n    var paren_group_level_group_level_group_level_group_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level = 0\n   \
    \ var paren_group_level_group_level_group_level_group_level_count = 0\n    var\
    \ paren_group_level_group_level_group_level_group_level_group = 0\n    var paren_group_level_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group = 0\n\
    \    var paren_group_level_group_level_group_level_group_level_group_count = 0\n\
    \    var paren_group_level_group_level_group_level_group_level_group_level = 0\n\
    \    var paren_group_level_group_level_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level_group\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level_group\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level_group\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_group_level_group_",
  "    var levels = [Int]()\n    var level = 0\n    var parens = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if c == '(' {\n            levels[level] = parens\n            parens\
    \ += 1\n        } else if c == ')' {\n            levels[level] = parens\n   \
    \         parens -= 1\n            if parens == 0 {\n                levels[level]\
    \ = -1\n                level += 1\n            }\n        }\n    }\n    return\
    \ levels", "    var levels = [Int]()\n    var paren_level = 0\n    var paren_nesting\
    \ = 0\n    for index in 0..<paren_string.characters.count {\n        let char\
    \ = paren_string.characters[index]\n        if char == '(' {\n            paren_nesting\
    \ += 1\n            levels.append(paren_nesting)\n        } else if char == ')'\
    \ {\n            paren_nesting -= 1\n            if paren_nesting == 0 {\n   \
    \             levels.append(paren_level)\n            }\n        }\n    }\n  \
    \  return levels", "    var level = 0\n    var max_level = 0\n    var max_level_parens\
    \ = 0\n    var paren_count = 0\n    var paren_char = 0\n    var paren_char_count\
    \ = 0\n    var paren_char_index = 0\n    var paren_char_length = 0\n    var paren_char_length_index\
    \ = 0\n    var paren_char_length_count = 0\n    var paren_char_length_index =\
    \ 0\n    var paren_char_length_count = 0\n    var paren_char_length_index = 0\n\
    \    var paren_char_length_count = 0\n    var paren_char_length_index = 0\n  \
    \  var paren_char_length_count = 0\n    var paren_char_length_index = 0\n    var\
    \ paren_char_length_count = 0\n    var paren_char_length_index = 0\n    var paren_char_length_count\
    \ = 0\n    var paren_char_length_index = 0\n    var paren_char_length_count =\
    \ 0\n    var paren_char_length_index = 0\n    var paren_char_length_count = 0\n\
    \    var paren_char_length_index = 0\n    var paren_char_length_count = 0\n  \
    \  var paren_char_length_index = 0\n    var paren_char_length_count = 0\n    var\
    \ paren_char_length_index = 0\n    var paren_char_length_count = 0\n    var paren_char_length_index\
    \ = 0\n    var paren_char_length_count = 0\n    var paren_char_length_index =\
    \ 0\n    var paren_char_length_count = 0\n    var paren_char_length_index = 0\n\
    \    var paren_char_length_count = 0\n    var paren_char_length_index = 0\n  \
    \  var paren_char_length_count = 0\n    var paren_char_length_index = 0\n    var\
    \ paren_char_length_count = 0\n    var paren_char_length_index = 0\n    var paren_char_length_count\
    \ = 0\n    var paren_char_length_index = 0\n    var paren_char_length_count =\
    \ 0\n    var paren_char_length_index = 0\n    var paren_char_length_count = 0\n\
    \    var paren_char_length_index = 0\n    var paren_char_length_count = 0\n  \
    \  var paren_char_length_index = 0\n    var paren_char_length_count = 0\n    var\
    \ paren_char_length_index = 0\n    var paren_char_length_count = 0\n    var paren_char_length_index\
    \ = 0\n    var paren_char_length_count = 0\n    var paren_char_length_index =\
    \ 0\n    var paren_char_length_count = 0\n    var paren_char_length_index = 0\n\
    \    var paren_char_length_count = 0\n    var paren_char_length_index = 0\n  \
    \  var paren_char_length_count = 0\n    var paren_char_length_index = 0\n    var\
    \ paren_char_length_count = 0\n    var paren_char_length_index = 0\n    var paren_char_length_count\
    \ = 0\n    var paren_char_length_index = 0\n    var paren_char_length_count =\
    \ 0\n    var ", "    var levels = [Int]()\n    var level = 0\n    var parens =\
    \ 0\n    for c in paren_string.characters {\n        if c == '(' {\n         \
    \   levels[level] = parens\n            level += 1\n            parens += 1\n\
    \        } else if c == ')' {\n            levels[level] = parens\n          \
    \  level -= 1\n            parens -= 1\n        } else {\n            levels[level]\
    \ = parens\n        }\n    }\n    return levels", "    var level = 0\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level_stack =\
    \ [Int]()\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var\
    \ paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n\
    \    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n   \
    \ var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var\
    \ paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n\
    \    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n   \
    \ var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var\
    \ paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n\
    \    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n   \
    \ var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_", "    var levels = [Int]()\n    var paren_level = 0\n    var paren_nesting\
    \ = 0\n    for c in paren_string.unicodeScalars {\n        if paren_nesting ==\
    \ 0 {\n            levels.append(paren_level)\n        }\n        if paren_nesting\
    \ == 1 && paren_level == 0 {\n            levels.append(paren_level)\n       \
    \ }\n        if paren_nesting == 1 && paren_level == 1 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 2 && paren_level == 0 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 2 && paren_level == 1 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 3 && paren_level == 0 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 3 && paren_level == 1 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 3 && paren_level == 2 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 4 && paren_level == 0 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 4 && paren_level == 1 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 4 && paren_level == 2 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 4 && paren_level == 3 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 4 && paren_level == 4 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 5 && paren_level == 0 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 5 && paren_level == 1 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 5 && paren_level == 2 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 5 && paren_level == 3 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 5 && paren_level == 4 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 6 && paren_level == 0 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 6 && paren_level == 1 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 6 && paren_level == 2 {\n            levels.append(paren_level)\n\
    \        }\n        if paren_nesting == 6 && paren_", "    var levels = [Int]()\n\
    \    var paren_count = 0\n    var paren_level = 0\n    var paren_start = 0\n \
    \   for c in paren_string.characters {\n        if c == '(' {\n            paren_count\
    \ += 1\n            levels.append(paren_level)\n            paren_level = 0\n\
    \        } else if c == ')' {\n            paren_count -= 1\n            if paren_count\
    \ < 0 {\n                paren_level += paren_level\n                levels.append(paren_level)\n\
    \            }\n        }\n    }\n    return levels", "    var levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_levels = [Int]()\n    var paren_levels_len\
    \ = 0\n    var paren_levels_lens = [Int]()\n    var paren_levels_lens_len = 0\n\
    \    var paren_levels_lens_lens = [Int]()\n    var paren_levels_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n   \
    \ var paren_levels_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n \
    \   var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len =\
    \ 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_",
  "    var level = 0\n    var max_level = 0\n    var paren_level = 0\n    var paren_max_level\
    \ = 0\n    var paren_stack = [Int]()\n    var paren_stack_size = 0\n    var paren_stack_max_size\
    \ = 0\n    var paren_stack_max_level = 0\n    var paren_stack_max_level_num =\
    \ 0\n    var paren_stack_max_level_num_index = 0\n    var paren_stack_max_level_num_index2\
    \ = 0\n    var paren_stack_max_level_num_index3 = 0\n    var paren_stack_max_level_num_index4\
    \ = 0\n    var paren_stack_max_level_num_index5 = 0\n    var paren_stack_max_level_num_index6\
    \ = 0\n    var paren_stack_max_level_num_index7 = 0\n    var paren_stack_max_level_num_index8\
    \ = 0\n    var paren_stack_max_level_num_index9 = 0\n    var paren_stack_max_level_num_index10\
    \ = 0\n    var paren_stack_max_level_num_index11 = 0\n    var paren_stack_max_level_num_index12\
    \ = 0\n    var paren_stack_max_level_num_index13 = 0\n    var paren_stack_max_level_num_index14\
    \ = 0\n    var paren_stack_max_level_num_index15 = 0\n    var paren_stack_max_level_num_index16\
    \ = 0\n    var paren_stack_max_level_num_index17 = 0\n    var paren_stack_max_level_num_index18\
    \ = 0\n    var paren_stack_max_level_num_index19 = 0\n    var paren_stack_max_level_num_index20\
    \ = 0\n    var paren_stack_max_level_num_index21 = 0\n    var paren_stack_max_level_num_index22\
    \ = 0\n    var paren_stack_max_level_num_index23 = 0\n    var paren_stack_max_level_num_index24\
    \ = 0\n    var paren_stack_max_level_num_index25 = 0\n    var paren_stack_max_level_num_index26\
    \ = 0\n    var paren_stack_max_level_num_index27 = 0\n    var paren_stack_max_level_num_index28\
    \ = 0\n    var paren_stack_max_level_num_index29 = 0\n    var paren_stack_max_level_num_index30\
    \ = 0\n    var paren_stack_max_level_num_index31 = 0\n    var paren_stack_max_level_num_index32\
    \ = 0\n    var paren_stack_max_level_num_index33 = 0\n    var paren_stack_max_level_num_index34\
    \ = 0\n    var paren_stack_max_level_num_index35 = 0\n    var paren_stack_max_level_num_index36\
    \ = 0\n    var paren_stack_max_level_num_index37 = 0\n    var paren_stack_max_level_num_index38\
    \ = 0\n    var paren_stack_max_level_num_index39 = 0\n    var paren_stack_max_level_num_index40\
    \ = 0\n    var paren_stack_max_level_num_index41 = 0", "    var level = 0\n  \
    \  var levels = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n\
    \    var paren_levels_count = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_min\
    \ = 0\n    var paren_levels_count_max2 = 0\n    var paren_levels_count_min2 =\
    \ 0\n    var paren_levels_count_max3 = 0\n    var paren_levels_count_min3 = 0\n\
    \    var paren_levels_count_max4 = 0\n    var paren_levels_count_min4 = 0\n  \
    \  var paren_levels_count_max5 = 0\n    var paren_levels_count_min5 = 0\n    var\
    \ paren_levels_count_max6 = 0\n    var paren_levels_count_min6 = 0\n    var paren_levels_count_max7\
    \ = 0\n    var paren_levels_count_min7 = 0\n    var paren_levels_count_max8 =\
    \ 0\n    var paren_levels_count_min8 = 0\n    var paren_levels_count_max9 = 0\n\
    \    var paren_levels_count_min9 = 0\n    var paren_levels_count_max10 = 0\n \
    \   var paren_levels_count_min10 = 0\n    var paren_levels_count_max11 = 0\n \
    \   var paren_levels_count_min11 = 0\n    var paren_levels_count_max12 = 0\n \
    \   var paren_levels_count_min12 = 0\n    var paren_levels_count_max13 = 0\n \
    \   var paren_levels_count_min13 = 0\n    var paren_levels_count_max14 = 0\n \
    \   var paren_levels_count_min14 = 0\n    var paren_levels_count_max15 = 0\n \
    \   var paren_levels_count_min15 = 0\n    var paren_levels_count_max16 = 0\n \
    \   var paren_levels_count_min16 = 0\n    var paren_levels_count_max17 = 0\n \
    \   var paren_levels_count_min17 = 0\n    var paren_levels_count_max18 = 0\n \
    \   var paren_levels_count_min18 = 0\n    var paren_levels_count_max19 = 0\n \
    \   var paren_levels_count_min19 = 0\n    var paren_levels_count_max20 = 0\n \
    \   var paren_levels_count_min20 = 0\n    var paren_levels_count_max21 = 0\n \
    \   var paren_levels_count_min21 = 0\n    var paren_levels_count_max22 = 0\n \
    \   var paren_levels_count_min22 = 0\n    var paren_levels_count_max23 = 0\n \
    \   var paren_levels_count_min23 = 0\n    var paren_levels_count_max24 = 0\n \
    \   var paren_levels_count_min24 = 0\n    var ", "    var levels = [Int]()\n \
    \   var paren_level = 0\n    for c in paren_string.unicodeScalars {\n        if\
    \ paren_level == 0 && c == '(' {\n            levels.append(paren_level)\n   \
    \         paren_level++\n        } else if paren_level > 0 && paren_level == levels[levels.count\
    \ - 1] {\n            levels.append(paren_level)\n            paren_level++\n\
    \        } else if paren_level > 0 && paren_level < levels[levels.count - 1] {\n\
    \            levels.append(paren_level)\n            paren_level++\n        }\
    \ else {\n            levels.append(paren_level)\n            paren_level = 0\n\
    \        }\n    }\n    return levels", "    var levels = [Int]()\n    var paren_count\
    \ = 0\n    var paren_level = 0\n    var paren_start = 0\n    for c in paren_string.characters\
    \ {\n        if c == '(' {\n            paren_count += 1\n            levels.append(paren_level)\n\
    \            paren_level = 0\n        } else if c == ')' {\n            paren_count\
    \ -= 1\n            if paren_count < 0 {\n                throw Error::new(ErrorKind::UnbalancedParenthesis,\
    \ paren_string)\n            }\n            levels.append(paren_level)\n     \
    \       paren_level = 0\n        } else {\n            paren_level += 1\n    \
    \    }\n    }\n    levels.append(paren_level)\n    return levels", "    var levels\
    \ = [Int]()\n    var paren_count = 0\n    var level = 0\n    for c in paren_string.characters\
    \ {\n        if c == '(' {\n            paren_count += 1\n            levels.append(level)\n\
    \        } else if c == ')' {\n            paren_count -= 1\n            if paren_count\
    \ == 0 {\n                levels.append(level)\n            }\n        }\n   \
    \     level += 1\n    }\n    return levels", "    var levels = [Int]()\n    var\
    \ level = 0\n    var paren_count = 0\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_char = 0\n    var paren_char_count\
    \ = 0\n    var paren_char_level = 0\n    var paren_char_start = 0\n    var paren_char_end\
    \ = 0\n    var paren_char_char = 0\n    var paren_char_char_count = 0\n    var\
    \ paren_char_char_level = 0\n    var paren_char_char_start = 0\n    var paren_char_char_end\
    \ = 0\n    var paren_char_char_char = 0\n    var paren_char_char_char_count =\
    \ 0\n    var paren_char_char_char_level = 0\n    var paren_char_char_char_start\
    \ = 0\n    var paren_char_char_char_end = 0\n    var paren_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_count = 0\n    var paren_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_start = 0\n    var paren_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_start = 0\n    var paren_char_char_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_count = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_end = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_level = 0\n\
    \    var paren_char_char_char_char_char_char_char_char_char_start = 0\n    var\
    \ paren_char_char_char_", "    var levels = [Int]()\n    var level = 0\n    var\
    \ paren_level = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_nest\
    \ = 0\n    var paren_nesting = 0\n    var paren_nesting_level = 0\n    var paren_nesting_open\
    \ = 0\n    var paren_nesting_close = 0\n    var paren_nesting_nest = 0\n    var\
    \ paren_nesting_nesting = 0\n    var paren_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_open = 0\n    var paren_nesting_nesting_close = 0\n  \
    \  var paren_nesting_nesting_nest = 0\n    var paren_nesting_nesting_nesting =\
    \ 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_open\
    \ = 0\n    var paren_nesting_nesting_nesting_close = 0\n    var paren_nesting_nesting_nesting_nest\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nest = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nest = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nest = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nest = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nest = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_",
  "    var levels = [Int]()\n    var paren_count = 0\n    var paren_level = 0\n  \
    \  for ch in paren_string.unicodeScalars {\n        if ch == '(' {\n         \
    \   paren_count += 1\n        } else if ch == ')' {\n            paren_count -=\
    \ 1\n            if paren_count == 0 {\n                levels.append(paren_level)\n\
    \            }\n        }\n        paren_level += ch == '(' ? 1 : -1\n    }\n\
    \    return levels", "    var levels = [Int]()\n    var level = 0\n    var paren_count\
    \ = 0\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n\
    \    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start", "    var levels = [Int]()\n\
    \    var paren_count = 0\n    var level = 0\n    for ch in paren_string {\n  \
    \      if ch == '(' {\n            paren_count += 1\n            levels.append(level)\n\
    \        } else if ch == ')' {\n            paren_count -= 1\n            if paren_count\
    \ == 0 {\n                levels = levels[0..<levels.count-1]\n              \
    \  levels.append(0)\n            }\n        }\n        level += 1\n    }\n   \
    \ return levels", "    var levels = [Int]()\n    var level = 0\n    var paren_level\
    \ = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_level_count\
    \ = 0\n    var paren_open_count = 0\n    var paren_close_count = 0\n    var paren_level_string\
    \ = \"\"\n    var paren_open_string = \"\"\n    var paren_close_string = \"\"\n\
    \    var paren_level_string_count = 0\n    var paren_open_string_count = 0\n \
    \   var paren_close_string_count = 0\n    var paren_level_count = 0\n    var paren_open_count\
    \ = 0\n    var paren_close_count = 0\n    var paren_level_string = \"\"\n    var\
    \ paren_open_string = \"\"\n    var paren_close_string = \"\"\n    var paren_level_string_count\
    \ = 0\n    var paren_open_string_count = 0\n    var paren_close_string_count =\
    \ 0\n    var paren_level_count = 0\n    var paren_open_count = 0\n    var paren_close_count\
    \ = 0\n    var paren_level_string = \"\"\n    var paren_open_string = \"\"\n \
    \   var paren_close_string = \"\"\n    var paren_level_string_count = 0\n    var\
    \ paren_open_string_count = 0\n    var paren_close_string_count = 0\n    var paren_level_count\
    \ = 0\n    var paren_open_count = 0\n    var paren_close_count = 0\n    var paren_level_string\
    \ = \"\"\n    var paren_open_string = \"\"\n    var paren_close_string = \"\"\n\
    \    var paren_level_string_count = 0\n    var paren_open_string_count = 0\n \
    \   var paren_close_string_count = 0\n    var paren_level_count = 0\n    var paren_open_count\
    \ = 0\n    var paren_close_count = 0\n    var paren_level_string = \"\"\n    var\
    \ paren_open_string = \"\"\n    var paren_close_string = \"\"\n    var paren_level_string_count\
    \ = 0\n    var paren_open_string_count = 0\n    var paren_close_string_count =\
    \ 0\n    var paren_level_count = 0\n    var paren_open_count = 0\n    var paren_close_count\
    \ = 0\n    var paren_level_string = \"\"\n    var paren_open_string = \"\"\n \
    \   var paren_close_string = \"\"\n    var paren_level_string_count = 0\n    var\
    \ paren_open_string_count = 0\n    var paren_close_string_count = 0\n    var paren_level_count\
    \ = 0\n    var paren_open_count = 0\n    var paren_close_count = 0\n    var paren_level_string\
    \ = \"\"\n    var paren_open_string = \"\"\n    var paren_close_string = \"\"\n\
    \    var paren_level_string_count = 0\n    var paren_open_string_count = 0\n \
    \   var paren_close_string_count = 0\n    var paren_level_count = 0\n    var paren_open_count\
    \ = 0\n    var paren_close_count = 0\n", "    var level = 0\n    var paren_level\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_levels_size = 0\n    var\
    \ paren_levels_sizes = [Int]()\n    var paren_levels_sizes_sum = 0\n    var paren_levels_sizes_sums\
    \ = [Int]()\n    var paren_levels_sizes_sums_sum = 0\n    var paren_levels_sizes_sums_sums\
    \ = [Int]()\n    var paren_levels_sizes_sums_sums_sum = 0\n    var paren_levels_sizes_sums_sums_sums\
    \ = [Int]()\n    var paren_levels_sizes_sums_sums_sums_sum = 0\n    var paren_levels_sizes_sums_sums_sums_sums\
    \ = [Int]()\n    var paren_levels_sizes_sums_sums_sums_sums_sum = 0\n    var paren_levels_sizes_sums_sums_sums_sums_sums\
    \ = [Int]()\n    var paren_levels_sizes_sums_sums_sums_sums_sums_sum = 0\n   \
    \ var paren_levels_sizes_sums_sums_sums_sums_sums_sums = [Int]()\n    var paren_levels_sizes_sums_sums_sums_sums_sums_sums_sum\
    \ = 0\n    var paren_levels_sizes_sums_sums_sums_sums_sums_sums_sums = [Int]()\n\
    \    var paren_levels_sizes_sums_sums_sums_sums_sums_sums_sums_sum = 0\n    var\
    \ paren_levels_sizes_sums_sums_sums_sums_sums_sums_sums_sums = [Int]()\n    var\
    \ paren_levels_sizes_sums_sums_sums_sums_sums_sums_sums_sums_sum = 0\n    var\
    \ paren_levels_sizes_sums_sums_sums_sums_sums_sums_sums_sums_sums = [Int]()\n\
    \    var paren_levels_sizes_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum =\
    \ 0\n    var paren_levels_sizes_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums\
    \ = [Int]()\n    var paren_levels_sizes_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum\
    \ = 0\n    var paren_levels_sizes_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum",
  "    var levels = [Int]()\n    var paren_count = 0\n    var paren_level = 0\n  \
    \  var paren_levels = [Int]()\n    var paren_levels_len = 0\n    var paren_levels_len2\
    \ = 0\n    var paren_levels_len3 = 0\n    var paren_levels_len4 = 0\n    var paren_levels_len5\
    \ = 0\n    var paren_levels_len6 = 0\n    var paren_levels_len7 = 0\n    var paren_levels_len8\
    \ = 0\n    var paren_levels_len9 = 0\n    var paren_levels_len10 = 0\n    var\
    \ paren_levels_len11 = 0\n    var paren_levels_len12 = 0\n    var paren_levels_len13\
    \ = 0\n    var paren_levels_len14 = 0\n    var paren_levels_len15 = 0\n    var\
    \ paren_levels_len16 = 0\n    var paren_levels_len17 = 0\n    var paren_levels_len18\
    \ = 0\n    var paren_levels_len19 = 0\n    var paren_levels_len20 = 0\n    var\
    \ paren_levels_len21 = 0\n    var paren_levels_len22 = 0\n    var paren_levels_len23\
    \ = 0\n    var paren_levels_len24 = 0\n    var paren_levels_len25 = 0\n    var\
    \ paren_levels_len26 = 0\n    var paren_levels_len27 = 0\n    var paren_levels_len28\
    \ = 0\n    var paren_levels_len29 = 0\n    var paren_levels_len30 = 0\n    var\
    \ paren_levels_len31 = 0\n    var paren_levels_len32 = 0\n    var paren_levels_len33\
    \ = 0\n    var paren_levels_len34 = 0\n    var paren_levels_len35 = 0\n    var\
    \ paren_levels_len36 = 0\n    var paren_levels_len37 = 0\n    var paren_levels_len38\
    \ = 0\n    var paren_levels_len39 = 0\n    var paren_levels_len40 = 0\n    var\
    \ paren_levels_len41 = 0\n    var paren_levels_len42 = 0\n    var paren_levels_len43\
    \ = 0\n    var paren_levels_len44 = 0\n    var paren_levels_len45 = 0\n    var\
    \ paren_levels_len46 = 0\n    var paren_levels_len47 = 0\n    var paren_levels_len48\
    \ = 0\n    var paren_levels_len49 = 0\n    var paren_levels_len50 = 0\n    var\
    \ paren_levels_len51 = 0\n    var paren_levels_len52 = 0\n    var paren_levels_len53\
    \ = 0\n    var paren_levels_len54 = 0\n", "    var levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_nesting = 0\n    for c in paren_string.unicodeScalars {\n\
    \        if paren_nesting == 0 {\n            if c == paren {\n              \
    \  paren_nesting = paren_level\n            } else {\n                levels.append(paren_nesting)\n\
    \                paren_nesting = 0\n            }\n        } else {\n        \
    \    if c == paren {\n                paren_nesting--\n            } else {\n\
    \                levels.append(paren_nesting)\n                paren_nesting =\
    \ 0\n            }\n        }\n    }\n    levels.append(paren_nesting)\n    return\
    \ levels", "    var levels = [Int]()\n    var level = 0\n    var paren_level =\
    \ 0\n    var paren_levels = [Int]()\n    var paren_levels_len = 0\n    var paren_levels_lens\
    \ = [Int]()\n    var paren_levels_lens_len = 0\n    var paren_levels_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_len = 0\n    var paren_levels_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len = 0\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_",
  "    var levels = [Int]()\n    var level = 0\n    var paren_level = 0\n    var paren_nesting\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting = 0\n  \
    \  var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nest", "    var levels = [Int]()\n    var level = 0\n   \
    \ var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n    var\
    \ paren_char = 0\n    var paren_char_count = 0\n    var paren_char_count_in_paren\
    \ = 0\n    var paren_char_count_in_paren_group = 0\n    var paren_char_count_in_paren_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group = 0\n    var paren_char_count_in_paren_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group = 0\n \
    \   var paren_char_count_in_paren_group_group_group_group_group_group = 0\n  \
    \  var paren_char_count_in_paren_group_group_group_group_group_group_group = 0\n\
    \    var paren_char_count_in_paren_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_",
  "    var levels = [Int]()\n    var level = 0\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n", "    var levels = [Int]()\n    var level\
    \ = 0\n    var paren_count = 0\n    var paren_level = 0\n    var paren_start =\
    \ 0\n    var paren_end = 0\n    for index in 0..<paren_string.characters.count\
    \ {\n        let char = paren_string.characters[index]\n        if char == \"\
    (\" {\n            paren_count += 1\n            paren_level += 1\n          \
    \  paren_start = index\n        } else if char == \")\" {\n            paren_count\
    \ -= 1\n            paren_level -= 1\n            if paren_level == 0 {\n    \
    \            levels.append(paren_end - paren_start + 1)\n            }\n     \
    \   }\n    }\n    return levels", "    var max_level = 0\n    var level = 0\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_stack = [Int]()\n    var paren_stack_ptr\
    \ = 0\n    var paren_stack_end = 0\n    var paren_stack_top = 0\n    var paren_stack_bottom\
    \ = 0\n    var paren_stack_level = 0\n    var paren_stack_level_max = 0\n    var\
    \ paren_stack_level_min = 0\n    var paren_stack_level_cur = 0\n    var paren_stack_level_next\
    \ = 0\n    var paren_stack_level_next_max = 0\n    var paren_stack_level_next_min\
    \ = 0\n    var paren_stack_level_next_cur = 0\n    var paren_stack_level_next_next\
    \ = 0\n    var paren_stack_level_next_next_max = 0\n    var paren_stack_level_next_next_min\
    \ = 0\n    var paren_stack_level_next_next_cur = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_level_next_next_next = 0\n    var paren_stack_level_next_next_next\
    \ = 0\n    var paren_stack_", "    var levels = [Int]()\n    var paren_count =\
    \ 0\n    for ch in paren_string {\n        if ch == '(' {\n            paren_count\
    \ += 1\n        } else if ch == ')' {\n            paren_count -= 1\n        \
    \    if paren_count == 0 {\n                levels.append(paren_count)\n     \
    \       }\n        }\n    }\n    return levels", "    var levels = [Int]()\n \
    \   var level = 0\n    var paren_count = 0\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_start_idx = 0\n    var paren_end_idx\
    \ = 0\n    var paren_level_idx = 0\n    var paren_level_string = \"\"\n    var\
    \ paren_level_string_len = -1\n    var paren_level_string_len_idx = 0\n    var\
    \ paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx = 0\n\
    \    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len_len_idx\
    \ = 0\n    var paren_level_string_len_len = 0\n    var paren_level_string_len",
  "    var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_char = 0\n\
    \    var paren_char_count = 0\n    var paren_char_level = 0\n    var paren_char_start\
    \ = 0\n    var paren_char_end = 0\n    var paren_char_char = 0\n    var paren_char_char_count\
    \ = 0\n    var paren_char_char_level = 0\n    var paren_char_char_start = 0\n\
    \    var paren_char_char_end = 0\n    var paren_char_char_char = 0\n    var paren_char_char_char_count\
    \ = 0\n    var paren_char_char_char_level = 0\n    var paren_char_char_char_start\
    \ = 0\n    var paren_char_char_char_end = 0\n    var paren_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_count = 0\n    var paren_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_start = 0\n    var paren_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_start = 0\n    var paren_char_char_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_count = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_end = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_level = 0\n\
    \    var paren_char_char_char_char_char_char_char_char_char_start = 0\n    var\
    \ paren_char_char_char_char_", "    var levels = [Int]()\n    var level = 0\n\
    \    var parens = 0\n    var paren_level = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if paren_level == 0 {\n            levels.append(level)\n       \
    \ }\n        switch c {\n        case .OpenSquareBracket:\n            parens\
    \ += 1\n            paren_level = 1\n        case .CloseSquareBracket:\n     \
    \       parens -= 1\n            paren_level = 0\n        case .OpenParenthesis:\n\
    \            paren_level += 1\n        case .CloseParenthesis:\n            paren_level\
    \ -= 1\n        }\n        level += 1\n    }\n    levels.append(level)\n    return\
    \ levels", "    var level = 0\n    var paren_stack = [Int]()\n    var paren_level\
    \ = 0\n    var paren_level_stack = [Int]()\n    var paren_level_stack_index =\
    \ 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_pointer = 0\n\
    \    var paren_level_stack_pointer_pointer = 0\n    var paren_level_stack_pointer_pointer_pointer\
    \ = 0\n    var paren_level_stack_pointer_pointer_pointer_pointer = 0\n    var\
    \ paren_level_stack_pointer_pointer_pointer_pointer_pointer = 0\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_",
  "    var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    for c\
    \ in paren_string.unicodeScalars {\n        if c == '(' {\n            paren_count\
    \ += 1\n        } else if c == ')' {\n            paren_count -= 1\n        }\n\
    \        if paren_count == 0 {\n            levels.append(level)\n        }\n\
    \        level += 1\n    }\n    return levels", "    var level = 0\n    var max_level\
    \ = 0\n    var max_level_paren = 0\n    var paren_count = 0\n    var paren_count_paren\
    \ = 0\n    var paren_level = [Int]()\n    var paren_level_paren = [Int]()\n  \
    \  var paren_level_paren_count = [Int]()\n    var paren_level_paren_count_paren\
    \ = [Int]()\n    var paren_level_paren_count_paren_level = [Int]()\n    var paren_level_paren_count_paren_level_paren\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level = [Int]()\n\
    \    var paren_level_paren_count_paren_level_paren_level_paren = [Int]()\n   \
    \ var paren_level_paren_count_paren_level_paren_level_paren_level = [Int]()\n\
    \    var paren_level_paren_count_paren_level_paren_level_paren_level_paren = [Int]()\n\
    \    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren_level_paren\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = [Int]()\n    var paren_level_paren_count_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_",
  "    var levels = [Int]()\n    var level = 0\n    var paren_level = 0\n    var paren_open\
    \ = 0\n    var paren_close = 0\n    var paren_level_count = 0\n    var paren_open_count\
    \ = 0\n    var paren_close_count = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if paren_level == 0 {\n            if c == '(' {\n              \
    \  paren_open++\n                paren_level_count++\n            } else if c\
    \ == ')' {\n                paren_close++\n                paren_level_count--\n\
    \            }\n        } else if paren_level == paren_level_count {\n       \
    \     if c == '(' {\n                paren_open++\n                paren_open_count++\n\
    \            } else if c == ')' {\n                paren_close++\n           \
    \     paren_close_count--\n            }\n        } else {\n            if c ==\
    \ '(' {\n                paren_open++\n                paren_level_count++\n \
    \           } else if c == ')' {\n                paren_close++\n            \
    \    paren_level_count--\n            }\n        }\n        if paren_level ==\
    \ 0 {\n            if paren_open_count == paren_close_count {\n              \
    \  levels.append(level)\n                paren_level = 0\n                paren_open\
    \ = 0\n                paren_close = 0\n                paren_level_count = 0\n\
    \                paren_open_count = 0\n                paren_close_count = 0\n\
    \            }\n        }\n        level++\n    }\n    return levels", "    var\
    \ levels = [Int]()\n    var paren_count = 0\n    for ch in paren_string.characters\
    \ {\n        if ch == '(' {\n            paren_count += 1\n        }\n       \
    \ if ch == ')' {\n            paren_count -= 1\n        }\n        if paren_count\
    \ == 0 {\n            levels.append(paren_count)\n        }\n    }\n    return\
    \ levels", "    var level = 0\n    var paren_level = 0\n    var paren_nesting\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting = 0\n  \
    \  var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting = 0\n    var paren_nesting = 0\n    var paren_nesting_level\
    \ = 0\n    var paren_nesting_nesting = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nest", "    var levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_levels_count\
    \ = 0\n    var paren_levels_max = 0\n    var paren_levels_max_count = 0\n    var\
    \ paren_levels_max_index = 0\n    var paren_levels_max_index2 = 0\n    var paren_levels_max_index3\
    \ = 0\n    var paren_levels_max_index4 = 0\n    var paren_levels_max_index5 =\
    \ 0\n    var paren_levels_max_index6 = 0\n    var paren_levels_max_index7 = 0\n\
    \    var paren_levels_max_index8 = 0\n    var paren_levels_max_index9 = 0\n  \
    \  var paren_levels_max_index10 = 0\n    var paren_levels_max_index11 = 0\n  \
    \  var paren_levels_max_index12 = 0\n    var paren_levels_max_index13 = 0\n  \
    \  var paren_levels_max_index14 = 0\n    var paren_levels_max_index15 = 0\n  \
    \  var paren_levels_max_index16 = 0\n    var paren_levels_max_index17 = 0\n  \
    \  var paren_levels_max_index18 = 0\n    var paren_levels_max_index19 = 0\n  \
    \  var paren_levels_max_index20 = 0\n    var paren_levels_max_index21 = 0\n  \
    \  var paren_levels_max_index22 = 0\n    var paren_levels_max_index23 = 0\n  \
    \  var paren_levels_max_index24 = 0\n    var paren_levels_max_index25 = 0\n  \
    \  var paren_levels_max_index26 = 0\n    var paren_levels_max_index27 = 0\n  \
    \  var paren_levels_max_index28 = 0\n    var paren_levels_max_index29 = 0\n  \
    \  var paren_levels_max_index30 = 0\n    var paren_levels_max_index31 = 0\n  \
    \  var paren_levels_max_index32 = 0\n    var paren_levels_max_index33 = 0\n  \
    \  var paren_levels_max_index34 = 0\n    var paren_levels_max_index35 = 0\n  \
    \  var paren_levels_max_index36 = 0\n    var paren_levels_max_index37 = 0\n  \
    \  var paren_levels_max_index38 = 0\n    var paren_levels_max_index39 = 0\n  \
    \  var paren_levels_max_index40 = 0\n    var paren_levels_max_index41 = 0\n  \
    \  var paren_levels_max_index42 = 0\n    var paren_levels_max_index43 = 0\n  \
    \  var paren_levels_max_index44 = 0\n    var paren_levels_max_index45 = 0\n  \
    \  var paren_levels_max_index46 = 0\n    var paren_levels_max_index47", "    var\
    \ levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_start_index = 0\n    var paren_end_index = 0\n    var paren_start_index\
    \ = 0\n    var paren_end_index = 0\n    var paren", "    var levels = [Int]()\n\
    \    var level = 0\n    var paren_count = 0\n    var paren_level = 0\n    for\
    \ c in paren_string.unicodeScalars {\n        if c == '(' {\n            paren_count\
    \ += 1\n            levels.append(paren_level)\n            paren_level = 0\n\
    \        } else if c == ')' {\n            paren_count -= 1\n            if paren_count\
    \ == 0 {\n                levels.append(paren_level)\n            }\n        \
    \    paren_level = 0\n        } else {\n            paren_level += 1\n       \
    \ }\n    }\n    return levels", "    var level = 0\n    var max_level = 0\n  \
    \  var max_level_paren = 0\n    var paren_count = 0\n    var paren_count_paren\
    \ = 0\n    var paren_level = 0\n    var paren_level_paren = 0\n    var paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren = 0\n    var paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren = 0\n    var paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren = 0\n   \
    \ var paren_level_paren_level_paren_level_paren_level_paren_level = 0\n    var\
    \ paren_level_paren_level_paren_level_paren_level_paren_level_paren = 0\n    var\
    \ paren_level_paren_level_paren_level_paren_level_paren_level_paren_level = 0\n\
    \    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level_paren_level\
    \ = 0\n    var paren_level_paren_level_paren", "    var levels = [Int]()\n   \
    \ var paren_level = 0\n    var paren_char = 0\n    var paren_char_count = 0\n\
    \    var paren_char_index = 0\n    var paren_char_count_index = 0\n    var paren_char_count_index_next\
    \ = 0\n    var paren_char_count_index_next2 = 0\n    var paren_char_count_index_next3\
    \ = 0\n    var paren_char_count_index_next4 = 0\n    var paren_char_count_index_next5\
    \ = 0\n    var paren_char_count_index_next6 = 0\n    var paren_char_count_index_next7\
    \ = 0\n    var paren_char_count_index_next8 = 0\n    var paren_char_count_index_next9\
    \ = 0\n    var paren_char_count_index_next10 = 0\n    var paren_char_count_index_next11\
    \ = 0\n    var paren_char_count_index_next12 = 0\n    var paren_char_count_index_next13\
    \ = 0\n    var paren_char_count_index_next14 = 0\n    var paren_char_count_index_next15\
    \ = 0\n    var paren_char_count_index_next16 = 0\n    var paren_char_count_index_next17\
    \ = 0\n    var paren_char_count_index_next18 = 0\n    var paren_char_count_index_next19\
    \ = 0\n    var paren_char_count_index_next20 = 0\n    var paren_char_count_index_next21\
    \ = 0\n    var paren_char_count_index_next22 = 0\n    var paren_char_count_index_next23\
    \ = 0\n    var paren_char_count_index_next24 = 0\n    var paren_char_count_index_next25\
    \ = 0\n    var paren_char_count_index_next26 = 0\n    var paren_char_count_index_next27\
    \ = 0\n    var paren_char_count_index_next28 = 0\n    var paren_char_count_index_next29\
    \ = 0\n    var paren_char_count_index_next30 = 0\n    var paren_char_count_index_next31\
    \ = 0\n    var paren_char_count_index_next32 = 0\n    var paren_char_count_index_next33\
    \ = 0\n    var paren_char_count_index_next34 = 0\n    var paren_char_count_index_next35\
    \ = 0\n    var paren_char_count_index_next36 = 0\n    var paren_char_count_index_next37\
    \ = 0\n    var paren_char_count_index_next38 = 0\n    var paren_char_count_index_next39\
    \ = 0\n    var paren_char_count_index_next40 = 0\n    var paren_char_count_index_next41\
    \ = 0\n    var paren_char_count_index_next42 = 0\n    var paren_char_count_index_next43\
    \ = 0\n    var paren_char_count_index_next44 = 0\n    var paren_char_count_index_next45\
    \ = 0\n    var paren_char_count_index_next46 = 0\n    var paren_char_count_index_next47\
    \ = 0\n    var paren", "    var levels = [Int]()\n    var level = 0\n    var paren_level\
    \ = 0\n    var paren_char = 0\n    var paren_char_count = 0\n    var paren_char_count_in_paren\
    \ = 0\n    var paren_char_count_in_paren_group = 0\n    var paren_char_count_in_paren_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group = 0\n    var paren_char_count_in_paren_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group = 0\n \
    \   var paren_char_count_in_paren_group_group_group_group_group_group = 0\n  \
    \  var paren_char_count_in_paren_group_group_group_group_group_group_group = 0\n\
    \    var paren_char_count_in_paren_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0\n    var paren_char_count_in_paren_group_group_group_group_group_group_group_",
  "    var levels = [Int]()\n    var level = 0\n    var parens = 0\n    var parens_count\
    \ = 0\n    for c in paren_string.unicodeScalars {\n        if parens_count ==\
    \ 0 {\n            levels.append(level)\n            parens += 1\n           \
    \ parens_count = 0\n        }\n        switch c {\n        case .OpenSquareBracket:\n\
    \            parens_count += 1\n        case .CloseSquareBracket:\n          \
    \  parens_count -= 1\n        case .OpenParenthesis:\n            parens += 1\n\
    \        case .CloseParenthesis:\n            parens -= 1\n        case .Newline:\n\
    \            level = 0\n            parens = 0\n            parens_count = 0\n\
    \        case .Tab:\n            level = 0\n            parens = 0\n         \
    \   parens_count = 0\n        default:\n            level += 1\n        }\n  \
    \  }\n    levels.append(level)\n    return levels", "    var level = 0\n    var\
    \ max_level = 0\n    var paren_level = 0\n    var paren_max_level = 0\n    var\
    \ paren_levels = [Int]()\n    var paren_max_levels = [Int]()\n    var paren_levels_string\
    \ = \"\"\n    var paren_max_levels_string = \"\"\n    var paren_levels_string_index\
    \ = 0\n    var paren_max_levels_string_index = 0\n    var paren_levels_string_length\
    \ = 0\n    var paren_max_levels_string_length = 0\n    var paren_levels_string_value\
    \ = 0\n    var paren_max_levels_string_value = 0\n    var paren_levels_string_char\
    \ = 0\n    var paren_max_levels_string_char = 0\n    var paren_levels_string_char_length\
    \ = 0\n    var paren_max_levels_string_char_length = 0\n    var paren_levels_string_char_char\
    \ = 0\n    var paren_max_levels_string_char_char = 0\n    var paren_levels_string_char_char_length\
    \ = 0\n    var paren_max_levels_string_char_char_length = 0\n    var paren_levels_string_char_char_char\
    \ = 0\n    var paren_max_levels_string_char_char_char = 0\n    var paren_levels_string_char_char_char_length\
    \ = 0\n    var paren_max_levels_string_char_char_char_length = 0\n    var paren_levels_string_char_char_char_char\
    \ = 0\n    var paren_max_levels_string_char_char_char_char = 0\n    var paren_levels_string_char_char_char_char_length\
    \ = 0\n    var paren_max_levels_string_char_char_char_char_length = 0\n    var\
    \ paren_levels_string_char_char_char_char_char = 0\n    var paren_max_levels_string_char_char_char_char_char\
    \ = 0\n    var paren_levels_string_char_char_char_char_char_length = 0\n    var\
    \ paren_max_levels_string_char_char_char_char_char_length = 0\n    var paren_levels_string_char_char_char_char_char_char\
    \ = 0\n    var paren_max_levels_string_char_char_char_char_char_char = 0\n   \
    \ var paren_levels_string_char_char_char_char_char_char_length = 0\n    var paren_max_levels_string_char_char_char_char_char_char_length\
    \ = 0\n    var paren_levels_string_char_char_char_char_char_char_char = 0\n  \
    \  var paren_max_levels_string_char_char_char_char_char_char_char = 0\n    var\
    \ paren_levels_string_char_char_char_char_char_char_char_length = 0\n    var paren_max_levels_string_char_char_char_char_char_char_char_length\
    \ = 0\n    var paren_levels_string_char_char_char_char_char_char_char_char = 0\n\
    \    var paren_max_levels_string_char_char_char_char_char_char_char_char = 0\n",
  "    var level = 0\n    var paren_level = [Int]()\n    var paren_level_count = [Int]()\n\
    \    var paren_level_char = [Int]()\n    var paren_level_char_count = [Int]()\n\
    \    var paren_level_char_index = [Int]()\n    var paren_level_char_index2 = [Int]()\n\
    \    var paren_level_char_index3 = [Int]()\n    var paren_level_char_index4 =\
    \ [Int]()\n    var paren_level_char_index5 = [Int]()\n    var paren_level_char_index6\
    \ = [Int]()\n    var paren_level_char_index7 = [Int]()\n    var paren_level_char_index8\
    \ = [Int]()\n    var paren_level_char_index9 = [Int]()\n    var paren_level_char_index10\
    \ = [Int]()\n    var paren_level_char_index11 = [Int]()\n    var paren_level_char_index12\
    \ = [Int]()\n    var paren_level_char_index13 = [Int]()\n    var paren_level_char_index14\
    \ = [Int]()\n    var paren_level_char_index15 = [Int]()\n    var paren_level_char_index16\
    \ = [Int]()\n    var paren_level_char_index17 = [Int]()\n    var paren_level_char_index18\
    \ = [Int]()\n    var paren_level_char_index19 = [Int]()\n    var paren_level_char_index20\
    \ = [Int]()\n    var paren_level_char_index21 = [Int]()\n    var paren_level_char_index22\
    \ = [Int]()\n    var paren_level_char_index23 = [Int]()\n    var paren_level_char_index24\
    \ = [Int]()\n    var paren_level_char_index25 = [Int]()\n    var paren_level_char_index26\
    \ = [Int]()\n    var paren_level_char_index27 = [Int]()\n    var paren_level_char_index28\
    \ = [Int]()\n    var paren_level_char_index29 = [Int]()\n    var paren_level_char_index30\
    \ = [Int]()\n    var paren_level_char_index31 = [Int]()\n    var paren_level_char_index32\
    \ = [Int]()\n    var paren_level_char_index33 = [Int]()\n    var paren_level_char_index34\
    \ = [Int]()\n    var paren_level_char_index35 = [Int]()\n    var paren_level_char_index36\
    \ = [Int]()\n    var paren_level_char_index37 = [Int]()\n    var paren_level_char_index38\
    \ = [Int]()\n    var paren_level_char_index39 = [Int]()\n", "    var level = 0\n\
    \    var paren_level = 0\n    var paren_nesting = 0\n    var paren_nesting_max\
    \ = 0\n    var paren_nesting_curr = 0\n    var paren_nesting_max_curr = 0\n  \
    \  var paren_nesting_curr_index = 0\n    var paren_nesting_max_curr_index = 0\n\
    \    var paren_nesting_max_index = 0\n    var paren_nesting_max_index2 = 0\n \
    \   var paren_nesting_max_index3 = 0\n    var paren_nesting_max_index4 = 0\n \
    \   var paren_nesting_max_index5 = 0\n    var paren_nesting_max_index6 = 0\n \
    \   var paren_nesting_max_index7 = 0\n    var paren_nesting_max_index8 = 0\n \
    \   var paren_nesting_max_index9 = 0\n    var paren_nesting_max_index10 = 0\n\
    \    var paren_nesting_max_index11 = 0\n    var paren_nesting_max_index12 = 0\n\
    \    var paren_nesting_max_index13 = 0\n    var paren_nesting_max_index14 = 0\n\
    \    var paren_nesting_max_index15 = 0\n    var paren_nesting_max_index16 = 0\n\
    \    var paren_nesting_max_index17 = 0\n    var paren_nesting_max_index18 = 0\n\
    \    var paren_nesting_max_index19 = 0\n    var paren_nesting_max_index20 = 0\n\
    \    var paren_nesting_max_index21 = 0\n    var paren_nesting_max_index22 = 0\n\
    \    var paren_nesting_max_index23 = 0\n    var paren_nesting_max_index24 = 0\n\
    \    var paren_nesting_max_index25 = 0\n    var paren_nesting_max_index26 = 0\n\
    \    var paren_nesting_max_index27 = 0\n    var paren_nesting_max_index28 = 0\n\
    \    var paren_nesting_max_index29 = 0\n    var paren_nesting_max_index30 = 0\n\
    \    var paren_nesting_max_index31 = 0\n    var paren_nesting_max_index32 = 0\n\
    \    var paren_nesting_max_index33 = 0\n    var paren_nesting_max_index34 = 0\n\
    \    var paren_nesting_max_index35 = 0\n    var paren_nesting_max_index36 = 0\n\
    \    var paren_nesting_max_index37 = 0\n    var paren_nesting_max_index38 = 0\n\
    \    var paren_nesting_max_index39 = 0\n    var paren_nesting_max_index40 = 0\n\
    \    var paren_nesting_max_index41 = 0\n    var paren_nesting_max_index42 = 0\n\
    \    var paren_nesting_max_index43 = 0\n    var paren_nesting_max_index44 = 0\n\
    \    var paren_nesting_max_index45 = 0\n    var paren", "    var levels = [Int]()\n\
    \    var paren_count = 0\n    var level = 0\n    for c in paren_string {\n   \
    \     if c == '(' {\n            paren_count += 1\n        } else if c == ')'\
    \ {\n            paren_count -= 1\n            if paren_count == 0 {\n       \
    \         levels.append(level)\n            }\n        }\n        level += 1\n\
    \    }\n    return levels", "    var level = 0\n    var levels = [Int]()\n   \
    \ var paren_count = 0\n    var paren_group = [String]()\n    var paren_group_count\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_levels = [Int]()\n \
    \   var paren_group_paren_count = 0\n    var paren_group_paren_group = [String]()\n\
    \    var paren_group_paren_group_count = 0\n    var paren_group_paren_group_level\
    \ = 0\n    var paren_group_paren_group_levels = [Int]()\n    var paren_group_paren_group_paren_count\
    \ = 0\n    var paren_group_paren_group_paren_group = [String]()\n    var paren_group_paren_group_paren_group_count\
    \ = 0\n    var paren_group_paren_group_paren_group_level = 0\n    var paren_group_paren_group_paren_group_levels\
    \ = [Int]()\n    var paren_group_paren_group_paren_group_paren_count = 0\n   \
    \ var paren_group_paren_group_paren_group_paren_group = [String]()\n    var paren_group_paren_group_paren_group_paren_group_count\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_level = 0\n   \
    \ var paren_group_paren_group_paren_group_paren_group_levels = [Int]()\n    var\
    \ paren_group_paren_group_paren_group_paren_group_paren_count = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group\
    \ = [String]()\n    var paren_group_paren_group_paren_group_paren_group_paren_group_count\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group_level\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group_levels\
    \ = [Int]()\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_count\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_group\
    \ = [String]()\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_group_count\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_group_level\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_group_levels\
    \ = [Int]()\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_group_paren_count\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_group_paren_group\
    \ = [String]()\n    var paren_group_", "    var levels = [Int]()\n    var level\
    \ = 0\n    var paren_count = 0\n    var paren_level = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if paren_count == 0 {\n            levels.append(level)\n       \
    \     paren_level = 0\n        }\n        switch c {\n        case .OpenSquareBracket,\
    \ .CloseSquareBracket, .OpenParenthesis, .CloseParenthesis:\n            paren_count\
    \ += 1\n        case .OpenParenthesis:\n            paren_level += 1\n       \
    \ case .CloseParenthesis:\n            paren_level -= 1\n            if paren_level\
    \ == 0 {\n                levels.append(level)\n                paren_count =\
    \ 0\n            }\n        }\n    }\n    return levels", "    var levels = [Int]()\n\
    \    var paren_count = 0\n    var paren_level = 0\n    var paren_start = 0\n \
    \   for c in paren_string.unicodeScalars {\n        if paren_count == 0 {\n  \
    \          paren_start = c\n        }\n        if paren_count == 0 {\n       \
    \     levels.append(paren_level)\n        }\n        if paren_count == 0 {\n \
    \           paren_count = 1\n        }\n        if c == paren_start {\n      \
    \      paren_count++\n        }\n        if c == paren_start && paren_count >\
    \ 1 {\n            levels.append(paren_level)\n        }\n        if c == paren_start\
    \ && paren_count == 1 {\n            levels.append(paren_level)\n        }\n \
    \       if c == paren_start && paren_count == 2 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 3 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 4 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 5 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 6 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 7 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 8 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 9 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 10 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 11 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 12 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 13 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 14 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 15 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 16 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 17 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 18 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren_count == 19 {\n            levels.append(paren_level)\n\
    \        }\n        if c == paren_start && paren", "    var levels = [Int]()\n\
    \    var level = 0\n    var parens = 0\n    var parens_count = 0\n    var parens_level\
    \ = 0\n    var parens_level_max = 0\n    var parens_level_max_index = 0\n    var\
    \ parens_level_max_count = 0\n    var parens_level_max_count_index = 0\n    var\
    \ parens_level_max_count_index = 0\n    var parens_level_max_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index = 0\n    var parens_level_max_count_index_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index = 0\n    var\
    \ parens_level_max_count_index_count_index_count_index_count = 0\n    var parens_level_max_count_index_count_index_count_index_count_index\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    var parens_level_max_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var parens_level_max_count_", "    var levels = [Int]()\n    var level\
    \ = 0\n    var paren_count = 0\n    for ch in paren_string {\n        if ch ==\
    \ '(' {\n            paren_count += 1\n        } else if ch == ')' {\n       \
    \     paren_count -= 1\n        } else if ch == ' ' && paren_count > 0 {\n   \
    \         levels.append(level)\n            level = 0\n        }\n        level\
    \ += 1\n    }\n    levels.append(level)\n    return levels", "    var max_level\
    \ = 0\n    var max_level_index = 0\n    var level = 0\n    var level_index = 0\n\
    \    var paren_count = 0\n    var paren_count_index = 0\n    var paren_group =\
    \ [String]()\n    var paren_group_index = 0\n    var paren_group_count = 0\n \
    \   var paren_group_count_index = 0\n    var paren_group_level = [Int]()\n   \
    \ var paren_group_level_index = 0\n    var paren_group_level_count = 0\n    var\
    \ paren_group_level_count_index = 0\n    var paren_group_level_group = [String]()\n\
    \    var paren_group_level_group_index = 0\n    var paren_group_level_group_count\
    \ = 0\n    var paren_group_level_group_count_index = 0\n    var paren_group_level_group_level\
    \ = [Int]()\n    var paren_group_level_group_level_index = 0\n    var paren_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_count_index = 0\n    var paren_group_level_group_level_group\
    \ = [String]()\n    var paren_group_level_group_level_group_index = 0\n    var\
    \ paren_group_level_group_level_group_count = 0\n    var paren_group_level_group_level_group_count_index\
    \ = 0\n    var paren_group_level_group_level_group_level = [Int]()\n    var paren_group_level_group_level_group_level_index\
    \ = 0\n    var paren_group_level_group_level_group_level_count = 0\n    var paren_group_level_group_level_group_level_count_index\
    \ = 0\n    var paren_group_level_group_level_group_level_group = [String]()\n\
    \    var paren_group_level_group_level_group_level_group_index = 0\n    var paren_group_level_group_level_group_level_group_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_count_index = 0\n\
    \    var paren_group_level_group_level_group_level_group_level = [Int]()\n   \
    \ var paren_group_level_group_level_group_level_group_level_index = 0\n    var\
    \ paren_group_level_group_level_group_level_group_level_count = 0\n    var paren_group_level_group_level_group_level_group_level_count_index\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group = [String]()\n\
    \    var paren_group_level_group_level_group_level_group_level_group_index = 0\n\
    \    var paren_group_level_group_level_group_level_group_level_group_count = 0\n\
    \    var paren_group_level_group_level_group_level_group_level_group_count_index\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level\
    \ = [Int]()\n    var paren_group_level_group_level_group_level_group_level_group_level_index\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_count\
    \ = 0\n    var paren_group_level_group_level_group_level_group_level_group_level_count_index\
    \ = 0\n", "    var levels = [Int]()\n    var paren_count = 0\n    var level =\
    \ 0\n    var paren_level = 0\n    for c in paren_string.unicodeScalars {\n   \
    \     if paren_count == 0 {\n            levels.append(level)\n        }\n   \
    \     if paren_count == 1 && c == paren_string.unicodeScalars.first {\n      \
    \      levels.append(level)\n        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == paren_string.unicodeScalars.last\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ && c == paren_string.unicodeScalars.first {\n            levels.append(level)\n\
    \        }\n        if paren_count == 1 && c == ", "    var levels = [Int]()\n\
    \    var paren_count = 0\n    var paren_level = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if paren_count == 0 {\n            levels.append(paren_level)\n \
    \       }\n        switch c {\n        case .OpenSquareBracket:\n            paren_count\
    \ += 1\n        case .CloseSquareBracket:\n            paren_count -= 1\n    \
    \    case .OpenParenthesis:\n            paren_level += 1\n        case .CloseParenthesis:\n\
    \            paren_level -= 1\n        }\n    }\n    return levels", "    var\
    \ levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_end_count\
    \ = 0\n    var paren_end_level = 0\n    var paren_end_start = 0\n    var paren_end_end\
    \ = 0\n    var paren_end_end_count = 0\n    var paren_end_end_level = 0\n    var\
    \ paren_end_start_end = 0\n    var paren_end_start_end_count = 0\n    var paren_end_start_end_level\
    \ = 0\n    var paren_end_start_end_start = 0\n    var paren_end_start_end_end\
    \ = 0\n    var paren_end_start_end_end_count = 0\n    var paren_end_start_end_end_level\
    \ = 0\n    var paren_end_start_end_start_end = 0\n    var paren_end_start_end_start_end_count\
    \ = 0\n    var paren_end_start_end_start_end_level = 0\n    var paren_end_start_end_start_start_end\
    \ = 0\n    var paren_end_start_end_start_start_end_count = 0\n    var paren_end_start_end_start_start_end_level\
    \ = 0\n    var paren_end_start_end_start_start_end_start = 0\n    var paren_end_start_end_start_start_end_end\
    \ = 0\n    var paren_end_start_end_start_start_end_end_count = 0\n    var paren_end_start_end_start_start_end_end_level\
    \ = 0\n    var paren_end_start_end_start_start_start_end_start = 0\n    var paren_end_start_end_start_start_end_end\
    \ = 0\n    var paren_end_start_end_start_start_end_end_count = 0\n    var paren_end_start_end_start_start_end_end_level\
    \ = 0\n    var paren_end_start_end_start_start_end_start_end = 0\n    var paren_end_start_end_start_start_end_start_end_count\
    \ = 0\n    var paren_end_start_end_start_start_end_start_end_level = 0\n    var\
    \ paren_end_start_end_start_start_end_start_start_end = 0\n    var paren_end_start_end_start_start_end_start_end_count\
    \ = 0\n    var paren_end_start_end_start_start_end_start_end_level = 0\n    var\
    \ paren_end_start_end_start_start_end_start_start_end = 0\n    var paren_end_start_end_start_start_end_start_end_count\
    \ = 0\n    var paren_end_start_end_start_start_end_start_end_level = 0\n    var\
    \ paren_end_start_end_start_start_end_start_start_end = 0\n    var paren_end_start_end_start_start_end_start_end_count\
    \ = 0\n    var paren_end_start_end_start_start_end_start_end_level = 0\n    var\
    \ paren_end_start_end_start_start_end_start_start_end_end = 0\n    var paren_end_start_end_start_start_end_start_end_end_count\
    \ = 0\n    var paren_end_start_end_start_start_end_start_end_level = 0\n    var\
    \ paren_end_", "    var levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_levels_len = 0\n    var paren_levels_lens = [Int]()\n\
    \    var paren_levels_lens_len = 0\n    var paren_levels_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_len = 0\n    var paren_levels_lens_lens_lens =\
    \ [Int]()\n    var paren_levels_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len = 0\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]", "    var levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_levels_len = 0\n    var paren_levels_lens = [Int]()\n\
    \    var paren_levels_lens_len = 0\n    var paren_levels_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_len = 0\n    var paren_levels_lens_lens_lens =\
    \ [Int]()\n    var paren_levels_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len = 0\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]", "    var level = 0\n    var paren_level = 0\n    var paren_nesting\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting = 0\n  \
    \  var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_level =\
    \ 0\n    var paren_nesting = 0\n    var paren_level = 0\n    var paren_nesting_level\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level",
  "    var levels = [Int]()\n    var level = 0\n    var paren_level = 0\n    var paren_open\
    \ = false\n    var paren_close = false\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_", "    var levels = [Int]()\n\
    \    var level = 0\n    var paren_level = 0\n    var paren_start = 0\n    var\
    \ paren_end = 0\n    var paren_char_count = 0\n    var paren_char = \"\"\n   \
    \ var paren_char_next = \"\"\n    var paren_char_prev = \"\"\n    var paren_char_prev2\
    \ = \"\"\n    var paren_char_next2 = \"\"\n    var paren_char_next3 = \"\"\n \
    \   var paren_char_prev3 = \"\"\n    var paren_char_prev4 = \"\"\n    var paren_char_next4\
    \ = \"\"\n    var paren_char_next5 = \"\"\n    var paren_char_prev5 = \"\"\n \
    \   var paren_char_prev6 = \"\"\n    var paren_char_next6 = \"\"\n    var paren_char_next7\
    \ = \"\"\n    var paren_char_prev7 = \"\"\n    var paren_char_prev8 = \"\"\n \
    \   var paren_char_next8 = \"\"\n    var paren_char_next9 = \"\"\n    var paren_char_prev9\
    \ = \"\"\n    var paren_char_prev10 = \"\"\n    var paren_char_next10 = \"\"\n\
    \    var paren_char_next11 = \"\"\n    var paren_char_prev11 = \"\"\n    var paren_char_prev12\
    \ = \"\"\n    var paren_char_next12 = \"\"\n    var paren_char_next13 = \"\"\n\
    \    var paren_char_prev13 = \"\"\n    var paren_char_prev14 = \"\"\n    var paren_char_next14\
    \ = \"\"\n    var paren_char_next15 = \"\"\n    var paren_char_prev15 = \"\"\n\
    \    var paren_char_prev16 = \"\"\n    var paren_char_next16 = \"\"\n    var paren_char_next17\
    \ = \"\"\n    var paren_char_prev17 = \"\"\n    var paren_char_prev18 = \"\"\n\
    \    var paren_char_next18 = \"\"\n    var paren_char_next19 = \"\"\n    var paren_char_prev19\
    \ = \"\"\n    var paren_char_prev20 = \"\"\n    var paren_char_next20 = \"\"\n\
    \    var paren_char_next21 = \"\"\n    var paren_char_prev21 = \"\"\n    var paren_char_prev22\
    \ = \"\"\n    var paren_char_next22 = \"\"\n    var paren_char_next23 = \"\"\n\
    \    var paren_char_prev23 = \"\"\n    var paren_char_prev24 = \"\"\n    var paren_char_next24\
    \ = \"\"\n    var paren_char_next25 = \"\"\n    var paren_char_prev25 = \"\"\n\
    \    var paren_char_prev26 = \"\"\n    var paren_char_next26 = \"\"\n    var paren_char_next27\
    \ = \"\"\n    var paren_char_prev27 = \"\"\n    var paren_char_prev28 = \"\"\n\
    \    var paren_char_next28 = \"\"\n    var paren_char_next29 = \"\"\n    var paren_char_prev29\
    \ = \"\"\n    var paren_char_prev30", "    var levels = [Int]()\n    var level\
    \ = 0\n    var paren_count = 0\n    var paren_level = 0\n    var paren_start =\
    \ 0\n    var paren_end = 0\n    var paren_start_index = 0\n    var paren_end_index\
    \ = 0\n    var paren_char_count = 0\n    var paren_char_level = 0\n    var paren_char_start\
    \ = 0\n    var paren_char_end = 0\n    var paren_char_start_index = 0\n    var\
    \ paren_char_end_index = 0\n    var paren_char_char_count = 0\n    var paren_char_char_level\
    \ = 0\n    var paren_char_char_start = 0\n    var paren_char_char_end = 0\n  \
    \  var paren_char_char_start_index = 0\n    var paren_char_char_end_index = 0\n\
    \    var paren_char_char_char_count = 0\n    var paren_char_char_char_level =\
    \ 0\n    var paren_char_char_char_start = 0\n    var paren_char_char_char_end\
    \ = 0\n    var paren_char_char_char_start_index = 0\n    var paren_char_char_char_end_index\
    \ = 0\n    var paren_char_char_char_char_count = 0\n    var paren_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_start = 0\n    var paren_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_start_index = 0\n    var paren_char_char_char_char_end_index\
    \ = 0\n    var paren_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_start = 0\n    var paren_char_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char_start_index = 0\n    var paren_char_char_char_char_char_end_index\
    \ = 0\n    var paren_char_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_start = 0\n    var paren_char_char_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char_char_start_index = 0\n    var paren_char_char_char_char_char_char_end_index\
    \ = 0\n    var paren_char_char_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_char_start = 0\n    var paren_char_char_char_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char_char_char_start_index = 0\n    var\
    \ paren_char_char_char_char_char_char_char_end_index = 0\n    var paren_char_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_level = 0\n    var\
    \ paren", "    var level = 0\n    var paren_level = 0\n    var paren_nesting =\
    \ 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting = 0\n    var\
    \ paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting = 0\n\
    \    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_level = 0\n    var paren_nesting_level\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level",
  "    var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    for c in paren_string.unicodeScalars {\n        if paren_count == 0\
    \ {\n            levels.append(level)\n            paren_count += 1\n        }\n\
    \        switch c {\n        case ')':\n            paren_count -= 1\n       \
    \     if paren_count == 0 {\n                levels.append(level)\n          \
    \      paren_count += 1\n            }\n        case ')':\n            level -=\
    \ 1\n            if level == 0 {\n                levels.append(level)\n     \
    \           paren_count += 1\n            }\n        default:\n            level\
    \ += (c >= '(' ? 1 : -1)\n        }\n    }\n    return levels", "    var levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_levels_len = 0\n    var paren_levels_lens = [Int]()\n    var paren_levels_lens_len\
    \ = 0\n    var paren_levels_lens_lens = [Int]()\n    var paren_levels_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n   \
    \ var paren_levels_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n \
    \   var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len =\
    \ 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]", "    var levels = [Int]()\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren", "    var levels = [Int]()\n  \
    \  var level = 0\n    var paren_level = 0\n    var paren_open = 0\n    var paren_close\
    \ = 0\n    var paren_level_count = 0\n    var paren_open_count = 0\n    var paren_close_count\
    \ = 0\n    var paren_level_count2 = 0\n    var paren_open_count2 = 0\n    var\
    \ paren_close_count2 = 0\n    var paren_level_count3 = 0\n    var paren_open_count3\
    \ = 0\n    var paren_close_count3 = 0\n    var paren_level_count4 = 0\n    var\
    \ paren_open_count4 = 0\n    var paren_close_count4 = 0\n    var paren_level_count5\
    \ = 0\n    var paren_open_count5 = 0\n    var paren_close_count5 = 0\n    var\
    \ paren_level_count6 = 0\n    var paren_open_count6 = 0\n    var paren_close_count6\
    \ = 0\n    var paren_level_count7 = 0\n    var paren_open_count7 = 0\n    var\
    \ paren_close_count7 = 0\n    var paren_level_count8 = 0\n    var paren_open_count8\
    \ = 0\n    var paren_close_count8 = 0\n    var paren_level_count9 = 0\n    var\
    \ paren_open_count9 = 0\n    var paren_close_count9 = 0\n    var paren_level_count10\
    \ = 0\n    var paren_open_count10 = 0\n    var paren_close_count10 = 0\n    var\
    \ paren_level_count11 = 0\n    var paren_open_count11 = 0\n    var paren_close_count11\
    \ = 0\n    var paren_level_count12 = 0\n    var paren_open_count12 = 0\n    var\
    \ paren_close_count12 = 0\n    var paren_level_count13 = 0\n    var paren_open_count13\
    \ = 0\n    var paren_close_count13 = 0\n    var paren_level_count14 = 0\n    var\
    \ paren_open_count14 = 0\n    var paren_close_count14 = 0\n    var paren_level_count15\
    \ = 0\n    var paren_open_count15 = 0\n    var paren_close_count15 = 0\n    var\
    \ paren_level_count16 = 0\n    var paren_open_count16 = 0\n    var paren_close_count16\
    \ = 0\n    var paren_level_count17 = 0\n    var paren_open_count17 = 0\n    var\
    \ paren_close_count17 = 0\n    var paren_level_count18 = 0\n    var paren_open_count18\
    \ = 0\n    var paren_close_count18 = 0\n    var paren_level_count19 = 0\n    var\
    \ paren_open_count19 = 0\n    var paren_close_count19 = 0\n    var paren_level_count20\
    \ = 0\n    var paren_open_count20 = 0\n    var paren_close_count20 = 0\n    var\
    \ paren_level_count21", "    var max_level = 0\n    var level = 0\n    var paren_level\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_levels_string = \"\"\n  \
    \  var paren_levels_count = 0\n    var paren_levels_string_count = 0\n    var\
    \ paren_levels_string_index = 0\n    var paren_levels_string_index_count = 0\n\
    \    var paren_levels_string_index_count_max = 0\n    var paren_levels_string_index_count_min\
    \ = 0\n    var paren_levels_string_index_count_min_index = 0\n    var paren_levels_string_index_count_max_index\
    \ = 0\n    var paren_levels_string_index_count_min_index = 0\n    var paren_levels_string_index_count_max_index\
    \ = 0\n    var paren_levels_string_index_count_min_index_count = 0\n    var paren_levels_string_index_count_max_index_count\
    \ = 0\n    var paren_levels_string_index_count_min_index_count_max = 0\n    var\
    \ paren_levels_string_index_count_max_index_count_max = 0\n    var paren_levels_string_index_count_min_index_count_min\
    \ = 0\n    var paren_levels_string_index_count_max_index_count_min = 0\n    var\
    \ paren_levels_string_index_count_min_index_count_min_index = 0\n    var paren_levels_string_index_count_max_index_count_min_index\
    \ = 0\n    var paren_levels_string_index_count_min_index_count_max_index = 0\n\
    \    var paren_levels_string_index_count_max_index_count_max_index = 0\n    var\
    \ paren_levels_string_index_count_min_index_count_min_index_count = 0\n    var\
    \ paren_levels_string_index_count_max_index_count_min_index_count = 0\n    var\
    \ paren_levels_string_index_count_min_index_count_max_index_count = 0\n    var\
    \ paren_levels_string_index_count_max_index_count_max_index_count = 0\n    var\
    \ paren_levels_string_index_count_min_index_count_min_index_count_max = 0\n  \
    \  var paren_levels_string_index_count_max_index_count_min_index_count_max = 0\n\
    \    var paren_levels_string_index_count_min_index_count_max_index_count_max =\
    \ 0\n    var paren_levels_string_index_count_max_index_count_max_index_count_max\
    \ = 0\n    var paren_levels_string_index_count_min_index_count_min_index_count_min\
    \ = 0\n    var paren_levels_string_index_count_max_index_count_min_index_count_min\
    \ = 0\n    var paren_levels_string_index_count_min_index_count_max_index_count_min\
    \ = 0\n    var paren_levels_string_index_count_max_index_count_max_index_count_min\
    \ = 0\n    var paren_levels_string_index_count_min_index_count_min_index_count_max_index\
    \ = 0\n    var paren_levels_string_index_count_max_index_count_min_index_count_max_index\
    \ = 0\n    var paren_level", "    var levels = [Int]()\n    var level = 0\n  \
    \  var paren_count = 0\n    var paren_level = 0\n    var paren_char_count = 0\n\
    \    var paren_char_level = 0\n    var paren_char_pos = 0\n    var paren_char_end\
    \ = paren_string.count\n\n    for _ in 0..<paren_string.count {\n        let char\
    \ = paren_string[paren_char_pos]\n        paren_char_pos += 1\n        switch\
    \ char {\n        case '(':\n            paren_count += 1\n            paren_char_level\
    \ = 0\n            paren_char_pos = 0\n            paren_char_end = paren_string.count\n\
    \            levels.append(level)\n            level += 1\n        case ')':\n\
    \            paren_char_level -= 1\n            if paren_char_level == 0 {\n \
    \               levels.append(level)\n                level -= 1\n           \
    \ }\n            paren_char_pos = 0\n            paren_char_end = paren_string.count\n\
    \        case ' ':\n            paren_char_level = 0\n            paren_char_pos\
    \ = 0\n            paren_char_end = paren_string.count\n        default:\n   \
    \         paren_char_level = 0\n            paren_char_pos = 0\n            paren_char_end\
    \ = paren_string.count\n        }\n    }\n    return levels", "    var level =\
    \ 0\n    var levels = [Int]()\n    var paren_level = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_levels_len = 0\n    var paren_levels_lens = [Int]()\n\
    \    var paren_levels_lens_len = 0\n    var paren_levels_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_len = 0\n    var paren_levels_lens_lens_lens =\
    \ [Int]()\n    var paren_levels_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len = 0\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n    var\
    \ paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_",
  "    var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    for c\
    \ in paren_string.characters {\n        if c == '(' {\n            paren_count\
    \ += 1\n        } else if c == ')' {\n            paren_count -= 1\n         \
    \   if paren_count == 0 {\n                levels.append(level)\n            }\n\
    \        }\n        level += 1\n    }\n    return levels", "    var level = 0\n\
    \    var max_level = 0\n    var max_level_parens = 0\n    var paren_count = 0\n\
    \    var paren_count_parens = 0\n    var paren_count_parens_parens = 0\n    var\
    \ paren_count_parens_parens_parens = 0\n    var paren_count_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens = 0\n    var paren_count_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens =\
    \ 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_", "    var levels = [Int]()\n\
    \    var paren_count = 0\n    var paren_level = 0\n    var paren_start = 0\n \
    \   var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n\
    \    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren", "    var levels = [Int]()\n    var paren_count = 0\n    for ch\
    \ in paren_string.unicodeScalars {\n        if ch == '(' {\n            paren_count\
    \ += 1\n        } else if ch == ')' {\n            paren_count -= 1\n        \
    \    if paren_count == 0 {\n                levels.append(paren_count)\n     \
    \       }\n        }\n    }\n    return levels", "    var level = 0\n    var max_level\
    \ = 0\n    var max_level_parens = 0\n    var parens_count = 0\n    var parens_count_parens\
    \ = 0\n    var parens_count_parens_count = 0\n    var parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count = 0\n    var parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count = 0\n    var\
    \ parens_count_parens_count_parens_count_parens_count_parens = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens\
    \ = 0\n    var parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_parens_count_",
  "    var max_level = 0\n    var level = 0\n    var paren_level = 0\n    var paren_level_stack\
    \ = [Int]()\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var\
    \ paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n\
    \    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n   \
    \ var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var\
    \ paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n\
    \    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n   \
    \ var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var\
    \ paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n\
    \    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n   \
    \ var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0", "    var levels = [Int]()\n    var level =\
    \ 0\n    var parens = 0\n    for c in paren_string.unicodeScalars {\n        if\
    \ c == '(' {\n            levels[level] = parens\n            parens += 1\n  \
    \      } else if c == ')' {\n            levels[level] = parens\n            parens\
    \ -= 1\n        } else if c == '{' {\n            levels[level] = parens\n   \
    \         parens += 1\n        } else if c == '}' {\n            levels[level]\
    \ = parens\n            parens -= 1\n        }\n        level++\n    }\n    return\
    \ levels", "    var level = 0\n    var max_level = 0\n    var max_level_index\
    \ = 0\n    var max_level_char = \"\"\n    var max_level_char_length = 0\n    var\
    \ max_level_char_length_index = 0\n    var max_level_char_length_index2 = 0\n\
    \    var max_level_char_length_index3 = 0\n    var max_level_char_length_index4\
    \ = 0\n    var max_level_char_length_index5 = 0\n    var max_level_char_length_index6\
    \ = 0\n    var max_level_char_length_index7 = 0\n    var max_level_char_length_index8\
    \ = 0\n    var max_level_char_length_index9 = 0\n    var max_level_char_length_index10\
    \ = 0\n    var max_level_char_length_index11 = 0\n    var max_level_char_length_index12\
    \ = 0\n    var max_level_char_length_index13 = 0\n    var max_level_char_length_index14\
    \ = 0\n    var max_level_char_length_index15 = 0\n    var max_level_char_length_index16\
    \ = 0\n    var max_level_char_length_index17 = 0\n    var max_level_char_length_index18\
    \ = 0\n    var max_level_char_length_index19 = 0\n    var max_level_char_length_index20\
    \ = 0\n    var max_level_char_length_index21 = 0\n    var max_level_char_length_index22\
    \ = 0\n    var max_level_char_length_index23 = 0\n    var max_level_char_length_index24\
    \ = 0\n    var max_level_char_length_index25 = 0\n    var max_level_char_length_index26\
    \ = 0\n    var max_level_char_length_index27 = 0\n    var max_level_char_length_index28\
    \ = 0\n    var max_level_char_length_index29 = 0\n    var max_level_char_length_index30\
    \ = 0\n    var max_level_char_length_index31 = 0\n    var max_level_char_length_index32\
    \ = 0\n    var max_level_char_length_index33 = 0\n    var max_level_char_length_index34\
    \ = 0\n    var max_level_char_length_index35 = 0\n    var max_level_char_length_index36\
    \ = 0\n    var max_level_char_length_index37 = 0\n    var max_level_char_length_index38\
    \ = 0\n    var max_level_char_length_index39 = 0\n    var max_level_char_length_index40\
    \ = 0\n    var max_level_char_length_index41 = 0\n    var max_level_char_length_index42\
    \ = 0\n    var max_level_char_length_index43 = 0\n    var max_level_char_length_index44\
    \ = 0\n    var max_level_char_length_index45 = 0\n    var max_level_char_length_index46\
    \ = 0\n    var max_level_char_length_index47 = 0\n    var max_level_char_length_index48\
    \ = 0\n    var max_level_char_length_index49 = 0\n    var max_level_char_length_index50\
    \ = 0\n    var max_level_char_length_index51 = 0\n    var max_level_char_length_index52\
    \ = 0\n    var max_level_char_length_index53 = 0\n    var max_level_char_length_index54\
    \ = 0", "    var levels = [Int]()\n    var paren_count = 0\n    var level = 0\n\
    \    for c in paren_string.characters {\n        if c == '(' {\n            paren_count\
    \ += 1\n            levels.append(level)\n        } else if c == ')' {\n     \
    \       paren_count -= 1\n            if paren_count == 0 {\n                levels.append(level)\n\
    \            }\n        }\n        level += 1\n    }\n    return levels", "  \
    \  var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    for c\
    \ in paren_string.unicodeScalars {\n        if c == parenthesisOpeningCharacter\
    \ {\n            paren_count += 1\n        } else if c == parenthesisClosingCharacter\
    \ {\n            paren_count -= 1\n        }\n        if paren_count == 0 {\n\
    \            levels.append(level)\n        }\n        level += 1\n    }\n    return\
    \ levels", "    var levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_levels_len = 0\n    var paren_levels_len2 = 0\n   \
    \ var paren_levels_len3 = 0\n    var paren_levels_len4 = 0\n    var paren_levels_len5\
    \ = 0\n    var paren_levels_len6 = 0\n    var paren_levels_len7 = 0\n    var paren_levels_len8\
    \ = 0\n    var paren_levels_len9 = 0\n    var paren_levels_len10 = 0\n    var\
    \ paren_levels_len11 = 0\n    var paren_levels_len12 = 0\n    var paren_levels_len13\
    \ = 0\n    var paren_levels_len14 = 0\n    var paren_levels_len15 = 0\n    var\
    \ paren_levels_len16 = 0\n    var paren_levels_len17 = 0\n    var paren_levels_len18\
    \ = 0\n    var paren_levels_len19 = 0\n    var paren_levels_len20 = 0\n    var\
    \ paren_levels_len21 = 0\n    var paren_levels_len22 = 0\n    var paren_levels_len23\
    \ = 0\n    var paren_levels_len24 = 0\n    var paren_levels_len25 = 0\n    var\
    \ paren_levels_len26 = 0\n    var paren_levels_len27 = 0\n    var paren_levels_len28\
    \ = 0\n    var paren_levels_len29 = 0\n    var paren_levels_len30 = 0\n    var\
    \ paren_levels_len31 = 0\n    var paren_levels_len32 = 0\n    var paren_levels_len33\
    \ = 0\n    var paren_levels_len34 = 0\n    var paren_levels_len35 = 0\n    var\
    \ paren_levels_len36 = 0\n    var paren_levels_len37 = 0\n    var paren_levels_len38\
    \ = 0\n    var paren_levels_len39 = 0\n    var paren_levels_len40 = 0\n    var\
    \ paren_levels_len41 = 0\n    var paren_levels_len42 = 0\n    var paren_levels_len43\
    \ = 0\n    var paren_levels_len44 = 0\n    var paren_levels_len45 = 0\n    var\
    \ paren_levels_len46 = 0\n    var paren_levels_len47 = 0\n    var paren_levels_len48\
    \ = 0\n    var paren_levels_len49 = 0\n    var paren_levels_len50 = 0\n    var\
    \ paren_levels_len51 = 0\n    var paren_levels_len52 = 0\n    var paren_levels_len53\
    \ = 0\n    var paren_levels_len54 = 0\n    var paren_levels_", "    var levels\
    \ = [Int]()\n    var paren_count = 0\n    var paren_level = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if c == '(' {\n            paren_count += 1\n        } else if c\
    \ == ')' {\n            paren_count -= 1\n            if paren_count == 0 {\n\
    \                levels.append(paren_level)\n            }\n        }\n      \
    \  paren_level += (paren_count > 0)\n    }\n    return levels", "    var level\
    \ = 0\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var paren_levels_size\
    \ = 0\n    var paren_levels_sizes = [Int]()\n    var paren_levels_sizes_size =\
    \ 0\n    var paren_levels_sizes_sizes = [Int]()\n    var paren_levels_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes = [Int]()\n    var paren_levels_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes = [Int]()\n  \
    \  var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_size = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes\
    \ = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes =\
    \ [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes\
    \ = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes\
    \ = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes\
    \ = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes\
    \ = [Int]()\n    var ", "    var levels = [Int]()\n    var level = 0\n    var\
    \ paren_count = 0\n    for ch in paren_string.characters {\n        if ch == '('\
    \ {\n            paren_count += 1\n        } else if ch == ')' {\n           \
    \ paren_count -= 1\n            if paren_count == 0 {\n                levels.append(level)\n\
    \                level = 0\n            }\n        }\n        level += 1\n   \
    \ }\n    return levels", "    var levels = [Int]()\n    var paren_count = 0\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_char = 0\n    var paren_char_count = 0\n    var paren_char_level =\
    \ 0\n    var paren_char_start = 0\n    var paren_char_end = 0\n    var paren_char_char\
    \ = 0\n    var paren_char_char_count = 0\n    var paren_char_char_level = 0\n\
    \    var paren_char_char_start = 0\n    var paren_char_char_end = 0\n    var paren_char_char_char\
    \ = 0\n    var paren_char_char_char_count = 0\n    var paren_char_char_char_level\
    \ = 0\n    var paren_char_char_char_start = 0\n    var paren_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char = 0\n    var paren_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_level = 0\n    var paren_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_end = 0\n    var paren_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_start = 0\n    var paren_char_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_start = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_count = 0\n\
    \    var paren_char_char_char_char_char_char_char_char_char_level = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_char_char_start = 0\n    var paren_char_char_char_char_char_char_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_char_char =\
    \ 0\n    var paren_char_char_char_char_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_", "    var levels\
    \ = [Int]()\n    var paren_count = 0\n    var paren_level = 0\n    var paren_start\
    \ = -1\n    var paren_end = -1\n    var paren_levels = [Int]()\n    for index\
    \ in 0..<paren_string.characters.count {\n        let char = paren_string.characters[index]\n\
    \        switch char {\n        case '(':\n            paren_count += 1\n    \
    \        paren_level = 0\n            paren_start = index\n            paren_end\
    \ = -1\n            paren_levels.append(0)\n        case ')':\n            paren_count\
    \ -= 1\n            paren_level = paren_levels[paren_level]\n            paren_end\
    \ = index\n            if paren_count == 0 {\n                levels.append(paren_level)\n\
    \                paren_levels[paren_level] += 1\n            }\n        }\n  \
    \  }\n    return levels", "    var levels = [Int]()\n    var paren_level = 0\n\
    \    var paren_levels = [Int]()\n    var paren_levels_count = 0\n    var paren_levels_max\
    \ = 0\n    var paren_levels_max_count = 0\n    var paren_levels_max_index = 0\n\
    \    var paren_levels_max_index2 = 0\n    var paren_levels_max_index3 = 0\n  \
    \  var paren_levels_max_index4 = 0\n    var paren_levels_max_index5 = 0\n    var\
    \ paren_levels_max_index6 = 0\n    var paren_levels_max_index7 = 0\n    var paren_levels_max_index8\
    \ = 0\n    var paren_levels_max_index9 = 0\n    var paren_levels_max_index10 =\
    \ 0\n    var paren_levels_max_index11 = 0\n    var paren_levels_max_index12 =\
    \ 0\n    var paren_levels_max_index13 = 0\n    var paren_levels_max_index14 =\
    \ 0\n    var paren_levels_max_index15 = 0\n    var paren_levels_max_index16 =\
    \ 0\n    var paren_levels_max_index17 = 0\n    var paren_levels_max_index18 =\
    \ 0\n    var paren_levels_max_index19 = 0\n    var paren_levels_max_index20 =\
    \ 0\n    var paren_levels_max_index21 = 0\n    var paren_levels_max_index22 =\
    \ 0\n    var paren_levels_max_index23 = 0\n    var paren_levels_max_index24 =\
    \ 0\n    var paren_levels_max_index25 = 0\n    var paren_levels_max_index26 =\
    \ 0\n    var paren_levels_max_index27 = 0\n    var paren_levels_max_index28 =\
    \ 0\n    var paren_levels_max_index29 = 0\n    var paren_levels_max_index30 =\
    \ 0\n    var paren_levels_max_index31 = 0\n    var paren_levels_max_index32 =\
    \ 0\n    var paren_levels_max_index33 = 0\n    var paren_levels_max_index34 =\
    \ 0\n    var paren_levels_max_index35 = 0\n    var paren_levels_max_index36 =\
    \ 0\n    var paren_levels_max_index37 = 0\n    var paren_levels_max_index38 =\
    \ 0\n    var paren_levels_max_index39 = 0\n    var paren_levels_max_index40 =\
    \ 0\n    var paren_levels_max_index41 = 0\n    var paren_levels_max_index42 =\
    \ 0\n    var paren_levels_max_index43 = 0\n    var paren_levels_max_index44 =\
    \ 0\n    var paren_levels_max_index45 = 0\n    var paren_levels_max_index46 =\
    \ 0\n    var paren_levels_max_index47", "    var levels = [Int]()\n    var paren_count\
    \ = 0\n    var paren_level = 0\n    var paren_start = -1\n    var paren_end =\
    \ -1\n    var paren_start_index = -1\n    var paren_end_index = -1\n    var paren_start_index\
    \ = -1\n    var paren_end_index = -1\n    var paren_start_index = -1\n    var\
    \ paren_end_index = -1\n    var paren_start_index = -1\n    var paren_end_index\
    \ = -1\n    var paren_start_index = -1\n    var paren_end_index = -1\n    var\
    \ paren_start_index = -1\n    var paren_end_index = -1\n    var paren_start_index\
    \ = -1\n    var paren_end_index = -1\n    var paren_start_index = -1\n    var\
    \ paren_end_index = -1\n    var paren_start_index = -1\n    var paren_end_index\
    \ = -1\n    var paren_start_index = -1\n    var paren_end_index = -1\n    var\
    \ paren_start_index = -1\n    var paren_end_index = -1\n    var paren_start_index\
    \ = -1\n    var paren_end_index = -1\n    var paren_start_index = -1\n    var\
    \ paren_end_index = -1\n    var paren_start_index = -1\n    var paren_end_index\
    \ = -1\n    var paren_start_index = -1\n    var paren_end_index = -1\n    var\
    \ paren_start_index = -1\n    var paren_end_index = -1\n    var paren_start_index\
    \ = -1\n    var paren_end_index = -1\n    var paren_start_index = -1\n    var\
    \ paren_end_index = -1\n    var paren_start_index = -1\n    var paren_end_index\
    \ = -1\n    var paren_start_index = -1\n    var paren_end_index = -1\n    var\
    \ paren_start_index = -1\n    var paren_end_index = -1\n    var paren_start_index\
    \ = -1\n    var paren_end_index = -1\n    var paren_start_index = -1\n    var\
    \ paren_end_index = -1\n    var paren_start_index = -1\n    var paren_end_index\
    \ = -1\n    var paren_start_index = -1\n    var paren_end_index = -1\n    var\
    \ paren_start_index = -1\n    var paren_end_index = -1\n    var paren_start_index\
    \ = -1\n    var paren_end_index = -1\n    var paren_start_index = -1\n    var\
    \ paren_end_index = -1\n    var paren_start_index = -1\n    var paren_end_index\
    \ = -1\n    var paren_start_index = -1\n    var paren_end_index = -1\n    var\
    \ paren_start_index = -1\n    var paren_end_index = -1\n    var paren_start_index\
    \ = -1\n    var paren_end_index = -1\n    var paren_start_index = -1\n    var\
    \ paren_end_index = -1\n    var paren_start_index = -1\n    var paren_end_index\
    \ = -1\n    var paren_start_index = -1", "    var levels = [Int]()\n    var level\
    \ = 0\n    var parens = 0\n    var parens_level = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if parens_level == 0 {\n            parens_level = 1\n        }\n\
    \        if parens_level == 1 && c == '(' {\n            parens += 1\n       \
    \     levels.append(level)\n            level = 0\n            parens_level =\
    \ 0\n        } else if parens_level == 1 && c == ')' {\n            parens -=\
    \ 1\n            levels.append(level)\n            level = 0\n            parens_level\
    \ = 0\n        } else if parens_level == 1 && c == ' ' {\n            level =\
    \ 0\n            parens_level = 0\n        } else {\n            level += 1\n\
    \            parens_level += 1\n        }\n    }\n    return levels", "    var\
    \ level = 0\n    var paren_level = 0\n    var paren_nesting = 0\n    var paren_nesting_level\
    \ = 0\n    var paren_nesting_nesting = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_nesting = 0\n    var paren_level\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting_level =\
    \ 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level", "    var levels = [Int]()\n\
    \    var level = 0\n    var paren_count = 0\n    var paren_level = 0\n    var\
    \ paren_start = 0\n    var paren_end = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if paren_count == 0 {\n            paren_start = c\n        }\n \
    \       if paren_count == 0 {\n            paren_end = c\n        }\n        if\
    \ paren_count == 0 {\n            paren_count = 1\n        }\n        if paren_count\
    \ == 1 {\n            levels.append(level)\n            paren_count = 0\n    \
    \    }\n        if paren_count == 2 {\n            levels.append(level)\n    \
    \        level = 0\n            paren_count = 0\n        }\n        if paren_count\
    \ == 3 {\n            levels.append(level)\n            level = 0\n          \
    \  paren_count = 0\n        }\n        if paren_count == 4 {\n            levels.append(level)\n\
    \            level = 0\n            paren_count = 0\n        }\n        if paren_count\
    \ == 5 {\n            levels.append(level)\n            level = 0\n          \
    \  paren_count = 0\n        }\n        if paren_count == 6 {\n            levels.append(level)\n\
    \            level = 0\n            paren_count = 0\n        }\n        if paren_count\
    \ == 7 {\n            levels.append(level)\n            level = 0\n          \
    \  paren_count = 0\n        }\n        if paren_count == 8 {\n            levels.append(level)\n\
    \            level = 0\n            paren_count = 0\n        }\n        if paren_count\
    \ == 9 {\n            levels.append(level)\n            level = 0\n          \
    \  paren_count = 0\n        }\n        if paren_count == 10 {\n            levels.append(level)\n\
    \            level = 0\n            paren_count = 0\n        }\n        if paren_count\
    \ == 11 {\n            levels.append(level)\n            level = 0\n         \
    \   paren_count = 0\n        }\n        if paren_count == 12 {\n            levels.append(level)\n\
    \            level = 0\n            paren_count = 0\n        }\n        if paren_count\
    \ == 13 {\n            levels.append(level)\n            level = 0\n         \
    \   paren_count = 0\n        }\n        if paren_count == 14 {\n            levels.append(level)\n\
    \            level = 0\n            paren_count = 0\n        }\n        if paren_count\
    \ == 15 {\n            levels.append(level)\n            level = 0\n         \
    \   paren_count = 0\n        }\n        if paren_count == 16 {\n            levels.append(level)\n\
    \            level = 0\n            paren_count = 0\n        }\n        if paren_count\
    \ == 17 {\n            levels.append(level)\n            level = 0\n         \
    \   paren_count = 0\n        }\n        if paren_count == 18 {\n            levels.append(level)\n\
    \            level = 0\n            paren_count = 0\n        }\n        if paren_count\
    \ == 19 {\n            levels.append(level)\n            level = 0\n         \
    \   paren_count = 0\n        }", "    var max_level = 0\n    var levels = [Int]()\n\
    \    for paren in paren_string.characters {\n        switch paren {\n        case\
    \ ')':\n            levels[max_level] = levels[max_level] - 1\n            if\
    \ levels[max_level] == 0 {\n                max_level = max_level - 1\n      \
    \      }\n        case ')':\n            levels[max_level] = levels[max_level]\
    \ + 1\n            if levels[max_level] > max_level {\n                max_level\
    \ = levels[max_level]\n            }\n        }\n    }\n    return levels", " \
    \   var levels = [Int]()\n    var level = 0\n    var parens = 0\n    for c in\
    \ paren_string.characters {\n        if c == '(' {\n            levels[level]\
    \ = parens\n            parens += 1\n        } else if c == ')' {\n          \
    \  levels[level] = parens\n            parens -= 1\n            if parens == 0\
    \ {\n                levels[level] = parens\n                level += 1\n    \
    \        }\n        }\n    }\n    return levels", "    var levels = [Int]()\n\
    \    var level = 0\n    var paren_count = 0\n    var paren_level = 0\n    var\
    \ paren_char = 0\n    var paren_char_count = 0\n    var paren_char_level = 0\n\
    \    var paren_char_char = 0\n    var paren_char_char_count = 0\n    var paren_char_char_level\
    \ = 0\n    var paren_char_char_char = 0\n    var paren_char_char_char_count =\
    \ 0\n    var paren_char_char_char_level = 0\n    var paren_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_count = 0\n    var paren_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_count = 0\n    var\
    \ paren_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_count = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_count = 0\n\
    \    var paren_char_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_char_count =\
    \ 0\n    var paren_char_char_char_char_char_char_char_char_char_level = 0\n  \
    \  var paren_char_char_char_char_char_char_char_char_char_char_char = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_char_char_char_count = 0\n   \
    \ var paren_char_char_char_char_char_char_char_char_char_char_level = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0", "    var levels = [Int]()\n    var paren_count = 0\n    for ch in paren_string\
    \ {\n        if ch == '(' {\n            paren_count += 1\n        } else if ch\
    \ == ')' {\n            paren_count -= 1\n            if paren_count == 0 {\n\
    \                levels.append(paren_count)\n            }\n        }\n    }\n\
    \    return levels", "    var levels = [Int]()\n    var paren_count = 0\n    var\
    \ paren_level = 0\n    for c in paren_string.characters {\n        if c == '('\
    \ {\n            paren_count += 1\n            levels.append(paren_level)\n  \
    \          paren_level = 0\n        } else if c == ')' {\n            paren_count\
    \ -= 1\n            if paren_count == 0 {\n                levels.append(paren_level)\n\
    \            }\n            paren_level = 0\n        } else {\n            paren_level\
    \ += 1\n        }\n    }\n    return levels", "    var level = 0\n    var max_level\
    \ = 0\n    var paren_level = 0\n    var paren_max_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_max_levels = [Int]()\n    var paren_levels_string =\
    \ \"\"\n    var paren_max_levels_string = \"\"\n    var paren_levels_string_index\
    \ = 0\n    var paren_max_levels_string_index = 0\n    var paren_levels_string_indexes\
    \ = [Int]()\n    var paren_max_levels_string_indexes = [Int]()\n    var paren_levels_string_indexes_count\
    \ = 0\n    var paren_max_levels_string_indexes_count = 0\n    var paren_levels_string_indexes_counts\
    \ = [Int]()\n    var paren_max_levels_string_indexes_counts = [Int]()\n    var\
    \ paren_levels_string_indexes_counts_count = 0\n    var paren_max_levels_string_indexes_counts_count\
    \ = 0\n    var paren_levels_string_indexes_counts_index = 0\n    var paren_max_levels_string_indexes_counts_index\
    \ = 0\n    var paren_levels_string_indexes_counts_index_count = 0\n    var paren_max_levels_string_indexes_counts_index_count\
    \ = 0\n    var paren_levels_string_indexes_counts_index_count_index = 0\n    var\
    \ paren_max_levels_string_indexes_counts_index_count_index = 0\n    var paren_levels_string_indexes_counts_index_count_index_count\
    \ = 0\n    var paren_max_levels_string_indexes_counts_index_count_index_count\
    \ = 0\n    var paren_levels_string_indexes_counts_index_count_index_count_index\
    \ = 0\n    var paren_max_levels_string_indexes_counts_index_count_index_count_index\
    \ = 0\n    var paren_levels_string_indexes_counts_index_count_index_count_index_count\
    \ = 0\n    var paren_max_levels_string_indexes_counts_index_count_index_count_index_count\
    \ = 0\n    var paren_levels_string_indexes_counts_index_count_index_count_index_count_index\
    \ = 0\n    var paren_max_levels_string_indexes_counts_index_count_index_count_index_count_index\
    \ = 0\n    var paren_levels_string_indexes_counts_index_count_index_count_index_count_index_count\
    \ = 0\n    var paren_max_levels_string_indexes_counts_index_count_index_count_index_count_index_count\
    \ = 0\n    var paren_levels_string_indexes_counts_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var paren_max_levels_string_indexes_counts_index_count_index_count_index_count_index_count_index\
    \ = 0\n    var paren_levels_string_indexes_counts_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    var paren_max_level", "    var level = 0\n    var levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_levels = [Int]()\n    var paren_levels_count\
    \ = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_max_index\
    \ = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_min_index\
    \ = 0\n    var paren_levels_count_max2 = 0\n    var paren_levels_count_max2_index\
    \ = 0\n    var paren_levels_count_min2 = 0\n    var paren_levels_count_min2_index\
    \ = 0\n    var paren_levels_count_max3 = 0\n    var paren_levels_count_max3_index\
    \ = 0\n    var paren_levels_count_min3 = 0\n    var paren_levels_count_min3_index\
    \ = 0\n    var paren_levels_count_max4 = 0\n    var paren_levels_count_max4_index\
    \ = 0\n    var paren_levels_count_min4 = 0\n    var paren_levels_count_min4_index\
    \ = 0\n    var paren_levels_count_max5 = 0\n    var paren_levels_count_max5_index\
    \ = 0\n    var paren_levels_count_min5 = 0\n    var paren_levels_count_min5_index\
    \ = 0\n    var paren_levels_count_max6 = 0\n    var paren_levels_count_max6_index\
    \ = 0\n    var paren_levels_count_min6 = 0\n    var paren_levels_count_min6_index\
    \ = 0\n    var paren_levels_count_max7 = 0\n    var paren_levels_count_max7_index\
    \ = 0\n    var paren_levels_count_min7 = 0\n    var paren_levels_count_min7_index\
    \ = 0\n    var paren_levels_count_max8 = 0\n    var paren_levels_count_max8_index\
    \ = 0\n    var paren_levels_count_min8 = 0\n    var paren_levels_count_min8_index\
    \ = 0\n    var paren_levels_count_max9 = 0\n    var paren_levels_count_max9_index\
    \ = 0\n    var paren_levels_count_min9 = 0\n    var paren_levels_count_min9_index\
    \ = 0\n    var paren_levels_count_max10 = 0\n    var paren_levels_count_max10_index\
    \ = 0\n    var paren_levels_count_min10 = 0\n    var paren_levels_count_min10_index\
    \ = 0\n    var paren_levels_count_max11 = 0\n    var paren_levels_count_max11_index\
    \ = 0\n    var paren_levels_count_min11 = 0\n    var paren_levels_count_min11_index\
    \ = 0\n    var paren_levels_count_max12 = 0\n    var paren_levels_count_max12_index\
    \ = 0\n", "    var levels = [Int]()\n    var paren_level = 0\n    var paren_nesting\
    \ = 0\n    var paren_nesting_count = 0\n    var paren_nesting_limit = 2\n    var\
    \ paren_nesting_limit_count = 0\n    var paren_nesting_limit_index = 0\n    var\
    \ paren_nesting_limit_index2 = 0\n    var paren_nesting_limit_index3 = 0\n   \
    \ var paren_nesting_limit_index4 = 0\n    var paren_nesting_limit_index5 = 0\n\
    \    var paren_nesting_limit_index6 = 0\n    var paren_nesting_limit_index7 =\
    \ 0\n    var paren_nesting_limit_index8 = 0\n    var paren_nesting_limit_index9\
    \ = 0\n    var paren_nesting_limit_index10 = 0\n    var paren_nesting_limit_index11\
    \ = 0\n    var paren_nesting_limit_index12 = 0\n    var paren_nesting_limit_index13\
    \ = 0\n    var paren_nesting_limit_index14 = 0\n    var paren_nesting_limit_index15\
    \ = 0\n    var paren_nesting_limit_index16 = 0\n    var paren_nesting_limit_index17\
    \ = 0\n    var paren_nesting_limit_index18 = 0\n    var paren_nesting_limit_index19\
    \ = 0\n    var paren_nesting_limit_index20 = 0\n    var paren_nesting_limit_index21\
    \ = 0\n    var paren_nesting_limit_index22 = 0\n    var paren_nesting_limit_index23\
    \ = 0\n    var paren_nesting_limit_index24 = 0\n    var paren_nesting_limit_index25\
    \ = 0\n    var paren_nesting_limit_index26 = 0\n    var paren_nesting_limit_index27\
    \ = 0\n    var paren_nesting_limit_index28 = 0\n    var paren_nesting_limit_index29\
    \ = 0\n    var paren_nesting_limit_index30 = 0\n    var paren_nesting_limit_index31\
    \ = 0\n    var paren_nesting_limit_index32 = 0\n    var paren_nesting_limit_index33\
    \ = 0\n    var paren_nesting_limit_index34 = 0\n    var paren_nesting_limit_index35\
    \ = 0\n    var paren_nesting_limit_index36 = 0\n    var paren_nesting_limit_index37\
    \ = 0\n    var paren_nesting_limit_index38 = 0\n    var paren_nesting_limit_index39\
    \ = 0\n    var paren_nesting_limit_index40 = 0\n    var paren_nesting_limit_index41\
    \ = 0\n    var paren_nesting_limit_index42 = 0\n    var paren_nesting_limit_index43\
    \ = 0\n    var paren_nesting_limit_index44 = 0\n    var paren_nesting_limit_index45\
    \ = 0\n    var paren_nesting_limit_index46 = 0\n    var paren_nesting_limit_index47\
    \ = 0\n", "    var level = 0\n    var max_level = 0\n    var paren_level = 0\n\
    \    var paren_max_level = 0\n    var paren_stack = [Int]()\n    var paren_stack_count\
    \ = 0\n    var paren_stack_max_count = 0\n    var paren_stack_max_level = 0\n\
    \    var paren_stack_level = 0\n    var paren_stack_max_level_count = 0\n    var\
    \ paren_stack_max_level_level = 0\n    var paren_stack_level_level = 0\n    var\
    \ paren_stack_level_max_count = 0\n    var paren_stack_level_max_level = 0\n \
    \   var paren_stack_level_level_level = 0\n    var paren_stack_level_level_max_count\
    \ = 0\n    var paren_stack_level_level_max_level = 0\n    var paren_stack_level_level_level_level\
    \ = 0\n    var paren_stack_level_level_level_max_count = 0\n    var paren_stack_level_level_level_max_level\
    \ = 0\n    var paren_stack_level_level_level_level_level = 0\n    var paren_stack_level_level_level_level_max_count\
    \ = 0\n    var paren_stack_level_level_level_max_level = 0\n    var paren_stack_level_level_level_level_level\
    \ = 0\n    var paren_stack_level_level_level_level_max_count = 0\n    var paren_stack_level_level_level_level_max_level\
    \ = 0\n    var paren_stack_level_level_level_level_level_level = 0\n    var paren_stack_level_level_level_level_level_max_count\
    \ = 0\n    var paren_stack_level_level_level_level_level_max_level = 0\n    var\
    \ paren_stack_level_level_level_level_level_level_level = 0\n    var paren_stack_level_level_level_level_level_level_max_count\
    \ = 0\n    var paren_stack_level_level_level_level_level_max_level = 0\n    var\
    \ paren_stack_level_level_level_level_level_level_level = 0\n    var paren_stack_level_level_level_level_level_level_max_count\
    \ = 0\n    var paren_stack_level_level_level_level_level_level_max_level = 0\n\
    \    var paren_stack_level_level_level_level_level_level_level = 0\n    var paren_stack_level_level_level_level_level_level_level_max_count\
    \ = 0\n    var paren_stack_level_level_level_level_level_level_max_level = 0\n\
    \    var paren_stack_level_level_level_level_level_level_level = 0\n    var paren_stack_level_level_level_level_level_level_max_count\
    \ = 0\n    var paren_stack_level_level_level_level_level_level_max_level = 0\n\
    \    var paren_stack_level_level_level_level_level_level_level = 0\n    var paren_stack_level_level_level_level_level_level_level_max_count\
    \ = 0\n    var paren_stack_level_level_level_level_level_level_max_level = 0\n\
    \    var paren_stack_level_level_level_level_level_level_level_level = 0\n   \
    \ var paren_stack_level_level_level_level_level_level_level_level_max_count =\
    \ 0\n    var paren_stack_level_level_level_level_level_level_max_level = 0\n \
    \   var paren_", "    var levels = [Int]()\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren", "    var levels = [Int]()\n  \
    \  var paren_level = 0\n    var paren_nesting = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if paren_nesting == 0 {\n            if c == '(' {\n            \
    \    paren_nesting += 1\n            }\n            if c == ')' {\n          \
    \      paren_nesting -= 1\n            }\n        } else {\n            if c ==\
    \ '(' {\n                paren_nesting += 1\n            }\n            if c ==\
    \ ')' {\n                paren_nesting -= 1\n            }\n            if paren_nesting\
    \ == 0 {\n                levels.append(paren_level)\n                paren_level\
    \ = 0\n            }\n        }\n        paren_level += (c >= '(' && c <= ')')\
    \ ? 1 : 0\n    }\n    levels.append(paren_level)\n    return levels", "    var\
    \ levels = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n\
    \    var paren_levels_len = 0\n    var paren_levels_lens = [Int]()\n    var paren_levels_lens_len\
    \ = 0\n    var paren_levels_lens_lens = [Int]()\n    var paren_levels_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n   \
    \ var paren_levels_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n \
    \   var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len =\
    \ 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]", "    var level = 0\n    var levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_levels_count = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_min_index = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_max_index = 0\n    var\
    \ paren_level", "    var levels = [Int]()\n    var level = 0\n    var paren_count\
    \ = 0\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n\
    \    var paren_char = 0\n    var paren_char_next = 0\n    var paren_char_prev\
    \ = 0\n    var paren_char_prev2 = 0\n    var paren_char_next2 = 0\n    var paren_char_prev3\
    \ = 0\n    var paren_char_next3 = 0\n    var paren_char_prev4 = 0\n    var paren_char_next4\
    \ = 0\n    var paren_char_prev5 = 0\n    var paren_char_next5 = 0\n    var paren_char_prev6\
    \ = 0\n    var paren_char_next6 = 0\n    var paren_char_prev7 = 0\n    var paren_char_next7\
    \ = 0\n    var paren_char_prev8 = 0\n    var paren_char_next8 = 0\n    var paren_char_prev9\
    \ = 0\n    var paren_char_next9 = 0\n    var paren_char_prev10 = 0\n    var paren_char_next10\
    \ = 0\n    var paren_char_prev11 = 0\n    var paren_char_next11 = 0\n    var paren_char_prev12\
    \ = 0\n    var paren_char_next12 = 0\n    var paren_char_prev13 = 0\n    var paren_char_next13\
    \ = 0\n    var paren_char_prev14 = 0\n    var paren_char_next14 = 0\n    var paren_char_prev15\
    \ = 0\n    var paren_char_next15 = 0\n    var paren_char_prev16 = 0\n    var paren_char_next16\
    \ = 0\n    var paren_char_prev17 = 0\n    var paren_char_next17 = 0\n    var paren_char_prev18\
    \ = 0\n    var paren_char_next18 = 0\n    var paren_char_prev19 = 0\n    var paren_char_next19\
    \ = 0\n    var paren_char_prev20 = 0\n    var paren_char_next20 = 0\n    var paren_char_prev21\
    \ = 0\n    var paren_char_next21 = 0\n    var paren_char_prev22 = 0\n    var paren_char_next22\
    \ = 0\n    var paren_char_prev23 = 0\n    var paren_char_next23 = 0\n    var paren_char_prev24\
    \ = 0\n    var paren_char_next24 = 0\n    var paren_char_prev25 = 0\n    var paren_char_next25\
    \ = 0\n    var paren_char_prev26 = 0\n    var paren_char_next26 = 0\n    var paren_char_prev27\
    \ = 0\n    var paren_char_next27 = 0\n    var paren_char_prev28 = 0\n    var paren_char_next28\
    \ = 0\n    var paren_char_prev29 = 0\n    var paren_char_next29 = 0\n    var paren_char_prev30\
    \ = 0\n    var paren", "    var levels = [Int]()\n    var level = 0\n    var parens\
    \ = 0\n    for c in paren_string.unicodeScalars {\n        if parens == 0 {\n\
    \            levels.append(level)\n        }\n        switch c {\n        case\
    \ .OpenSquareBracket, .CloseSquareBracket:\n            parens += 1\n        case\
    \ .OpenParen, .CloseParen:\n            parens -= 1\n        }\n        level\
    \ += 1\n    }\n    return levels", "    var levels = [Int]()\n    var level =\
    \ 0\n    var paren_count = 0\n    for c in paren_string.unicodeScalars {\n   \
    \     if c == '(' {\n            paren_count += 1\n        } else if c == ')'\
    \ {\n            paren_count -= 1\n            if paren_count == 0 {\n       \
    \         levels.append(level)\n                level = 0\n            }\n   \
    \     }\n        level += 1\n    }\n    return levels", "    var level = 0\n \
    \   var levels = [Int]()\n    var paren_count = 0\n    for c in paren_string {\n\
    \        if c == '(' {\n            paren_count += 1\n            levels.append(level)\n\
    \            level = 0\n        } else if c == ')' {\n            levels[level]\
    \ = levels[level] - 1\n            if levels[level] == 0 {\n                levels[level]\
    \ = level\n            }\n            level -= 1\n        }\n    }\n    return\
    \ levels", "    var levels = [Int]()\n    var level = 0\n    var parens = 0\n\
    \    for c in paren_string.unicodeScalars {\n        if c == '(' {\n         \
    \   levels[level] = parens\n            parens += 1\n        } else if c == ')'\
    \ {\n            levels[level] = parens\n            parens -= 1\n        } else\
    \ {\n            levels[level] += 1\n        }\n        level += 1\n    }\n  \
    \  return levels", "    var levels = [Int]()\n    var level = 0\n    var paren_count\
    \ = 0\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n\
    \    var paren_char = 0\n    var paren_char_next = 0\n    var paren_char_prev\
    \ = 0\n    var paren_char_prev2 = 0\n    var paren_char_next2 = 0\n    var paren_char_next3\
    \ = 0\n    var paren_char_next4 = 0\n    var paren_char_next5 = 0\n    var paren_char_next6\
    \ = 0\n    var paren_char_next7 = 0\n    var paren_char_next8 = 0\n    var paren_char_next9\
    \ = 0\n    var paren_char_next10 = 0\n    var paren_char_next11 = 0\n    var paren_char_next12\
    \ = 0\n    var paren_char_next13 = 0\n    var paren_char_next14 = 0\n    var paren_char_next15\
    \ = 0\n    var paren_char_next16 = 0\n    var paren_char_next17 = 0\n    var paren_char_next18\
    \ = 0\n    var paren_char_next19 = 0\n    var paren_char_next20 = 0\n    var paren_char_next21\
    \ = 0\n    var paren_char_next22 = 0\n    var paren_char_next23 = 0\n    var paren_char_next24\
    \ = 0\n    var paren_char_next25 = 0\n    var paren_char_next26 = 0\n    var paren_char_next27\
    \ = 0\n    var paren_char_next28 = 0\n    var paren_char_next29 = 0\n    var paren_char_next30\
    \ = 0\n    var paren_char_next31 = 0\n    var paren_char_next32 = 0\n    var paren_char_next33\
    \ = 0\n    var paren_char_next34 = 0\n    var paren_char_next35 = 0\n    var paren_char_next36\
    \ = 0\n    var paren_char_next37 = 0\n    var paren_char_next38 = 0\n    var paren_char_next39\
    \ = 0\n    var paren_char_next40 = 0\n    var paren_char_next41 = 0\n    var paren_char_next42\
    \ = 0\n    var paren_char_next43 = 0\n    var paren_char_next44 = 0\n    var paren_char_next45\
    \ = 0\n    var paren_char_next46 = 0\n    var paren_char_next47 = 0\n    var paren_char_next48\
    \ = 0\n    var paren_char_next49 = 0\n    var paren_char_next50 = 0\n    var paren_char_next51\
    \ = 0\n    var paren_char_next52 = 0\n    var paren_char_next53 = 0\n    var paren_char_next54\
    \ = 0\n    var paren_char_next55 = 0\n    var paren_char_next56 = 0\n    var paren_char_next57\
    \ = 0\n    var paren", "    var levels = [Int]()\n    var level = 0\n    var paren_count\
    \ = 0\n    for c in paren_string.characters {\n        if c == '(' {\n       \
    \     paren_count += 1\n            levels.append(level)\n        } else if c\
    \ == ')' {\n            levels[level] = levels[level] - 1\n            if levels[level]\
    \ == 0 {\n                levels[level] = level + 1\n            }\n         \
    \   paren_count -= 1\n        }\n        level += 1\n    }\n    return levels",
  "    var level = 0\n    var max_level = 0\n    var max_level_paren = 0\n    var\
    \ paren_level = 0\n    var paren_level_paren = 0\n    var paren_level_stack =\
    \ [Int]()\n    var paren_level_stack_paren = [Int]()\n    var paren_level_stack_paren_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack = [Int]()\n    var paren_level_stack_paren_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack = [Int]()\n\
    \    var paren_level_stack_paren_stack_stack_stack_stack_stack = [Int]()\n   \
    \ var paren_level_stack_paren_stack_stack_stack_stack_stack_stack = [Int]()\n\
    \    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack = [Int]()\n\
    \    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [Int]()\n    var paren_level_stack_paren_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_stack_",
  "    var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_char = 0\n\
    \    var paren_char_count = 0\n    var paren_char_level = 0\n    var paren_char_start\
    \ = 0\n    var paren_char_end = 0\n    var paren_char_char = 0\n    var paren_char_char_count\
    \ = 0\n    var paren_char_char_level = 0\n    var paren_char_char_start = 0\n\
    \    var paren_char_char_end = 0\n    var paren_char_char_char = 0\n    var paren_char_char_char_count\
    \ = 0\n    var paren_char_char_char_level = 0\n    var paren_char_char_char_start\
    \ = 0\n    var paren_char_char_char_end = 0\n    var paren_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_count = 0\n    var paren_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_start = 0\n    var paren_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_start = 0\n    var paren_char_char_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_count = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_end = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_level = 0\n\
    \    var paren_char_char_char_char_char_char_char_char_char_start = 0\n    var\
    \ paren_char_char_char_", "    var level = 0\n    var max_level = 0\n    var max_level_parens\
    \ = 0\n    var paren_level = 0\n    var paren_parens = 0\n    var paren_level_string\
    \ = \"\"\n    var paren_parens_string = \"\"\n    var paren_level_strings = [String]()\n\
    \    var paren_parens_strings = [String]()\n    var paren_level_strings_len =\
    \ 0\n    var paren_parens_strings_len = 0\n    var paren_level_strings_lens =\
    \ [Int]()\n    var paren_parens_strings_lens = [Int]()\n    var paren_level_strings_lens_len\
    \ = 0\n    var paren_parens_strings_lens_len = 0\n    var paren_level_strings_lens_lens\
    \ = [Int]()\n    var paren_parens_strings_lens_lens = [Int]()\n    var paren_level_strings_lens_lens_len\
    \ = 0\n    var paren_parens_strings_lens_lens_len = 0\n    var paren_level_strings_lens_lens_lens\
    \ = [Int]()\n    var paren_parens_strings_lens_lens_lens = [Int]()\n    var paren_level_strings_lens_lens_lens_len\
    \ = 0\n    var paren_parens_strings_lens_lens_lens_len = 0\n    var paren_level_strings_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_parens_strings_lens_lens_lens_lens = [Int]()\n    var\
    \ paren_level_strings_lens_lens_lens_lens_len = 0\n    var paren_parens_strings_lens_lens_lens_lens_len\
    \ = 0\n    var paren_level_strings_lens_lens_lens_lens_lens = [Int]()\n    var\
    \ paren_parens_strings_lens_lens_lens_lens_lens = [Int]()\n    var paren_level_strings_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_parens_strings_lens_lens_lens_lens_lens_len = 0\n    var\
    \ paren_level_strings_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_parens_strings_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_level_strings_lens_lens_lens_lens_lens_lens_len = 0\n\
    \    var paren_parens_strings_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_level_strings_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]", "    var levels = [Int]()\n    var paren_count = 0\n    for ch in\
    \ paren_string.unicodeScalars {\n        if ch == '(' {\n            paren_count\
    \ += 1\n        } else if ch == ')' {\n            paren_count -= 1\n        \
    \    if paren_count == 0 {\n                levels.append(paren_count)\n     \
    \       }\n        }\n    }\n    return levels", "    var levels = [Int]()\n \
    \   var level = 0\n    var parens = 0\n    var parens_level = 0\n    var parens_count\
    \ = 0\n    var parens_string = \"\"\n    for c in paren_string.unicodeScalars\
    \ {\n        if parens_level == 0 {\n            if parens_count == 0 {\n    \
    \            parens_string = String(c.value)\n            } else {\n         \
    \       parens_string = parens_string + String(c.value)\n            }\n     \
    \   } else {\n            if parens_count == 0 {\n                parens_string\
    \ = parens_string + String(c.value)\n            } else {\n                parens_string\
    \ = parens_string + String(c.value)\n            }\n        }\n        parens_count\
    \ += 1\n        if parens_count == 2 {\n            parens_level = 1\n       \
    \     parens_count = 0\n        }\n        if parens_count == 3 {\n          \
    \  parens_level = 2\n            parens_count = 0\n        }\n        if parens_count\
    \ == 4 {\n            parens_level = 3\n            parens_count = 0\n       \
    \ }\n        if parens_count == 5 {\n            parens_level = 4\n          \
    \  parens_count = 0\n        }\n        if parens_count == 6 {\n            parens_level\
    \ = 5\n            parens_count = 0\n        }\n        if parens_count == 7 {\n\
    \            parens_level = 6\n            parens_count = 0\n        }\n     \
    \   if parens_count == 8 {\n            parens_level = 7\n            parens_count\
    \ = 0\n        }\n        if parens_count == 9 {\n            parens_level = 8\n\
    \            parens_count = 0\n        }\n        if parens_count == 10 {\n  \
    \          parens_level = 9\n            parens_count = 0\n        }\n       \
    \ if parens_count == 11 {\n            parens_level = 10\n            parens_count\
    \ = 0\n        }\n        if parens_count == 12 {\n            parens_level =\
    \ 11\n            parens_count = 0\n        }\n        if parens_count == 13 {\n\
    \            parens_level = 12\n            parens_count = 0\n        }\n    \
    \    if parens_count == 14 {\n            parens_level = 13\n            parens_count\
    \ = 0\n        }\n        if parens_count == 15 {\n            parens_level =\
    \ 14\n            parens_count = 0\n        }\n        if parens_count == 16 {\n\
    \            parens_level = 15\n            parens_count = 0\n        }\n    \
    \    if parens_count == 17 {\n            parens_level = 16\n            parens_count\
    \ = 0\n        }\n        if parens_count == 18 {\n            parens_level =\
    \ 17\n            parens_count = 0\n        }\n        if parens_count == 19 {\n\
    \            parens_level = 18\n            parens_count = 0\n        }\n    \
    \    if parens_count == 20 {\n            parens_level = 19\n            parens_count\
    \ = 0\n        }\n        if parens_count == 21 {\n            parens_level =\
    \ 20\n            ", "    var level = 0\n    var levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_levels_count = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_max2\
    \ = 0\n    var paren_levels_count_min2 = 0\n    var paren_levels_count_max3 =\
    \ 0\n    var paren_levels_count_min3 = 0\n    var paren_levels_count_max4 = 0\n\
    \    var paren_levels_count_min4 = 0\n    var paren_levels_count_max5 = 0\n  \
    \  var paren_levels_count_min5 = 0\n    var paren_levels_count_max6 = 0\n    var\
    \ paren_levels_count_min6 = 0\n    var paren_levels_count_max7 = 0\n    var paren_levels_count_min7\
    \ = 0\n    var paren_levels_count_max8 = 0\n    var paren_levels_count_min8 =\
    \ 0\n    var paren_levels_count_max9 = 0\n    var paren_levels_count_min9 = 0\n\
    \    var paren_levels_count_max10 = 0\n    var paren_levels_count_min10 = 0\n\
    \    var paren_levels_count_max11 = 0\n    var paren_levels_count_min11 = 0\n\
    \    var paren_levels_count_max12 = 0\n    var paren_levels_count_min12 = 0\n\
    \    var paren_levels_count_max13 = 0\n    var paren_levels_count_min13 = 0\n\
    \    var paren_levels_count_max14 = 0\n    var paren_levels_count_min14 = 0\n\
    \    var paren_levels_count_max15 = 0\n    var paren_levels_count_min15 = 0\n\
    \    var paren_levels_count_max16 = 0\n    var paren_levels_count_min16 = 0\n\
    \    var paren_levels_count_max17 = 0\n    var paren_levels_count_min17 = 0\n\
    \    var paren_levels_count_max18 = 0\n    var paren_levels_count_min18 = 0\n\
    \    var paren_levels_count_max19 = 0\n    var paren_levels_count_min19 = 0\n\
    \    var paren_levels_count_max20 = 0\n    var paren_levels_count_min20 = 0\n\
    \    var paren_levels_count_max21 = 0\n    var paren_levels_count_min21 = 0\n\
    \    var paren_levels_count_max22 = 0\n    var paren_levels_count_min22 = 0\n\
    \    var paren_levels_count_max23 = 0\n    var paren_levels_count_min23 = 0\n\
    \    var paren_levels_count_max24 = 0\n    var paren_levels_count_min24 = 0\n\
    \    var ", "    var levels = [Int]()\n    var level = 0\n    var paren_count\
    \ = 0\n    var paren_level = 0\n    for c in paren_string.unicodeScalars {\n \
    \       if c == '(' {\n            paren_count += 1\n            paren_level +=\
    \ 1\n        } else if c == ')' {\n            paren_count -= 1\n            if\
    \ paren_count < 0 {\n                levels.append(level)\n            }\n   \
    \         level -= 1\n        }\n    }\n    return levels", "    var level = 0\n\
    \    var paren_level = [Int]()\n    var paren_level_stack = [Int]()\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = paren_level_stack.count\n    var paren_level_stack_max_size\
    \ = paren_level_stack_size\n    var paren_level_stack_max_index = paren_level_stack_size\n\
    \    var paren_level_stack_max_value = paren_level_stack_size\n    var paren_level_stack_max_value_pos\
    \ = 0\n    var paren_level_stack_max_value_neg = 0\n    var paren_level_stack_max_value_neg_index\
    \ = 0\n    var paren_level_stack_max_value_neg_size = paren_level_stack_max_size\n\
    \    var paren_level_stack_max_value_neg_pos = 0\n    var paren_level_stack_max_value_neg_neg\
    \ = 0\n    var paren_level_stack_max_value_neg_neg_index = 0\n    var paren_level_stack_max_value_neg_neg_size\
    \ = paren_level_stack_max_size\n    var paren_level_stack_max_value_neg_neg_pos\
    \ = 0\n    var paren_level_stack_max_value_neg_neg_neg = 0\n    var paren_level_stack_max_value_neg_neg_neg_index\
    \ = 0\n    var paren_level_stack_max_value_neg_neg_neg_size = paren_level_stack_max_size\n\
    \    var paren_level_stack_max_value_neg_neg_neg_pos = 0\n    var paren_level_stack_max_value_neg_neg_neg_neg\
    \ = 0\n    var paren_level_stack_max_value_neg_neg_neg_neg_index = 0\n    var\
    \ paren_level_stack_max_value_neg_neg_neg_neg_size = paren_level_stack_max_size\n\
    \    var paren_level_stack_max_value_neg_neg_neg_neg_pos = 0\n    var paren_level_stack_max_value_neg_neg_neg_neg_neg\
    \ = 0\n    var paren_level_stack_max_value_neg_neg_neg_neg_neg_index = 0\n   \
    \ var paren_level_stack_max_value_neg_neg_neg_neg_neg_size = paren_level_stack_max_size\n\
    \    var paren_level_stack_max_value_neg_neg_neg_neg_neg_pos = 0\n    var paren_level_stack_max_value_neg_neg_neg_neg_neg_neg\
    \ = 0\n    var paren_level_stack_max_value_neg_neg_neg_neg_neg_neg_index = 0\n\
    \    var paren_level_stack_max_value_neg_neg_neg_neg_neg_neg_neg_size = 0\n  \
    \  var paren_level_stack_max_value_neg_neg_neg_neg_neg_neg_pos = 0\n    var paren_level_stack_max_value_neg_neg_neg_neg_neg_neg_neg\
    \ = 0\n    var paren_level_stack_max_value_neg_neg_neg_neg_neg_neg_neg_index =\
    \ 0\n    var paren_level_stack_max_value_neg_neg_neg_neg_neg_neg_neg_size = 0\n\
    \    var paren_level_stack_max_value_neg_neg_neg_neg_neg_neg_neg_pos = 0\n   \
    \ var paren_level_stack_max_value_neg_neg_", "    var max_level = 0\n    var level\
    \ = 0\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n\
    \    var paren_levels = [Int]()\n    var paren_levels_string = \"\"\n    for c\
    \ in paren_string.unicodeScalars {\n        if c == paren_end {\n            paren_levels[paren_level]\
    \ = level\n            paren_levels_string += String(paren_level)\n          \
    \  paren_levels_string += \" \"\n            paren_levels_string += String(level)\n\
    \            paren_levels_string += \" \"\n            paren_levels_string +=\
    \ String(paren_start)\n            paren_levels_string += \" \"\n            paren_levels_string\
    \ += String(paren_end)\n            paren_levels_string += \" \"\n           \
    \ paren_levels_string += String(paren_levels[paren_level])\n            paren_levels_string\
    \ += \" \"\n            paren_levels_string += String(paren_levels[paren_level]\
    \ + 1)\n            paren_levels_string += \" \"\n            paren_levels_string\
    \ += String(paren_levels[paren_level] + 2)\n            paren_levels_string +=\
    \ \" \"\n            paren_levels_string += String(paren_levels[paren_level] +\
    \ 3)\n            paren_levels_string += \" \"\n            paren_levels_string\
    \ += String(paren_levels[paren_level] + 4)\n            paren_levels_string +=\
    \ \" \"\n            paren_levels_string += String(paren_levels[paren_level] +\
    \ 5)\n            paren_levels_string += \" \"\n            paren_levels_string\
    \ += String(paren_levels[paren_level] + 6)\n            paren_levels_string +=\
    \ \" \"\n            paren_levels_string += String(paren_levels[paren_level] +\
    \ 7)\n            paren_levels_string += \" \"\n            paren_levels_string\
    \ += String(paren_levels[paren_level] + 8)\n            paren_levels_string +=\
    \ \" \"\n            paren_levels_string += String(paren_levels[paren_level] +\
    \ 9)\n            paren_levels_string += \" \"\n            paren_levels_string\
    \ += String(paren_levels[paren_level] + 10)\n            paren_levels_string +=\
    \ \" \"\n            paren_levels_string += String(paren_levels[paren_level] +\
    \ 11)\n            paren_levels_string += \" \"\n            paren_levels_string\
    \ += String(paren_levels[paren_level] + 12)\n            paren_levels_string +=\
    \ \" \"\n            paren_levels_string += String(paren", "    var level = 0\n\
    \    var paren_level = 0\n    var paren_nesting = 0\n    var paren_nesting_max\
    \ = 0\n    var paren_nesting_max_index = 0\n    var paren_nesting_max_index2 =\
    \ 0\n    var paren_nesting_max_index3 = 0\n    var paren_nesting_max_index4 =\
    \ 0\n    var paren_nesting_max_index5 = 0\n    var paren_nesting_max_index6 =\
    \ 0\n    var paren_nesting_max_index7 = 0\n    var paren_nesting_max_index8 =\
    \ 0\n    var paren_nesting_max_index9 = 0\n    var paren_nesting_max_index10 =\
    \ 0\n    var paren_nesting_max_index11 = 0\n    var paren_nesting_max_index12\
    \ = 0\n    var paren_nesting_max_index13 = 0\n    var paren_nesting_max_index14\
    \ = 0\n    var paren_nesting_max_index15 = 0\n    var paren_nesting_max_index16\
    \ = 0\n    var paren_nesting_max_index17 = 0\n    var paren_nesting_max_index18\
    \ = 0\n    var paren_nesting_max_index19 = 0\n    var paren_nesting_max_index20\
    \ = 0\n    var paren_nesting_max_index21 = 0\n    var paren_nesting_max_index22\
    \ = 0\n    var paren_nesting_max_index23 = 0\n    var paren_nesting_max_index24\
    \ = 0\n    var paren_nesting_max_index25 = 0\n    var paren_nesting_max_index26\
    \ = 0\n    var paren_nesting_max_index27 = 0\n    var paren_nesting_max_index28\
    \ = 0\n    var paren_nesting_max_index29 = 0\n    var paren_nesting_max_index30\
    \ = 0\n    var paren_nesting_max_index31 = 0\n    var paren_nesting_max_index32\
    \ = 0\n    var paren_nesting_max_index33 = 0\n    var paren_nesting_max_index34\
    \ = 0\n    var paren_nesting_max_index35 = 0\n    var paren_nesting_max_index36\
    \ = 0\n    var paren_nesting_max_index37 = 0\n    var paren_nesting_max_index38\
    \ = 0\n    var paren_nesting_max_index39 = 0\n    var paren_nesting_max_index40\
    \ = 0\n    var paren_nesting_max_index41 = 0\n    var paren_nesting_max_index42\
    \ = 0\n    var paren_nesting_max_index43 = 0\n    var paren_nesting_max_index44\
    \ = 0\n    var paren_nesting_max_index45 = 0\n    var paren_nesting_max_index46\
    \ = 0\n    var paren_nesting_max_index47 = 0\n    var paren_nesting_max_index48\
    \ = 0\n    var paren_nesting_max_index49", "    var levels = [Int]()\n    var\
    \ paren_count = 0\n    var paren_level = 0\n    var paren_start = 0\n    for c\
    \ in paren_string.characters {\n        if c == '(' {\n            paren_count\
    \ += 1\n            levels.append(paren_level)\n            paren_level = 0\n\
    \            paren_start = c\n        } else if c == ')' {\n            paren_count\
    \ -= 1\n            levels.append(paren_level)\n            if paren_count ==\
    \ 0 {\n                levels.append(paren_level)\n            }\n           \
    \ paren_level = 0\n            paren_start = c\n        } else {\n           \
    \ paren_level += (c - paren_start)\n        }\n    }\n    return levels", "  \
    \  var max_level = 0\n    var level = 0\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_levels_string = \"\"\n    var paren_levels_string_index\
    \ = 0\n    var paren_levels_string_size = 0\n    var paren_levels_string_size_index\
    \ = 0\n    var paren_levels_string_size_max = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_index = 0\n    var paren", "    var\
    \ levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    for ch in\
    \ paren_string.characters {\n        if ch == '(' {\n            paren_count +=\
    \ 1\n        } else if ch == ')' {\n            paren_count -= 1\n           \
    \ if paren_count == 0 {\n                levels.append(level)\n              \
    \  level = 0\n            }\n        }\n        level += 1\n    }\n    return\
    \ levels", "    var max_level = 0\n    var level = 0\n    var paren_level = 0\n\
    \    var paren_level_stack = [Int]()\n    var paren_level_stack_index = 0\n  \
    \  var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var\
    \ paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n\
    \    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n   \
    \ var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var\
    \ paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n\
    \    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n   \
    \ var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n\
    \    var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n   \
    \ var paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var\
    \ paren_level_stack_index = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index\
    \ = 0\n    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n\
    \    var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n   \
    \ var paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var\
    \ paren_level_stack_size = 0\n    var paren_level_stack_index = 0\n    var paren_level_stack_size\
    \ = 0\n    var paren_level_stack_index = 0", "    var levels = [Int]()\n    var\
    \ paren_count = 0\n    var paren_level = 0\n    var paren_start_index = 0\n  \
    \  var paren_end_index = 0\n    var paren_start_char = 0\n    var paren_end_char\
    \ = 0\n    var paren_start_char_index = 0\n    var paren_end_char_index = 0\n\
    \    var paren_start_char_length = 0\n    var paren_end_char_length = 0\n    var\
    \ paren_start_char_length_index = 0\n    var paren_end_char_length_index = 0\n\
    \    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren_start_char_length_index = 0\n    var paren_end_char_length_index\
    \ = 0\n    var paren", "    var level = 0\n    var paren_level = 0\n    var paren_nesting\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting = 0\n  \
    \  var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0\n\
    \    var paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0\n   \
    \ var paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0\n\
    \    var paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0\n   \
    \ var paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0\n\
    \    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_level =\
    \ 0\n    var paren_level = 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nest", "    var levels = [Int]()\n    var\
    \ level = 0\n    var paren_count = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        switch c {\n        case .OpenSquareBracket:\n            paren_count\
    \ += 1\n            levels[level] = paren_count\n        case .CloseSquareBracket:\n\
    \            levels[level] = paren_count\n            level -= 1\n           \
    \ if level < 0 {\n                level = 0\n            }\n        case .OpenParenthesis:\n\
    \            levels[level] = paren_count\n        case .CloseParenthesis:\n  \
    \          levels[level] = paren_count\n            level -= 1\n            if\
    \ level < 0 {\n                level = 0\n            }\n        }\n    }\n  \
    \  return levels", "    var levels = [Int]()\n    var paren_count = 0\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n \
    \   var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_level = 0\n    var paren_levels = [Int]()\n    var paren_level = 0", " \
    \   var levels = [Int]()\n    var paren_count = 0\n    for ch in paren_string.unicodeScalars\
    \ {\n        if ch == '(' {\n            paren_count += 1\n        } else if ch\
    \ == ')' {\n            paren_count -= 1\n            if paren_count == 0 {\n\
    \                levels.append(paren_count)\n            }\n        }\n    }\n\
    \    return levels", "    var levels = [Int]()\n    var level = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_length =\
    \ 0\n    var paren_char = 0\n    var paren_char_count = 0\n    var paren_char_count_max\
    \ = 0\n    var paren_char_count_max_index = 0\n    var paren_char_count_max_index2\
    \ = 0\n    var paren_char_count_max_index3 = 0\n    var paren_char_count_max_index4\
    \ = 0\n    var paren_char_count_max_index5 = 0\n    var paren_char_count_max_index6\
    \ = 0\n    var paren_char_count_max_index7 = 0\n    var paren_char_count_max_index8\
    \ = 0\n    var paren_char_count_max_index9 = 0\n    var paren_char_count_max_index10\
    \ = 0\n    var paren_char_count_max_index11 = 0\n    var paren_char_count_max_index12\
    \ = 0\n    var paren_char_count_max_index13 = 0\n    var paren_char_count_max_index14\
    \ = 0\n    var paren_char_count_max_index15 = 0\n    var paren_char_count_max_index16\
    \ = 0\n    var paren_char_count_max_index17 = 0\n    var paren_char_count_max_index18\
    \ = 0\n    var paren_char_count_max_index19 = 0\n    var paren_char_count_max_index20\
    \ = 0\n    var paren_char_count_max_index21 = 0\n    var paren_char_count_max_index22\
    \ = 0\n    var paren_char_count_max_index23 = 0\n    var paren_char_count_max_index24\
    \ = 0\n    var paren_char_count_max_index25 = 0\n    var paren_char_count_max_index26\
    \ = 0\n    var paren_char_count_max_index27 = 0\n    var paren_char_count_max_index28\
    \ = 0\n    var paren_char_count_max_index29 = 0\n    var paren_char_count_max_index30\
    \ = 0\n    var paren_char_count_max_index31 = 0\n    var paren_char_count_max_index32\
    \ = 0\n    var paren_char_count_max_index33 = 0\n    var paren_char_count_max_index34\
    \ = 0\n    var paren_char_count_max_index35 = 0\n    var paren_char_count_max_index36\
    \ = 0\n    var paren_char_count_max_index37 = 0\n    var paren_char_count_max_index38\
    \ = 0\n    var paren_char_count_max_index39 = 0\n    var paren_char_count_max_index40\
    \ = 0\n    var paren_char_count_max_index41 = 0\n    var paren_char_count_max_index42\
    \ = 0\n    var paren_char_count_max_index43 = 0\n    var paren_char_count_max_index44\
    \ = 0\n    var paren_char_count_max_index45 = 0\n    var paren_char_count_max_index",
  "    var levels = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n\
    \    var paren_levels_len = 0\n    var paren_levels_lens = [Int]()\n    var paren_levels_lens_len\
    \ = 0\n    var paren_levels_lens_lens = [Int]()\n    var paren_levels_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n   \
    \ var paren_levels_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n \
    \   var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len =\
    \ 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_",
  "    var level = 0\n    var paren_level = 0\n    var paren_levels = [Int]()\n  \
    \  var paren_levels_string = \"\"\n    var paren_levels_string_index = 0\n   \
    \ var paren_levels_string_size = 0\n    var paren_levels_string_size_index = 0\n\
    \    var paren_levels_string_size_max = 0\n    var paren_levels_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_string = \"\"\n    var paren_levels_string_size_max_string_index\
    \ = 0\n    var paren_levels_string_size_max_string_size = 0\n    var paren_levels_string_size_max_string_size_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max = 0\n    var paren_levels_string_size_max_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string = \"\"\n  \
    \  var paren_levels_string_size_max_string_size_max_string_index = 0\n    var\
    \ paren_levels_string_size_max_string_size_max_string_size = 0\n    var paren_levels_string_size_max_string_size_max_string_size_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max =\
    \ 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string\
    \ = \"\"\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_max\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_max_string\
    \ = \"\"\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_max_string_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_max_string_size\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_max_string_size_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_max_string_size_max\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_max_string_size_max_index\
    \ = 0\n    var paren_levels_string_size_max_string_size_max_string_size_max_string_size_max_string_size_max_string\
    \ = \"\"\n    var paren_levels_", "    var level = 0\n    var paren_stack = [Int]()\n\
    \    var paren_level = [Int]()\n    var paren_level_count = [Int]()\n    var paren_level_max_count\
    \ = [Int]()\n    var paren_level_max_level = [Int]()\n    var paren_level_max_level_num\
    \ = [Int]()\n    var paren_level_max_level_num_index = [Int]()\n    var paren_level_max_level_num_index2\
    \ = [Int]()\n    var paren_level_max_level_num_index3 = [Int]()\n    var paren_level_max_level_num_index4\
    \ = [Int]()\n    var paren_level_max_level_num_index5 = [Int]()\n    var paren_level_max_level_num_index6\
    \ = [Int]()\n    var paren_level_max_level_num_index7 = [Int]()\n    var paren_level_max_level_num_index8\
    \ = [Int]()\n    var paren_level_max_level_num_index9 = [Int]()\n    var paren_level_max_level_num_index10\
    \ = [Int]()\n    var paren_level_max_level_num_index11 = [Int]()\n    var paren_level_max_level_num_index12\
    \ = [Int]()\n    var paren_level_max_level_num_index13 = [Int]()\n    var paren_level_max_level_num_index14\
    \ = [Int]()\n    var paren_level_max_level_num_index15 = [Int]()\n    var paren_level_max_level_num_index16\
    \ = [Int]()\n    var paren_level_max_level_num_index17 = [Int]()\n    var paren_level_max_level_num_index18\
    \ = [Int]()\n    var paren_level_max_level_num_index19 = [Int]()\n    var paren_level_max_level_num_index20\
    \ = [Int]()\n    var paren_level_max_level_num_index21 = [Int]()\n    var paren_level_max_level_num_index22\
    \ = [Int]()\n    var paren_level_max_level_num_index23 = [Int]()\n    var paren_level_max_level_num_index24\
    \ = [Int]()\n    var paren_level_max_level_num_index25 = [Int]()\n    var paren_level_max_level_num_index26\
    \ = [Int]()\n    var paren_level_max_level_num_index27 = [Int]()\n    var paren_level_max_level_num_index28\
    \ = [Int]()\n    var paren_level_max_level_num_index29 = [Int]()\n    var paren_level_max_level_num_index30\
    \ = [Int]()\n    var paren_level_max_level_num_index31 = [Int]()\n    var paren_level_max_level_num_index32\
    \ = [Int]", "    var levels = [Int]()\n    var paren_level = 0\n    var paren_levels\
    \ = [Int]()\n    var paren_levels_size = 0\n    var paren_levels_sizes = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs = [Int]()\n\
    \    var paren_levels_sizes_index = 0\n    var ", "    var levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_levels = [Int]()\n    var paren_levels_len\
    \ = 0\n    var paren_levels_lens = [Int]()\n    var paren_levels_lens_len = 0\n\
    \    var paren_levels_lens_lens = [Int]()\n    var paren_levels_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n   \
    \ var paren_levels_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n \
    \   var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len =\
    \ 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]", "    var level = 0\n    var max_level = 0\n    var max_level_parens\
    \ = 0\n    var paren_count = 0\n    var paren_groups = [String]()\n    var paren_group\
    \ = [String]()\n    var paren_group_level = 0\n    var paren_group_max_level =\
    \ 0\n    var paren_group_max_level_parens = 0\n    var paren_group_paren_count\
    \ = 0\n    var paren_group_paren_groups = [String]()\n    var paren_group_paren_group\
    \ = [String]()\n    var paren_group_paren_group_level = 0\n    var paren_group_paren_group_max_level\
    \ = 0\n    var paren_group_paren_group_max_level_parens = 0\n    var paren_group_paren_group_paren_count\
    \ = 0\n    var paren_group_paren_group_paren_groups = [String]()\n    var paren_group_paren_group_paren_group\
    \ = [String]()\n    var paren_group_paren_group_paren_group_level = 0\n    var\
    \ paren_group_paren_group_paren_group_max_level = 0\n    var paren_group_paren_group_paren_group_max_level_parens\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_count = 0\n    var paren_group_paren_group_paren_group_paren_groups\
    \ = [String]()\n    var paren_group_paren_group_paren_group_paren_group = [String]()\n\
    \    var paren_group_paren_group_paren_group_paren_group_level = 0\n    var paren_group_paren_group_paren_group_paren_group_max_level\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_max_level_parens\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_count = 0\n\
    \    var paren_group_paren_group_paren_group_paren_group_paren_groups = [String]()\n\
    \    var paren_group_paren_group_paren_group_paren_group_paren_group = [String]()\n\
    \    var paren_group_paren_group_paren_group_paren_group_paren_group_level = 0\n\
    \    var paren_group_paren_group_paren_group_paren_group_paren_group_max_level\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group_max_level_parens\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_count\
    \ = 0\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_groups\
    \ = [String]()\n    var paren_group_paren_group_paren_group_paren_group_paren_group_paren_group\
    \ = [String]()\n    var paren_group_paren_group_paren_group_paren_group_paren",
  "    var levels = [Int]()\n    var paren_level = 0\n    var paren_nesting = 0\n\
    \    var paren_nesting_max = -1\n    var paren_nesting_min = -1\n    var paren_nesting_max_index\
    \ = -1\n    var paren_nesting_min_index = -1\n    var paren_nesting_max_count\
    \ = 0\n    var paren_nesting_min_count = 0\n    var paren_nesting_max_count_index\
    \ = -1\n    var paren_nesting_min_count_index = -1\n    var paren_nesting_max_count_count\
    \ = 0\n    var paren_nesting_min_count_count = 0\n    var paren_nesting_max_count_index\
    \ = 0\n    var paren_nesting_min_count_index = 0\n    var paren_nesting_max_count_count_index\
    \ = -1\n    var paren_nesting_min_count_count_index = -1\n    var paren_nesting_max_count_count_count\
    \ = 0\n    var paren_nesting_min_count_count_count = 0\n    var paren_nesting_max_count_count_index\
    \ = 0\n    var paren_nesting_min_count_count_index = 0\n    var paren_nesting_max_count_count_count_index\
    \ = -1\n    var paren_nesting_min_count_count_count_index = -1\n    var paren_nesting_max_count_count_count_count\
    \ = 0\n    var paren_nesting_min_count_count_count_count = 0\n    var paren_nesting_max_count_count_count_index\
    \ = 0\n    var paren_nesting_min_count_count_count_index = 0\n    var paren_nesting_max_count_count_count_count_index\
    \ = -1\n    var paren_nesting_min_count_count_count_count_index = -1\n    var\
    \ paren_nesting_max_count_count_count_count_count = 0\n    var paren_nesting_min_count_count_count_count_count\
    \ = 0\n    var paren_nesting_max_count_count_count_count_index = 0\n    var paren_nesting_min_count_count_count_count_index\
    \ = 0\n    var paren_nesting_max_count_count_count_count_count_index = -1\n  \
    \  var paren_nesting_min_count_count_count_count_count_index = -1\n    var paren_nesting_max_count_count_count_count_count_count\
    \ = 0\n    var paren_nesting_min_count_count_count_count_count_count = 0\n   \
    \ var paren_nesting_max_count_count_count_count_count_index = 0\n    var paren_nesting_min_count_count_count_count_count_count_index\
    \ = 0\n    var paren_nesting_max_count_count_count_count_count_count_index = -1\n\
    \    var paren_nesting_min_count_count_count_count_count_count_index = -1\n  \
    \  var paren_nesting_max_count_count_count_count_count_count_count = 0\n    var\
    \ paren_nesting_min_count_count_count_count_count_count_count = 0\n    var paren_nesting_max_count_count_count_count_count_count_index\
    \ = 0\n    var paren_nesting_min_count_count_count_count_count_count_index = 0\n\
    \    var paren_", "    var levels = [Int]()\n    var level = 0\n    var paren_level\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_levels_len = 0\n    var paren_levels_len2\
    \ = 0\n    var paren_levels_len3 = 0\n    var paren_levels_len4 = 0\n    var paren_levels_len5\
    \ = 0\n    var paren_levels_len6 = 0\n    var paren_levels_len7 = 0\n    var paren_levels_len8\
    \ = 0\n    var paren_levels_len9 = 0\n    var paren_levels_len10 = 0\n    var\
    \ paren_levels_len11 = 0\n    var paren_levels_len12 = 0\n    var paren_levels_len13\
    \ = 0\n    var paren_levels_len14 = 0\n    var paren_levels_len15 = 0\n    var\
    \ paren_levels_len16 = 0\n    var paren_levels_len17 = 0\n    var paren_levels_len18\
    \ = 0\n    var paren_levels_len19 = 0\n    var paren_levels_len20 = 0\n    var\
    \ paren_levels_len21 = 0\n    var paren_levels_len22 = 0\n    var paren_levels_len23\
    \ = 0\n    var paren_levels_len24 = 0\n    var paren_levels_len25 = 0\n    var\
    \ paren_levels_len26 = 0\n    var paren_levels_len27 = 0\n    var paren_levels_len28\
    \ = 0\n    var paren_levels_len29 = 0\n    var paren_levels_len30 = 0\n    var\
    \ paren_levels_len31 = 0\n    var paren_levels_len32 = 0\n    var paren_levels_len33\
    \ = 0\n    var paren_levels_len34 = 0\n    var paren_levels_len35 = 0\n    var\
    \ paren_levels_len36 = 0\n    var paren_levels_len37 = 0\n    var paren_levels_len38\
    \ = 0\n    var paren_levels_len39 = 0\n    var paren_levels_len40 = 0\n    var\
    \ paren_levels_len41 = 0\n    var paren_levels_len42 = 0\n    var paren_levels_len43\
    \ = 0\n    var paren_levels_len44 = 0\n    var paren_levels_len45 = 0\n    var\
    \ paren_levels_len46 = 0\n    var paren_levels_len47 = 0\n    var paren_levels_len48\
    \ = 0\n    var paren_levels_len49 = 0\n    var paren_levels_len50 = 0\n    var\
    \ paren_levels_len51 = 0\n    var paren_levels_len52 = 0\n    var paren_levels_len53\
    \ = 0\n    var paren_levels_len54 = 0\n    var ", "    var levels = [Int]()\n\
    \    var level = 0\n    var paren_count = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if c == parenthesisOpeningCharacter {\n            paren_count++\n\
    \        } else if c == parenthesisClosingCharacter {\n            paren_count--\n\
    \        }\n        if paren_count == 0 {\n            levels.append(level)\n\
    \        }\n        level++\n    }\n    return levels", "    var levels = [Int]()\n\
    \    var level = 0\n    var paren_count = 0\n    for c in paren_string.characters\
    \ {\n        if c == '(' {\n            paren_count += 1\n        } else if c\
    \ == ')' {\n            paren_count -= 1\n        } else if paren_count == 0 {\n\
    \            levels.append(level)\n            level = 0\n        }\n        level\
    \ += 1\n    }\n    return levels", "    var levels = [Int]()\n    var level =\
    \ 0\n    var paren_count = 0\n    var paren_level = 0\n    for c in paren_string.characters\
    \ {\n        if c == '(' {\n            paren_count += 1\n            levels.append(paren_level)\n\
    \            paren_level = 0\n        } else if c == ')' {\n            paren_count\
    \ -= 1\n            if paren_count > 0 {\n                levels.append(paren_level)\n\
    \                paren_level = 0\n            } else {\n                levels.append(0)\n\
    \            }\n        } else {\n            paren_level += 1\n        }\n  \
    \  }\n    return levels", "    var level = 0\n    var paren_stack = [Int]()\n\
    \    var paren_level = [Int]()\n    var paren_level_count = [Int]()\n    var paren_level_max_count\
    \ = [Int]()\n    var paren_level_max_count_index = 0\n    var paren_level_max_count_index\
    \ = 0\n    var paren_level_max_count_index2 = 0\n    var paren_level_max_count_index3\
    \ = 0\n    var paren_level_max_count_index4 = 0\n    var paren_level_max_count_index5\
    \ = 0\n    var paren_level_max_count_index6 = 0\n    var paren_level_max_count_index7\
    \ = 0\n    var paren_level_max_count_index8 = 0\n    var paren_level_max_count_index9\
    \ = 0\n    var paren_level_max_count_index10 = 0\n    var paren_level_max_count_index11\
    \ = 0\n    var paren_level_max_count_index12 = 0\n    var paren_level_max_count_index13\
    \ = 0\n    var paren_level_max_count_index14 = 0\n    var paren_level_max_count_index15\
    \ = 0\n    var paren_level_max_count_index16 = 0\n    var paren_level_max_count_index17\
    \ = 0\n    var paren_level_max_count_index18 = 0\n    var paren_level_max_count_index19\
    \ = 0\n    var paren_level_max_count_index20 = 0\n    var paren_level_max_count_index21\
    \ = 0\n    var paren_level_max_count_index22 = 0\n    var paren_level_max_count_index23\
    \ = 0\n    var paren_level_max_count_index24 = 0\n    var paren_level_max_count_index25\
    \ = 0\n    var paren_level_max_count_index26 = 0\n    var paren_level_max_count_index27\
    \ = 0\n    var paren_level_max_count_index28 = 0\n    var paren_level_max_count_index29\
    \ = 0\n    var paren_level_max_count_index30 = 0\n    var paren_level_max_count_index31\
    \ = 0\n    var paren_level_max_count_index32 = 0\n    var paren_level_max_count_index33\
    \ = 0\n    var paren_level_max_count_index34 = 0\n    var paren_level_max_count_index35\
    \ = 0\n    var paren_level_max_count_index36 = 0\n    var paren_level_max_count_index37\
    \ = 0\n    var paren_level_max_count_index38 = 0\n    var paren_level_max_count_index39\
    \ = 0\n    var paren_level_max_count_index40 = 0\n    var paren_level_max_count_index41\
    \ = 0\n    var paren_level_max_count_index42 = 0\n    var paren_level_max_count_index43\
    \ = 0\n    var paren_level_max_count_index44 = 0\n    var paren_level_max_count_index45\
    \ = 0\n    var paren_level_max_count_index46 = 0\n    var ", "    var levels =\
    \ [Int]()\n    var level = 0\n    var paren_count = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if paren_count == 0 {\n            levels.append(level)\n       \
    \     level++\n        }\n        if c == '(' {\n            paren_count++\n \
    \       } else if c == ')' {\n            paren_count--\n            if paren_count\
    \ == 0 {\n                levels.append(level)\n                level++\n    \
    \        }\n        }\n    }\n    return levels", "    var levels = [Int]()\n\
    \    var paren_level = 0\n    for ch in paren_string.unicodeScalars {\n      \
    \  switch ch {\n        case .LeftParenthesis:\n            paren_level++\n  \
    \      case .RightParenthesis:\n            paren_level--\n        case .Space:\n\
    \            if paren_level == 0 {\n                levels.append(paren_level)\n\
    \            }\n        }\n    }\n    return levels", "    var level = 0\n   \
    \ var max_level = 0\n    var paren_count = 0\n    var paren_level = 0\n    var\
    \ paren_max_level = 0\n    var paren_paren_count = 0\n    var paren_paren_level\
    \ = 0\n    var paren_paren_max_level = 0\n    var paren_paren_paren_count = 0\n\
    \    var paren_paren_paren_level = 0\n    var paren_paren_paren_max_level = 0\n\
    \    var paren_paren_paren_paren_count = 0\n    var paren_paren_paren_paren_level\
    \ = 0\n    var paren_paren_paren_paren_max_level = 0\n    var paren_paren_paren_paren_paren_count\
    \ = 0\n    var paren_paren_paren_paren_paren_level = 0\n    var paren_paren_paren_paren_paren_max_level\
    \ = 0\n    var paren_paren_paren_paren_paren_paren_count = 0\n    var paren_paren_paren_paren_paren_paren_level\
    \ = 0\n    var paren_paren_paren_paren_paren_paren_max_level = 0\n    var paren_paren_paren_paren_paren_paren_paren_count\
    \ = 0\n    var paren_paren_paren_paren_paren_paren_paren_level = 0\n    var paren_paren_paren_paren_paren_paren_paren_max_level\
    \ = 0\n    var paren_paren_paren_paren_paren_paren_paren_paren_count = 0\n   \
    \ var paren_paren_paren_paren_paren_paren_paren_paren_level = 0\n    var paren_paren_paren_paren_paren_paren_paren_paren_max_level\
    \ = 0\n    var paren_paren_paren_paren_paren_paren_paren_paren_paren_count = 0\n\
    \    var paren_paren_paren_paren_paren_paren_paren_paren_paren_level = 0\n   \
    \ var paren_paren_paren_paren_paren_paren_paren_paren_paren_max_level = 0\n  \
    \  var paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_count = 0\n\
    \    var paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_level = 0\n\
    \    var paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_max_level\
    \ = 0\n    var paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_count\
    \ = 0\n    var paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren_level\
    \ = 0\n    var paren", "    var levels = [Int]()\n    var level = 0\n    var paren_level\
    \ = 0\n    var paren_level_count = 0\n    var paren_level_char_count = 0\n   \
    \ var paren_level_char = 0\n    var paren_level_char_index = 0\n    var paren_level_char_length\
    \ = 0\n    var paren_level_char_length_index = 0\n    var paren_level_char_length_count\
    \ = 0\n    var paren_level_char_length = 0\n    var paren_level_char_length_index\
    \ = 0\n    var paren_level_char_length_count = 0\n    var paren_level_char_length\
    \ = 0\n    var paren_level_char_length_index = 0\n    var paren_level_char_length_count\
    \ = 0\n    var paren_level_char_length = 0\n    var paren_level_char_length_index\
    \ = 0\n    var paren_level_char_length_count = 0\n    var paren_level_char_length\
    \ = 0\n    var paren_level_char_length_index = 0\n    var paren_level_char_length_count\
    \ = 0\n    var paren_level_char_length = 0\n    var paren_level_char_length_index\
    \ = 0\n    var paren_level_char_length_count = 0\n    var paren_level_char_length\
    \ = 0\n    var paren_level_char_length_index = 0\n    var paren_level_char_length_count\
    \ = 0\n    var paren_level_char_length = 0\n    var paren_level_char_length_index\
    \ = 0\n    var paren_level_char_length_count = 0\n    var paren_level_char_length\
    \ = 0\n    var paren_level_char_length_index = 0\n    var paren_level_char_length_count\
    \ = 0\n    var paren_level_char_length = 0\n    var paren_level_char_length_index\
    \ = 0\n    var paren_level_char_length_count = 0\n    var paren_level_char_length\
    \ = 0\n    var paren_level_char_length_index = 0\n    var paren_level_char_length_count\
    \ = 0\n    var paren_level_char_length = 0\n    var paren_level_char_length_index\
    \ = 0\n    var paren_level_char_length_count = 0\n    var paren_level_char_length\
    \ = 0\n    var paren_level_char_length_index = 0\n    var paren_level_char_length_count\
    \ = 0\n    var paren_level_char_length = 0\n    var paren_level_char_length_index\
    \ = 0\n    var paren_level_char_length_count = 0\n    var paren_level_char_length\
    \ = 0\n    var paren_level_char_length_index = 0\n    var paren_level_char_length_count\
    \ = 0\n    var paren_level_char_length = 0\n    var paren_level_char_length_index\
    \ = 0\n    var paren_level_char_length_count = 0\n    var paren_level_char_length\
    \ = 0\n    var paren_level_char_length_index = 0\n    var paren_level_char_length_count\
    \ = 0\n    var paren_level_char_length = 0\n    var paren_level_char_length_index\
    \ = 0\n    var paren_level_char_length", "    var level = 0\n    var paren_level\
    \ = [Int]()\n    var paren_level_count = [Int]()\n    var paren_level_stack =\
    \ [Int]()\n    var paren_level_stack_count = [Int]()\n    var paren_level_stack_pointer\
    \ = [Int]()\n    var paren_level_stack_pointer_count = [Int]()\n    var paren_level_stack_pointer_pointer\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_count = [Int]()\n    var\
    \ paren_level_stack_pointer_pointer_pointer = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_count\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer = [Int]()\n\
    \    var paren_level_stack_pointer_pointer_pointer_pointer_count = [Int]()\n \
    \   var paren_level_stack_pointer_pointer_pointer_pointer_pointer = [Int]()\n\
    \    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_count = [Int]()\n\
    \    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer = [Int]()\n\
    \    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_count\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_count\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_count\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_count\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_count\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = [Int]()\n    var paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_count\
    \ = [Int", "    var levels = [Int]()\n    var level = 0\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_level_count\
    \ = 0\n    var paren_level_start = 0\n    var paren_level_end = 0\n    var paren_level_char_count\
    \ = 0\n    var paren_level_char_start = 0\n    var paren_level_char_end = 0\n\
    \    var paren_level_char_char_start = 0\n    var paren_level_char_char_end =\
    \ 0\n    var paren_level_char_char_char_start = 0\n    var paren_level_char_char_char_end\
    \ = 0\n    var paren_level_char_char_char_char_start = 0\n    var paren_level_char_char_char_char_end\
    \ = 0\n    var paren_level_char_char_char_char_char_start = 0\n    var paren_level_char_char_char_char_char_end\
    \ = 0\n    var paren_level_char_char_char_char_char_char_start = 0\n    var paren_level_char_char_char_char_char_char_end\
    \ = 0\n    var paren_level_char_char_char_char_char_char_char_start = 0\n    var\
    \ paren_level_char_char_char_char_char_char_char_end = 0\n    var paren_level_char_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_level_char_char_char_char_char_char_char_char_end = 0\n \
    \   var paren_level_char_char_char_char_char_char_char_char_char_start = 0\n \
    \   var paren_level_char_char_char_char_char_char_char_char_char_end = 0\n   \
    \ var paren_level_char_char_char_char_char_char_char_char_char_char_start = 0\n\
    \    var paren_level_char_char_char_char_char_char_char_char_char_char_end = 0\n\
    \    var paren_level_char_char_char_char_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_level_char_char_char_char_char_char_char_char_char_char_char_end\
    \ = 0\n    var paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_end\
    \ = 0\n    var paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_end\
    \ = 0\n    var paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_",
  "    var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_start_idx\
    \ = 0\n    var paren_end_idx = 0\n    var paren_start_idx2 = 0\n    var paren_end_idx2\
    \ = 0\n    var paren_start_idx3 = 0\n    var paren_end_idx3 = 0\n    var paren_start_idx4\
    \ = 0\n    var paren_end_idx4 = 0\n    var paren_start_idx5 = 0\n    var paren_end_idx5\
    \ = 0\n    var paren_start_idx6 = 0\n    var paren_end_idx6 = 0\n    var paren_start_idx7\
    \ = 0\n    var paren_end_idx7 = 0\n    var paren_start_idx8 = 0\n    var paren_end_idx8\
    \ = 0\n    var paren_start_idx9 = 0\n    var paren_end_idx9 = 0\n    var paren_start_idx10\
    \ = 0\n    var paren_end_idx10 = 0\n    var paren_start_idx11 = 0\n    var paren_end_idx11\
    \ = 0\n    var paren_start_idx12 = 0\n    var paren_end_idx12 = 0\n    var paren_start_idx13\
    \ = 0\n    var paren_end_idx13 = 0\n    var paren_start_idx14 = 0\n    var paren_end_idx14\
    \ = 0\n    var paren_start_idx15 = 0\n    var paren_end_idx15 = 0\n    var paren_start_idx16\
    \ = 0\n    var paren_end_idx16 = 0\n    var paren_start_idx17 = 0\n    var paren_end_idx17\
    \ = 0\n    var paren_start_idx18 = 0\n    var paren_end_idx18 = 0\n    var paren_start_idx19\
    \ = 0\n    var paren_end_idx19 = 0\n    var paren_start_idx20 = 0\n    var paren_end_idx20\
    \ = 0\n    var paren_start_idx21 = 0\n    var paren_end_idx21 = 0\n    var paren_start_idx22\
    \ = 0\n    var paren_end_idx22 = 0\n    var paren_start_idx23 = 0\n    var paren_end_idx23\
    \ = 0\n    var paren_start_idx24 = 0\n    var paren_end_idx24 = 0\n    var paren_start_idx25\
    \ = 0\n    var paren_end_idx25 = 0\n    var paren_start_idx26 = 0\n    var paren_end_idx26\
    \ = 0\n    var paren_start_idx27 = 0\n    var paren_end_idx27 = 0\n    var paren_start_idx28\
    \ = 0\n    var paren_end_idx28 = 0\n    var paren_start_idx29 = 0\n    var paren_end_idx29\
    \ = 0\n    var paren_start_idx30 = 0\n    var paren_end_idx30 = 0\n", "    var\
    \ level = 0\n    var max_level = 0\n    var paren_level = 0\n    var paren_max_level\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_max_levels = [Int]()\n  \
    \  var paren_levels_str = [String]()\n    var paren_max_levels_str = [String]()\n\
    \    var paren_levels_str_len = 0\n    var paren_max_levels_str_len = 0\n    var\
    \ paren_levels_str_lens = [Int]()\n    var paren_max_levels_str_lens = [Int]()\n\
    \    var paren_levels_str_lens_len = 0\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_max_levels_str_lens_len\
    \ = 0\n    var paren_levels_str_lens_lens = [Int]()\n    var paren_", "    var\
    \ levels = [Int]()\n    var level = 0\n    var parens = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if c == '(' {\n            levels[level] = parens\n            level++\n\
    \            parens++\n        } else if c == ')' {\n            levels[level]\
    \ = parens\n            level--\n            parens--\n        }\n    }\n    return\
    \ levels", "    var level = 0\n    var max_level = 0\n    var max_level_parens\
    \ = 0\n    var max_level_parens_count = 0\n    var paren_groups: [String] = []\n\
    \    var paren_groups_count: [Int] = []\n    var paren_groups_strings: [String]\
    \ = []\n    var paren_groups_strings_count: [Int] = []\n    var paren_groups_strings_strings:\
    \ [String] = []\n    var paren_groups_strings_strings_count: [Int] = []\n    var\
    \ paren_groups_strings_strings_strings: [String] = []\n    var paren_groups_strings_strings_strings_count:\
    \ [Int] = []\n    var paren_groups_strings_strings_strings_strings: [String] =\
    \ []\n    var paren_groups_strings_strings_strings_strings_count: [Int] = []\n\
    \    var paren_groups_strings_strings_strings_strings_strings: [String] = []\n\
    \    var paren_groups_strings_strings_strings_strings_strings_count: [Int] = []\n\
    \    var paren_groups_strings_strings_strings_strings_strings_strings: [String]\
    \ = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_count:\
    \ [Int] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings:\
    \ [String] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_count:\
    \ [Int] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings:\
    \ [String] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings_count:\
    \ [Int] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings_strings:\
    \ [String] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings_strings_count:\
    \ [Int] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings:\
    \ [String] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings_strings_count:\
    \ [Int] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings:\
    \ [String] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings_count:\
    \ [Int] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings:\
    \ [String] = []\n    var paren_groups_strings_strings_strings_strings_strings_strings_strings_strings_string",
  "    var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    for c in paren_string.unicodeScalars {\n        if paren_count == 0\
    \ {\n            levels.append(level)\n        }\n        if paren_count == 1\
    \ {\n            level = 0\n        }\n        if c == paren_char {\n        \
    \    paren_count += 1\n            if paren_count == 2 {\n                levels.append(level)\n\
    \                level = 0\n                paren_count = 0\n            }\n \
    \       } else {\n            paren_count = 0\n            level += 1\n      \
    \  }\n    }\n    return levels", "    var levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_nesting = 0\n    var paren_nesting_level = 0\n    var paren_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var\
    \ paren_nesting_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting_level = 0\n    var paren_nesting_nesting_nesting_nesting_level\
    \ = 0\n", "    var levels = [Int]()\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    for c in paren_string.unicodeScalars {\n \
    \       if paren_count > 0 {\n            levels[paren_level] = paren_count -\
    \ 1\n            paren_count = 0\n            paren_level++\n        }\n     \
    \   if paren_level == 0 {\n            paren_start = c\n        }\n        if\
    \ paren_level == 1 && c == paren_start {\n            paren_count++\n        }\n\
    \    }\n    levels[paren_level] = paren_count - 1\n    return levels", "    var\
    \ levels = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n\
    \    var paren_levels_size = 0\n    var paren_levels_sizes = [Int]()\n    var\
    \ paren_levels_sizes_size = 0\n    var paren_levels_sizes_sizes = [Int]()\n  \
    \  var paren_levels_sizes_sizes_size = 0\n    var paren_levels_sizes_sizes_sizes\
    \ = [Int]()\n    var paren_levels_sizes_sizes_sizes_size = 0\n    var paren_levels_sizes_sizes_sizes_sizes\
    \ = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_size = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes\
    \ = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_size = 0\n   \
    \ var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes = [Int]()\n\
    \    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size = 0\n   \
    \ var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes = [Int]()\n\
    \    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size = 0\n\
    \    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes =\
    \ [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes\
    \ = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes\
    \ = [Int]()\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = 0\n    var paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes\
    \ = [Int]", "    var levels = [Int]()\n    var level = 0\n    var paren_level\
    \ = 0\n    var paren_level_count = 0\n    var paren_level_max = 0\n    var paren_level_max_count\
    \ = 0\n    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n\
    \    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var\
    \ paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index\
    \ = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n\
    \    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var\
    \ paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var paren_level_max_count\
    \ = 0\n    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n\
    \    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var\
    \ paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index\
    \ = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n\
    \    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var\
    \ paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var paren_level_max_count\
    \ = 0\n    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n\
    \    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var\
    \ paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index\
    \ = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n\
    \    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var\
    \ paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var paren_level_max_count\
    \ = 0\n    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n\
    \    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var\
    \ paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index\
    \ = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n\
    \    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var\
    \ paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var paren_level_max_count\
    \ = 0\n    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n\
    \    var paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var\
    \ paren_level_max_index = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index\
    \ = 0\n    var ", "    var max_level = 0\n    var level = 0\n    var levels =\
    \ [Int]()\n    for c in paren_string.characters {\n        if c == '(' {\n   \
    \         level++\n            if level > max_level {\n                max_level\
    \ = level\n            }\n        } else if c == ')' {\n            level--\n\
    \            if level < 0 {\n                level = 0\n            }\n      \
    \  } else {\n            level = 0\n        }\n        levels.append(level)\n\
    \    }\n    return levels", "    var levels = [Int]()\n    var paren_level = 0\n\
    \    var paren_levels = [Int]()\n    var paren_levels_size = 0\n    var paren_levels_sizes\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var paren_levels_sizes_indexs\
    \ = [Int]()\n    var paren_levels_sizes_index = 0\n    var ", "    var levels\
    \ = [Int]()\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var\
    \ paren_levels_count = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_min\
    \ = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n\
    \    var paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_max\
    \ = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n\
    \    var paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_min\
    \ = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n\
    \    var paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_max\
    \ = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n\
    \    var paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_min\
    \ = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n\
    \    var paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_max\
    \ = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n\
    \    var paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n    var\
    \ paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_min\
    \ = 0\n    var paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n\
    \    var paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n    var\
    \ paren_levels_count_max = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_max\
    \ = 0\n    var paren_levels_count_min = 0\n    var paren_levels_count_max = 0\n\
    \    var paren_levels_count_", "    var level = 0\n    var paren_stack = [Int]()\n\
    \    var paren_level = [Int]()\n    var paren_level_count = [Int]()\n    var paren_level_total\
    \ = 0\n    var paren_level_max_count = 0\n    var paren_level_max_total = 0\n\
    \    var paren_level_max_index = 0\n    var paren_level_max_string = \"\"\n  \
    \  var paren_level_max_string_index = 0\n    var paren_level_max_string_index2\
    \ = 0\n    var paren_level_max_string_index3 = 0\n    var paren_level_max_string_index4\
    \ = 0\n    var paren_level_max_string_index5 = 0\n    var paren_level_max_string_index6\
    \ = 0\n    var paren_level_max_string_index7 = 0\n    var paren_level_max_string_index8\
    \ = 0\n    var paren_level_max_string_index9 = 0\n    var paren_level_max_string_index10\
    \ = 0\n    var paren_level_max_string_index11 = 0\n    var paren_level_max_string_index12\
    \ = 0\n    var paren_level_max_string_index13 = 0\n    var paren_level_max_string_index14\
    \ = 0\n    var paren_level_max_string_index15 = 0\n    var paren_level_max_string_index16\
    \ = 0\n    var paren_level_max_string_index17 = 0\n    var paren_level_max_string_index18\
    \ = 0\n    var paren_level_max_string_index19 = 0\n    var paren_level_max_string_index20\
    \ = 0\n    var paren_level_max_string_index21 = 0\n    var paren_level_max_string_index22\
    \ = 0\n    var paren_level_max_string_index23 = 0\n    var paren_level_max_string_index24\
    \ = 0\n    var paren_level_max_string_index25 = 0\n    var paren_level_max_string_index26\
    \ = 0\n    var paren_level_max_string_index27 = 0\n    var paren_level_max_string_index28\
    \ = 0\n    var paren_level_max_string_index29 = 0\n    var paren_level_max_string_index30\
    \ = 0\n    var paren_level_max_string_index31 = 0\n    var paren_level_max_string_index32\
    \ = 0\n    var paren_level_max_string_index33 = 0\n    var paren_level_max_string_index34\
    \ = 0\n    var paren_level_max_string_index35 = 0\n    var paren_level_max_string_index36\
    \ = 0\n    var paren_level_max_string_index37 = 0\n    var paren_level_max_string_index38\
    \ = 0\n    var paren_level_max_string_index39 = 0\n    var paren_level_max_string_index40\
    \ = 0\n    var paren_level_max_string_index41 = 0\n    var paren_level_max_string_index42\
    \ = 0\n    var paren_level_max_string_index43 = 0\n    var paren_level_max_string_index44\
    \ = 0\n    var paren_", "    var levels = [Int]()\n    var level = 0\n    var\
    \ parens = 0\n    var parens_count = 0\n    var parens_level = 0\n    var parens_level_count\
    \ = 0\n    var parens_level_max = 0\n    var parens_level_max_count = 0\n    var\
    \ parens_level_max_index = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index\
    \ = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index = 0\n\
    \    var parens_level_max_count = 0\n    var parens_level_max_index = 0\n    var\
    \ parens_level_max_count = 0\n    var parens_level_max_index = 0\n    var parens_level_max_count\
    \ = 0\n    var parens_level_max_index = 0\n    var parens_level_max_count = 0\n\
    \    var parens_level_max_index = 0\n    var parens_level_max_count = 0\n    var\
    \ parens_level_max_index = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index\
    \ = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index = 0\n\
    \    var parens_level_max_count = 0\n    var parens_level_max_index = 0\n    var\
    \ parens_level_max_count = 0\n    var parens_level_max_index = 0\n    var parens_level_max_count\
    \ = 0\n    var parens_level_max_index = 0\n    var parens_level_max_count = 0\n\
    \    var parens_level_max_index = 0\n    var parens_level_max_count = 0\n    var\
    \ parens_level_max_index = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index\
    \ = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index = 0\n\
    \    var parens_level_max_count = 0\n    var parens_level_max_index = 0\n    var\
    \ parens_level_max_count = 0\n    var parens_level_max_index = 0\n    var parens_level_max_count\
    \ = 0\n    var parens_level_max_index = 0\n    var parens_level_max_count = 0\n\
    \    var parens_level_max_index = 0\n    var parens_level_max_count = 0\n    var\
    \ parens_level_max_index = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index\
    \ = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index = 0\n\
    \    var parens_level_max_count = 0\n    var parens_level_max_index = 0\n    var\
    \ parens_level_max_count = 0\n    var parens_level_max_index = 0\n    var parens_level_max_count\
    \ = 0\n    var parens_level_max_index = 0\n    var parens_level_max_count = 0\n\
    \    var parens_level_max_index = 0\n    var parens_level_max_count = 0\n    var\
    \ parens_level_max_index = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index\
    \ = 0\n    var parens_level_max_count = 0\n    var parens_level_max_index = 0\n\
    \    var parens_level_max_count = 0\n", "    var levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_level_count\
    \ = 0\n    var paren_open_count = 0\n    var paren_close_count = 0\n    var paren_level_count2\
    \ = 0\n    var paren_open_count2 = 0\n    var paren_close_count2 = 0\n    var\
    \ paren_level_count3 = 0\n    var paren_open_count3 = 0\n    var paren_close_count3\
    \ = 0\n    var paren_level_count4 = 0\n    var paren_open_count4 = 0\n    var\
    \ paren_close_count4 = 0\n    var paren_level_count5 = 0\n    var paren_open_count5\
    \ = 0\n    var paren_close_count5 = 0\n    var paren_level_count6 = 0\n    var\
    \ paren_open_count6 = 0\n    var paren_close_count6 = 0\n    var paren_level_count7\
    \ = 0\n    var paren_open_count7 = 0\n    var paren_close_count7 = 0\n    var\
    \ paren_level_count8 = 0\n    var paren_open_count8 = 0\n    var paren_close_count8\
    \ = 0\n    var paren_level_count9 = 0\n    var paren_open_count9 = 0\n    var\
    \ paren_close_count9 = 0\n    var paren_level_count10 = 0\n    var paren_open_count10\
    \ = 0\n    var paren_close_count10 = 0\n    var paren_level_count11 = 0\n    var\
    \ paren_open_count11 = 0\n    var paren_close_count11 = 0\n    var paren_level_count12\
    \ = 0\n    var paren_open_count12 = 0\n    var paren_close_count12 = 0\n    var\
    \ paren_level_count13 = 0\n    var paren_open_count13 = 0\n    var paren_close_count13\
    \ = 0\n    var paren_level_count14 = 0\n    var paren_open_count14 = 0\n    var\
    \ paren_close_count14 = 0\n    var paren_level_count15 = 0\n    var paren_open_count15\
    \ = 0\n    var paren_close_count15 = 0\n    var paren_level_count16 = 0\n    var\
    \ paren_open_count16 = 0\n    var paren_close_count16 = 0\n    var paren_level_count17\
    \ = 0\n    var paren_open_count17 = 0\n    var paren_close_count17 = 0\n    var\
    \ paren_level_count18 = 0\n    var paren_open_count18 = 0\n    var paren_close_count18\
    \ = 0\n    var paren_level_count19 = 0\n    var paren_open_count19 = 0\n    var\
    \ paren_close_count19 = 0\n    var paren_level_count20 = 0\n    var paren_open_count20\
    \ = 0\n    var paren_close_count20 = 0\n    var paren_level_count21 = 0\n    var\
    \ paren_", "    var levels = [Int]()\n    var level = 0\n    var paren_count =\
    \ 0\n    for c in paren_string.unicodeScalars {\n        if paren_count == 0 {\n\
    \            levels.append(level)\n        }\n        level += c.value == 0x28\
    \ ? 1 : 2\n        paren_count += c.value == 0x28 ? 1 : 2\n    }\n    return levels",
  "    var levels = [Int]()\n    var paren_level = 0\n    var paren_open = 0\n   \
    \ var paren_close = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n\
    \    var paren_open = 0\n    var paren_close = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_open = 0\n    var paren_close = 0\n  \
    \  var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_open = 0\n\
    \    var paren_close = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_open = 0\n    var paren_close\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_open\
    \ = 0\n    var paren_close = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_open = 0\n    var paren_close\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_open\
    \ = 0\n    var paren_close = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_open = 0\n    var paren_close\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_open\
    \ = 0\n    var paren_close = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_open = 0\n    var paren_close\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_open\
    \ = 0\n    var paren_close = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_open = 0\n    var paren_close\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_open\
    \ = 0\n    var paren_close = 0\n    var ", "    var level = 0\n    var paren_stack\
    \ = [Int]()\n    var paren_level = [Int]()\n    var paren_level_count = [Int]()\n\
    \    var paren_level_max = [Int]()\n    var paren_level_max_count = 0\n    var\
    \ paren_level_max_index = 0\n    var paren_level_max_value = 0\n    var paren_level_max_count\
    \ = 0\n    var paren_level_max_index = 0\n    var paren_level_max_value = 0\n\
    \    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var\
    \ paren_level_max_value = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index\
    \ = 0\n    var paren_level_max_value = 0\n    var paren_level_max_count = 0\n\
    \    var paren_level_max_index = 0\n    var paren_level_max_value = 0\n    var\
    \ paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var paren_level_max_value\
    \ = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n\
    \    var paren_level_max_value = 0\n    var paren_level_max_count = 0\n    var\
    \ paren_level_max_index = 0\n    var paren_level_max_value = 0\n    var paren_level_max_count\
    \ = 0\n    var paren_level_max_index = 0\n    var paren_level_max_value = 0\n\
    \    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var\
    \ paren_level_max_value = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index\
    \ = 0\n    var paren_level_max_value = 0\n    var paren_level_max_count = 0\n\
    \    var paren_level_max_index = 0\n    var paren_level_max_value = 0\n    var\
    \ paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var paren_level_max_value\
    \ = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n\
    \    var paren_level_max_value = 0\n    var paren_level_max_count = 0\n    var\
    \ paren_level_max_index = 0\n    var paren_level_max_value = 0\n    var paren_level_max_count\
    \ = 0\n    var paren_level_max_index = 0\n    var paren_level_max_value = 0\n\
    \    var paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var\
    \ paren_level_max_value = 0\n    var paren_level_max_count = 0\n    var paren_level_max_index\
    \ = 0\n    var paren_level_max_value = 0\n    var paren_level_max_count = 0\n\
    \    var paren_level_max_index = 0\n    var paren_level_max_value = 0\n    var\
    \ paren_level_max_count = 0\n    var paren_level_max_index = 0\n    var paren_level_max_value\
    \ = 0\n    var paren_level_max_count = 0\n    var paren_", "    var max_level\
    \ = 0\n    var levels = [Int]()\n    for paren in paren_string.characters {\n\
    \        if paren == '(' {\n            levels.append(0)\n        } else if paren\
    \ == ')' {\n            levels[levels.count - 1] += 1\n            if levels[levels.count\
    \ - 1] > max_level {\n                max_level = levels[levels.count - 1]\n \
    \           }\n        }\n    }\n    return levels", "    var levels = [Int]()\n\
    \    var level = 0\n    var paren_count = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if c == parenthesisOpeningBracket.unicodeScalar.value {\n       \
    \     paren_count++\n        } else if c == parenthesisClosingBracket.unicodeScalar.value\
    \ {\n            paren_count--\n        }\n        if paren_count == 0 {\n   \
    \         levels.append(level)\n        }\n        level++\n    }\n    return\
    \ levels", "    var levels = [Int]()\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    for c in paren_string.unicodeScalars {\n \
    \       if paren_count > 0 {\n            levels[paren_level] = paren_count -\
    \ 1\n        }\n        if paren_count == 0 {\n            paren_start = c\n \
    \       }\n        paren_count += 1\n        if paren_count == 1 {\n         \
    \   paren_level++\n        }\n    }\n    if paren_count > 0 {\n        levels[paren_level]\
    \ = paren_count - 1\n    }\n    return levels", "    var level = 0\n    var max_level\
    \ = 0\n    var paren_level = 0\n    var paren_max_level = 0\n    var paren_stack\
    \ = [Int]()\n    var paren_stack_pointer = 0\n    var paren_stack_pointer_max\
    \ = paren_stack.count\n    var paren_stack_pointer_max_max = paren_stack_pointer_max\n\
    \    var paren_stack_pointer_max_min = paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max\
    \ = paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max_max = paren_stack_pointer_max\n\
    \    var paren_stack_pointer_max_min_max_max_max = paren_stack_pointer_max\n \
    \   var paren_stack_pointer_max_min_max_max_max_max = paren_stack_pointer_max\n\
    \    var paren_stack_pointer_max_min_max_max_max_max_max = paren_stack_pointer_max\n\
    \    var paren_stack_pointer_max_min_max_max_max_max_max_max = paren_stack_pointer_max\n\
    \    var paren_stack_pointer_max_min_max_max_max_max_max_max_max = paren_stack_pointer_max\n\
    \    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max = paren_stack_pointer_max\n\
    \    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max = paren_stack_pointer_max\n\
    \    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max_max =\
    \ paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max_max_max\
    \ = paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = paren_stack_pointer_max\n    var paren_stack_pointer_max_min_max_max_max_max_max_max_max_max_max_max_max_max_max_max_max_max_",
  "    var levels = [Int]()\n    var level = 0\n    var paren_count = 0\n    var paren_level\
    \ = 0\n    var paren_char_count = 0\n    for c in paren_string.unicodeScalars\
    \ {\n        if paren_char_count == 0 {\n            if paren_count == 0 {\n \
    \               levels.append(level)\n                paren_count = 1\n      \
    \          paren_level = 0\n            } else {\n                levels.append(level)\n\
    \                paren_count = 1\n                paren_level = 0\n          \
    \  }\n            level++\n            paren_char_count = 1\n        } else {\n\
    \            paren_char_count++\n            if c == paren_chars.back() {\n  \
    \              paren_count--\n                if paren_count == 0 {\n        \
    \            levels.append(level)\n                    paren_count = 1\n     \
    \               paren_level = 0\n                }\n                level--\n\
    \                paren_char_count = 1\n            } else {\n                paren_count++\n\
    \                paren_level++\n            }\n        }\n    }\n    return levels",
  "    var levels = [Int]()\n    var paren_count = 0\n    var paren_level = 0\n  \
    \  for c in paren_string.unicodeScalars {\n        if c == '(' {\n           \
    \ paren_count += 1\n        } else if c == ')' {\n            paren_count -= 1\n\
    \            if paren_count == 0 {\n                levels.append(paren_level)\n\
    \            }\n        }\n        paren_level += c == '(' ? 1 : -1\n    }\n \
    \   return levels"]
stop_tokens:
- "\n}"

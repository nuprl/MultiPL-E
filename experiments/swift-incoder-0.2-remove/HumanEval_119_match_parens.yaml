name: HumanEval_119_match_parens
language: swift
prompt: "\n/// You are given a list of two strings, both strings consist of open\n\
  /// parentheses '(' or close parentheses ')' only.\n/// Your job is to check if\
  \ it is possible to concatenate the two strings in\n/// some order, that the resulting\
  \ string will be good.\n/// A string S is considered to be good if and only if all\
  \ parentheses in S\n/// are balanced. For example: the string '(())()' is good,\
  \ while the string\n/// '())' is not.\n/// Return 'Yes' if there's a way to make\
  \ a good string, and return 'No' otherwise.\n/// Examples:\nfunc match_parens(lst:\
  \ [String]) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(match_parens(lst: [\"()(\", \")\"]) == \"\
  Yes\")\nassert(match_parens(lst: [\")\", \")\"]) == \"No\")\nassert(match_parens(lst:\
  \ [\"(()(())\", \"())())\"]) == \"No\")\nassert(match_parens(lst: [\")())\", \"\
  (()()(\"]) == \"Yes\")\nassert(match_parens(lst: [\"(())))\", \"(()())((\"]) ==\
  \ \"Yes\")\nassert(match_parens(lst: [\"()\", \"())\"]) == \"No\")\nassert(match_parens(lst:\
  \ [\"(()(\", \"()))()\"]) == \"Yes\")\nassert(match_parens(lst: [\"((((\", \"((())\"\
  ]) == \"No\")\nassert(match_parens(lst: [\")(()\", \"(()(\"]) == \"No\")\nassert(match_parens(lst:\
  \ [\")(\", \")(\"]) == \"No\")\nassert(match_parens(lst: [\"(\", \")\"]) == \"Yes\"\
  )\nassert(match_parens(lst: [\")\", \"(\"]) == \"Yes\")"
completions: ["    var stack = [String]()\n    var result = \"No\"\n    for s in lst\
    \ {\n        if s == \"(\" {\n            stack.append(s)\n        } else if s\
    \ == \")\" {\n            if stack.isEmpty {\n                result = \"Yes\"\
    \n                break\n            }\n            stack.removeLast()\n     \
    \   }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.count > 0 {\n          \
    \      stack.removeLast()\n            } else {\n                result = \"No\"\
    \n            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.count\
    \ > 0 {\n                stack.removeLast()\n            } else {\n          \
    \      result = \"No\"\n            }\n        } else {\n            if stack.count\
    \ > 0 {\n                if stack.last == s {\n                    stack.removeLast()\n\
    \                } else {\n                    result = \"No\"\n             \
    \   }\n            } else {\n                result = \"Yes\"\n            }\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.count > 0 {\n          \
    \      stack.removeLast()\n            } else {\n                result = \"Yes\"\
    \n            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.count\
    \ > 0 {\n                stack.removeLast()\n            } else {\n          \
    \      result = \"Yes\"\n                break\n            }\n        } else\
    \ {\n            if stack.count > 0 {\n                stack.removeLast()\n  \
    \          } else {\n                result = \"No\"\n                break\n\
    \            }\n        }\n    }\n    return result", "    var result = \"No\"\
    \n    for str in lst {\n        if str == \"(\" || str == \")\" {\n          \
    \  result = \"Yes\"\n            break\n        }\n    }\n    return result",
  "    var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n     \
    \   if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.isEmpty {\n                result = \"No\"\n       \
    \         break\n            }\n            stack.removeLast()\n        } else\
    \ {\n            if stack.isEmpty {\n                result = \"Yes\"\n      \
    \          break\n            }\n            stack.removeLast()\n            stack.append(s)\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var result = \"No\"\
    \n    var stack = Stack()\n    for str in lst {\n        if str == \"(\" {\n \
    \           stack.push(str)\n        } else if str == \")\" {\n            if\
    \ stack.top() == \"(\" {\n                stack.pop()\n            } else {\n\
    \                result = \"Yes\"\n                break\n            }\n    \
    \    } else {\n            result = \"No\"\n            break\n        }\n   \
    \ }\n    return result", "    var stack = [String]()\n    var result = \"No\"\n\
    \    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n  \
    \      } else if s == \")\" {\n            if stack.isEmpty {\n              \
    \  result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = Stack()\n\
    \    var res = \"\"\n    for s in lst {\n        if s == \"(\" {\n           \
    \ stack.push(s)\n        } else if s == \")\" {\n            if stack.len() ==\
    \ 0 {\n                return \"No\"\n            }\n            stack.pop()\n\
    \        } else {\n            if stack.len() != 0 {\n                return \"\
    No\"\n            }\n            res += s\n        }\n    }\n    if stack.len()\
    \ != 0 {\n        return \"No\"\n    }\n    return \"Yes\"", "    var stack =\
    \ [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.isEmpty {\n                result = \"No\"\n            } else {\n\
    \                stack.removeLast()\n            }\n        } else {\n       \
    \     if stack.isEmpty {\n                result = \"Yes\"\n            } else\
    \ {\n                stack.removeLast()\n            }\n        }\n    }\n   \
    \ return result", "    var stack = Stack()\n    for s in lst {\n        if s.contains(\"\
    (\") {\n            stack.push(s)\n        } else {\n            if stack.count\
    \ > 0 {\n                if stack.peek().contains(\"(\") {\n                 \
    \   stack.pop()\n                } else {\n                    return \"No\"\n\
    \                }\n            } else {\n                return \"No\"\n    \
    \        }\n        }\n    }\n    if stack.count > 0 {\n        return \"Yes\"\
    \n    } else {\n        return \"No\"\n    }", "    var stack = [String]()\n \
    \   var result = \"No\"\n    for str in lst {\n        if str == \"(\" {\n   \
    \         stack.append(str)\n        } else if str == \")\" {\n            if\
    \ stack.isEmpty {\n                result = \"Yes\"\n                break\n \
    \           } else {\n                stack.removeLast()\n            }\n    \
    \    }\n    }\n    return result", "    var stack = [String]()\n    var res =\
    \ \"\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    return \"No\"\n            }\n            stack.removeLast()\n          \
    \  if stack.isEmpty {\n                res = res + s\n            } else {\n \
    \               res = res + s + stack.removeLast()\n            }\n        } else\
    \ {\n            res = res + s\n        }\n    }\n    if stack.isEmpty {\n   \
    \     return \"Yes\"\n    }\n    return \"No\"", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s.contains(\"(\") {\n\
    \            stack.append(s)\n        } else {\n            if stack.count > 0\
    \ {\n                if stack.last == s {\n                    stack.removeLast()\n\
    \                } else {\n                    result = \"No\"\n             \
    \       break\n                }\n            } else {\n                result\
    \ = \"Yes\"\n                break\n            }\n        }\n    }\n    return\
    \ result", "    var stack = Stack()\n    for s in lst {\n        if s == \"(\"\
    \ {\n            stack.push(s)\n        } else if s == \")\" {\n            if\
    \ stack.len() == 0 {\n                return \"No\"\n            }\n         \
    \   stack.pop()\n        } else {\n            if stack.len() != 0 {\n       \
    \         return \"No\"\n            }\n        }\n    }\n    if stack.len() !=\
    \ 0 {\n        return \"No\"\n    }\n    return \"Yes\"", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" || s == \"\
    {\" || s == \"[\" {\n            stack.append(s)\n        } else if s == \"}\"\
    \ || s == \"]\" {\n            if stack.isEmpty {\n                result = \"\
    No\"\n            } else {\n                stack.removeLast()\n            }\n\
    \        } else if s == \"}\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else if s == \"(\" {\n            if stack.isEmpty {\n\
    \                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var res = \"\"\n    for s in lst {\n        if s == \"(\" {\n           \
    \ stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                return \"No\"\n            }\n            stack.removeLast()\n\
    \        } else {\n            if stack.isEmpty {\n                res = s\n \
    \           } else {\n                res = res + s\n            }\n        }\n\
    \    }\n    return \"Yes\"", "    var stack = [String]()\n    var result = \"\
    No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var result = \"No\"\
    \n    var stack = [String]()\n    for s in lst {\n        if s == \"(\" {\n  \
    \          stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n                break\n            } else\
    \ {\n                stack.removeLast()\n            }\n        } else {\n   \
    \         if stack.isEmpty {\n                result = \"Yes\"\n             \
    \   break\n            }\n        }\n    }\n    return result", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.isEmpty {\n                result = \"No\"\n            } else {\n\
    \                stack.removeLast()\n            }\n        } else {\n       \
    \     if stack.isEmpty {\n                result = \"Yes\"\n            } else\
    \ {\n                stack.removeLast()\n            }\n        }\n    }\n   \
    \ return result", "    var stack = [String]()\n    var result = \"No\"\n    for\
    \ s in lst {\n        if s == \"(\" {\n            stack.append(s)\n        }\
    \ else if s == \")\" {\n            if stack.last == \"(\" {\n               \
    \ stack.removeLast()\n            } else {\n                result = \"Yes\"\n\
    \            }\n        } else {\n            if stack.last == \"(\" {\n     \
    \           stack.removeLast()\n            } else {\n                result =\
    \ \"No\"\n            }\n        }\n    }\n    return result", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.isEmpty {\n                result = \"No\"\n            } else {\n\
    \                stack.removeLast()\n            }\n        } else {\n       \
    \     if stack.isEmpty {\n                result = \"Yes\"\n            } else\
    \ {\n                stack.removeLast()\n            }\n        }\n    }\n   \
    \ return result", "    var stack = [String]()\n    var result = \"No\"\n    for\
    \ s in lst {\n        if s == \"(\" || s == \")\" {\n            if stack[stack.count-1]\
    \ == \"(\" {\n                stack[stack.count-1] += s\n            } else {\n\
    \                stack[stack.count-1] = s\n            }\n        } else {\n \
    \           if stack.count > 0 {\n                if stack[stack.count-1] == \"\
    (\" {\n                    stack[stack.count-1] += s\n                } else {\n\
    \                    stack[stack.count-1] = s\n                }\n           \
    \ } else {\n                result = \"Yes\"\n            }\n        }\n    }\n\
    \    return result", "    var stack = [String]()\n    var result = \"No\"\n  \
    \  for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n    \
    \    } else if s == \")\" {\n            if stack.isEmpty {\n                result\
    \ = \"Yes\"\n                break\n            }\n            stack.removeLast()\n\
    \        }\n    }\n    return result", "    var stack = Stack()\n    var res =\
    \ \"\"\n    for s in lst {\n        if s == \"(\" {\n            stack.push(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    return \"No\"\n            }\n            stack.pop()\n        } else {\n\
    \            if stack.isEmpty {\n                return \"No\"\n            }\n\
    \            if stack.peek() == \"(\" {\n                stack.pop()\n       \
    \     } else {\n                stack.pop()\n                stack.pop()\n   \
    \             res = res + s\n            }\n        }\n    }\n    if stack.isEmpty\
    \ {\n        return \"Yes\"\n    }\n    return \"No\"", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for str in lst {\n        if str == \"(\" {\n  \
    \          stack.append(str)\n        } else if str == \")\" {\n            if\
    \ stack.count > 0 {\n                stack.removeLast()\n            } else {\n\
    \                result = \"Yes\"\n            }\n        }\n    }\n    return\
    \ result", "    var stack = Stack()\n    for s in lst {\n        if s == \"(\"\
    \ {\n            stack.push(\"(\")\n        } else if s == \")\" {\n         \
    \   if stack.isEmpty {\n                return \"No\"\n            }\n       \
    \     stack.pop()\n        } else {\n            if stack.count < 1 {\n      \
    \          return \"No\"\n            }\n        }\n    }\n    if stack.count\
    \ > 0 {\n        return \"No\"\n    }\n    return \"Yes\"", "    var stack = Stack()\n\
    \    var res = \"\"\n    for s in lst {\n        if s == \"(\" {\n           \
    \ stack.push(s)\n        } else if s == \")\" {\n            if stack.len() ==\
    \ 0 {\n                return \"No\"\n            }\n            stack.pop()\n\
    \        } else {\n            if stack.len() != 0 {\n                return \"\
    No\"\n            }\n            res += s\n        }\n    }\n    if stack.len()\
    \ != 0 {\n        return \"No\"\n    }\n    return \"Yes\"", "    guard lst.count\
    \ >= 2 else { return \"No\" }\n    guard lst[0] == \"(\" && lst[lst.count - 1]\
    \ == \")\" else { return \"No\" }\n    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.count > 0 {\n          \
    \      stack.removeLast()\n            } else {\n                result = \"No\"\
    \n                break\n            }\n        } else {\n            if stack.count\
    \ > 0 {\n                if stack.last == s {\n                    stack.removeLast()\n\
    \                } else {\n                    result = \"No\"\n             \
    \       break\n                }\n            } else {\n                result\
    \ = \"Yes\"\n                break\n            }\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.isEmpty {\n                result = \"\
    No\"\n            } else {\n                stack.pop()\n            }\n     \
    \   } else {\n            if stack.isEmpty {\n                result = \"Yes\"\
    \n            } else {\n                stack.pop()\n            }\n        }\n\
    \    }\n    return result", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.isEmpty {\n             \
    \   result = \"Yes\"\n                break\n            }\n            stack.removeLast()\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"Yes\"\n                break\n            }\n            stack.removeLast()\n\
    \        } else {\n            if stack.isEmpty {\n                result = \"\
    No\"\n                break\n            }\n            stack.removeLast()\n \
    \           stack.append(s)\n        }\n    }\n    return result", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.isEmpty {\n                result = \"No\"\n            } else {\n\
    \                stack.removeLast()\n            }\n        } else {\n       \
    \     if stack.isEmpty {\n                result = \"Yes\"\n            } else\
    \ {\n                stack.removeLast()\n            }\n        }\n    }\n   \
    \ return result", "    var stack = Stack()\n    var result = \"\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.push(s)\n        } else if\
    \ s == \")\" {\n            if stack.isEmpty {\n                return \"No\"\n\
    \            }\n            stack.pop()\n        } else if stack.isEmpty {\n \
    \           return \"Yes\"\n        }\n    }\n    if stack.isEmpty {\n       \
    \ return \"Yes\"\n    }\n    return \"No\"", "    var stack = Stack()\n    for\
    \ s in lst {\n        if s == \"(\" {\n            stack.push(s)\n        } else\
    \ if s == \")\" {\n            if stack.top() == \"(\" {\n                stack.pop()\n\
    \            } else {\n                return \"No\"\n            }\n        }\
    \ else {\n            return \"No\"\n        }\n    }\n    if stack.top() == \"\
    (\" {\n        return \"Yes\"\n    } else {\n        return \"No\"\n    }", " \
    \   var stack = Set<String>()\n    for s in lst {\n        if s.contains(\"(\"\
    ) {\n            stack.add(\"(\")\n        }\n        if s.contains(\")\") {\n\
    \            stack.add(\")\")\n        }\n    }\n    if stack.count == 0 {\n \
    \       return \"No\"\n    }\n    if stack.count == 1 {\n        return \"Yes\"\
    \n    }\n    var res = \"\"\n    for s in lst {\n        if s.contains(\"(\")\
    \ {\n            if stack.contains(\"(\") {\n                res += \"(\"\n  \
    \              stack.remove(\"(\")\n            } else {\n                res\
    \ += \"(\"\n                stack.add(\"(\")\n            }\n        }\n     \
    \   if s.contains(\")\") {\n            if stack.contains(\")\") {\n         \
    \       res += \")\"\n                stack.remove(\")\")\n            } else\
    \ {\n                res += \")\"\n                stack.add(\")\")\n        \
    \    }\n        }\n    }\n    return res", "    var stack = [String]()\n    var\
    \ result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"Yes\"\n                break\n            } else {\n         \
    \       stack.removeLast()\n            }\n        }\n    }\n    return result",
  "    var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n     \
    \   if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.last == \"(\" {\n                stack.removeLast()\n\
    \            } else {\n                result = \"No\"\n            }\n      \
    \  } else {\n            if stack.last == \"(\" {\n                stack.removeLast()\n\
    \            } else {\n                result = \"No\"\n            }\n      \
    \  }\n    }\n    return result", "    var stack = [String]()\n    var res = \"\
    \"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.count > 0 {\n          \
    \      stack.removeLast()\n            } else {\n                res += \"No\"\
    \n                return res\n            }\n        } else {\n            if\
    \ stack.count > 0 {\n                stack.removeLast()\n            } else {\n\
    \                res += \"No\"\n                return res\n            }\n  \
    \      }\n    }\n    if stack.count == 0 {\n        res += \"Yes\"\n        return\
    \ res\n    }\n    res += \"No\"\n    return res", "    var stack = Stack()\n \
    \   for s in lst {\n        if s == \"(\" {\n            stack.push(s)\n     \
    \   } else if s == \")\" {\n            if stack.isEmpty {\n                return\
    \ \"No\"\n            }\n            stack.pop()\n        } else {\n         \
    \   if stack.isEmpty {\n                return \"Yes\"\n            }\n      \
    \  }\n    }\n    if stack.isEmpty {\n        return \"Yes\"\n    }\n    return\
    \ \"No\"", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.isEmpty {\n                result = \"\
    Yes\"\n                break\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var res = \"\"\n    for s in lst {\n        if s == \"(\" {\n           \
    \ stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                return \"No\"\n            }\n            stack.removeLast()\n\
    \            if stack.last == \"(\" {\n                stack.removeLast()\n  \
    \          }\n        } else {\n            if stack.last == \"(\" {\n       \
    \         stack.removeLast()\n            }\n        }\n    }\n    if stack.last\
    \ == \"(\" {\n        stack.removeLast()\n    }\n    if stack.last == \")\" {\n\
    \        stack.removeLast()\n    }\n    if stack.last == \"\" {\n        return\
    \ \"Yes\"\n    }\n    return \"No\"", "    var result = \"No\"\n    for str in\
    \ lst {\n        if str == \"(\" || str == \")\" {\n            if result == \"\
    No\" {\n                result = \"Yes\"\n            }\n        }\n    }\n  \
    \  return result", "    var stack = Stack()\n    var res = \"\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.push(s)\n        } else if\
    \ s == \")\" {\n            if stack.len() == 0 {\n                return \"No\"\
    \n            }\n            stack.pop()\n        } else {\n            if stack.len()\
    \ == 0 {\n                return \"No\"\n            }\n            if stack.top()\
    \ == \"(\" {\n                stack.pop()\n            } else {\n            \
    \    stack.pop()\n                stack.pop()\n                res = s + res\n\
    \            }\n        }\n    }\n    if stack.len() == 0 {\n        return \"\
    Yes\"\n    }\n    return \"No\"", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for str in lst {\n        if str == \"(\" {\n            stack.append(str)\n\
    \        } else if str == \")\" {\n            if stack.isEmpty {\n          \
    \      result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = Stack()\n\
    \    for s in lst {\n        if s == \"(\" {\n            stack.push(s)\n    \
    \    } else if s == \")\" {\n            if stack.isEmpty {\n                return\
    \ \"No\"\n            }\n            stack.pop()\n        } else {\n         \
    \   if !stack.isEmpty {\n                return \"No\"\n            }\n      \
    \  }\n    }\n    if stack.isEmpty {\n        return \"Yes\"\n    }\n    return\
    \ \"No\"", "    var stack = Set<String>()\n    var res = \"\"\n    for s in lst\
    \ {\n        if s.contains(\"(\") {\n            stack.add(\"(\")\n        }\n\
    \        if s.contains(\")\") {\n            stack.add(\")\")\n        }\n   \
    \ }\n    for s in lst {\n        if s.contains(\"(\") {\n            if stack.contains(\"\
    (\") {\n                stack.remove(\"(\")\n            } else {\n          \
    \      res += \"(\"\n            }\n        }\n        if s.contains(\")\") {\n\
    \            if stack.contains(\")\") {\n                stack.remove(\")\")\n\
    \            } else {\n                res += \")\"\n            }\n        }\n\
    \    }\n    if stack.count == 0 {\n        return \"Yes\"\n    } else {\n    \
    \    return \"No\"\n    }", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.isEmpty {\n             \
    \   result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"Yes\"\n                break\n            }\n\
    \            stack.removeLast()\n        }\n    }\n    return result", "    var\
    \ stack = [String]()\n    var result = \"No\"\n    for s in lst {\n        if\
    \ s == \"(\" {\n            stack.append(s)\n        } else if s == \")\" {\n\
    \            if stack.isEmpty {\n                result = \"No\"\n           \
    \ } else {\n                stack.pop()\n            }\n        } else {\n   \
    \         if stack.isEmpty {\n                result = \"Yes\"\n            }\
    \ else {\n                stack.pop()\n            }\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.count > 0 {\n                stack.removeLast()\n\
    \            } else {\n                result = \"Yes\"\n            }\n     \
    \   }\n    }\n    return result", "    var stack = Stack()\n    var result = \"\
    No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.push(s)\n\
    \        } else if s == \")\" {\n            if stack.len() == 0 {\n         \
    \       result = \"No\"\n                break\n            }\n            stack.pop()\n\
    \        } else {\n            if stack.len() != 0 {\n                result =\
    \ \"No\"\n                break\n            }\n        }\n    }\n    return result",
  "    var stack = Stack()\n    var result = \"No\"\n    for s in lst {\n        if\
    \ s == \"(\" {\n            stack.push(s)\n        } else if s == \")\" {\n  \
    \          if stack.len() == 0 {\n                result = \"No\"\n          \
    \      break\n            }\n            stack.pop()\n        } else {\n     \
    \       if stack.len() != 0 {\n                result = \"No\"\n             \
    \   break\n            }\n        }\n    }\n    return result", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.count > 0 {\n                stack.removeLast()\n            } else\
    \ {\n                result = \"Yes\"\n            }\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.isEmpty {\n                result = \"\
    No\"\n            } else {\n                stack.removeLast()\n            }\n\
    \        } else {\n            if stack.isEmpty {\n                result = \"\
    Yes\"\n            } else {\n                stack.removeLast()\n            }\n\
    \        }\n    }\n    return result", "    var stack = Stack()\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.push(s)\n        } else if\
    \ s == \")\" {\n            if stack.top() == \"(\" {\n                stack.pop()\n\
    \            } else {\n                return \"No\"\n            }\n        }\
    \ else {\n            return \"No\"\n        }\n    }\n    if stack.top() == \"\
    (\" {\n        return \"Yes\"\n    } else {\n        return \"No\"\n    }", " \
    \   var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n    \
    \    if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.count > 0 {\n                stack.removeLast()\n  \
    \          } else {\n                result = \"Yes\"\n            }\n       \
    \ }\n    }\n    return result", "    var stack = [String]()\n    var result =\
    \ \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s.contains(\"(\") {\n\
    \            stack.append(s)\n        } else {\n            if stack.count > 0\
    \ {\n                if stack[stack.count - 1] == s {\n                    stack.removeLast()\n\
    \                } else {\n                    result = \"No\"\n             \
    \       break\n                }\n            } else {\n                result\
    \ = \"Yes\"\n                break\n            }\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s.contains(\"(\") {\n            stack.append(s)\n       \
    \ } else {\n            if stack.count > 0 {\n                if stack[stack.count\
    \ - 1] == s {\n                    stack.removeLast()\n                } else\
    \ {\n                    result = \"No\"\n                    break\n        \
    \        }\n            } else {\n                result = \"Yes\"\n         \
    \       break\n            }\n        }\n    }\n    return result", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.isEmpty {\n                result = \"Yes\"\n                break\n\
    \            } else {\n                stack.removeLast()\n            }\n   \
    \     }\n    }\n    return result", "    var stack = Stack()\n    for s in lst\
    \ {\n        if s == \"(\" {\n            stack.push(s)\n        } else if s ==\
    \ \")\" {\n            if stack.len() == 0 {\n                return \"No\"\n\
    \            }\n            stack.pop()\n        } else {\n            if stack.len()\
    \ != 0 {\n                return \"No\"\n            }\n        }\n    }\n   \
    \ if stack.len() != 0 {\n        return \"No\"\n    }\n    return \"Yes\"", " \
    \   var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n    \
    \    if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.isEmpty {\n                result = \"Yes\"\n      \
    \          break\n            }\n            stack.removeLast()\n        } else\
    \ {\n            if stack.isEmpty {\n                result = \"No\"\n       \
    \         break\n            }\n            stack.removeLast()\n            stack.append(s)\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n                break\n            } else {\n          \
    \      stack.removeLast()\n            }\n        } else {\n            if stack.isEmpty\
    \ {\n                result = \"Yes\"\n                break\n            }\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.count > 0 {\n          \
    \      stack.removeLast()\n            } else {\n                result = \"Yes\"\
    \n            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var res = \"\"\n    for s in lst {\n        if s == \"(\" {\n           \
    \ stack.append(s)\n        } else if s == \")\" {\n            if stack.count\
    \ > 0 {\n                stack.removeLast()\n            } else {\n          \
    \      res += s\n            }\n        } else {\n            if stack.count >\
    \ 0 {\n                stack.removeLast()\n                res += s\n        \
    \    } else {\n                res += s\n            }\n        }\n    }\n   \
    \ return res", "    \n    var stack = [String]()\n    var result = \"No\"\n  \
    \  \n    for str in lst {\n        \n        if str == \"(\" {\n            stack.append(str)\n\
    \        }\n        \n        if str == \")\" {\n            \n            if\
    \ stack.count > 0 {\n                \n                let lastStr = stack.removeLast()\n\
    \                \n                if lastStr == \"(\" {\n                   \
    \ stack.append(str)\n                } else {\n                    result = \"\
    Yes\"\n                    break\n                }\n            }\n        }\n\
    \    }\n    \n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = Set<String>()\n\
    \    var res = \"\"\n    for s in lst {\n        if s.contains(\"(\") {\n    \
    \        stack.add(\"(\")\n        }\n        if s.contains(\")\") {\n       \
    \     stack.add(\")\")\n        }\n    }\n    if stack.count == 0 {\n        return\
    \ \"No\"\n    }\n    for s in lst {\n        if stack.contains(s) {\n        \
    \    res += s\n        }\n    }\n    return \"Yes\"", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s.contains(\"(\") {\n\
    \            stack.append(s)\n        }\n        if s.contains(\")\") {\n    \
    \        if stack.count > 0 {\n                stack.removeLast()\n          \
    \  } else {\n                result = \"Yes\"\n            }\n        }\n    }\n\
    \    return result", "    var stack = [String]()\n    var result = \"No\"\n  \
    \  for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n    \
    \    } else if s == \")\" {\n            if stack.isEmpty {\n                result\
    \ = \"No\"\n            } else {\n                stack.removeLast()\n       \
    \     }\n        } else {\n            if stack.isEmpty {\n                result\
    \ = \"Yes\"\n            } else {\n                stack.removeLast()\n      \
    \      }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.last\
    \ == \"(\" {\n                stack.removeLast()\n            } else {\n     \
    \           result = \"Yes\"\n                break\n            }\n        }\
    \ else {\n            result = \"No\"\n            break\n        }\n    }\n \
    \   return result", "    var stack = Stack()\n    for s in lst {\n        if s\
    \ == '(' {\n            stack.push(s)\n        } else if s == ')' {\n        \
    \    if stack.top() == '(' {\n                stack.pop()\n            } else\
    \ {\n                return \"No\"\n            }\n        } else {\n        \
    \    return \"No\"\n        }\n    }\n    if stack.top() != nil {\n        return\
    \ \"No\"\n    } else {\n        return \"Yes\"\n    }", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.last\
    \ == \"(\" {\n                stack.removeLast()\n            } else {\n     \
    \           result = \"Yes\"\n                break\n            }\n        }\
    \ else {\n            result = \"No\"\n            break\n        }\n    }\n \
    \   return result", "    var stack = Stack()\n    var result = \"No\"\n    for\
    \ s in lst {\n        if s == \"(\" || s == \"{\" || s == \"[\" {\n          \
    \  stack.push(s)\n        } else if s == \"}\" || s == \"]\" {\n            if\
    \ stack.top() == \"{\" {\n                stack.pop()\n            } else {\n\
    \                stack.pop()\n            }\n        } else {\n            if\
    \ stack.top() == \"{\" {\n                stack.pop()\n            } else {\n\
    \                stack.pop()\n            }\n        }\n    }\n    if stack.top()\
    \ == \"{\" {\n        result = \"Yes\"\n    }\n    return result", "    var stack\
    \ = Stack()\n    for s in lst {\n        if s == \"(\" {\n            stack.push(s)\n\
    \        } else if s == \")\" {\n            if stack.top() == \"(\" {\n     \
    \           stack.pop()\n            } else {\n                return \"No\"\n\
    \            }\n        } else {\n            return \"No\"\n        }\n    }\n\
    \    if stack.top() == \"(\" {\n        return \"Yes\"\n    } else {\n       \
    \ return \"No\"\n    }", "    var stack = [String]()\n    var result = \"No\"\n\
    \    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n  \
    \      } else if s == \")\" {\n            if stack.count > 0 {\n            \
    \    stack.removeLast()\n            } else {\n                result = \"Yes\"\
    \n            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.last\
    \ == \"(\" {\n                stack.removeLast()\n            } else {\n     \
    \           result = \"No\"\n                break\n            }\n        } else\
    \ {\n            if stack.last == \"(\" {\n                stack.removeLast()\n\
    \            } else {\n                result = \"No\"\n                break\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s.contains(\"(\") {\n\
    \            stack.append(s)\n        }\n        if s.contains(\")\") {\n    \
    \        if stack.count > 0 {\n                stack.removeLast()\n          \
    \  } else {\n                result = \"No\"\n            }\n        }\n    }\n\
    \    return result", "    var stack = [String]()\n    var result = \"No\"\n  \
    \  for str in lst {\n        if str == \"(\" {\n            stack.append(str)\n\
    \        } else if str == \")\" {\n            if stack.isEmpty {\n          \
    \      result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.last\
    \ == \"(\" {\n                stack.removeLast()\n            } else {\n     \
    \           result = \"No\"\n                break\n            }\n        } else\
    \ {\n            result = \"No\"\n            break\n        }\n    }\n    return\
    \ result", "    \n    var stack = [String]()\n    var result = \"No\"\n    \n\
    \    for str in lst {\n        if str == \"(\" {\n            stack.append(str)\n\
    \        } else if str == \")\" {\n            stack.removeLast()\n          \
    \  if stack.count == 0 {\n                result = \"Yes\"\n                break\n\
    \            }\n        }\n    }\n    \n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.count\
    \ > 0 {\n                stack.removeLast()\n            } else {\n          \
    \      result = \"Yes\"\n            }\n        }\n    }\n    return result",
  "    var stack = Stack()\n    var result = \"No\"\n    for str in lst {\n      \
    \  if str == \"(\" {\n            stack.push(str)\n        } else if str == \"\
    )\" {\n            if stack.len() == 0 {\n                result = \"No\"\n  \
    \          } else {\n                stack.pop()\n            }\n        }\n \
    \   }\n    return result", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.isEmpty {\n             \
    \   result = \"Yes\"\n                break\n            }\n            stack.removeLast()\n\
    \        } else {\n            if stack.contains(s) {\n                result\
    \ = \"Yes\"\n                break\n            }\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" || s == \"{\" || s == \"[\" {\n            stack.append(s)\n\
    \        } else if s == \"}\" || s == \"]\" {\n            if stack.isEmpty {\n\
    \                result = \"No\"\n            } else {\n                stack.pop()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.pop()\n  \
    \          }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var res = \"\"\n    for s in lst {\n        if s.contains(\"(\") {\n    \
    \        stack.append(s)\n        } else if s.contains(\")\") {\n            if\
    \ stack.count > 0 {\n                stack.removeLast()\n            } else {\n\
    \                res += \"No\"\n                return res\n            }\n  \
    \      } else {\n            res += \"No\"\n            return res\n        }\n\
    \    }\n    if stack.count > 0 {\n        res += \"No\"\n        return res\n\
    \    }\n    res += \"Yes\"\n    return res", "    var stack = [String]()\n   \
    \ var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n         \
    \   stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"Yes\"\n                break\n            } else\
    \ {\n                stack.removeLast()\n            }\n        } else {\n   \
    \         if stack.isEmpty {\n                result = \"No\"\n              \
    \  break\n            }\n        }\n    }\n    return result", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.isEmpty {\n                result = \"Yes\"\n                break\n\
    \            } else {\n                stack.removeLast()\n            }\n   \
    \     }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"Yes\"\n                break\n            }\n            stack.removeLast()\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.count > 0 {\n          \
    \      stack.removeLast()\n            } else {\n                result = \"Yes\"\
    \n            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.count\
    \ > 0 {\n                stack.removeLast()\n            } else {\n          \
    \      result = \"Yes\"\n            }\n        }\n    }\n    return result",
  "    var stack = Set<String>()\n    var result = \"No\"\n    for s in lst {\n  \
    \      if s.contains(\"(\") {\n            stack.add(\"(\")\n        }\n     \
    \   if s.contains(\")\") {\n            stack.add(\")\")\n        }\n    }\n \
    \   if stack.count == 0 {\n        result = \"Yes\"\n    }\n    return result",
  "    var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n     \
    \   if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.isEmpty {\n                result = \"No\"\n       \
    \     } else {\n                stack.removeLast()\n            }\n        } else\
    \ {\n            if stack.isEmpty {\n                result = \"Yes\"\n      \
    \      } else {\n                stack.removeLast()\n            }\n        }\n\
    \    }\n    return result", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.isEmpty {\n             \
    \   result = \"No\"\n            } else {\n                stack.pop()\n     \
    \       }\n        } else {\n            if stack.isEmpty {\n                result\
    \ = \"Yes\"\n            } else {\n                stack.pop()\n             \
    \   stack.append(s)\n            }\n        }\n    }\n    return result", "  \
    \  var stack = [String]()\n    var result = \"No\"\n    for str in lst {\n   \
    \     if str == \"(\" {\n            stack.append(str)\n        } else if str\
    \ == \")\" {\n            if stack.count > 0 {\n                stack.removeLast()\n\
    \            } else {\n                result = \"Yes\"\n            }\n     \
    \   }\n    }\n    return result", "    var stack = Stack()\n    var res = \"\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.push(s)\n   \
    \     } else if s == \")\" {\n            if stack.top() == \"(\" {\n        \
    \        stack.pop()\n            } else {\n                res += \"No\"\n  \
    \              return res\n            }\n        } else {\n            res +=\
    \ \"No\"\n            return res\n        }\n    }\n    if stack.top() == \"(\"\
    \ {\n        res += \"Yes\"\n    } else {\n        res += \"No\"\n    }\n    return\
    \ res", "    var stack = [String]()\n    var result = \"No\"\n    for s in lst\
    \ {\n        if s == \"(\" {\n            stack.append(s)\n        } else if s\
    \ == \")\" {\n            if stack.isEmpty {\n                result = \"No\"\n\
    \            } else {\n                stack.removeLast()\n            }\n   \
    \     } else {\n            if stack.isEmpty {\n                result = \"Yes\"\
    \n            } else {\n                stack.removeLast()\n            }\n  \
    \      }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = Stack()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.push(s)\n        } else if s == \")\" {\n            if stack.top()\
    \ == \"(\" {\n                stack.pop()\n            } else {\n            \
    \    result = \"No\"\n                break\n            }\n        } else {\n\
    \            result = \"No\"\n            break\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.isEmpty {\n                result = \"\
    No\"\n            } else {\n                stack.removeLast()\n            }\n\
    \        } else {\n            if stack.isEmpty {\n                result = \"\
    Yes\"\n            } else {\n                stack.removeLast()\n            }\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = Stack()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.push(s)\n        } else if s == \")\" {\n            if stack.len()\
    \ == 0 {\n                result = \"No\"\n            } else {\n            \
    \    stack.pop()\n            }\n        } else {\n            if stack.len()\
    \ == 0 {\n                result = \"No\"\n            } else {\n            \
    \    stack.pop()\n            }\n        }\n    }\n    return result", "    var\
    \ stack = Stack()\n    for s in lst {\n        if s == '(' {\n            stack.push(s)\n\
    \        } else if s == ')' {\n            if stack.top() == '(' {\n         \
    \       stack.pop()\n            } else {\n                return \"No\"\n   \
    \         }\n        } else {\n            return \"No\"\n        }\n    }\n \
    \   if stack.top() != nil {\n        return \"No\"\n    } else {\n        return\
    \ \"Yes\"\n    }", "    var stack = Stack()\n    var res = \"\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.push(s)\n        } else if\
    \ s == \")\" {\n            if stack.len() == 0 {\n                return \"No\"\
    \n            }\n            stack.pop()\n        } else {\n            if stack.len()\
    \ != 0 {\n                return \"No\"\n            }\n            res += s\n\
    \        }\n    }\n    if stack.len() != 0 {\n        return \"No\"\n    }\n \
    \   return \"Yes\"", "    var stack = Stack()\n    for s in lst {\n        if\
    \ s.contains(\"(\") {\n            stack.push(s)\n        } else {\n         \
    \   if stack.top() == \"(\" {\n                stack.pop()\n            } else\
    \ {\n                return \"No\"\n            }\n        }\n    }\n    if stack.top()\
    \ == \"(\" {\n        return \"Yes\"\n    } else {\n        return \"No\"\n  \
    \  }", "    var stack = Stack()\n    var res = \"\"\n    for s in lst {\n    \
    \    if s == \"(\" {\n            stack.push(s)\n        } else if s == \")\"\
    \ {\n            if stack.top() == \"(\" {\n                stack.pop()\n    \
    \        } else {\n                res += \"No\"\n                return res\n\
    \            }\n        } else {\n            res += \"No\"\n            return\
    \ res\n        }\n    }\n    if stack.top() == \"(\" {\n        res += \"Yes\"\
    \n    } else {\n        res += \"No\"\n    }\n    return res", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.isEmpty {\n                result = \"No\"\n                break\n\
    \            }\n            stack.removeLast()\n        }\n    }\n    return result",
  "    var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n     \
    \   if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.isEmpty {\n                result = \"Yes\"\n      \
    \          break\n            }\n            stack.removeLast()\n        } else\
    \ {\n            if stack.isEmpty {\n                result = \"No\"\n       \
    \         break\n            }\n            stack.removeLast()\n            stack.append(s)\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"Yes\"\n                break\n            } else\
    \ {\n                stack.removeLast()\n            }\n        } else {\n   \
    \         if stack.isEmpty {\n                result = \"No\"\n              \
    \  break\n            }\n        }\n    }\n    return result", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.last == \"(\" {\n                stack.removeLast()\n           \
    \ } else {\n                result = \"No\"\n                break\n         \
    \   }\n        } else {\n            if stack.last == \")\" {\n              \
    \  stack.removeLast()\n            } else {\n                result = \"No\"\n\
    \                break\n            }\n        }\n    }\n    if result == \"No\"\
    \ {\n        result = \"Yes\"\n    }\n    return result", "    \n    var stack\
    \ = Stack()\n    var result = \"No\"\n    \n    for elem in lst {\n        if\
    \ elem == \"(\" {\n            stack.push(elem)\n        } else if elem == \"\
    )\" {\n            if stack.top() == \"(\" {\n                stack.pop()\n  \
    \          } else {\n                result = \"Yes\"\n                break\n\
    \            }\n        } else {\n            result = \"No\"\n            break\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.last\
    \ == \"(\" {\n                stack.removeLast()\n            } else {\n     \
    \           result = \"No\"\n                break\n            }\n        } else\
    \ {\n            if stack.last == \"(\" {\n                stack.removeLast()\n\
    \            } else {\n                result = \"No\"\n                break\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                if stack.last ==\
    \ s {\n                    stack.removeLast()\n                } else {\n    \
    \                result = \"No\"\n                }\n            }\n        }\n\
    \    }\n    return result", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.isEmpty {\n             \
    \   result = \"Yes\"\n                break\n            }\n            stack.removeLast()\n\
    \        }\n    }\n    return result", "    var stack = Stack()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" || s == \"{\" || s == \"\
    [\" {\n            stack.push(s)\n        } else if s == \"}\" || s == \"]\" {\n\
    \            if stack.len() == 0 {\n                result = \"No\"\n        \
    \        break\n            }\n            stack.pop()\n        } else if stack.len()\
    \ != 0 {\n            result = \"No\"\n            break\n        }\n    }\n \
    \   return result", "    var stack = Stack()\n    var result = \"No\"\n    for\
    \ s in lst {\n        if s == \"(\" {\n            stack.push(s)\n        } else\
    \ if s == \")\" {\n            if stack.len() == 0 {\n                result =\
    \ \"Yes\"\n                break\n            } else {\n                stack.pop()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" || s == \"\
    {\" || s == \"[\" {\n            stack.append(s)\n        } else if s == \"}\"\
    \ || s == \"]\" {\n            if stack.last == \"(\" || stack.last == \"{\" ||\
    \ stack.last == \"[\" {\n                stack.removeLast()\n            } else\
    \ {\n                result = \"No\"\n                break\n            }\n \
    \       } else {\n            if stack.last == \"(\" || stack.last == \"{\" ||\
    \ stack.last == \"[\" {\n                stack.removeLast()\n            } else\
    \ {\n                result = \"No\"\n                break\n            }\n \
    \       }\n    }\n    return result", "    var stack = Stack()\n    for s in lst\
    \ {\n        if s == \"(\" {\n            stack.push(s)\n        } else if s ==\
    \ \")\" {\n            if stack.len() == 0 {\n                return \"No\"\n\
    \            }\n            stack.pop()\n        } else {\n            if stack.len()\
    \ != 0 {\n                return \"No\"\n            }\n        }\n    }\n   \
    \ if stack.len() != 0 {\n        return \"No\"\n    }\n    return \"Yes\"", " \
    \   var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n    \
    \    if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.count > 0 {\n                stack.removeLast()\n  \
    \          } else {\n                result = \"Yes\"\n            }\n       \
    \ }\n    }\n    return result", "    var stack = [String]()\n    var result =\
    \ \"No\"\n    for s in lst {\n        if s == \"(\" || s == \"{\" || s == \"[\"\
    \ {\n            stack.append(s)\n        } else if s == \"}\" || s == \"]\" {\n\
    \            if stack.isEmpty {\n                result = \"No\"\n           \
    \ } else {\n                stack.removeLast()\n            }\n        } else\
    \ {\n            if stack.isEmpty {\n                result = \"Yes\"\n      \
    \      } else {\n                stack.removeLast()\n            }\n        }\n\
    \    }\n    return result", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.count > 0 {\n           \
    \     stack.removeLast()\n            } else {\n                result = \"Yes\"\
    \n            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.count\
    \ > 0 {\n                stack.removeLast()\n            } else {\n          \
    \      result = \"Yes\"\n            }\n        }\n    }\n    return result",
  "    var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n     \
    \   if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.isEmpty {\n                result = \"Yes\"\n      \
    \          break\n            } else {\n                stack.removeLast()\n \
    \           }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.last\
    \ == \"(\" {\n                stack.removeLast()\n            } else {\n     \
    \           result = \"Yes\"\n            }\n        } else {\n            if\
    \ stack.last == \"(\" {\n                stack.removeLast()\n            } else\
    \ {\n                result = \"No\"\n            }\n        }\n    }\n    return\
    \ result", "    var stack = Stack()\n    var res = \"\"\n    for s in lst {\n\
    \        if s == \"(\" {\n            stack.push(s)\n        } else if s == \"\
    )\" {\n            if stack.len() == 0 {\n                return \"No\"\n    \
    \        }\n            stack.pop()\n        } else {\n            if stack.len()\
    \ == 0 {\n                return \"No\"\n            }\n            if stack.top()\
    \ == \"(\" {\n                stack.pop()\n            } else {\n            \
    \    stack.pop()\n                stack.pop()\n            }\n        }\n    }\n\
    \    if stack.len() == 0 {\n        return \"Yes\"\n    }\n    return \"No\"",
  "    \n    var str = \"\"\n    var stack = Stack()\n    \n    for s in lst {\n \
    \       if s == \"(\" {\n            stack.push(s)\n        } else if s == \"\
    )\" {\n            if stack.len() == 0 {\n                return \"No\"\n    \
    \        }\n            str = str + stack.pop()\n        } else {\n          \
    \  str = str + s\n        }\n    }\n    \n    if stack.len() == 0 {\n        return\
    \ \"Yes\"\n    }\n    return \"No\"", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for str in lst {\n        if str == \"(\" || str == \")\" {\n\
    \            if stack.isEmpty {\n                result = \"Yes\"\n          \
    \      break\n            }\n            stack.removeLast()\n        } else {\n\
    \            stack.append(str)\n        }\n    }\n    return result", "    var\
    \ stack = [String]()\n    var result = \"No\"\n    for s in lst {\n        if\
    \ s == \"(\" {\n            stack.append(s)\n        } else if s == \")\" {\n\
    \            if stack.isEmpty {\n                result = \"No\"\n           \
    \ } else {\n                stack.pop()\n            }\n        } else {\n   \
    \         if stack.isEmpty {\n                result = \"Yes\"\n            }\
    \ else {\n                if stack[stack.count-1] != s {\n                   \
    \ result = \"No\"\n                    break\n                }\n            }\n\
    \        }\n    }\n    return result", "    var stack = Stack()\n    for s in\
    \ lst {\n        if s.contains(\"(\") {\n            stack.push(s)\n        }\
    \ else if s.contains(\")\") {\n            if stack.count > 0 {\n            \
    \    stack.pop()\n            } else {\n                return \"No\"\n      \
    \      }\n        } else {\n            return \"No\"\n        }\n    }\n    if\
    \ stack.count == 0 {\n        return \"Yes\"\n    } else {\n        return \"\
    No\"\n    }", "    var stack = Stack()\n    var res = \"\"\n    for s in lst {\n\
    \        if s == \"(\" {\n            stack.push(s)\n        } else if s == \"\
    )\" {\n            if stack.len() == 0 {\n                return \"No\"\n    \
    \        }\n            stack.pop()\n        } else {\n            if stack.len()\
    \ != 0 {\n                return \"No\"\n            }\n            res += s\n\
    \        }\n    }\n    if stack.len() != 0 {\n        return \"No\"\n    }\n \
    \   return \"Yes\"", "    var stack = [String]()\n    var result = \"No\"\n  \
    \  for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n    \
    \    } else if s == \")\" {\n            if stack.isEmpty {\n                result\
    \ = \"Yes\"\n                break\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"Yes\"\n                break\n            }\n\
    \            stack.removeLast()\n        }\n    }\n    return result", "    var\
    \ stack = Stack()\n    for s in lst {\n        if s == \"(\" {\n            stack.push(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    return \"No\"\n            }\n            stack.pop()\n        } else {\n\
    \            if stack.isEmpty {\n                return \"Yes\"\n            }\n\
    \        }\n    }\n    return \"No\"", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n                break\n            } else {\n          \
    \      stack.removeLast()\n            }\n        } else {\n            if stack.isEmpty\
    \ {\n                result = \"Yes\"\n                break\n            }\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" || s == \")\" {\n      \
    \      if stack[stack.count-1] == \"(\" {\n                stack[stack.count-1]\
    \ += s\n            } else {\n                stack.append(s)\n            }\n\
    \        } else {\n            if stack.count > 0 {\n                if stack[stack.count-1]\
    \ == \"(\" {\n                    stack[stack.count-1] += s\n                }\
    \ else {\n                    stack.pop()\n                }\n            } else\
    \ {\n                result = \"Yes\"\n            }\n        }\n    }\n    return\
    \ result", "    var stack = Stack()\n    var res = \"\"\n    for s in lst {\n\
    \        if s.contains(\"(\") {\n            stack.push(s)\n        } else {\n\
    \            if stack.count > 0 {\n                if stack.peek().contains(\"\
    (\") {\n                    res += stack.peek()\n                    stack.pop()\n\
    \                } else {\n                    return \"No\"\n               \
    \ }\n            } else {\n                return \"No\"\n            }\n    \
    \    }\n    }\n    if stack.count > 0 {\n        return \"No\"\n    } else {\n\
    \        return \"Yes\"\n    }", "    var result = \"No\"\n    for i in lst {\n\
    \        if i == \")\" {\n            if result == \"No\" {\n                result\
    \ = \"Yes\"\n            }\n        } else {\n            if result == \"Yes\"\
    \ {\n                result = \"No\"\n            }\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.isEmpty {\n                result = \"\
    No\"\n            } else {\n                stack.removeLast()\n            }\n\
    \        } else {\n            if stack.isEmpty {\n                result = \"\
    Yes\"\n            } else {\n                stack.removeLast()\n            }\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"Yes\"\n                break\n            }\n            stack.removeLast()\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = Stack()\n\
    \    var res = \"\"\n    for s in lst {\n        if s == \"(\" {\n           \
    \ stack.push(s)\n        } else if s == \")\" {\n            if stack.len() ==\
    \ 0 {\n                return \"No\"\n            }\n            stack.pop()\n\
    \        } else {\n            if stack.len() != 0 {\n                return \"\
    No\"\n            }\n            res += s\n        }\n    }\n    if stack.len()\
    \ != 0 {\n        return \"No\"\n    }\n    return \"Yes\"", "    var stack =\
    \ [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.isEmpty {\n                result = \"Yes\"\n                break\n\
    \            }\n            stack.removeLast()\n        }\n    }\n    return result",
  "    var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n     \
    \   if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.isEmpty {\n                result = \"No\"\n       \
    \     } else {\n                stack.removeLast()\n            }\n        }\n\
    \    }\n    return result", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.isEmpty {\n             \
    \   result = \"No\"\n            } else {\n                stack.pop()\n     \
    \       }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var res = \"\"\n    for s in lst {\n        if s == \"(\" {\n           \
    \ stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                return \"No\"\n            }\n            stack.removeLast()\n\
    \        } else {\n            if stack.isEmpty {\n                return \"No\"\
    \n            }\n            stack.removeLast()\n            stack.append(s)\n\
    \        }\n    }\n    if stack.isEmpty {\n        return \"Yes\"\n    }\n   \
    \ return \"No\"", "    var stack = Stack()\n    var result = \"No\"\n    for s\
    \ in lst {\n        if s == \"(\" {\n            stack.push(s)\n        } else\
    \ if s == \")\" {\n            if stack.len() == 0 {\n                result =\
    \ \"No\"\n                break\n            }\n            stack.pop()\n    \
    \    } else {\n            if stack.len() != 0 {\n                result = \"\
    No\"\n                break\n            }\n        }\n    }\n    return result",
  "    var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n     \
    \   if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.isEmpty {\n                result = \"No\"\n       \
    \     } else {\n                stack.removeLast()\n            }\n        } else\
    \ {\n            if stack.isEmpty {\n                result = \"Yes\"\n      \
    \      } else {\n                stack.removeLast()\n            }\n        }\n\
    \    }\n    return result", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.isEmpty {\n             \
    \   result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                if stack.last !=\
    \ s {\n                    result = \"No\"\n                } else {\n       \
    \             stack.removeLast()\n                }\n            }\n        }\n\
    \    }\n    return result", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" || s == \")\" {\n            stack.append(s)\n\
    \        } else {\n            if stack.count > 0 {\n                if stack[stack.count\
    \ - 1] == \"(\" && s == \"(\" {\n                    stack.pop()\n           \
    \     } else if stack[stack.count - 1] == \")\" && s == \")\" {\n            \
    \        stack.pop()\n                } else {\n                    result = \"\
    No\"\n                    break\n                }\n            } else {\n   \
    \             result = \"Yes\"\n                break\n            }\n       \
    \ }\n    }\n    return result", "    var stack = [String]()\n    var result =\
    \ \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.count > 0 {\n          \
    \      stack.removeLast()\n            } else {\n                result = \"Yes\"\
    \n            }\n        }\n    }\n    return result", "    var stack = Stack()\n\
    \    var res = \"\"\n    for s in lst {\n        if s == \"(\" {\n           \
    \ stack.push(s)\n        } else if s == \")\" {\n            if stack.top() ==\
    \ \"(\" {\n                stack.pop()\n            } else {\n               \
    \ res += \"No\"\n                return res\n            }\n        } else {\n\
    \            res += \"No\"\n            return res\n        }\n    }\n    if stack.top()\
    \ == \"(\" {\n        res += \"Yes\"\n    } else {\n        res += \"No\"\n  \
    \  }\n    return res", "    var stack = [String]()\n    var result = \"No\"\n\
    \    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n  \
    \      } else if s == \")\" {\n            if stack.count > 0 {\n            \
    \    stack.removeLast()\n            } else {\n                result = \"Yes\"\
    \n            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.count\
    \ > 0 {\n                stack.removeLast()\n            } else {\n          \
    \      result = \"Yes\"\n            }\n        }\n    }\n    return result",
  "    var stack = Stack()\n    for s in lst {\n        if s == \"(\" {\n        \
    \    stack.push(s)\n        } else if s == \")\" {\n            if stack.top()\
    \ == \"(\" {\n                stack.pop()\n            } else {\n            \
    \    return \"No\"\n            }\n        } else {\n            return \"No\"\
    \n        }\n    }\n    if stack.top() == \"(\" {\n        return \"Yes\"\n  \
    \  } else {\n        return \"No\"\n    }", "    var stack = [String]()\n    var\
    \ result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = Stack()\n\
    \    for s in lst {\n        if s == \"(\" {\n            stack.push(s)\n    \
    \    } else if s == \")\" {\n            if stack.len() == 0 {\n             \
    \   return \"No\"\n            }\n            stack.pop()\n        } else {\n\
    \            if stack.len() != 0 {\n                return \"No\"\n          \
    \  }\n        }\n    }\n    if stack.len() != 0 {\n        return \"No\"\n   \
    \ }\n    return \"Yes\"", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.isEmpty {\n             \
    \   result = \"No\"\n            } else {\n                stack.pop()\n     \
    \       }\n        } else {\n            if stack.isEmpty {\n                result\
    \ = \"Yes\"\n            } else {\n                stack.pop()\n            }\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.count > 0 {\n          \
    \      stack.removeLast()\n            } else {\n                result = \"Yes\"\
    \n            }\n        }\n    }\n    return result", "    var stack = Stack()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.push(s)\n        } else if s == \")\" {\n            if stack.len()\
    \ == 0 {\n                result = \"No\"\n                break\n           \
    \ }\n            stack.pop()\n        } else {\n            if stack.len() !=\
    \ 0 {\n                result = \"No\"\n                break\n            }\n\
    \        }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for str in lst {\n        if str == \"(\" {\n            stack.append(str)\n\
    \        } else if str == \")\" {\n            if stack.isEmpty {\n          \
    \      result = \"Yes\"\n                break\n            } else {\n       \
    \         stack.removeLast()\n            }\n        }\n    }\n    return result",
  "    var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n     \
    \   if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.isEmpty {\n                result = \"Yes\"\n      \
    \          break\n            }\n            stack.removeLast()\n        }\n \
    \   }\n    return result", "    var stack = [String]()\n    var result = \"No\"\
    \n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n \
    \       } else if s == \")\" {\n            if stack.isEmpty {\n             \
    \   result = \"Yes\"\n                break\n            } else {\n          \
    \      stack.removeLast()\n            }\n        }\n    }\n    return result",
  "    var stack = [String]()\n    var result = \"No\"\n    for str in lst {\n   \
    \     if str == \"(\" || str == \")\" {\n            if stack.isEmpty {\n    \
    \            result = \"Yes\"\n                break\n            }\n        \
    \    stack.removeLast()\n        } else {\n            stack.append(str)\n   \
    \     }\n    }\n    return result", "    var stack = [String]()\n    var result\
    \ = \"No\"\n    for s in lst {\n        if s.contains(\"(\") {\n            stack.append(s)\n\
    \        }\n        if s.contains(\")\") {\n            if stack.count > 0 {\n\
    \                stack.removeLast()\n            } else {\n                result\
    \ = \"Yes\"\n            }\n        }\n    }\n    return result", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s.contains(\"\
    (\") {\n            stack.append(s)\n        } else {\n            if stack.count\
    \ > 0 {\n                if s.contains(\")\") {\n                    stack.removeLast()\n\
    \                } else {\n                    result = \"Yes\"\n            \
    \        break\n                }\n            } else {\n                result\
    \ = \"Yes\"\n                break\n            }\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.count > 0 {\n                stack.removeLast()\n\
    \            } else {\n                result = \"Yes\"\n            }\n     \
    \   }\n    }\n    return result", "    guard lst.count >= 2 else {\n        return\
    \ \"No\"\n    }\n    guard lst[0] != \"(\" && lst[0] != \")\" && lst[1] != \"\
    (\" && lst[1] != \")\" else {\n        return \"No\"\n    }\n    var stack = [String]()\n\
    \    var result = \"No\"\n    for str in lst {\n        if str == \"(\" {\n  \
    \          stack.append(str)\n        } else if str == \")\" {\n            if\
    \ stack.count > 0 {\n                stack.removeLast()\n            } else {\n\
    \                result = \"Yes\"\n            }\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.isEmpty {\n                result = \"\
    Yes\"\n                break\n            }\n            stack.removeLast()\n\
    \        }\n    }\n    return result", "    var stack = Stack()\n    for s in\
    \ lst {\n        if s == '(' {\n            stack.push(s)\n        } else if s\
    \ == ')' {\n            if stack.top() == '(' {\n                stack.pop()\n\
    \            } else {\n                return \"No\"\n            }\n        }\
    \ else {\n            return \"No\"\n        }\n    }\n    if stack.top() != nil\
    \ {\n        return \"No\"\n    } else {\n        return \"Yes\"\n    }", "  \
    \  var stack = [String]()\n    var result = \"No\"\n    for s in lst {\n     \
    \   if s == \"(\" {\n            stack.append(s)\n        } else if s == \")\"\
    \ {\n            if stack.isEmpty {\n                result = \"No\"\n       \
    \     } else {\n                stack.pop()\n            }\n        } else {\n\
    \            if stack.isEmpty {\n                result = \"Yes\"\n          \
    \  } else {\n                stack.pop()\n            }\n        }\n    }\n  \
    \  return result", "    var stack = [String]()\n    var res = \"\"\n    for s\
    \ in lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.isEmpty {\n                return \"No\"\
    \n            }\n            stack.removeLast()\n            if stack.isEmpty\
    \ {\n                res = res[..<res.count-1]\n            }\n        } else\
    \ {\n            if stack.isEmpty {\n                return \"No\"\n         \
    \   }\n            stack.removeLast()\n            if stack.isEmpty {\n      \
    \          res = res[..<res.count-1]\n            }\n        }\n    }\n    return\
    \ \"Yes\"", "    var stack = Stack()\n    for s in lst {\n        if s == \"(\"\
    \ {\n            stack.push(s)\n        } else if s == \")\" {\n            if\
    \ stack.top() == \"(\" {\n                stack.pop()\n            } else {\n\
    \                return \"No\"\n            }\n        } else {\n            return\
    \ \"No\"\n        }\n    }\n    if stack.top() == \"(\" {\n        return \"Yes\"\
    \n    } else {\n        return \"No\"\n    }", "    var stack = [String]()\n \
    \   var result = \"No\"\n    for s in lst {\n        if s == \"(\" || s == \"\
    {\" || s == \"[\" {\n            stack.append(s)\n        } else if s == \"}\"\
    \ || s == \"]\" {\n            if stack.last == \"(\" || stack.last == \"{\" ||\
    \ stack.last == \"[\" {\n                stack.pop()\n            } else {\n \
    \               result = \"No\"\n                break\n            }\n      \
    \  } else {\n            result = \"No\"\n            break\n        }\n    }\n\
    \    return result", "    var stack = [String]()\n    var result = \"No\"\n  \
    \  for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n    \
    \    } else if s == \")\" {\n            if stack.count > 0 {\n              \
    \  stack.removeLast()\n            } else {\n                result = \"Yes\"\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var res = \"\"\n    for s in lst {\n        if s == \"(\" {\n           \
    \ stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                return \"No\"\n            }\n            stack.removeLast()\n\
    \            if stack.isEmpty {\n                res += \"(\" + s\n          \
    \  } else {\n                res += \"(\" + stack[stack.count - 1] + \")\"\n \
    \           }\n        } else {\n            if stack.isEmpty {\n            \
    \    res += s\n            } else {\n                res += stack[stack.count\
    \ - 1] + s\n            }\n        }\n    }\n    return \"Yes\"", "    var stack\
    \ = [String]()\n    var result = \"No\"\n    for s in lst {\n        if s == \"\
    (\" {\n            stack.append(s)\n        } else if s == \")\" {\n         \
    \   if stack.count > 0 {\n                stack.removeLast()\n            } else\
    \ {\n                result = \"Yes\"\n            }\n        }\n    }\n    return\
    \ result", "    var stack = [String]()\n    var result = \"No\"\n    for s in\
    \ lst {\n        if s == \"(\" {\n            stack.append(s)\n        } else\
    \ if s == \")\" {\n            if stack.count > 0 {\n                stack.removeLast()\n\
    \            } else {\n                result = \"No\"\n            }\n      \
    \  } else {\n            if stack.count > 0 {\n                stack.removeLast()\n\
    \            } else {\n                result = \"No\"\n            }\n      \
    \  }\n    }\n    return result", "    var stack = [String]()\n    var result =\
    \ \"No\"\n    for s in lst {\n        if s == \"(\" {\n            stack.append(s)\n\
    \        } else if s == \")\" {\n            if stack.isEmpty {\n            \
    \    result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = Stack()\n\
    \    for s in lst {\n        if s == \"(\" {\n            stack.push(s)\n    \
    \    } else if s == \")\" {\n            if stack.top() == \"(\" {\n         \
    \       stack.pop()\n            } else {\n                return \"No\"\n   \
    \         }\n        } else {\n            return \"No\"\n        }\n    }\n \
    \   if stack.top() == \"(\" {\n        return \"Yes\"\n    } else {\n        return\
    \ \"No\"\n    }", "    var stack = [String]()\n    var result = \"No\"\n    for\
    \ s in lst {\n        if s == \"(\" {\n            stack.append(s)\n        }\
    \ else if s == \")\" {\n            if stack.isEmpty {\n                result\
    \ = \"Yes\"\n                break\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.last\
    \ == \"(\" {\n                stack.removeLast()\n            } else {\n     \
    \           result = \"Yes\"\n                break\n            }\n        }\
    \ else {\n            if stack.last == \")\" {\n                stack.removeLast()\n\
    \            } else {\n                result = \"No\"\n                break\n\
    \            }\n        }\n    }\n    return result", "    var stack = [String]()\n\
    \    var result = \"No\"\n    for s in lst {\n        if s == \"(\" {\n      \
    \      stack.append(s)\n        } else if s == \")\" {\n            if stack.isEmpty\
    \ {\n                result = \"No\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        } else {\n            if stack.isEmpty {\n           \
    \     result = \"Yes\"\n            } else {\n                stack.removeLast()\n\
    \            }\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

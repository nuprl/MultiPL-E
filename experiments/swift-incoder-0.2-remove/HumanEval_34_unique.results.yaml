language: swift
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var unique = [Int]()\n    for x in l {\n        if !contains(unique,\
    \ x) {\n            unique.append(x)\n        }\n    }\n    return unique\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmprt3d0viw.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for element in l {\n        if !contains(result,\
    \ element) {\n            result.append(element)\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(unique(l: [5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp8jea649u.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, element) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for element in l {\n        if !contains(result,\
    \ element) {\n            result.append(element)\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(unique(l: [5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0wman639.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, element) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var unique = [Int]()\n    for x in l {\n        if !contains(unique,\
    \ x) {\n            unique.append(x)\n        }\n    }\n    return unique\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmprt3d0viw.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: -4
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var uniques = [Int]()\n    for x in l {\n        if !uniques.contains(x)\
    \ {\n            uniques.append(x)\n        }\n    }\n    return uniques\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: Exception
  stderr: 'tmpn9t5mdni/tmpn9t5mdni.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5aeee84c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5aeeb7bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5aeeb7b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5aeeb7a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn9t5mdni                        0x000055e574cb1695 <unavailable> + 5781

    5    libc.so.6                          0x00002b5aef070460 __libc_start_main +
    245

    6    tmpn9t5mdni                        0x000055e574cb1249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for element in l {\n        if !contains(result,\
    \ element) {\n            result.append(element)\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(unique(l: [5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp8jea649u.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, element) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var unique = [Int]()\n    for x in l {\n        if !contains(unique,\
    \ x) {\n            unique.append(x)\n        }\n    }\n    return unique\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmprt3d0viw.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for element in l {\n        if !contains(result,\
    \ element) {\n            result.append(element)\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(unique(l: [5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0wman639.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, element) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for element in l {\n        if !contains(result,\
    \ element) {\n            result.append(element)\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(unique(l: [5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp8jea649u.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, element) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for element in l {\n        if !contains(result,\
    \ element) {\n            result.append(element)\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(unique(l: [5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp8jea649u.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, element) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for element in l {\n        if !contains(result,\
    \ element) {\n            result.append(element)\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(unique(l: [5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp8jea649u.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, element) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var unique = [Int]()\n    for x in l {\n        if !contains(unique,\
    \ x) {\n            unique.append(x)\n        }\n    }\n    return unique\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmprt3d0viw.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for element in l {\n        if !contains(result,\
    \ element) {\n            result.append(element)\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(unique(l: [5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp8jea649u.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, element) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var unique = [Int]()\n    for x in l {\n        if !contains(unique,\
    \ x) {\n            unique.append(x)\n        }\n    }\n    return unique\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmprt3d0viw.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result: [Int] = []\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp0q6x3dxf.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for x in l {\n        if !contains(result,\
    \ x) {\n            result.append(x)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmphh1kydym.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, x) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\nfunc unique(l: [Int]) ->\
    \ [Int] {\n    var result = [Int]()\n    for el in l {\n        if !contains(result,\
    \ el) {\n            result.append(el)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp92o5brwz.swift:6:13: error: cannot find 'contains' in scope\n \
    \       if !contains(result, el) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013800

name: HumanEval_0_has_close_elements
language: swift
prompt: "\n/// Check if in given list of numbers, are any two numbers closer to each\
  \ other than\n/// given threshold.\nfunc has_close_elements(numbers: [Double], threshold:\
  \ Double) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(has_close_elements(numbers: [1.0, 2.0, 3.9,\
  \ 4.0, 5.0, 2.2], threshold: 0.3) == true)\nassert(has_close_elements(numbers: [1.0,\
  \ 2.0, 3.9, 4.0, 5.0, 2.2], threshold: 0.05) == false)\nassert(has_close_elements(numbers:\
  \ [1.0, 2.0, 5.9, 4.0, 5.0], threshold: 0.95) == true)\nassert(has_close_elements(numbers:\
  \ [1.0, 2.0, 5.9, 4.0, 5.0], threshold: 0.8) == false)\nassert(has_close_elements(numbers:\
  \ [1.0, 2.0, 3.0, 4.0, 5.0, 2.0], threshold: 0.1) == true)\nassert(has_close_elements(numbers:\
  \ [1.1, 2.2, 3.1, 4.1, 5.1], threshold: 1.0) == true)\nassert(has_close_elements(numbers:\
  \ [1.1, 2.2, 3.1, 4.1, 5.1], threshold: 0.5) == false)"
completions: []
stop_tokens:
- "\n}"

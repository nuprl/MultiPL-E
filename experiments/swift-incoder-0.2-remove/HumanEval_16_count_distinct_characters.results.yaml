language: swift
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 2\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpaog4zfgm.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpaog4zfgm.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        } else {\n            distinctCharacterCount++\n        }\n    }\n  \
    \  return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpo6vp8t2k.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpo6vp8t2k.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmpo6vp8t2k.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpo6vp8t2k.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n/tmp/tmpo6vp8t2k.swift:11:35: error: cannot\
    \ find operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let character = character {\n            if let lowerCaseCharacter\
    \ = character.lowercaseString {\n                if let upperCaseCharacter = lowerCaseCharacter.uppercaseString\
    \ {\n                    if lowerCaseCharacter != upperCaseCharacter {\n     \
    \                   distinctCharacterCount++\n                    }\n        \
    \        }\n            }\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpggtuaaqa.swift:7:51: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n            if let lowerCaseCharacter = character.lowercaseString\
    \ {\n                                        ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpggtuaaqa.swift:10:47:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \              distinctCharacterCount++\n                                    \
    \          ^~\n/tmp/tmpggtuaaqa.swift:6:12: error: initializer for conditional\
    \ binding must have Optional type, not 'Character'\n        if let character =\
    \ character {\n           ^               ~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        guard let\
    \ character = character else { continue }\n        if let index = string.index(of:\
    \ character) {\n            count = count + 1\n            string = string.substring(to:\
    \ index)\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpkom8s02_.swift:6:15: error: initializer for conditional binding\
    \ must have Optional type, not 'Character'\n        guard let character = character\
    \ else { continue }\n              ^               ~~~~~~~~~\n/tmp/tmpkom8s02_.swift:7:31:\
    \ warning: 'index(of:)' is deprecated: renamed to 'firstIndex(of:)'\n        if\
    \ let index = string.index(of: character) {\n                              ^\n\
    /tmp/tmpkom8s02_.swift:7:31: note: use 'firstIndex(of:)' instead\n        if let\
    \ index = string.index(of: character) {\n                              ^~~~~\n\
    \                              firstIndex\n/tmp/tmpkom8s02_.swift:9:13: error:\
    \ cannot assign to value: 'string' is a 'let' constant\n            string = string.substring(to:\
    \ index)\n            ^~~~~~\n/tmp/tmpkom8s02_.swift:9:29: error: value of type\
    \ 'String' has no member 'substring'\n            string = string.substring(to:\
    \ index)\n                     ~~~~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = Set<Character>()\n    for character in\
    \ string {\n        distinctCharacters.insert(character)\n    }\n    return distinctCharacters.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp5kitto7x/tmp5kitto7x.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7b9288c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7b8f7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7b8f7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7b8f7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5kitto7x                        0x000055b8a0f2e5f1 <unavailable> + 5617

    5    libc.so.6                          0x00002ab7b9474460 __libc_start_main +
    245

    6    tmp5kitto7x                        0x000055b8a0f2e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacters += 1\n        } else {\n            distinctCharacters\
    \ += 2\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1hejk2cf.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp1hejk2cf.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        } else {\n \
    \           count += 2\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpto7l1jf4.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpto7l1jf4.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if let _ = character.unicodeScalars.first {\n            distinctCharacters\
    \ += 1\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp0rj53vp3/tmp0rj53vp3.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adc9d155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adc9ce4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adc9ce4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adc9ce4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0rj53vp3                        0x000055b7ba9fe5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002adc9d341460 __libc_start_main +
    245

    6    tmp0rj53vp3                        0x000055b7ba9fe109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let lowercaseCharacter = character.lowercaseString {\n           \
    \ if lowercaseCharacter != character {\n                distinctCharacterCount\
    \ += 1\n            }\n        } else {\n            if character != character.lowercaseString\
    \ {\n                distinctCharacterCount += 1\n            }\n        }\n \
    \   }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpewwvpd00.swift:6:47: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if let lowercaseCharacter = character.lowercaseString\
    \ {\n                                    ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpewwvpd00.swift:11:39:\
    \ error: value of type 'Character' has no member 'lowercaseString'\n         \
    \   if character != character.lowercaseString {\n                            ~~~~~~~~~\
    \ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.characters {\n        if let\
    \ _ = string.range(of: String(format: \"%c\", c)) {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpkx6q7lcs.swift:5:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in string.characters {\n                    ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpkx6q7lcs.swift:6:37:\
    \ error: no exact matches in call to initializer \n        if let _ = string.range(of:\
    \ String(format: \"%c\", c)) {\n                                    ^\n/tmp/tmpkx6q7lcs.swift:6:37:\
    \ note: found candidate with type '(String) -> String'\n        if let _ = string.range(of:\
    \ String(format: \"%c\", c)) {\n                                    ^\n/tmp/tmpkx6q7lcs.swift:6:37:\
    \ note: found candidate with type '(String, Int) -> String'\n        if let _\
    \ = string.range(of: String(format: \"%c\", c)) {\n                          \
    \          ^\n/tmp/tmpkx6q7lcs.swift:6:27: error: value of type 'String' has no\
    \ member 'range'\n        if let _ = string.range(of: String(format: \"%c\", c))\
    \ {\n                   ~~~~~~ ^~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        distinctCharacterCount += 1\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpfugyizap/tmpfugyizap.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c94af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfugyizap                        0x000055f70e4ca471 <unavailable> + 5233

    5    libc.so.6                          0x00002b3c94fef460 __libc_start_main +
    245

    6    tmpfugyizap                        0x000055f70e4c9fa9 <unavailable> + 4009

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpvz97yu4z/tmpvz97yu4z.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8abdcd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8abd9c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8abd9c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8abd9c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvz97yu4z                        0x000055cbd6b694c1 <unavailable> + 5313

    5    libc.so.6                          0x00002b8abdebe460 __libc_start_main +
    245

    6    tmpvz97yu4z                        0x000055cbd6b68ff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        guard let\
    \ character = character else { return 0 }\n        if let upperCase = character.unicodeScalars.filter({\
    \ $0.isUppercase }).count {\n            count += upperCase\n        }\n     \
    \   if let lowerCase = character.unicodeScalars.filter({ $0.isLowercase }).count\
    \ {\n            count += lowerCase\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppx49m_1q.swift:6:15: error: initializer for conditional binding\
    \ must have Optional type, not 'Character'\n        guard let character = character\
    \ else { return 0 }\n              ^               ~~~~~~~~~\n/tmp/tmppx49m_1q.swift:7:65:\
    \ error: value of type 'Unicode.Scalar' has no member 'isUppercase'\n        if\
    \ let upperCase = character.unicodeScalars.filter({ $0.isUppercase }).count {\n\
    \                                                             ~~ ^~~~~~~~~~~\n\
    /tmp/tmppx49m_1q.swift:10:65: error: value of type 'Unicode.Scalar' has no member\
    \ 'isLowercase'\n        if let lowerCase = character.unicodeScalars.filter({\
    \ $0.isLowercase }).count {\n                                                \
    \             ~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = Set<Character>()\n    for character in\
    \ string {\n        distinctCharacters.insert(character)\n    }\n    return distinctCharacters.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp5kitto7x/tmp5kitto7x.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7b9288c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7b8f7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7b8f7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7b8f7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5kitto7x                        0x000055b8a0f2e5f1 <unavailable> + 5617

    5    libc.so.6                          0x00002ab7b9474460 __libc_start_main +
    245

    6    tmp5kitto7x                        0x000055b8a0f2e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = Set<Character>()\n    for character in\
    \ string {\n        distinctCharacters.insert(character)\n    }\n    return distinctCharacters.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp5kitto7x/tmp5kitto7x.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7b9288c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7b8f7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7b8f7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7b8f7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5kitto7x                        0x000055b8a0f2e5f1 <unavailable> + 5617

    5    libc.so.6                          0x00002ab7b9474460 __libc_start_main +
    245

    6    tmp5kitto7x                        0x000055b8a0f2e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpvz97yu4z/tmpvz97yu4z.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8abdcd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8abd9c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8abd9c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8abd9c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvz97yu4z                        0x000055cbd6b694c1 <unavailable> + 5313

    5    libc.so.6                          0x00002b8abdebe460 __libc_start_main +
    245

    6    tmpvz97yu4z                        0x000055cbd6b68ff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = Set<Character>()\n    for character in\
    \ string {\n        distinctCharacters.insert(character)\n    }\n    return distinctCharacters.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp5kitto7x/tmp5kitto7x.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7b9288c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7b8f7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7b8f7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7b8f7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5kitto7x                        0x000055b8a0f2e5f1 <unavailable> + 5617

    5    libc.so.6                          0x00002ab7b9474460 __libc_start_main +
    245

    6    tmp5kitto7x                        0x000055b8a0f2e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacters++\n\
    \        } else if character == character.capitalizedString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpmhyajjup.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpmhyajjup.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n/tmp/tmpmhyajjup.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpmhyajjup.swift:9:31: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacters++\n\
    \                              ^~\n/tmp/tmpmhyajjup.swift:10:42: error: value\
    \ of type 'Character' has no member 'capitalizedString'\n        } else if character\
    \ == character.capitalizedString {\n                               ~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmpmhyajjup.swift:11:31: error: cannot find operator '++' in scope; did you\
    \ mean '+= 1'?\n            distinctCharacters++\n                           \
    \   ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount += 1\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpv87q3e0o/tmpv87q3e0o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af3fe7ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af3fe4c3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af3fe4c3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af3fe4c27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv87q3e0o                        0x0000556fd30e04c1 <unavailable> + 5313

    5    libc.so.6                          0x00002af3fe9b8460 __libc_start_main +
    245

    6    tmpv87q3e0o                        0x0000556fd30dfff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        distinctCharacterCount += 1\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpfugyizap/tmpfugyizap.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c94af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfugyizap                        0x000055f70e4ca471 <unavailable> + 5233

    5    libc.so.6                          0x00002b3c94fef460 __libc_start_main +
    245

    6    tmpfugyizap                        0x000055f70e4c9fa9 <unavailable> + 4009

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp__tu1ziy.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp__tu1ziy.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n/tmp/tmp__tu1ziy.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp__tu1ziy.swift:9:31: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacters++\n\
    \                              ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp0zazgafd.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp0zazgafd.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp__tu1ziy.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp__tu1ziy.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n/tmp/tmp__tu1ziy.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp__tu1ziy.swift:9:31: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacters++\n\
    \                              ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 2\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpaog4zfgm.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpaog4zfgm.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if let _\
    \ = character.unicodeScalars.first?.unicodeScalars.first {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp7fio3a74.swift:6:67: error: type of expression is ambiguous without\
    \ more context\n        if let _ = character.unicodeScalars.first?.unicodeScalars.first\
    \ {\n                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.capitalizedString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpcgy_sfag.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpcgy_sfag.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmpcgy_sfag.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpcgy_sfag.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n/tmp/tmpcgy_sfag.swift:10:42: error: value\
    \ of type 'Character' has no member 'capitalizedString'\n        } else if character\
    \ == character.capitalizedString {\n                               ~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcgy_sfag.swift:11:35: error: cannot find operator '++' in scope; did you\
    \ mean '+= 1'?\n            distinctCharacterCount++\n                       \
    \           ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters\
    \ = distinctCharacters + 1\n        }\n    }\n    return distinctCharacters\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp14xvkrvr.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.unicodeScalars {\n        if\
    \ !c.isUppercase() && !c.isLowercase() {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpt7xfwcqm.swift:6:15: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n        if !c.isUppercase() && !c.isLowercase() {\n\
    \            ~ ^~~~~~~~~~~\n/tmp/tmpt7xfwcqm.swift:6:35: error: value of type\
    \ 'Unicode.Scalar' has no member 'isLowercase'\n        if !c.isUppercase() &&\
    \ !c.isLowercase() {\n                                ~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount += 1\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpv87q3e0o/tmpv87q3e0o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af3fe7ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af3fe4c3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af3fe4c3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af3fe4c27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv87q3e0o                        0x0000556fd30e04c1 <unavailable> + 5313

    5    libc.so.6                          0x00002af3fe9b8460 __libc_start_main +
    245

    6    tmpv87q3e0o                        0x0000556fd30dfff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = Set<Character>()\n    for character in\
    \ string {\n        distinctCharacters.insert(character)\n    }\n    return distinctCharacters.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp5kitto7x/tmp5kitto7x.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7b9288c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7b8f7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7b8f7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7b8f7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5kitto7x                        0x000055b8a0f2e5f1 <unavailable> + 5617

    5    libc.so.6                          0x00002ab7b9474460 __libc_start_main +
    245

    6    tmp5kitto7x                        0x000055b8a0f2e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 2\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpaog4zfgm.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpaog4zfgm.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        distinctCharacterCount += 1\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpfugyizap/tmpfugyizap.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c94af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfugyizap                        0x000055f70e4ca471 <unavailable> + 5233

    5    libc.so.6                          0x00002b3c94fef460 __libc_start_main +
    245

    6    tmpfugyizap                        0x000055f70e4c9fa9 <unavailable> + 4009

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacters++\n\
    \        } else if character == character.capitalizedString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpmhyajjup.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpmhyajjup.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n/tmp/tmpmhyajjup.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpmhyajjup.swift:9:31: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacters++\n\
    \                              ^~\n/tmp/tmpmhyajjup.swift:10:42: error: value\
    \ of type 'Character' has no member 'capitalizedString'\n        } else if character\
    \ == character.capitalizedString {\n                               ~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmpmhyajjup.swift:11:31: error: cannot find operator '++' in scope; did you\
    \ mean '+= 1'?\n            distinctCharacters++\n                           \
    \   ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacters += 1\n        }\n    }\n    return distinctCharacters\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpdc1fxgag.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpdc1fxgag.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp0zazgafd.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp0zazgafd.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else if character == character.capitalizedString\
    \ {\n            distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpudoh3oqb.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpudoh3oqb.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpudoh3oqb.swift:10:42: error: value of\
    \ type 'Character' has no member 'capitalizedString'\n        } else if character\
    \ == character.capitalizedString {\n                               ~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp75pie3f.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpp75pie3f.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1fs4oq4b.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else if character == character.capitalizedString\
    \ {\n            distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpudoh3oqb.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpudoh3oqb.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpudoh3oqb.swift:10:42: error: value of\
    \ type 'Character' has no member 'capitalizedString'\n        } else if character\
    \ == character.capitalizedString {\n                               ~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp75pie3f.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpp75pie3f.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp75pie3f.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpp75pie3f.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if let _\
    \ = character.unicodeScalars.first {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp1ki91okn/tmp1ki91okn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93980e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9397dd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9397dd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9397dd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1ki91okn                        0x000056084d7045d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b93982ce460 __libc_start_main +
    245

    6    tmp1ki91okn                        0x000056084d704109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = Set<Character>()\n    for character in\
    \ string {\n        distinctCharacters.insert(character)\n    }\n    return distinctCharacters.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp5kitto7x/tmp5kitto7x.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7b9288c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7b8f7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7b8f7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7b8f7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5kitto7x                        0x000055b8a0f2e5f1 <unavailable> + 5617

    5    libc.so.6                          0x00002ab7b9474460 __libc_start_main +
    245

    6    tmp5kitto7x                        0x000055b8a0f2e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if let _ = character.unicodeScalars.first {\n            distinctCharacters\
    \ += 1\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp0rj53vp3/tmp0rj53vp3.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adc9d155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adc9ce4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adc9ce4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adc9ce4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0rj53vp3                        0x000055b7ba9fe5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002adc9d341460 __libc_start_main +
    245

    6    tmp0rj53vp3                        0x000055b7ba9fe109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp75pie3f.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpp75pie3f.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1fs4oq4b.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp09uxzmh.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.characters {\n        if let\
    \ _ = string.range(of: String(format: \"%c\", c)) {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpkx6q7lcs.swift:5:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in string.characters {\n                    ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpkx6q7lcs.swift:6:37:\
    \ error: no exact matches in call to initializer \n        if let _ = string.range(of:\
    \ String(format: \"%c\", c)) {\n                                    ^\n/tmp/tmpkx6q7lcs.swift:6:37:\
    \ note: found candidate with type '(String) -> String'\n        if let _ = string.range(of:\
    \ String(format: \"%c\", c)) {\n                                    ^\n/tmp/tmpkx6q7lcs.swift:6:37:\
    \ note: found candidate with type '(String, Int) -> String'\n        if let _\
    \ = string.range(of: String(format: \"%c\", c)) {\n                          \
    \          ^\n/tmp/tmpkx6q7lcs.swift:6:27: error: value of type 'String' has no\
    \ member 'range'\n        if let _ = string.range(of: String(format: \"%c\", c))\
    \ {\n                   ~~~~~~ ^~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else if character == character.capitalizedString\
    \ {\n            distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpudoh3oqb.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpudoh3oqb.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpudoh3oqb.swift:10:42: error: value of\
    \ type 'Character' has no member 'capitalizedString'\n        } else if character\
    \ == character.capitalizedString {\n                               ~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let lowercaseCharacter = character.lowercaseString {\n           \
    \ if let lowercaseCharacterCount = distinctCharacterCount.lowercaseString {\n\
    \                distinctCharacterCount = lowercaseCharacterCount + 1\n      \
    \      } else {\n                distinctCharacterCount = lowercaseCharacter\n\
    \            }\n        } else {\n            if let uppercaseCharacter = character.uppercaseString\
    \ {\n                if let uppercaseCharacterCount = distinctCharacterCount.uppercaseString\
    \ {\n                    distinctCharacterCount = uppercaseCharacterCount + 1\n\
    \                } else {\n                    distinctCharacterCount = uppercaseCharacter\n\
    \                }\n            } else {\n                if let lowercaseCharacterCount\
    \ = distinctCharacterCount.lowercaseString {\n                    distinctCharacterCount\
    \ = lowercaseCharacterCount + 1\n                } else {\n                  \
    \  distinctCharacterCount = character\n                }\n            }\n    \
    \    }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp9oim3qh.swift:6:47: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if let lowercaseCharacter = character.lowercaseString\
    \ {\n                                    ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpp9oim3qh.swift:7:69:\
    \ error: value of type 'Int' has no member 'lowercaseString'\n            if let\
    \ lowercaseCharacterCount = distinctCharacterCount.lowercaseString {\n       \
    \                                      ~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpp9oim3qh.swift:13:51: error: value of type 'Character' has no member 'uppercaseString'\n\
    \            if let uppercaseCharacter = character.uppercaseString {\n       \
    \                                 ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpp9oim3qh.swift:14:73:\
    \ error: value of type 'Int' has no member 'uppercaseString'\n               \
    \ if let uppercaseCharacterCount = distinctCharacterCount.uppercaseString {\n\
    \                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpp9oim3qh.swift:20:73: error: value of type 'Int' has no member 'lowercaseString'\n\
    \                if let lowercaseCharacterCount = distinctCharacterCount.lowercaseString\
    \ {\n                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~\n\
    /tmp/tmpp9oim3qh.swift:23:46: error: cannot assign value of type 'Character' to\
    \ type 'Int'\n                    distinctCharacterCount = character\n       \
    \                                      ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if let _ = character.lowercaseString {\n            distinctCharacters\
    \ += 1\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpwzm3fllw.swift:6:30: error: type of expression is ambiguous without\
    \ more context\n        if let _ = character.lowercaseString {\n             \
    \      ~~~~~~~~~~^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp75pie3f.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpp75pie3f.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 2\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpaog4zfgm.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpaog4zfgm.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.unicodeScalars {\n        if\
    \ !c.isUppercase && !c.isLowercase && !c.isTitlecase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpl2biwe_w.swift:6:15: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n        if !c.isUppercase && !c.isLowercase && !c.isTitlecase\
    \ {\n            ~ ^~~~~~~~~~~\n/tmp/tmpl2biwe_w.swift:6:33: error: value of type\
    \ 'Unicode.Scalar' has no member 'isLowercase'\n        if !c.isUppercase && !c.isLowercase\
    \ && !c.isTitlecase {\n                              ~ ^~~~~~~~~~~\n/tmp/tmpl2biwe_w.swift:6:51:\
    \ error: value of type 'Unicode.Scalar' has no member 'isTitlecase'\n        if\
    \ !c.isUppercase && !c.isLowercase && !c.isTitlecase {\n                     \
    \                           ~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp09uxzmh.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp0zazgafd.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp0zazgafd.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        distinctCharacterCount += 1\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpfugyizap/tmpfugyizap.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c94af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfugyizap                        0x000055f70e4ca471 <unavailable> + 5233

    5    libc.so.6                          0x00002b3c94fef460 __libc_start_main +
    245

    6    tmpfugyizap                        0x000055f70e4c9fa9 <unavailable> + 4009

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1fs4oq4b.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character {\n            distinctCharacters = distinctCharacters\
    \ + 1\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpwyeuyrlz/tmpwyeuyrlz.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b15bc1cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b15bbec5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b15bbec5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b15bbec47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwyeuyrlz                        0x000055b2bb1d541a <unavailable> + 5146

    5    libc.so.6                          0x00002b15bc3ba460 __libc_start_main +
    245

    6    tmpwyeuyrlz                        0x000055b2bb1d4ff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if let _ = character.unicodeScalars.first {\n            distinctCharacters\
    \ += 1\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp0rj53vp3/tmp0rj53vp3.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adc9d155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adc9ce4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adc9ce4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adc9ce4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0rj53vp3                        0x000055b7ba9fe5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002adc9d341460 __libc_start_main +
    245

    6    tmp0rj53vp3                        0x000055b7ba9fe109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters\
    \ = distinctCharacters + 1\n        }\n    }\n    return distinctCharacters\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp14xvkrvr.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters\
    \ = distinctCharacters + 1\n        }\n    }\n    return distinctCharacters\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp14xvkrvr.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 2\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpaog4zfgm.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpaog4zfgm.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        } else {\n            distinctCharacterCount++\n        }\n    }\n  \
    \  return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpo6vp8t2k.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpo6vp8t2k.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmpo6vp8t2k.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpo6vp8t2k.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n/tmp/tmpo6vp8t2k.swift:11:35: error: cannot\
    \ find operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if let _\
    \ = character.unicodeScalars.first?.uppercase {\n            count += 1\n    \
    \    }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpf9jo04nj.swift:6:52: error: value of type 'Unicode.Scalar' has\
    \ no member 'uppercase'\n        if let _ = character.unicodeScalars.first?.uppercase\
    \ {\n                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        distinctCharacterCount += 1\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpfugyizap/tmpfugyizap.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c94af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfugyizap                        0x000055f70e4ca471 <unavailable> + 5233

    5    libc.so.6                          0x00002b3c94fef460 __libc_start_main +
    245

    6    tmpfugyizap                        0x000055f70e4c9fa9 <unavailable> + 4009

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if let _ = character.unicodeScalars.first {\n            distinctCharacters\
    \ = distinctCharacters + 1\n        }\n    }\n    return distinctCharacters\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp_p92a_au/tmp_p92a_au.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc60049c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc5fd40b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc5fd40988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc5fd3f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_p92a_au                        0x000055b618c3a5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002acc60235460 __libc_start_main +
    245

    6    tmp_p92a_au                        0x000055b618c3a109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters\
    \ = distinctCharacters + 1\n        }\n    }\n    return distinctCharacters\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp14xvkrvr.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacters += 1\n        } else {\n            distinctCharacters\
    \ += 1\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmphxo_iag2.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmphxo_iag2.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacters += 1\n        } else {\n            distinctCharacters\
    \ += 1\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmphxo_iag2.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmphxo_iag2.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp0zazgafd.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp0zazgafd.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp0zazgafd.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp0zazgafd.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if let _\
    \ = character.unicodeScalars.first {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp1ki91okn/tmp1ki91okn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93980e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9397dd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9397dd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9397dd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1ki91okn                        0x000056084d7045d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b93982ce460 __libc_start_main +
    245

    6    tmp1ki91okn                        0x000056084d704109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacters++\n\
    \        } else {\n            distinctCharacters += 1\n        }\n    }\n   \
    \ return distinctCharacters\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpgkzrp8kg.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpgkzrp8kg.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n/tmp/tmpgkzrp8kg.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpgkzrp8kg.swift:9:31: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacters++\n\
    \                              ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters\
    \ = distinctCharacters + 1\n        }\n    }\n    return distinctCharacters\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp14xvkrvr.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if let _ = character.unicodeScalars.first {\n            distinctCharacters\
    \ += 1\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp0rj53vp3/tmp0rj53vp3.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adc9d155c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adc9ce4cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adc9ce4c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adc9ce4b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0rj53vp3                        0x000055b7ba9fe5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002adc9d341460 __libc_start_main +
    245

    6    tmp0rj53vp3                        0x000055b7ba9fe109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1fs4oq4b.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.unicodeScalars {\n        if\
    \ !c.isUppercase && !c.isLowercase && !c.isTitlecase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpl2biwe_w.swift:6:15: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n        if !c.isUppercase && !c.isLowercase && !c.isTitlecase\
    \ {\n            ~ ^~~~~~~~~~~\n/tmp/tmpl2biwe_w.swift:6:33: error: value of type\
    \ 'Unicode.Scalar' has no member 'isLowercase'\n        if !c.isUppercase && !c.isLowercase\
    \ && !c.isTitlecase {\n                              ~ ^~~~~~~~~~~\n/tmp/tmpl2biwe_w.swift:6:51:\
    \ error: value of type 'Unicode.Scalar' has no member 'isTitlecase'\n        if\
    \ !c.isUppercase && !c.isLowercase && !c.isTitlecase {\n                     \
    \                           ~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = Set<Character>()\n    for character in\
    \ string {\n        distinctCharacters.insert(character)\n    }\n    return distinctCharacters.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp5kitto7x/tmp5kitto7x.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7b9288c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7b8f7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7b8f7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7b8f7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5kitto7x                        0x000055b8a0f2e5f1 <unavailable> + 5617

    5    libc.so.6                          0x00002ab7b9474460 __libc_start_main +
    245

    6    tmp5kitto7x                        0x000055b8a0f2e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 2\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpaog4zfgm.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpaog4zfgm.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.unicodeScalars {\n        if\
    \ !c.isUppercase() && !c.isLowercase() && !c.isTitlecase() {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpkl5g76df.swift:6:15: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n        if !c.isUppercase() && !c.isLowercase() &&\
    \ !c.isTitlecase() {\n            ~ ^~~~~~~~~~~\n/tmp/tmpkl5g76df.swift:6:35:\
    \ error: value of type 'Unicode.Scalar' has no member 'isLowercase'\n        if\
    \ !c.isUppercase() && !c.isLowercase() && !c.isTitlecase() {\n               \
    \                 ~ ^~~~~~~~~~~\n/tmp/tmpkl5g76df.swift:6:55: error: value of\
    \ type 'Unicode.Scalar' has no member 'isTitlecase'\n        if !c.isUppercase()\
    \ && !c.isLowercase() && !c.isTitlecase() {\n                                \
    \                    ~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1fs4oq4b.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        } else {\n            distinctCharacterCount++\n        }\n    }\n  \
    \  return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpo6vp8t2k.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpo6vp8t2k.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmpo6vp8t2k.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpo6vp8t2k.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n/tmp/tmpo6vp8t2k.swift:11:35: error: cannot\
    \ find operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character {\n            distinctCharacters++\n       \
    \ }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpcp49oup2.swift:7:31: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacters++\n                   \
    \           ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character {\n            distinctCharacters = distinctCharacters\
    \ + 1\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpwyeuyrlz/tmpwyeuyrlz.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b15bc1cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b15bbec5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b15bbec5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b15bbec47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwyeuyrlz                        0x000055b2bb1d541a <unavailable> + 5146

    5    libc.so.6                          0x00002b15bc3ba460 __libc_start_main +
    245

    6    tmpwyeuyrlz                        0x000055b2bb1d4ff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp75pie3f.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpp75pie3f.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let character = character {\n            if character == character.lowercaseString\
    \ {\n                distinctCharacterCount += 1\n            } else if character\
    \ == character.uppercaseString {\n                distinctCharacterCount += 1\n\
    \            } else {\n                distinctCharacterCount += 2\n         \
    \   }\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1wy6sb_8.swift:7:39: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n            if character == character.lowercaseString {\n\
    \                            ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp1wy6sb_8.swift:9:46:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n         \
    \   } else if character == character.uppercaseString {\n                     \
    \              ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp1wy6sb_8.swift:6:12: error:\
    \ initializer for conditional binding must have Optional type, not 'Character'\n\
    \        if let character = character {\n           ^               ~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        distinctCharacterCount += 1\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpfugyizap/tmpfugyizap.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c94af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfugyizap                        0x000055f70e4ca471 <unavailable> + 5233

    5    libc.so.6                          0x00002b3c94fef460 __libc_start_main +
    245

    6    tmpfugyizap                        0x000055f70e4c9fa9 <unavailable> + 4009

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp09uxzmh.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let character = character {\n            distinctCharacterCount +=\
    \ 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpx_sdktvg.swift:6:12: error: initializer for conditional binding\
    \ must have Optional type, not 'Character'\n        if let character = character\
    \ {\n           ^               ~~~~~~~~~\n/tmp/tmpx_sdktvg.swift:6:16: warning:\
    \ value 'character' was defined but never used; consider replacing with boolean\
    \ test\n        if let character = character {\n           ~~~~^~~~~~~~~~~~\n\
    \                                     != nil\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.unicodeScalars {\n        if\
    \ !c.isUppercase() && !c.isLowercase() && !c.isTitlecase() {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpkl5g76df.swift:6:15: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n        if !c.isUppercase() && !c.isLowercase() &&\
    \ !c.isTitlecase() {\n            ~ ^~~~~~~~~~~\n/tmp/tmpkl5g76df.swift:6:35:\
    \ error: value of type 'Unicode.Scalar' has no member 'isLowercase'\n        if\
    \ !c.isUppercase() && !c.isLowercase() && !c.isTitlecase() {\n               \
    \                 ~ ^~~~~~~~~~~\n/tmp/tmpkl5g76df.swift:6:55: error: value of\
    \ type 'Unicode.Scalar' has no member 'isTitlecase'\n        if !c.isUppercase()\
    \ && !c.isLowercase() && !c.isTitlecase() {\n                                \
    \                    ~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        guard let\
    \ _ = character.unicodeScalars.first else { continue }\n        count += 1\n \
    \   }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpsrt1g1q7/tmpsrt1g1q7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b86f8684c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b86f837bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b86f837b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b86f837a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsrt1g1q7                        0x0000564023e635d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b86f8870460 __libc_start_main +
    245

    6    tmpsrt1g1q7                        0x0000564023e63109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.unicodeScalars {\n        if\
    \ !c.isUppercase() && !c.isLowercase() && !c.isTitlecase() {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpkl5g76df.swift:6:15: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n        if !c.isUppercase() && !c.isLowercase() &&\
    \ !c.isTitlecase() {\n            ~ ^~~~~~~~~~~\n/tmp/tmpkl5g76df.swift:6:35:\
    \ error: value of type 'Unicode.Scalar' has no member 'isLowercase'\n        if\
    \ !c.isUppercase() && !c.isLowercase() && !c.isTitlecase() {\n               \
    \                 ~ ^~~~~~~~~~~\n/tmp/tmpkl5g76df.swift:6:55: error: value of\
    \ type 'Unicode.Scalar' has no member 'isTitlecase'\n        if !c.isUppercase()\
    \ && !c.isLowercase() && !c.isTitlecase() {\n                                \
    \                    ~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp09uxzmh.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = Set<Character>()\n    for character in\
    \ string {\n        distinctCharacters.insert(character)\n    }\n    return distinctCharacters.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp5kitto7x/tmp5kitto7x.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7b9288c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7b8f7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7b8f7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7b8f7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5kitto7x                        0x000055b8a0f2e5f1 <unavailable> + 5617

    5    libc.so.6                          0x00002ab7b9474460 __libc_start_main +
    245

    6    tmp5kitto7x                        0x000055b8a0f2e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.characters {\n        if let\
    \ _ = c.isUppercase {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpfrpr5bbb.swift:5:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in string.characters {\n                    ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpfrpr5bbb.swift:6:12:\
    \ error: initializer for conditional binding must have Optional type, not 'Bool'\n\
    \        if let _ = c.isUppercase {\n           ^       ~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp__tu1ziy.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp__tu1ziy.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n/tmp/tmp__tu1ziy.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp__tu1ziy.swift:9:31: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacters++\n\
    \                              ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        distinctCharacterCount += 1\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpfugyizap/tmpfugyizap.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c94af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfugyizap                        0x000055f70e4ca471 <unavailable> + 5233

    5    libc.so.6                          0x00002b3c94fef460 __libc_start_main +
    245

    6    tmpfugyizap                        0x000055f70e4c9fa9 <unavailable> + 4009

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1fs4oq4b.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if let _\
    \ = character.unicodeScalars.first {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp1ki91okn/tmp1ki91okn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93980e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9397dd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9397dd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9397dd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1ki91okn                        0x000056084d7045d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b93982ce460 __libc_start_main +
    245

    6    tmp1ki91okn                        0x000056084d704109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character.lowercaseString {\n            distinctCharacters\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacters += 1\n        } else {\n            distinctCharacters\
    \ += 2\n        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1hejk2cf.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp1hejk2cf.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp09uxzmh.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        } else {\n            distinctCharacterCount++\n        }\n    }\n  \
    \  return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpo6vp8t2k.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpo6vp8t2k.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmpo6vp8t2k.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpo6vp8t2k.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n/tmp/tmpo6vp8t2k.swift:11:35: error: cannot\
    \ find operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        } else {\n \
    \           count += 2\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpto7l1jf4.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpto7l1jf4.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else if character == character.capitalizedString\
    \ {\n            distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpudoh3oqb.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpudoh3oqb.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpudoh3oqb.swift:10:42: error: value of\
    \ type 'Character' has no member 'capitalizedString'\n        } else if character\
    \ == character.capitalizedString {\n                               ~~~~~~~~~ ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for c in string.characters {\n        if let\
    \ _ = string.range(of: String(c.lowercased())) {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpf_h6183b.swift:5:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in string.characters {\n                    ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpf_h6183b.swift:6:27:\
    \ error: value of type 'String' has no member 'range'\n        if let _ = string.range(of:\
    \ String(c.lowercased())) {\n                   ~~~~~~ ^~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character {\n            distinctCharacters += 1\n    \
    \    }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp_rpp_eat/tmp_rpp_eat.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b90f4175c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b90f3e6cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b90f3e6c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b90f3e6b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_rpp_eat                        0x00005556483e34c1 <unavailable> + 5313

    5    libc.so.6                          0x00002b90f4361460 __libc_start_main +
    245

    6    tmp_rpp_eat                        0x00005556483e2ff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1fs4oq4b.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character == character {\n            distinctCharacters += 1\n    \
    \    }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp_rpp_eat/tmp_rpp_eat.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b90f4175c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b90f3e6cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b90f3e6c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b90f3e6b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_rpp_eat                        0x00005556483e34c1 <unavailable> + 5313

    5    libc.so.6                          0x00002b90f4361460 __libc_start_main +
    245

    6    tmp_rpp_eat                        0x00005556483e2ff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = Set<Character>()\n    for character in\
    \ string {\n        distinctCharacters.insert(character)\n    }\n    return distinctCharacters.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmp5kitto7x/tmp5kitto7x.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7b9288c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7b8f7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7b8f7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7b8f7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5kitto7x                        0x000055b8a0f2e5f1 <unavailable> + 5617

    5    libc.so.6                          0x00002ab7b9474460 __libc_start_main +
    245

    6    tmp5kitto7x                        0x000055b8a0f2e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount++\n\
    \        } else if character == character.uppercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp2mv_j69i.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n/tmp/tmp2mv_j69i.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp2mv_j69i.swift:9:35: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            distinctCharacterCount++\n\
    \                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmppqcm11b1.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if let _ = character.unicodeScalars.first {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpuyhnq5x1/tmpuyhnq5x1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5392d1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5392a15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5392a15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5392a147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuyhnq5x1                        0x000055b2cff6c5d1 <unavailable> + 5585

    5    libc.so.6                          0x00002b5392f0a460 __libc_start_main +
    245

    6    tmpuyhnq5x1                        0x000055b2cff6c109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: -4
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount += 1\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: Exception
  stderr: 'tmpv87q3e0o/tmpv87q3e0o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af3fe7ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af3fe4c3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af3fe4c3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af3fe4c27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv87q3e0o                        0x0000556fd30e04c1 <unavailable> + 5313

    5    libc.so.6                          0x00002af3fe9b8460 __libc_start_main +
    245

    6    tmpv87q3e0o                        0x0000556fd30dfff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var count = 0\n    for character in string {\n        if character\
    \ == character.lowercaseString {\n            count += 1\n        } else if character\
    \ == character.uppercaseString {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_distinct_characters(string:\
    \ \"\") == 0)\nassert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp08pybpj6.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp08pybpj6.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character {\n            distinctCharacterCount++\n \
    \       }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp1fs4oq4b.swift:7:35: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            distinctCharacterCount++\n               \
    \                   ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        } else {\n            distinctCharacterCount\
    \ += 1\n        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp4x755qu3.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp4x755qu3.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters\
    \ = distinctCharacters + 1\n        }\n    }\n    return distinctCharacters\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp14xvkrvr.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character == character.lowercaseString {\n            distinctCharacterCount\
    \ += 1\n        } else if character == character.uppercaseString {\n         \
    \   distinctCharacterCount += 1\n        }\n    }\n    return distinctCharacterCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_distinct_characters(string: \"\") == 0)\n\
    assert(count_distinct_characters(string: \"abcde\") == 5)\nassert(count_distinct_characters(string:\
    \ \"abcdecadeCADE\") == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\"\
    ) == 1)\nassert(count_distinct_characters(string: \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp0zazgafd.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character == character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp0zazgafd.swift:8:42:\
    \ error: value of type 'Character' has no member 'uppercaseString'\n        }\
    \ else if character == character.uppercaseString {\n                         \
    \      ~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacters = 0\n    for character in string {\n  \
    \      if character != character.lowercaseString {\n            distinctCharacters++\n\
    \        }\n    }\n    return distinctCharacters\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmpp75pie3f.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmpp75pie3f.swift:7:31:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacters++\n                              ^~\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\n/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfunc count_distinct_characters(string: String)\
    \ -> Int {\n    var distinctCharacterCount = 0\n    for character in string {\n\
    \        if character != character.lowercaseString {\n            distinctCharacterCount++\n\
    \        }\n    }\n    return distinctCharacterCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_distinct_characters(string: \"\") == 0)\nassert(count_distinct_characters(string:\
    \ \"abcde\") == 5)\nassert(count_distinct_characters(string: \"abcdecadeCADE\"\
    ) == 5)\nassert(count_distinct_characters(string: \"aaaaAAAAaaaa\") == 1)\nassert(count_distinct_characters(string:\
    \ \"Jerry jERRY JeRRRY\") == 5)"
  status: SyntaxError
  stderr: "/tmp/tmp8vph437z.swift:6:35: error: value of type 'Character' has no member\
    \ 'lowercaseString'\n        if character != character.lowercaseString {\n   \
    \                     ~~~~~~~~~ ^~~~~~~~~~~~~~~\n/tmp/tmp8vph437z.swift:7:35:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  distinctCharacterCount++\n                                  ^~\n"
  stdout: ''
  timestamp: 1660015456

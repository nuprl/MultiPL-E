name: HumanEval_136_largest_smallest_integers
language: swift
prompt: "\n/// Create a function that returns a tuple (a, b), where 'a' is\n/// the\
  \ largest of negative integers, and 'b' is the smallest\n/// of positive integers\
  \ in a list.\n/// If there is no negative or positive integers, return them as None.\n\
  /// Examples:\nfunc largest_smallest_integers(lst: [Int]) -> (Int?, Int?) {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(largest_smallest_integers(lst: [2, 4, 1,\
  \ 3, 5, 7]) == (nil, 1))\nassert(largest_smallest_integers(lst: [2, 4, 1, 3, 5,\
  \ 7, 0]) == (nil, 1))\nassert(largest_smallest_integers(lst: [1, 3, 2, 4, 5, 6,\
  \ -2]) == (-2, 1))\nassert(largest_smallest_integers(lst: [4, 5, 3, 6, 2, 7, -7])\
  \ == (-7, 2))\nassert(largest_smallest_integers(lst: [7, 3, 8, 4, 9, 2, 5, -9])\
  \ == (-9, 2))\nassert(largest_smallest_integers(lst: [] as [Int]) == (nil, nil))\n\
  assert(largest_smallest_integers(lst: [0]) == (nil, nil))\nassert(largest_smallest_integers(lst:\
  \ [-1, -3, -5, -6]) == (-1, nil))\nassert(largest_smallest_integers(lst: [-1, -3,\
  \ -5, -6, 0]) == (-1, nil))\nassert(largest_smallest_integers(lst: [-6, -4, -4,\
  \ -3, 1]) == (-3, 1))\nassert(largest_smallest_integers(lst: [-6, -4, -4, -3, -100,\
  \ 1]) == (-3, 1))"
completions: ["    var largest: Int?\n    var smallest: Int?\n    for x in lst {\n\
    \        if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?()\n   \
    \ var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?(0)\n    var smallest = Int?(0)\n    for x in lst {\n        if x < 0\
    \ {\n            largest = x\n        } else {\n            smallest = x\n   \
    \     }\n    }\n    return (largest, smallest)", "    guard lst.count > 0 else\
    \ { return (Int?(), Int?()) }\n    var largest = Int?()\n    var smallest = Int?()\n\
    \    for i in lst {\n        if i < 0 {\n            largest = i\n        } else\
    \ {\n            smallest = i\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n   \
    \     if num < 0 {\n            largest = num\n        } else {\n            smallest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    var largest =\
    \ Int?()\n    var smallest = Int?()\n    for num in lst {\n        if num < 0\
    \ {\n            largest = num\n        } else {\n            smallest = num\n\
    \        }\n    }\n    return (largest, smallest)", "    guard lst.count > 0 else\
    \ { return (Int?(), Int?()) }\n    var largest = Int?()\n    var smallest = Int?()\n\
    \    for i in lst {\n        if i.isNegative {\n            if largest.isNull\
    \ {\n                largest = i\n            } else {\n                largest\
    \ = largest.max(i)\n            }\n        } else {\n            if smallest.isNull\
    \ {\n                smallest = i\n            } else {\n                smallest\
    \ = smallest.min(i)\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest: Int?\
    \ = nil\n    var smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n\
    \            if largest == nil {\n                largest = x\n            } else\
    \ {\n                largest = largest!\n            }\n        } else {\n   \
    \         if smallest == nil {\n                smallest = x\n            } else\
    \ {\n                smallest = smallest!\n            }\n        }\n    }\n \
    \   return (largest, smallest)", "    guard lst.count > 0 else {\n        return\
    \ (nil, nil)\n    }\n    var max: Int? = nil\n    var min: Int? = nil\n    for\
    \ x in lst {\n        if x < 0 {\n            max = x\n        } else {\n    \
    \        min = x\n        }\n    }\n    return (max, min)", "    var largest:\
    \ Int?\n    var smallest: Int?\n    for n in lst {\n        if n < 0 {\n     \
    \       largest = n\n        } else {\n            smallest = n\n        }\n \
    \   }\n    return (largest, smallest)", "    guard lst.count > 0 else {\n    \
    \    return (nil, nil)\n    }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?(0)\n    var smallest = Int?(0)\n    for n in lst {\n        if n < 0\
    \ {\n            largest = n\n        } else {\n            smallest = n\n   \
    \     }\n    }\n    return (largest, smallest)", "    var largest: Int? = nil\n\
    \    var smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n      \
    \      largest = x\n        } else {\n            smallest = x\n        }\n  \
    \  }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for number in lst {\n        if number > 0 {\n            if smallest\
    \ == nil {\n                smallest = number\n            } else {\n        \
    \        if number < smallest {\n                    smallest = number\n     \
    \           }\n            }\n        } else {\n            if largest == nil\
    \ {\n                largest = number\n            } else {\n                if\
    \ number > largest {\n                    largest = number\n                }\n\
    \            }\n        }\n    }\n    return (largest, smallest)", "    var largest:\
    \ Int?\n    var smallest: Int?\n    for x in lst {\n        if x < 0 {\n     \
    \       largest = x\n        } else {\n            smallest = x\n        }\n \
    \   }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?()\n    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n\
    \            largest = x\n        } else {\n            smallest = x\n       \
    \ }\n    }\n    return (largest, smallest)", "    guard lst.count > 0 else {\n\
    \        return (nil, nil)\n    }\n    var largest = Int()\n    var smallest =\
    \ Int()\n    for x in lst {\n        if x < 0 {\n            largest = x\n   \
    \     } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest: Int?\n    var smallest: Int?\n    for x in lst\
    \ {\n        if x < 0 {\n            largest = x\n        } else {\n         \
    \   smallest = x\n        }\n    }\n    return (largest, smallest)", "    var\
    \ largest: Int? = nil\n    var smallest: Int? = nil\n    for n in lst {\n    \
    \    if n < 0 {\n            largest = n\n        } else {\n            smallest\
    \ = n\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n  \
    \  var smallest = Int?(0)\n    for number in lst {\n        if number > 0 {\n\
    \            largest = number\n        } else {\n            smallest = number\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for number in lst {\n        if number < 0 {\n            largest\
    \ = number\n        } else {\n            smallest = number\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for number in lst {\n        if number < 0 {\n            largest\
    \ = number\n        } else {\n            smallest = number\n        }\n    }\n\
    \    return (largest, smallest)", "    guard lst.count > 0 else {\n        return\
    \ (nil, nil)\n    }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n \
    \   for i in lst {\n        if i.isNegative {\n            if largest.isNull {\n\
    \                largest = i\n            } else {\n                largest =\
    \ largest.max(i)\n            }\n        } else {\n            if smallest.isNull\
    \ {\n                smallest = i\n            } else {\n                smallest\
    \ = smallest.min(i)\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for x in lst {\n\
    \        if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n  \
    \  var smallest = Int?(0)\n    for x in lst {\n        if x < 0 {\n          \
    \  largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n   \
    \     if num < 0 {\n            largest = num\n        } else {\n            smallest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    var largest =\
    \ Int?()\n    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n\
    \            largest = x\n        } else {\n            smallest = x\n       \
    \ }\n    }\n    return (largest, smallest)", "    guard lst.count > 0 else {\n\
    \        return (nil, nil)\n    }\n    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for i in lst {\n        if i < 0 {\n            largest = i\n\
    \        } else {\n            smallest = i\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest: Int?\n    var smallest: Int?\n    for x in lst\
    \ {\n        if x < 0 {\n            largest = x\n        } else {\n         \
    \   smallest = x\n        }\n    }\n    return (largest, smallest)", "    var\
    \ largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n        if\
    \ x < 0 {\n            largest = x\n        } else {\n            smallest = x\n\
    \        }\n    }\n    return (largest, smallest)", "    guard lst.count > 0 else\
    \ {\n        return (nil, nil)\n    }\n    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for i in lst {\n        if i.isNegative {\n            largest\
    \ = i\n        } else {\n            smallest = i\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest: Int?\n    var smallest: Int?\n    for\
    \ num in lst {\n        if num < 0 {\n            largest = num\n        } else\
    \ {\n            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest: Int?\n\
    \    var smallest: Int?\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    guard lst.count > 0 else {\n        return (nil,\
    \ nil)\n    }\n    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n  \
    \      if num < 0 {\n            largest = num\n        } else {\n           \
    \ smallest = num\n        }\n    }\n    return (largest, smallest)", "    var\
    \ largest: Int? = nil\n    var smallest: Int? = nil\n    for x in lst {\n    \
    \    if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    guard lst.count > 0 else {\n   \
    \     return (nil, nil)\n    }\n    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for n in lst {\n     \
    \   if n < 0 {\n            largest = n\n        } else {\n            smallest\
    \ = n\n        }\n    }\n    return (largest, smallest)", "    var smallest: Int?\
    \ = nil\n    var largest: Int? = nil\n    for n in lst {\n        if n < 0 {\n\
    \            largest = n\n        } else {\n            smallest = n\n       \
    \ }\n    }\n    return (smallest, largest)", "    guard lst.count > 0 else {\n\
    \        return (nil, nil)\n    }\n    var largest = Int?(0)\n    var smallest\
    \ = Int?(0)\n    for i in lst {\n        if i < 0 {\n            largest = i\n\
    \        } else {\n            smallest = i\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest: Int?\n    var smallest: Int?\n    for num in lst\
    \ {\n        if num < 0 {\n            largest = num\n        } else {\n     \
    \       smallest = num\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n    \
    \    if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n  \
    \  var smallest = Int?(0)\n    for n in lst {\n        guard n < 0 else {\n  \
    \          largest = n\n            continue\n        }\n        guard n > 0 else\
    \ {\n            smallest = n\n            continue\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var smallest: Int?\n    var largest: Int?\n    for x in lst {\n        if x\
    \ < 0 {\n            smallest = x\n        } else {\n            largest = x\n\
    \        }\n    }\n    return (smallest, largest)", "    var largest: Int? = nil\n\
    \    var smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n      \
    \      largest = x\n        } else {\n            smallest = x\n        }\n  \
    \  }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for number in lst {\n        if number > 0 {\n            if smallest\
    \ == nil {\n                smallest = number\n            } else {\n        \
    \        if number < smallest {\n                    smallest = number\n     \
    \           }\n            }\n        } else {\n            if largest == nil\
    \ {\n                largest = number\n            } else {\n                if\
    \ number > largest {\n                    largest = number\n                }\n\
    \            }\n        }\n    }\n    return (largest, smallest)", "    var largest:\
    \ Int? = nil\n    var smallest: Int? = nil\n    for x in lst {\n        if x <\
    \ 0 {\n            largest = x\n        } else {\n            smallest = x\n \
    \       }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    guard lst.count > 0 else {\n   \
    \     return (nil, nil)\n    }\n    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest: Int?\n    var smallest:\
    \ Int?\n    for num in lst {\n        if num < 0 {\n            largest = num\n\
    \        } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    guard lst.count > 0 else {\n        return (nil, nil)\n   \
    \ }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n    for i in lst {\n\
    \        if i < 0 {\n            largest = i\n        } else {\n            smallest\
    \ = i\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n  \
    \  var smallest = Int?(0)\n    for x in lst {\n        if x < 0 {\n          \
    \  largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for num\
    \ in lst {\n        if num < 0 {\n            largest = num\n        } else {\n\
    \            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n   \
    \     if num < 0 {\n            largest = num\n        } else {\n            smallest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?()\n   \
    \ var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n        \
    \    largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest: Int? = nil\n    var\
    \ smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest: Int?\n    var smallest: Int?\n    for num in lst {\n        if\
    \ num < 0 {\n            largest = num\n        } else {\n            smallest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int()\n    var\
    \ smallest = Int()\n    for num in lst {\n        if num < smallest {\n      \
    \      smallest = num\n        }\n        if num > largest {\n            largest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    var largest =\
    \ Int?()\n    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n\
    \            largest = x\n        } else {\n            smallest = x\n       \
    \ }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n    var\
    \ smallest = Int?()\n    for num in lst {\n        if num < 0 {\n            largest\
    \ = num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest: Int?\n    var smallest: Int?\n    for\
    \ x in lst {\n        if x < 0 {\n            largest = x\n        } else {\n\
    \            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest: Int?\n\
    \    var smallest: Int?\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest: Int?\n    var smallest: Int?\n    for\
    \ num in lst {\n        if num < 0 {\n            largest = num\n        } else\
    \ {\n            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest: Int? = nil\n    var smallest: Int? = nil\n    for x in lst {\n\
    \        if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest: Int? = nil\n    var\
    \ smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for num in lst {\n        if num < 0 {\n            largest = num\n     \
    \   } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n  \
    \      if num < 0 {\n            largest = num\n        } else {\n           \
    \ smallest = num\n        }\n    }\n    return (largest, smallest)", "    var\
    \ largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n        if\
    \ num < 0 {\n            largest = num\n        } else {\n            smallest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?()\n   \
    \ var smallest = Int?()\n    for number in lst {\n        if number > 0 {\n  \
    \          if smallest == nil {\n                smallest = number\n         \
    \   } else {\n                if number < smallest {\n                    smallest\
    \ = number\n                }\n            }\n        } else {\n            if\
    \ largest == nil {\n                largest = number\n            } else {\n \
    \               if number > largest {\n                    largest = number\n\
    \                }\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for n in lst {\n    \
    \    if n < 0 {\n            largest = n\n        } else {\n            smallest\
    \ = n\n        }\n    }\n    return (largest, smallest)", "    var largest: Int?\
    \ = nil\n    var smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n\
    \            if smallest == nil {\n                smallest = x\n            }\
    \ else {\n                smallest = nil\n            }\n        } else {\n  \
    \          if largest == nil {\n                largest = x\n            } else\
    \ {\n                largest = nil\n            }\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for num in lst {\n        if num < 0 {\n            largest = num\n     \
    \   } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n    \
    \    if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest: Int? = nil\n    var\
    \ smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest: Int? = nil\n    var smallest: Int? =\
    \ nil\n    for n in lst {\n        if n < 0 {\n            largest = n\n     \
    \   } else {\n            smallest = n\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for num\
    \ in lst {\n        if num < 0 {\n            largest = num\n        } else {\n\
    \            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest: Int?\n\
    \    var smallest: Int?\n    for num in lst {\n        if num < 0 {\n        \
    \    largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else { return (Int?(), Int?()) }\n    var largest = Int?()\n\
    \    var smallest = Int?()\n    for i in lst {\n        if i.isNegative {\n  \
    \          if let _ = largest {\n                largest = nil\n            }\
    \ else {\n                largest = i\n            }\n        } else {\n     \
    \       if let _ = smallest {\n                smallest = nil\n            } else\
    \ {\n                smallest = i\n            }\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest: Int?\n    var smallest: Int?\n    for\
    \ x in lst {\n        if x < 0 {\n            largest = x\n        } else {\n\
    \            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for num in lst {\n        if num < 0 {\n            largest = num\n     \
    \   } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for num\
    \ in lst {\n        if num < 0 {\n            largest = num\n        } else {\n\
    \            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else { return (Int?(), Int?()) }\n    var max: Int? = nil\n\
    \    var min: Int? = nil\n    for x in lst {\n        if x < 0 {\n           \
    \ if max == nil { max = x }\n        } else {\n            if min == nil { min\
    \ = x }\n        }\n    }\n    return (max, min)", "    var largest: Int? = nil\n\
    \    var smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n      \
    \      largest = x\n        } else {\n            smallest = x\n        }\n  \
    \  }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for number in lst {\n        if number > 0 {\n            largest\
    \ = number\n        } else {\n            smallest = number\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest: Int?\n    var smallest: Int?\n\
    \    for num in lst {\n        if num < 0 {\n            largest = num\n     \
    \   } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    guard lst.count > 0 else {\n        return (nil, nil)\n   \
    \ }\n    var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n\
    \        if num < 0 {\n            largest = num\n        } else {\n         \
    \   smallest = num\n        }\n    }\n    return (largest, smallest)", "    var\
    \ largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n        if\
    \ x < 0 {\n            largest = x\n        } else {\n            smallest = x\n\
    \        }\n    }\n    return (largest, smallest)", "    guard lst.count > 0 else\
    \ {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n    var smallest\
    \ = Int?(0)\n    for i in lst {\n        if i < 0 {\n            largest = i\n\
    \        } else {\n            smallest = i\n        }\n    }\n    return (largest,\
    \ smallest)", "    guard lst.count > 0 else {\n        return (nil, nil)\n   \
    \ }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n    for num in lst\
    \ {\n        if num < 0 {\n            largest = num\n        } else {\n     \
    \       smallest = num\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n  \
    \      if num < 0 {\n            largest = num\n        } else {\n           \
    \ smallest = num\n        }\n    }\n    return (largest, smallest)", "    var\
    \ largest: Int? = nil\n    var smallest: Int? = nil\n    for x in lst {\n    \
    \    if x < 0 {\n            if smallest == nil {\n                smallest =\
    \ x\n            } else {\n                smallest = nil\n            }\n   \
    \     } else {\n            if largest == nil {\n                largest = x\n\
    \            } else {\n                largest = nil\n            }\n        }\n\
    \    }\n    return (largest, smallest)", "    guard lst.count > 0 else {\n   \
    \     return (nil, nil)\n    }\n    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else { return (nil, nil) }\n    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ if x > 0 {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    guard lst.count > 0 else {\n        return (nil, nil)\n   \
    \ }\n    var largest = Int()\n    var smallest = Int()\n    for n in lst {\n \
    \       if n < smallest {\n            smallest = n\n        }\n        if n >\
    \ largest {\n            largest = n\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?(0)\n    var smallest = Int?(0)\n    for i in lst {\n        if i.isNegative\
    \ {\n            largest = i\n        } else {\n            smallest = i\n   \
    \     }\n    }\n    return (largest, smallest)", "    guard lst.count > 0 else\
    \ {\n        return (nil, nil)\n    }\n    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for n in lst {\n        if n < 0 {\n            largest = n\n\
    \        } else {\n            smallest = n\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest: Int? = nil\n    var smallest: Int? = nil\n   \
    \ for x in lst {\n        if x < 0 {\n            if smallest == nil {\n     \
    \           smallest = x\n            } else {\n                smallest = nil\n\
    \            }\n        } else {\n            if largest == nil {\n          \
    \      largest = x\n            } else {\n                largest = nil\n    \
    \        }\n        }\n    }\n    return (largest, smallest)", "    var largest:\
    \ Int? = nil\n    var smallest: Int? = nil\n    for x in lst {\n        if x <\
    \ 0 {\n            if smallest == nil {\n                smallest = x\n      \
    \      } else {\n                smallest = nil\n            }\n        } else\
    \ {\n            if largest == nil {\n                largest = x\n          \
    \  } else {\n                largest = nil\n            }\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest: Int?\n    var smallest: Int?\n    for\
    \ x in lst {\n        if x < 0 {\n            largest = x\n        } else {\n\
    \            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?()\n    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n\
    \            largest = x\n        } else {\n            smallest = x\n       \
    \ }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n    var\
    \ smallest = Int?()\n    for num in lst {\n        if num < 0 {\n            largest\
    \ = num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for num in lst {\n        if num < 0 {\n            largest = num\n     \
    \   } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for number\
    \ in lst {\n        if number > 0 {\n            if smallest == nil {\n      \
    \          smallest = number\n            } else {\n                if number\
    \ < smallest {\n                    smallest = number\n                }\n   \
    \         }\n        } else {\n            if largest == nil {\n             \
    \   largest = number\n            } else {\n                if number > largest\
    \ {\n                    largest = number\n                }\n            }\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    guard lst.count > 0 else {\n        return (nil,\
    \ nil)\n    }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n    for\
    \ n in lst {\n        if n < 0 {\n            largest = n\n        } else {\n\
    \            smallest = n\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?()\n    var smallest = Int?()\n    for i in lst {\n        if i.isNegative\
    \ {\n            largest = i\n        } else {\n            smallest = i\n   \
    \     }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n \
    \   var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n      \
    \      largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    guard lst.count > 0 else { return\
    \ (Int?(), Int?()) }\n    var largest = Int?()\n    var smallest = Int?()\n  \
    \  for i in lst {\n        if i.isNegative {\n            if largest.isNull {\n\
    \                largest = i\n            } else {\n                if i > largest\
    \ {\n                    largest = i\n                }\n            }\n     \
    \   } else {\n            if smallest.isNull {\n                smallest = i\n\
    \            } else {\n                if i < smallest {\n                   \
    \ smallest = i\n                }\n            }\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest: Int?\n    var smallest: Int?\n    for x in lst {\n        if x\
    \ < 0 {\n            largest = x\n        } else {\n            smallest = x\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for number in lst {\n        if number > 0 {\n\
    \            if smallest == nil {\n                smallest = number\n       \
    \     } else {\n                if number < smallest {\n                    smallest\
    \ = number\n                }\n            }\n        } else {\n            if\
    \ largest == nil {\n                largest = number\n            } else {\n \
    \               if number > largest {\n                    largest = number\n\
    \                }\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largest: Int?\n    var smallest: Int?\n    for x in lst {\n        if x\
    \ < 0 {\n            largest = x\n        } else {\n            smallest = x\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    guard lst.count > 0 else { return (nil,\
    \ nil) }\n    var max: Int? = nil\n    var min: Int? = nil\n    for x in lst {\n\
    \        if x < 0 {\n            if max == nil { max = x }\n        } else {\n\
    \            if min == nil { min = x }\n        }\n    }\n    return (max, min)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest: Int?\
    \ = nil\n    var smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n\
    \            largest = x\n        } else {\n            smallest = x\n       \
    \ }\n    }\n    return (largest, smallest)", "    var largest: Int?\n    var smallest:\
    \ Int?\n    for n in lst {\n        if n < 0 {\n            largest = n\n    \
    \    } else {\n            smallest = n\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n    \
    \    if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest: Int?\n\
    \    var smallest: Int?\n    for num in lst {\n        if num < 0 {\n        \
    \    largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest: Int? = nil\n    var\
    \ smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    guard lst.count > 0 else { return (nil, nil) }\n\
    \    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n   \
    \     if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var smallest: Int?\n\
    \    var largest: Int?\n    for num in lst {\n        if num < 0 {\n         \
    \   smallest = num\n        } else {\n            largest = num\n        }\n \
    \   }\n    return (smallest, largest)", "    var largest: Int?\n    var smallest:\
    \ Int?\n    for num in lst {\n        if num < 0 {\n            largest = num\n\
    \        } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest: Int?\n    var smallest: Int?\n    for x in lst {\n        if\
    \ x < 0 {\n            largest = x\n        } else {\n            smallest = x\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest: Int?\n \
    \   var smallest: Int?\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for number in lst {\n        if number < 0 {\n            largest = number\n\
    \        } else {\n            smallest = number\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest: Int? = nil\n    var smallest: Int? =\
    \ nil\n    for num in lst {\n        if num < 0 {\n            largest = num\n\
    \        } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest: Int?\n    var smallest: Int?\n    for x in lst\
    \ {\n        if x < 0 {\n            largest = x\n        } else {\n         \
    \   smallest = x\n        }\n    }\n    return (largest, smallest)", "    var\
    \ largest = Int?()\n    var smallest = Int?()\n    for number in lst {\n     \
    \   if number < 0 {\n            largest = number\n        } else {\n        \
    \    smallest = number\n        }\n    }\n    return (largest, smallest)", " \
    \   guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var max:\
    \ Int? = nil\n    var min: Int? = nil\n    for n in lst {\n        if n < 0 {\n\
    \            max = n\n        } else {\n            min = n\n        }\n    }\n\
    \    return (max, min)", "    var largest: Int? = nil\n    var smallest: Int?\
    \ = nil\n    for num in lst {\n        if num < 0 {\n            largest = num\n\
    \        } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n    \
    \    if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n  \
    \  var smallest = Int?(0)\n    for i in lst {\n        if i < 0 {\n          \
    \  largest = i\n        } else {\n            smallest = i\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest: Int?\n    var smallest: Int?\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?(0)\n    var smallest = Int?(0)\n    for x in lst {\n        if x < 0\
    \ {\n            largest = x\n        } else {\n            smallest = x\n   \
    \     }\n    }\n    return (largest, smallest)", "    var largest: Int?\n    var\
    \ smallest: Int?\n    for num in lst {\n        if num < 0 {\n            largest\
    \ = num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    guard lst.count > 0 else {\n        return (nil,\
    \ nil)\n    }\n    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?()\n    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n\
    \            largest = x\n        } else {\n            smallest = x\n       \
    \ }\n    }\n    return (largest, smallest)", "    var largest: Int? = nil\n  \
    \  var smallest: Int? = nil\n    for num in lst {\n        if num < 0 {\n    \
    \        largest = num\n        } else {\n            smallest = num\n       \
    \ }\n    }\n    return (largest, smallest)", "    var largest: Int?\n    var smallest:\
    \ Int?\n    for num in lst {\n        if num < 0 {\n            largest = num\n\
    \        } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var smallest: Int?\n    var largest: Int?\n    for number in\
    \ lst {\n        if number < 0 {\n            smallest = number\n        } else\
    \ {\n            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?(0)\n    var smallest = Int?(0)\n    for x in lst {\n        if x < 0\
    \ {\n            largest = x\n        } else {\n            smallest = x\n   \
    \     }\n    }\n    return (largest, smallest)", "    var largest: Int? = nil\n\
    \    var smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n      \
    \      largest = x\n        } else {\n            smallest = x\n        }\n  \
    \  }\n    return (largest, smallest)", "    guard lst.count > 0 else { return\
    \ (Int?(), Int?()) }\n    var largest = Int?()\n    var smallest = Int?()\n  \
    \  for i in lst {\n        if i.isNegative {\n            largest = i\n      \
    \  } else {\n            smallest = i\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest: Int? = nil\n    var smallest: Int? = nil\n   \
    \ for num in lst {\n        if num < 0 {\n            largest = num\n        }\
    \ else {\n            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for number in lst {\n\
    \        if number < 0 {\n            largest = number\n        } else {\n   \
    \         smallest = number\n        }\n    }\n    return (largest, smallest)",
  "    guard lst.count > 0 else { return (Int?(), Int?()) }\n    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    guard lst.count > 0 else {\n        return\
    \ (nil, nil)\n    }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n \
    \   for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for number in lst {\n\
    \        if number < 0 {\n            largest = number\n        } else {\n   \
    \         smallest = number\n        }\n    }\n    return (largest, smallest)",
  "    var largest: Int?\n    var smallest: Int?\n    for x in lst {\n        if x\
    \ < 0 {\n            largest = x\n        } else {\n            smallest = x\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for num in lst {\n        if num < 0 {\n            largest = num\n     \
    \   } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest: Int? = nil\n    var smallest: Int? = nil\n    for n in lst {\n\
    \        if n < 0 {\n            largest = n\n        } else {\n            smallest\
    \ = n\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?()\n   \
    \ var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)"]
stop_tokens:
- "\n}"

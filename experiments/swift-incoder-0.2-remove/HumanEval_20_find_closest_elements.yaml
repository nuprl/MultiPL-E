name: HumanEval_20_find_closest_elements
language: swift
prompt: "\n/// From a supplied list of numbers (of length at least two) select and\
  \ return two that are the closest to each\n/// other and return them in order (smaller\
  \ number, larger number).\nfunc find_closest_elements(numbers: [Double]) -> (Double,\
  \ Double) {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(find_closest_elements(numbers: [1.0, 2.0,\
  \ 3.9, 4.0, 5.0, 2.2]) == (3.9, 4.0))\nassert(find_closest_elements(numbers: [1.0,\
  \ 2.0, 5.9, 4.0, 5.0]) == (5.0, 5.9))\nassert(find_closest_elements(numbers: [1.0,\
  \ 2.0, 3.0, 4.0, 5.0, 2.2]) == (2.0, 2.2))\nassert(find_closest_elements(numbers:\
  \ [1.0, 2.0, 3.0, 4.0, 5.0, 2.0]) == (2.0, 2.0))\nassert(find_closest_elements(numbers:\
  \ [1.1, 2.2, 3.1, 4.1, 5.1]) == (2.2, 3.1))"
completions: ["    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n   \
    \ }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for i in\
    \ 1..numbers.count {\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i]\n        }\n        if numbers[i] > largest {\n            largest\
    \ = numbers[i]\n        }\n    }\n    return (smallest, largest)", "    guard\
    \ numbers.count >= 2 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ > 2 else { return (numbers[0], numbers[1]) }\n    guard numbers.count > 3 else\
    \ { return (numbers[0], numbers[2]) }\n    guard numbers.count > 4 else { return\
    \ (numbers[0], numbers[3]) }\n    guard numbers.count > 5 else { return (numbers[0],\
    \ numbers[4]) }\n    guard numbers.count > 6 else { return (numbers[0], numbers[5])\
    \ }\n    guard numbers.count > 7 else { return (numbers[0], numbers[6]) }\n  \
    \  guard numbers.count > 8 else { return (numbers[0], numbers[7]) }\n    guard\
    \ numbers.count > 9 else { return (numbers[0], numbers[8]) }\n    guard numbers.count\
    \ > 10 else { return (numbers[0], numbers[9]) }\n    guard numbers.count > 11\
    \ else { return (numbers[0], numbers[10]) }\n    guard numbers.count > 12 else\
    \ { return (numbers[0], numbers[11]) }\n    guard numbers.count > 13 else { return\
    \ (numbers[0], numbers[12]) }\n    guard numbers.count > 14 else { return (numbers[0],\
    \ numbers[13]) }\n    guard numbers.count > 15 else { return (numbers[0], numbers[14])\
    \ }\n    guard numbers.count > 16 else { return (numbers[0], numbers[15]) }\n\
    \    guard numbers.count > 17 else { return (numbers[0], numbers[16]) }\n    guard\
    \ numbers.count > 18 else { return (numbers[0], numbers[17]) }\n    guard numbers.count\
    \ > 19 else { return (numbers[0], numbers[18]) }\n    guard numbers.count > 20\
    \ else { return (numbers[0], numbers[19]) }\n    guard numbers.count > 21 else\
    \ { return (numbers[0], numbers[20]) }\n    guard numbers.count > 22 else { return\
    \ (numbers[0], numbers[21]) }\n    guard numbers.count > 23 else { return (numbers[0],\
    \ numbers[22]) }\n    guard numbers.count > 24 else { return (numbers[0], numbers[23])\
    \ }\n    guard numbers.count > 25 else { return (numbers[0], numbers[24]) }\n\
    \    guard numbers.count > 26 else { return (numbers[0], numbers[25]) }\n    guard\
    \ numbers.count > 27 else { return (numbers[0], numbers[26]) }\n    guard numbers.count\
    \ > 28 else { return (numbers[0], numbers[27]) }\n    guard numbers.count > 29\
    \ else { return (numbers[0], number", "    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    for number in numbers {\n        if number < smallest\
    \ {\n            smallest = number\n        }\n        if number > largest {\n\
    \            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count > 1 else {\n        return numbers[0], numbers[0]\n   \
    \ }\n    let smallest = numbers[0]\n    let largest = numbers[0]\n    for i in\
    \ 1..<numbers.count {\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i]\n        } else if numbers[i] > largest {\n            largest\
    \ = numbers[i]\n        }\n    }\n    return (smallest, largest)", "    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for number in numbers {\n  \
    \      if number < smallest {\n            smallest = number\n        }\n    \
    \    if number > largest {\n            largest = number\n        }\n    }\n \
    \   return (smallest, largest)", "    guard numbers.count >= 2 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 3 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 4 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count >= 5 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 6 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 7 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 8\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 9 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 10 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 11 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 12 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 13 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 14 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 15 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 16 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 17\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 18 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 19 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 20 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 21 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 22 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 23 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 24 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 25 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 26\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 27 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 28 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 29 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 30 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 31 else { return (numbers[0], numbers[0]) }\n\
    \    guard ", "    guard numbers.count > 1 else {\n        return (0.0,0.0)\n\
    \    }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number\
    \ in numbers {\n        if number < smallest {\n            smallest = number\n\
    \        }\n        if number > largest {\n            largest = number\n    \
    \    }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else {\n        return (0, 0)\n   \
    \ }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number\
    \ in numbers {\n        if number < smallest {\n            smallest = number\n\
    \        }\n        if number > largest {\n            largest = number\n    \
    \    }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2\
    \ else {\n        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n   \
    \ var largest = numbers[0]\n    for number in numbers {\n        if number < smallest\
    \ {\n            smallest = number\n        }\n        if number > largest {\n\
    \            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ {\n        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        } else if number > largest\
    \ {\n            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count > 2 else { return (numbers[0], numbers[1]) }\n\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for number in numbers {\n  \
    \      if number < smallest {\n            smallest = number\n        }\n    \
    \    if number > largest {\n            largest = number\n        }\n    }\n \
    \   return (smallest, largest)", "    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else { return (numbers[0], numbers[0]) }\n    var\
    \ smallest = numbers[0]\n    var largest = numbers[0]\n    for number in numbers\
    \ {\n        if number < smallest {\n            smallest = number\n        }\n\
    \        if number > largest {\n            largest = number\n        }\n    }\n\
    \    return (smallest, largest)", "    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else { return (numbers[0], numbers[0]) }\n    var\
    \ smallest = numbers[0]\n    var largest = numbers[0]\n    for i in 1..numbers.count\
    \ {\n        if numbers[i] > largest {\n            largest = numbers[i]\n   \
    \     } else if numbers[i] < smallest {\n            smallest = numbers[i]\n \
    \       }\n    }\n    return (smallest, largest)", "    guard numbers.count >=\
    \ 2 else { return (numbers[0], numbers[0]) }\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n        }\n        if numbers[i]\
    \ > largest {\n            largest = numbers[i]\n        }\n    }\n    return\
    \ (smallest, largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n\
    \    }\n    \n    let smallest = numbers[0]\n    let largest = numbers[0]\n  \
    \  \n    for number in numbers {\n        if number < smallest {\n           \
    \ smallest = number\n        }\n        if number > largest {\n            largest\
    \ = number\n        }\n    }\n    \n    return (smallest, largest)", "    var\
    \ smallest = numbers[0]\n    var largest = numbers[0]\n    for number in numbers\
    \ {\n        if number < smallest {\n            smallest = number\n        }\n\
    \        if number > largest {\n            largest = number\n        }\n    }\n\
    \    return (smallest, largest)", "    guard numbers.count > 1 else {\n      \
    \  return (0.0,0.0)\n    }\n    guard numbers.count >= 2 else {\n        return\
    \ (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest,largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else { return (0.0, 0.0) }\n    var\
    \ smallest = numbers[0]\n    var largest = numbers[0]\n    for number in numbers\
    \ {\n        if number < smallest {\n            smallest = number\n        }\n\
    \        if number > largest {\n            largest = number\n        }\n    }\n\
    \    return (smallest, largest)", "    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    guard numbers.count >=\
    \ 2 else {\n        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n \
    \   var largest = numbers[0]\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ > largest {\n            largest = numbers[i]\n        }\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n        }\n    }\n    return\
    \ (smallest, largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        } else if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    if numbers.count < 2 {\n        return numbers[0], numbers[0]\n\
    \    }\n    \n    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  \n    for i in 1..numbers.count {\n        if numbers[i] > largest {\n    \
    \        largest = numbers[i]\n        }\n        if numbers[i] < smallest {\n\
    \            smallest = numbers[i]\n        }\n    }\n    \n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n\
    \    }\n    \n    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  \n    for number in numbers {\n        if number < smallest {\n           \
    \ smallest = number\n        }\n        if number > largest {\n            largest\
    \ = number\n        }\n    }\n    \n    return (smallest, largest)", "    guard\
    \ numbers.count >= 2 else {\n        return (0.0,0.0)\n    }\n\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    var smallestIndex = 0\n    var\
    \ largestIndex = 0\n\n    for index in 1..numbers.count {\n        let currentNumber\
    \ = numbers[index]\n        if currentNumber < smallest {\n            smallest\
    \ = currentNumber\n            smallestIndex = index\n        }\n        if currentNumber\
    \ > largest {\n            largest = currentNumber\n            largestIndex =\
    \ index\n        }\n    }\n\n    return (numbers[smallestIndex], numbers[largestIndex])",
  "    guard numbers.count >= 2 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 3 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 4 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 5\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 6 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 7 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 8 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 9 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 10 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 11 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 12 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 13 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 14\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 15 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 16 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 17 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 18 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 19 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 20 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 21 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 22 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 23\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 24 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 25 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 26 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 27 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 28 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 29 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 30 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 31 else { return (numbers[0], numbers[0]) }\n    guard ", "    if numbers.count\
    \ < 2 {\n        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    for number in numbers {\n        if number < smallest\
    \ {\n            smallest = number\n        }\n        if number > largest {\n\
    \            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    if numbers.count < 2 {\n        return numbers[0], numbers[0]\n    }\n    var\
    \ smallest = numbers[0]\n    var largest = numbers[0]\n    for number in numbers\
    \ {\n        if number < smallest {\n            smallest = number\n        }\n\
    \        if number > largest {\n            largest = number\n        }\n    }\n\
    \    return (smallest, largest)", "    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n\
    \    }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for i\
    \ in 1..numbers.count {\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i]\n        }\n        if numbers[i] > largest {\n            largest\
    \ = numbers[i]\n        }\n    }\n    return (smallest, largest)", "    guard\
    \ numbers.count >= 2 else {\n        return (0.0,0.0)\n    }\n    guard numbers.count\
    \ > 1 else {\n        return (0.0,0.0)\n    }\n    guard numbers.count <= 3 else\
    \ {\n        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 3 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 4 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 5\
    \ else { return (numbers[0], numbers[0]) }\n\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    var smallest_index = -1\n    var largest_index\
    \ = -1\n\n    for i in 1..<numbers.count {\n        if numbers[i] < smallest {\n\
    \            smallest = numbers[i]\n            smallest_index = i\n        }\n\
    \        if numbers[i] > largest {\n            largest = numbers[i]\n       \
    \     largest_index = i\n        }\n    }\n\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    let smallest = min(numbers)\n    let largest = max(numbers)\n\
    \    return (smallest, largest)", "    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n    }\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for number in numbers {\n  \
    \      if number < smallest {\n            smallest = number\n        }\n    \
    \    if number > largest {\n            largest = number\n        }\n    }\n \
    \   return (smallest, largest)", "    guard numbers.count >= 2 else {\n      \
    \  return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else { return (numbers[0], numbers[0])\
    \ }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number\
    \ in numbers {\n        if number < smallest {\n            smallest = number\n\
    \        }\n        if number > largest {\n            largest = number\n    \
    \    }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2\
    \ else {\n        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n   \
    \ var largest = numbers[0]\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n        }\n        if numbers[i]\
    \ > largest {\n            largest = numbers[i]\n        }\n    }\n    return\
    \ (smallest, largest)", "    if numbers.count < 2 {\n        return numbers[0],\
    \ numbers[0]\n    }\n\n    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    let smallest = numbers[0]\n\
    \    let largest = numbers[0]\n    for i in 1..<numbers.count {\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n        } else if numbers[i]\
    \ > largest {\n            largest = numbers[i]\n        }\n    }\n    return\
    \ (smallest, largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    if numbers.count < 2\
    \ {\n        return numbers[0], numbers[0]\n    }\n\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n\n    return (smallest,\
    \ largest)", "    if numbers.count < 2 {\n        return numbers[0], numbers[0]\n\
    \    }\n\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for\
    \ number in numbers {\n        if number < smallest {\n            smallest =\
    \ number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else { return (0.0, 0.0) }\n    guard\
    \ numbers.count > 1 else {\n        return (0.9999999999999999, numbers.last!)\n\
    \    }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for i\
    \ in 1..numbers.count {\n        if numbers[i] > largest {\n            largest\
    \ = numbers[i]\n        }\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i]\n        }\n    }\n    return (smallest, largest)", "    guard\
    \ numbers.count >= 2 else {\n        fatalError(\"find_closest_elements: numbers\
    \ must have at least two elements\")\n    }\n\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ > largest {\n            largest = numbers[i]\n        }\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n        }\n    }\n    return\
    \ (smallest, largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    guard numbers.count >=\
    \ 2 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 3 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 4 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 5 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 6 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 7 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count >= 8 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 9 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 10 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 11\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 12 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 13 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 14 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 15 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 16 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 17 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 18 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 19 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 20\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 21 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 22 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 23 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 24 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 25 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 26 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 27 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 28 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 29\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 30 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 31 else { return\
    \ (numbers[0], numbers[0]) }\n    guard ", "    var smallest = numbers[0]\n  \
    \  var largest = numbers[0]\n    for number in numbers {\n        if number <\
    \ smallest {\n            smallest = number\n        }\n        if number > largest\
    \ {\n            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n    }\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for i in 1..numbers.count {\n\
    \        if numbers[i] < smallest {\n            smallest = numbers[i]\n     \
    \   }\n        if numbers[i] > largest {\n            largest = numbers[i]\n \
    \       }\n    }\n    return (smallest, largest)", "    guard numbers.count >=\
    \ 2 else {\n        return (0.0,0.0)\n    }\n    \n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    \n    for i in 1..numbers.count {\n       \
    \ if numbers[i] < smallest {\n            smallest = numbers[i]\n        }\n \
    \       if numbers[i] > largest {\n            largest = numbers[i]\n        }\n\
    \    }\n    \n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ {\n        return (0.0,0.0)\n    }\n    guard numbers.count > 1 else {\n   \
    \     return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else {\n        return (0, 0)\n    }\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for i in 1..numbers.count {\n\
    \        if numbers[i] < smallest {\n            smallest = numbers[i]\n     \
    \   } else if numbers[i] > largest {\n            largest = numbers[i]\n     \
    \   }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ {\n        return (0.0,0.0)\n    }\n    let smallest = numbers[0]\n    let largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n    }\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for number in numbers {\n  \
    \      if number < smallest {\n            smallest = number\n        }\n    \
    \    if number > largest {\n            largest = number\n        }\n    }\n \
    \   return (smallest, largest)", "    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 3 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 4 else { return (numbers[0],\
    \ numbers[0]) }\n\n    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    var smallest_index = -1\n    var largest_index = -1\n\n    for i in 1..<numbers.count\
    \ {\n        if numbers[i] < smallest {\n            smallest = numbers[i]\n \
    \           smallest_index = i\n        }\n        if numbers[i] > largest {\n\
    \            largest = numbers[i]\n            largest_index = i\n        }\n\
    \    }\n\n    return (smallest, largest)", "    if numbers.count < 2 {\n     \
    \   return numbers[0], numbers[0]\n    }\n    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    for number in numbers {\n        if number < smallest\
    \ {\n            smallest = number\n        }\n        if number > largest {\n\
    \            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       } else if number > largest {\n            largest = number\n        }\n\
    \    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    for number in numbers {\n        if number < smallest\
    \ {\n            smallest = number\n        } else if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       } else if number > largest {\n            largest = number\n        }\n\
    \    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    for number in numbers {\n        if number < smallest\
    \ {\n            smallest = number\n        }\n        if number > largest {\n\
    \            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count > 1 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count > 2 else { return (numbers[0], numbers[1]) }\n\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for number in numbers {\n  \
    \      if number < smallest {\n            smallest = number\n        }\n    \
    \    if number > largest {\n            largest = number\n        }\n    }\n \
    \   return (smallest, largest)", "    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else { return (numbers[0], numbers[0]) }\n    var\
    \ smallest = numbers[0]\n    var largest = numbers[0]\n    for i in 1..numbers.count\
    \ {\n        if numbers[i] < smallest {\n            smallest = numbers[i]\n \
    \       } else if numbers[i] > largest {\n            largest = numbers[i]\n \
    \       }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n\
    \    }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number\
    \ in numbers {\n        if number < smallest {\n            smallest = number\n\
    \        }\n        if number > largest {\n            largest = number\n    \
    \    }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2\
    \ else {\n        return (0.0,0.0)\n    }\n\n    var smallest = numbers[0]\n \
    \   var largest = numbers[0]\n\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    if numbers.count < 2 {\n        return numbers[0], numbers[0]\n\
    \    }\n    \n    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  \n    for number in numbers {\n        if number < smallest {\n           \
    \ smallest = number\n        }\n        if number > largest {\n            largest\
    \ = number\n        }\n    }\n    \n    return (smallest, largest)", "    if numbers.count\
    \ < 2 {\n        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n        }\n        if numbers[i]\
    \ > largest {\n            largest = numbers[i]\n        }\n    }\n    return\
    \ (smallest, largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    guard numbers.count >=\
    \ 2 else {\n        return (0.0,0.0)\n    }\n    let smallest = numbers[0]\n \
    \   let largest = numbers[0]\n    for i in 1..<numbers.count {\n        let current\
    \ = numbers[i]\n        if current < smallest {\n            smallest = current\n\
    \        } else if current > largest {\n            largest = current\n      \
    \  }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ { return (0.0, 0.0) }\n    guard numbers.count > 2 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count > 3 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 4 else { return (numbers[0], numbers[0]) }\n  \
    \  guard numbers.count > 5 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count > 6 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ > 7 else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 8 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count > 9 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count > 10 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count > 11 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 12 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count > 13 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count > 14 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ > 15 else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 16\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 17 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count > 18 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count > 19 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count > 20 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 21 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count > 22 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count > 23 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ > 24 else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 25\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 26 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count > 27 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count > 28 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count > 29 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 30 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count > ", "    guard numbers.count >= 2 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 3 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 4 else { return (numbers[0], numbers[0]) }\n\n\
    \    var smallest = numbers[0]\n    var largest = numbers[0]\n    var smallest2\
    \ = numbers[0]\n    var largest2 = numbers[0]\n\n    for i in 1..numbers.count\
    \ {\n        if numbers[i] > largest {\n            largest = numbers[i]\n   \
    \     }\n        if numbers[i] < smallest {\n            smallest = numbers[i]\n\
    \        }\n        if numbers[i] > largest2 {\n            largest2 = numbers[i]\n\
    \        }\n        if numbers[i] < smallest2 {\n            smallest2 = numbers[i]\n\
    \        }\n    }\n    return (smallest, largest)", "    guard numbers.count >=\
    \ 2 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 3 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 4 else { return\
    \ (numbers[0], numbers[0]) }\n\n    let smallest = numbers[0]\n    let largest\
    \ = numbers[0]\n\n    for i in 1..<numbers.count {\n        if numbers[i] < smallest\
    \ {\n            smallest = numbers[i]\n        } else if numbers[i] > largest\
    \ {\n            largest = numbers[i]\n        }\n    }\n\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n\
    \    }\n    let smallest = numbers[0]\n    let largest = numbers[0]\n    for number\
    \ in numbers {\n        if number < smallest {\n            smallest = number\n\
    \        }\n        if number > largest {\n            largest = number\n    \
    \    }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else {\n        return (0, 0)\n   \
    \ }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number\
    \ in numbers {\n        if number < smallest {\n            smallest = number\n\
    \        }\n        if number > largest {\n            largest = number\n    \
    \    }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    if numbers.count < 2 {\n        return numbers[0], numbers[0]\n\
    \    }\n\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for\
    \ number in numbers {\n        if number < smallest {\n            smallest =\
    \ number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n\n    return (smallest, largest)", "    guard numbers.count\
    \ >= 2 else {\n        return (0.0,0.0)\n    }\n    \n    let smallest = numbers[0]\n\
    \    let largest = numbers[0]\n    \n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    \n    return\
    \ (smallest, largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    guard numbers.count >\
    \ 1 else {\n        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n \
    \   var largest = numbers[0]\n    for i in 1..<numbers.count {\n        if numbers[i]\
    \ > largest {\n            largest = numbers[i]\n        }\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n        }\n    }\n    return\
    \ (smallest, largest)", "    if numbers.count < 2 {\n        return numbers[0],\
    \ numbers[0]\n    }\n\n    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        } else if number > largest {\n            largest = number\n\
    \        }\n    }\n\n    return (smallest, largest)", "    guard numbers.count\
    \ > 1 else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 2 else\
    \ { return (numbers[0], numbers[1]) }\n\n    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n        } else if numbers[i]\
    \ > largest {\n            largest = numbers[i]\n        }\n    }\n    return\
    \ (smallest, largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    guard numbers.count >=\
    \ 2 else { return (0.0, 0.0) }\n    guard numbers.count <= 4 else { return (0.0,\
    \ 0.0) }\n    guard numbers.count % 2 == 0 else { return (0.0, 0.0) }\n\n    var\
    \ smallest = numbers[0]\n    var largest = numbers[0]\n    for i in 1..numbers.count\
    \ {\n        if numbers[i] < smallest {\n            smallest = numbers[i]\n \
    \       } else if numbers[i] > largest {\n            largest = numbers[i]\n \
    \       }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else { return (0.0, 0.0) }\n    var\
    \ smallest = numbers[0]\n    var largest = numbers[0]\n    for number in numbers\
    \ {\n        if number < smallest {\n            smallest = number\n        }\n\
    \        if number > largest {\n            largest = number\n        }\n    }\n\
    \    return (smallest, largest)", "    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else {\n        return (0, 0)\n   \
    \ }\n    guard numbers.count <= 100 else {\n        return (0, 0)\n    }\n   \
    \ var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in numbers\
    \ {\n        if number < smallest {\n            smallest = number\n        }\n\
    \        if number > largest {\n            largest = number\n        }\n    }\n\
    \    return (smallest, largest)", "    guard numbers.count >= 2 else {\n     \
    \   fatalError(\"find_closest_elements: numbers must have at least two elements\"\
    )\n    }\n\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for\
    \ i in 1..numbers.count {\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i]\n        } else if numbers[i] > largest {\n            largest\
    \ = numbers[i]\n        }\n    }\n\n    return (smallest, largest)", "    if numbers.count\
    \ < 2 {\n        return numbers[0], numbers[0]\n    }\n\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 2 else { return (numbers[0], numbers[0]) }\n  \
    \  guard numbers.count > 3 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count > 4 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ > 5 else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 6 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count > 7 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count > 8 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count > 9 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 10 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count > 11 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count > 12 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ > 13 else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 14\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 15 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count > 16 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count > 17 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count > 18 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 19 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count > 20 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count > 21 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ > 22 else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 23\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count > 24 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count > 25 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count > 26 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count > 27 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 28 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count > 29 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count > 30 else { return (numbers[0], numbers[0]) }\n    guard numbers.",
  "    if numbers.count < 2 {\n        return numbers[0], numbers[0]\n    }\n\n  \
    \  var smallest = numbers[0]\n    var largest = numbers[0]\n    var smallest_index\
    \ = -1\n    var largest_index = -1\n\n    for i in 1..<numbers.count {\n     \
    \   if numbers[i] < smallest {\n            smallest = numbers[i]\n          \
    \  smallest_index = i\n        }\n\n        if numbers[i] > largest {\n      \
    \      largest = numbers[i]\n            largest_index = i\n        }\n    }\n\
    \n    return (smallest, largest)", "    if numbers.count < 2 {\n        return\
    \ numbers[0], numbers[0]\n    }\n    \n    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    \n    for number in numbers {\n        if number <\
    \ smallest {\n            smallest = number\n        }\n        if number > largest\
    \ {\n            largest = number\n        }\n    }\n    \n    return (smallest,\
    \ largest)", "    guard numbers.count > 1 else {\n        return (0.0,0.0)\n \
    \   }\n    let smallest = numbers[0]\n    let largest = numbers[0]\n    for i\
    \ in 1..<numbers.count {\n        let current = numbers[i]\n        if current\
    \ < smallest {\n            smallest = current\n        }\n        if current\
    \ > largest {\n            largest = current\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    guard numbers.count >=\
    \ 2 else { return (0.0, 0.0) }\n    guard numbers.count <= 10 else { return (0.0,\
    \ 0.0) }\n\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    var\
    \ smallest_index = -1\n    var largest_index = -1\n\n    for i in 1..<numbers.count\
    \ {\n        if numbers[i] < smallest {\n            smallest = numbers[i]\n \
    \           smallest_index = i\n        }\n        if numbers[i] > largest {\n\
    \            largest = numbers[i]\n            largest_index = i\n        }\n\
    \    }\n\n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ {\n        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    if numbers.count < 2 {\n        return numbers[0], numbers[0]\n    }\n    var\
    \ smallest = numbers[0]\n    var largest = numbers[0]\n    for number in numbers\
    \ {\n        if number < smallest {\n            smallest = number\n        }\n\
    \        if number > largest {\n            largest = number\n        }\n    }\n\
    \    return (smallest, largest)", "    guard numbers.count > 1 else {\n      \
    \  return numbers[0], numbers[0]\n    }\n    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    for number in numbers {\n        if number < smallest\
    \ {\n            smallest = number\n        }\n        if number > largest {\n\
    \            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else {\n        return (0, 0)\n    }\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for number in numbers {\n  \
    \      if number < smallest {\n            smallest = number\n        }\n    \
    \    if number > largest {\n            largest = number\n        }\n    }\n \
    \   return (smallest, largest)", "    guard numbers.count >= 2 else {\n      \
    \  return (0.0,0.0)\n    }\n    let smallest = numbers[0]\n    let largest = numbers[0]\n\
    \    for i in 1..<numbers.count {\n        if numbers[i] > largest {\n       \
    \     largest = numbers[i]\n        }\n        if numbers[i] < smallest {\n  \
    \          smallest = numbers[i]\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    guard numbers.count > 1 else\
    \ {\n        return (0.0,0.0)\n    }\n    let smallest = numbers[0]\n    let largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    guard numbers.count >=\
    \ 2 else {\n        return (0.0,0.0)\n    }\n\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    var smallest_index = -1\n    var largest_index\
    \ = -1\n\n    for i in 1..<numbers.count {\n        if numbers[i] < smallest {\n\
    \            smallest = numbers[i]\n            smallest_index = i\n        }\n\
    \        if numbers[i] > largest {\n            largest = numbers[i]\n       \
    \     largest_index = i\n        }\n    }\n\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       } else if number > largest {\n            largest = number\n        }\n\
    \    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n    var\
    \ largest = numbers[0]\n    for number in numbers {\n        if number < smallest\
    \ {\n            smallest = number\n        }\n        if number > largest {\n\
    \            largest = number\n        }\n    }\n    return (smallest, largest)",
  "    guard numbers.count >= 2 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 3 else { return (numbers[0], numbers[0]) }\n\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    var smallest_index = -1\n  \
    \  var largest_index = -1\n\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n            smallest_index\
    \ = i\n        }\n        if numbers[i] > largest {\n            largest = numbers[i]\n\
    \            largest_index = i\n        }\n    }\n\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ {\n        return (0, 0)\n    }\n\n    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for i in 1..numbers.count {\n        if numbers[i] < smallest\
    \ {\n            smallest = numbers[i]\n        }\n        if numbers[i] > largest\
    \ {\n            largest = numbers[i]\n        }\n    }\n\n    return (smallest,\
    \ largest)", "    if numbers.count < 2 {\n        return numbers[0], numbers[0]\n\
    \    }\n    \n    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  \n    for number in numbers {\n        if number < smallest {\n           \
    \ smallest = number\n        }\n        if number > largest {\n            largest\
    \ = number\n        }\n    }\n    \n    return (smallest, largest)", "    guard\
    \ numbers.count >= 2 else {\n        return (0.0,0.0)\n    }\n    \n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    \n    for i in 1..numbers.count\
    \ {\n        if numbers[i] < smallest {\n            smallest = numbers[i]\n \
    \       }\n        if numbers[i] > largest {\n            largest = numbers[i]\n\
    \        }\n    }\n    \n    return (smallest, largest)", "    var smallest =\
    \ numbers[0]\n    var largest = numbers[0]\n    for number in numbers {\n    \
    \    if number < smallest {\n            smallest = number\n        }\n      \
    \  if number > largest {\n            largest = number\n        }\n    }\n   \
    \ return (smallest, largest)", "    guard numbers.count >= 2 else { return (0.0,\
    \ 0.0) }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for\
    \ number in numbers {\n        if number < smallest {\n            smallest =\
    \ number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 3 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count >= 4 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 5 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 6 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 7\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 8 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 9 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 10 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 11 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 12 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 13 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 14 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 15 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 16\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 17 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 18 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 19 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 20 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 21 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 22 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 23 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 24 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 25\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 26 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 27 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 28 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 29 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 30 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 31 else { return (numbers[0], numbers[0]) }\n    guard ",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count > 1 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 2 else { return (numbers[0], numbers[1]) }\n  \
    \  guard numbers.count > 3 else { return (numbers[0], numbers[2]) }\n    guard\
    \ numbers.count > 4 else { return (numbers[0], numbers[3]) }\n    guard numbers.count\
    \ > 5 else { return (numbers[0], numbers[4]) }\n    guard numbers.count > 6 else\
    \ { return (numbers[0], numbers[5]) }\n    guard numbers.count > 7 else { return\
    \ (numbers[0], numbers[6]) }\n    guard numbers.count > 8 else { return (numbers[0],\
    \ numbers[7]) }\n    guard numbers.count > 9 else { return (numbers[0], numbers[8])\
    \ }\n    guard numbers.count > 10 else { return (numbers[0], numbers[9]) }\n \
    \   guard numbers.count > 11 else { return (numbers[0], numbers[10]) }\n    guard\
    \ numbers.count > 12 else { return (numbers[0], numbers[11]) }\n    guard numbers.count\
    \ > 13 else { return (numbers[0], numbers[12]) }\n    guard numbers.count > 14\
    \ else { return (numbers[0], numbers[13]) }\n    guard numbers.count > 15 else\
    \ { return (numbers[0], numbers[14]) }\n    guard numbers.count > 16 else { return\
    \ (numbers[0], numbers[15]) }\n    guard numbers.count > 17 else { return (numbers[0],\
    \ numbers[16]) }\n    guard numbers.count > 18 else { return (numbers[0], numbers[17])\
    \ }\n    guard numbers.count > 19 else { return (numbers[0], numbers[18]) }\n\
    \    guard numbers.count > 20 else { return (numbers[0], numbers[19]) }\n    guard\
    \ numbers.count > 21 else { return (numbers[0], numbers[20]) }\n    guard numbers.count\
    \ > 22 else { return (numbers[0], numbers[21]) }\n    guard numbers.count > 23\
    \ else { return (numbers[0], numbers[22]) }\n    guard numbers.count > 24 else\
    \ { return (numbers[0], numbers[23]) }\n    guard numbers.count > 25 else { return\
    \ (numbers[0], numbers[24]) }\n    guard numbers.count > 26 else { return (numbers[0],\
    \ numbers[25]) }\n    guard numbers.count > 27 else { return (numbers[0], numbers[26])\
    \ }\n    guard numbers.count > 28 else { return (numbers[0], numbers[27]) }\n\
    \    guard numbers.count > 29 else { return (numbers[0], number", "    guard numbers.count\
    \ >= 2 else { return (0.0, 0.0) }\n    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count > 1 else {\n        return (0.0,0.0)\n \
    \   }\n    \n    var smallest = numbers[0]\n    var largest = numbers[0]\n   \
    \ \n    for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    \n    return (smallest, largest)", "    var smallest =\
    \ numbers[0]\n    var largest = numbers[0]\n    for number in numbers {\n    \
    \    if number < smallest {\n            smallest = number\n        }\n      \
    \  if number > largest {\n            largest = number\n        }\n    }\n   \
    \ return (smallest, largest)", "    guard numbers.count >= 2 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 3 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 4 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count >= 5 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 6 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 7 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 8\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 9 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 10 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 11 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 12 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 13 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 14 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 15 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 16 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 17\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 18 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 19 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 20 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 21 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 22 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 23 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 24 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 25 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 26\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 27 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 28 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 29 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 30 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 31 else { return (numbers[0], numbers[0]) }\n\
    \    guard ", "    var smallest = numbers[0]\n    var largest = numbers[0]\n \
    \   for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    if numbers.count < 2\
    \ {\n        return numbers[0], numbers[0]\n    }\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    if numbers.count < 2 {\n        return (0.0,0.0)\n    }\n  \
    \  \n    var smallest = numbers[0]\n    var largest = numbers[0]\n    \n    for\
    \ i in 1..numbers.count {\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i]\n        }\n        if numbers[i] > largest {\n            largest\
    \ = numbers[i]\n        }\n    }\n    \n    return (smallest, largest)", "   \
    \ let smallest = numbers[0]\n    let largest = numbers[0]\n    for number in numbers\
    \ {\n        if number < smallest {\n            smallest = number\n        }\n\
    \        if number > largest {\n            largest = number\n        }\n    }\n\
    \    return (smallest, largest)", "    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 3 else { return\
    \ (numbers[0], numbers[0]) }\n\n    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        } else if number > largest {\n       \
    \     largest = number\n        }\n    }\n    return (smallest, largest)", " \
    \   var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    if numbers.count < 2 {\n \
    \       return numbers[0], numbers[0]\n    }\n\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    var smallestIndex = -1\n    var largestIndex\
    \ = -1\n\n    for index in 1..numbers.count {\n        if numbers[index] < smallest\
    \ {\n            smallest = numbers[index]\n            smallestIndex = index\n\
    \        }\n        if numbers[index] > largest {\n            largest = numbers[index]\n\
    \            largestIndex = index\n        }\n    }\n\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else { return (numbers[0], numbers[0])\
    \ }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for i in\
    \ 1..numbers.count {\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i]\n        } else if numbers[i] > largest {\n            largest\
    \ = numbers[i]\n        }\n    }\n    return (smallest, largest)", "    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for number in numbers {\n  \
    \      if number < smallest {\n            smallest = number\n        }\n    \
    \    if number > largest {\n            largest = number\n        }\n    }\n \
    \   return (smallest, largest)", "    guard numbers.count >= 2 else { return (0.0,\
    \ 0.0) }\n\n    var smallest = numbers[0]\n    var largest = numbers[0]\n    for\
    \ i in 1..numbers.count {\n        if numbers[i] > largest {\n            largest\
    \ = numbers[i]\n        }\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i]\n        }\n    }\n    return (smallest, largest)", "    guard\
    \ numbers.count >= 2 else {\n        return (0.0,0.0)\n    }\n    guard numbers.count\
    \ > 1 else {\n        return (0.0,0.0)\n    }\n    let smallest = numbers[0]\n\
    \    let largest = numbers[0]\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ > largest {\n            largest = numbers[i]\n        }\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i]\n        }\n    }\n    return\
    \ (smallest, largest)", "    guard numbers.count >= 2 else {\n        return (0.0,0.0)\n\
    \    }\n    let smallest = numbers[0]\n    let largest = numbers[0]\n    for i\
    \ in 1..<numbers.count {\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i]\n        }\n        if numbers[i] > largest {\n            largest\
    \ = numbers[i]\n        }\n    }\n    return (smallest, largest)", "    guard\
    \ numbers.count >= 2 else { return (numbers[0], numbers[0]) }\n    var smallest\
    \ = numbers[0]\n    var largest = numbers[0]\n    for i in 1..numbers.count {\n\
    \        if numbers[i] < smallest {\n            smallest = numbers[i]\n     \
    \   } else if numbers[i] > largest {\n            largest = numbers[i]\n     \
    \   }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ {\n        return (0.0,0.0)\n    }\n    let smallest = numbers[0]\n    let largest\
    \ = numbers[0]\n    for i in 1..<numbers.count {\n        if numbers[i] < smallest\
    \ {\n            smallest = numbers[i]\n        }\n        if numbers[i] > largest\
    \ {\n            largest = numbers[i]\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else { return (0.0, 0.0) }\n    guard\
    \ numbers.count <= 4 else { return (0.0, 0.0) }\n\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    var smallest_index = -1\n    var largest_index\
    \ = -1\n\n    for i in 1..numbers.count {\n        if numbers[i] < smallest {\n\
    \            smallest = numbers[i]\n            smallest_index = i\n        }\n\
    \        if numbers[i] > largest {\n            largest = numbers[i]\n       \
    \     largest_index = i\n        }\n    }\n\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    if numbers.count < 2 {\n \
    \       return numbers[0], numbers[0]\n    }\n\n    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n\n    return (smallest,\
    \ largest)", "    guard numbers.count > 1 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count > 2 else { return (numbers[0], numbers[1]) }\n  \
    \  guard numbers.count > 3 else { return (numbers[0], numbers[2]) }\n    guard\
    \ numbers.count > 4 else { return (numbers[0], numbers[3]) }\n    guard numbers.count\
    \ > 5 else { return (numbers[0], numbers[4]) }\n    guard numbers.count > 6 else\
    \ { return (numbers[0], numbers[5]) }\n    guard numbers.count > 7 else { return\
    \ (numbers[0], numbers[6]) }\n    guard numbers.count > 8 else { return (numbers[0],\
    \ numbers[7]) }\n    guard numbers.count > 9 else { return (numbers[0], numbers[8])\
    \ }\n    guard numbers.count > 10 else { return (numbers[0], numbers[9]) }\n \
    \   guard numbers.count > 11 else { return (numbers[0], numbers[10]) }\n    guard\
    \ numbers.count > 12 else { return (numbers[0], numbers[11]) }\n    guard numbers.count\
    \ > 13 else { return (numbers[0], numbers[12]) }\n    guard numbers.count > 14\
    \ else { return (numbers[0], numbers[13]) }\n    guard numbers.count > 15 else\
    \ { return (numbers[0], numbers[14]) }\n    guard numbers.count > 16 else { return\
    \ (numbers[0], numbers[15]) }\n    guard numbers.count > 17 else { return (numbers[0],\
    \ numbers[16]) }\n    guard numbers.count > 18 else { return (numbers[0], numbers[17])\
    \ }\n    guard numbers.count > 19 else { return (numbers[0], numbers[18]) }\n\
    \    guard numbers.count > 20 else { return (numbers[0], numbers[19]) }\n    guard\
    \ numbers.count > 21 else { return (numbers[0], numbers[20]) }\n    guard numbers.count\
    \ > 22 ? { return (numbers[0], numbers[21]) }\n    guard numbers.count > 23 ?\
    \ { return (numbers[0], numbers[22]) }\n    guard numbers.count > 24 ? { return\
    \ (numbers[0], numbers[23]) }\n    guard numbers.count > 25 ? { return (numbers[0],\
    \ numbers[24]) }\n    guard numbers.count > 26 ? { return (numbers[0], numbers[25])\
    \ }\n    guard numbers.count > 27 ? { return (numbers[0], numbers[26]) }\n   \
    \ guard numbers.count > 28 ? { return (numbers[0], numbers[27]) }\n    guard numbers.count\
    \ > 29 ? { return (numbers[0], number", "    guard numbers.count >= 2 else {\n\
    \        return (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var largest\
    \ = numbers[0]\n    for number in numbers {\n        if number < smallest {\n\
    \            smallest = number\n        }\n        if number > largest {\n   \
    \         largest = number\n        }\n    }\n    return (smallest, largest)",
  "    var smallest = numbers[0]\n    var largest = numbers[0]\n    for number in\
    \ numbers {\n        if number < smallest {\n            smallest = number\n \
    \       }\n        if number > largest {\n            largest = number\n     \
    \   }\n    }\n    return (smallest, largest)", "    guard numbers.count >= 2 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 3 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 4 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 5 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 6 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count >= 7 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 8 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 9 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 10\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 11 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 12 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 13 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 14 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 15 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 16 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 17 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 18 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 19\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 20 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 21 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 22 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 23 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 24 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 25 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 26 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 27 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 28\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 29 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 30 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 31 else { return (numbers[0],\
    \ numbers[0]) }\n    guard ", "    guard numbers.count >= 2 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 3 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 4 else { return (numbers[0], numbers[0]) }\n \
    \   guard numbers.count >= 5 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 6 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 7 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 8\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 9 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 10 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 11 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 12 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 13 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 14 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 15 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 16 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 17\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 18 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 19 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 20 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 21 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 22 else { return (numbers[0], numbers[0]) }\n\
    \    guard numbers.count >= 23 else { return (numbers[0], numbers[0]) }\n    guard\
    \ numbers.count >= 24 else { return (numbers[0], numbers[0]) }\n    guard numbers.count\
    \ >= 25 else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 26\
    \ else { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 27 else\
    \ { return (numbers[0], numbers[0]) }\n    guard numbers.count >= 28 else { return\
    \ (numbers[0], numbers[0]) }\n    guard numbers.count >= 29 else { return (numbers[0],\
    \ numbers[0]) }\n    guard numbers.count >= 30 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 31 else { return (numbers[0], numbers[0]) }\n\
    \    guard ", "    var smallest = numbers[0]\n    var largest = numbers[0]\n \
    \   for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    let smallest = numbers[0]\n    let largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    var smallest = numbers[0]\n    var largest = numbers[0]\n  \
    \  for number in numbers {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    var smallest = numbers[0]\n\
    \    var largest = numbers[0]\n    for number in numbers {\n        if number\
    \ < smallest {\n            smallest = number\n        }\n        if number >\
    \ largest {\n            largest = number\n        }\n    }\n    return (smallest,\
    \ largest)", "    guard numbers.count >= 2 else { return (numbers[0], numbers[0])\
    \ }\n    guard numbers.count >= 3 else { return (numbers[0], numbers[0]) }\n\n\
    \    var smallest = numbers[0]\n    var largest = numbers[0]\n    var smallest_index\
    \ = -1\n    var largest_index = -1\n\n    for i in 1..numbers.count {\n      \
    \  if numbers[i] < smallest {\n            smallest = numbers[i]\n           \
    \ smallest_index = i\n        }\n        if numbers[i] > largest {\n         \
    \   largest = numbers[i]\n            largest_index = i\n        }\n    }\n\n\
    \    return (smallest, largest)", "    guard numbers.count > 1 else {\n      \
    \  return (0.0,0.0)\n    }\n    guard numbers.count >= 2 else {\n        return\
    \ (0.0,0.0)\n    }\n    var smallest = numbers[0]\n    var largest = numbers[0]\n\
    \    for i in 1..numbers.count {\n        if numbers[i] < smallest {\n       \
    \     smallest = numbers[i]\n        }\n        if numbers[i] > largest {\n  \
    \          largest = numbers[i]\n        }\n    }\n    return (smallest, largest)"]
stop_tokens:
- "\n}"
